<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T02:29:34Z</updated>
  <subtitle>Monthly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PaddlePaddle/PaddleOCR</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/PaddlePaddle/PaddleOCR</id>
    <link href="https://github.com/PaddlePaddle/PaddleOCR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Awesome multilingual OCR toolkits based on PaddlePaddle (practical ultra lightweight OCR system, support 80+ languages recognition, provide data annotation and synthesis tools, support training and deployment among server, mobile, embedded and IoT devices)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/README_ch.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/PaddleOCR_log.png&#34; align=&#34;middle&#34; width=&#34;600&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-dfd.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/PaddlePaddle/PaddleOCR?color=ffa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.7+-aff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-pink.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/format/PaddleOCR?color=c77&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/PaddleOCR/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/PaddleOCR?color=9cf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PaddlePaddle/PaddleOCR?color=ccf&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;PaddleOCR aims to create multilingual, awesome, leading, and practical OCR tools that help users train better models and apply them into practice.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/en/en_4.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/ch_ppocr_mobile_v2.0/00006737.jpg&#34; width=&#34;800&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Recent updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üî•2022.5.9 Release PaddleOCR &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.5&#34;&gt;release/2.5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Release &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ppocr_introduction_en.md#pp-ocrv3&#34;&gt;PP-OCRv3&lt;/a&gt;: With comparable speed, the effect of Chinese scene is further improved by 5% compared with PP-OCRv2, the effect of English scene is improved by 11%, and the average recognition accuracy of 80 language multilingual models is improved by more than 5%.&lt;/li&gt; &#xA;   &lt;li&gt;Release &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/PPOCRLabel&#34;&gt;PPOCRLabelv2&lt;/a&gt;: Add the annotation function for table recognition task, key information extraction task and irregular text image.&lt;/li&gt; &#xA;   &lt;li&gt;Release interactive e-book &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ocr_book_en.md&#34;&gt;&lt;em&gt;&#34;Dive into OCR&#34;&lt;/em&gt;&lt;/a&gt;, covers the cutting-edge theory and code practice of OCR full stack technology.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.12.21 Release PaddleOCR &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.4&#34;&gt;release/2.4&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Release 1 text detection algorithm (&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_det_psenet_en.md&#34;&gt;PSENet&lt;/a&gt;), 3 text recognition algorithms (&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_rec_nrtr_en.md&#34;&gt;NRTR&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_rec_seed_en.md&#34;&gt;SEED&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_rec_nrtr_en.md&#34;&gt;SAR&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Release 1 key information extraction algorithm &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/kie_en.md&#34;&gt;SDMGR&lt;/a&gt; and 3 &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/vqa&#34;&gt;DocVQA&lt;/a&gt; algorithms (LayoutLM, LayoutLMv2, LayoutXLM).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.9.7 Release PaddleOCR &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.3&#34;&gt;release/2.3&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Release &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ppocr_introduction_en.md#pp-ocrv2&#34;&gt;PP-OCRv2&lt;/a&gt;. The inference speed of PP-OCRv2 is 220% higher than that of PP-OCR server in CPU device. The F-score of PP-OCRv2 is 7% higher than that of PP-OCR mobile.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.8.3 Release PaddleOCR &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.2&#34;&gt;release/2.2&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Release a new structured documents analysis toolkit, i.e., &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/README.md&#34;&gt;PP-Structure&lt;/a&gt;, support layout analysis and table recognition (One-key to export chart images to Excel files).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/update_en.md&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;PaddleOCR support a variety of cutting-edge algorithms related to OCR, and developed industrial featured models/solution &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ppocr_introduction_en.md&#34;&gt;PP-OCR&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/README.md&#34;&gt;PP-Structure&lt;/a&gt; on this basis, and get through the whole process of data production, model training, compression, inference and deployment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/features_en.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is recommended to start with the ‚Äúquick experience‚Äù in the document tutorial&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Quick Experience&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web online experience for the ultra-lightweight OCR: &lt;a href=&#34;https://www.paddlepaddle.org.cn/hub/scene/ocr&#34;&gt;Online Experience&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mobile DEMO experience (based on EasyEdge and Paddle-Lite, supports iOS and Android systems): &lt;a href=&#34;https://ai.baidu.com/easyedge/app/openSource?from=paddlelite&#34;&gt;Sign in to the website to obtain the QR code for installing the App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;One line of code quick use: &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/quickstart_en.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;book&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;E-book: &lt;em&gt;Dive Into OCR&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ocr_book_en.md&#34;&gt;Dive Into OCR üìö&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Join us&lt;/strong&gt;üë¨: Scan the QR code below with your Wechat, you can join the official technical discussion group. Looking forward to your participation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/dygraph/doc/joinus.PNG&#34; width=&#34;200&#34; height=&#34;200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;a name=&#34;Supported-Chinese-model-list&#34;&gt;&lt;/a&gt; &#xA;&lt;h2&gt;PP-OCR Series Model ListÔºàUpdate on September 8thÔºâ&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model introduction&lt;/th&gt; &#xA;   &lt;th&gt;Model name&lt;/th&gt; &#xA;   &lt;th&gt;Recommended scene&lt;/th&gt; &#xA;   &lt;th&gt;Detection model&lt;/th&gt; &#xA;   &lt;th&gt;Direction classifier&lt;/th&gt; &#xA;   &lt;th&gt;Recognition model&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese and English ultra-lightweight PP-OCRv3 modelÔºà16.2MÔºâ&lt;/td&gt; &#xA;   &lt;td&gt;ch_PP-OCRv3_xx&lt;/td&gt; &#xA;   &lt;td&gt;Mobile &amp;amp; Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/chinese/ch_PP-OCRv3_det_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/chinese/ch_PP-OCRv3_det_distill_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/chinese/ch_PP-OCRv3_rec_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/chinese/ch_PP-OCRv3_rec_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English ultra-lightweight PP-OCRv3 modelÔºà13.4MÔºâ&lt;/td&gt; &#xA;   &lt;td&gt;en_PP-OCRv3_xx&lt;/td&gt; &#xA;   &lt;td&gt;Mobile &amp;amp; Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_det_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_det_distill_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_rec_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_rec_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese and English ultra-lightweight PP-OCRv2 modelÔºà11.6MÔºâ&lt;/td&gt; &#xA;   &lt;td&gt;ch_PP-OCRv2_xx&lt;/td&gt; &#xA;   &lt;td&gt;Mobile &amp;amp; Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv2/chinese/ch_PP-OCRv2_det_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv2/chinese/ch_PP-OCRv2_det_distill_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv2/chinese/ch_PP-OCRv2_rec_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/PP-OCRv2/chinese/ch_PP-OCRv2_rec_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese and English ultra-lightweight PP-OCR model (9.4M)&lt;/td&gt; &#xA;   &lt;td&gt;ch_ppocr_mobile_v2.0_xx&lt;/td&gt; &#xA;   &lt;td&gt;Mobile &amp;amp; server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_det_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_det_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_rec_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_rec_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese and English general PP-OCR model (143.4M)&lt;/td&gt; &#xA;   &lt;td&gt;ch_ppocr_server_v2.0_xx&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_server_v2.0_det_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_server_v2.0_det_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_server_v2.0_rec_infer.tar&#34;&gt;inference model&lt;/a&gt; / &lt;a href=&#34;https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_server_v2.0_rec_train.tar&#34;&gt;trained model&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For more model downloads (including multiple languages), please refer to &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/models_list_en.md&#34;&gt;PP-OCR series model downloads&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For a new language request, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/#language_requests&#34;&gt;Guideline for new language_requests&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For structural document analysis models, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/models_list_en.md&#34;&gt;PP-Structure models&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/environment_en.md&#34;&gt;Environment Preparation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/ppocr_introduction_en.md&#34;&gt;PP-OCR üî•&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/quickstart_en.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/models_en.md&#34;&gt;Model Zoo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/training_en.md&#34;&gt;Model training&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/detection_en.md&#34;&gt;Text Detection&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/recognition_en.md&#34;&gt;Text Recognition&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/angle_class_en.md&#34;&gt;Text Direction Classification&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Model Compression &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/slim/quantization/README_en.md&#34;&gt;Model Quantization&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/slim/prune/README_en.md&#34;&gt;Model Pruning&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/knowledge_distillation_en.md&#34;&gt;Knowledge Distillation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/README.md&#34;&gt;Inference and Deployment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/inference_ppocr_en.md&#34;&gt;Python Inference&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/cpp_infer/readme.md&#34;&gt;C++ Inference&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/pdserving/README.md&#34;&gt;Serving&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/lite/readme.md&#34;&gt;Mobile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/paddle2onnx/readme.md&#34;&gt;Paddle2ONNX&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/paddlecloud/README.md&#34;&gt;PaddleCloud&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/benchmark_en.md&#34;&gt;Benchmark&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/README.md&#34;&gt;PP-Structure üî•&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/quickstart_en.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/models_list_en.md&#34;&gt;Model Zoo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/training_en.md&#34;&gt;Model training&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/layout/README.md&#34;&gt;Layout Parser&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/table/README.md&#34;&gt;Table Recognition&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/vqa/README.md&#34;&gt;DocVQA&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/kie_en.md&#34;&gt;Key Information Extraction&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/README.md&#34;&gt;Inference and Deployment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/inference_en.md&#34;&gt;Python Inference&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;C++ Inference&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/deploy/pdserving/README.md&#34;&gt;Serving&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithms_en.md&#34;&gt;Academic algorithms&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_overview_en.md&#34;&gt;Text detection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_overview_en.md&#34;&gt;Text recognition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/algorithm_overview_en.md&#34;&gt;End-to-end&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/add_new_algorithm_en.md&#34;&gt;Add New Algorithms to PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data Annotation and Synthesis &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/PPOCRLabel/README.md&#34;&gt;Semi-automatic Annotation Tool: PPOCRLabel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/StyleText/README.md&#34;&gt;Data Synthesis Tool: Style-Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/data_annotation_en.md&#34;&gt;Other Data Annotation Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/data_synthesis_en.md&#34;&gt;Other Data Synthesis Tools&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Datasets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/datasets_en.md&#34;&gt;General OCR Datasets(Chinese/English)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/handwritten_datasets_en.md&#34;&gt;HandWritten_OCR_Datasets(Chinese)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/vertical_and_multilingual_datasets_en.md&#34;&gt;Various OCR Datasets(multilingual)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/layout_datasets_en.md&#34;&gt;layout analysis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/table_datasets_en.md&#34;&gt;table recognition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/dataset/docvqa_datasets_en.md&#34;&gt;DocVQA&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/tree_en.md&#34;&gt;Code Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/#Visualization&#34;&gt;Visualization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/#language_requests&#34;&gt;New language requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/FAQ_en.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/reference_en.md&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/#LICENSE&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Visualization&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visualization &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/doc_en/visualization_en.md&#34;&gt;more&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;PP-OCRv3 Chinese model&lt;/summary&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/ch/PP-OCRv3-pic001.jpg&#34; width=&#34;800&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/ch/PP-OCRv3-pic002.jpg&#34; width=&#34;800&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/ch/PP-OCRv3-pic003.jpg&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;PP-OCRv3 English model&lt;/summary&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/en/en_1.png&#34; width=&#34;800&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/en/en_2.png&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;PP-OCRv3 Multilingual model&lt;/summary&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/multi_lang/japan_2.jpg&#34; width=&#34;800&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/doc/imgs_results/PP-OCRv3/multi_lang/korean_1.jpg&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;PP-Structure&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;layout analysis + table recognition&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/table/ppstructure.GIF&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;SER (Semantic entity recognition)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/vqa/result_ser/zh_val_0_ser.jpg&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;RE (Relation Extraction)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppstructure/docs/vqa/result_re/zh_val_21_re.jpg&#34; width=&#34;800&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a name=&#34;language_requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Guideline for New Language Requests&lt;/h2&gt; &#xA;&lt;p&gt;If you want to request a new language support, a PR with 1 following files are neededÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In folder &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/release/2.5/ppocr/utils/dict&#34;&gt;ppocr/utils/dict&lt;/a&gt;, it is necessary to submit the dict text to this path and name it with &lt;code&gt;{language}_dict.txt&lt;/code&gt; that contains a list of all characters. Please see the format example from other files in that folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If your language has unique elements, please tell me in advance within any way, such as useful links, wikipedia and so on.&lt;/p&gt; &#xA;&lt;p&gt;More details, please refer to &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/issues/1048&#34;&gt;Multilingual OCR Development Plan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0xAX/linux-insides</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/0xAX/linux-insides</id>
    <link href="https://github.com/0xAX/linux-insides" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A little bit about a linux kernel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;linux-insides&lt;/h1&gt; &#xA;&lt;p&gt;A book-in-progress about the linux kernel and its insides.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The goal is simple&lt;/strong&gt; - to share my modest knowledge about the insides of the linux kernel and help people who are interested in linux kernel insides, and other low-level subject matter. Feel free to go through the book &lt;a href=&#34;https://github.com/0xAX/linux-insides/raw/master/SUMMARY.md&#34;&gt;Start here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Questions/Suggestions&lt;/strong&gt;: Feel free about any questions or suggestions by pinging me at twitter &lt;a href=&#34;https://twitter.com/0xAX&#34;&gt;@0xAX&lt;/a&gt;, adding an &lt;a href=&#34;https://github.com/0xAX/linux-insides/issues/new&#34;&gt;issue&lt;/a&gt; or just drop me an &lt;a href=&#34;mailto:anotherworldofworld@gmail.com&#34;&gt;email&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Mailing List&lt;/h1&gt; &#xA;&lt;p&gt;We have a Google Group mailing list for learning the kernel source code. Here are some instructions about how to use it.&lt;/p&gt; &#xA;&lt;h4&gt;Join&lt;/h4&gt; &#xA;&lt;p&gt;Send an email with any subject/content to &lt;code&gt;kernelhacking+subscribe@googlegroups.com&lt;/code&gt;. Then you will receive a confirmation email. Reply it with any content and then you are done.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you have Google account, you can also open the &lt;a href=&#34;https://groups.google.com/forum/#!forum/kernelhacking&#34;&gt;archive page&lt;/a&gt; and click &lt;strong&gt;Apply to join group&lt;/strong&gt;. You will be approved automatically.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Send emails to mailing list&lt;/h4&gt; &#xA;&lt;p&gt;Just send emails to &lt;code&gt;kernelhacking@googlegroups.com&lt;/code&gt;. The basic usage is the same as other mailing lists powered by mailman.&lt;/p&gt; &#xA;&lt;h4&gt;Archives&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/kernelhacking&#34;&gt;https://groups.google.com/forum/#!forum/kernelhacking&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt; If you like &lt;code&gt;linux-insides&lt;/code&gt; you can support me with:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.coinbase.com/checkouts/0bfa452a41cf52c0b3f99500b4f31685&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-bitcoin-green.svg?sanitize=true&#34; alt=&#34;Support with bitcoin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/0xAX/linux-insides?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/0xAX/linux-insides.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/0xAX/linux-insides&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;On other languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mauri870/linux-insides&#34;&gt;Brazilian Portuguese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MintCN/linux-insides-zh&#34;&gt;Chinese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tkmru/linux-insides-ja&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junsooo/linux-insides-ko&#34;&gt;Korean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/proninyaroslav/linux-insides-ru&#34;&gt;Russian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leolas95/linux-insides&#34;&gt;Spanish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ayyucedemirbas/linux-insides_Turkish&#34;&gt;Turkish&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;In order to run your own copy of the book with gitbook within a local container:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable Docker experimental features with vim or another text editor&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; sudo vim /usr/lib/systemd/system/docker.service&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then add --experimental=true to the end of the ExecStart=/usr/bin/dockerd -H fd:// line and save.&lt;/p&gt; &lt;p&gt;Eg: &lt;em&gt;ExecStart=/usr/bin/dockerd -H fd:// --experimental=true&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Then, you need to reload and restart the Docker daemon:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; systemctl daemon-reload&#xA; systemctl restart docker.service&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build container image&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker image build \&#xA;    --rm --squash \&#xA;    --label linux-insides \&#xA;    --tag linux-insides-book:latest \&#xA;    -f Dockerfile .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create and run book in local container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run \&#xA;    --detach \&#xA;    --rm \&#xA;    -p 4000:4000 \&#xA;    --name linux-insides-book \&#xA;    --hostname linux-insides-book \&#xA;    linux-insides-book&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your local copy of linux insides book under this url &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to create issues or pull-requests if you have any problems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please read &lt;a href=&#34;https://github.com/0xAX/linux-insides/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; before pushing any changes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0xAX/linux-insides/master/Assets/linux-kernel.png&#34; alt=&#34;linux-kernel&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/0xAX&#34;&gt;@0xAX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Licensed &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;BY-NC-SA Creative Commons&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Vonng/ddia</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/Vonng/ddia</id>
    <link href="https://github.com/Vonng/ddia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;„ÄäDesigning Data-Intensive Application„ÄãDDIA‰∏≠ÊñáÁøªËØë&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ËÆæËÆ°Êï∞ÊçÆÂØÜÈõÜÂûãÂ∫îÁî® - ‰∏≠ÊñáÁøªËØë&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‰ΩúËÄÖÔºö &lt;a href=&#34;https://martin.kleppmann.com&#34;&gt;Martin Kleppmann&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÂéüÂêçÔºö&lt;a href=&#34;http://shop.oreilly.com/product/0636920032175.do&#34;&gt;„ÄäDesigning Data-Intensive Applications„Äã&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ËØëËÄÖÔºö&lt;a href=&#34;https://vonng.com&#34;&gt;ÂÜØËã•Ëà™&lt;/a&gt; Ôºà&lt;a href=&#34;https://vonng.com/en/&#34;&gt;@Vonng&lt;/a&gt;Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;Ê†°ËÆ¢Ôºö &lt;a href=&#34;https://github.com/yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÁπÅ‰ΩìÔºö&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/zh-tw/README.md&#34;&gt;ÁπÅÈ´î‰∏≠ÊñáÁâàÊú¨&lt;/a&gt; by &lt;a href=&#34;https://github.com/afunTW&#34;&gt;@afunTW&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‰ΩøÁî® &lt;a href=&#34;https://www.typora.io&#34;&gt;Typora&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://vonng.gitbook.io/vonng/&#34;&gt;Gitbook&lt;/a&gt; Êàñ &lt;a href=&#34;https://vonng.github.io/ddia&#34;&gt;Github Pages&lt;/a&gt; ‰ª•Ëé∑ÂèñÊúÄ‰Ω≥ÈòÖËØª‰ΩìÈ™å„ÄÇ&lt;/p&gt; &#xA; &lt;p&gt;Êú¨Âú∞Ôºö‰Ω†ÂèØÂú®È°πÁõÆÊ†πÁõÆÂΩï‰∏≠ÊâßË°å &lt;code&gt;make&lt;/code&gt;ÔºåÂπ∂ÈÄöËøáÊµèËßàÂô®ÈòÖËØªÔºà&lt;a href=&#34;http://ddia.vonng.com/#/&#34;&gt;Âú®Á∫øÈ¢ÑËßà&lt;/a&gt;Ôºâ„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;ËØëÂ∫è&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‰∏çÊáÇÊï∞ÊçÆÂ∫ìÁöÑÂÖ®Ê†àÂ∑•Á®ãÂ∏à‰∏çÊòØÂ•ΩÊû∂ÊûÑÂ∏à&lt;/p&gt; &#xA; &lt;p&gt;‚Äî‚Äî Vonng&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Áé∞‰ªäÔºåÂ∞§ÂÖ∂ÊòØÂú®‰∫íËÅîÁΩëÈ¢ÜÂüüÔºåÂ§ßÂ§öÊï∞Â∫îÁî®ÈÉΩÂ±û‰∫éÊï∞ÊçÆÂØÜÈõÜÂûãÂ∫îÁî®„ÄÇÊú¨‰π¶‰ªéÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÂà∞È°∂Â±ÇÊû∂ÊûÑËÆæËÆ°ÔºåÂ∞ÜÊï∞ÊçÆÁ≥ªÁªüËÆæËÆ°‰∏≠ÁöÑÁ≤æÈ´ìÂ®ìÂ®ìÈÅìÊù•„ÄÇÂÖ∂‰∏≠ÁöÑÂÆùË¥µÁªèÈ™åÊó†ËÆ∫ÊòØÂØπÊû∂ÊûÑÂ∏à„ÄÅDBA„ÄÅËøòÊòØÂêéÁ´ØÂ∑•Á®ãÂ∏à„ÄÅÁîöËá≥‰∫ßÂìÅÁªèÁêÜÈÉΩ‰ºöÊúâÂ∏ÆÂä©„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËøôÊòØ‰∏ÄÊú¨ÁêÜËÆ∫ÁªìÂêàÂÆûË∑µÁöÑ‰π¶Ôºå‰π¶‰∏≠ÂæàÂ§öÈóÆÈ¢òÔºåËØëËÄÖÂú®ÂÆûÈôÖÂú∫ÊôØ‰∏≠ÈÉΩÊõæÈÅáÂà∞ËøáÔºåËØªÊù•ËÆ©‰∫∫ÂáªËäÇÊâºËÖï„ÄÇÂ¶ÇÊûúËÉΩÊó©ÁÇπËØªÂà∞ËøôÊú¨‰π¶ÔºåËØ•Â∞ëËµ∞Â§öÂ∞ëÂºØË∑ØÂïäÔºÅ&lt;/p&gt; &#xA;&lt;p&gt;Ëøô‰πüÊòØ‰∏ÄÊú¨Ê∑±ÂÖ•ÊµÖÂá∫ÁöÑ‰π¶ÔºåËÆ≤Ëø∞Ê¶ÇÂøµÁöÑÊù•ÈæôÂéªËÑâËÄå‰∏çÊòØÂçñÂºÑÂÆö‰πâÔºå‰ªãÁªç‰∫ãÁâ©ÂèëÂ±ïÊºîÂåñÂéÜÁ®ãËÄå‰∏çÊòØ‰∫ãÂÆûÂ†ÜÁ†åÔºåÂ∞ÜÂ§çÊùÇÁöÑÊ¶ÇÂøµËÆ≤Ëø∞ÁöÑÊµÖÊòæÊòìÊáÇÔºå‰ΩÜÂèàÁõ¥ÂáªÊú¨Ë¥®‰∏çÂ§±Ê∑±Â∫¶„ÄÇÊØèÁ´†ÊúÄÂêéÁöÑÂºïÁî®Ë¥®ÈáèÈùûÂ∏∏Â•ΩÔºåÊòØÊ∑±ÂÖ•Â≠¶‰π†ÂêÑ‰∏™‰∏ªÈ¢òÁöÑÁªù‰Ω≥Á¥¢Âºï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨‰π¶‰∏∫Êï∞ÊçÆÁ≥ªÁªüÁöÑËÆæËÆ°„ÄÅÂÆûÁé∞„ÄÅ‰∏éËØÑ‰ª∑Êèê‰æõ‰∫ÜÂæàÂ•ΩÁöÑÊ¶ÇÂøµÊ°ÜÊû∂„ÄÇËØªÂÆåÂπ∂ÁêÜËß£Êú¨‰π¶ÂÜÖÂÆπÂêéÔºåËØªËÄÖÂèØ‰ª•ËΩªÊùæÁúãÁ†¥Â§ßÂ§öÊï∞ÁöÑÊäÄÊúØÂøΩÊÇ†Ôºå‰∏éÊäÄÊúØÁ†ñÂÆ∂ÊíïËµ∑Êù•ËôéËôéÁîüÈ£éü§£„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËøôÊòØ 2017 Âπ¥ËØëËÄÖËØªËøáÊúÄÂ•ΩÁöÑ‰∏ÄÊú¨ÊäÄÊúØÁ±ª‰π¶Á±çÔºåËøô‰πàÂ•ΩÁöÑ‰π¶Ê≤°Êúâ‰∏≠ÊñáÁøªËØëÔºåÂÆûÂú®ÊòØÈÅóÊÜæ„ÄÇÊüê‰∏çÊâçÔºåÊÑø‰∏∫ÂÖàËøõÊäÄÊúØÊñáÂåñÁöÑ‰º†Êí≠Ë¥°ÁåÆ‰∏Ä‰ªΩÂäõÈáè„ÄÇÊó¢ÂèØ‰ª•Ê∑±ÂÖ•Â≠¶‰π†ÊúâË∂£ÁöÑÊäÄÊúØ‰∏ªÈ¢òÔºåÂèàÂèØ‰ª•ÈîªÁÇº‰∏≠Ëã±ÊñáËØ≠Ë®ÄÊñáÂ≠óÂäüÂ∫ïÔºå‰Ωï‰πêËÄå‰∏ç‰∏∫Ôºü&lt;/p&gt; &#xA;&lt;h2&gt;ÂâçË®Ä&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Âú®Êàë‰ª¨ÁöÑÁ§æ‰ºö‰∏≠ÔºåÊäÄÊúØÊòØ‰∏ÄÁßçÂº∫Â§ßÁöÑÂäõÈáè„ÄÇÊï∞ÊçÆ„ÄÅËΩØ‰ª∂„ÄÅÈÄö‰ø°ÂèØ‰ª•Áî®‰∫éÂùèÁöÑÊñπÈù¢Ôºö‰∏çÂÖ¨Âπ≥ÁöÑÈò∂Á∫ßÂõ∫ÂåñÔºåÊçüÂÆ≥ÂÖ¨Ê∞ëÊùÉÂà©Ôºå‰øùÊä§Êó¢ÂæóÂà©ÁõäÈõÜÂõ¢„ÄÇ‰ΩÜ‰πüÂèØ‰ª•Áî®‰∫éÂ•ΩÁöÑÊñπÈù¢ÔºöËÆ©Â∫ïÂ±Ç‰∫∫Ê∞ëÂèëÂá∫Ëá™Â∑±ÁöÑÂ£∞Èü≥ÔºåËÆ©ÊØè‰∏™‰∫∫ÈÉΩÊã•ÊúâÊú∫‰ºöÔºåÈÅøÂÖçÁÅæÈöæ„ÄÇÊú¨‰π¶ÁåÆÁªôÊâÄÊúâÂ∞ÜÊäÄÊúØÁî®‰∫éÂñÑÈÄîÁöÑ‰∫∫‰ª¨„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ËÆ°ÁÆóÊòØ‰∏ÄÁßçÊµÅË°åÊñáÂåñÔºåÊµÅË°åÊñáÂåñÈÑôËßÜÂéÜÂè≤„ÄÇ ÊµÅË°åÊñáÂåñÂÖ≥‰πé‰∏™‰ΩìË∫´‰ªΩÂíåÂèÇ‰∏éÊÑüÔºå‰ΩÜ‰∏éÂêà‰ΩúÊó†ÂÖ≥„ÄÇÊµÅË°åÊñáÂåñÊ¥ªÂú®ÂΩì‰∏ãÔºå‰πü‰∏éËøáÂéªÂíåÊú™Êù•Êó†ÂÖ≥„ÄÇ ÊàëËÆ§‰∏∫Â§ßÈÉ®ÂàÜÔºà‰∏∫‰∫ÜÈí±ÔºâÁºñÂÜô‰ª£Á†ÅÁöÑ‰∫∫Â∞±ÊòØËøôÊ†∑ÁöÑÔºå ‰ªñ‰ª¨‰∏çÁü•ÈÅìËá™Â∑±ÁöÑÊñáÂåñÊù•Ëá™Âì™Èáå„ÄÇ&lt;/p&gt; &#xA; &lt;p&gt;‚Äî‚Äî ÈòøÂÖ∞„ÉªÂáØÊé•Âèó Dobb ÂçöÂ£´ÁöÑÊùÇÂøóÈááËÆøÊó∂Ôºà2012 Âπ¥Ôºâ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;ÁõÆÂΩï&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/preface.md&#34;&gt;Â∫èË®Ä&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/part-i.md&#34;&gt;Á¨¨‰∏ÄÈÉ®ÂàÜÔºöÊï∞ÊçÆÁ≥ªÁªüÂü∫Á°Ä&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md&#34;&gt;Á¨¨‰∏ÄÁ´†ÔºöÂèØÈù†ÊÄß„ÄÅÂèØ‰º∏Áº©ÊÄßÂíåÂèØÁª¥Êä§ÊÄß&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md#%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%80%9D%E8%80%83&#34;&gt;ÂÖ≥‰∫éÊï∞ÊçÆÁ≥ªÁªüÁöÑÊÄùËÄÉ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md#%E5%8F%AF%E9%9D%A0%E6%80%A7&#34;&gt;ÂèØÈù†ÊÄß&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md#%E5%8F%AF%E4%BC%B8%E7%BC%A9%E6%80%A7&#34;&gt;ÂèØ‰º∏Áº©ÊÄß&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md#%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7&#34;&gt;ÂèØÁª¥Êä§ÊÄß&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch1.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md&#34;&gt;Á¨¨‰∫åÁ´†ÔºöÊï∞ÊçÆÊ®°Âûã‰∏éÊü•ËØ¢ËØ≠Ë®Ä&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md#%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%96%87%E6%A1%A3%E6%A8%A1%E5%9E%8B&#34;&gt;ÂÖ≥Á≥ªÊ®°Âûã‰∏éÊñáÊ°£Ê®°Âûã&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md#%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80&#34;&gt;Êï∞ÊçÆÊü•ËØ¢ËØ≠Ë®Ä&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md#%E5%9B%BE%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B&#34;&gt;ÂõæÊï∞ÊçÆÊ®°Âûã&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch3.md&#34;&gt;Á¨¨‰∏âÁ´†ÔºöÂ≠òÂÇ®‰∏éÊ£ÄÁ¥¢&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch3.md#%E9%A9%B1%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;È©±Âä®Êï∞ÊçÆÂ∫ìÁöÑÊï∞ÊçÆÁªìÊûÑ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch3.md#%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E8%BF%98%E6%98%AF%E5%88%86%E6%9E%90%EF%BC%9F&#34;&gt;‰∫ãÂä°Â§ÑÁêÜËøòÊòØÂàÜÊûêÔºü&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch3.md#%E5%88%97%E5%BC%8F%E5%AD%98%E5%82%A8&#34;&gt;ÂàóÂºèÂ≠òÂÇ®&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch3.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch4.md&#34;&gt;Á¨¨ÂõõÁ´†ÔºöÁºñÁ†Å‰∏éÊºîÂåñ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch4.md#%E7%BC%96%E7%A0%81%E6%95%B0%E6%8D%AE%E7%9A%84%E6%A0%BC%E5%BC%8F&#34;&gt;ÁºñÁ†ÅÊï∞ÊçÆÁöÑÊ†ºÂºè&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch4.md#%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E7%B1%BB%E5%9E%8B&#34;&gt;Êï∞ÊçÆÊµÅÁöÑÁ±ªÂûã&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch4.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/part-ii.md&#34;&gt;Á¨¨‰∫åÈÉ®ÂàÜÔºöÂàÜÂ∏ÉÂºèÊï∞ÊçÆ&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md&#34;&gt;Á¨¨‰∫îÁ´†ÔºöÂ§çÂà∂&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md#%E9%A2%86%E5%AF%BC%E8%80%85%E4%B8%8E%E8%BF%BD%E9%9A%8F%E8%80%85&#34;&gt;È¢ÜÂØºËÄÖ‰∏éËøΩÈöèËÄÖ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md#%E5%A4%8D%E5%88%B6%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98&#34;&gt;Â§çÂà∂Âª∂ËøüÈóÆÈ¢ò&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md#%E5%A4%9A%E4%B8%BB%E5%A4%8D%E5%88%B6&#34;&gt;Â§ö‰∏ªÂ§çÂà∂&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md#%E6%97%A0%E4%B8%BB%E5%A4%8D%E5%88%B6&#34;&gt;Êó†‰∏ªÂ§çÂà∂&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch5.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md&#34;&gt;Á¨¨ÂÖ≠Á´†ÔºöÂàÜÂå∫&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E5%88%86%E5%8C%BA%E4%B8%8E%E5%A4%8D%E5%88%B6&#34;&gt;ÂàÜÂå∫‰∏éÂ§çÂà∂&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE%E7%9A%84%E5%88%86%E5%8C%BA&#34;&gt;ÈîÆÂÄºÊï∞ÊçÆÁöÑÂàÜÂå∫&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E5%88%86%E5%8C%BA%E4%B8%8E%E6%AC%A1%E7%BA%A7%E7%B4%A2%E5%BC%95&#34;&gt;ÂàÜÂå∫‰∏éÊ¨°Á∫ßÁ¥¢Âºï&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E5%88%86%E5%8C%BA%E5%86%8D%E5%B9%B3%E8%A1%A1&#34;&gt;ÂàÜÂå∫ÂÜçÂπ≥Ë°°&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E8%AF%B7%E6%B1%82%E8%B7%AF%E7%94%B1&#34;&gt;ËØ∑Ê±ÇË∑ØÁî±&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch6.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch7.md&#34;&gt;Á¨¨‰∏ÉÁ´†Ôºö‰∫ãÂä°&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch7.md#%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%A3%98%E6%89%8B%E6%A6%82%E5%BF%B5&#34;&gt;‰∫ãÂä°ÁöÑÊ£òÊâãÊ¶ÇÂøµ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch7.md#%E5%BC%B1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB&#34;&gt;Âº±ÈöîÁ¶ªÁ∫ßÂà´&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch7.md#%E5%8F%AF%E4%B8%B2%E8%A1%8C%E5%8C%96&#34;&gt;ÂèØ‰∏≤Ë°åÂåñ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch7.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md&#34;&gt;Á¨¨ÂÖ´Á´†ÔºöÂàÜÂ∏ÉÂºèÁ≥ªÁªüÁöÑÈ∫ªÁÉ¶&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md#%E6%95%85%E9%9A%9C%E4%B8%8E%E9%83%A8%E5%88%86%E5%A4%B1%E6%95%88&#34;&gt;ÊïÖÈöú‰∏éÈÉ®ÂàÜÂ§±Êïà&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md#%E4%B8%8D%E5%8F%AF%E9%9D%A0%E7%9A%84%E7%BD%91%E7%BB%9C&#34;&gt;‰∏çÂèØÈù†ÁöÑÁΩëÁªú&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md#%E4%B8%8D%E5%8F%AF%E9%9D%A0%E7%9A%84%E6%97%B6%E9%92%9F&#34;&gt;‰∏çÂèØÈù†ÁöÑÊó∂Èíü&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md#%E7%9F%A5%E8%AF%86%E3%80%81%E7%9C%9F%E7%9B%B8%E4%B8%8E%E8%B0%8E%E8%A8%80&#34;&gt;Áü•ËØÜ„ÄÅÁúüÁõ∏‰∏éË∞éË®Ä&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch8.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md&#34;&gt;Á¨¨‰πùÁ´†Ôºö‰∏ÄËá¥ÊÄß‰∏éÂÖ±ËØÜ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md#%E4%B8%80%E8%87%B4%E6%80%A7%E4%BF%9D%E8%AF%81&#34;&gt;‰∏ÄËá¥ÊÄß‰øùËØÅ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md#%E7%BA%BF%E6%80%A7%E4%B8%80%E8%87%B4%E6%80%A7&#34;&gt;Á∫øÊÄß‰∏ÄËá¥ÊÄß&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md#%E9%A1%BA%E5%BA%8F%E4%BF%9D%E8%AF%81&#34;&gt;È°∫Â∫è‰øùËØÅ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md#%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%85%B1%E8%AF%86&#34;&gt;ÂàÜÂ∏ÉÂºè‰∫ãÂä°‰∏éÂÖ±ËØÜ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch9.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/part-iii.md&#34;&gt;Á¨¨‰∏âÈÉ®ÂàÜÔºöË°çÁîüÊï∞ÊçÆ&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch10.md&#34;&gt;Á¨¨ÂçÅÁ´†ÔºöÊâπÂ§ÑÁêÜ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch10.md#%E4%BD%BF%E7%94%A8Unix%E5%B7%A5%E5%85%B7%E7%9A%84%E6%89%B9%E5%A4%84%E7%90%86&#34;&gt;‰ΩøÁî®UnixÂ∑•ÂÖ∑ÁöÑÊâπÂ§ÑÁêÜ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch10.md#MapReduce%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&#34;&gt;MapReduceÂíåÂàÜÂ∏ÉÂºèÊñá‰ª∂Á≥ªÁªü&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch10.md#MapReduce%E4%B9%8B%E5%90%8E&#34;&gt;MapReduce‰πãÂêé&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch10.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch11.md&#34;&gt;Á¨¨ÂçÅ‰∏ÄÁ´†ÔºöÊµÅÂ§ÑÁêÜ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch11.md#%E4%BC%A0%E9%80%92%E4%BA%8B%E4%BB%B6%E6%B5%81&#34;&gt;‰º†ÈÄí‰∫ã‰ª∂ÊµÅ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch11.md#%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E6%B5%81&#34;&gt;Êï∞ÊçÆÂ∫ì‰∏éÊµÅ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch11.md#%E6%B5%81%E5%A4%84%E7%90%86&#34;&gt;ÊµÅÂ§ÑÁêÜ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch11.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md&#34;&gt;Á¨¨ÂçÅ‰∫åÁ´†ÔºöÊï∞ÊçÆÁ≥ªÁªüÁöÑÊú™Êù•&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md#%E6%95%B0%E6%8D%AE%E9%9B%86%E6%88%90&#34;&gt;Êï∞ÊçÆÈõÜÊàê&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md#%E5%88%86%E6%8B%86%E6%95%B0%E6%8D%AE%E5%BA%93&#34;&gt;ÂàÜÊãÜÊï∞ÊçÆÂ∫ì&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md#%E5%B0%86%E4%BA%8B%E6%83%85%E5%81%9A%E6%AD%A3%E7%A1%AE&#34;&gt;Â∞Ü‰∫ãÊÉÖÂÅöÊ≠£Á°Æ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md#%E5%81%9A%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BA%8B%E6%83%85&#34;&gt;ÂÅöÊ≠£Á°ÆÁöÑ‰∫ãÊÉÖ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch12.md#%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%93&#34;&gt;Êú¨Á´†Â∞èÁªì&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/glossary.md&#34;&gt;ÊúØËØ≠Ë°®&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/colophon.md&#34;&gt;ÂêéËÆ∞&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Ê≥ïÂæãÂ£∞Êòé&lt;/h2&gt; &#xA;&lt;p&gt;‰ªéÂéü‰ΩúËÄÖÂ§ÑÂæóÁü•ÔºåÂ∑≤ÁªèÊúâÁÆÄ‰Ωì‰∏≠ÊñáÁöÑÁøªËØëËÆ°ÂàíÔºåÂ∞Ü‰∫é 2018 Âπ¥Êú´ÂÆåÊàê„ÄÇ&lt;a href=&#34;https://search.jd.com/Search?keyword=%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8&#34;&gt;Ë¥≠‰π∞Âú∞ÂùÄ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ËØëËÄÖÁ∫ØÁ≤πÂá∫‰∫é &lt;strong&gt;Â≠¶‰π†ÁõÆÁöÑ&lt;/strong&gt; ‰∏é &lt;strong&gt;‰∏™‰∫∫ÂÖ¥Ë∂£&lt;/strong&gt; ÁøªËØëÊú¨‰π¶Ôºå‰∏çËøΩÊ±Ç‰ªª‰ΩïÁªèÊµéÂà©Áõä„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËØëËÄÖ‰øùÁïôÂØπÊ≠§ÁâàÊú¨ËØëÊñáÁöÑÁΩ≤ÂêçÊùÉÔºåÂÖ∂‰ªñÊùÉÂà©‰ª•Âéü‰ΩúËÄÖÂíåÂá∫ÁâàÁ§æÁöÑ‰∏ªÂº†‰∏∫ÂáÜ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨ËØëÊñáÂè™‰æõÂ≠¶‰π†Á†îÁ©∂ÂèÇËÄÉ‰πãÁî®Ôºå‰∏çÂæóÂÖ¨ÂºÄ‰º†Êí≠ÂèëË°åÊàñÁî®‰∫éÂïÜ‰∏öÁî®ÈÄî„ÄÇÊúâËÉΩÂäõÈòÖËØªËã±Êñá‰π¶Á±çËÄÖËØ∑Ë¥≠‰π∞Ê≠£ÁâàÊîØÊåÅ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ë¥°ÁåÆ&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;ÂÖ®ÊñáÊ†°ËÆ¢ by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/commit/afb5edab55c62ed23474149f229677e3b42dfc2c&#34;&gt;Â∫èË®ÄÂàùÁøª‰øÆÊ≠£&lt;/a&gt; by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=seagullbird&#34;&gt;@seagullbird&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/commit/973b12cd8f8fcdf4852f1eb1649ddd9d187e3644&#34;&gt;Á¨¨‰∏ÄÁ´†ËØ≠Ê≥ïÊ†áÁÇπÊ†°Ê≠£&lt;/a&gt; by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=nevertiree&#34;&gt;@nevertiree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/commit/d4eb0852c0ec1e93c8aacc496c80b915bb1e6d48&#34;&gt;Á¨¨ÂÖ≠Á´†ÈÉ®ÂàÜÊ†°Ê≠£&lt;/a&gt; ‰∏é&lt;a href=&#34;https://github.com/Vonng/ddia/commit/9de8dbd1bfe6fbb03b3bf6c1a1aa2291aed2490e&#34;&gt;Á¨¨ÂçÅÁ´†ÁöÑÂàùÁøª&lt;/a&gt; by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=MuAlex&#34;&gt;@MuAlex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/part-i.md&#34;&gt;Á¨¨‰∏ÄÈÉ®ÂàÜ&lt;/a&gt;ÂâçË®ÄÔºå&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/ch2.md&#34;&gt;ch2&lt;/a&gt;Ê†°Ê≠£ by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=jiajiadebug&#34;&gt;@jiajiadebug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/glossary.md&#34;&gt;ËØçÊ±áË°®&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/colophon.md&#34;&gt;ÂêéËÆ∞&lt;/a&gt;ÂÖ≥‰∫éÈáéÁå™ÁöÑÈÉ®ÂàÜ by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=Chowss&#34;&gt;@Chowss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pulls&#34;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt;ÁâàÊú¨‰∏éËΩ¨Êç¢ËÑöÊú¨ by &lt;a href=&#34;https://github.com/afunTW&#34;&gt;@afunTW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Â§öÂ§ÑÁøªËØë‰øÆÊ≠£ by &lt;a href=&#34;https://github.com/Vonng/ddia/commits?author=songzhibin97&#34;&gt;@songzhibin97&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÊÑüË∞¢ÊâÄÊúâ‰ΩúÂá∫Ë¥°ÁåÆÔºåÊèêÂá∫ÊÑèËßÅÁöÑÊúãÂèã‰ª¨Ôºö&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pulls&#34;&gt;Pull Requests&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/Vonng/ddia/issues&#34;&gt;Issues&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;ISSUE &amp;amp; Pull Requests&lt;/th&gt; &#xA;    &lt;th&gt;USER&lt;/th&gt; &#xA;    &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/237&#34;&gt;237&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/zhangnew&#34;&gt;@zhangnew&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch3: ‰øÆÊ≠£ÈîôËØØÁöÑÂõæÁâáÈìæÊé•&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/229&#34;&gt;229&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lis186&#34;&gt;@lis186&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊåáÂá∫ÁπÅ‰Ωì‰∏≠ÊñáÁöÑËΩ¨ËØëÈîôËØØÔºöÂ§çÊùÇ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/226&#34;&gt;226&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/chroming&#34;&gt;@chroming&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch1: ‰øÆÊ≠£ÂØºËà™Ê†è‰∏≠ÁöÑÁ´†ËäÇÂêçÁß∞&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/220&#34;&gt;220&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/skyran1278&#34;&gt;@skyran1278&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch9: ‰øÆÊ≠£Á∫øÊÄß‰∏ÄËá¥ÁöÑÁπÅ‰Ωì‰∏≠ÊñáÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/194&#34;&gt;194&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/BeBraveBeCurious&#34;&gt;@BeBraveBeCurious&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: ‰øÆÊ≠£ÈîôËØØÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/193&#34;&gt;193&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/BeBraveBeCurious&#34;&gt;@BeBraveBeCurious&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: ‰ºòÂåñËØëÊñá&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/192&#34;&gt;192&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/BeBraveBeCurious&#34;&gt;@BeBraveBeCurious&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: ‰øÆÊ≠£‰∏ç‰∏ÄËá¥Âíå‰∏çÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/190&#34;&gt;190&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Pcrab&#34;&gt;@Pcrab&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch1: ‰øÆÊ≠£‰∏çÂáÜÁ°ÆÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/187&#34;&gt;187&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/narojay&#34;&gt;@narojay&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch9: ‰øÆÊ≠£ÁîüÁ°¨ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/186&#34;&gt;186&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/narojay&#34;&gt;@narojay&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch8: ‰øÆÊ≠£ÈîôÂà´Â≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/185&#34;&gt;185&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/8da2k&#34;&gt;@8da2k&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊåáÂá∫Â∞èÊ†áÈ¢òË∑≥ËΩ¨ÁöÑÈóÆÈ¢ò&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/184&#34;&gt;184&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/DavidZhiXing&#34;&gt;@DavidZhiXing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch10: ‰øÆÊ≠£Â§±ÊïàÁöÑÁΩëÂùÄ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/183&#34;&gt;183&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/OneSizeFitsQuorum&#34;&gt;@OneSizeFitsQuorum&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch8: ‰øÆÊ≠£ÈîôÂà´Â≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/182&#34;&gt;182&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lroolle&#34;&gt;@lroolle&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Âª∫ËÆÆdocsifyÁöÑ‰∏ªÈ¢òÈ£éÊ†º&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/181&#34;&gt;181&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/YunfengGao&#34;&gt;@YunfengGao&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2: ‰øÆÊ≠£ÁøªËØëÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/180&#34;&gt;180&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/skyran1278&#34;&gt;@skyran1278&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch3: ÊåáÂá∫ÁπÅ‰Ωì‰∏≠ÊñáÁöÑËΩ¨ËØëÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/177&#34;&gt;177&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/exzhawk&#34;&gt;@exzhawk&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊîØÊåÅ Github Pages ÈáåÁöÑÂÖ¨ÂºèÊòæÁ§∫&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/176&#34;&gt;176&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/haifeiWu&#34;&gt;@haifeiWu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2: ËØ≠‰πâÁΩëÁõ∏ÂÖ≥ÁøªËØëÊõ¥Ê≠£&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/175&#34;&gt;175&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cwr31&#34;&gt;@cwr31&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch7: ‰∏çÂèòÂºèÁõ∏ÂÖ≥ÁøªËØëÊõ¥Ê≠£&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/174&#34;&gt;174&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/BeBraveBeCurious&#34;&gt;@BeBraveBeCurious&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;README &amp;amp; preface: Êõ¥Ê≠£‰∏çÊ≠£Á°ÆÁöÑ‰∏≠ÊñáÁî®ËØçÂíåÊ†áÁÇπÁ¨¶Âè∑&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/173&#34;&gt;173&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch12: ‰øÆÊ≠£‰∏çÂÆåÊï¥ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/171&#34;&gt;171&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch12: ‰øÆÊ≠£ÈáçÂ§çÁöÑËØëÊñá&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/169&#34;&gt;169&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch12: Êõ¥Ê≠£‰∏çÂ§™ÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/166&#34;&gt;166&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/bp4m4h94&#34;&gt;@bp4m4h94&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch1: ÂèëÁé∞ÈîôËØØÁöÑÊñáÁåÆÁ¥¢Âºï&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/164&#34;&gt;164&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/DragonDriver&#34;&gt;@DragonDriver&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;preface: Êõ¥Ê≠£ÈîôËØØÁöÑÊ†áÁÇπÁ¨¶Âè∑&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/163&#34;&gt;163&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/llmmddCoder&#34;&gt;@llmmddCoder&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch1: Êõ¥Ê≠£ÈîôËØØÂ≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/160&#34;&gt;160&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Zhayhp&#34;&gt;@Zhayhp&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2: Âª∫ËÆÆÂ∞Ü network model ÁøªËØë‰∏∫ÁΩëÁä∂Ê®°Âûã&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/159&#34;&gt;159&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/1ess&#34;&gt;@1ess&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: Êõ¥Ê≠£ÈîôËØØÂ≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/157&#34;&gt;157&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch7: Êõ¥Ê≠£‰∏çÂ§™ÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/155&#34;&gt;155&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch7: Êõ¥Ê≠£‰∏çÂ§™ÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/153&#34;&gt;153&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/DavidZhiXing&#34;&gt;@DavidZhiXing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch9: ‰øÆÊ≠£Áº©Áï•ÂõæÁöÑÈîôÂà´Â≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/152&#34;&gt;152&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch7: Èô§Èáç-&amp;gt;ÂéªÈáç&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/151&#34;&gt;151&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: ‰øÆËÆ¢siblingÁõ∏ÂÖ≥ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/147&#34;&gt;147&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ZvanYang&#34;&gt;@ZvanYang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: Êõ¥Ê≠£‰∏ÄÂ§Ñ‰∏çÂáÜÁ°ÆÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/145&#34;&gt;145&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Hookey&#34;&gt;@Hookey&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ËØÜÂà´‰∫ÜÂΩìÂâçÁÆÄÁπÅËΩ¨ËØëËøáÁ®ã‰∏≠Â§ÑÁêÜ‰∏çÂΩìÁöÑÂú∞ÊñπÔºåÊöÇÈÄöËøáËΩ¨Êç¢ËÑöÊú¨ËßÑÈÅø&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/144&#34;&gt;144&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/secret4233&#34;&gt;@secret4233&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch7: ‰∏çÁøªËØë&lt;code&gt;next-key locking&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/143&#34;&gt;143&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/imcheney&#34;&gt;@imcheney&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch3: Êõ¥Êñ∞ÊÆãÁïôÁöÑÊú∫ÁøªÊÆµËêΩ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/142&#34;&gt;142&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/XIJINIAN&#34;&gt;@XIJINIAN&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Âª∫ËÆÆÂéªÈô§ÊÆµÈ¶ñÁöÑÂà∂Ë°®Á¨¶&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/issues/141&#34;&gt;141&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Flyraty&#34;&gt;@Flyraty&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: ÂèëÁé∞‰∏ÄÂ§ÑÈîôËØØÊ†ºÂºèÁöÑÁ´†ËäÇÂºïÁî®&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/140&#34;&gt;140&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Bowser1704&#34;&gt;@Bowser1704&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: ‰øÆÊ≠£Á´†ËäÇSummary‰∏≠Â§öÂ§Ñ‰∏çÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/139&#34;&gt;139&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Bowser1704&#34;&gt;@Bowser1704&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2&amp;amp;ch3: ‰øÆÊ≠£Â§öÂ§Ñ‰∏çÈÄöÈ°∫ÁöÑÊàñÈîôËØØÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/137&#34;&gt;137&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/fuxuemingzhu&#34;&gt;@fuxuemingzhu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5&amp;amp;ch6: ‰ºòÂåñÂ§öÂ§Ñ‰∏çÈÄöÈ°∫ÁöÑÊàñÈîôËØØÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/134&#34;&gt;134&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/fuxuemingzhu&#34;&gt;@fuxuemingzhu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: ‰ºòÂåñÂ§öÂ§Ñ‰∏çÈÄöÈ°∫ÁöÑÊàñÈîôËØØÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/133&#34;&gt;133&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/fuxuemingzhu&#34;&gt;@fuxuemingzhu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch3: ‰ºòÂåñÂ§öÂ§ÑÈîôËØØÁöÑÊàñ‰∏çÈÄöÈ°∫ÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/132&#34;&gt;132&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/fuxuemingzhu&#34;&gt;@fuxuemingzhu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch3: ‰ºòÂåñ‰∏ÄÂ§ÑÂÆπÊòì‰∫ßÁîüÊ≠ß‰πâÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/131&#34;&gt;131&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/rwwg4&#34;&gt;@rwwg4&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch6: ‰øÆÊ≠£‰∏§Â§ÑÈîôËØØÁöÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/129&#34;&gt;129&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/anaer&#34;&gt;@anaer&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: ‰øÆÊ≠£‰∏§Â§ÑÂº∫Ë∞ÉÊñáÊú¨ÂíåÂõõÂ§Ñ‰ª£Á†ÅÂèòÈáèÂêçÁß∞&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/128&#34;&gt;128&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/meilin96&#34;&gt;@meilin96&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: ‰øÆÊ≠£‰∏ÄÂ§ÑÈîôËØØÁöÑÂºïÁî®&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/126&#34;&gt;126&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cwr31&#34;&gt;@cwr31&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch10: ‰øÆÊ≠£‰∏ÄÂ§ÑÈîôËØØÁöÑÁøªËØëÔºàÂäüËÉΩ -&amp;gt; ÂáΩÊï∞Ôºâ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/125&#34;&gt;125&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/dch1228&#34;&gt;@dch1228&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2: ‰ºòÂåñ how best ÁöÑÁøªËØëÔºàÂ¶Ç‰Ωï‰ª•ÊúÄ‰Ω≥ÊñπÂºèÔºâ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/124&#34;&gt;124&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;translation updates (chapter 10)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/123&#34;&gt;123&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;translation updates (chapter 9, TOC in readme, glossary, etc.)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/121&#34;&gt;121&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;translation updates (chapter 5 to chapter 8)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/120&#34;&gt;120&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jiong-han&#34;&gt;@jiong-han&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Typo fix: Âë≤‰πã‰ª•Èºª -&amp;gt; Âó§‰πã‰ª•Èºª&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/119&#34;&gt;119&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cclauss&#34;&gt;@cclauss&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Streamline file operations in convert()&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/118&#34;&gt;118&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/yingang&#34;&gt;@yingang&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;translation updates (chapter 2 to chapter 4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/117&#34;&gt;117&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/feeeei&#34;&gt;@feeeei&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Áªü‰∏ÄÊØèÁ´†ÁöÑÊ†áÈ¢òÊ†ºÂºè&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/115&#34;&gt;115&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/NageNalock&#34;&gt;@NageNalock&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Á¨¨‰∏ÉÁ´†ÁóÖÂè•‰øÆÊîπ: ÈáçÂ§çËØçËØ≠&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/114&#34;&gt;114&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Sunt-ing&#34;&gt;@Sunt-ing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update README.md: correct the book name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/113&#34;&gt;113&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lpxxn&#34;&gt;@lpxxn&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊîπËØ≠Âè•&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/112&#34;&gt;112&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ibyte2011&#34;&gt;@ibyte2011&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch9.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/110&#34;&gt;110&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lpxxn&#34;&gt;@lpxxn&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ËØªÂ∑≤ÂÜôÂÖ•Êï∞ÊçÆ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/107&#34;&gt;107&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/abbychau&#34;&gt;@abbychau&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÂñÆË™øÈêòÂíåÂ•ΩÊ≠ªËøòÊòØËµñÊ¥ªÁùÄ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/106&#34;&gt;106&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/enochii&#34;&gt;@enochii&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;typo in ch2: fix braces typo&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/105&#34;&gt;105&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/LiminCode&#34;&gt;@LiminCode&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Chronicle translation error&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/104&#34;&gt;104&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Sunt-ing&#34;&gt;@Sunt-ing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;several advice for better translation&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/103&#34;&gt;103&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Sunt-ing&#34;&gt;@Sunt-ing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;typo in ch4: should be ÂÆåÊàê rather than ÂÆåÂÖ®&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/102&#34;&gt;102&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Sunt-ing&#34;&gt;@Sunt-ing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch4: better-translation: ÊâºÊùÄ ‚Üí Á†¥Âùè&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/101&#34;&gt;101&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Sunt-ing&#34;&gt;@Sunt-ing&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;typo in Ch4: should be &#34;ÊîπÂèò&#34; rathr than &#34;ÁõñÈù¢&#34;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/100&#34;&gt;100&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/LiminCode&#34;&gt;@LiminCode&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix missing translation&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/99&#34;&gt;99 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/mrdrivingduck&#34;&gt;@mrdrivingduck&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch6: fix the word rebalancing&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/98&#34;&gt;98 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jacklightChen&#34;&gt;@jacklightChen&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix ch7.md: fix wrong references&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/97&#34;&gt;97 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jenac&#34;&gt;@jenac&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;96&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/96&#34;&gt;96 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/PragmaTwice&#34;&gt;@PragmaTwice&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2: fix typo about &#39;may or may not be&#39;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/95&#34;&gt;95 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/EvanMu96&#34;&gt;@EvanMu96&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix translation of &#34;the battle cry&#34; in ch5&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/94&#34;&gt;94 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/kemingy&#34;&gt;@kemingy&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch6: fix markdown and punctuations&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/93&#34;&gt;93 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/kemingy&#34;&gt;@kemingy&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch5: fix markdown and some typos&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/92&#34;&gt;92 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Gilbert1024&#34;&gt;@Gilbert1024&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Merge pull request #1 from Vonng/master&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/88&#34;&gt;88 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/kemingy&#34;&gt;@kemingy&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix typo for ch1, ch2, ch3, ch4&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/87&#34;&gt;87 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/wynn5a&#34;&gt;@wynn5a&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch3.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/86&#34;&gt;86 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/northmorn&#34;&gt;@northmorn&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch1.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/85&#34;&gt;85 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/sunbuhui&#34;&gt;@sunbuhui&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix ch2.md: fix ch2 ambiguous translation&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/84&#34;&gt;84 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ganler&#34;&gt;@ganler&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Fix translation: use up&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/83&#34;&gt;83 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/afunTW&#34;&gt;@afunTW&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Using OpenCC to convert from zh-cn to zh-tw&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/82&#34;&gt;82 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/kangni&#34;&gt;@kangni&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix gitbook url&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/78&#34;&gt;78 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hanyu2&#34;&gt;@hanyu2&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Fix unappropriated translation&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/77&#34;&gt;77 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Ozarklake&#34;&gt;@Ozarklake&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix typo&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/75&#34;&gt;75 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/2997ms&#34;&gt;@2997ms&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Fix typo&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/74&#34;&gt;74 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/2997ms&#34;&gt;@2997ms&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch9.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/70&#34;&gt;70 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/2997ms&#34;&gt;@2997ms&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch7.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/67&#34;&gt;67 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jiajiadebug&#34;&gt;@jiajiadebug&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix issues in ch2 - ch9 and glossary&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/66&#34;&gt;66 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/blindpirate&#34;&gt;@blindpirate&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Fix typo&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/63&#34;&gt;63 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/haifeiWu&#34;&gt;@haifeiWu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch10.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/62&#34;&gt;62 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ych&#34;&gt;@ych&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix ch1.md typesetting problem&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/61&#34;&gt;61 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/xianlaioy&#34;&gt;@xianlaioy&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;docs:Èíü--&amp;gt;ÁßçÔºåÂéªÊéâou&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/60&#34;&gt;60 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Zombo1296&#34;&gt;@Zombo1296&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Âê¶Âàô -&amp;gt; ÊàñËÄÖ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/59&#34;&gt;59 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/AlexanderMisel&#34;&gt;@AlexanderMisel&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÂëºÂè´-&amp;gt;Ë∞ÉÁî®ÔºåÊòæÁùÄ-&amp;gt;ÊòæËëó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/58&#34;&gt;58 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ibyte2011&#34;&gt;@ibyte2011&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch8.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/55&#34;&gt;55 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/saintube&#34;&gt;@saintube&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch8: ‰øÆÊîπÈìæÊé•ÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/54&#34;&gt;54 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Panmax&#34;&gt;@Panmax&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch2.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/53&#34;&gt;53 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ibyte2011&#34;&gt;@ibyte2011&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch9.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/52&#34;&gt;52 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hecenjie&#34;&gt;@hecenjie&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch1.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/51&#34;&gt;51 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/latavin243&#34;&gt;@latavin243&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix ‰øÆÊ≠£ch3 ch4Âá†Â§ÑÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/50&#34;&gt;50 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/AlexZFX&#34;&gt;@AlexZFX&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Âá†‰∏™ÁñèÊºèÂíåÊ†ºÂºèÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/49&#34;&gt;49 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/haifeiWu&#34;&gt;@haifeiWu&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch1.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/48&#34;&gt;48 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/scaugrated&#34;&gt;@scaugrated&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix typo&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/47&#34;&gt;47 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lzwill&#34;&gt;@lzwill&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Fixed typos in ch2&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/45&#34;&gt;45 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/zenuo&#34;&gt;@zenuo&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Âà†Èô§‰∏Ä‰∏™Â§ö‰ΩôÁöÑÂè≥Êã¨Âè∑&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/44&#34;&gt;44 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/akxxsb&#34;&gt;@akxxsb&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊ≠£Á¨¨‰∏ÉÁ´†Â∫ïÈÉ®ÈìæÊé•ÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/43&#34;&gt;43 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/baijinping&#34;&gt;@baijinping&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&#34;Êõ¥ÂÅáÁÆÄÂçï&#34;-&amp;gt;&#34;Êõ¥Âä†ÁÆÄÂçï&#34;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/42&#34;&gt;42 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/tisonkun&#34;&gt;@tisonkun&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÂ§ç ch1 ‰∏≠ÁöÑÊó†Â∫èÂàóË°®Ê†ºÂºè&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/38&#34;&gt;38 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/renjie-c&#34;&gt;@renjie-c&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Á∫†Ê≠£Â§öÂ§ÑÁöÑÁøªËØëÂ∞èÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/37&#34;&gt;37 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/tankilo&#34;&gt;@tankilo&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix translation mistakes in ch4.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/36&#34;&gt;36 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/wwek&#34;&gt;@wwek&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;1.‰øÆÂ§çÂ§ö‰∏™ÈìæÊé•ÈîôËØØ 2.ÂêçËØç‰ºòÂåñ‰øÆËÆ¢ 3.ÈîôËØØ‰øÆËÆ¢&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/35&#34;&gt;35 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/wwek&#34;&gt;@wwek&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix ch7.md to ch8.md link error&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/34&#34;&gt;34 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/wwek&#34;&gt;@wwek&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Merge pull request #1 from Vonng/master&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/33&#34;&gt;33 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/wwek&#34;&gt;@wwek&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;fix part-ii.md link error&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/32&#34;&gt;32 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/JCYoky&#34;&gt;@JCYoky&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch2.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/31&#34;&gt;31 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/elsonLee&#34;&gt;@elsonLee&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch7.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/26&#34;&gt;26 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/yjhmelody&#34;&gt;@yjhmelody&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÂ§ç‰∏Ä‰∫õÊòéÊòæÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/25&#34;&gt;25 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/lqbilbo&#34;&gt;@lqbilbo&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÂ§çÈìæÊé•ÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/24&#34;&gt;24 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/artiship&#34;&gt;@artiship&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊîπËØçËØ≠È°∫Â∫è&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/23&#34;&gt;23 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/artiship&#34;&gt;@artiship&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊ≠£ÈîôÂà´Â≠ó&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/22&#34;&gt;22 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/artiship&#34;&gt;@artiship&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Á∫†Ê≠£ÁøªËØëÈîôËØØ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/21&#34;&gt;21 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/zhtisi&#34;&gt;@zhtisi&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊ≠£ÁõÆÂΩïÂíåÊú¨Á´†Ê†áÈ¢ò‰∏çÁ¨¶ÁöÑÊÉÖÂÜµ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/20&#34;&gt;20 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/rentiansheng&#34;&gt;@rentiansheng&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update ch7.md&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/19&#34;&gt;19 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/LHRchina&#34;&gt;@LHRchina&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÂ§çËØ≠Âè•Â∞èbug&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/16&#34;&gt;16 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/MuAlex&#34;&gt;@MuAlex&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Master&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/15&#34;&gt;15 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cg-zhou&#34;&gt;@cg-zhou&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Update translation progress&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/14&#34;&gt;14 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cg-zhou&#34;&gt;@cg-zhou&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Translate glossary&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/13&#34;&gt;13 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/cg-zhou&#34;&gt;@cg-zhou&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ËØ¶ÁªÜ‰øÆÊîπ‰∫ÜÂêéËÆ∞‰∏≠ÂíåÂç∞Â∫¶ÈáéÁå™Áõ∏ÂÖ≥ÁöÑÊèèËø∞&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/12&#34;&gt;12 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ibyte2011&#34;&gt;@ibyte2011&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‰øÆÊîπ‰∫ÜÈÉ®ÂàÜÁøªËØë&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/11&#34;&gt;11 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jiajiadebug&#34;&gt;@jiajiadebug&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2 100%&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/10&#34;&gt;10 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jiajiadebug&#34;&gt;@jiajiadebug&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ch2 20%&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/9&#34;&gt;9 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/jiajiadebug&#34;&gt;@jiajiadebug&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Preface, ch1, part-i translation minor fixes&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/7&#34;&gt;7 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/MuAlex&#34;&gt;@MuAlex&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Ch6 translation pull request&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/6&#34;&gt;6 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/MuAlex&#34;&gt;@MuAlex&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Ch6 change version1&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/5&#34;&gt;5 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nevertiree&#34;&gt;@nevertiree&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Chapter 01ËØ≠Ê≥ïÂæÆË∞É&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/ddia/pull/2&#34;&gt;2 &lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/seagullbird&#34;&gt;@seagullbird&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Â∫èË®ÄÂàùÁøª&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;ÂçèËÆÆ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vonng/ddia/master/LICENSE&#34;&gt;CC-BY 4.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mvt-project/mvt</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/mvt-project/mvt</id>
    <link href="https://github.com/mvt-project/mvt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MVT (Mobile Verification Toolkit) helps with conducting forensics of mobile devices in order to find signs of a potential compromise.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mvt-project/mvt/main/docs/mvt.png&#34; width=&#34;200&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Mobile Verification Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mvt/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/mvt&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.mvt.re/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/mvt/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mvt-project/mvt/actions/workflows/python-package.yml&#34;&gt;&lt;img src=&#34;https://github.com/mvt-project/mvt/actions/workflows/python-package.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/mvt&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/mvt&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mobile Verification Toolkit (MVT) is a collection of utilities to simplify and automate the process of gathering forensic traces helpful to identify a potential compromise of Android and iOS devices.&lt;/p&gt; &#xA;&lt;p&gt;It has been developed and released by the &lt;a href=&#34;https://www.amnesty.org/en/tech/&#34;&gt;Amnesty International Security Lab&lt;/a&gt; in July 2021 in the context of the &lt;a href=&#34;https://forbiddenstories.org/about-the-pegasus-project/&#34;&gt;Pegasus project&lt;/a&gt; along with &lt;a href=&#34;https://www.amnesty.org/en/latest/research/2021/07/forensic-methodology-report-how-to-catch-nso-groups-pegasus/&#34;&gt;a technical forensic methodology and forensic evidence&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: MVT is a forensic research tool intended for technologists and investigators. Using it requires understanding the basics of forensic analysis and using command-line tools. This is not intended for end-user self-assessment. If you are concerned with the security of your device please seek expert assistance.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;MVT can be installed from sources or from &lt;a href=&#34;https://pypi.org/project/mvt/&#34;&gt;PyPi&lt;/a&gt; (you will need some dependencies, check the &lt;a href=&#34;https://docs.mvt.re/en/latest/install/&#34;&gt;documentation&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install mvt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For alternative installation options and known issues, please refer to the &lt;a href=&#34;https://docs.mvt.re/en/latest/install/&#34;&gt;documentation&lt;/a&gt; as well as &lt;a href=&#34;https://github.com/mvt-project/mvt/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;MVT provides two commands &lt;code&gt;mvt-ios&lt;/code&gt; and &lt;code&gt;mvt-android&lt;/code&gt;. &lt;a href=&#34;https://docs.mvt.re/&#34;&gt;Check out the documentation to learn how to use them!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The purpose of MVT is to facilitate the &lt;em&gt;&lt;strong&gt;consensual forensic analysis&lt;/strong&gt;&lt;/em&gt; of devices of those who might be targets of sophisticated mobile spyware attacks, especially members of civil society and marginalized communities. We do not want MVT to enable privacy violations of non-consenting individuals. In order to achieve this, MVT is released under its own license. &lt;a href=&#34;https://docs.mvt.re/en/latest/license/&#34;&gt;Read more here.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>heartexlabs/label-studio</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/heartexlabs/label-studio</id>
    <link href="https://github.com/heartexlabs/label-studio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Label Studio is a multi-type data labeling and annotation tool with standardized output format&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg?sanitize=true&#34; alt=&#34;label-studio:build&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases&#34; alt=&#34;GitHub release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://labelstud.io/&#34;&gt;Website&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://labelstud.io/guide/&#34;&gt;Docs&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://twitter.com/heartexlabs&#34;&gt;Twitter&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://slack.labelstudio.heartex.com/?source=github-1&#34;&gt;Join Slack Community &lt;img src=&#34;https://app.heartex.ai/docs/images/slack-mini.png&#34; width=&#34;18px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Label Studio?&lt;/h2&gt; &#xA;&lt;!-- &lt;a href=&#34;https://labelstud.io/blog/release-130.html&#34;&gt;&lt;img src=&#34;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&#34; align=&#34;right&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;p&gt;Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#try-out-label-studio&#34;&gt;Try out Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#what-you-get-from-label-studio&#34;&gt;What you get from Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#included-templates-for-labeling-data-in-label-studio&#34;&gt;Included templates for labeling data in Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#set-up-machine-learning-models-with-Label-Studio&#34;&gt;Set up machine learning models with Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#integrate-label-studio-with-your-existing-tools&#34;&gt;Integrate Label Studio with your existing tools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif&#34; alt=&#34;Gif of Label Studio annotating different types of data&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Have a custom dataset? You can customize Label Studio to fit your needs. Read an &lt;a href=&#34;https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881&#34;&gt;introductory blog post&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Try out Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Install Label Studio locally, or deploy it in a cloud instance. Also you can try &lt;a href=&#34;https://app.heartex.com&#34;&gt;Label Studio Teams&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-docker&#34;&gt;Install locally with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#run-with-docker-compose&#34;&gt;Run with Docker Compose (Label Studio + Nginx + PostgreSQL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-pip&#34;&gt;Install locally with pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-anaconda&#34;&gt;Install locally with Anaconda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-for-local-development&#34;&gt;Install for local development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#deploy-in-a-cloud-instance&#34;&gt;Deploy in a cloud instance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install locally with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Official Label Studio docker image is &lt;a href=&#34;https://hub.docker.com/r/heartexlabs/label-studio&#34;&gt;here&lt;/a&gt; and it can be downloaded with &lt;code&gt;docker pull&lt;/code&gt;. Run Label Studio in a Docker container and access it at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull heartexlabs/label-studio:latest&#xA;docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find all the generated assets, including SQLite3 database storage &lt;code&gt;label_studio.sqlite3&lt;/code&gt; and uploaded files, in the &lt;code&gt;./mydata&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;Override default Docker install&lt;/h4&gt; &#xA;&lt;p&gt;You can override the default launch command by appending the new arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build a local image with Docker&lt;/h4&gt; &#xA;&lt;p&gt;If you want to build a local image, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t heartexlabs/label-studio:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Docker Compose script provides production-ready stack consisting of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Label Studio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; - proxy web server used to load various static data, including uploaded audio, images, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; - production-ready database that replaces less performant SQLite3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To start using the app from &lt;code&gt;http://localhost&lt;/code&gt; run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Requires Python &amp;gt;=3.7 &amp;lt;=3.9&#xA;pip install label-studio&#xA;&#xA;# Start the server at http://localhost:8080&#xA;label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with Anaconda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --name label-studio&#xA;conda activate label-studio&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install for local development&lt;/h3&gt; &#xA;&lt;p&gt;You can run the latest Label Studio version locally without installing the package with pip.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install all package dependencies&#xA;pip install -e .&#xA;# Run database migrations&#xA;python label_studio/manage.py migrate&#xA;# Start the server in development mode at http://localhost:8080&#xA;python label_studio/manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy in a cloud instance&lt;/h3&gt; &#xA;&lt;p&gt;You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json&#34;&gt;&lt;img src=&#34;https://aka.ms/deploytoazurebutton&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deploy.cloud.run&#34;&gt;&lt;img src=&#34;https://deploy.cloud.run/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Apply frontend changes&lt;/h4&gt; &#xA;&lt;p&gt;The frontend part of Label Studio app lies in the &lt;code&gt;frontend/&lt;/code&gt; folder and written in React JSX. In case you&#39;ve made some changes there, the following commands should be run before building / starting the instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd label_studio/frontend/&#xA;npm ci&#xA;npx webpack&#xA;cd ../..&#xA;python label_studio/manage.py collectstatic --no-input&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshoot installation&lt;/h3&gt; &#xA;&lt;p&gt;If you see any errors during installation, try to rerun the installation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --ignore-installed label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install dependencies on Windows&lt;/h4&gt; &#xA;&lt;p&gt;To run Label Studio on Windows, download and install the following wheel packages from &lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs&#34;&gt;Gohlke builds&lt;/a&gt; to ensure you&#39;re using the correct version of Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&#34;&gt;lxml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Upgrade pip &#xA;pip install -U pip&#xA;&#xA;# If you&#39;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:&#xA;pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl&#xA;&#xA;# Install label studio&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run test suite&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r deploy/requirements-test.txt&#xA;cd label_studio&#xA;&#xA;# postgres (assumes default postgres user,db,pass)&#xA;DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto&#xA;&#xA;# sqlite3&#xA;DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What you get from Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif&#34; alt=&#34;Screenshot of Label Studio data manager grid view with images&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user labeling&lt;/strong&gt; sign up and login, when you create an annotation it&#39;s tied to your account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple projects&lt;/strong&gt; to work on all your datasets in one instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Streamlined design&lt;/strong&gt; helps you focus on your task, not how to use the software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable label formats&lt;/strong&gt; let you customize the visual interface to meet your specific labeling needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support for multiple data types&lt;/strong&gt; including images, audio, text, HTML, time-series, and video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import from files or from cloud storage&lt;/strong&gt; in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integration with machine learning models&lt;/strong&gt; so that you can visualize and compare predictions from different models and perform pre-labeling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embed it in your data pipeline&lt;/strong&gt; REST API makes it easy to make it a part of your pipeline&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Included templates for labeling data in Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&#34;&gt; &#xA;&lt;h2&gt;Set up machine learning models with Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start your own machine learning backend server. See &lt;a href=&#34;https://github.com/heartexlabs/label-studio-ml-backend&#34;&gt;more detailed instructions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect Label Studio to the server on the model page found in project settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This lets you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pre-label&lt;/strong&gt; your data using model predictions.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;online learning&lt;/strong&gt; and retrain your model while new annotations are being created.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;active learning&lt;/strong&gt; by labeling only the most complex examples in your data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrate Label Studio with your existing tools&lt;/h2&gt; &#xA;&lt;p&gt;You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://github.com/heartexlabs/label-studio-frontend&#34;&gt;Label Studio Frontend&lt;/a&gt; as a separate React library. See more in the &lt;a href=&#34;https://labelstud.io/guide/frontend.html&#34;&gt;Frontend Library documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;label-studio&lt;/td&gt; &#xA;   &lt;td&gt;Server, distributed as a pip package&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-frontend&#34;&gt;label-studio-frontend&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;React and JavaScript frontend and can run standalone in a web browser or be embedded into your application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/dm2&#34;&gt;data-manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-converter&#34;&gt;label-studio-converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Encode labels in the format of your favorite machine learning library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-transformers&#34;&gt;label-studio-transformers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transformers library connected and configured for use with Label Studio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Want to use &lt;strong&gt;The Coolest Feature X&lt;/strong&gt; but Label Studio doesn&#39;t support it? Check out &lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/roadmap.md&#34;&gt;our public roadmap&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@misc{Label Studio,&#xA;  title={{Label Studio}: Data labeling software},&#xA;  url={https://github.com/heartexlabs/label-studio},&#xA;  note={Open source software available from https://github.com/heartexlabs/label-studio},&#xA;  author={&#xA;    Maxim Tkachenko and&#xA;    Mikhail Malyuk and&#xA;    Andrey Holmanyuk and&#xA;    Nikolai Liubimov},&#xA;  year={2020-2022},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/LICENSE&#34;&gt;Apache 2.0 LICENSE&lt;/a&gt; ¬© &lt;a href=&#34;https://www.heartex.ai/&#34;&gt;Heartex&lt;/a&gt;. 2020-2021&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/heartexlabs/label-studio/raw/master/images/opossum_looking.png?raw=true&#34; title=&#34;Hey everyone!&#34; height=&#34;140&#34; width=&#34;140&#34;&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/DALLE2-pytorch</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/lucidrains/DALLE2-pytorch</id>
    <link href="https://github.com/lucidrains/DALLE2-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of DALL-E 2, OpenAI&#39;s updated text-to-image synthesis neural network, in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/DALLE2-pytorch/main/dalle2.png&#34; width=&#34;450px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;DALL-E 2 - Pytorch&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://openai.com/dall-e-2/&#34;&gt;DALL-E 2&lt;/a&gt;, OpenAI&#39;s updated text-to-image synthesis neural network, in Pytorch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/RJwPN4qNi_Y?t=555&#34;&gt;Yannic Kilcher summary&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/watch?v=F1X4fHzF4mQ&#34;&gt;AssemblyAI explainer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The main novelty seems to be an extra layer of indirection with the prior network (whether it is an autoregressive transformer or a diffusion network), which predicts an image embedding based on the text embedding from CLIP. Specifically, this repository will only build out the diffusion prior network, as it is the best performing variant (but which incidentally involves a causal transformer as the denoising network üòÇ)&lt;/p&gt; &#xA;&lt;p&gt;This model is SOTA for text-to-image for now.&lt;/p&gt; &#xA;&lt;p&gt;Please join &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img alt=&#34;Join us on Discord&#34; src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; if you are interested in helping out with the replication with the &lt;a href=&#34;https://laion.ai/&#34;&gt;LAION&lt;/a&gt; community | &lt;a href=&#34;https://www.youtube.com/watch?v=AIOE1l1W0Tw&#34;&gt;Yannic Interview&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As of 5/23/22, it is no longer SOTA. SOTA will be &lt;a href=&#34;https://github.com/lucidrains/imagen-pytorch&#34;&gt;here&lt;/a&gt;. Jax versions as well as text-to-video project will be shifted towards the Imagen architecture, as it is way simpler.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A research group has used the code in this repository to train a functional diffusion prior for their CLIP generations. Will share their work once they release their preprint. This, and &lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine&#39;s&lt;/a&gt; own experiments, validate OpenAI&#39;s finding that the extra prior increases variety of generations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Decoder is now verified working for unconditional generation on my experimental setup for Oxford flowers. 2 researchers have also confirmed Decoder is working for them.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/DALLE2-pytorch/main/samples/oxford.png&#34; width=&#34;600px&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;ongoing at 21k steps&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Buntworthy/status/1529475416775434240?t=0GEge3Kr9I36cjcUVCQUTg&#34;&gt;Justin Pinkney&lt;/a&gt; successfully trained the diffusion prior in the repository for his CLIP to Stylegan2 text-to-image application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-Trained Models&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LAION is training prior models. Checkpoints are available on &lt;a href=&#34;https://huggingface.co/zenglishuci/conditioned-prior&#34;&gt;ü§óhuggingface&lt;/a&gt; and the training statistics are available on &lt;a href=&#34;https://wandb.ai/nousr_laion/conditioned-prior/reports/LAION-DALLE2-PyTorch-Prior--VmlldzoyMDI2OTIx&#34;&gt;üêùWANDB&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Decoder - &lt;a href=&#34;https://wandb.ai/veldrovive/dalle2_train_decoder/runs/jkrtg0so?workspace=user-veldrovive&#34;&gt;In-progress test run&lt;/a&gt; üöß&lt;/li&gt; &#xA; &lt;li&gt;DALL-E 2 üöß&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install dalle2-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To train DALLE-2 is a 3 step process, with the training of CLIP being the most important&lt;/p&gt; &#xA;&lt;p&gt;To train CLIP, you can either use &lt;a href=&#34;https://github.com/lucidrains/x-clip&#34;&gt;x-clip&lt;/a&gt; package, or join the LAION discord, where a lot of replication efforts are already &lt;a href=&#34;https://github.com/mlfoundations/open_clip&#34;&gt;underway&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository will demonstrate integration with &lt;code&gt;x-clip&lt;/code&gt; for starters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import CLIP&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 1,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 1,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8,&#xA;    use_all_token_embeds = True,            # whether to use fine-grained contrastive learning (FILIP)&#xA;    decoupled_contrastive_learning = True,  # use decoupled contrastive learning (DCL) objective function, removing positive pairs from the denominator of the InfoNCE loss (CLOOB + DCL)&#xA;    extra_latent_projection = True,         # whether to use separate projections for text-to-image vs image-to-text comparisons (CLOOB)&#xA;    use_visual_ssl = True,                  # whether to do self supervised learning on images&#xA;    visual_ssl_type = &#39;simclr&#39;,             # can be either &#39;simclr&#39; or &#39;simsiam&#39;, depending on using DeCLIP or SLIP&#xA;    use_mlm = False,                        # use masked language learning (MLM) on text (DeCLIP)&#xA;    text_ssl_loss_weight = 0.05,            # weight for text MLM loss&#xA;    image_ssl_loss_weight = 0.05            # weight for image self-supervised learning loss&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# train&#xA;&#xA;loss = clip(&#xA;    text,&#xA;    images,&#xA;    return_loss = True              # needs to be set to True to return contrastive loss&#xA;)&#xA;&#xA;loss.backward()&#xA;&#xA;# do the above with as many texts and images as possible in a loop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you will need to train the decoder, which learns to generate images based on the image embedding coming from the trained CLIP above&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import Unet, Decoder, CLIP&#xA;&#xA;# trained clip from step 1&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 1,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 1,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;).cuda()&#xA;&#xA;# unet for the decoder&#xA;&#xA;unet = Unet(&#xA;    dim = 128,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults=(1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;# decoder, which contains the unet and clip&#xA;&#xA;decoder = Decoder(&#xA;    unet = unet,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    image_cond_drop_prob = 0.1,&#xA;    text_cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this)&#xA;&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into decoder&#xA;&#xA;loss = decoder(images)&#xA;loss.backward()&#xA;&#xA;# do the above for many many many many steps&#xA;# then it will learn to generate images based on the CLIP image embeddings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, the main contribution of the paper. The repository offers the diffusion prior network. It takes the CLIP text embeddings and tries to generate the CLIP image embeddings. Again, you will need the trained CLIP from the first step&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DiffusionPriorNetwork, DiffusionPrior, CLIP&#xA;&#xA;# get trained CLIP from step one&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8,&#xA;).cuda()&#xA;&#xA;# setup prior network, which contains an autoregressive transformer&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;# diffusion prior network, which contains the CLIP and network (with transformer) above&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed text and images into diffusion prior network&#xA;&#xA;loss = diffusion_prior(text, images)&#xA;loss.backward()&#xA;&#xA;# do the above for many many many steps&#xA;# now the diffusion prior can generate image embeddings from the text embeddings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the paper, they actually used a &lt;a href=&#34;https://cascaded-diffusion.github.io/&#34;&gt;recently discovered technique&lt;/a&gt;, from &lt;a href=&#34;http://www.jonathanho.me/&#34;&gt;Jonathan Ho&lt;/a&gt; himself (original author of DDPMs, the core technique used in DALL-E v2) for high resolution image synthesis.&lt;/p&gt; &#xA;&lt;p&gt;This can easily be used within this framework as so&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import Unet, Decoder, CLIP&#xA;&#xA;# trained clip from step 1&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;).cuda()&#xA;&#xA;# 2 unets for the decoder (a la cascading DDPM)&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16)&#xA;).cuda()&#xA;&#xA;# decoder, which contains the unet(s) and clip&#xA;&#xA;decoder = Decoder(&#xA;    clip = clip,&#xA;    unet = (unet1, unet2),            # insert both unets in order of low resolution to highest resolution (you can have as many stages as you want here)&#xA;    image_sizes = (256, 512),         # resolutions, 256 for first unet, 512 for second. these must be unique and in ascending order (matches with the unets passed in)&#xA;    timesteps = 1000,&#xA;    image_cond_drop_prob = 0.1,&#xA;    text_cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this)&#xA;&#xA;images = torch.randn(4, 3, 512, 512).cuda()&#xA;&#xA;# feed images into decoder, specifying which unet you want to train&#xA;# each unet can be trained separately, which is one of the benefits of the cascading DDPM scheme&#xA;&#xA;loss = decoder(images, unet_number = 1)&#xA;loss.backward()&#xA;&#xA;loss = decoder(images, unet_number = 2)&#xA;loss.backward()&#xA;&#xA;# do the above for many steps for both unets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, to generate the DALL-E2 images from text. Insert the trained &lt;code&gt;DiffusionPrior&lt;/code&gt; as well as the &lt;code&gt;Decoder&lt;/code&gt; (which wraps &lt;code&gt;CLIP&lt;/code&gt;, the causal transformer, and unet(s))&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dalle2_pytorch import DALLE2&#xA;&#xA;dalle2 = DALLE2(&#xA;    prior = diffusion_prior,&#xA;    decoder = decoder&#xA;)&#xA;&#xA;# send the text as a string if you want to use the simple tokenizer from DALLE v1&#xA;# or you can do it as token ids, if you have your own tokenizer&#xA;&#xA;texts = [&#39;glistening morning dew on a flower petal&#39;]&#xA;images = dalle2(texts) # (1, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it!&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s see the whole script below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DALLE2, DiffusionPriorNetwork, DiffusionPrior, Unet, Decoder, CLIP&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# train&#xA;&#xA;loss = clip(&#xA;    text,&#xA;    images,&#xA;    return_loss = True&#xA;)&#xA;&#xA;loss.backward()&#xA;&#xA;# do above for many steps ...&#xA;&#xA;# prior networks (with transformer)&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2&#xA;).cuda()&#xA;&#xA;loss = diffusion_prior(text, images)&#xA;loss.backward()&#xA;&#xA;# do above for many steps ...&#xA;&#xA;# decoder (with unet)&#xA;&#xA;unet1 = Unet(&#xA;    dim = 128,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults=(1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;unet2 = Unet(&#xA;    dim = 16,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16)&#xA;).cuda()&#xA;&#xA;decoder = Decoder(&#xA;    unet = (unet1, unet2),&#xA;    image_sizes = (128, 256),&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    image_cond_drop_prob = 0.1,&#xA;    text_cond_drop_prob = 0.5,&#xA;    condition_on_text_encodings = False  # set this to True if you wish to condition on text during training and sampling&#xA;).cuda()&#xA;&#xA;for unet_number in (1, 2):&#xA;    loss = decoder(images, unet_number = unet_number) # this can optionally be decoder(images, text) if you wish to condition on the text encodings as well, though it was hinted in the paper it didn&#39;t do much&#xA;    loss.backward()&#xA;&#xA;# do above for many steps&#xA;&#xA;dalle2 = DALLE2(&#xA;    prior = diffusion_prior,&#xA;    decoder = decoder&#xA;)&#xA;&#xA;images = dalle2(&#xA;    [&#39;cute puppy chasing after a squirrel&#39;],&#xA;    cond_scale = 2. # classifier free guidance strength (&amp;gt; 1 would strengthen the condition)&#xA;)&#xA;&#xA;# save your image (in this example, of size 256x256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everything in this readme should run without error&lt;/p&gt; &#xA;&lt;p&gt;You can also train the decoder on images of greater than the size (say 512x512) at which CLIP was trained (256x256). The images will be resized to CLIP image resolution for the image embeddings&lt;/p&gt; &#xA;&lt;p&gt;For the layperson, no worries, training will all be automated into a CLI tool, at least for small scale training.&lt;/p&gt; &#xA;&lt;h2&gt;Training on Preprocessed CLIP Embeddings&lt;/h2&gt; &#xA;&lt;p&gt;It is likely, when scaling up, that you would first preprocess your images and text into corresponding embeddings before training the prior network. You can do so easily by simply passing in &lt;code&gt;image_embed&lt;/code&gt;, &lt;code&gt;text_embed&lt;/code&gt;, and optionally &lt;code&gt;text_encodings&lt;/code&gt; and &lt;code&gt;text_mask&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Working example below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DiffusionPriorNetwork, DiffusionPrior, CLIP&#xA;&#xA;# get trained CLIP from step one&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8,&#xA;).cuda()&#xA;&#xA;# setup prior network, which contains an autoregressive transformer&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;# diffusion prior network, which contains the CLIP and network (with transformer) above&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2,&#xA;    condition_on_text_encodings = False  # this probably should be true, but just to get Laion started&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# precompute the text and image embeddings&#xA;# here using the diffusion prior class, but could be done with CLIP alone&#xA;&#xA;clip_image_embeds = diffusion_prior.clip.embed_image(images).image_embed&#xA;clip_text_embeds = diffusion_prior.clip.embed_text(text).text_embed&#xA;&#xA;# feed text and images into diffusion prior network&#xA;&#xA;loss = diffusion_prior(&#xA;    text_embed = clip_text_embeds,&#xA;    image_embed = clip_image_embeds&#xA;)&#xA;&#xA;loss.backward()&#xA;&#xA;# do the above for many many many steps&#xA;# now the diffusion prior can generate image embeddings from the text embeddings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also completely go &lt;code&gt;CLIP&lt;/code&gt;-less, in which case you will need to pass in the &lt;code&gt;image_embed_dim&lt;/code&gt; into the &lt;code&gt;DiffusionPrior&lt;/code&gt; on initialization&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DiffusionPriorNetwork, DiffusionPrior&#xA;&#xA;# setup prior network, which contains an autoregressive transformer&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;# diffusion prior network, which contains the CLIP and network (with transformer) above&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    image_embed_dim = 512,               # this needs to be set&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2,&#xA;    condition_on_text_encodings = False  # this probably should be true, but just to get Laion started&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# precompute the text and image embeddings&#xA;# here using the diffusion prior class, but could be done with CLIP alone&#xA;&#xA;clip_image_embeds = torch.randn(4, 512).cuda()&#xA;clip_text_embeds = torch.randn(4, 512).cuda()&#xA;&#xA;# feed text and images into diffusion prior network&#xA;&#xA;loss = diffusion_prior(&#xA;    text_embed = clip_text_embeds,&#xA;    image_embed = clip_image_embeds&#xA;)&#xA;&#xA;loss.backward()&#xA;&#xA;# do the above for many many many steps&#xA;# now the diffusion prior can generate image embeddings from the text embeddings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OpenAI CLIP&lt;/h2&gt; &#xA;&lt;p&gt;Although there is the possibility they are using an unreleased, more powerful CLIP, you can use one of the released ones, if you do not wish to train your own CLIP from scratch. This will also allow the community to more quickly validate the conclusions of the paper.&lt;/p&gt; &#xA;&lt;p&gt;To use a pretrained OpenAI CLIP, simply import &lt;code&gt;OpenAIClipAdapter&lt;/code&gt; and pass it into the &lt;code&gt;DiffusionPrior&lt;/code&gt; or &lt;code&gt;Decoder&lt;/code&gt; like so&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DALLE2, DiffusionPriorNetwork, DiffusionPrior, Unet, Decoder, OpenAIClipAdapter&#xA;&#xA;# openai pretrained clip - defaults to ViT-B/32&#xA;&#xA;clip = OpenAIClipAdapter()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (4, 256)).cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# prior networks (with transformer)&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2&#xA;).cuda()&#xA;&#xA;loss = diffusion_prior(text, images)&#xA;loss.backward()&#xA;&#xA;# do above for many steps ...&#xA;&#xA;# decoder (with unet)&#xA;&#xA;unet1 = Unet(&#xA;    dim = 128,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults=(1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;unet2 = Unet(&#xA;    dim = 16,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16)&#xA;).cuda()&#xA;&#xA;decoder = Decoder(&#xA;    unet = (unet1, unet2),&#xA;    image_sizes = (128, 256),&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    image_cond_drop_prob = 0.1,&#xA;    text_cond_drop_prob = 0.5,&#xA;    condition_on_text_encodings = False  # set this to True if you wish to condition on text during training and sampling&#xA;).cuda()&#xA;&#xA;for unet_number in (1, 2):&#xA;    loss = decoder(images, unet_number = unet_number) # this can optionally be decoder(images, text) if you wish to condition on the text encodings as well, though it was hinted in the paper it didn&#39;t do much&#xA;    loss.backward()&#xA;&#xA;# do above for many steps&#xA;&#xA;dalle2 = DALLE2(&#xA;    prior = diffusion_prior,&#xA;    decoder = decoder&#xA;)&#xA;&#xA;images = dalle2(&#xA;    [&#39;a butterfly trying to escape a tornado&#39;],&#xA;    cond_scale = 2. # classifier free guidance strength (&amp;gt; 1 would strengthen the condition)&#xA;)&#xA;&#xA;# save your image (in this example, of size 256x256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you&#39;ll just have to worry about training the Prior and the Decoder!&lt;/p&gt; &#xA;&lt;h2&gt;Experimental&lt;/h2&gt; &#xA;&lt;h3&gt;DALL-E2 with Latent Diffusion&lt;/h3&gt; &#xA;&lt;p&gt;This repository decides to take the next step and offer DALL-E v2 combined with &lt;a href=&#34;https://huggingface.co/spaces/multimodalart/latentdiffusion&#34;&gt;latent diffusion&lt;/a&gt;, from Rombach et al.&lt;/p&gt; &#xA;&lt;p&gt;You can use it as follows. Latent diffusion can be limited to just the first U-Net in the cascade, or to any number you wish.&lt;/p&gt; &#xA;&lt;p&gt;The repository also comes equipped with all the necessary settings to recreate &lt;code&gt;ViT-VQGan&lt;/code&gt; from the &lt;a href=&#34;https://arxiv.org/abs/2110.04627&#34;&gt;Improved VQGans&lt;/a&gt; paper. Furthermore, the &lt;a href=&#34;https://github.com/lucidrains/vector-quantize-pytorch&#34;&gt;vector quantization&lt;/a&gt; library also comes equipped to do &lt;a href=&#34;https://arxiv.org/abs/2203.01941&#34;&gt;residual or multi-headed quantization&lt;/a&gt;, which I believe will give an even further boost in performance to the autoencoder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import Unet, Decoder, CLIP, VQGanVAE&#xA;&#xA;# trained clip from step 1&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 1,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 1,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;)&#xA;&#xA;# 3 unets for the decoder (a la cascading DDPM)&#xA;&#xA;# first two unets are doing latent diffusion&#xA;# vqgan-vae must be trained beforehand&#xA;&#xA;vae1 = VQGanVAE(&#xA;    dim = 32,&#xA;    image_size = 256,&#xA;    layers = 3,&#xA;    layer_mults = (1, 2, 4)&#xA;)&#xA;&#xA;vae2 = VQGanVAE(&#xA;    dim = 32,&#xA;    image_size = 512,&#xA;    layers = 3,&#xA;    layer_mults = (1, 2, 4)&#xA;)&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    image_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    sparse_attn = True,&#xA;    sparse_attn_window = 2,&#xA;    dim_mults = (1, 2, 4, 8)&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    image_embed_dim = 512,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16),&#xA;    cond_on_image_embeds = True,&#xA;    cond_on_text_encodings = False&#xA;)&#xA;&#xA;unet3 = Unet(&#xA;    dim = 32,&#xA;    image_embed_dim = 512,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16),&#xA;    cond_on_image_embeds = True,&#xA;    cond_on_text_encodings = False,&#xA;    attend_at_middle = False&#xA;)&#xA;&#xA;# decoder, which contains the unet(s) and clip&#xA;&#xA;decoder = Decoder(&#xA;    clip = clip,&#xA;    vae = (vae1, vae2),                # latent diffusion for unet1 (vae1) and unet2 (vae2), but not for the last unet3&#xA;    unet = (unet1, unet2, unet3),      # insert unets in order of low resolution to highest resolution (you can have as many stages as you want here)&#xA;    image_sizes = (256, 512, 1024),    # resolutions, 256 for first unet, 512 for second, 1024 for third&#xA;    timesteps = 100,&#xA;    image_cond_drop_prob = 0.1,&#xA;    text_cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this)&#xA;&#xA;images = torch.randn(1, 3, 1024, 1024).cuda()&#xA;&#xA;# feed images into decoder, specifying which unet you want to train&#xA;# each unet can be trained separately, which is one of the benefits of the cascading DDPM scheme&#xA;&#xA;with decoder.one_unet_in_gpu(1):&#xA;    loss = decoder(images, unet_number = 1)&#xA;    loss.backward()&#xA;&#xA;with decoder.one_unet_in_gpu(2):&#xA;    loss = decoder(images, unet_number = 2)&#xA;    loss.backward()&#xA;&#xA;with decoder.one_unet_in_gpu(3):&#xA;    loss = decoder(images, unet_number = 3)&#xA;    loss.backward()&#xA;&#xA;# do the above for many steps for both unets&#xA;&#xA;# then it will learn to generate images based on the CLIP image embeddings&#xA;&#xA;# chaining the unets from lowest resolution to highest resolution (thus cascading)&#xA;&#xA;mock_image_embed = torch.randn(1, 512).cuda()&#xA;images = decoder.sample(mock_image_embed) # (1, 3, 1024, 1024)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training wrapper&lt;/h2&gt; &#xA;&lt;h3&gt;Decoder Training&lt;/h3&gt; &#xA;&lt;p&gt;Training the &lt;code&gt;Decoder&lt;/code&gt; may be confusing, as one needs to keep track of an optimizer for each of the &lt;code&gt;Unet&lt;/code&gt;(s) separately. Each &lt;code&gt;Unet&lt;/code&gt; will also need its own corresponding exponential moving average. The &lt;code&gt;DecoderTrainer&lt;/code&gt; hopes to make this simple, as shown below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DALLE2, Unet, Decoder, CLIP, DecoderTrainer&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (32, 256)).cuda()&#xA;images = torch.randn(32, 3, 256, 256).cuda()&#xA;&#xA;# decoder (with unet)&#xA;&#xA;unet1 = Unet(&#xA;    dim = 128,&#xA;    image_embed_dim = 512,&#xA;    text_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults=(1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;unet2 = Unet(&#xA;    dim = 16,&#xA;    image_embed_dim = 512,&#xA;    text_embed_dim = 512,&#xA;    cond_dim = 128,&#xA;    channels = 3,&#xA;    dim_mults = (1, 2, 4, 8, 16),&#xA;    cond_on_text_encodings = True&#xA;).cuda()&#xA;&#xA;decoder = Decoder(&#xA;    unet = (unet1, unet2),&#xA;    image_sizes = (128, 256),&#xA;    clip = clip,&#xA;    timesteps = 1000,&#xA;    condition_on_text_encodings = True&#xA;).cuda()&#xA;&#xA;decoder_trainer = DecoderTrainer(&#xA;    decoder,&#xA;    lr = 3e-4,&#xA;    wd = 1e-2,&#xA;    ema_beta = 0.99,&#xA;    ema_update_after_step = 1000,&#xA;    ema_update_every = 10,&#xA;)&#xA;&#xA;for unet_number in (1, 2):&#xA;    loss = decoder_trainer(&#xA;        images,&#xA;        text = text,&#xA;        unet_number = unet_number, # which unet to train on&#xA;        max_batch_size = 4         # gradient accumulation - this sets the maximum batch size in which to do forward and backwards pass - for this example 32 / 4 == 8 times&#xA;    )&#xA;&#xA;    decoder_trainer.update(unet_number) # update the specific unet as well as its exponential moving average&#xA;&#xA;# after much training&#xA;# you can sample from the exponentially moving averaged unets as so&#xA;&#xA;mock_image_embed = torch.randn(4, 512).cuda()&#xA;images = decoder_trainer.sample(mock_image_embed, text = text) # (4, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Diffusion Prior Training&lt;/h3&gt; &#xA;&lt;p&gt;Similarly, one can use the &lt;code&gt;DiffusionPriorTrainer&lt;/code&gt; to automatically instantiate and keep track of an exponential moving averaged prior.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import DALLE2, DiffusionPriorNetwork, DiffusionPrior, DiffusionPriorTrainer, Unet, Decoder, CLIP&#xA;&#xA;clip = CLIP(&#xA;    dim_text = 512,&#xA;    dim_image = 512,&#xA;    dim_latent = 512,&#xA;    num_text_tokens = 49408,&#xA;    text_enc_depth = 6,&#xA;    text_seq_len = 256,&#xA;    text_heads = 8,&#xA;    visual_enc_depth = 6,&#xA;    visual_image_size = 256,&#xA;    visual_patch_size = 32,&#xA;    visual_heads = 8&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;text = torch.randint(0, 49408, (512, 256)).cuda()&#xA;images = torch.randn(512, 3, 256, 256).cuda()&#xA;&#xA;# prior networks (with transformer)&#xA;&#xA;prior_network = DiffusionPriorNetwork(&#xA;    dim = 512,&#xA;    depth = 6,&#xA;    dim_head = 64,&#xA;    heads = 8&#xA;).cuda()&#xA;&#xA;diffusion_prior = DiffusionPrior(&#xA;    net = prior_network,&#xA;    clip = clip,&#xA;    timesteps = 100,&#xA;    cond_drop_prob = 0.2&#xA;).cuda()&#xA;&#xA;diffusion_prior_trainer = DiffusionPriorTrainer(&#xA;    diffusion_prior,&#xA;    lr = 3e-4,&#xA;    wd = 1e-2,&#xA;    ema_beta = 0.99,&#xA;    ema_update_after_step = 1000,&#xA;    ema_update_every = 10,&#xA;)&#xA;&#xA;loss = diffusion_prior_trainer(text, images, max_batch_size = 4)&#xA;diffusion_prior_trainer.update()  # this will update the optimizer as well as the exponential moving averaged diffusion prior&#xA;&#xA;# after much of the above three lines in a loop&#xA;# you can sample from the exponential moving average of the diffusion prior identically to how you do so for DiffusionPrior&#xA;&#xA;image_embeds = diffusion_prior_trainer.sample(text, max_batch_size = 4) # (512, 512) - exponential moving averaged image embeddings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bonus&lt;/h2&gt; &#xA;&lt;h3&gt;Unconditional Training&lt;/h3&gt; &#xA;&lt;p&gt;The repository also contains the means to train unconditional DDPM model, or even cascading DDPMs. You simply have to set &lt;code&gt;unconditional = True&lt;/code&gt; in the &lt;code&gt;Decoder&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from dalle2_pytorch import Unet, Decoder, DecoderTrainer&#xA;&#xA;# unet for the cascading ddpm&#xA;&#xA;unet1 = Unet(&#xA;    dim = 128,&#xA;    dim_mults=(1, 2, 4, 8)&#xA;).cuda()&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    dim_mults = (1, 2, 4, 8, 16)&#xA;).cuda()&#xA;&#xA;# decoder, which contains the unets&#xA;&#xA;decoder = Decoder(&#xA;    unet = (unet1, unet2),&#xA;    image_sizes = (256, 512),  # first unet up to 256px, then second to 512px&#xA;    timesteps = 1000,&#xA;    unconditional = True&#xA;).cuda()&#xA;&#xA;# decoder trainer&#xA;&#xA;decoder_trainer = DecoderTrainer(decoder)&#xA;&#xA;# images (get a lot of this)&#xA;&#xA;images = torch.randn(1, 3, 512, 512).cuda()&#xA;&#xA;# feed images into decoder&#xA;&#xA;for i in (1, 2):&#xA;    loss = decoder_trainer(images, unet_number = i)&#xA;    decoder_trainer.update(unet_number = i)&#xA;&#xA;# do the above for many many many many images&#xA;# then it will learn to generate images&#xA;&#xA;images = decoder_trainer.sample(batch_size = 36, max_batch_size = 4) # (36, 3, 512, 512)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dataloaders&lt;/h2&gt; &#xA;&lt;h3&gt;Decoder Dataloaders&lt;/h3&gt; &#xA;&lt;p&gt;In order to make loading data simple and efficient, we include some general dataloaders that can be used to train portions of the network.&lt;/p&gt; &#xA;&lt;h4&gt;Decoder: Image Embedding Dataset&lt;/h4&gt; &#xA;&lt;p&gt;When training the decoder (and up samplers if training together) in isolation, you will need to load images and corresponding image embeddings. This dataset can read two similar types of datasets. First, it can read a &lt;a href=&#34;https://github.com/webdataset/webdataset&#34;&gt;webdataset&lt;/a&gt; that contains &lt;code&gt;.jpg&lt;/code&gt; and &lt;code&gt;.npy&lt;/code&gt; files in the &lt;code&gt;.tar&lt;/code&gt;s that contain the images and associated image embeddings respectively. Alternatively, you can also specify a source for the embeddings outside of the webdataset. In this case, the path to the embeddings should contain &lt;code&gt;.npy&lt;/code&gt; files with the same shard numbers as the webdataset and there should be a correspondence between the filename of the &lt;code&gt;.jpg&lt;/code&gt; and the index of the embedding in the &lt;code&gt;.npy&lt;/code&gt;. So, for example, &lt;code&gt;0001.tar&lt;/code&gt; from the webdataset with image &lt;code&gt;00010509.jpg&lt;/code&gt; (the first 4 digits are the shard number and the last 4 are the index) in it should be paralleled by a &lt;code&gt;img_emb_0001.npy&lt;/code&gt; which contains a NumPy array with the embedding at index 509.&lt;/p&gt; &#xA;&lt;p&gt;Generating a dataset of this type:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/rom1504/img2dataset&#34;&gt;img2dataset&lt;/a&gt; to generate a webdataset.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/rom1504/clip-retrieval&#34;&gt;clip-retrieval&lt;/a&gt; to convert the images to embeddings.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/Veldrovive/embedding-dataset-reordering&#34;&gt;embedding-dataset-reordering&lt;/a&gt; to reorder the embeddings into the expected format.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dalle2_pytorch.dataloaders import ImageEmbeddingDataset, create_image_embedding_dataloader&#xA;&#xA;# Create a dataloader directly.&#xA;dataloader = create_image_embedding_dataloader(&#xA;    tar_url=&#34;/path/or/url/to/webdataset/{0000..9999}.tar&#34;, # Uses braket expanding notation. This specifies to read all tars from 0000.tar to 9999.tar&#xA;    embeddings_url=&#34;path/or/url/to/embeddings/folder&#34;,     # Included if .npy files are not in webdataset. Left out or set to None otherwise&#xA;    num_workers=4,&#xA;    batch_size=32,&#xA;    shard_width=4,                                         # If a file in the webdataset shard 3 is named 0003039.jpg, we know the shard width is 4 and the last three digits are the index&#xA;    shuffle_num=200,                                       # Does a shuffle of the data with a buffer size of 200&#xA;    shuffle_shards=True,                                   # Shuffle the order the shards are read in&#xA;    resample_shards=False,                                 # Sample shards with replacement. If true, an epoch will be infinite unless stopped manually&#xA;)&#xA;for img, emb in dataloader:&#xA;    print(img.shape)  # torch.Size([32, 3, 256, 256])&#xA;    print(emb.shape)  # torch.Size([32, 512])&#xA;    # Train decoder only as shown above&#xA;&#xA;# Or create a dataset without a loader so you can configure it manually&#xA;dataset = ImageEmbeddingDataset(&#xA;    urls=&#34;/path/or/url/to/webdataset/{0000..9999}.tar&#34;,&#xA;    embedding_folder_url=&#34;path/or/url/to/embeddings/folder&#34;,&#xA;    shard_width=4,&#xA;    shuffle_shards=True,&#xA;    resample=False&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scripts (wip)&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;train_diffusion_prior.py&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This script allows training the DiffusionPrior on pre-computed text and image embeddings. The working example below elucidates this process. Please note that the script internally passes text_embed and image_embed to the DiffusionPrior, unlike the example below.&lt;/p&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python train_diffusion_prior.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The most significant parameters for the script are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image-embed-url&lt;/code&gt;, default = &lt;code&gt;&#34;https://mystic.the-eye.eu/public/AI/cah/laion5b/embeddings/laion2B-en/img_emb/&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;text-embed-url&lt;/code&gt;, default = &lt;code&gt;&#34;https://mystic.the-eye.eu/public/AI/cah/laion5b/embeddings/laion2B-en/text_emb/&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image-embed-dim&lt;/code&gt;, default = &lt;code&gt;768&lt;/code&gt; - 768 corresponds to the ViT iL/14 embedding size,change it to what your chosen ViT generates&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;learning-rate&lt;/code&gt;, default = &lt;code&gt;1.1e-4&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;weight-decay&lt;/code&gt;, default = &lt;code&gt;6.02e-2&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;max-grad-norm&lt;/code&gt;, default = &lt;code&gt;0.5&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;batch-size&lt;/code&gt;, default = &lt;code&gt;10 ** 4&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;num-epochs&lt;/code&gt;, default = &lt;code&gt;5&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;clip&lt;/code&gt;, default = &lt;code&gt;None&lt;/code&gt; # Signals the prior to use pre-computed embeddings&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Loading and Saving the DiffusionPrior model&lt;/h4&gt; &#xA;&lt;p&gt;Two methods are provided, load_diffusion_model and save_diffusion_model, the names being self-explanatory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dalle2_pytorch.train import load_diffusion_model, save_diffusion_model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Loading&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;load_diffusion_model(dprior_path, device) &#xA;    dprior_path : path to saved model(.pth)&#xA;    device      : the cuda device you&#39;re running on&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Saving&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;save_diffusion_model(save_path, model, optimizer, scaler, config, image_embed_dim)&#xA;    save_path : path to save at&#xA;    model     : object of Diffusion_Prior&#xA;    optimizer : optimizer object - see train_diffusion_prior.py for how to create one. &#xA;        e.g: optimizer = get_optimizer(diffusion_prior.net.parameters(), wd=weight_decay, lr=learning_rate)&#xA;    scaler    : a GradScaler object.&#xA;        e.g: scaler = GradScaler(enabled=amp)&#xA;    config    : config object created in train_diffusion_prior.py - see file for example. &#xA;    image_embed_dim - the dimension of the image_embedding&#xA;        e.g: 768&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI (wip)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dream &#39;sharing a sunset at the summit of mount everest with my dog&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once built, images will be saved to the same directory the command is invoked&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/big-sleep&#34;&gt;template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Training CLI (wip)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/stylegan2-pytorch&#34;&gt;template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;p&gt;This library would not have gotten to this working state without the help of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nousr&#34;&gt;Zion&lt;/a&gt; and &lt;a href=&#34;https://github.com/krish240574&#34;&gt;Kumar&lt;/a&gt; for the diffusion training script&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Veldrovive&#34;&gt;Aidan&lt;/a&gt; for the decoder training script and dataloaders&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rom1504&#34;&gt;Romain&lt;/a&gt; for the pull request reviews and project management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ciaohe&#34;&gt;He Cao&lt;/a&gt; and &lt;a href=&#34;https://github.com/xiankgx&#34;&gt;xiankgx&lt;/a&gt; for the Q&amp;amp;A and for identifying of critical bugs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine&lt;/a&gt; for her advice&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;Stability AI&lt;/a&gt; for the generous sponsorship&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;... and many others. Thank you! üôè&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; finish off gaussian diffusion class for latent embedding - allow for prediction of epsilon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add what was proposed in the paper, where DDPM objective for image latent embedding predicts x0 directly (reread vq-diffusion paper and get caught up on that line of work)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make sure it works end to end to produce an output tensor, taking a single gradient step&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; augment unet so that it can also be conditioned on text encodings (although in paper they hinted this didn&#39;t make much a difference)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; figure out all the current bag of tricks needed to make DDPMs great (starting with the blur trick mentioned in paper)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; build the cascading ddpm by having Decoder class manage multiple unets at different resolutions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add efficient attention in unet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; be able to finely customize what to condition on (text, image embed) for specific unet in the cascade (super resolution ddpms near the end may not need too much conditioning)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; offload unets not being trained on to CPU for memory efficiency (for training each resolution unets separately)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; build out latent diffusion architecture, with the vq-reg variant (vqgan-vae), make it completely optional and compatible with cascading ddpms&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; for decoder, allow ability to customize objective (predict epsilon vs x0), in case latent diffusion does better with prediction of x0&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use attention-based upsampling &lt;a href=&#34;https://arxiv.org/abs/2112.11435&#34;&gt;https://arxiv.org/abs/2112.11435&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use inheritance just this once for sharing logic between decoder and prior network ddpms&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bring in vit-vqgan &lt;a href=&#34;https://arxiv.org/abs/2110.04627&#34;&gt;https://arxiv.org/abs/2110.04627&lt;/a&gt; for the latent diffusion&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; abstract interface for CLIP adapter class, so other CLIPs can be brought in&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; take care of mixed precision as well as gradient accumulation within decoder trainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; just take care of the training for the decoder in a wrapper class, as each unet in the cascade will need its own optimizer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bring in tools to train vqgan-vae&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add convnext backbone for vqgan-vae (in addition to vit [vit-vqgan] + resnet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make sure DDPMs can be run with traditional resnet blocks (but leave convnext as an option for experimentation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make sure for the latter unets in the cascade, one can train on crops for learning super resolution (constrain the unet to be only convolutions in that case, or allow conv-like attention with rel pos bias)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; offer setting in diffusion prior to split time and image embeddings into multiple tokens, configurable, for more surface area during attention&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make sure resnet hyperparameters can be configurable across unet depth (groups and expansion factor)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pull logic for training diffusion prior into a class DiffusionPriorTrainer, for eventual script based + CLI based training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make sure the cascading ddpm in the repository can be trained unconditionally, offer a one-line CLI tool for training on a folder of images&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bring in cross-scale embedding from iclr paper &lt;a href=&#34;https://github.com/lucidrains/vit-pytorch/raw/main/vit_pytorch/crossformer.py#L14&#34;&gt;https://github.com/lucidrains/vit-pytorch/blob/main/vit_pytorch/crossformer.py#L14&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cross embed layers for downsampling, as an option&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use an experimental tracker agnostic setup, as done &lt;a href=&#34;https://github.com/lucidrains/tf-bind-transformer#simple-trainer-class-for-fine-tuning&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use pydantic for config drive training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; for both diffusion prior and decoder, all exponential moving averaged models needs to be saved and restored as well (as well as the step number)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; offer save / load methods on the trainer classes to automatically take care of state dicts for scalers / optimizers / saving versions and checking for breaking changes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; allow for creation of diffusion prior model off pydantic config classes - consider the same for tracker configs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; become an expert with unets, cleanup unet code, make it fully configurable, port all learnings over to &lt;a href=&#34;https://github.com/lucidrains/x-unet&#34;&gt;https://github.com/lucidrains/x-unet&lt;/a&gt; (test out unet¬≤ in ddpm repo) - consider &lt;a href=&#34;https://github.com/lucidrains/uformer-pytorch&#34;&gt;https://github.com/lucidrains/uformer-pytorch&lt;/a&gt; attention-based unet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; transcribe code to Jax, which lowers the activation energy for distributed training, given access to TPUs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; train on a toy task, offer in colab&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; think about how best to design a declarative training config that handles preencoding for prior and training of multiple networks in decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; extend diffusion head to use diffusion-gan (potentially using lightweight-gan) to speed up inference&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; figure out if possible to augment with external memory, as described in &lt;a href=&#34;https://arxiv.org/abs/2204.11824&#34;&gt;https://arxiv.org/abs/2204.11824&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; test out grid attention in cascading ddpm locally, decide whether to keep or remove &lt;a href=&#34;https://arxiv.org/abs/2204.01697&#34;&gt;https://arxiv.org/abs/2204.01697&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; interface out the vqgan-vae so a pretrained one can be pulled off the shelf to validate latent diffusion + DALL-E2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; make sure FILIP works with DALL-E2 from x-clip &lt;a href=&#34;https://arxiv.org/abs/2111.07783&#34;&gt;https://arxiv.org/abs/2111.07783&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; bring in skip-layer excitatons (from lightweight gan paper) to see if it helps for either decoder of unet or vqgan-vae training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; decoder needs one day worth of refactor for tech debt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; allow for unet to be able to condition non-cross attention style as well&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; read the paper, figure it out, and build it &lt;a href=&#34;https://github.com/lucidrains/DALLE2-pytorch/issues/89&#34;&gt;https://github.com/lucidrains/DALLE2-pytorch/issues/89&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{ramesh2022,&#xA;    title   = {Hierarchical Text-Conditional Image Generation with CLIP Latents}, &#xA;    author  = {Aditya Ramesh et al},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{crowson2022,&#xA;    author  = {Katherine Crowson},&#xA;    url     = {https://twitter.com/rivershavewings}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{rombach2021highresolution,&#xA;    title   = {High-Resolution Image Synthesis with Latent Diffusion Models}, &#xA;    author  = {Robin Rombach and Andreas Blattmann and Dominik Lorenz and Patrick Esser and Bj√∂rn Ommer},&#xA;    year    = {2021},&#xA;    eprint  = {2112.10752},&#xA;    archivePrefix = {arXiv},&#xA;    primaryClass = {cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{shen2019efficient,&#xA;    author  = {Zhuoran Shen and Mingyuan Zhang and Haiyu Zhao and Shuai Yi and Hongsheng Li},&#xA;    title   = {Efficient Attention: Attention with Linear Complexities},&#xA;    journal = {CoRR},&#xA;    year    = {2018},&#xA;    url     = {http://arxiv.org/abs/1812.01243},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Tu2022MaxViTMV,&#xA;    title   = {MaxViT: Multi-Axis Vision Transformer},&#xA;    author  = {Zhengzhong Tu and Hossein Talebi and Han Zhang and Feng Yang and Peyman Milanfar and Alan Conrad Bovik and Yinxiao Li},&#xA;    year    = {2022},&#xA;    url     = {https://arxiv.org/abs/2204.01697}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Yu2021VectorquantizedIM,&#xA;    title   = {Vector-quantized Image Modeling with Improved VQGAN},&#xA;    author  = {Jiahui Yu and Xin Li and Jing Yu Koh and Han Zhang and Ruoming Pang and James Qin and Alexander Ku and Yuanzhong Xu and Jason Baldridge and Yonghui Wu},&#xA;    journal = {ArXiv},&#xA;    year    = {2021},&#xA;    volume  = {abs/2110.04627}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Shleifer2021NormFormerIT,&#xA;    title   = {NormFormer: Improved Transformer Pretraining with Extra Normalization},&#xA;    author  = {Sam Shleifer and Jason Weston and Myle Ott},&#xA;    journal = {ArXiv},&#xA;    year    = {2021},&#xA;    volume  = {abs/2110.09456}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Yu2022CoCaCC,&#xA;    title   = {CoCa: Contrastive Captioners are Image-Text Foundation Models},&#xA;    author  = {Jiahui Yu and Zirui Wang and Vijay Vasudevan and Legg Yeung and Mojtaba Seyedhosseini and Yonghui Wu},&#xA;    journal = {ArXiv},&#xA;    year    = {2022},&#xA;    volume  = {abs/2205.01917}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{wang2021crossformer,&#xA;    title   = {CrossFormer: A Versatile Vision Transformer Hinging on Cross-scale Attention},&#xA;    author  = {Wenxiao Wang and Lu Yao and Long Chen and Binbin Lin and Deng Cai and Xiaofei He and Wei Liu},&#xA;    year    = {2021},&#xA;    eprint  = {2108.00154},&#xA;    archivePrefix = {arXiv},&#xA;    primaryClass = {cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{ho2021cascaded,&#xA;    title   = {Cascaded Diffusion Models for High Fidelity Image Generation},&#xA;    author  = {Ho, Jonathan and Saharia, Chitwan and Chan, William and Fleet, David J and Norouzi, Mohammad and Salimans, Tim},&#xA;    journal = {arXiv preprint arXiv:2106.15282},&#xA;    year    = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{Saharia2022,&#xA;    title   = {Imagen: unprecedented photorealism √ó deep level of language understanding},&#xA;    author  = {Chitwan Saharia*, William Chan*, Saurabh Saxena‚Ä†, Lala Li‚Ä†, Jay Whang‚Ä†, Emily Denton, Seyed Kamyar Seyed Ghasemipour, Burcu Karagol Ayan, S. Sara Mahdavi, Rapha Gontijo Lopes, Tim Salimans, Jonathan Ho‚Ä†, David Fleet‚Ä†, Mohammad Norouzi*},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Creating noise from data is easy; creating data from noise is generative modeling.&lt;/em&gt; - &lt;a href=&#34;https://arxiv.org/abs/2011.13456&#34;&gt;Yang Song&#39;s paper&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dataabc/weiboSpider</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/dataabc/weiboSpider</id>
    <link href="https://github.com/dataabc/weiboSpider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Êñ∞Êµ™ÂæÆÂçöÁà¨Ëô´ÔºåÁî®pythonÁà¨ÂèñÊñ∞Êµ™ÂæÆÂçöÊï∞ÊçÆ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/weibo-spider&#34;&gt;&lt;img src=&#34;https://github.com/dataabc/weiboSpider/workflows/Python%20application/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/weibo-spider&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/weibo-spider&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/weibo-spider&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/weibo-spider.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Weibo Spider&lt;/h1&gt; &#xA;&lt;p&gt;Êú¨Á®ãÂ∫èÂèØ‰ª•ËøûÁª≠Áà¨Âèñ&lt;strong&gt;‰∏Ä‰∏™&lt;/strong&gt;Êàñ&lt;strong&gt;Â§ö‰∏™&lt;/strong&gt;Êñ∞Êµ™ÂæÆÂçöÁî®Êà∑ÔºàÂ¶Ç&lt;a href=&#34;https://weibo.cn/u/1223178222&#34;&gt;ËÉ°Ê≠å&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://weibo.cn/u/1669879400&#34;&gt;Ëø™‰∏ΩÁÉ≠Â∑¥&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://weibo.cn/u/1729370543&#34;&gt;ÈÉ≠Á¢ßÂ©∑&lt;/a&gt;ÔºâÁöÑÊï∞ÊçÆÔºåÂπ∂Â∞ÜÁªìÊûú‰ø°ÊÅØÂÜôÂÖ•&lt;strong&gt;Êñá‰ª∂&lt;/strong&gt;Êàñ&lt;strong&gt;Êï∞ÊçÆÂ∫ì&lt;/strong&gt;„ÄÇÂÜôÂÖ•‰ø°ÊÅØÂá†‰πéÂåÖÊã¨Áî®Êà∑ÂæÆÂçöÁöÑÊâÄÊúâÊï∞ÊçÆÔºåÂåÖÊã¨&lt;strong&gt;Áî®Êà∑‰ø°ÊÅØ&lt;/strong&gt;Âíå&lt;strong&gt;ÂæÆÂçö‰ø°ÊÅØ&lt;/strong&gt;‰∏§Â§ßÁ±ª„ÄÇÂõ†‰∏∫ÂÜÖÂÆπÂ§™Â§öÔºåËøôÈáå‰∏çÂÜçËµòËø∞ÔºåËØ¶ÁªÜÂÜÖÂÆπËßÅ&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E5%AD%97%E6%AE%B5&#34;&gt;Ëé∑ÂèñÂà∞ÁöÑÂ≠óÊÆµ&lt;/a&gt;„ÄÇÂ¶ÇÊûúÂè™ÈúÄË¶ÅÁî®Êà∑‰ø°ÊÅØÔºåÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÂÆûÁé∞Âè™Áà¨ÂèñÂæÆÂçöÁî®Êà∑‰ø°ÊÅØÁöÑÂäüËÉΩ„ÄÇÊú¨Á®ãÂ∫èÈúÄËÆæÁΩÆcookieÊù•Ëé∑ÂèñÂæÆÂçöËÆøÈóÆÊùÉÈôêÔºåÂêéÈù¢‰ºöËÆ≤Ëß£&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96cookie&#34;&gt;Â¶Ç‰ΩïËé∑Âèñcookie&lt;/a&gt;„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥ËÆæÁΩÆcookieÔºåÂèØ‰ª•‰ΩøÁî®&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;ÂÖçcookieÁâà&lt;/a&gt;Ôºå‰∫åËÄÖÂäüËÉΩÁ±ª‰ºº„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Áà¨ÂèñÁªìÊûúÂèØÂÜôÂÖ•Êñá‰ª∂ÂíåÊï∞ÊçÆÂ∫ìÔºåÂÖ∑‰ΩìÁöÑÂÜôÂÖ•Êñá‰ª∂Á±ªÂûãÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;txtÊñá‰ª∂&lt;/strong&gt;ÔºàÈªòËÆ§Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;csvÊñá‰ª∂&lt;/strong&gt;ÔºàÈªòËÆ§Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;jsonÊñá‰ª∂&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MySQLÊï∞ÊçÆÂ∫ì&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MongoDBÊï∞ÊçÆÂ∫ì&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQLiteÊï∞ÊçÆÂ∫ì&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÂêåÊó∂ÊîØÊåÅ‰∏ãËΩΩÂæÆÂçö‰∏≠ÁöÑÂõæÁâáÂíåËßÜÈ¢ëÔºåÂÖ∑‰ΩìÁöÑÂèØ‰∏ãËΩΩÊñá‰ª∂Â¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂéüÂàõ&lt;/strong&gt;ÂæÆÂçö‰∏≠ÁöÑÂéüÂßã&lt;strong&gt;ÂõæÁâá&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ËΩ¨Âèë&lt;/strong&gt;ÂæÆÂçö‰∏≠ÁöÑÂéüÂßã&lt;strong&gt;ÂõæÁâá&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂéüÂàõ&lt;/strong&gt;ÂæÆÂçö‰∏≠ÁöÑ&lt;strong&gt;ËßÜÈ¢ë&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ËΩ¨Âèë&lt;/strong&gt;ÂæÆÂçö‰∏≠ÁöÑ&lt;strong&gt;ËßÜÈ¢ë&lt;/strong&gt;ÔºàÂèØÈÄâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂéüÂàõ&lt;/strong&gt;ÂæÆÂçö&lt;strong&gt;Live Photo&lt;/strong&gt;‰∏≠ÁöÑ&lt;strong&gt;ËßÜÈ¢ë&lt;/strong&gt;Ôºà&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;ÂÖçcookieÁâà&lt;/a&gt;ÁâπÊúâÔºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ËΩ¨Âèë&lt;/strong&gt;ÂæÆÂçö&lt;strong&gt;Live Photo&lt;/strong&gt;‰∏≠ÁöÑ&lt;strong&gt;ËßÜÈ¢ë&lt;/strong&gt;Ôºà&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;ÂÖçcookieÁâà&lt;/a&gt;ÁâπÊúâÔºâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÂÜÖÂÆπÂàóË°®&lt;/h2&gt; &#xA;&lt;p&gt;[TOC]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#weibo-spider&#34;&gt;Weibo Spider&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%86%85%E5%AE%B9%E5%88%97%E8%A1%A8&#34;&gt;ÂÜÖÂÆπÂàóË°®&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E5%AD%97%E6%AE%B5&#34;&gt;Ëé∑ÂèñÂà∞ÁöÑÂ≠óÊÆµ&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF&#34;&gt;Áî®Êà∑‰ø°ÊÅØ&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%BE%AE%E5%8D%9A%E4%BF%A1%E6%81%AF&#34;&gt;ÂæÆÂçö‰ø°ÊÅØ&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E7%A4%BA%E4%BE%8B&#34;&gt;Á§∫‰æã&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83&#34;&gt;ËøêË°åÁéØÂ¢É&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E&#34;&gt;‰ΩøÁî®ËØ¥Êòé&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#0%E7%89%88%E6%9C%AC&#34;&gt;0.ÁâàÊú¨&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#1%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F&#34;&gt;1.ÂÆâË£ÖÁ®ãÂ∫è&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85&#34;&gt;Ê∫êÁ†ÅÂÆâË£Ö&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#pip%E5%AE%89%E8%A3%85&#34;&gt;pipÂÆâË£Ö&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#2%E7%A8%8B%E5%BA%8F%E8%AE%BE%E7%BD%AE&#34;&gt;2.Á®ãÂ∫èËÆæÁΩÆ&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#3%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F&#34;&gt;3.ËøêË°åÁ®ãÂ∫è&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E4%B8%AA%E6%80%A7%E5%8C%96%E5%AE%9A%E5%88%B6%E7%A8%8B%E5%BA%8F%E5%8F%AF%E9%80%89&#34;&gt;‰∏™ÊÄßÂåñÂÆöÂà∂Á®ãÂ∫èÔºàÂèØÈÄâÔºâ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%AE%9A%E6%9C%9F%E8%87%AA%E5%8A%A8%E7%88%AC%E5%8F%96%E5%BE%AE%E5%8D%9A%E5%8F%AF%E9%80%89&#34;&gt;ÂÆöÊúüËá™Âä®Áà¨ÂèñÂæÆÂçöÔºàÂèØÈÄâÔºâ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96cookie&#34;&gt;Â¶Ç‰ΩïËé∑Âèñcookie&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96user_id&#34;&gt;Â¶Ç‰ΩïËé∑Âèñuser_id&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6&#34;&gt;Â≠¶ÊúØÁ†îÁ©∂&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E7%9B%B8%E5%85%B3%E9%A1%B9%E7%9B%AE&#34;&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E8%B4%A1%E7%8C%AE&#34;&gt;Ë¥°ÁåÆ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E8%B4%A1%E7%8C%AE%E8%80%85&#34;&gt;Ë¥°ÁåÆËÄÖ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9&#34;&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ëé∑ÂèñÂà∞ÁöÑÂ≠óÊÆµ&lt;/h2&gt; &#xA;&lt;p&gt;Êú¨ÈÉ®ÂàÜ‰∏∫Áà¨ÂèñÂà∞ÁöÑÂ≠óÊÆµ‰ø°ÊÅØËØ¥ÊòéÔºå‰∏∫‰∫Ü‰∏é&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;ÂÖçcookieÁâà&lt;/a&gt;Âå∫ÂàÜÔºå‰∏ãÈù¢Â∞Ü‰∏§ËÄÖÁà¨ÂèñÂà∞ÁöÑ‰ø°ÊÅØÈÉΩÂàóÂá∫Êù•„ÄÇÂ¶ÇÊûúÊòØÂÖçcookieÁâàÊâÄÁâπÊúâÁöÑ‰ø°ÊÅØÔºå‰ºöÊúâÂÖçcookieÊ†áÊ≥®ÔºåÊ≤°ÊúâÊ†áÊ≥®ÁöÑ‰∏∫‰∫åËÄÖÂÖ±ÊúâÁöÑ‰ø°ÊÅØ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;Áî®Êà∑‰ø°ÊÅØ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Áî®Êà∑idÔºöÂæÆÂçöÁî®Êà∑idÔºåÂ¶Ç&#34;1669879400&#34;ÔºåÂÖ∂ÂÆûËøô‰∏™Â≠óÊÆµÊú¨Êù•Â∞±ÊòØÂ∑≤Áü•Â≠óÊÆµ&lt;/li&gt; &#xA; &lt;li&gt;ÊòµÁß∞ÔºöÁî®Êà∑ÊòµÁß∞ÔºåÂ¶Ç&#34;Dear-Ëø™‰∏ΩÁÉ≠Â∑¥&#34;&lt;/li&gt; &#xA; &lt;li&gt;ÊÄßÂà´ÔºöÂæÆÂçöÁî®Êà∑ÊÄßÂà´&lt;/li&gt; &#xA; &lt;li&gt;ÁîüÊó•ÔºöÁî®Êà∑Âá∫ÁîüÊó•Êúü&lt;/li&gt; &#xA; &lt;li&gt;ÊâÄÂú®Âú∞ÔºöÁî®Êà∑ÊâÄÂú®Âú∞&lt;/li&gt; &#xA; &lt;li&gt;Â≠¶‰π†ÁªèÂéÜÔºöÁî®Êà∑‰∏äÂ≠¶Êó∂Â≠¶Ê†°ÁöÑÂêçÂ≠óÂíåÊó∂Èó¥&lt;/li&gt; &#xA; &lt;li&gt;Â∑•‰ΩúÁªèÂéÜÔºöÁî®Êà∑ÊâÄÂ±ûÂÖ¨Âè∏ÂêçÂ≠óÂíåÊó∂Èó¥&lt;/li&gt; &#xA; &lt;li&gt;Èò≥ÂÖâ‰ø°Áî®ÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑ÁöÑÈò≥ÂÖâ‰ø°Áî®&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÊ≥®ÂÜåÊó∂Èó¥ÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑ÂæÆÂçöÊ≥®ÂÜåÊó•Êúü&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÊï∞ÔºöÁî®Êà∑ÁöÑÂÖ®ÈÉ®ÂæÆÂçöÊï∞ÔºàËΩ¨ÂèëÂæÆÂçö+ÂéüÂàõÂæÆÂçöÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÂÖ≥Ê≥®Êï∞ÔºöÁî®Êà∑ÂÖ≥Ê≥®ÁöÑÂæÆÂçöÊï∞Èáè&lt;/li&gt; &#xA; &lt;li&gt;Á≤â‰∏ùÊï∞ÔºöÁî®Êà∑ÁöÑÁ≤â‰∏ùÊï∞&lt;/li&gt; &#xA; &lt;li&gt;ÁÆÄ‰ªãÔºöÁî®Êà∑ÁÆÄ‰ªã&lt;/li&gt; &#xA; &lt;li&gt;‰∏ªÈ°µÂú∞ÂùÄÔºàÂÖçcookieÁâàÔºâÔºöÂæÆÂçöÁßªÂä®Áâà‰∏ªÈ°µurl&lt;/li&gt; &#xA; &lt;li&gt;Â§¥ÂÉèurlÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑Â§¥ÂÉèurl&lt;/li&gt; &#xA; &lt;li&gt;È´òÊ∏ÖÂ§¥ÂÉèurlÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑È´òÊ∏ÖÂ§¥ÂÉèurl&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÁ≠âÁ∫ßÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑ÂæÆÂçöÁ≠âÁ∫ß&lt;/li&gt; &#xA; &lt;li&gt;‰ºöÂëòÁ≠âÁ∫ßÔºàÂÖçcookieÁâàÔºâÔºöÂæÆÂçö‰ºöÂëòÁî®Êà∑Á≠âÁ∫ßÔºåÊôÆÈÄöÁî®Êà∑ËØ•Á≠âÁ∫ß‰∏∫0&lt;/li&gt; &#xA; &lt;li&gt;ÊòØÂê¶ËÆ§ËØÅÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑ÊòØÂê¶ËÆ§ËØÅÔºå‰∏∫Â∏ÉÂ∞îÁ±ªÂûã&lt;/li&gt; &#xA; &lt;li&gt;ËÆ§ËØÅÁ±ªÂûãÔºàÂÖçcookieÁâàÔºâÔºöÁî®Êà∑ËÆ§ËØÅÁ±ªÂûãÔºåÂ¶Ç‰∏™‰∫∫ËÆ§ËØÅ„ÄÅ‰ºÅ‰∏öËÆ§ËØÅ„ÄÅÊîøÂ∫úËÆ§ËØÅÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;ËÆ§ËØÅ‰ø°ÊÅØÔºö‰∏∫ËÆ§ËØÅÁî®Êà∑ÁâπÊúâÔºåÁî®Êà∑‰ø°ÊÅØÊ†èÊòæÁ§∫ÁöÑËÆ§ËØÅ‰ø°ÊÅØ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÂæÆÂçö‰ø°ÊÅØ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂæÆÂçöidÔºöÂæÆÂçöÂîØ‰∏ÄÊ†áÂøó&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÂÜÖÂÆπÔºöÂæÆÂçöÊ≠£Êñá&lt;/li&gt; &#xA; &lt;li&gt;Â§¥Êù°ÊñáÁ´†urlÔºöÂæÆÂçö‰∏≠Â§¥Êù°ÊñáÁ´†ÁöÑurlÔºåËã•ÂæÆÂçö‰∏≠‰∏çÂ≠òÂú®Â§¥Êù°ÊñáÁ´†ÔºåÂàôÂÄº‰∏∫&#39;&#39;&lt;/li&gt; &#xA; &lt;li&gt;ÂéüÂßãÂõæÁâáurlÔºöÂéüÂàõÂæÆÂçöÂõæÁâáÂíåËΩ¨ÂèëÂæÆÂçöËΩ¨ÂèëÁêÜÁî±‰∏≠ÂõæÁâáÁöÑurlÔºåËã•ÊüêÊù°ÂæÆÂçöÂ≠òÂú®Â§öÂº†ÂõæÁâáÔºåÊØè‰∏™url‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºåËã•Ê≤°ÊúâÂõæÁâáÂàôÂÄº‰∏∫&#34;Êó†&#34;&lt;/li&gt; &#xA; &lt;li&gt;ËßÜÈ¢ëurl: ÂæÆÂçö‰∏≠ÁöÑËßÜÈ¢ëurlÔºåËã•ÂæÆÂçö‰∏≠Ê≤°ÊúâËßÜÈ¢ëÔºåÂàôÂÄº‰∏∫&#34;Êó†&#34;&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÂèëÂ∏É‰ΩçÁΩÆÔºö‰ΩçÁΩÆÂæÆÂçö‰∏≠ÁöÑÂèëÂ∏É‰ΩçÁΩÆ&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÂèëÂ∏ÉÊó∂Èó¥ÔºöÂæÆÂçöÂèëÂ∏ÉÊó∂ÁöÑÊó∂Èó¥ÔºåÁ≤æÁ°ÆÂà∞ÂàÜ&lt;/li&gt; &#xA; &lt;li&gt;ÁÇπËµûÊï∞ÔºöÂæÆÂçöË¢´ËµûÁöÑÊï∞Èáè&lt;/li&gt; &#xA; &lt;li&gt;ËΩ¨ÂèëÊï∞ÔºöÂæÆÂçöË¢´ËΩ¨ÂèëÁöÑÊï∞Èáè&lt;/li&gt; &#xA; &lt;li&gt;ËØÑËÆ∫Êï∞ÔºöÂæÆÂçöË¢´ËØÑËÆ∫ÁöÑÊï∞Èáè&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÂèëÂ∏ÉÂ∑•ÂÖ∑ÔºöÂæÆÂçöÁöÑÂèëÂ∏ÉÂ∑•ÂÖ∑ÔºåÂ¶ÇiPhoneÂÆ¢Êà∑Á´Ø„ÄÅHUAWEI Mate 20 ProÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;ÁªìÊûúÊñá‰ª∂Ôºö‰øùÂ≠òÂú®ÂΩìÂâçÁõÆÂΩïweiboÊñá‰ª∂Â§π‰∏ã‰ª•Áî®Êà∑ÊòµÁß∞‰∏∫ÂêçÁöÑÊñá‰ª∂Â§πÈáåÔºåÂêçÂ≠ó‰∏∫&#34;user_id.csv&#34;Âíå&#34;user_id.txt&#34;ÁöÑÂΩ¢Âºè&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöÂõæÁâáÔºöÂéüÂàõÂæÆÂçö‰∏≠ÁöÑÂõæÁâáÂíåËΩ¨ÂèëÂæÆÂçöËΩ¨ÂèëÁêÜÁî±‰∏≠ÁöÑÂõæÁâáÔºå‰øùÂ≠òÂú®‰ª•Áî®Êà∑ÊòµÁß∞‰∏∫ÂêçÁöÑÊñá‰ª∂Â§π‰∏ãÁöÑimgÊñá‰ª∂Â§πÈáå&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöËßÜÈ¢ëÔºöÂéüÂàõÂæÆÂçö‰∏≠ÁöÑËßÜÈ¢ëÔºå‰øùÂ≠òÂú®‰ª•Áî®Êà∑ÊòµÁß∞‰∏∫ÂêçÁöÑÊñá‰ª∂Â§π‰∏ãÁöÑvideoÊñá‰ª∂Â§πÈáå&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆÂçöbidÔºàÂÖçcookieÁâàÔºâÔºö‰∏∫&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;ÂÖçcookieÁâà&lt;/a&gt;ÊâÄÁâπÊúâÔºå‰∏éÊú¨Á®ãÂ∫è‰∏≠ÁöÑÂæÆÂçöidÊòØÂêå‰∏Ä‰∏™ÂÄº&lt;/li&gt; &#xA; &lt;li&gt;ËØùÈ¢òÔºàÂÖçcookieÁâàÔºâÔºöÂæÆÂçöËØùÈ¢òÔºåÂç≥‰∏§‰∏™#‰∏≠ÁöÑÂÜÖÂÆπÔºåËã•Â≠òÂú®Â§ö‰∏™ËØùÈ¢òÔºåÊØè‰∏™url‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºåËã•Ê≤°ÊúâÂàôÂÄº‰∏∫&#39;&#39;&lt;/li&gt; &#xA; &lt;li&gt;@Áî®Êà∑ÔºàÂÖçcookieÁâàÔºâÔºöÂæÆÂçö@ÁöÑÁî®Êà∑ÔºåËã•Â≠òÂú®Â§ö‰∏™@Áî®Êà∑ÔºåÊØè‰∏™url‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºåËã•Ê≤°ÊúâÂàôÂÄº‰∏∫&#39;&#39;&lt;/li&gt; &#xA; &lt;li&gt;ÂéüÂßãÂæÆÂçöÔºàÂÖçcookieÁâàÔºâÔºö‰∏∫ËΩ¨ÂèëÂæÆÂçöÊâÄÁâπÊúâÔºåÊòØËΩ¨ÂèëÂæÆÂçö‰∏≠ÈÇ£Êù°Ë¢´ËΩ¨ÂèëÁöÑÂæÆÂçöÔºåÂ≠òÂÇ®‰∏∫Â≠óÂÖ∏ÂΩ¢ÂºèÔºåÂåÖÂê´‰∫Ü‰∏äËø∞ÂæÆÂçö‰ø°ÊÅØ‰∏≠ÁöÑÊâÄÊúâÂÜÖÂÆπÔºåÂ¶ÇÂæÆÂçöid„ÄÅÂæÆÂçöÂÜÖÂÆπÁ≠âÁ≠â&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Á§∫‰æã&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÊÉ≥Ë¶ÅÁü•ÈÅìÁ®ãÂ∫èÁöÑÂÖ∑‰ΩìËøêË°åÁªìÊûúÔºåÂèØ‰ª•Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/example.md&#34;&gt;Á§∫‰æãÊñáÊ°£&lt;/a&gt;ÔºåËØ•ÊñáÊ°£‰ªãÁªç‰∫ÜÁà¨Âèñ&lt;a href=&#34;https://weibo.cn/u/1669879400&#34;&gt;Ëø™‰∏ΩÁÉ≠Â∑¥ÂæÆÂçö&lt;/a&gt;ÁöÑ‰æãÂ≠êÔºåÂπ∂ÈôÑÊúâÈÉ®ÂàÜÁªìÊûúÊñá‰ª∂Êà™Âõæ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ËøêË°åÁéØÂ¢É&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂºÄÂèëËØ≠Ë®ÄÔºöpython2/python3&lt;/li&gt; &#xA; &lt;li&gt;Á≥ªÁªüÔºö Windows/Linux/macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‰ΩøÁî®ËØ¥Êòé&lt;/h2&gt; &#xA;&lt;h3&gt;0.ÁâàÊú¨&lt;/h3&gt; &#xA;&lt;p&gt;Êú¨Á®ãÂ∫èÊúâ‰∏§‰∏™ÁâàÊú¨Ôºå‰Ω†Áé∞Âú®ÁúãÂà∞ÁöÑÊòØpython3ÁâàÔºåÂè¶‰∏Ä‰∏™ÊòØpython2ÁâàÔºåpython2Áâà‰Ωç‰∫é&lt;a href=&#34;https://github.com/dataabc/weiboSpider/tree/python2&#34;&gt;python2ÂàÜÊîØ&lt;/a&gt;„ÄÇÁõÆÂâç‰∏ªÂäõÂºÄÂèëpython3ÁâàÔºåÂåÖÊã¨Êñ∞ÂäüËÉΩÂºÄÂèëÂíåbug‰øÆÂ§çÔºõpython2Áâà‰ªÖÊîØÊåÅbug‰øÆÂ§ç„ÄÇÊé®Ëçêpython3Áî®Êà∑‰ΩøÁî®ÂΩìÂâçÁâàÊú¨ÔºåÊé®Ëçêpython2Áî®Êà∑‰ΩøÁî®&lt;a href=&#34;https://github.com/dataabc/weiboSpider/tree/python2&#34;&gt;python2Áâà&lt;/a&gt;ÔºåÊú¨‰ΩøÁî®ËØ¥ÊòéÊòØpython3ÁâàÁöÑ‰ΩøÁî®ËØ¥Êòé„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;1.ÂÆâË£ÖÁ®ãÂ∫è&lt;/h3&gt; &#xA;&lt;p&gt;Êú¨Á®ãÂ∫èÊèê‰æõ‰∏§ÁßçÂÆâË£ÖÊñπÂºèÔºå‰∏ÄÁßçÊòØ&lt;strong&gt;Ê∫êÁ†ÅÂÆâË£Ö&lt;/strong&gt;ÔºåÂè¶‰∏ÄÁßçÊòØ&lt;strong&gt;pipÂÆâË£Ö&lt;/strong&gt;Ôºå‰∫åËÄÖÂäüËÉΩÂÆåÂÖ®Áõ∏Âêå„ÄÇÂ¶ÇÊûú‰Ω†ÈúÄË¶Å‰øÆÊîπÊ∫êÁ†ÅÔºåÂª∫ËÆÆ‰ΩøÁî®Á¨¨‰∏ÄÁßçÊñπÂºèÔºåÂê¶ÂàôÈÄâÂì™ÁßçÂÆâË£ÖÊñπÂºèÈÉΩÂèØ‰ª•„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;Ê∫êÁ†ÅÂÆâË£Ö&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/dataabc/weiboSpider.git&#xA;$ cd weiboSpider&#xA;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;pipÂÆâË£Ö&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -m pip install weibo-spider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.Á®ãÂ∫èËÆæÁΩÆ&lt;/h3&gt; &#xA;&lt;p&gt;Ë¶Å‰∫ÜËß£Á®ãÂ∫èËÆæÁΩÆÔºåËØ∑Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/settings.md&#34;&gt;Á®ãÂ∫èËÆæÁΩÆÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;3.ËøêË°åÁ®ãÂ∫è&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ê∫êÁ†ÅÂÆâË£Ö&lt;/strong&gt;ÁöÑÁî®Êà∑ÂèØ‰ª•Âú®weiboSpiderÁõÆÂΩïËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Ôºå&lt;strong&gt;pipÂÆâË£Ö&lt;/strong&gt;ÁöÑÁî®Êà∑ÂèØ‰ª•Âú®‰ªªÊÑèÊúâÂÜôÊùÉÈôêÁöÑÁõÆÂΩïËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -m weibo_spider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Á¨¨‰∏ÄÊ¨°ÊâßË°åÔºå‰ºöËá™Âä®Âú®ÂΩìÂâçÁõÆÂΩïÂàõÂª∫config.jsonÈÖçÁΩÆÊñá‰ª∂ÔºåÈÖçÁΩÆÂ•ΩÂêéÊâßË°åÂêåÊ†∑ÁöÑÂëΩ‰ª§Â∞±ÂèØ‰ª•Ëé∑ÂèñÂæÆÂçö‰∫Ü„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†Â∑≤ÁªèÊúâconfig.jsonÊñá‰ª∂‰∫ÜÔºå‰πüÂèØ‰ª•ÈÄöËøáconfig_pathÂèÇÊï∞ÈÖçÁΩÆconfig.jsonË∑ØÂæÑÔºåËøêË°åÁ®ãÂ∫èÔºåÂëΩ‰ª§Ë°åÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -m weibo_spider --config_path=&#34;config.json&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥ÊåáÂÆöÊñá‰ª∂Ôºàcsv„ÄÅtxt„ÄÅjson„ÄÅÂõæÁâá„ÄÅËßÜÈ¢ëÔºâ‰øùÂ≠òË∑ØÂæÑÔºåÂèØ‰ª•ÈÄöËøáoutput_dirÂèÇÊï∞ËÆæÂÆö„ÄÇÂÅáÂ¶Ç‰Ω†ÊÉ≥ÊääÊñá‰ª∂‰øùÂ≠òÂà∞/home/weibo/ÁõÆÂΩïÔºåÂèØ‰ª•ËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -m weibo_spider --output_dir=&#34;/home/weibo/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥ÈÄöËøáÂëΩ‰ª§Ë°åËæìÂÖ•user_idÔºåÂèØ‰ª•‰ΩøÁî®ÂèÇÊï∞uÔºåÂèØ‰ª•ËæìÂÖ•‰∏Ä‰∏™ÊàñÂ§ö‰∏™user_idÔºåÊØè‰∏™user_id‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÂºÄÔºåÂ¶ÇÊûúËøô‰∫õuser_id‰∏≠ÊúâÈáçÂ§çÁöÑuser_idÔºåÁ®ãÂ∫è‰ºöËá™Âä®ÂéªÈáç„ÄÇÂëΩ‰ª§Ë°åÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -m weibo_spider --u=&#34;1669879400,1223178222&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Á®ãÂ∫è‰ºöËé∑Âèñuser_idÂàÜÂà´‰∏∫1669879400Âíå1223178222ÁöÑÂæÆÂçöÁî®Êà∑ÁöÑÂæÆÂçöÔºåÂêéÈù¢‰ºöËÆ≤&lt;a href=&#34;https://raw.githubusercontent.com/dataabc/weiboSpider/master/#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96user_id&#34;&gt;Â¶Ç‰ΩïËé∑Âèñuser_id&lt;/a&gt;„ÄÇËØ•ÊñπÂºèÁöÑÊâÄÊúâuser_id‰ΩøÁî®config.json‰∏≠ÁöÑsince_dateÂíåend_dateËÆæÁΩÆÔºåÈÄöËøá‰øÆÊîπÂÆÉ‰ª¨ÁöÑÂÄºÂèØ‰ª•ÊéßÂà∂Áà¨ÂèñÁöÑÊó∂Èó¥ËåÉÂõ¥„ÄÇËã•config.json‰∏≠ÁöÑuser_id_listÊòØÊñá‰ª∂Ë∑ØÂæÑÔºåÊØè‰∏™ÂëΩ‰ª§Ë°å‰∏≠ÁöÑuser_idÈÉΩ‰ºöËá™Âä®‰øùÂ≠òÂà∞ËØ•Êñá‰ª∂ÂÜÖÔºå‰∏îËá™Âä®Êõ¥Êñ∞since_dateÔºõËã•‰∏çÊòØË∑ØÂæÑÔºåuser_id‰ºö‰øùÂ≠òÂú®ÂΩìÂâçÁõÆÂΩïÁöÑuser_id_list.txtÂÜÖÔºå‰∏îËá™Âä®Êõ¥Êñ∞since_dateÔºåËã•ÂΩìÂâçÁõÆÂΩï‰∏ã‰∏çÂ≠òÂú®user_id_list.txtÔºåÁ®ãÂ∫è‰ºöËá™Âä®ÂàõÂª∫ÂÆÉ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‰∏™ÊÄßÂåñÂÆöÂà∂Á®ãÂ∫èÔºàÂèØÈÄâÔºâ&lt;/h2&gt; &#xA;&lt;p&gt;Êú¨ÈÉ®ÂàÜ‰∏∫ÂèØÈÄâÈÉ®ÂàÜÔºåÂ¶ÇÊûú‰∏çÈúÄË¶Å‰∏™ÊÄßÂåñÂÆöÂà∂Á®ãÂ∫èÊàñÊ∑ªÂä†Êñ∞ÂäüËÉΩÔºåÂèØ‰ª•ÂøΩÁï•Ê≠§ÈÉ®ÂàÜ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨Á®ãÂ∫è‰∏ª‰Ωì‰ª£Á†Å‰Ωç‰∫éweibo_spider.pyÊñá‰ª∂ÔºåÁ®ãÂ∫è‰∏ª‰ΩìÊòØ‰∏Ä‰∏™ Spider Á±ªÔºå‰∏äËø∞ÊâÄÊúâÂäüËÉΩÈÉΩÊòØÈÄöËøáÂú®mainÂáΩÊï∞Ë∞ÉÁî® Spider Á±ªÂÆûÁé∞ÁöÑÔºåÈªòËÆ§ÁöÑË∞ÉÁî®‰ª£Á†ÅÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;        config = get_config()&#xA;        wb = Spider(config)&#xA;        wb.start()  # Áà¨ÂèñÂæÆÂçö‰ø°ÊÅØ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Áî®Êà∑ÂèØ‰ª•ÊåâÁÖßËá™Â∑±ÁöÑÈúÄÊ±ÇË∞ÉÁî®Êàñ‰øÆÊîπ Spider Á±ª„ÄÇÈÄöËøáÊâßË°åÊú¨Á®ãÂ∫èÔºåÊàë‰ª¨ÂèØ‰ª•ÂæóÂà∞ÂæàÂ§ö‰ø°ÊÅØ„ÄÇ&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ÁÇπÂáªÊü•ÁúãËØ¶ÊÉÖ&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;wb.user[&#39;nickname&#39;]ÔºöÁî®Êà∑ÊòµÁß∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;gender&#39;]ÔºöÁî®Êà∑ÊÄßÂà´Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;location&#39;]ÔºöÁî®Êà∑ÊâÄÂú®Âú∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;birthday&#39;]ÔºöÁî®Êà∑Âá∫ÁîüÊó•ÊúüÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;description&#39;]ÔºöÁî®Êà∑ÁÆÄ‰ªãÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;verified_reason&#39;]ÔºöÁî®Êà∑ËÆ§ËØÅÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;talent&#39;]ÔºöÁî®Êà∑Ê†áÁ≠æÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;education&#39;]ÔºöÁî®Êà∑Â≠¶‰π†ÁªèÂéÜÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;work&#39;]ÔºöÁî®Êà∑Â∑•‰ΩúÁªèÂéÜÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;weibo_num&#39;]ÔºöÂæÆÂçöÊï∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;following&#39;]ÔºöÂÖ≥Ê≥®Êï∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;wb.user[&#39;followers&#39;]ÔºöÁ≤â‰∏ùÊï∞Ôºõ&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;wb.weibo&lt;/strong&gt;ÔºöÈô§‰∏çÂåÖÂê´‰∏äËø∞‰ø°ÊÅØÂ§ñÔºåwb.weiboÂåÖÂê´Áà¨ÂèñÂà∞ÁöÑÊâÄÊúâÂæÆÂçö‰ø°ÊÅØÔºåÂ¶Ç&lt;strong&gt;ÂæÆÂçöid&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂæÆÂçöÊ≠£Êñá&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂéüÂßãÂõæÁâáurl&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂèëÂ∏É‰ΩçÁΩÆ&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂèëÂ∏ÉÊó∂Èó¥&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂèëÂ∏ÉÂ∑•ÂÖ∑&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÁÇπËµûÊï∞&lt;/strong&gt;„ÄÅ&lt;strong&gt;ËΩ¨ÂèëÊï∞&lt;/strong&gt;„ÄÅ&lt;strong&gt;ËØÑËÆ∫Êï∞&lt;/strong&gt;Á≠â„ÄÇÂ¶ÇÊûúÁà¨ÁöÑÊòØÂÖ®ÈÉ®ÂæÆÂçö(ÂéüÂàõ+ËΩ¨Âèë)ÔºåÈô§‰∏äËø∞‰ø°ÊÅØ‰πãÂ§ñÔºåËøòÂåÖÂê´Ë¢´&lt;strong&gt;ËΩ¨ÂèëÂæÆÂçöÂéüÂßãÂõæÁâáurl&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÊòØÂê¶‰∏∫ÂéüÂàõÂæÆÂçö&lt;/strong&gt;Á≠â„ÄÇwb.weiboÊòØ‰∏Ä‰∏™ÂàóË°®ÔºåÂåÖÂê´‰∫ÜÁà¨ÂèñÁöÑÊâÄÊúâÂæÆÂçö‰ø°ÊÅØ„ÄÇwb.weibo[0]‰∏∫Áà¨ÂèñÁöÑÁ¨¨‰∏ÄÊù°ÂæÆÂçöÔºåwb.weibo[1]‰∏∫Áà¨ÂèñÁöÑÁ¨¨‰∫åÊù°ÂæÆÂçöÔºå‰ª•Ê≠§Á±ªÊé®„ÄÇÂΩìfilter=1Êó∂Ôºåwb.weibo[0]‰∏∫Áà¨ÂèñÁöÑÁ¨¨‰∏ÄÊù°&lt;strong&gt;ÂéüÂàõ&lt;/strong&gt;ÂæÆÂçöÔºå‰ª•Ê≠§Á±ªÊé®„ÄÇwb.weibo[0][&#39;id&#39;]‰∏∫Á¨¨‰∏ÄÊù°ÂæÆÂçöÁöÑidÔºåwb.weibo[0][&#39;content&#39;]‰∏∫Á¨¨‰∏ÄÊù°ÂæÆÂçöÁöÑÊ≠£ÊñáÔºåwb.weibo[0][&#39;publish_time&#39;]‰∏∫Á¨¨‰∏ÄÊù°ÂæÆÂçöÁöÑÂèëÂ∏ÉÊó∂Èó¥ÔºåËøòÊúâÂÖ∂ÂÆÉÂæàÂ§ö‰ø°ÊÅØ‰∏çÂú®ËµòËø∞ÔºåÂ§ßÂÆ∂ÂèØ‰ª•ÁÇπÂáª‰∏ãÈù¢ÁöÑ&#34;ËØ¶ÊÉÖ&#34;Êü•ÁúãÂÖ∑‰ΩìÁî®Ê≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ËØ¶ÊÉÖ&lt;/summary&gt; &#xA; &lt;p&gt;Ëã•ÁõÆÊ†áÂæÆÂçöÁî®Êà∑Â≠òÂú®ÂæÆÂçöÔºåÂàôÔºö&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;idÔºöÂ≠òÂÇ®ÂæÆÂçöid„ÄÇÂ¶Çwb.weibo[0][&#39;id&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑidÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;contentÔºöÂ≠òÂÇ®ÂæÆÂçöÊ≠£Êñá„ÄÇÂ¶Çwb.weibo[0][&#39;content&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÊ≠£ÊñáÔºõ&lt;/li&gt; &#xA;  &lt;li&gt;article_urlÔºöÂ≠òÂÇ®ÂæÆÂçö‰∏≠Â§¥Êù°ÊñáÁ´†ÁöÑurl„ÄÇÂ¶Çwb.weibo[0][&#39;article_url&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÂ§¥Êù°ÊñáÁ´†urlÔºåËã•ÂæÆÂçö‰∏≠‰∏çÂ≠òÂú®Â§¥Êù°ÊñáÁ´†ÔºåÂàôÂÄº‰∏∫&#39;&#39;Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;original_picturesÔºöÂ≠òÂÇ®ÂéüÂàõÂæÆÂçöÁöÑÂéüÂßãÂõæÁâáurlÂíåËΩ¨ÂèëÂæÆÂçöËΩ¨ÂèëÁêÜÁî±‰∏≠ÁöÑÂõæÁâáurl„ÄÇÂ¶Çwb.weibo[0][&#39;original_pictures&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÂéüÂßãÂõæÁâáurlÔºåËã•ËØ•Êù°ÂæÆÂçöÊúâÂ§öÂº†ÂõæÁâáÔºåÂàôÂ≠òÂÇ®Â§ö‰∏™urlÔºå‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÂâ≤ÔºõËã•ËØ•ÂæÆÂçöÊ≤°ÊúâÂõæÁâáÔºåÂàôÂÄº‰∏∫&#34;Êó†&#34;Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;retweet_picturesÔºöÂ≠òÂÇ®Ë¢´ËΩ¨ÂèëÂæÆÂçö‰∏≠ÁöÑÂéüÂßãÂõæÁâáurl„ÄÇÂΩìÊúÄÊñ∞ÂæÆÂçö‰∏∫ÂéüÂàõÂæÆÂçöÊàñËÄÖ‰∏∫Ê≤°ÊúâÂõæÁâáÁöÑËΩ¨ÂèëÂæÆÂçöÊó∂ÔºåÂàôÂÄº‰∏∫&#34;Êó†&#34;ÔºåÂê¶Âàô‰∏∫Ë¢´ËΩ¨ÂèëÂæÆÂçöÁöÑÂõæÁâáurl„ÄÇËã•ÊúâÂ§öÂº†ÂõæÁâáÔºåÂàôÂ≠òÂÇ®Â§ö‰∏™urlÔºå‰ª•Ëã±ÊñáÈÄóÂè∑ÂàÜÂâ≤Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;publish_placeÔºöÂ≠òÂÇ®ÂæÆÂçöÁöÑÂèëÂ∏É‰ΩçÁΩÆ„ÄÇÂ¶Çwb.weibo[0][&#39;publish_place&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÂèëÂ∏É‰ΩçÁΩÆÔºåÂ¶ÇÊûúËØ•Êù°ÂæÆÂçöÊ≤°Êúâ‰ΩçÁΩÆ‰ø°ÊÅØÔºåÂàôÂÄº‰∏∫&#34;Êó†&#34;Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;publish_timeÔºöÂ≠òÂÇ®ÂæÆÂçöÁöÑÂèëÂ∏ÉÊó∂Èó¥„ÄÇÂ¶Çwb.weibo[0][&#39;publish_time&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÂèëÂ∏ÉÊó∂Èó¥Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;up_numÔºöÂ≠òÂÇ®ÂæÆÂçöËé∑ÂæóÁöÑÁÇπËµûÊï∞„ÄÇÂ¶Çwb.weibo[0][&#39;up_num&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöËé∑ÂæóÁöÑÁÇπËµûÊï∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;retweet_numÔºöÂ≠òÂÇ®ÂæÆÂçöËé∑ÂæóÁöÑËΩ¨ÂèëÊï∞„ÄÇÂ¶Çwb.weibo[0][&#39;retweet_num&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöËé∑ÂæóÁöÑËΩ¨ÂèëÊï∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;comment_numÔºöÂ≠òÂÇ®ÂæÆÂçöËé∑ÂæóÁöÑËØÑËÆ∫Êï∞„ÄÇÂ¶Çwb.weibo[0][&#39;comment_num&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöËé∑ÂæóÁöÑËØÑËÆ∫Êï∞Ôºõ&lt;/li&gt; &#xA;  &lt;li&gt;publish_toolÔºöÂ≠òÂÇ®ÂæÆÂçöÁöÑÂèëÂ∏ÉÂ∑•ÂÖ∑„ÄÇÂ¶Çwb.weibo[0][&#39;publish_tool&#39;]‰∏∫ÊúÄÊñ∞‰∏ÄÊù°ÂæÆÂçöÁöÑÂèëÂ∏ÉÂ∑•ÂÖ∑„ÄÇ&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;ÂÆöÊúüËá™Âä®Áà¨ÂèñÂæÆÂçöÔºàÂèØÈÄâÔºâ&lt;/h2&gt; &#xA;&lt;p&gt;Ë¶ÅÊÉ≥ËÆ©Á®ãÂ∫èÊØèÈöî‰∏ÄÊÆµÊó∂Èó¥Ëá™Âä®Áà¨ÂèñÔºå‰∏îÁà¨ÂèñÁöÑÂÜÖÂÆπ‰∏∫Êñ∞Â¢ûÂä†ÁöÑÂÜÖÂÆπÔºà‰∏çÂåÖÊã¨Â∑≤ÁªèËé∑ÂèñÁöÑÂæÆÂçöÔºâÔºåËØ∑Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/automation.md&#34;&gt;ÂÆöÊúüËá™Âä®Áà¨ÂèñÂæÆÂçö&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â¶Ç‰ΩïËé∑Âèñcookie&lt;/h2&gt; &#xA;&lt;p&gt;Ë¶Å‰∫ÜËß£Ëé∑ÂèñcookieÊñπÊ≥ïÔºåËØ∑Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/cookie.md&#34;&gt;cookieÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â¶Ç‰ΩïËé∑Âèñuser_id&lt;/h2&gt; &#xA;&lt;p&gt;Ë¶Å‰∫ÜËß£Ëé∑Âèñuser_idÊñπÊ≥ïÔºåËØ∑Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/userid.md&#34;&gt;user_idÊñáÊ°£&lt;/a&gt;ÔºåËØ•ÊñáÊ°£‰ªãÁªç‰∫ÜÂ¶Ç‰ΩïËé∑Âèñ‰∏Ä‰∏™ÂèäÂ§ö‰∏™ÂæÆÂçöÁî®Êà∑user_idÁöÑÊñπÊ≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûúËøêË°åÁ®ãÂ∫èÁöÑËøáÁ®ã‰∏≠Âá∫Áé∞ÈîôËØØÔºåÂèØ‰ª•Êü•Áúã&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/FAQ.md&#34;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;È°µÈù¢ÔºåÈáåÈù¢ÂåÖÂê´‰∫ÜÊúÄÂ∏∏ËßÅÁöÑÈóÆÈ¢òÂèäËß£ÂÜ≥ÊñπÊ≥ï„ÄÇÂ¶ÇÊûúÂá∫Áé∞ÁöÑÈîôËØØ‰∏çÂú®Â∏∏ËßÅÈóÆÈ¢òÈáåÔºåÊÇ®ÂèØ‰ª•ÈÄöËøá&lt;a href=&#34;https://github.com/dataabc/weiboSpider/issues/new/choose&#34;&gt;Âèëissue&lt;/a&gt;ÂØªÊ±ÇÂ∏ÆÂä©ÔºåÊàë‰ª¨‰ºöÂæà‰πêÊÑè‰∏∫ÊÇ®Ëß£Á≠î„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â≠¶ÊúØÁ†îÁ©∂&lt;/h2&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆÈÄöËøáËé∑ÂèñÂæÆÂçöÊï∞ÊçÆÔºå‰∏∫ÂÜôËÆ∫Êñá„ÄÅÂÅöÁ†îÁ©∂Á≠âÈùûÂïÜ‰∏öÈ°πÁõÆÊèê‰æõÊâÄÈúÄÊï∞ÊçÆ„ÄÇ&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/academic.md&#34;&gt;Â≠¶ÊúØÁ†îÁ©∂ÊñáÊ°£&lt;/a&gt;ÊòØ‰∏Ä‰∫õÂú®ËÆ∫ÊñáÊàñÁ†îÁ©∂Á≠âÊñπÈù¢‰ΩøÁî®ËøáÊú¨Á®ãÂ∫èÁöÑÈ°πÁõÆÔºåËøô‰∫õÈ°πÁõÆÂ±ïÁ§∫Â∑≤ÂæÅÂæóÊâÄÊúâËÄÖÂêåÊÑè„ÄÇÂú®‰∏Ä‰∫õÊ∂âÂèäÈöêÁßÅÁöÑÊèèËø∞‰∏äÔºåÂ∑≤‰∏éÊâÄÊúâËÄÖÂÅö‰∫ÜÊ≤üÈÄöÔºåÊèèËø∞‰∏≠Âè™‰ªãÁªçÊâÄÊúâËÄÖÂÖÅËÆ∏Â±ïÁ§∫ÁöÑÈÉ®ÂàÜ„ÄÇÂ¶ÇÊûúÈÉ®ÂàÜ‰ø°ÊÅØÊâÄÊúâËÄÖ‰πãÂâçÂêåÊÑèÂ±ïÁ§∫Âπ∂‰∏îÂ∑≤ÁªèÂÜôÂú®‰∫ÜÊñáÊ°£‰∏≠ÔºåÁé∞Âú®Âèà‰∏çÊÉ≥Â±ïÁ§∫‰∫ÜÔºåÂèØ‰ª•ÈÄöËøáÈÇÆ‰ª∂(&lt;a href=&#34;mailto:chillychen1991@gmail.com&#34;&gt;chillychen1991@gmail.com&lt;/a&gt;)ÊàñissueÁöÑÊñπÂºèÂëäËØâÊàëÔºåÊàë‰ºöÂà†Èô§Áõ∏ÂÖ≥‰ø°ÊÅØ„ÄÇÂêåÊó∂Ôºå‰πüÊ¨¢Ëøé‰ΩøÁî®Êú¨È°πÁõÆÂÜôËÆ∫ÊñáÊàñÂÅöÂÖ∂ÂÆÉÂ≠¶ÊúØÁ†îÁ©∂ÁöÑÊúãÂèãÔºåÂ∞ÜËá™Â∑±ÁöÑÁ†îÁ©∂ÊàêÊûúÂ±ïÁ§∫Âú®&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/academic.md&#34;&gt;Â≠¶ÊúØÁ†îÁ©∂ÊñáÊ°£&lt;/a&gt;ÈáåÔºåËøôÂÆåÂÖ®ÊòØËá™ÊÑøÁöÑ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏∫Êñπ‰æøÂ§ßÂÆ∂ÂºïÁî®ÔºåÁé∞Êèê‰æõÊú¨È°πÁõÆÁöÑ bibtex Êù°ÁõÆÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{weibospider2020,&#xA;  author = {Lei Chen, Zhengyang Song, schaepher, minami9, bluerthanever, MKSP2015, moqimoqidea, windlively, eggachecat, mtuwei, codermino, duangan1},&#xA;  title = {{Weibo Spider}},&#xA;  howpublished = {\url{https://github.com/dataabc/weiboSpider}},&#xA;  year = {2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dataabc/weibo-crawler&#34;&gt;weibo-crawler&lt;/a&gt; - ÂäüËÉΩÂíåÊú¨È°πÁõÆÂÆåÂÖ®‰∏ÄÊ†∑ÔºåÂèØ‰ª•‰∏çÊ∑ªÂä†cookieÔºåËé∑ÂèñÁöÑÂæÆÂçöÂ±ûÊÄßÊõ¥Â§öÔºõ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dataabc/weibo-search&#34;&gt;weibo-search&lt;/a&gt; - ÂèØ‰ª•ËøûÁª≠Ëé∑Âèñ‰∏Ä‰∏™ÊàñÂ§ö‰∏™&lt;strong&gt;ÂæÆÂçöÂÖ≥ÈîÆËØçÊêúÁ¥¢&lt;/strong&gt;ÁªìÊûúÔºåÂπ∂Â∞ÜÁªìÊûúÂÜôÂÖ•Êñá‰ª∂ÔºàÂèØÈÄâÔºâ„ÄÅÊï∞ÊçÆÂ∫ìÔºàÂèØÈÄâÔºâÁ≠â„ÄÇÊâÄË∞ìÂæÆÂçöÂÖ≥ÈîÆËØçÊêúÁ¥¢Âç≥Ôºö&lt;strong&gt;ÊêúÁ¥¢Ê≠£Êñá‰∏≠ÂåÖÂê´ÊåáÂÆöÂÖ≥ÈîÆËØçÁöÑÂæÆÂçö&lt;/strong&gt;ÔºåÂèØ‰ª•ÊåáÂÆöÊêúÁ¥¢ÁöÑÊó∂Èó¥ËåÉÂõ¥„ÄÇÂØπ‰∫éÈùûÂ∏∏ÁÉ≠Èó®ÁöÑÂÖ≥ÈîÆËØçÔºå‰∏ÄÂ§©ÁöÑÊó∂Èó¥ËåÉÂõ¥ÔºåÂèØ‰ª•Ëé∑Âæó&lt;strong&gt;1000‰∏á&lt;/strong&gt;‰ª•‰∏äÁöÑÊêúÁ¥¢ÁªìÊûúÔºåNÂ§©ÁöÑÊó∂Èó¥ËåÉÂõ¥Â∞±ÂèØ‰ª•Ëé∑Âæó1000‰∏á X NÊêúÁ¥¢ÁªìÊûú„ÄÇÂØπ‰∫éÂ§ßÂ§öÊï∞ÂÖ≥ÈîÆËØçÔºå‰∏ÄÂ§©‰∫ßÁîüÁöÑÁõ∏Â∫îÂæÆÂçöÊï∞ÈáèÂ∫îËØ•Âú®1000‰∏áÊù°‰ª•‰∏ãÔºåÂõ†Ê≠§ÂèØ‰ª•ËØ¥ËØ•Á®ãÂ∫èÂèØ‰ª•Ëé∑ÂæóÂ§ßÈÉ®ÂàÜÂÖ≥ÈîÆËØçÁöÑÂÖ®ÈÉ®ÊàñËøë‰ººÂÖ®ÈÉ®ÁöÑÊêúÁ¥¢ÁªìÊûú„ÄÇËÄå‰∏îËØ•Á®ãÂ∫èÂèØ‰ª•Ëé∑ÂæóÊêúÁ¥¢ÁªìÊûúÁöÑÊâÄÊúâ‰ø°ÊÅØÔºåÊú¨Á®ãÂ∫èËé∑ÂæóÁöÑÂæÆÂçö‰ø°ÊÅØËØ•Á®ãÂ∫èÈÉΩËÉΩËé∑Âæó„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ë¥°ÁåÆ&lt;/h2&gt; &#xA;&lt;p&gt;Ê¨¢Ëøé‰∏∫Êú¨È°πÁõÆË¥°ÁåÆÂäõÈáè„ÄÇË¥°ÁåÆÂèØ‰ª•ÊòØÊèê‰∫§‰ª£Á†ÅÔºåÂèØ‰ª•ÊòØÈÄöËøáissueÊèêÂª∫ËÆÆÔºàÂ¶ÇÊñ∞ÂäüËÉΩ„ÄÅÊîπËøõÊñπÊ°àÁ≠âÔºâÔºå‰πüÂèØ‰ª•ÊòØÈÄöËøáissueÂëäÁü•Êàë‰ª¨È°πÁõÆÂ≠òÂú®Âì™‰∫õbug„ÄÅÁº∫ÁÇπÁ≠âÔºåÂÖ∑‰ΩìË¥°ÁåÆÊñπÂºèËßÅ&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/CONTRIBUTING.md&#34;&gt;‰∏∫Êú¨È°πÁõÆÂÅöË¥°ÁåÆ&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ë¥°ÁåÆËÄÖ&lt;/h2&gt; &#xA;&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫Êú¨È°πÁõÆË¥°ÁåÆÂäõÈáèÁöÑÊúãÂèãÔºåË¥°ÁåÆËÄÖËØ¶ÊÉÖËßÅ&lt;a href=&#34;https://github.com/dataabc/weiboSpider/raw/master/docs/contributors.md&#34;&gt;Ë¥°ÁåÆËÄÖ&lt;/a&gt;È°µÈù¢„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;user_id‰∏çËÉΩ‰∏∫Áà¨Ëô´ÂæÆÂçöÁöÑuser_id„ÄÇÂõ†‰∏∫Ë¶ÅÁà¨ÂæÆÂçö‰ø°ÊÅØÔºåÂøÖÈ°ªÂÖàÁôªÂΩïÂà∞Êüê‰∏™ÂæÆÂçöË¥¶Âè∑ÔºåÊ≠§Ë¥¶Âè∑Êàë‰ª¨Âßë‰∏îÁß∞‰∏∫Áà¨Ëô´ÂæÆÂçö„ÄÇÁà¨Ëô´ÂæÆÂçöËÆøÈóÆËá™Â∑±ÁöÑÈ°µÈù¢ÂíåËÆøÈóÆÂÖ∂‰ªñÁî®Êà∑ÁöÑÈ°µÈù¢ÔºåÂæóÂà∞ÁöÑÁΩëÈ°µÊ†ºÂºè‰∏çÂêåÔºåÊâÄ‰ª•Êó†Ê≥ïÁà¨ÂèñËá™Â∑±ÁöÑÂæÆÂçö‰ø°ÊÅØÔºõÂ¶ÇÊûúÊÉ≥Ë¶ÅÁà¨ÂèñÁà¨Ëô´ÂæÆÂçöÂÜÖÂÆπÔºåÂèØ‰ª•ÂèÇËÄÉ&lt;a href=&#34;https://github.com/dataabc/weiboSpider/issues/113&#34;&gt;Ëé∑ÂèñËá™Ë∫´ÂæÆÂçö‰ø°ÊÅØ&lt;/a&gt;Ôºõ&lt;/li&gt; &#xA; &lt;li&gt;cookieÊúâÊúüÈôêÈôêÂà∂ÔºåÂ§ßÁ∫¶‰∏â‰∏™Êúà„ÄÇËã•ÊèêÁ§∫cookieÈîôËØØÊàñÂ∑≤ËøáÊúüÔºåÈúÄË¶ÅÈáçÊñ∞Êõ¥Êñ∞cookie„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>projectdiscovery/nuclei-templates</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/projectdiscovery/nuclei-templates</id>
    <link href="https://github.com/projectdiscovery/nuclei-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Nuclei Templates &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdnuclei&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://nuclei.projectdiscovery.io/templating-guide/&#34;&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/master/#-contributions&#34;&gt;Contributions&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/master/#-discussion&#34;&gt;Discussion&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/master/#-community&#34;&gt;Community&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://nuclei.projectdiscovery.io/faq/templates/&#34;&gt;FAQs&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Templates are the core of the &lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;nuclei scanner&lt;/a&gt; which powers the actual scanning engine. This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community. We hope that you also contribute by sending templates via &lt;strong&gt;pull requests&lt;/strong&gt; or &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+&#34;&gt;Github issues&lt;/a&gt; to grow the list.&lt;/p&gt; &#xA;&lt;h2&gt;Nuclei Templates overview&lt;/h2&gt; &#xA;&lt;p&gt;An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/master/TEMPLATES-STATS.md&#34;&gt;available here&lt;/a&gt;, and also available in &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/master/TEMPLATES-STATS.json&#34;&gt;JSON&lt;/a&gt; format for integration.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Nuclei Templates Top 10 statistics&lt;/h2&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;TAG&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;AUTHOR&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;DIRECTORY&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;SEVERITY&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;TYPE&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cve&lt;/td&gt; &#xA;       &lt;td&gt;1185&lt;/td&gt; &#xA;       &lt;td&gt;daffainfo&lt;/td&gt; &#xA;       &lt;td&gt;565&lt;/td&gt; &#xA;       &lt;td&gt;cves&lt;/td&gt; &#xA;       &lt;td&gt;1190&lt;/td&gt; &#xA;       &lt;td&gt;info&lt;/td&gt; &#xA;       &lt;td&gt;1217&lt;/td&gt; &#xA;       &lt;td&gt;http&lt;/td&gt; &#xA;       &lt;td&gt;3254&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;panel&lt;/td&gt; &#xA;       &lt;td&gt;522&lt;/td&gt; &#xA;       &lt;td&gt;dhiyaneshdk&lt;/td&gt; &#xA;       &lt;td&gt;424&lt;/td&gt; &#xA;       &lt;td&gt;exposed-panels&lt;/td&gt; &#xA;       &lt;td&gt;531&lt;/td&gt; &#xA;       &lt;td&gt;high&lt;/td&gt; &#xA;       &lt;td&gt;892&lt;/td&gt; &#xA;       &lt;td&gt;file&lt;/td&gt; &#xA;       &lt;td&gt;68&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;lfi&lt;/td&gt; &#xA;       &lt;td&gt;466&lt;/td&gt; &#xA;       &lt;td&gt;pikpikcu&lt;/td&gt; &#xA;       &lt;td&gt;316&lt;/td&gt; &#xA;       &lt;td&gt;vulnerabilities&lt;/td&gt; &#xA;       &lt;td&gt;457&lt;/td&gt; &#xA;       &lt;td&gt;medium&lt;/td&gt; &#xA;       &lt;td&gt;678&lt;/td&gt; &#xA;       &lt;td&gt;network&lt;/td&gt; &#xA;       &lt;td&gt;50&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;xss&lt;/td&gt; &#xA;       &lt;td&gt;378&lt;/td&gt; &#xA;       &lt;td&gt;pdteam&lt;/td&gt; &#xA;       &lt;td&gt;266&lt;/td&gt; &#xA;       &lt;td&gt;technologies&lt;/td&gt; &#xA;       &lt;td&gt;257&lt;/td&gt; &#xA;       &lt;td&gt;critical&lt;/td&gt; &#xA;       &lt;td&gt;420&lt;/td&gt; &#xA;       &lt;td&gt;dns&lt;/td&gt; &#xA;       &lt;td&gt;17&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;wordpress&lt;/td&gt; &#xA;       &lt;td&gt;374&lt;/td&gt; &#xA;       &lt;td&gt;geeknik&lt;/td&gt; &#xA;       &lt;td&gt;181&lt;/td&gt; &#xA;       &lt;td&gt;exposures&lt;/td&gt; &#xA;       &lt;td&gt;205&lt;/td&gt; &#xA;       &lt;td&gt;low&lt;/td&gt; &#xA;       &lt;td&gt;186&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;rce&lt;/td&gt; &#xA;       &lt;td&gt;302&lt;/td&gt; &#xA;       &lt;td&gt;dwisiswant0&lt;/td&gt; &#xA;       &lt;td&gt;168&lt;/td&gt; &#xA;       &lt;td&gt;misconfiguration&lt;/td&gt; &#xA;       &lt;td&gt;200&lt;/td&gt; &#xA;       &lt;td&gt;unknown&lt;/td&gt; &#xA;       &lt;td&gt;6&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;exposure&lt;/td&gt; &#xA;       &lt;td&gt;298&lt;/td&gt; &#xA;       &lt;td&gt;princechaddha&lt;/td&gt; &#xA;       &lt;td&gt;138&lt;/td&gt; &#xA;       &lt;td&gt;workflows&lt;/td&gt; &#xA;       &lt;td&gt;187&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cve2021&lt;/td&gt; &#xA;       &lt;td&gt;291&lt;/td&gt; &#xA;       &lt;td&gt;0x_akoko&lt;/td&gt; &#xA;       &lt;td&gt;138&lt;/td&gt; &#xA;       &lt;td&gt;token-spray&lt;/td&gt; &#xA;       &lt;td&gt;169&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;wp-plugin&lt;/td&gt; &#xA;       &lt;td&gt;273&lt;/td&gt; &#xA;       &lt;td&gt;gy741&lt;/td&gt; &#xA;       &lt;td&gt;122&lt;/td&gt; &#xA;       &lt;td&gt;default-logins&lt;/td&gt; &#xA;       &lt;td&gt;96&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;tech&lt;/td&gt; &#xA;       &lt;td&gt;273&lt;/td&gt; &#xA;       &lt;td&gt;pussycat0x&lt;/td&gt; &#xA;       &lt;td&gt;116&lt;/td&gt; &#xA;       &lt;td&gt;file&lt;/td&gt; &#xA;       &lt;td&gt;68&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;p&gt;&lt;strong&gt;264 directories, 3612 files&lt;/strong&gt;.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please navigate to &lt;a href=&#34;https://nuclei.projectdiscovery.io&#34;&gt;https://nuclei.projectdiscovery.io&lt;/a&gt; for detailed documentation to &lt;strong&gt;build&lt;/strong&gt; new or your own &lt;strong&gt;custom&lt;/strong&gt; templates. We have also added a set of templates to help you understand how things work.&lt;/p&gt; &#xA;&lt;h2&gt;üí™ Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Nuclei-templates is powered by major contributions from the community. &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+&#34;&gt;Template contributions &lt;/a&gt;, &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=%5BFeature%5D+&#34;&gt;Feature Requests&lt;/a&gt; and &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D+&#34;&gt;Bug Reports&lt;/a&gt; are more than welcome.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Discussion&lt;/h2&gt; &#xA;&lt;p&gt;Have questions / doubts / ideas to discuss? Feel free to open a discussion on &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/discussions&#34;&gt;Github discussions&lt;/a&gt; board.&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Community&lt;/h2&gt; &#xA;&lt;p&gt;You are welcome to join the active &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Discord Community&lt;/a&gt; to discuss directly with project maintainers and share things with others around security and automation. Additionally, you may follow us on &lt;a href=&#34;https://twitter.com/pdnuclei&#34;&gt;Twitter&lt;/a&gt; to be updated on all the things about Nuclei.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;amp;max=300&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Thanks again for your contribution and keeping this community vibrant. &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>521xueweihan/GitHub520</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/521xueweihan/GitHub520</id>
    <link href="https://github.com/521xueweihan/GitHub520" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üòò ËÆ©‰Ω†‚ÄúÁà±‚Äù‰∏ä GitHubÔºåËß£ÂÜ≥ËÆøÈóÆÊó∂ÂõæË£Ç„ÄÅÂä†ËΩΩÊÖ¢ÁöÑÈóÆÈ¢ò„ÄÇÔºàÊó†ÈúÄÂÆâË£ÖÔºâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub520&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif&#34;&gt; &lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub&#34; target=&#34;_blank&#34;&gt;HelloGitHub&lt;/a&gt;&lt;/strong&gt; ÂàÜ‰∫´ GitHub ‰∏äÊúâË∂£„ÄÅÂÖ•Èó®Á∫ßÁöÑÂºÄÊ∫êÈ°πÁõÆ„ÄÇ&lt;br&gt;ÂÖ¥Ë∂£ÊòØÊúÄÂ•ΩÁöÑËÄÅÂ∏àÔºåËøôÈáåËÉΩÂ§üÂ∏Æ‰Ω†ÊâæÂà∞ÁºñÁ®ãÁöÑÂÖ¥Ë∂£ÔºÅ &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.hellogithub.com/&#34;&gt;raw.hellogithub.com&lt;/a&gt; ÊúçÂä°Âô®Áª≠Ë¥π‰∫Ü 3 Âπ¥Âà∞ 2024.12 ÂÖ±Ëä±‰∫ÜÔºö1500+üí∞&lt;/p&gt; &#xA;&lt;p&gt;Êúâ‰ΩôÁ≤ÆÁöÑÊúãÂèã&lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/receiving_code.png&#34;&gt;ÁÇπÂáªÊâ´Á†ÅËµûÂä©&lt;/a&gt;ÔºåÊÑüË∞¢üôè&lt;/p&gt; &#xA;&lt;h2&gt;‰∏Ä„ÄÅ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;p&gt;ÂØπ GitHub ËØ¥&#34;Áà±&#34;Â§™Èöæ‰∫ÜÔºöËÆøÈóÆÊÖ¢„ÄÅÂõæÁâáÂä†ËΩΩ‰∏çÂá∫Êù•„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Ê≥®Ôºö&lt;/em&gt; Êú¨È°πÁõÆËøòÂ§Ñ‰∫éÊµãËØïÈò∂ÊÆµÔºå‰ªÖÂú®Êú¨Êú∫ÊµãËØïÈÄöËøáÔºåÂ¶ÇÊúâÈóÆÈ¢òÊ¨¢ËøéÊèê &lt;a href=&#34;https://github.com/521xueweihan/GitHub520/issues/new&#34;&gt;issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆÊó†ÈúÄÂÆâË£Ö‰ªª‰ΩïÁ®ãÂ∫èÔºåÈÄöËøá‰øÆÊîπÊú¨Âú∞ hosts Êñá‰ª∂ÔºåËØïÂõæËß£ÂÜ≥Ôºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub ËÆøÈóÆÈÄüÂ∫¶ÊÖ¢ÁöÑÈóÆÈ¢ò&lt;/li&gt; &#xA; &lt;li&gt;GitHub È°πÁõÆ‰∏≠ÁöÑÂõæÁâáÊòæÁ§∫‰∏çÂá∫ÁöÑÈóÆÈ¢ò&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ëä± 5 ÂàÜÈíüÊó∂Èó¥ÔºåËÆ©‰Ω†&#34;Áà±&#34;‰∏ä GitHub„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‰∫å„ÄÅ‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; &#xA;&lt;h3&gt;2.1 Â§çÂà∂‰∏ãÈù¢ÁöÑÂÜÖÂÆπ&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# GitHub520 Host Start&#xA;140.82.114.25                 alive.github.com&#xA;140.82.113.26                 live.github.com&#xA;185.199.108.154               github.githubassets.com&#xA;140.82.113.22                 central.github.com&#xA;185.199.108.133               desktop.githubusercontent.com&#xA;185.199.108.153               assets-cdn.github.com&#xA;185.199.108.133               camo.githubusercontent.com&#xA;185.199.108.133               github.map.fastly.net&#xA;199.232.69.194                github.global.ssl.fastly.net&#xA;140.82.113.3                  gist.github.com&#xA;185.199.108.153               github.io&#xA;140.82.113.4                  github.com&#xA;192.0.66.2                    github.blog&#xA;140.82.113.5                  api.github.com&#xA;185.199.108.133               raw.githubusercontent.com&#xA;185.199.108.133               user-images.githubusercontent.com&#xA;185.199.108.133               favicons.githubusercontent.com&#xA;185.199.108.133               avatars5.githubusercontent.com&#xA;185.199.108.133               avatars4.githubusercontent.com&#xA;185.199.108.133               avatars3.githubusercontent.com&#xA;185.199.108.133               avatars2.githubusercontent.com&#xA;185.199.108.133               avatars1.githubusercontent.com&#xA;185.199.108.133               avatars0.githubusercontent.com&#xA;185.199.108.133               avatars.githubusercontent.com&#xA;140.82.112.9                  codeload.github.com&#xA;54.231.204.57                 github-cloud.s3.amazonaws.com&#xA;52.217.33.196                 github-com.s3.amazonaws.com&#xA;52.216.93.147                 github-production-release-asset-2e65be.s3.amazonaws.com&#xA;52.216.93.147                 github-production-user-asset-6210df.s3.amazonaws.com&#xA;52.217.202.113                github-production-repository-file-5c1aeb.s3.amazonaws.com&#xA;185.199.108.153               githubstatus.com&#xA;64.71.144.211                 github.community&#xA;23.100.27.125                 github.dev&#xA;140.82.112.22                 collector.github.com&#xA;13.107.42.16                  pipelines.actions.githubusercontent.com&#xA;185.199.108.133               media.githubusercontent.com&#xA;185.199.108.133               cloud.githubusercontent.com&#xA;185.199.108.133               objects.githubusercontent.com&#xA;&#xA;&#xA;# Update time: 2022-05-29T08:20:32+08:00&#xA;# Update url: https://raw.hellogithub.com/hosts&#xA;# Star me: https://github.com/521xueweihan/GitHub520&#xA;# GitHub520 Host End&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‰∏äÈù¢ÂÜÖÂÆπ‰ºöËá™Âä®ÂÆöÊó∂Êõ¥Êñ∞Ôºå‰øùËØÅÊúÄÊñ∞ÊúâÊïà„ÄÇÊï∞ÊçÆÊõ¥Êñ∞Êó∂Èó¥Ôºö2022-05-29T08:20:32+08:00ÔºàÂÜÖÂÆπÊó†ÂèòÂä®‰∏ç‰ºöÊõ¥Êñ∞Ôºâ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñá‰ª∂Ôºö&lt;code&gt;https://raw.hellogithub.com/hosts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;JSONÔºö&lt;code&gt;https://raw.hellogithub.com/hosts.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.1 ÊâãÂä®ÊñπÂºè&lt;/h3&gt; &#xA;&lt;h4&gt;2.1.1 ‰øÆÊîπ hosts Êñá‰ª∂&lt;/h4&gt; &#xA;&lt;p&gt;hosts Êñá‰ª∂Âú®ÊØè‰∏™Á≥ªÁªüÁöÑ‰ΩçÁΩÆ‰∏ç‰∏ÄÔºåËØ¶ÊÉÖÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows Á≥ªÁªüÔºö&lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux Á≥ªÁªüÔºö&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MacÔºàËãπÊûúÁîµËÑëÔºâÁ≥ªÁªüÔºö&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;AndroidÔºàÂÆâÂçìÔºâÁ≥ªÁªüÔºö&lt;code&gt;/system/etc/hosts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;iPhoneÔºàiOSÔºâÁ≥ªÁªüÔºö&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‰øÆÊîπÊñπÊ≥ïÔºåÊääÁ¨¨‰∏ÄÊ≠•ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞ÊñáÊú¨Êú´Â∞æÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Windows ‰ΩøÁî®ËÆ∞‰∫ãÊú¨„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Linux„ÄÅMac ‰ΩøÁî® Root ÊùÉÈôêÔºö&lt;code&gt;sudo vi /etc/hosts&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;iPhone„ÄÅiPad È°ªË∂äÁã±„ÄÅAndroid ÂøÖÈ°ªË¶Å root„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;2.1.2 ÊøÄÊ¥ªÁîüÊïà&lt;/h4&gt; &#xA;&lt;p&gt;Â§ßÈÉ®ÂàÜÊÉÖÂÜµ‰∏ãÊòØÁõ¥Êé•ÁîüÊïàÔºåÂ¶ÇÊú™ÁîüÊïàÂèØÂ∞ùËØï‰∏ãÈù¢ÁöÑÂäûÊ≥ïÔºåÂà∑Êñ∞ DNSÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;WindowsÔºöÂú® CMD Á™óÂè£ËæìÂÖ•Ôºö&lt;code&gt;ipconfig /flushdns&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux ÂëΩ‰ª§Ôºö&lt;code&gt;sudo nscd restart&lt;/code&gt;ÔºåÂ¶ÇÊä•ÈîôÂàôÈ°ªÂÆâË£ÖÔºö&lt;code&gt;sudo apt install nscd&lt;/code&gt; Êàñ &lt;code&gt;sudo /etc/init.d/nscd restart&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac ÂëΩ‰ª§Ôºö&lt;code&gt;sudo killall -HUP mDNSResponder&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;TipsÔºö&lt;/strong&gt; ‰∏äËø∞ÊñπÊ≥ïÊó†ÊïàÂèØ‰ª•Â∞ùËØïÈáçÂêØÊú∫Âô®„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;2.2 Ëá™Âä®ÊñπÂºè&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;ÔºöÊé®Ëçê &lt;a href=&#34;https://github.com/oldj/SwitchHosts&#34;&gt;SwitchHosts&lt;/a&gt; Â∑•ÂÖ∑ÁÆ°ÁêÜ hosts&lt;/p&gt; &#xA;&lt;p&gt;‰ª• SwitchHosts ‰∏∫‰æãÔºåÁúã‰∏Ä‰∏ãÊÄé‰πà‰ΩøÁî®ÁöÑÔºåÈÖçÁΩÆÂèÇËÄÉ‰∏ãÈù¢Ôºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Title: ÈöèÊÑè&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Type: &lt;code&gt;Remote&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;URL: &lt;code&gt;https://raw.hellogithub.com/hosts&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Auto Refresh: ÊúÄÂ•ΩÈÄâ &lt;code&gt;1 hour&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Â¶ÇÂõæÔºö&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/521xueweihan/GitHub520/main/img/switch-hosts.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ËøôÊ†∑ÊØèÊ¨° hosts ÊúâÊõ¥Êñ∞ÈÉΩËÉΩÂèäÊó∂ËøõË°åÊõ¥Êñ∞ÔºåÂÖçÂéªÊâãÂä®Êõ¥Êñ∞„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;2.3 One-liner (ÈÄÇÁî®‰∫éÁ±ªUnixÁ≥ªÁªü)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;sed -i &#34;/# GitHub520 Host Start/Q&#34; /etc/hosts &amp;amp;&amp;amp; curl https://raw.hellogithub.com/hosts &amp;gt;&amp;gt; /etc/hosts&lt;/code&gt; Ëá™Âä®Êõ¥Êñ∞&lt;code&gt;/etc/hosts&lt;/code&gt;Êñá‰ª∂ÔºåÂèØ‰ª•Ê∑ªÂä†Âà∞cronÂÆöÊó∂ÊâßË°å„ÄÇ‰ΩøÁî®ÂâçÁ°Æ‰øùGithub520ÂÜÖÂÆπÂú®ËØ•Êñá‰ª∂ÊúÄÂêéÈÉ®ÂàÜ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;2.4 AdGuard Home Áî®Êà∑ÔºàËá™Âä®ÊñπÂºèÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;Âú® &lt;strong&gt;ËøáÊª§Âô®&amp;gt;DNS Â∞ÅÈîÅÊ∏ÖÂçï&amp;gt;Ê∑ªÂä†ÈòªÊ≠¢ÂàóË°®&amp;gt;Ê∑ªÂä†‰∏Ä‰∏™Ëá™ÂÆö‰πâÂàóË°®&lt;/strong&gt;ÔºåÈÖçÁΩÆÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ÂêçÁß∞: ÈöèÊÑè&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;URL: &lt;code&gt;https://raw.hellogithub.com/hosts&lt;/code&gt;ÔºàÂíå‰∏äÈù¢ SwitchHosts ‰ΩøÁî®ÁöÑ‰∏ÄÊ†∑Ôºâ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Â¶ÇÂõæÔºö&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/521xueweihan/GitHub520/main/img/AdGuard-rules.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Êõ¥Êñ∞Èó¥ÈöîÂú® &lt;strong&gt;ËÆæÁΩÆ&amp;gt;Â∏∏ËßÑËÆæÁΩÆ&amp;gt;ËøáÊª§Âô®Êõ¥Êñ∞Èó¥ÈöîÔºàËÆæÁΩÆ‰∏ÄÂ∞èÊó∂‰∏ÄÊ¨°Âç≥ÂèØÔºâ&lt;/strong&gt;ÔºåËÆ∞ÂæóÂãæÈÄâ‰∏ä &lt;strong&gt;‰ΩøÁî®ËøáÊª§Âô®Âíå Hosts Êñá‰ª∂‰ª•Êã¶Êà™ÊåáÂÆöÂüüÂêç&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/521xueweihan/GitHub520/main/img/AdGuard-rules2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;Ôºö‰∏çË¶ÅÊ∑ªÂä†Âú® &lt;strong&gt;DNS ÂÖÅËÆ∏Ê∏ÖÂçï&lt;/strong&gt; ÂÜÖÔºåÂè™ËÉΩÊ∑ªÂä†Âú® &lt;strong&gt;DNS Â∞ÅÈîÅÊ∏ÖÂçï&lt;/strong&gt; ÊâçÁÆ°Áî®„ÄÇÂè¶Â§ñÔºåAdGuard for Mac„ÄÅAdGuard for Windows„ÄÅAdGuard for Android„ÄÅAdGuard for IOS Á≠âÁ≠â &lt;strong&gt;AdGuard ÂÆ∂ÊóèËΩØ‰ª∂&lt;/strong&gt; Ê∑ªÂä†ÊñπÊ≥ïÂùáÁ±ª‰ºº„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;2.5 Chrome Êèí‰ª∂ÊñπÂºè&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gauseen/faster-hosts&#34;&gt;FasterHosts&lt;/a&gt; ÊòØ‰∏™ Chrome Êèí‰ª∂Ôºå‰∏ªË¶ÅÂéüÁêÜÊòØÊã¶Êà™ÊµèËßàÂô®ÁöÑÊüê‰∫õËØ∑Ê±ÇÔºåÂ∞Ü &lt;code&gt;domain&lt;/code&gt; ÊõøÊç¢ÊàêËÆøÈóÆÈÄüÂ∫¶ËæÉÂø´ÁöÑÈÇ£‰∏™„ÄÇhosts ËµÑÊ∫êÊù•Ëá™ &lt;a href=&#34;https://github.com/521xueweihan/GitHub520&#34;&gt;GitHub520&lt;/a&gt;ÔºåÊØè 1 Â∞èÊó∂Êõ¥Êñ∞‰∏ÄÊ¨°„ÄÇ&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;‰∏ãËΩΩ &lt;a href=&#34;https://github.com/gauseen/faster-hosts/archive/master.zip&#34;&gt;FasterHosts&lt;/a&gt; ÁÑ∂ÂêéËß£ÂéãÔºåÊâæÂà∞ &lt;code&gt;extension&lt;/code&gt; Â≠êÁõÆÂΩï&lt;/li&gt; &#xA;  &lt;li&gt;ÊâìÂºÄ ChromeÔºåËæìÂÖ•: &lt;code&gt;chrome://extensions/&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;ÊâìÂºÄ„ÄåÂºÄÂèëËÄÖÊ®°Âºè„Äç&lt;/li&gt; &#xA;  &lt;li&gt;ÈÄâÊã©„ÄåÂä†ËΩΩÂ∑≤Ëß£ÂéãÁöÑÊâ©Â±ïÁ®ãÂ∫è„ÄçÔºåÁÑ∂ÂêéÂÆö‰ΩçÂà∞ÂàöÊâçËß£ÂéãÁöÑÊñá‰ª∂Â§πÈáåÈù¢ÁöÑ &lt;code&gt;extension&lt;/code&gt; ÁõÆÂΩïÔºåÁ°ÆÂÆö&lt;/li&gt; &#xA;  &lt;li&gt;ËøôÂ∞±ÂÆâË£ÖÂ•Ω‰∫ÜÔºåÂÖ≥Èó≠„ÄåÂºÄÂèëËÄÖÊ®°Âºè„Äç&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‰∏â„ÄÅÊïàÊûúÂØπÊØî&lt;/h2&gt; &#xA;&lt;p&gt;‰πãÂâçÁöÑÊ†∑Â≠êÔºö&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/521xueweihan/GitHub520/main/img/old.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;‰øÆÊîπÂÆå hosts ÁöÑÊ†∑Â≠êÔºö&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/521xueweihan/GitHub520/main/img/new.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂÆöÊó∂Ëá™Âä®Êõ¥Êñ∞ hosts ÂÜÖÂÆπ&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hosts ÂÜÖÂÆπÊó†ÂèòÂä®‰∏ç‰ºöÊõ¥Êñ∞&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ÂØªÂà∞ÊúÄ‰ºò IP Ëß£ÊûêÁªìÊûú&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Â£∞Êòé&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;&lt;img alt=&#34;Áü•ËØÜÂÖ±‰∫´ËÆ∏ÂèØÂçèËÆÆ&#34; style=&#34;border-width: 0&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;Êú¨‰ΩúÂìÅÈááÁî® &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;ÁΩ≤Âêç-ÈùûÂïÜ‰∏öÊÄß‰ΩøÁî®-Á¶ÅÊ≠¢ÊºîÁªé 4.0 ÂõΩÈôÖ&lt;/a&gt; ËøõË°åËÆ∏ÂèØ„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pyodide/pyodide</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/pyodide/pyodide</id>
    <link href="https://github.com/pyodide/pyodide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pyodide is a Python distribution for the browser and Node.js based on WebAssembly&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/pyodide/pyodide&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pyodide/pyodide/main/docs/_static/img/pyodide-logo-readme.png&#34; alt=&#34;Pyodide&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/pyodide&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/pyodide&#34; alt=&#34;NPM Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyodide-build/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pyodide-build.svg?sanitize=true&#34; alt=&#34;PyPI Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/pyodide/pyodide&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/pyodide/pyodide.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pyodide.readthedocs.io/?badge=stable&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pyodide/badge/?version=stable&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pyodide is a Python distribution for the browser and Node.js based on WebAssembly.&lt;/p&gt; &#xA;&lt;h2&gt;What is Pyodide?&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide is a port of CPython to WebAssembly/&lt;a href=&#34;https://emscripten.org/&#34;&gt;Emscripten&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pyodide makes it possible to install and run Python packages in the browser with &lt;a href=&#34;https://pyodide.org/en/stable/usage/api/micropip-api.html&#34;&gt;micropip&lt;/a&gt;. Any pure Python package with a wheel available on PyPi is supported. Many packages with C extensions have also been ported for use with Pyodide. These include many general-purpose packages such as regex, PyYAML, lxml and scientific Python packages including NumPy, pandas, SciPy, Matplotlib, and scikit-learn.&lt;/p&gt; &#xA;&lt;p&gt;Pyodide comes with a robust Javascript ‚ü∫ Python foreign function interface so that you can freely mix these two languages in your code with minimal friction. This includes full support for error handling (throw an error in one language, catch it in the other), async/await, and much more.&lt;/p&gt; &#xA;&lt;p&gt;When used inside a browser, Python has full access to the Web APIs.&lt;/p&gt; &#xA;&lt;h2&gt;Try Pyodide (no installation needed)&lt;/h2&gt; &#xA;&lt;p&gt;Try Pyodide in a &lt;a href=&#34;https://pyodide.org/en/stable/console.html&#34;&gt;REPL&lt;/a&gt; directly in your browser. For further information, see the &lt;a href=&#34;https://pyodide.org/en/stable/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide offers three different ways to get started depending on your needs and technical resources. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a hosted distribution of Pyodide: see the &lt;a href=&#34;https://pyodide.org/en/stable/usage/quickstart.html&#34;&gt;Getting Started&lt;/a&gt; documentation.&lt;/li&gt; &#xA; &lt;li&gt;Download a version of Pyodide from the &lt;a href=&#34;https://github.com/pyodide/pyodide/releases/&#34;&gt;releases page&lt;/a&gt; and serve it with a web server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pyodide.org/en/stable/development/building-from-sources.html&#34;&gt;Build Pyodide from source&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build natively with &lt;code&gt;make&lt;/code&gt;: primarily for Linux users who want to experiment or contribute back to the project.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pyodide.org/en/stable/development/building-from-sources.html#using-docker&#34;&gt;Use a Docker image&lt;/a&gt;: recommended for Windows and macOS users and for Linux users who prefer a Debian-based Docker image with the dependencies already installed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide was created in 2018 by &lt;a href=&#34;https://github.com/mdboom&#34;&gt;Michael Droettboom&lt;/a&gt; at Mozilla as part of the &lt;a href=&#34;https://github.com/iodide-project/iodide&#34;&gt;Iodide project&lt;/a&gt;. Iodide is an experimental web-based notebook environment for literate scientific computing and communication.&lt;/p&gt; &#xA;&lt;p&gt;Iodide is no longer maintained. If you want to use Pyodide in an interactive client-side notebook, see &lt;a href=&#34;https://pyodide.org/en/stable/project/related-projects.html#notebook-environments-ides-repls&#34;&gt;Pyodide notebook environments&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please view the &lt;a href=&#34;https://pyodide.org/en/stable/development/contributing.html&#34;&gt;contributing guide&lt;/a&gt; for tips on filing issues, making changes, and submitting pull requests. Pyodide is an independent and community-driven open-source project. The decision-making process is outlined in the &lt;a href=&#34;https://pyodide.org/en/stable/project/governance.html&#34;&gt;Project governance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Blog: &lt;a href=&#34;https://blog.pyodide.org/&#34;&gt;blog.pyodide.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list: &lt;a href=&#34;https://mail.python.org/mailman3/lists/pyodide.python.org/&#34;&gt;mail.python.org/mailman3/lists/pyodide.python.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/pyodide/community&#34;&gt;gitter.im/pyodide/community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/pyodide&#34;&gt;twitter.com/pyodide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pyodide&#34;&gt;stackoverflow.com/questions/tagged/pyodide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide uses the &lt;a href=&#34;https://choosealicense.com/licenses/mpl-2.0/&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Asabeneh/30-Days-Of-Python</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/Asabeneh/30-Days-Of-Python</id>
    <link href="https://github.com/Asabeneh/30-Days-Of-Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 days of Python programming challenge is a step-by-step guide to learn the Python programming language in 30 days. This challenge may take more than100 days, follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üêç 30 Days Of Python&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;# Day&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/readme.md&#34;&gt;Introduction&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/02_Day_Variables_builtin_functions/02_variables_builtin_functions.md&#34;&gt;Variables, Built-in Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/03_Day_Operators/03_operators.md&#34;&gt;Operators&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/04_Day_Strings/04_strings.md&#34;&gt;Strings&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/05_Day_Lists/05_lists.md&#34;&gt;Lists&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;06&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/06_Day_Tuples/06_tuples.md&#34;&gt;Tuples&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/07_Day_Sets/07_sets.md&#34;&gt;Sets&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;08&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/08_Day_Dictionaries/08_dictionaries.md&#34;&gt;Dictionaries&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/09_Day_Conditionals/09_conditionals.md&#34;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/10_Day_Loops/10_loops.md&#34;&gt;Loops&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/11_Day_Functions/11_functions.md&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/12_Day_Modules/12_modules.md&#34;&gt;Modules&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/13_Day_List_comprehension/13_list_comprehension.md&#34;&gt;List Comprehension&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/14_Day_Higher_order_functions/14_higher_order_functions.md&#34;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/15_Day_Python_type_errors/15_python_type_errors.md&#34;&gt;Python Type Errors&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/16_Day_Python_date_time/16_python_datetime.md&#34;&gt;Python Date time&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/17_Day_Exception_handling/17_exception_handling.md&#34;&gt;Exception Handling&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/18_Day_Regular_expressions/18_regular_expressions.md&#34;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/19_Day_File_handling/19_file_handling.md&#34;&gt;File Handling&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/20_Day_Python_package_manager/20_python_package_manager.md&#34;&gt;Python Package Manager&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/21_Day_Classes_and_objects/21_classes_and_objects.md&#34;&gt;Classes and Objects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/22_Day_Web_scraping/22_web_scraping.md&#34;&gt;Web Scraping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/23_Day_Virtual_environment/23_virtual_environment.md&#34;&gt;Virtual Environment&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/24_Day_Statistics/24_statistics.md&#34;&gt;Statistics&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/25_Day_Pandas/25_pandas.md&#34;&gt;Pandas&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/26_Day_Python_web/26_python_web.md&#34;&gt;Python web&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/27_Day_Python_with_mongodb/27_python_with_mongodb.md&#34;&gt;Python with MongoDB&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/28_Day_API/28_API.md&#34;&gt;API&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/29_Day_Building_API/29_building_API.md&#34;&gt;Building API&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/30_Day_Conclusions/30_conclusions.md&#34;&gt;Conclusions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;üß°üß°üß° HAPPY CODING üß°üß°üß°&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.paypal.me/asabeneh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/paypal_lg.png&#34; alt=&#34;Paypal Logo&#34; style=&#34;width:10%&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 30 Days Of Python: Day 1 - Introduction&lt;/h1&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://www.linkedin.com/in/asabeneh/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://twitter.com/Asabeneh&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/asabeneh?style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&#34;https://www.linkedin.com/in/asabeneh/&#34; target=&#34;_blank&#34;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; Second Edition: July, 2021&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/02_Day_Variables_builtin_functions/02_variables_builtin_functions.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/30DaysOfPython_banner3@2x.png&#34; alt=&#34;30DaysOfPython&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#-30-days-of-python&#34;&gt;üêç 30 Days Of Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#-day-1&#34;&gt;üìò Day 1&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#welcome&#34;&gt;Welcome&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#why-python-&#34;&gt;Why Python ?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#environment-setup&#34;&gt;Environment Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#installing-python&#34;&gt;Installing Python&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#python-shell&#34;&gt;Python Shell&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#installing-visual-studio-code&#34;&gt;Installing Visual Studio Code&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#how-to-use-visual-studio-code&#34;&gt;How to use visual studio code&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#basic-python&#34;&gt;Basic Python&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#python-syntax&#34;&gt;Python Syntax&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#python-indentation&#34;&gt;Python Indentation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#comments&#34;&gt;Comments&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#data-types&#34;&gt;Data types&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#number&#34;&gt;Number&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#string&#34;&gt;String&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#booleans&#34;&gt;Booleans&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#list&#34;&gt;List&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#dictionary&#34;&gt;Dictionary&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#tuple&#34;&gt;Tuple&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#set&#34;&gt;Set&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#checking-data-types&#34;&gt;Checking Data types&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#python-file&#34;&gt;Python File&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#-exercises---day-1&#34;&gt;üíª Exercises - Day 1&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#exercise-level-1&#34;&gt;Exercise: Level 1&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#exercise-level-2&#34;&gt;Exercise: Level 2&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/#exercise-level-3&#34;&gt;Exercise: Level 3&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üìò Day 1&lt;/h1&gt; &#xA;&lt;h2&gt;Welcome&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; for deciding to participate in a &lt;em&gt;30 days of Python&lt;/em&gt; programming challenge . In this challenge you will learn everything you need to be a python programmer and the whole concept of programming. In the end of the challenge you will get a &lt;em&gt;30DaysOfPython&lt;/em&gt; programming challenge certificate.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to actively engage in the challenge, you may join the &lt;a href=&#34;https://t.me/ThirtyDaysOfPython&#34;&gt;30DaysOfPython challenge&lt;/a&gt; telegram group.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Python is a high-level programming language for general-purpose programming. It is an open source, interpreted, objected-oriented programming language. Python was created by a Dutch programmer, Guido van Rossum. The name of Python programming language was derived from a British sketch comedy series, &lt;em&gt;Month Python&#39;s Flying Circus&lt;/em&gt;. The first version was released on February 20, 1991. This 30 days of Python challenge will help you learn the latest version of Python, Python 3 step by step. The topics are broken down into 30 days, where each day contains several topics with easy-to-understand explanations, real-world examples, many hands on exercises and projects.&lt;/p&gt; &#xA;&lt;p&gt;This challenge is designed for beginners and professionals who want to learn python programming language. It may take 30 to 100 days to complete the challenge, people who actively participate on the telegram group have a high probability of completing the challenge. If you are a visual learner or in favor of videos, you may get started with this &lt;a href=&#34;https://www.youtube.com/watch?v=11OYpBrhdyM&#34;&gt;Python for Absolute Beginners video&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why Python ?&lt;/h2&gt; &#xA;&lt;p&gt;It is a programming language which is very close to human language and because of that it is easy to learn and use. Python is used by various industries and companies (including Google). It has been used to develop web applications, desktop applications, system adminstration, and machine learning libraries. Python is highly embraced language in the data science and machine learning community. I hope this is enough to convince you to start learning Python. Python is eating the world and you are killing it before it eats you.&lt;/p&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Installing Python&lt;/h3&gt; &#xA;&lt;p&gt;To run a python script you need to install python. Let&#39;s &lt;a href=&#34;https://www.python.org/&#34;&gt;download&lt;/a&gt; python. If your are a windows user. Click the button encircled in red.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/installing_on_windows.png&#34; alt=&#34;installing on Windows&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are a macOS user. Click the button encircled in red.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/installing_on_macOS.png&#34; alt=&#34;installing on Windows&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To check if python is installed write the following command on your device terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/python_versio.png&#34; alt=&#34;Python Version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you can see from the terminal, I am using &lt;em&gt;Python 3.7.5&lt;/em&gt; version at the moment. Your version of Python might be different from mine by but it should be 3.6 or above. If you mange to see the python version, well done. Python has been installed on your machine. Continue to the next section.&lt;/p&gt; &#xA;&lt;h3&gt;Python Shell&lt;/h3&gt; &#xA;&lt;p&gt;Python is an interpreted scripting language, so it does not need to be compiled. It means it executes the code line by line. Python comes with a &lt;em&gt;Python Shell (Python Interactive Shell)&lt;/em&gt;. It is used to execute a single python command and get the result.&lt;/p&gt; &#xA;&lt;p&gt;Python Shell waits for the Python code from the user. When you enter the code, it interprets the code and shows the result in the next line. Open your terminal or command prompt(cmd) and write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/opening_python_shell.png&#34; alt=&#34;Python Scripting Shell&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Python interactive shell is opened and it is waiting for you to write Python code(Python script). You will write your Python script next to this symbol &amp;gt;&amp;gt;&amp;gt; and then click Enter. Let us write our very first script on the Python scripting shell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/adding_on_python_shell.png&#34; alt=&#34;Python script on Python shell&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Well done, you wrote your first Python script on Python interactive shell. How do we close the Python interactive shell ? To close the shell, next to this symbol &amp;gt;&amp;gt; write &lt;strong&gt;exit()&lt;/strong&gt; command and press Enter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/exit_from_shell.png&#34; alt=&#34;Exit from python shell&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now, you know how to open the Python interactive shell and how to exit from it.&lt;/p&gt; &#xA;&lt;p&gt;Python will give you results if you write scripts that Python understands, if not it returns errors. Let&#39;s make a deliberate mistake and see what Python will return.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/invalid_syntax_error.png&#34; alt=&#34;Invalid Syntax Error&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you can see from the returned error, Python is so clever that it knows the mistake we made and which was &lt;em&gt;Syntax Error: invalid syntax&lt;/em&gt;. Using x as multiplication in Python is a syntax error because (x) is not a valid syntax in Python. Instead of (&lt;strong&gt;x&lt;/strong&gt;) we use asterisk (*) for multiplication. The returned error clearly shows what to fix.&lt;/p&gt; &#xA;&lt;p&gt;The process of identifying and removing errors from a program is called &lt;em&gt;debugging&lt;/em&gt;. Let us debug it by putting * in place of &lt;strong&gt;x&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/fixing_syntax_error.png&#34; alt=&#34;Fixing Syntax Error&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our bug was fixed, the code ran and we got a result we were expecting. As a programmer you will see such kind of errors on daily basis. It is good to know how to debug. To be good at debugging you should understand what kind of errors you are facing. Some of the Python errors you may encounter are &lt;em&gt;SyntaxError&lt;/em&gt;, &lt;em&gt;IndexError&lt;/em&gt;, &lt;em&gt;NameError&lt;/em&gt;, &lt;em&gt;ModuleNotFoundError&lt;/em&gt;, &lt;em&gt;KeyError&lt;/em&gt;, &lt;em&gt;ImportError&lt;/em&gt;, &lt;em&gt;AttributeError&lt;/em&gt;, &lt;em&gt;TypeError&lt;/em&gt;, &lt;em&gt;ValueError&lt;/em&gt;, &lt;em&gt;ZeroDivisionError&lt;/em&gt; etc. We will see more about different Python &lt;strong&gt;&lt;em&gt;error types&lt;/em&gt;&lt;/strong&gt; in later sections.&lt;/p&gt; &#xA;&lt;p&gt;Let us practice more how to use Python interactive shell. Go to your terminal or command prompt and write the word &lt;strong&gt;python&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/opening_python_shell.png&#34; alt=&#34;Python Scripting Shell&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Python interactive shell is opened. Let us do some basic mathematical operations (addition, subtraction, multiplication, division, modulus, exponential).&lt;/p&gt; &#xA;&lt;p&gt;Let us do some maths first before we write any Python code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2 + 3 = 5&lt;/li&gt; &#xA; &lt;li&gt;3 - 2 = 1&lt;/li&gt; &#xA; &lt;li&gt;3 * 2 = 6&lt;/li&gt; &#xA; &lt;li&gt;3 / 2 = 1.5&lt;/li&gt; &#xA; &lt;li&gt;3 ^ 2 = 3 x 3 = 9&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In python we have the following additional operations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3 % 2 = 1 =&amp;gt; which means finding the remainder&lt;/li&gt; &#xA; &lt;li&gt;3 // 2 = 1 =&amp;gt; which means removing the remainder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let us change the above mathematical expressions to Python code. The Python shell has been opened and let us write a comment at the very beginning of the shell.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;em&gt;comment&lt;/em&gt; is a part of the code which is not executed by python. So we can leave some text in our code to make our code more readable. Python does not run the comment part. A comment in python starts with hash(#) symbol. This is how you write a comment in python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; # comment starts with hash&#xA; # this is a python comment, because it starts with a (#) symbol&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/maths_on_python_shell.png&#34; alt=&#34;Maths on python shell&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before we move on to the next section, let us practice more on the Python interactive shell. Close the opened shell by writing &lt;em&gt;exit()&lt;/em&gt; on the shell and open it again and let us practice how to write text on the Python shell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/writing_string_on_shell.png&#34; alt=&#34;Writing String on python shell&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installing Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;The Python interactive shell is good to try and test small script codes but it will not be for a big project. In real work environment, developers use different code editors to write codes. In this 30 days of Python programming challenge we will use visual studio code. Visual studio code is a very popular open source text editor. I am a fan of vscode and I would recommend to &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;download&lt;/a&gt; visual studio code, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/vscode.png&#34; alt=&#34;Visual Studio Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you installed visual studio code, let us see how to use it. If you prefer a video, you can follow this Visual Studio Code for Python &lt;a href=&#34;https://www.youtube.com/watch?v=bn7Cx4z-vSo&#34;&gt;Video tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;How to use visual studio code&lt;/h4&gt; &#xA;&lt;p&gt;Open the visual studio code by double clicking the visual studio icon. When you open it you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/vscode_ui.png&#34; alt=&#34;Visual studio Code&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a folder named 30DaysOfPython on your desktop. Then open it using visual studio code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/how_to_open_project_on_vscode.png&#34; alt=&#34;Opening Project on Visual studio&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/opening_project.png&#34; alt=&#34;Opening a project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After opening it you will see shortcuts for creating files and folders inside of 30DaysOfPython project&#39;s directory. As you can see below, I have created the very first file, helloworld.py. You can do the same.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/helloworld.png&#34; alt=&#34;Creating a python file&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After a long day of coding, you want to close your code editor, right? This is how you will close the opened project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/closing_opened_project.png&#34; alt=&#34;Closing project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Congratulations, you have finished setting up the development environment. Let us start coding.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Python&lt;/h2&gt; &#xA;&lt;h3&gt;Python Syntax&lt;/h3&gt; &#xA;&lt;p&gt;A Python script can be written in Python interactive shell or in the code editor. A Python file has an extension .py.&lt;/p&gt; &#xA;&lt;h3&gt;Python Indentation&lt;/h3&gt; &#xA;&lt;p&gt;An indentation is a white space in a text. Indentation in many languages is used to increase code readability, however Python uses indentation to create block of codes. In other programming languages curly brackets are used to create blocks of codes instead of indentation. One of the common bugs when writing python code is wrong indentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/indentation.png&#34; alt=&#34;Indentation Error&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Comments&lt;/h3&gt; &#xA;&lt;p&gt;Comments are very important to make the code more readable and to leave remarks in our code. Python does not run comment parts of our code. Any text starting with hash(#) in Python is a comment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    # This is the first comment&#xA;    # This is the second comment&#xA;    # Python is eating the world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Triple quote can be used for multiline comment if it is not assigned to a variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#34;&#34;&#34;This is multiline comment&#xA;multiline comment takes multiple lines.&#xA;python is eating the world&#xA;&#34;&#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data types&lt;/h3&gt; &#xA;&lt;p&gt;In Python there are several types of data types. Let us get started with the most common ones. Different data types will be covered in detail in other sections. For the time being, let us just go through the different data types and get familiar with them. You do not have to have a clear understanding now.&lt;/p&gt; &#xA;&lt;h4&gt;Number&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integer: Integer(negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; &#xA; &lt;li&gt;Float: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; &#xA; &lt;li&gt;Complex Example 1 + j, 2 + 4j&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;String&lt;/h4&gt; &#xA;&lt;p&gt;A collection of one or more characters under a single or double quote. If a string is more than one sentence then we use a triple quote.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;&#39;Asabeneh&#39;&#xA;&#39;Finland&#39;&#xA;&#39;Python&#39;&#xA;&#39;I love teaching&#39;&#xA;&#39;I hope you are enjoying the first day of 30DaysOfPython Challenge&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Booleans&lt;/h4&gt; &#xA;&lt;p&gt;A boolean data type is either a True or False value. T and F should be always uppercase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    True  #  Is the light on? If it is on, then the value is True&#xA;    False # Is the light on? If it is off, then the value is False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List&lt;/h4&gt; &#xA;&lt;p&gt;Python list is an ordered collection which allows to store different data type items. A list is similar to an array in JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;[0, 1, 2, 3, 4, 5]  # all are the same data types - a list of numbers&#xA;[&#39;Banana&#39;, &#39;Orange&#39;, &#39;Mango&#39;, &#39;Avocado&#39;] # all the same data types - a list of strings (fruits)&#xA;[&#39;Finland&#39;,&#39;Estonia&#39;, &#39;Sweden&#39;,&#39;Norway&#39;] # all the same data types - a list of strings (countries)&#xA;[&#39;Banana&#39;, 10, False, 9.81] # different data types in the list - string, integer, boolean and float&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Dictionary&lt;/h4&gt; &#xA;&lt;p&gt;A Python dictionary object is an unordered collection of data in a key value pair format.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;{&#xA;&#39;first_name&#39;:&#39;Asabeneh&#39;,&#xA;&#39;last_name&#39;:&#39;Yetayeh&#39;,&#xA;&#39;country&#39;:&#39;Finland&#39;, &#xA;&#39;age&#39;:250, &#xA;&#39;is_married&#39;:True,&#xA;&#39;skills&#39;:[&#39;JS&#39;, &#39;React&#39;, &#39;Node&#39;, &#39;Python&#39;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tuple&lt;/h4&gt; &#xA;&lt;p&gt;A tuple is an ordered collection of different data types like list but tuples can not be modified once they are created. They are immutable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;(&#39;Asabeneh&#39;, &#39;Pawel&#39;, &#39;Brook&#39;, &#39;Abraham&#39;, &#39;Lidiya&#39;) # Names&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;(&#39;Earth&#39;, &#39;Jupiter&#39;, &#39;Neptune&#39;, &#39;Mars&#39;, &#39;Venus&#39;, &#39;Saturn&#39;, &#39;Uranus&#39;, &#39;Mercury&#39;) # planets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Set&lt;/h4&gt; &#xA;&lt;p&gt;A set is a collection of data types similar to list and tuple. Unlike list and tuple, set is not an ordered collection of items. Like in Mathematics, set in Python stores only unique items.&lt;/p&gt; &#xA;&lt;p&gt;In later sections, we will go in detail about each and every Python data type.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;{2, 4, 3, 5}&#xA;{3.14, 9.81, 2.7} # order is not important in set&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Checking Data types&lt;/h3&gt; &#xA;&lt;p&gt;To check the data type of certain data/variable we use the &lt;strong&gt;type&lt;/strong&gt; function. In the following terminal you will see different python data types:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/checking_data_types.png&#34; alt=&#34;Checking Data types&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Python File&lt;/h3&gt; &#xA;&lt;p&gt;First open your project folder, 30DaysOfPython. If you don&#39;t have this folder, create a folder name called 30DaysOfPython. Inside this folder, create a file called helloworld.py. Now, let&#39;s do what we did on python interactive shell using visual studio code.&lt;/p&gt; &#xA;&lt;p&gt;The Python interactive shell was printing without using &lt;strong&gt;print&lt;/strong&gt; but on visual studio code to see our result we should use a built in function *print(). The &lt;em&gt;print()&lt;/em&gt; built-in function takes one or more arguments as follows &lt;em&gt;print(&#39;arument1&#39;, &#39;argument2&#39;, &#39;argument3&#39;)&lt;/em&gt;. See the examples below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The file name is helloworld.py&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# Day 1 - 30DaysOfPython Challenge&#xA;&#xA;print(2 + 3)             # addition(+)&#xA;print(3 - 1)             # subtraction(-)&#xA;print(2 * 3)             # multiplication(*)&#xA;print(3 / 2)             # division(/)&#xA;print(3 ** 2)            # exponential(**)&#xA;print(3 % 2)             # modulus(%)&#xA;print(3 // 2)            # Floor division operator(//)&#xA;&#xA;# Checking data types&#xA;print(type(10))          # Int&#xA;print(type(3.14))        # Float&#xA;print(type(1 + 3j))      # Complex number&#xA;print(type(&#39;Asabeneh&#39;))  # String&#xA;print(type([1, 2, 3]))   # List&#xA;print(type({&#39;name&#39;:&#39;Asabeneh&#39;})) # Dictionary&#xA;print(type({9.8, 3.14, 2.7}))    # Set&#xA;print(type((9.8, 3.14, 2.7)))    # Tuple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the python file check the image below. You can run the python file either by running the green button on Visual Studio Code or by typing &lt;em&gt;python helloworld.py&lt;/em&gt; in the terminal .&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/images/running_python_script.png&#34; alt=&#34;Running python script&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;üåï You are amazing. You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscles.&lt;/p&gt; &#xA;&lt;h2&gt;üíª Exercises - Day 1&lt;/h2&gt; &#xA;&lt;h3&gt;Exercise: Level 1&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check the python version you are using&lt;/li&gt; &#xA; &lt;li&gt;Open the python interactive shell and do the following operations. The operands are 3 and 4. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;addition(+)&lt;/li&gt; &#xA;   &lt;li&gt;subtraction(-)&lt;/li&gt; &#xA;   &lt;li&gt;multiplication(*)&lt;/li&gt; &#xA;   &lt;li&gt;modulus(%)&lt;/li&gt; &#xA;   &lt;li&gt;division(/)&lt;/li&gt; &#xA;   &lt;li&gt;exponential(**)&lt;/li&gt; &#xA;   &lt;li&gt;floor division operator(//)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Write strings on the python interactive shell. The strings are the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Your name&lt;/li&gt; &#xA;   &lt;li&gt;Your family name&lt;/li&gt; &#xA;   &lt;li&gt;Your country&lt;/li&gt; &#xA;   &lt;li&gt;I am enjoying 30 days of python&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check the data types of the following data: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;10&lt;/li&gt; &#xA;   &lt;li&gt;9.8&lt;/li&gt; &#xA;   &lt;li&gt;3.14&lt;/li&gt; &#xA;   &lt;li&gt;4 - 4j&lt;/li&gt; &#xA;   &lt;li&gt;[&#39;Asabeneh&#39;, &#39;Python&#39;, &#39;Finland&#39;]&lt;/li&gt; &#xA;   &lt;li&gt;Your name&lt;/li&gt; &#xA;   &lt;li&gt;Your family name&lt;/li&gt; &#xA;   &lt;li&gt;Your country&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Exercise: Level 2&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a folder named day_1 inside 30DaysOfPython folder. Inside day_1 folder, create a python file helloworld.py and repeat questions 1, 2, 3 and 4. Remember to use &lt;em&gt;print()&lt;/em&gt; when you are working on a python file. Navigate to the directory where you have saved your file, and run it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Exercise: Level 3&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Write an example for different Python data types such as Number(Integer, Float, Complex), String, Boolean, List, Tuple, Set and Dictionary.&lt;/li&gt; &#xA; &lt;li&gt;Find an &lt;a href=&#34;https://en.wikipedia.org/wiki/Euclidean_distance#:~:text=In%20mathematics%2C%20the%20Euclidean%20distance,being%20called%20the%20Pythagorean%20distance.&#34;&gt;Euclidian distance&lt;/a&gt; between (2, 3) and (10, 8)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;üéâ CONGRATULATIONS ! üéâ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-Python/master/02_Day_Variables_builtin_functions/02_variables_builtin_functions.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mitmproxy/mitmproxy</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/mitmproxy/mitmproxy</id>
    <link href="https://github.com/mitmproxy/mitmproxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mitmproxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mitmproxy/mitmproxy/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/mitmproxy/mitmproxy/workflows/CI/badge.svg?branch=main&#34; alt=&#34;Continuous Integration Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mitmproxy/mitmproxy&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/codecov/c/github/mitmproxy/mitmproxy/main.svg?label=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/mitmproxy&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/pypi/v/mitmproxy.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/mitmproxy&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/pypi/pyversions/mitmproxy.svg?sanitize=true&#34; alt=&#34;Supported Python versions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mitmproxy&lt;/code&gt; is an interactive, SSL/TLS-capable intercepting proxy with a console interface for HTTP/1, HTTP/2, and WebSockets.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mitmdump&lt;/code&gt; is the command-line version of mitmproxy. Think tcpdump for HTTP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mitmweb&lt;/code&gt; is a web-based interface for mitmproxy.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The installation instructions are &lt;a href=&#34;https://docs.mitmproxy.org/stable/overview-installation&#34;&gt;here&lt;/a&gt;. If you want to install from source, see &lt;a href=&#34;https://raw.githubusercontent.com/mitmproxy/mitmproxy/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation &amp;amp; Help&lt;/h2&gt; &#xA;&lt;p&gt;General information, tutorials, and precompiled binaries can be found on the mitmproxy website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mitmproxy.org/&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/https%3A%2F%2F-mitmproxy.org-blue.svg?sanitize=true&#34; alt=&#34;mitmproxy.org&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The documentation for mitmproxy is available on our website:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.mitmproxy.org/stable/&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/docs-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;mitmproxy documentation stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.mitmproxy.org/main/&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/docs-dev-brightgreen.svg?sanitize=true&#34; alt=&#34;mitmproxy documentation dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have questions on how to use mitmproxy, please use GitHub Discussions!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mitmproxy/mitmproxy/discussions&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/help-github%20discussions-orange.svg?sanitize=true&#34; alt=&#34;mitmproxy discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project, mitmproxy welcomes contributions of all forms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mitmproxy/mitmproxy/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/dev_docs-CONTRIBUTING.md-blue&#34; alt=&#34;Dev Guide&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, please feel free to join our developer Slack!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://slack.mitmproxy.org/&#34;&gt;&lt;img src=&#34;https://shields.mitmproxy.org/badge/slack-mitmproxy-E01563.svg?sanitize=true&#34; alt=&#34;Slack Developer Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaddlePaddle/PaddleNLP</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/PaddlePaddle/PaddleNLP</id>
    <link href="https://github.com/PaddlePaddle/PaddleNLP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy-to-use and powerful NLP library with Awesome model zoo, supporting wide-range of NLP tasks from research to industrial applications, including Neural Search, Question Answering, Information Extraction and Sentiment Analysis end-to-end system.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/strong&gt;üÄÑ | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/README_en.md&#34;&gt;Englishüåé&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/imgs/paddlenlp.png&#34; align=&#34;middle&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-dfd.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/PaddlePaddle/PaddleNLP?color=ffa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.6.2+-aff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-pink.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/PaddlePaddle/PaddleNLP?color=9ea&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/commits&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/PaddlePaddle/PaddleNLP?color=3af&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/paddlenlp/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/paddlenlp?color=9cf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/PaddlePaddle/PaddleNLP?color=9cc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PaddlePaddle/PaddleNLP?color=ccf&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;#ÁâπÊÄß&#34;&gt; ÁâπÊÄß &lt;/a&gt; | &lt;a href=&#34;#ÂÆâË£Ö&#34;&gt; ÂÆâË£Ö &lt;/a&gt; | &lt;a href=&#34;#Âø´ÈÄüÂºÄÂßã&#34;&gt; Âø´ÈÄüÂºÄÂßã &lt;/a&gt; | &lt;a href=&#34;#apiÊñáÊ°£&#34;&gt; APIÊñáÊ°£ &lt;/a&gt; | &lt;a href=&#34;#Á§æÂå∫‰∫§ÊµÅ&#34;&gt; Á§æÂå∫‰∫§ÊµÅ &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;PaddleNLP&lt;/strong&gt;ÊòØ‰∏ÄÊ¨æ&lt;strong&gt;ÁÆÄÂçïÊòìÁî®&lt;/strong&gt;‰∏î&lt;strong&gt;ÂäüËÉΩÂº∫Â§ß&lt;/strong&gt;ÁöÑËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÂºÄÂèëÂ∫ì„ÄÇËÅöÂêà‰∏öÁïå&lt;strong&gt;‰ºòË¥®È¢ÑËÆ≠ÁªÉÊ®°Âûã&lt;/strong&gt;Âπ∂Êèê‰æõ&lt;strong&gt;ÂºÄÁÆ±Âç≥Áî®&lt;/strong&gt;ÁöÑÂºÄÂèë‰ΩìÈ™åÔºåË¶ÜÁõñNLPÂ§öÂú∫ÊôØÁöÑÊ®°ÂûãÂ∫ìÊê≠ÈÖç&lt;strong&gt;‰∫ß‰∏öÂÆûË∑µËåÉ‰æã&lt;/strong&gt;ÂèØÊª°Ë∂≥ÂºÄÂèëËÄÖ&lt;strong&gt;ÁÅµÊ¥ªÂÆöÂà∂&lt;/strong&gt;ÁöÑÈúÄÊ±Ç„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;News üì¢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;üî• 2022.5.18-19 BÁ´ô&lt;a href=&#34;https://space.bilibili.com/476867757&#34;&gt;È£ûÊ°®Áõ¥Êí≠ËØæ&lt;/a&gt;ÔºåËß£ËØªÈÄöÁî®‰ø°ÊÅØÊäΩÂèñÊäÄÊúØ&lt;strong&gt;UIE&lt;/strong&gt;Âíå&lt;strong&gt;ERNIE 3.0&lt;/strong&gt;ËΩªÈáèÁ∫ßÊ®°ÂûãËÉΩÂäõÔºåÊ¨¢ËøéÊä•ÂêçÊù•‰∫§ÊµÅ„ÄÇ&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168411900-d9f3d777-99ab-4b5c-8cdc-ef747a48b864.jpg&#34; width=&#34;150&#34; height=&#34;150&#34;&gt; &#xA;  &lt;/div&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üî• 2022.5.16 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/releases/tag/v2.3.0&#34;&gt;&lt;strong&gt;PaddleNLP v2.3&lt;/strong&gt;&lt;/a&gt;ÂÖ®Êñ∞ÂèëÂ∏ÉÔºÅüéâ&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;üíé ÂèëÂ∏ÉÈÄöÁî®‰ø°ÊÅØÊäΩÂèñÊäÄÊúØ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo/uie&#34;&gt;&lt;strong&gt;UIE&lt;/strong&gt;&lt;/a&gt;ÔºåÂçïÊ®°ÂûãÊîØÊåÅÂÆû‰ΩìËØÜÂà´„ÄÅÂÖ≥Á≥ªÂíå‰∫ã‰ª∂ÊäΩÂèñ„ÄÅÊÉÖÊÑüÂàÜÊûêÁ≠âÂ§öÁßçÂºÄÊîæÂüü‰ø°ÊÅØÊäΩÂèñ‰ªªÂä°Ôºå‰∏çÈôêÈ¢ÜÂüüÂíåÊäΩÂèñÁõÆÊ†áÔºåÊîØÊåÅ&lt;strong&gt;‰∏ÄÈîÆÊäΩÂèñ&lt;/strong&gt;‰∏éÂÖ®ÊµÅÁ®ã&lt;strong&gt;Â∞èÊ†∑Êú¨&lt;/strong&gt;È´òÊïàÂÆöÂà∂ÂºÄÂèë„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;üòä ÂèëÂ∏ÉÊñáÂøÉÂ§ßÊ®°Âûã&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo/ernie-3.0&#34;&gt;&lt;strong&gt;ERNIE 3.0&lt;/strong&gt;&lt;/a&gt;ËΩªÈáèÁ∫ßÊ®°ÂûãÔºåÂú®&lt;a href=&#34;https://www.cluebenchmarks.com/&#34;&gt;CLUE&lt;/a&gt;‰∏äÂÆûÁé∞ÂêåËßÑÊ®°ÁªìÊûÑÊïàÊûúÊúÄ‰Ω≥ÔºåÂπ∂Êèê‰æõ&lt;strong&gt;üóúÔ∏èÊó†ÊçüÂéãÁº©&lt;/strong&gt;Âíå&lt;strong&gt;‚öôÔ∏èÂÖ®Âú∫ÊôØÈÉ®ÁΩ≤&lt;/strong&gt;ÊñπÊ°à„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;üè• ÂèëÂ∏É‰∏≠ÊñáÂåªÁñóÈ¢ÜÂüüÈ¢ÑËÆ≠ÁªÉÊ®°Âûã&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo/ernie-health&#34;&gt;&lt;strong&gt;ERNIE-Health&lt;/strong&gt;&lt;/a&gt;Ôºå&lt;a href=&#34;https://github.com/CBLUEbenchmark/CBLUE&#34;&gt;CBLUE&lt;/a&gt;‰∏≠ÊñáÂåªÁñó‰ø°ÊÅØÂ§ÑÁêÜËØÑÊµãÂÜ†ÂÜõÊ®°Âûã„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;üí¨ ÂèëÂ∏ÉÂ§ßËßÑÊ®°Áôæ‰∫øÂºÄÊîæÂüüÂØπËØùÈ¢ÑËÆ≠ÁªÉÊ®°Âûã&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleNLP/tree/develop/model_zoo/plato-xl&#34;&gt;&lt;strong&gt;PLATO-XL&lt;/strong&gt;&lt;/a&gt; ÔºåÈÖçÂêà‚ö°&lt;strong&gt;FasterGeneration&lt;/strong&gt;‚ö°Âø´ÈÄüÂÆûÁé∞È´òÊÄßËÉΩGPUÂπ∂Ë°åÊé®ÁêÜÂä†ÈÄü„ÄÇ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üì¨ 2022.12.12 &lt;strong&gt;PaddleNLP v2.2&lt;/strong&gt;ÂèëÂ∏ÉÔºÅÊñ∞Â¢ûÂºÄÁÆ±Âç≥Áî®ÁöÑNLPËÉΩÂäõ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/model_zoo/taskflow.md&#34;&gt;Taskflow&lt;/a&gt;ÔºÅÈÖçÂ•óËØ≠‰πâÊ£ÄÁ¥¢„ÄÅÊô∫ËÉΩÈóÆÁ≠î„ÄÅËØÑËÆ∫ËßÇÁÇπÊäΩÂèñ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications&#34;&gt;‰∫ß‰∏öÊ°à‰æã&lt;/a&gt;ÔºåÂø´ÈÄüÊê≠Âª∫Á´ØÂà∞Á´ØNLPÁ≥ªÁªüÔºÅÈÖçÂ•óËßÜÈ¢ëËØæÁ®ã&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/24902&#34;&gt;Áõ¥ÈÄöËΩ¶&lt;/a&gt;ÔºÅ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;#ÂºÄÁÆ±Âç≥Áî®ÁöÑnlpÂ∑•ÂÖ∑ÈõÜ&#34;&gt; üì¶ ÂºÄÁÆ±Âç≥Áî®ÁöÑNLPÂ∑•ÂÖ∑ÈõÜ &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;#‰∏∞ÂØåÂÆåÂ§áÁöÑ‰∏≠ÊñáÊ®°ÂûãÂ∫ì&#34;&gt; ü§ó ‰∏∞ÂØåÂÆåÂ§áÁöÑ‰∏≠ÊñáÊ®°ÂûãÂ∫ì &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;#‰∫ß‰∏öÁ∫ßÁ´ØÂà∞Á´ØÁ≥ªÁªüËåÉ‰æã&#34;&gt; üéõÔ∏è ‰∫ß‰∏öÁ∫ßÁ´ØÂà∞Á´ØÁ≥ªÁªüËåÉ‰æã &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;#È´òÊÄßËÉΩÂàÜÂ∏ÉÂºèËÆ≠ÁªÉ‰∏éÊé®ÁêÜ&#34;&gt; üöÄ È´òÊÄßËÉΩÂàÜÂ∏ÉÂºèËÆ≠ÁªÉ‰∏éÊé®ÁêÜ &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;ÂºÄÁÆ±Âç≥Áî®ÁöÑNLPÂ∑•ÂÖ∑ÈõÜ&lt;/h3&gt; &#xA;&lt;p&gt;TaskflowÊèê‰æõ‰∏∞ÂØåÁöÑ&lt;strong&gt;üì¶ÂºÄÁÆ±Âç≥Áî®&lt;/strong&gt;ÁöÑ‰∫ß‰∏öÁ∫ßNLPÈ¢ÑÁΩÆÊ®°ÂûãÔºåË¶ÜÁõñËá™ÁÑ∂ËØ≠Ë®ÄÁêÜËß£‰∏éÁîüÊàê‰∏§Â§ßÂú∫ÊôØÔºåÊèê‰æõ&lt;strong&gt;üí™‰∫ß‰∏öÁ∫ßÁöÑÊïàÊûú&lt;/strong&gt;‰∏é&lt;strong&gt;‚ö°Ô∏èÊûÅËá¥ÁöÑÊé®ÁêÜÊÄßËÉΩ&lt;/strong&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11793384/159693816-fda35221-9751-43bb-b05c-7fc77571dd76.gif&#34; alt=&#34;taskflow1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ÊñπÊ≥ïÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/model_zoo/taskflow.md&#34;&gt;TaskflowÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;‰∏∞ÂØåÂÆåÂ§áÁöÑ‰∏≠ÊñáÊ®°ÂûãÂ∫ì&lt;/h3&gt; &#xA;&lt;h4&gt;üÄÑ ‰∏öÁïåÊúÄÂÖ®ÁöÑ‰∏≠ÊñáÈ¢ÑËÆ≠ÁªÉÊ®°Âûã&lt;/h4&gt; &#xA;&lt;p&gt;Á≤æÈÄâ 45+ ‰∏™ÁΩëÁªúÁªìÊûÑÂíå 500+ ‰∏™È¢ÑËÆ≠ÁªÉÊ®°ÂûãÂèÇÊï∞ÔºåÊ∂µÁõñ‰∏öÁïåÊúÄÂÖ®ÁöÑ‰∏≠ÊñáÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÔºöÊó¢ÂåÖÊã¨ÊñáÂøÉNLPÂ§ßÊ®°ÂûãÁöÑERNIE„ÄÅPLATOÁ≠âÔºå‰πüË¶ÜÁõñBERT„ÄÅGPT„ÄÅRoBERTa„ÄÅT5Á≠â‰∏ªÊµÅÁªìÊûÑ„ÄÇÈÄöËøá&lt;code&gt;AutoModel&lt;/code&gt; API‰∏ÄÈîÆ‚ö°&lt;strong&gt;È´òÈÄü‰∏ãËΩΩ&lt;/strong&gt;‚ö°„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from paddlenlp.transformers import *&#xA;&#xA;ernie = AutoModel.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;bert = AutoModel.from_pretrained(&#39;bert-wwm-chinese&#39;)&#xA;albert = AutoModel.from_pretrained(&#39;albert-chinese-tiny&#39;)&#xA;roberta = AutoModel.from_pretrained(&#39;roberta-wwm-ext&#39;)&#xA;electra = AutoModel.from_pretrained(&#39;chinese-electra-small&#39;)&#xA;gpt = AutoModelForPretraining.from_pretrained(&#39;gpt-cpm-large-cn&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂØπÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÂ∫îÁî®ËåÉÂºèÂ¶ÇËØ≠‰πâË°®Á§∫„ÄÅÊñáÊú¨ÂàÜÁ±ª„ÄÅÂè•ÂØπÂåπÈÖç„ÄÅÂ∫èÂàóÊ†áÊ≥®„ÄÅÈóÆÁ≠îÁ≠âÔºåÊèê‰æõÁªü‰∏ÄÁöÑAPI‰ΩìÈ™å„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import paddle&#xA;from paddlenlp.transformers import *&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;text = tokenizer(&#39;Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜ&#39;)&#xA;&#xA;# ËØ≠‰πâË°®Á§∫&#xA;model = AutoModel.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;sequence_output, pooled_output = model(input_ids=paddle.to_tensor([text[&#39;input_ids&#39;]]))&#xA;# ÊñáÊú¨ÂàÜÁ±ª &amp;amp; Âè•ÂØπÂåπÈÖç&#xA;model = AutoModelForSequenceClassification.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;# Â∫èÂàóÊ†áÊ≥®&#xA;model = AutoModelForTokenClassification.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;# ÈóÆÁ≠î&#xA;model = AutoModelForQuestionAnswering.from_pretrained(&#39;ernie-3.0-medium-zh&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;üíØ ÂÖ®Âú∫ÊôØË¶ÜÁõñÁöÑÂ∫îÁî®Á§∫‰æã&lt;/h4&gt; &#xA;&lt;p&gt;Ë¶ÜÁõñ‰ªéÂ≠¶ÊúØÂà∞‰∫ß‰∏öÁöÑNLPÂ∫îÁî®Á§∫‰æãÔºåÊ∂µÁõñNLPÂü∫Á°ÄÊäÄÊúØ„ÄÅNLPÁ≥ªÁªüÂ∫îÁî®‰ª•ÂèäÊãìÂ±ïÂ∫îÁî®„ÄÇÂÖ®Èù¢Âü∫‰∫éÈ£ûÊ°®Ê†∏ÂøÉÊ°ÜÊû∂2.0ÂÖ®Êñ∞API‰ΩìÁ≥ªÂºÄÂèëÔºå‰∏∫ÂºÄÂèëËÄÖÊèê‰æõÈ£ûÊ°®ÊñáÊú¨È¢ÜÂüüÁöÑÊúÄ‰Ω≥ÂÆûË∑µ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Á≤æÈÄâÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÁ§∫‰æãÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo&#34;&gt;Model Zoo&lt;/a&gt;ÔºåÊõ¥Â§öÂú∫ÊôØÁ§∫‰æãÊñáÊ°£ÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/examples&#34;&gt;examplesÁõÆÂΩï&lt;/a&gt;„ÄÇÊõ¥ÊúâÂÖçË¥πÁÆóÂäõÊîØÊåÅÁöÑ&lt;a href=&#34;https://aistudio.baidu.com&#34;&gt;AI Studio&lt;/a&gt;Âπ≥Âè∞ÁöÑ&lt;a href=&#34;https://aistudio.baidu.com/aistudio/personalcenter/thirdview/574995&#34;&gt;Notbook‰∫§‰∫íÂºèÊïôÁ®ã&lt;/a&gt;Êèê‰æõÂÆûË∑µ„ÄÇ&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; PaddleNLPÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÈÄÇÁî®‰ªªÂä°Ê±áÊÄªÔºà&lt;b&gt;ÁÇπÂáªÂ±ïÂºÄËØ¶ÊÉÖ&lt;/b&gt;Ôºâ&lt;/summary&gt;&#xA; &lt;div&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th align=&#34;left&#34;&gt;Model&lt;/th&gt; &#xA;     &lt;th&gt;Sequence Classification&lt;/th&gt; &#xA;     &lt;th&gt;Token Classification&lt;/th&gt; &#xA;     &lt;th&gt;Question Answering&lt;/th&gt; &#xA;     &lt;th&gt;Text Generation&lt;/th&gt; &#xA;     &lt;th&gt;Multiple Choice&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ALBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;BART&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;BERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;BigBird&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;BlenderBot&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ChineseBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ConvBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;CTRL&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;DistilBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ELECTRA&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE-CTM&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE-Doc&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE-GEN&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE-Gram&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ERNIE-M&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;FNet&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;Funnel-Transformer&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;GPT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;LayoutLM&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;LayoutLMv2&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;LayoutXLM&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;LUKE&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;mBART&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;MegatronBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;MobileBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;MPNet&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;NEZHA&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;PP-MiniLM&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;ProphetNet&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;Reformer&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;RemBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;RoBERTa&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;RoFormer&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;SKEP&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;SqueezeBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;T5&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;TinyBERT&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;UnifiedTransformer&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;XLNet&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;     &lt;td&gt;‚ùå&lt;/td&gt; &#xA;     &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/div&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;ÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/model_zoo/index.rst&#34;&gt;Transformer ÊñáÊ°£&lt;/a&gt; Êü•ÁúãÁõÆÂâçÊîØÊåÅÁöÑÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÁªìÊûÑ„ÄÅÂèÇÊï∞ÂíåËØ¶ÁªÜÁî®Ê≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;‰∫ß‰∏öÁ∫ßÁ´ØÂà∞Á´ØÁ≥ªÁªüËåÉ‰æã&lt;/h3&gt; &#xA;&lt;p&gt;PaddleNLPÈíàÂØπ‰ø°ÊÅØÊäΩÂèñ„ÄÅËØ≠‰πâÊ£ÄÁ¥¢„ÄÅÊô∫ËÉΩÈóÆÁ≠î„ÄÅÊÉÖÊÑüÂàÜÊûêÁ≠âÈ´òÈ¢ëNLPÂú∫ÊôØÔºåÊèê‰æõ‰∫ÜÁ´ØÂà∞Á´ØÁ≥ªÁªüËåÉ‰æãÔºåÊâìÈÄö&lt;em&gt;Êï∞ÊçÆÊ†áÊ≥®&lt;/em&gt;-&lt;em&gt;Ê®°ÂûãËÆ≠ÁªÉ&lt;/em&gt;-&lt;em&gt;Ê®°ÂûãË∞É‰ºò&lt;/em&gt;-&lt;em&gt;È¢ÑÊµãÈÉ®ÁΩ≤&lt;/em&gt;ÂÖ®ÊµÅÁ®ãÔºåÊåÅÁª≠Èôç‰ΩéNLPÊäÄÊúØ‰∫ß‰∏öËêΩÂú∞Èó®Êßõ„ÄÇÊõ¥Â§öËØ¶ÁªÜÁöÑÁ≥ªÁªüÁ∫ß‰∫ß‰∏öËåÉ‰æã‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications&#34;&gt;Applications&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;üîç ËØ≠‰πâÊ£ÄÁ¥¢Á≥ªÁªü&lt;/h4&gt; &#xA;&lt;p&gt;ÈíàÂØπÊó†ÁõëÁù£Êï∞ÊçÆ„ÄÅÊúâÁõëÁù£Êï∞ÊçÆÁ≠âÂ§öÁßçÊï∞ÊçÆÊÉÖÂÜµÔºåÁªìÂêàSimCSE„ÄÅIn-batch Negatives„ÄÅERNIE-GramÂçïÂ°îÊ®°ÂûãÁ≠âÔºåÊé®Âá∫ÂâçÊ≤øÁöÑËØ≠‰πâÊ£ÄÁ¥¢ÊñπÊ°àÔºåÂåÖÂê´Âè¨Âõû„ÄÅÊéíÂ∫èÁéØËäÇÔºåÊâìÈÄöËÆ≠ÁªÉ„ÄÅË∞É‰ºò„ÄÅÈ´òÊïàÂêëÈáèÊ£ÄÁ¥¢ÂºïÊìéÂª∫Â∫ìÂíåÊü•ËØ¢ÂÖ®ÊµÅÁ®ã„ÄÇ&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168514909-8817d79a-72c4-4be1-8080-93d1f682bb46.gif&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications/neural_search&#34;&gt;ËØ≠‰πâÊ£ÄÁ¥¢Á≥ªÁªü&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;‚ùì Êô∫ËÉΩÈóÆÁ≠îÁ≥ªÁªü&lt;/h4&gt; &#xA;&lt;p&gt;Âü∫‰∫é&lt;a href=&#34;https://github.com/PaddlePaddle/RocketQA&#34;&gt;üöÄRocketQA&lt;/a&gt;ÊäÄÊúØÁöÑÊ£ÄÁ¥¢ÂºèÈóÆÁ≠îÁ≥ªÁªüÔºåÊîØÊåÅFAQÈóÆÁ≠î„ÄÅËØ¥Êòé‰π¶ÈóÆÁ≠îÁ≠âÂ§öÁßç‰∏öÂä°Âú∫ÊôØ„ÄÇ&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168514868-1babe981-c675-4f89-9168-dd0a3eede315.gif&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications/question_answering&#34;&gt;Êô∫ËÉΩÈóÆÁ≠îÁ≥ªÁªü&lt;/a&gt;‰∏é&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications/doc_vqa&#34;&gt;ÊñáÊ°£Êô∫ËÉΩÈóÆÁ≠î&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;üíå ËØÑËÆ∫ËßÇÁÇπÊäΩÂèñ‰∏éÊÉÖÊÑüÂàÜÊûê&lt;/h4&gt; &#xA;&lt;p&gt;Âü∫‰∫éÊÉÖÊÑüÁü•ËØÜÂ¢ûÂº∫È¢ÑËÆ≠ÁªÉÊ®°ÂûãSKEPÔºåÈíàÂØπ‰∫ßÂìÅËØÑËÆ∫ËøõË°åËØÑ‰ª∑Áª¥Â∫¶ÂíåËßÇÁÇπÊäΩÂèñÔºå‰ª•ÂèäÁªÜÁ≤íÂ∫¶ÁöÑÊÉÖÊÑüÂàÜÊûê„ÄÇ&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168407260-b7f92800-861c-4207-98f3-2291e0102bbe.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications/sentiment_analysis&#34;&gt;ÊÉÖÊÑüÂàÜÊûê&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;üéôÔ∏è Êô∫ËÉΩËØ≠Èü≥Êåá‰ª§Ëß£Êûê&lt;/h4&gt; &#xA;&lt;p&gt;ÈõÜÊàê‰∫Ü&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech&#34;&gt;PaddleSpeech&lt;/a&gt;Âíå&lt;a href=&#34;https://ai.baidu.com/&#34;&gt;ÁôæÂ∫¶ÂºÄÊîæÂπ≥Âè∞&lt;/a&gt;ÁöÑÁöÑËØ≠Èü≥ËØÜÂà´Âíå&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo/uie&#34;&gt;UIE&lt;/a&gt;ÈÄöÁî®‰ø°ÊÅØÊäΩÂèñÁ≠âÊäÄÊúØÔºåÊâìÈÄ†Êô∫ËÉΩ‰∏Ä‰ΩìÂåñÁöÑËØ≠Èü≥Êåá‰ª§Ëß£ÊûêÁ≥ªÁªüËåÉ‰æãÔºåËØ•ÊñπÊ°àÂèØÂ∫îÁî®‰∫éÊô∫ËÉΩËØ≠Èü≥Â°´Âçï„ÄÅÊô∫ËÉΩËØ≠Èü≥‰∫§‰∫í„ÄÅÊô∫ËÉΩËØ≠Èü≥Ê£ÄÁ¥¢Á≠âÂú∫ÊôØÔºåÊèêÈ´ò‰∫∫Êú∫‰∫§‰∫íÊïàÁéá„ÄÇ&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/16698950/168589100-a6c6f346-97bb-47b2-ac26-8d50e71fddc5.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/applications/speech_cmd_analysis&#34;&gt;Êô∫ËÉΩËØ≠Èü≥Êåá‰ª§Ëß£Êûê&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;È´òÊÄßËÉΩÂàÜÂ∏ÉÂºèËÆ≠ÁªÉ‰∏éÊé®ÁêÜ&lt;/h3&gt; &#xA;&lt;h4&gt;‚ö° FasterTokenizersÔºöÈ´òÊÄßËÉΩÊñáÊú¨Â§ÑÁêÜÂ∫ì&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168407921-b4395b1d-44bd-41a0-8c58-923ba2b703ef.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;AutoTokenizer.from_pretrained(&#34;ernie-3.0-medium-zh&#34;, use_faster=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‰∏∫‰∫ÜÂÆûÁé∞Êõ¥ÊûÅËá¥ÁöÑÊ®°ÂûãÈÉ®ÁΩ≤ÊÄßËÉΩÔºåÂÆâË£ÖFastTokenizersÂêéÂè™ÈúÄÂú®&lt;code&gt;AutoTokenizer&lt;/code&gt; API‰∏äÊâìÂºÄ &lt;code&gt;use_faster=True&lt;/code&gt;ÈÄâÈ°πÔºåÂç≥ÂèØË∞ÉÁî®C++ÂÆûÁé∞ÁöÑÈ´òÊÄßËÉΩÂàÜËØçÁÆóÂ≠êÔºåËΩªÊùæËé∑ÂæóË∂ÖPythonÁôæ‰ΩôÂÄçÁöÑÊñáÊú¨Â§ÑÁêÜÂä†ÈÄüÔºåÊõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/faster_tokenizers&#34;&gt;FasterTokenizersÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;‚ö°Ô∏è FasterGenerationÔºöÈ´òÊÄßËÉΩÁîüÊàêÂä†ÈÄüÂ∫ì&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168407831-914dced0-3a5a-40b8-8a65-ec82bf13e53c.gif&#34; width=&#34;400&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = GPTLMHeadModel.from_pretrained(&#39;gpt-cpm-large-cn&#39;)&#xA;...&#xA;outputs, _ = model.generate(&#xA;    input_ids=inputs_ids, max_length=10, decode_strategy=&#39;greedy_search&#39;,&#xA;    use_faster=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁÆÄÂçïÂú∞Âú®&lt;code&gt;generate()&lt;/code&gt;API‰∏äÊâìÂºÄ&lt;code&gt;use_faster=True&lt;/code&gt;ÈÄâÈ°πÔºåËΩªÊùæÂú®Transformer„ÄÅGPT„ÄÅBART„ÄÅPLATO„ÄÅUniLMÁ≠âÁîüÊàêÂºèÈ¢ÑËÆ≠ÁªÉÊ®°Âûã‰∏äËé∑Âæó5ÂÄç‰ª•‰∏äGPUÂä†ÈÄüÔºåÊõ¥Â§ö‰ΩøÁî®ËØ¥ÊòéÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/faster_generation&#34;&gt;FasterGenerationÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;üöÄ FleetÔºöÈ£ûÊ°®4DÊ∑∑ÂêàÂπ∂Ë°åÂàÜÂ∏ÉÂºèËÆ≠ÁªÉÊäÄÊúØ&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168515134-513f13e0-9902-40ef-98fa-528271dcccda.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Êõ¥Â§öÂÖ≥‰∫éÂçÉ‰∫øÁ∫ßAIÊ®°ÂûãÁöÑÂàÜÂ∏ÉÂºèËÆ≠ÁªÉ‰ΩøÁî®ËØ¥ÊòéÂèØÂèÇËÄÉ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/examples/language_model/gpt-3&#34;&gt;GPT-3&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂÆâË£Ö&lt;/h2&gt; &#xA;&lt;h3&gt;ÁéØÂ¢É‰æùËµñ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;python &amp;gt;= 3.6&lt;/li&gt; &#xA; &lt;li&gt;paddlepaddle &amp;gt;= 2.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;pipÂÆâË£Ö&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install --upgrade paddlenlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Êõ¥Â§öÂÖ≥‰∫éPaddlePaddleÂíåPaddleNLPÂÆâË£ÖÁöÑËØ¶ÁªÜÊïôÁ®ãËØ∑Êü•Áúã&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/get_started/installation.rst&#34;&gt;Installation&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; &#xA;&lt;p&gt;ËøôÈáå‰ª•‰ø°ÊÅØÊäΩÂèñ-ÂëΩÂêçÂÆû‰ΩìËØÜÂà´‰ªªÂä°ÔºåUIEÊ®°Âûã‰∏∫‰æãÔºåÊù•ËØ¥ÊòéÂ¶Ç‰ΩïÂø´ÈÄü‰ΩøÁî®PaddleNLP:&lt;/p&gt; &#xA;&lt;h3&gt;‰∏ÄÈîÆÈ¢ÑÊµã&lt;/h3&gt; &#xA;&lt;p&gt;PaddleNLPÊèê‰æõ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/docs/model_zoo/taskflow.md&#34;&gt;‰∏ÄÈîÆÈ¢ÑÊµãÂäüËÉΩ&lt;/a&gt;ÔºåÊó†ÈúÄËÆ≠ÁªÉÔºåÁõ¥Êé•ËæìÂÖ•Êï∞ÊçÆÂç≥ÂèØÂºÄÊîæÂüüÊäΩÂèñÁªìÊûúÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from pprint import pprint&#xA;&amp;gt;&amp;gt;&amp;gt; from paddlenlp import Taskflow&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; schema = [&#39;Êó∂Èó¥&#39;, &#39;ÈÄâÊâã&#39;, &#39;Ëµõ‰∫ãÂêçÁß∞&#39;] # Define the schema for entity extraction&#xA;&amp;gt;&amp;gt;&amp;gt; ie = Taskflow(&#39;information_extraction&#39;, schema=schema)&#xA;&amp;gt;&amp;gt;&amp;gt; pprint(ie(&#34;2Êúà8Êó•‰∏äÂçàÂåó‰∫¨ÂÜ¨Â••‰ºöËá™Áî±ÂºèÊªëÈõ™Â•≥Â≠êÂ§ßË∑≥Âè∞ÂÜ≥Ëµõ‰∏≠‰∏≠ÂõΩÈÄâÊâãË∞∑Áà±Âáå‰ª•188.25ÂàÜËé∑ÂæóÈáëÁâåÔºÅ&#34;))&#xA;[{&#39;Êó∂Èó¥&#39;: [{&#39;end&#39;: 6,&#xA;          &#39;probability&#39;: 0.9857378532924486,&#xA;          &#39;start&#39;: 0,&#xA;          &#39;text&#39;: &#39;2Êúà8Êó•‰∏äÂçà&#39;}],&#xA;  &#39;Ëµõ‰∫ãÂêçÁß∞&#39;: [{&#39;end&#39;: 23,&#xA;            &#39;probability&#39;: 0.8503089953268272,&#xA;            &#39;start&#39;: 6,&#xA;            &#39;text&#39;: &#39;Âåó‰∫¨ÂÜ¨Â••‰ºöËá™Áî±ÂºèÊªëÈõ™Â•≥Â≠êÂ§ßË∑≥Âè∞ÂÜ≥Ëµõ&#39;}],&#xA;  &#39;ÈÄâÊâã&#39;: [{&#39;end&#39;: 31,&#xA;          &#39;probability&#39;: 0.8981548639781138,&#xA;          &#39;start&#39;: 28,&#xA;          &#39;text&#39;: &#39;Ë∞∑Áà±Âáå&#39;}]}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Â∞èÊ†∑Êú¨Â≠¶‰π†&lt;/h3&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÂØπ‰∏ÄÈîÆÈ¢ÑÊµãÊïàÊûú‰∏çÊª°ÊÑèÔºå‰πüÂèØ‰ª•‰ΩøÁî®Â∞ëÈáèÊï∞ÊçÆËøõË°åÊ®°ÂûãÁ≤æË∞ÉÔºåËøõ‰∏ÄÊ≠•ÊèêÂçáÁâπÂÆöÂú∫ÊôØÁöÑÊïàÊûúÔºåËØ¶ËßÅ&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo/uie/&#34;&gt;UIEÂ∞èÊ†∑Êú¨ÂÆöÂà∂ËÆ≠ÁªÉ&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êõ¥Â§öPaddleNLPÂÜÖÂÆπÂèØÂèÇËÄÉÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/model_zoo&#34;&gt;Á≤æÈÄâÊ®°ÂûãÂ∫ì&lt;/a&gt;ÔºåÂåÖÂê´‰ºòË¥®È¢ÑËÆ≠ÁªÉÊ®°ÂûãÁöÑÁ´ØÂà∞Á´ØÂÖ®ÊµÅÁ®ã‰ΩøÁî®„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/examples&#34;&gt;Â§öÂú∫ÊôØÁ§∫‰æã&lt;/a&gt;Ôºå‰∫ÜËß£Â¶Ç‰Ωï‰ΩøÁî®PaddleNLPËß£ÂÜ≥NLPÂ§öÁßçÊäÄÊúØÈóÆÈ¢òÔºåÂåÖÂê´Âü∫Á°ÄÊäÄÊúØ„ÄÅÁ≥ªÁªüÂ∫îÁî®‰∏éÊãìÂ±ïÂ∫îÁî®„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/personalcenter/thirdview/574995&#34;&gt;‰∫§‰∫íÂºèÊïôÁ®ã&lt;/a&gt;ÔºåÂú®üÜìÂÖçË¥πÁÆóÂäõÂπ≥Âè∞AI Studio‰∏äÂø´ÈÄüÂ≠¶‰π†PaddleNLP„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;APIÊñáÊ°£&lt;/h2&gt; &#xA;&lt;p&gt;PaddleNLPÊèê‰æõÂÖ®ÊµÅÁ®ãÁöÑÊñáÊú¨È¢ÜÂüüAPIÔºåÂèØÂ§ßÂπÖÊèêÂçáNLP‰ªªÂä°Âª∫Ê®°ÁöÑÊïàÁéáÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅ&lt;a href=&#34;https://www.luge.ai&#34;&gt;ÂçÉË®Ä&lt;/a&gt;Á≠â‰∏∞ÂØå‰∏≠ÊñáÊï∞ÊçÆÈõÜÂä†ËΩΩÁöÑ&lt;a href=&#34;https://paddlenlp.readthedocs.io/zh/latest/data_prepare/dataset_list.html&#34;&gt;Dataset API&lt;/a&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Êèê‰æõü§óHugging Face StyleÁöÑAPIÔºåÊîØÊåÅ &lt;strong&gt;500+&lt;/strong&gt; ‰ºòË¥®È¢ÑËÆ≠ÁªÉÊ®°ÂûãÂä†ËΩΩÁöÑ&lt;a href=&#34;https://paddlenlp.readthedocs.io/zh/latest/model_zoo/index.html&#34;&gt;Transformers API&lt;/a&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Êèê‰æõ30+Â§öËØ≠Ë®ÄËØçÂêëÈáèÁöÑ&lt;a href=&#34;https://paddlenlp.readthedocs.io/zh/latest/model_zoo/embeddings.html&#34;&gt;Embedding API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Êõ¥Â§ö‰ΩøÁî®ÊñπÊ≥ïËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://paddlenlp.readthedocs.io/zh/latest/&#34;&gt;APIÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Á§æÂå∫‰∫§ÊµÅ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ÂæÆ‰ø°Êâ´Êèè‰∫åÁª¥Á†ÅÂπ∂Â°´ÂÜôÈóÆÂç∑‰πãÂêéÔºåÂä†ÂÖ•‰∫§ÊµÅÁæ§È¢ÜÂèñÁ¶èÂà©&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ëé∑Âèñ5Êúà18-19Êó•ÊØèÊôö20:30„Ää‰∫ß‰∏öÁ∫ßÈÄöÁî®‰ø°ÊÅØÊäΩÂèñÊäÄÊúØUIE+ERNIEËΩªÈáèÁ∫ßÊ®°Âûã„ÄãÁõ¥Êí≠ËØæÈìæÊé•„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;10GÈáçÁ£ÖNLPÂ≠¶‰π†Â§ßÁ§ºÂåÖÔºÅ&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;img src=&#34;https://user-images.githubusercontent.com/11793384/168411900-d9f3d777-99ab-4b5c-8cdc-ef747a48b864.jpg&#34; width=&#34;150&#34; height=&#34;150&#34;&gt; &#xA;  &lt;/div&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûúPaddleNLPÂØπÊÇ®ÁöÑÁ†îÁ©∂ÊúâÂ∏ÆÂä©ÔºåÊ¨¢ËøéÂºïÁî®&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{=paddlenlp,&#xA;    title={PaddleNLP: An Easy-to-use and High Performance NLP Library},&#xA;    author={PaddleNLP Contributors},&#xA;    howpublished = {\url{https://github.com/PaddlePaddle/PaddleNLP}},&#xA;    year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledge&lt;/h2&gt; &#xA;&lt;p&gt;Êàë‰ª¨ÂÄüÈâ¥‰∫ÜHugging FaceÁöÑ&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;ü§óÂÖ≥‰∫éÈ¢ÑËÆ≠ÁªÉÊ®°Âûã‰ΩøÁî®ÁöÑ‰ºòÁßÄËÆæËÆ°ÔºåÂú®Ê≠§ÂØπHugging Face‰ΩúËÄÖÂèäÂÖ∂ÂºÄÊ∫êÁ§æÂå∫Ë°®Á§∫ÊÑüË∞¢„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PaddleNLPÈÅµÂæ™&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleNLP/develop/LICENSE&#34;&gt;Apache-2.0ÂºÄÊ∫êÂçèËÆÆ&lt;/a&gt;„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>saleor/saleor</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/saleor/saleor</id>
    <link href="https://github.com/saleor/saleor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modular, high performance, headless e-commerce platform built with Python, GraphQL, Django, and React.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/249912/71523206-4e45f800-28c8-11ea-84ba-345a9bfc998a.png&#34; alt=&#34;Saleor Commerce - A GraphQL-first platform for perfectionists&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Saleor Commerce&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;strong&gt;Customer-centric e-commerce on a modern stack&lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  A headless, GraphQL commerce platform delivering ultra-fast, dynamic, personalized shopping experiences. Beautiful online stores, anywhere, on any device. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  Join our active, engaged community: &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://saleor.io/&#34;&gt;Website&lt;/a&gt; &#xA; &lt;span&gt; | &lt;/span&gt; &#xA; &lt;a href=&#34;https://twitter.com/getsaleor&#34;&gt;Twitter&lt;/a&gt; &#xA; &lt;span&gt; | &lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/saleor/saleor/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://saleor.io/blog/&#34;&gt;Blog&lt;/a&gt; &#xA; &lt;span&gt; | &lt;/span&gt; &#xA; &lt;a href=&#34;https://saleor.typeform.com/to/JTJK0Nou&#34;&gt;Subscribe to newsletter&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;http://codecov.io/github/saleor/saleor?branch=master&#34;&gt; &lt;img src=&#34;http://codecov.io/github/saleor/saleor/coverage.svg?branch=master&#34; alt=&#34;Codecov&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://docs.saleor.io/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docs-docs.saleor.io-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/python/black&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#what-makes-saleor-special&#34;&gt;What makes Saleor special?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#your-feedback&#34;&gt;Your feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saleor/saleor/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What makes Saleor special?&lt;/h2&gt; &#xA;&lt;p&gt;Saleor is a rapidly-growing open source e-commerce platform that has served high-volume companies from branches like publishing and apparel since 2012. Based on Python and Django, the latest major update introduces a modular front end powered by a GraphQL API and written with React and TypeScript.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Headless / API first&lt;/strong&gt;: Build mobile apps, custom storefronts, POS, automation, etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Build anything with webhooks, apps, metadata, and attributes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GraphQL API&lt;/strong&gt;: Get many resources in a single request and &lt;a href=&#34;https://graphql.org/&#34;&gt;more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multichannel&lt;/strong&gt;: Per channel control of pricing, currencies, stock, product, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enterprise ready&lt;/strong&gt;: Secure, scalable, and stable. Battle-tested by big brands&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CMS&lt;/strong&gt;: Content is king, that&#39;s why we have a kingdom built-in&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dashboard&lt;/strong&gt;: User friendly, fast and productive. (Decoupled project &lt;a href=&#34;https://github.com/saleor/saleor-dashboard&#34;&gt;repo&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Global by design&lt;/strong&gt; Multi-currency, multi-language, multi-warehouse, tutti multi!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt;: A comprehensive system for orders, dispatch, and refunds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cart&lt;/strong&gt;: Advanced payment and tax options, with full control over discounts and promotions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt;: Flexible API architecture allows integration of any payment method&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SEO&lt;/strong&gt;: Packed with features that get stores to a wider audience&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud&lt;/strong&gt;: Optimized for deployments using Docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Saleor is free and always will be. Help us out‚Ä¶ If you love free stuff and great software, give us a star! üåü&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/249912/71527146-5b6be280-28da-11ea-901d-eb76161a6bfb.png&#34; alt=&#34;Saleor Storefront - React-based PWA e-commerce storefront&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/249912/71523261-8a795880-28c8-11ea-98c0-6281ea37f412.png&#34; alt=&#34;Saleor Dashboard - Modern UI for managing your e-commerce&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.saleor.io/docs/3.x/developer/installation&#34;&gt;See the Saleor docs&lt;/a&gt; for step-by-step installation and deployment instructions.&lt;/p&gt; &#xA;&lt;p&gt;Note: The &lt;code&gt;main&lt;/code&gt; branch is the development version of Saleor and it may be unstable. To use the latest stable version, download it from the &lt;a href=&#34;https://github.com/saleor/saleor/releases/&#34;&gt;Releases&lt;/a&gt; page or switch to a release tag.&lt;/p&gt; &#xA;&lt;p&gt;The current production-ready version is 3.x and you should use this version for all three components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Saleor: &lt;a href=&#34;https://github.com/saleor/saleor/releases/&#34;&gt;https://github.com/saleor/saleor/releases/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dashboard: &lt;a href=&#34;https://github.com/saleor/saleor-dashboard/releases/&#34;&gt;https://github.com/saleor/saleor-dashboard/releases/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Storefront: &lt;a href=&#34;https://github.com/saleor/react-storefront/releases/&#34;&gt;https://github.com/saleor/react-storefront/releases/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Saleor Cloud&lt;/h3&gt; &#xA;&lt;p&gt;The fastest way to develop with Saleor are free developer accounts in &lt;a href=&#34;https://cloud.saleor.io&#34;&gt;Saleor Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Register &lt;a href=&#34;https://cloud.saleor.io/register&#34;&gt;here&lt;/a&gt; or install our &lt;a href=&#34;https://github.com/saleor/saleor-cli&#34;&gt;CLI tool&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm i -g saleor@latest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;and run the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;saleor register&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bootstrap your first &lt;a href=&#34;https://github.com/saleor/react-storefront&#34;&gt;storefront&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;saleor storefront create --demo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Saleor documentation is available here: &lt;a href=&#34;https://docs.saleor.io&#34;&gt;docs.saleor.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To contribute, please see the &lt;a href=&#34;https://github.com/saleor/saleor-docs/&#34;&gt;&lt;code&gt;saleor/saleor-docs&lt;/code&gt; repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Saleor Platform&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to run all components of Saleor (API, storefront and dashboard) together on your local machine is to use the &lt;a href=&#34;https://github.com/saleor/saleor-platform&#34;&gt;saleor-platform&lt;/a&gt; project. Go to that repository for instructions on how to use it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saleor/saleor-platform&#34;&gt;View saleor-platform&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storefront&lt;/h2&gt; &#xA;&lt;p&gt;An open-source storefront in React.js with Next.js. Built for Headless Commerce, using a modern stack with TypeScript, GraphQL, Apollo, and Tailwind CSS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saleor/react-storefront&#34;&gt;React Storefront Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactstorefront.vercel.app/&#34;&gt;View Storefront Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;For dashboard go to the &lt;a href=&#34;https://github.com/saleor/saleor-dashboard&#34;&gt;saleor-dashboard&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.saleor.io/dashboard/&#34;&gt;View dashboard demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Want to see Saleor in action?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactstorefront.vercel.app/&#34;&gt;View React Storefront&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://demo.saleor.io/dashboard/&#34;&gt;View Dashboard (admin area)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://demo.saleor.io/&#34;&gt;View Legacy Storefront&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or launch the demo on a free Heroku instance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Login credentials: &lt;code&gt;admin@example.com&lt;/code&gt;/&lt;code&gt;admin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love your contributions and do our best to provide you with mentorship and support. If you are looking for an issue to tackle, take a look at issues labeled &lt;a href=&#34;https://github.com/saleor/saleor/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&#34;&gt;&lt;code&gt;Help Wanted&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If nothing grabs your attention, check &lt;a href=&#34;https://github.com/orgs/saleor/projects/3/views/4&#34;&gt;our roadmap&lt;/a&gt; or come up with your feature. Just drop us a line or &lt;a href=&#34;https://github.com/saleor/saleor/issues/new&#34;&gt;open an issue&lt;/a&gt; and we‚Äôll work out how to handle it.&lt;/p&gt; &#xA;&lt;p&gt;Get more details in our &lt;a href=&#34;https://docs.saleor.io/docs/developer/community/contributing&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Your feedback&lt;/h2&gt; &#xA;&lt;p&gt;Do you use Saleor as an e-commerce platform? Fill out this short survey and help us grow. It will take just a minute, but mean a lot!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mirumee.typeform.com/to/sOIJbJ&#34;&gt;Take a survey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Disclaimer: Everything you see here is open and free to use as long as you comply with the &lt;a href=&#34;https://github.com/saleor/saleor/raw/master/LICENSE&#34;&gt;license&lt;/a&gt;. There are no hidden charges. We promise to do our best to fix bugs and improve the code.&lt;/p&gt; &#xA;&lt;h4&gt;Crafted with ‚ù§Ô∏è by &lt;a href=&#34;https://saleor.io&#34;&gt;Saleor Commerce&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:hello@saleor.io&#34;&gt;hello@saleor.io&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openai/DALL-E</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/openai/DALL-E</id>
    <link href="https://github.com/openai/DALL-E" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PyTorch package for the discrete VAE used for DALL¬∑E.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openai.com/blog/dall-e/&#34;&gt;[Blog]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2102.12092&#34;&gt;[Paper]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/model_card.md&#34;&gt;[Model Card]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/notebooks/usage.ipynb&#34;&gt;[Usage]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the official PyTorch package for the discrete VAE used for DALL¬∑E. The transformer used to generate the images from the text is not part of this code release.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Before running &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/notebooks/usage.ipynb&#34;&gt;the example notebook&lt;/a&gt;, you will need to install the package using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install DALL-E&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>gradio-app/gradio</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/gradio-app/gradio</id>
    <link href="https://github.com/gradio-app/gradio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create UIs for your machine learning model in Python in 3 minutes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/gradio-app/gradio&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/gradio-app/gradio.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/gradio&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/gradio.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/gradio-app/gradio&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/gradio-app/gradio/branch/master/graph/badge.svg?token=NNVPX9KEGS&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/gradio/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/gradio&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/gradio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/gradio.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Gradio: Build Machine Learning Web Apps ‚Äî in Python&lt;/h1&gt; &#xA;&lt;p&gt;Gradio (pronounced GRAY-dee-oh) is an open-source Python library that is used to build machine learning and data science demos and web applications.&lt;/p&gt; &#xA;&lt;p&gt;With Gradio, you can quickly create a beautiful user interface around your machine learning models or data science workflow and let people &#34;try it out&#34; by dragging-and-dropping in their own images, pasting text, recording their own voice, and interacting with your demo, all through the browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/website/homepage/src/assets/img/meta-image-2.png&#34; alt=&#34;Interface montage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gradio is useful for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Demoing&lt;/strong&gt; your machine learning models for clients / collaborators / users / students&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploying&lt;/strong&gt; your models quickly with automatic shareable links and getting feedback on model performance&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Debugging&lt;/strong&gt; your model interactively during development using built-in manipulation and interpretation tools&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can find an interactive version of the following Getting Started at &lt;a href=&#34;https://gradio.app/getting_started&#34;&gt;https://gradio.app/getting_started&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: Gradio requires Python 3.7 or above, that&#39;s it!&lt;/p&gt; &#xA;&lt;h3&gt;What Problem is Gradio Solving? üò≤&lt;/h3&gt; &#xA;&lt;p&gt;One of the &lt;em&gt;best ways to share&lt;/em&gt; your machine learning model, API, or data science workflow with others is to create an &lt;strong&gt;interactive demo&lt;/strong&gt; that allows your users or colleagues to try out the demo in their browsers.&lt;/p&gt; &#xA;&lt;p&gt;A web-based demo is great as it allows anyone who can use a browser (not just technical people) to intuitively try their own inputs and understand what you&#39;ve built.&lt;/p&gt; &#xA;&lt;p&gt;However, creating such web-based demos has traditionally been difficult, as you needed to know web hosting to serve the web app and web development (HTML, CSS, JavaScript) to build a GUI for your demo.&lt;/p&gt; &#xA;&lt;p&gt;Gradio allows you to &lt;strong&gt;build demos and share them, all in Python.&lt;/strong&gt; And usually in just a few lines of code! So let&#39;s get started.&lt;/p&gt; &#xA;&lt;h3&gt;Hello, World ‚ö°&lt;/h3&gt; &#xA;&lt;p&gt;To get Gradio running with a simple &#34;Hello, World&#34; example, follow these three steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;1.&lt;/span&gt; Install Gradio from pip.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;2.&lt;/span&gt; Run the code below as a Python script or in a Python notebook (or in a &lt;a href=&#34;https://colab.research.google.com/drive/18ODkJvyxHutTN0P5APWyGFO_xwNcgHDZ?usp=sharing&#34;&gt;colab notebook&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import gradio as gr&#xA;&#xA;&#xA;def greet(name):&#xA;    return &#34;Hello &#34; + name + &#34;!!&#34;&#xA;&#xA;demo = gr.Interface(fn=greet, inputs=&#34;text&#34;, outputs=&#34;text&#34;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;3.&lt;/span&gt; The demo below will appear automatically within the Python notebook, or pop in a browser on &lt;a href=&#34;http://localhost:7860/&#34;&gt;http://localhost:7860&lt;/a&gt; if running from a script.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world/screenshot.gif&#34; alt=&#34;hello_world interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;Interface&lt;/code&gt; class üß°&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll notice that in order to create the demo, we defined a &lt;code&gt;gradio.Interface&lt;/code&gt; class. This &lt;code&gt;Interface&lt;/code&gt; class can wrap almost any Python function with a user interface. In the example above, we saw a simple text-based function. But the function could be anything from music generator to a tax calculator to (most commonly) the prediction function of a pretrained machine learning model.&lt;/p&gt; &#xA;&lt;p&gt;The core &lt;code&gt;Interface&lt;/code&gt; class is initialized with three required parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fn&lt;/code&gt;: the function to wrap a UI around&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;inputs&lt;/code&gt;: which component(s) to use for the input, e.g. &lt;code&gt;&#34;text&#34;&lt;/code&gt; or &lt;code&gt;&#34;image&#34;&lt;/code&gt; or &lt;code&gt;&#34;audio&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;outputs&lt;/code&gt;: which component(s) to use for the output, e.g. &lt;code&gt;&#34;text&#34;&lt;/code&gt; or &lt;code&gt;&#34;image&#34;&lt;/code&gt; &lt;code&gt;&#34;label&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Gradio includes more than 20 different components, most of which can be used as inputs or outputs. (&lt;a href=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/docs&#34;&gt;See docs for complete list&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Components Attributes üíª&lt;/h3&gt; &#xA;&lt;p&gt;With these three arguments to &lt;code&gt;Interface&lt;/code&gt;, you can quickly create user interfaces and &lt;code&gt;launch()&lt;/code&gt; them. But what if you want to change how the UI components look or behave?&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say you want to customize the input text field - for example, you wanted it to be larger and have a text hint. If we use the actual input class for &lt;code&gt;Textbox&lt;/code&gt; instead of using the string shortcut, you have access to much more customizability through component attributes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import gradio as gr&#xA;&#xA;&#xA;def greet(name):&#xA;    return &#34;Hello &#34; + name + &#34;!&#34;&#xA;&#xA;&#xA;demo = gr.Interface(&#xA;    fn=greet,&#xA;    inputs=gr.Textbox(lines=2, placeholder=&#34;Name Here...&#34;),&#xA;    outputs=&#34;text&#34;,&#xA;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world_2/screenshot.gif&#34; alt=&#34;hello_world_2 interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see a list of all the components Gradio supports and what attributes you can use to customize them, check out the &lt;a href=&#34;https://gradio.app/docs&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Inputs and Outputs üî•&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s say you had a much more complex function, with multiple inputs and outputs. In the example below, we define a function that takes a string, boolean, and number, and returns a string and number. Take a look how you pass a list of input and output components.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import gradio as gr&#xA;&#xA;&#xA;def greet(name, is_morning, temperature):&#xA;    salutation = &#34;Good morning&#34; if is_morning else &#34;Good evening&#34;&#xA;    greeting = &#34;%s %s. It is %s degrees today&#34; % (salutation, name, temperature)&#xA;    celsius = (temperature - 32) * 5 / 9&#xA;    return greeting, round(celsius, 2)&#xA;&#xA;&#xA;demo = gr.Interface(&#xA;    fn=greet,&#xA;    inputs=[&#34;text&#34;, &#34;checkbox&#34;, gr.Slider(0, 100)],&#xA;    outputs=[&#34;text&#34;, &#34;number&#34;],&#xA;)&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world_3/screenshot.gif&#34; alt=&#34;hello_world_3 interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You simply wrap the components in a list. Each component in the &lt;code&gt;inputs&lt;/code&gt; list corresponds to one of the parameters of the function, in order. Each component in the &lt;code&gt;outputs&lt;/code&gt; list corresponds to one of the values returned by the function, again in order.&lt;/p&gt; &#xA;&lt;h3&gt;Images üé®&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s try an image-to-image function! When using the &lt;code&gt;Image&lt;/code&gt; component, your function will receive a numpy array of your specified size, with the shape &lt;code&gt;(width, height, 3)&lt;/code&gt;, where the last dimension represents the RGB values. We&#39;ll return an image as well in the form of a numpy array.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np&#xA;&#xA;import gradio as gr&#xA;&#xA;&#xA;def sepia(input_img):&#xA;    sepia_filter = np.array(&#xA;        [[0.393, 0.769, 0.189], [0.349, 0.686, 0.168], [0.272, 0.534, 0.131]]&#xA;    )&#xA;    sepia_img = input_img.dot(sepia_filter.T)&#xA;    sepia_img /= sepia_img.max()&#xA;    return sepia_img&#xA;&#xA;&#xA;demo = gr.Interface(sepia, gr.Image(shape=(200, 200)), &#34;image&#34;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/sepia_filter/screenshot.gif&#34; alt=&#34;sepia_filter interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, our &lt;code&gt;Image&lt;/code&gt; input interface comes with an &#39;edit&#39; button ‚úèÔ∏è which opens tools for cropping and zooming into images. We&#39;ve found that manipulating images in this way can help reveal biases or hidden flaws in a machine learning model!&lt;/p&gt; &#xA;&lt;p&gt;In addition to images, Gradio supports other media types, such as audio or video. Read about these in the &lt;a href=&#34;https://gradio.app/docs&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DataFrames and Graphs üìà&lt;/h3&gt; &#xA;&lt;p&gt;You can use Gradio to support inputs and outputs from your typical data libraries, such as numpy arrays, pandas dataframes, and plotly graphs. Take a look at the demo below (ignore the complicated data manipulation in the function!)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib&#xA;matplotlib.use(&#39;Agg&#39;)&#xA;import matplotlib.pyplot as plt&#xA;import numpy as np&#xA;&#xA;import gradio as gr&#xA;&#xA;&#xA;def sales_projections(employee_data):&#xA;    sales_data = employee_data.iloc[:, 1:4].astype(&#34;int&#34;).to_numpy()&#xA;    regression_values = np.apply_along_axis(&#xA;        lambda row: np.array(np.poly1d(np.polyfit([0, 1, 2], row, 2))), 0, sales_data&#xA;    )&#xA;    projected_months = np.repeat(&#xA;        np.expand_dims(np.arange(3, 12), 0), len(sales_data), axis=0&#xA;    )&#xA;    projected_values = np.array(&#xA;        [&#xA;            month * month * regression[0] + month * regression[1] + regression[2]&#xA;            for month, regression in zip(projected_months, regression_values)&#xA;        ]&#xA;    )&#xA;    plt.plot(projected_values.T)&#xA;    plt.legend(employee_data[&#34;Name&#34;])&#xA;    return employee_data, plt.gcf(), regression_values&#xA;&#xA;&#xA;demo = gr.Interface(&#xA;    sales_projections,&#xA;    gr.Dataframe(&#xA;        headers=[&#34;Name&#34;, &#34;Jan Sales&#34;, &#34;Feb Sales&#34;, &#34;Mar Sales&#34;],&#xA;        value=[[&#34;Jon&#34;, 12, 14, 18], [&#34;Alice&#34;, 14, 17, 2], [&#34;Sana&#34;, 8, 9.5, 12]],&#xA;    ),&#xA;    [&#34;dataframe&#34;, &#34;plot&#34;, &#34;numpy&#34;],&#xA;    description=&#34;Enter sales figures for employees to predict sales trajectory over year.&#34;,&#xA;)&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/sales_projections/screenshot.gif&#34; alt=&#34;sales_projections interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example Inputs ü¶Æ&lt;/h3&gt; &#xA;&lt;p&gt;You can provide example data that a user can easily load into the model. This can be helpful to demonstrate the types of inputs the model expects, as well as to provide a way to explore your dataset in conjunction with your model. To load example data, you can provide a &lt;strong&gt;nested list&lt;/strong&gt; to the &lt;code&gt;examples=&lt;/code&gt; keyword argument of the Interface constructor. Each sublist within the outer list represents a data sample, and each element within the sublist represents an input for each input component. The format of example data for each component is specified in the &lt;a href=&#34;https://gradio.app/docs&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import gradio as gr&#xA;&#xA;def calculator(num1, operation, num2):&#xA;    if operation == &#34;add&#34;:&#xA;        return num1 + num2&#xA;    elif operation == &#34;subtract&#34;:&#xA;        return num1 - num2&#xA;    elif operation == &#34;multiply&#34;:&#xA;        return num1 * num2&#xA;    elif operation == &#34;divide&#34;:&#xA;        return num1 / num2&#xA;&#xA;&#xA;demo = gr.Interface(&#xA;    calculator,&#xA;    [gr.Number(4), gr.Radio([&#34;add&#34;, &#34;subtract&#34;, &#34;multiply&#34;, &#34;divide&#34;]), &#34;number&#34;],&#xA;    &#34;number&#34;,&#xA;    examples=[&#xA;        [5, &#34;add&#34;, 3],&#xA;        [4, &#34;divide&#34;, 2],&#xA;        [-4, &#34;multiply&#34;, 2.5],&#xA;        [0, &#34;subtract&#34;, 1.2],&#xA;    ],&#xA;    title=&#34;test calculator&#34;,&#xA;    description=&#34;heres a sample toy calculator. enjoy!&#34;,&#xA;    flagging_options=[&#34;this&#34;, &#34;or&#34;, &#34;that&#34;],&#xA;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/calculator/screenshot.gif&#34; alt=&#34;calculator interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can load a large dataset into the examples to browse and interact with the dataset through Gradio. The examples will be automatically paginated (you can configure this through the &lt;code&gt;examples_per_page&lt;/code&gt; argument of &lt;code&gt;Interface&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Live Interfaces ü™Å&lt;/h3&gt; &#xA;&lt;p&gt;You can make interfaces automatically refresh by setting &lt;code&gt;live=True&lt;/code&gt; in the interface. Now the interface will recalculate as soon as the user input changes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import gradio as gr&#xA;&#xA;&#xA;def calculator(num1, operation, num2):&#xA;    if operation == &#34;add&#34;:&#xA;        return num1 + num2&#xA;    elif operation == &#34;subtract&#34;:&#xA;        return num1 - num2&#xA;    elif operation == &#34;multiply&#34;:&#xA;        return num1 * num2&#xA;    elif operation == &#34;divide&#34;:&#xA;        return num1 / num2&#xA;&#xA;&#xA;demo = gr.Interface(&#xA;    calculator,&#xA;    [&#34;number&#34;, gr.Radio([&#34;add&#34;, &#34;subtract&#34;, &#34;multiply&#34;, &#34;divide&#34;]), &#34;number&#34;],&#xA;    &#34;number&#34;,&#xA;    live=True,&#xA;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/calculator_live/screenshot.gif&#34; alt=&#34;calculator_live interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note there is no submit button, because the interface resubmits automatically on change.&lt;/p&gt; &#xA;&lt;h3&gt;Flagging üö©&lt;/h3&gt; &#xA;&lt;p&gt;Underneath the output interfaces, there is a &#34;Flag&#34; button. When a user testing your model sees input with interesting output, such as erroneous or unexpected model behaviour, they can flag the input for the interface creator to review. Within the directory provided by the &lt;code&gt;flagging_dir=&lt;/code&gt; argument to the Interface constructor, a CSV file will log the flagged inputs. If the interface involves file data, such as for Image and Audio components, folders will be created to store those flagged data as well.&lt;/p&gt; &#xA;&lt;p&gt;For example, with the calculator interface shown above, we would have the flagged data stored in the flagged directory shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-directory&#34;&gt;+-- calculator.py&#xA;+-- flagged/&#xA;|   +-- logs.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;flagged/logs.csv&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;num1,operation,num2,Output&#xA;5,add,7,12&#xA;6,subtract,1.5,4.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the sepia interface shown above, we would have the flagged data stored in the flagged directory shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-directory&#34;&gt;+-- sepia.py&#xA;+-- flagged/&#xA;|   +-- logs.csv&#xA;|   +-- im/&#xA;|   |   +-- 0.png&#xA;|   |   +-- 1.png&#xA;|   +-- Output/&#xA;|   |   +-- 0.png&#xA;|   |   +-- 1.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;flagged/logs.csv&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;im,Output&#xA;im/0.png,Output/0.png&#xA;im/1.png,Output/1.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can review these flagged inputs by manually exploring the flagging directory, or load them into the examples of the Gradio interface by pointing the &lt;code&gt;examples=&lt;/code&gt; argument to the flagged directory. If you wish for the user to provide a reason for flagging, you can pass a list of strings to the &lt;code&gt;flagging_options&lt;/code&gt; argument of Interface. Users will have to select one of the strings when flagging, which will be saved as an additional column to the CSV.&lt;/p&gt; &#xA;&lt;h3&gt;Blocks: More Flexibility and Control üß±&lt;/h3&gt; &#xA;&lt;p&gt;Gradio offers two APIs to users: (1) &lt;strong&gt;Interface&lt;/strong&gt;, a high level abstraction for creating demos (that we&#39;ve been discussing so far), and (2) &lt;strong&gt;Blocks&lt;/strong&gt;, a low-level API for designing web apps with more flexible layouts and data flows. Blocks allows you to do things like: group together related demos, change where components appear on the page, handle complex data flows (e.g. outputs can serve as inputs to other functions), and update properties/visibility of components based on user interaction -- still all in Python.&lt;/p&gt; &#xA;&lt;p&gt;As an example, Blocks uses nested &lt;code&gt;with&lt;/code&gt; statements in Python to lay out components on a page, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np&#xA;import gradio as gr&#xA;&#xA;demo = gr.Blocks()&#xA;&#xA;&#xA;def flip_text(x):&#xA;    return x[::-1]&#xA;&#xA;def flip_image(x):&#xA;    return np.fliplr(x)&#xA;&#xA;&#xA;with demo:&#xA;    gr.Markdown(&#34;Flip text or image files using this demo.&#34;)&#xA;    with gr.Tabs():&#xA;        with gr.TabItem(&#34;Flip Text&#34;):&#xA;            text_input = gr.Textbox()&#xA;            text_output = gr.Textbox()&#xA;            text_button = gr.Button(&#34;Flip&#34;)&#xA;        with gr.TabItem(&#34;Flip Image&#34;):&#xA;            with gr.Row():&#xA;                image_input = gr.Image()&#xA;                image_output = gr.Image()&#xA;            image_button = gr.Button(&#34;Flip&#34;)&#xA;    &#xA;    text_button.click(flip_text, inputs=text_input, outputs=text_output)&#xA;    image_button.click(flip_image, inputs=image_input, outputs=image_output)&#xA;    &#xA;if __name__ == &#34;__main__&#34;:&#xA;    demo.launch()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/demo/blocks_flipper/screenshot.gif&#34; alt=&#34;blocks_flipper interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in how Blocks works, &lt;a href=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/introduction_to_blocks&#34;&gt;read its dedicated Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Sharing Demos üåé&lt;/h3&gt; &#xA;&lt;p&gt;Gradio demos can be easily shared publicly by setting &lt;code&gt;share=True&lt;/code&gt; in the &lt;code&gt;launch()&lt;/code&gt; method. Like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;gr.Interface(classify_image, &#34;image&#34;, &#34;label&#34;).launch(share=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This generates a public, shareable link that you can send to anybody! When you send this link, the user on the other side can try out the model in their browser. Because the processing happens on your device (as long as your device stays on!), you don&#39;t have to worry about any packaging any dependencies. A share link usually looks something like this: &lt;strong&gt;XXXXX.gradio.app&lt;/strong&gt;. Although the link is served through a Gradio URL, we are only a proxy for your local server, and do not store any data sent through the interfaces.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind, however, that these links are publicly accessible, meaning that anyone can use your model for prediction! Therefore, make sure not to expose any sensitive information through the functions you write, or allow any critical changes to occur on your device. If you set &lt;code&gt;share=False&lt;/code&gt; (the default, except in colab notebooks), only a local link is created, which can be shared by &lt;a href=&#34;https://www.ssh.com/ssh/tunneling/example&#34;&gt;port-forwarding&lt;/a&gt; with specific users.&lt;/p&gt; &#xA;&lt;p&gt;Share links expire after 72 hours. For permanent hosting, see the next section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/website/homepage/src/assets/img/sharing.svg?sanitize=true&#34; alt=&#34;Sharing diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hosting Gradio Demo on Spaces ü§ó&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to have a permanent link to your Gradio demo on the internet, use Huggingface Spaces. Hugging Face Spaces provides the infrastructure to permanently host your machine learning model for free!&lt;/p&gt; &#xA;&lt;p&gt;You can either drag and drop a folder containing your Gradio model and all related files, or you can point Spaces to your Git repository and Spaces will pull the Gradio interface from there. See &lt;a href=&#34;http://huggingface.co/spaces/&#34;&gt;Huggingface Spaces&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/website/homepage/src/assets/img/hf_demo.gif&#34; alt=&#34;Hosting Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Next Steps&lt;/h3&gt; &#xA;&lt;p&gt;Now that you&#39;re familiar with the basics of Gradio, here are some good next steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://huggingface.co/course/chapter9/1&#34;&gt;the free Gradio course&lt;/a&gt; for a step-by-step walkthrough of everything Gradio-related with lots of examples of how to build your own machine learning demos üìñ&lt;/li&gt; &#xA; &lt;li&gt;Gradio offers two APIs to users: &lt;strong&gt;Interface&lt;/strong&gt;, a high level abstraction for quickly creating demos, and &lt;strong&gt;Blocks&lt;/strong&gt;, a more flexible API for designing web apps with more controlled layouts and data flows. &lt;a href=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/introduction_to_blocks/&#34;&gt;Read more about Blocks here&lt;/a&gt; üß±&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to stick with &lt;strong&gt;Interface&lt;/strong&gt;, but want to add more advanced features to your demo (like authentication, interpretation, or state), check out our guide on &lt;a href=&#34;https://raw.githubusercontent.com/gradio-app/gradio/main/advanced_interface_features&#34;&gt;advanced features with the Interface class&lt;/a&gt; üí™&lt;/li&gt; &#xA; &lt;li&gt;If you just want to explore what demos other people have built with Gradio and see the underlying Python code, &lt;a href=&#34;https://hf.space/&#34;&gt;browse public Hugging Face Spaces&lt;/a&gt;, and be inspired ü§ó&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Requirements:&lt;/h2&gt; &#xA;&lt;p&gt;Gradio requires Python &lt;code&gt;3.7+&lt;/code&gt; and has been tested on the latest versions of Windows, MacOS, and various common Linux distributions (e.g. Ubuntu). For Python package requirements, please see the &lt;code&gt;setup.py&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing:&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute and your contribution is small, you can directly open a pull request (PR). If you would like to contribute a larger feature, we recommend first creating an issue with a proposed design for discussion. Please see our &lt;a href=&#34;https://github.com/gradio-app/gradio/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;License:&lt;/h2&gt; &#xA;&lt;p&gt;Gradio is licensed under the Apache License 2.0&lt;/p&gt; &#xA;&lt;h2&gt;See more:&lt;/h2&gt; &#xA;&lt;p&gt;You can find many more examples as well as more info on usage on our website: &lt;a href=&#34;http://www.gradio.app&#34;&gt;www.gradio.app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See, also, the accompanying paper: &lt;a href=&#34;https://arxiv.org/pdf/1906.02569.pdf&#34;&gt;&#34;Gradio: Hassle-Free Sharing and Testing of ML Models in the Wild&#34;&lt;/a&gt;, &lt;em&gt;ICML HILL 2019&lt;/em&gt;, and please use the citation below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{abid2019gradio,&#xA;title={Gradio: Hassle-Free Sharing and Testing of ML Models in the Wild},&#xA;author={Abid, Abubakar and Abdalla, Ali and Abid, Ali and Khan, Dawood and Alfozan, Abdulrahman and Zou, James},&#xA;journal={arXiv preprint arXiv:1906.02569},&#xA;year={2019}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>anasty17/mirror-leech-telegram-bot</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/anasty17/mirror-leech-telegram-bot</id>
    <link href="https://github.com/anasty17/mirror-leech-telegram-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aria/qBittorrent Telegram mirror/leech bot&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a Telegram Bot written in Python for mirroring files on the Internet to your Google Drive or Telegram. Based on &lt;a href=&#34;https://github.com/lzzy12/python-aria-mirror-bot&#34;&gt;python-aria-mirror-bot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;h2&gt;By &lt;a href=&#34;https://github.com/anasty17&#34;&gt;Anas&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;qBittorrent&lt;/li&gt; &#xA; &lt;li&gt;Select files from Torrent before downloading using qbittorrent&lt;/li&gt; &#xA; &lt;li&gt;Leech (splitting, thumbnail for each user, setting as document or as media for each user)&lt;/li&gt; &#xA; &lt;li&gt;Size limiting for Torrent/Direct, Zip/Unzip, Mega and Clone&lt;/li&gt; &#xA; &lt;li&gt;Stop duplicates for all tasks except yt-dlp tasks&lt;/li&gt; &#xA; &lt;li&gt;Zip/Unzip G-Drive links&lt;/li&gt; &#xA; &lt;li&gt;Counting files/folders from Google Drive link&lt;/li&gt; &#xA; &lt;li&gt;View Link button, extra button to open file index link in broswer instead of direct download&lt;/li&gt; &#xA; &lt;li&gt;Status Pages for unlimited tasks&lt;/li&gt; &#xA; &lt;li&gt;Clone status&lt;/li&gt; &#xA; &lt;li&gt;Search in multiple Drive folder/TeamDrive&lt;/li&gt; &#xA; &lt;li&gt;Recursive Search (only with &lt;code&gt;root&lt;/code&gt; or TeamDrive ID, folder ids will be listed with non-recursive method)&lt;/li&gt; &#xA; &lt;li&gt;Multi-TD list by token.pickle if exists&lt;/li&gt; &#xA; &lt;li&gt;Extract rar, zip and 7z splits with or without password&lt;/li&gt; &#xA; &lt;li&gt;Zip file/folder with or without password&lt;/li&gt; &#xA; &lt;li&gt;Use Token.pickle if file not found with Service Account for all Gdrive functions&lt;/li&gt; &#xA; &lt;li&gt;Random Service Account at startup&lt;/li&gt; &#xA; &lt;li&gt;Mirror/Leech/Watch/Clone/Count/Del by reply&lt;/li&gt; &#xA; &lt;li&gt;YT-DLP quality buttons&lt;/li&gt; &#xA; &lt;li&gt;Search on torrents with Torrent Search API or with variable plugins using qBittorrent search engine&lt;/li&gt; &#xA; &lt;li&gt;Docker image support for linux &lt;code&gt;amd64, arm64, arm/v7, arm/v6, s390x, arm64/v8&lt;/code&gt; (&lt;strong&gt;Note&lt;/strong&gt;: Use &lt;code&gt;anasty17/mltb:arm64&lt;/code&gt; for &lt;code&gt;arm64/v8&lt;/code&gt; or oracle)&lt;/li&gt; &#xA; &lt;li&gt;Update bot at startup and with restart command using &lt;code&gt;UPSTREAM_REPO&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Qbittorrent seed until reaching specific ratio or time&lt;/li&gt; &#xA; &lt;li&gt;Rss feed and filter. Based on this repository &lt;a href=&#34;https://github.com/hyPnOtICDo0g/rss-chan&#34;&gt;rss-chan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Save leech settings including thumbnails in database&lt;/li&gt; &#xA; &lt;li&gt;Mirror/Leech/Clone multi links/files with one command&lt;/li&gt; &#xA; &lt;li&gt;Extenstion Filter for uploading/cloning files&lt;/li&gt; &#xA; &lt;li&gt;Incomplete task notifier to get incomplete task messages after restart, works with database.&lt;/li&gt; &#xA; &lt;li&gt;Many bugs have been fixed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;From Other Repositories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mirror direct download links, Torrent, and Telegram files to Google Drive&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mirror Mega.nz links to Google Drive&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy files from someone&#39;s Drive to your Drive (Using Autorclone)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download/Upload progress, Speeds and ETAs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mirror all yt-dlp supported links&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Uploading to Team Drive&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Index Link support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Service Account support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete files from Drive&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shortener support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multiple Trackers support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shell and Executor&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add sudo users&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom Filename* (Only for direct links, Telegram files and yt-dlp. Not for Mega links, Gdrive links or Torrents)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract password protected files&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract these filetypes and uploads to Google Drive&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;ZIP, RAR, TAR, 7z, ISO, WIM, CAB, GZIP, BZIP2, APM, ARJ, CHM, CPIO, CramFS, DEB, DMG, FAT, HFS, LZH, LZMA, LZMA2, MBR, MSI, MSLZ, NSIS, NTFS, RPM, SquashFS, UDF, VHD, XAR, Z, TAR.XZ&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Direct links Supported:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;letsupload.io, hxfile.co, anonfiles.com, bayfiles.com, antfiles, fembed.com, fembed.net, femax20.com, layarkacaxxi.icu, fcdn.stream, sbplay.org, naniplay.com, naniplay.nanime.in, naniplay.nanime.biz, sbembed.com, streamtape.com, streamsb.net, feurl.com, pixeldrain.com, racaty.net, 1fichier.com, 1drv.ms (Only works for file not folder or business account), uptobox.com (Uptobox account must be premium) and solidfiles.com&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to deploy?&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tutorial Video from A to Z: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/vishnoe115&#34;&gt;Wiszky&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gFQWJ4ftt48&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/See%20Video-black?style=for-the-badge&amp;amp;logo=YouTube&#34; width=&#34;160&#34; &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1. Installing requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/anasty17/mirror-leech-telegram-bot mirrorbot/ &amp;amp;&amp;amp; cd mirrorbot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Debian based distros&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install python3 python3-pip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Docker by following the &lt;a href=&#34;https://docs.docker.com/engine/install/debian/&#34;&gt;official Docker docs&lt;/a&gt; or by commands below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install snapd&#xA;sudo snap install docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Arch and it&#39;s derivatives:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S docker python&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install dependencies for running setup scripts:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install -r requirements-cli.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;2. Setting up config file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp config_sample.env config.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove the first line saying:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;_____REMOVE_THIS_LINE_____=True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fill up rest of the fields. Meaning of each field is discussed below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Required Fields&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BOT_TOKEN&lt;/code&gt;: The Telegram Bot Token that you got from &lt;a href=&#34;https://t.me/BotFather&#34;&gt;@BotFather&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GDRIVE_FOLDER_ID&lt;/code&gt;: This is the Folder/TeamDrive ID of the Google Drive Folder to which you want to upload all the mirrors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OWNER_ID&lt;/code&gt;: The Telegram User ID (not username) of the Owner of the bot. &lt;code&gt;Int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOWNLOAD_DIR&lt;/code&gt;: The path to the local folder where the downloads should be downloaded to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOWNLOAD_STATUS_UPDATE_INTERVAL&lt;/code&gt;: Time in seconds after which the progress/status message will be updated. Recommended &lt;code&gt;10&lt;/code&gt; seconds at least. &lt;code&gt;Int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTO_DELETE_MESSAGE_DURATION&lt;/code&gt;: Interval of time (in seconds), after which the bot deletes it&#39;s message and command message which is expected to be viewed instantly. &lt;strong&gt;NOTE&lt;/strong&gt;: Set to &lt;code&gt;-1&lt;/code&gt; to disable auto message deletion. &lt;code&gt;Int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IS_TEAM_DRIVE&lt;/code&gt;: Set &lt;code&gt;True&lt;/code&gt; if uploading to TeamDrive. Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TELEGRAM_API&lt;/code&gt;: This is to authenticate your Telegram account for downloading Telegram files. You can get this from &lt;a href=&#34;https://my.telegram.org&#34;&gt;https://my.telegram.org&lt;/a&gt;. &lt;code&gt;Int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TELEGRAM_HASH&lt;/code&gt;: This is to authenticate your Telegram account for downloading Telegram files. You can get this from &lt;a href=&#34;https://my.telegram.org&#34;&gt;https://my.telegram.org&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Optional Fields&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DATABASE_URL&lt;/code&gt;: Your SQL Database URL. Follow this &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#generate-database&#34;&gt;Generate Database&lt;/a&gt; to generate database. Data will be saved in Database: auth and sudo users, leech settings including thumbnails for each user, rss data and incomplete tasks. &lt;strong&gt;NOTE&lt;/strong&gt;: If deploying on heroku and using heroku postgresql delete this variable from &lt;strong&gt;config.env&lt;/strong&gt; file. &lt;strong&gt;DATABASE_URL&lt;/strong&gt; will be grabbed from heroku variables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTHORIZED_CHATS&lt;/code&gt;: Fill user_id and chat_id of groups/users you want to authorize. Separate them by space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SUDO_USERS&lt;/code&gt;: Fill user_id of users whom you want to give sudo permission. Separate them by space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IGNORE_PENDING_REQUESTS&lt;/code&gt;: Ignore pending requests after restart. Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USE_SERVICE_ACCOUNTS&lt;/code&gt;: Whether to use Service Accounts or not. For this to work see &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot#generate-service-accounts-what-is-service-account&#34;&gt;Using Service Accounts&lt;/a&gt; section below. Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;INDEX_URL&lt;/code&gt;: Refer to &lt;a href=&#34;https://gitlab.com/ParveenBhadooOfficial/Google-Drive-Index&#34;&gt;https://gitlab.com/ParveenBhadooOfficial/Google-Drive-Index&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STATUS_LIMIT&lt;/code&gt;: Limit the no. of tasks shown in status message with buttons. &lt;strong&gt;NOTE&lt;/strong&gt;: Recommended limit is &lt;code&gt;4&lt;/code&gt; tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STOP_DUPLICATE&lt;/code&gt;: Bot will check file in Drive, if it is present in Drive, downloading or cloning will be stopped. (&lt;strong&gt;NOTE&lt;/strong&gt;: File will be checked using filename not file hash, so this feature is not perfect yet). Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CMD_INDEX&lt;/code&gt;: commands index number. This number will added at the end all commands.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UPTOBOX_TOKEN&lt;/code&gt;: Uptobox token to mirror uptobox links. Get it from &lt;a href=&#34;https://uptobox.com/my_account&#34;&gt;Uptobox Premium Account&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TORRENT_TIMEOUT&lt;/code&gt;: Timeout of dead torrents downloading with qBittorrent and Aria2c in seconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXTENTION_FILTER&lt;/code&gt;: File extentions that won&#39;t upload/clone. Separate them by space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;INCOMPLETE_TASK_NOTIFIER&lt;/code&gt;: Get incomplete task messages after restart. Require database and (supergroup or channel). Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Update&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;UPSTREAM_REPO&lt;/code&gt;: Your github repository link, if your repo is private add &lt;code&gt;https://username:{githubtoken}@github.com/{username}/{reponame}&lt;/code&gt; format. Get token from &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;Github settings&lt;/a&gt;. So you can update your bot from filled repository on each restart. &lt;strong&gt;NOTE&lt;/strong&gt;: Any change in docker or requirements you need to deploy/build again with updated repo to take effect. DON&#39;T delete .gitignore file. For more information read &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#upstream-repo-recommended&#34;&gt;THIS&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UPSTREAM_BRANCH&lt;/code&gt;: Upstream branch for update. Default is &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Leech&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TG_SPLIT_SIZE&lt;/code&gt;: Size of split in bytes. Default is &lt;code&gt;2GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AS_DOCUMENT&lt;/code&gt;: Default type of Telegram file upload. Default is &lt;code&gt;False&lt;/code&gt; mean as media. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EQUAL_SPLITS&lt;/code&gt;: Split files larger than &lt;strong&gt;TG_SPLIT_SIZE&lt;/strong&gt; into equal parts size (Not working with zip cmd). Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CUSTOM_FILENAME&lt;/code&gt;: Add custom word to leeched file name.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;qBittorrent&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BASE_URL_OF_BOT&lt;/code&gt;: Valid BASE URL where the bot is deployed to use qbittorrent web selection. Format of URL should be &lt;code&gt;http://myip&lt;/code&gt;, where &lt;code&gt;myip&lt;/code&gt; is the IP/Domain(public) of your bot or if you have chosen port other than &lt;code&gt;80&lt;/code&gt; so write it in this format &lt;code&gt;http://myip:port&lt;/code&gt; (&lt;code&gt;http&lt;/code&gt; and not &lt;code&gt;https&lt;/code&gt;). This Var is optional on VPS and required for Heroku specially to avoid app sleeping/idling. For Heroku fill &lt;code&gt;https://yourappname.herokuapp.com&lt;/code&gt;. Still got idling? You can use &lt;a href=&#34;http://cron-job.org&#34;&gt;http://cron-job.org&lt;/a&gt; to ping your Heroku app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;: Only For VPS even if &lt;code&gt;IS_VPS&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, which is the &lt;strong&gt;BASE_URL_OF_BOT&lt;/strong&gt; Port.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;WEB_PINCODE&lt;/code&gt;: If empty or &lt;code&gt;False&lt;/code&gt; means no more pincode required while qbit web selection. &lt;code&gt;Bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QB_SEED&lt;/code&gt;: QB torrent will be seeded after and while uploading until reaching specific ratio or time, edit &lt;code&gt;MaxRatio&lt;/code&gt; or &lt;code&gt;GlobalMaxSeedingMinutes&lt;/code&gt; or both from qbittorrent.conf (&lt;code&gt;-1&lt;/code&gt; means no limit, but u can cancel manually by gid). &lt;strong&gt;NOTE&lt;/strong&gt;: 1. Don&#39;t change &lt;code&gt;MaxRatioAction&lt;/code&gt;, 2. Only works with &lt;code&gt;/qbmirror&lt;/code&gt; and &lt;code&gt;/qbzipmirror&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Qbittorrent NOTE&lt;/strong&gt;: If your facing ram exceeded issue then set limit for &lt;code&gt;MaxConnecs&lt;/code&gt;, decrease &lt;code&gt;AsyncIOThreadsCount&lt;/code&gt; in qbittorrent config and set limit to &lt;code&gt;DiskWriteCacheSize&lt;/code&gt; to &lt;code&gt;32&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RSS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RSS_DELAY&lt;/code&gt;: Time in seconds for rss refresh interval. Recommended &lt;code&gt;900&lt;/code&gt; second at least. Default is &lt;code&gt;900&lt;/code&gt; in sec.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RSS_COMMAND&lt;/code&gt;: Choose command for the desired action.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RSS_CHAT_ID&lt;/code&gt;: Chat ID where rss links will be sent. If using channel then add channel id.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USER_STRING_SESSION&lt;/code&gt;: To send rss links from your telegram account instead of adding bot to channel then adding channel to group to get rss link since bot will not read command from itself or other bot. To generate string session use this command &lt;code&gt;python3 generate_string_session.py&lt;/code&gt; after mounting repo folder for sure. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;RSS NOTE&lt;/strong&gt;: &lt;code&gt;DATABASE_URL&lt;/code&gt; and &lt;code&gt;RSS_CHAT_ID&lt;/code&gt; is required, otherwise all rss commands will not work. Add the bot in grop for better experience, since if you are using &lt;code&gt;USER_STRING_SESSION&lt;/code&gt; you need to send a private message to bot after each restart. You can add the bot to a channel and add this channel to group so messages sent by bot to channel will be forwarded to group without using &lt;code&gt;USER_STRING_SESSION&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Private Files&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ACCOUNTS_ZIP_URL&lt;/code&gt;: Only if you want to load your Service Account externally from an Index Link or by any direct download link NOT webpage link. Archive the accounts folder to ZIP file. Fill this with the direct download link of zip file. If index need authentication so add direct download as shown below: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;https://username:password@example.workers.dev/...&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TOKEN_PICKLE_URL&lt;/code&gt;: Only if you want to load your &lt;strong&gt;token.pickle&lt;/strong&gt; externally from an Index Link. Fill this with the direct link of that file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MULTI_SEARCH_URL&lt;/code&gt;: Check &lt;code&gt;drive_folder&lt;/code&gt; setup &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#multi-search-ids&#34;&gt;here&lt;/a&gt;. Write &lt;strong&gt;drive_folder&lt;/strong&gt; file &lt;a href=&#34;https://gist.github.com/&#34;&gt;here&lt;/a&gt;. Open the raw file of that gist, it&#39;s URL will be your required variable. Should be in this form after removing commit id: &lt;a href=&#34;https://gist.githubusercontent.com/username/gist-id/raw/drive_folder&#34;&gt;https://gist.githubusercontent.com/username/gist-id/raw/drive_folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;YT_COOKIES_URL&lt;/code&gt;: Youtube authentication cookies. Check setup &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl#how-do-i-pass-cookies-to-youtube-dl&#34;&gt;Here&lt;/a&gt;. Use gist raw link and remove commit id from the link, so you can edit it from gists only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NETRC_URL&lt;/code&gt;: To create .netrc file contains authentication for aria2c and yt-dlp. Use gist raw link and remove commit id from the link, so you can edit it from gists only. &lt;strong&gt;NOTE&lt;/strong&gt;: After editing .nterc you need to restart the docker or if deployed on heroku so restart dyno in case your edits related to aria2c authentication. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: All above url variables used incase you want edit them in future easily without deploying again or if you want to deploy from public fork. If deploying using cli or private fork you can leave these variables empty add token.pickle, accounts folder, drive_folder, .netrc and cookies.txt directly to root but you can&#39;t update them without rebuild OR simply leave all above variables and use private UPSTREAM_REPO.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MEGA&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MEGA_API_KEY&lt;/code&gt;: Mega.nz API key to mirror mega.nz links. Get it from &lt;a href=&#34;https://mega.nz/sdk&#34;&gt;Mega SDK Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MEGA_EMAIL_ID&lt;/code&gt;: E-Mail ID used to sign up on mega.nz for using premium account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MEGA_PASSWORD&lt;/code&gt;: Password for mega.nz account.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Shortener&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SHORTENER_API&lt;/code&gt;: Fill your Shortener API key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHORTENER&lt;/code&gt;: Shortener URL. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported URL Shorteners:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;exe.io, gplinks.in, shrinkme.io, urlshortx.com, shortzon.com, bit.ly, shorte.st, linkvertise.com , ouo.io, adfoc.us, cutt.ly&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GDTOT&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CRYPT&lt;/code&gt;: Cookie for gdtot google drive link generator. Follow these &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#gdtot-cookies&#34;&gt;steps&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Size Limits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TORRENT_DIRECT_LIMIT&lt;/code&gt;: To limit the Torrent/Direct mirror size. Don&#39;t add unit. Default unit is &lt;code&gt;GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZIP_UNZIP_LIMIT&lt;/code&gt;: To limit the size of zip and unzip commands. Don&#39;t add unit. Default unit is &lt;code&gt;GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CLONE_LIMIT&lt;/code&gt;: To limit the size of Google Drive folder/file which you can clone. Don&#39;t add unit. Default unit is &lt;code&gt;GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MEGA_LIMIT&lt;/code&gt;: To limit the size of Mega download. Don&#39;t add unit. Default unit is &lt;code&gt;GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STORAGE_THRESHOLD&lt;/code&gt;: To leave specific storage free and any download will lead to leave free storage less than this value will be cancelled. Don&#39;t add unit. Default unit is &lt;code&gt;GB&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Buttons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;VIEW_LINK&lt;/code&gt;: View Link button to open file Index Link in browser instead of direct download link, you can figure out if it&#39;s compatible with your Index code or not, open any video from you Index and check if its URL ends with &lt;code&gt;?a=view&lt;/code&gt;, if yes make it &lt;code&gt;True&lt;/code&gt;, compatible with &lt;a href=&#34;https://gitlab.com/ParveenBhadooOfficial/Google-Drive-Index&#34;&gt;BhadooIndex&lt;/a&gt; Code. Default is &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Three buttons are already added including Drive Link, Index Link, and View Link, you can add extra buttons, if you don&#39;t know what are the below entries, simply leave them empty.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_FOUR_NAME&lt;/code&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_FOUR_URL&lt;/code&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_FIVE_NAME&lt;/code&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_FIVE_URL&lt;/code&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_SIX_NAME&lt;/code&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTTON_SIX_URL&lt;/code&gt;:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Torrent Search&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SEARCH_API_LINK&lt;/code&gt;: Search api app link. Get your api from deploying this &lt;a href=&#34;https://github.com/Ryuk-me/Torrent-Api-py&#34;&gt;repository&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported Sites:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;1337x, Piratebay, Nyaasi, Torlock, Torrent Galaxy, Zooqle, Kickass, Bitsearch, MagnetDL, Libgen, YTS, Limetorrent, TorrentFunk, Glodls, TorrentProject and YourBittorrent&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SEARCH_LIMIT&lt;/code&gt;: Search limit for search api, limit for each site and not overall result limit. Default is zero (Default api limit for each site).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SEARCH_PLUGINS&lt;/code&gt;: List of qBittorrent search plugins (github raw links). I have added some plugins, you can remove/add plugins as you want. Main Source: &lt;a href=&#34;https://github.com/qbittorrent/search-plugins/wiki/Unofficial-search-plugins&#34;&gt;qBittorrent Search Plugins (Official/Unofficial)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;3. Getting Google OAuth API credential file and token.pickle&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTES&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Old authentication changed, now we can&#39;t use bot or replit to generate token.pickle. You need OS with a browser.&lt;/li&gt; &#xA; &lt;li&gt;Windows users should install python3 and pip. You can find how to install and use them from google or from this &lt;a href=&#34;https://telegra.ph/Create-Telegram-Mirror-Leech-Bot-by-Deploying-App-with-Heroku-Branch-using-Github-Workflow-12-06&#34;&gt;telegraph&lt;/a&gt; from &lt;a href=&#34;https://github.com/vishnoe115&#34;&gt;Wiszky&lt;/a&gt; tutorial.&lt;/li&gt; &#xA; &lt;li&gt;You can ONLY open the generated link from &lt;code&gt;generate_drive_token.py&lt;/code&gt; in local browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://console.developers.google.com/apis/credentials&#34;&gt;Google Cloud Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to the OAuth Consent tab, fill it, and save.&lt;/li&gt; &#xA; &lt;li&gt;Go to the Credentials tab and click Create Credentials -&amp;gt; OAuth Client ID&lt;/li&gt; &#xA; &lt;li&gt;Choose Desktop and Create.&lt;/li&gt; &#xA; &lt;li&gt;Publish your OAuth consent screen App to prevent &lt;strong&gt;token.pickle&lt;/strong&gt; from expire&lt;/li&gt; &#xA; &lt;li&gt;Use the download button to download your credentials.&lt;/li&gt; &#xA; &lt;li&gt;Move that file to the root of mirrorbot, and rename it to &lt;strong&gt;credentials.json&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://console.developers.google.com/apis/library&#34;&gt;Google API page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search for Google Drive Api and enable it&lt;/li&gt; &#xA; &lt;li&gt;Finally, run the script to generate &lt;strong&gt;token.pickle&lt;/strong&gt; file for Google Drive:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install google-api-python-client google-auth-httplib2 google-auth-oauthlib&#xA;python3 generate_drive_token.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploying on VPS&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTES&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You must set &lt;code&gt;SERVER_PORT&lt;/code&gt; variable to &lt;code&gt;80&lt;/code&gt; or any other port you want to use.&lt;/li&gt; &#xA; &lt;li&gt;To clear the container (this will not affect on the image):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker container prune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;To delete the images:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker image prune -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Check the number of processing units of your machine with &lt;code&gt;nproc&lt;/code&gt; cmd and times it by 4, then edit &lt;code&gt;AsyncIOThreadsCount&lt;/code&gt; in qBittorrent.conf.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;anasty17/mltb:arm64&lt;/code&gt; for oracle or arm64/v8. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tutorial Video for Deploying on Oracle VPS: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/vishnoe115&#34;&gt;Wiszky&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;No need to use sudo su, you can also use sudo before each cmd!&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/IzUG7U7v4U4?t=968&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/See%20Video-black?style=for-the-badge&amp;amp;logo=YouTube&#34; width=&#34;160&#34; &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Deploying on VPS Using Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start Docker daemon (skip if already running), if installed by snap then use 2nd command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dockerd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap start docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: If not started or not starting, run the command below then try to start.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install docker.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build Docker image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker build . -t mirror-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run -p 80:80 mirror-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To stop the image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker ps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker stop id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Deploying on VPS Using docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you want to use port other than 80, change it in &lt;a href=&#34;https://github.com/anasty17/mirror-leech-telegram-bot/raw/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; also.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and run Docker image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After editing files with nano for example (nano start.sh):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker-compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To stop the image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker-compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run the image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker-compose start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tutorial video from Tortoolkit repo for docker-compose and checking ports&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/c8_TU1sPK08&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/See%20Video-black?style=for-the-badge&amp;amp;logo=YouTube&#34; width=&#34;160&#34; &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Extras&lt;/h1&gt; &#xA;&lt;h2&gt;Bot commands to be set in &lt;a href=&#34;https://t.me/BotFather&#34;&gt;@BotFather&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mirror - Mirror&#xA;zipmirror - Mirror and upload as zip&#xA;unzipmirror - Mirror and extract files&#xA;qbmirror - Mirror torrent using qBittorrent&#xA;qbzipmirror - Mirror torrent and upload as zip using qb&#xA;qbunzipmirror - Mirror torrent and extract files using qb&#xA;leech - Leech&#xA;zipleech - Leech and upload as zip&#xA;unzipleech - Leech and extract files&#xA;qbleech - Leech torrent using qBittorrent&#xA;qbzipleech - Leech torrent and upload as zip using qb&#xA;qbunzipleech - Leech torrent and extract using qb&#xA;clone - Copy file/folder to Drive&#xA;count - Count file/folder of Drive&#xA;watch - Mirror yt-dlp supported link&#xA;zipwatch - Mirror yt-dlp supported link as zip&#xA;leechwatch - Leech through yt-dlp supported link&#xA;leechzipwatch - Leech yt-dlp support link as zip&#xA;leechset - Leech settings&#xA;setthumb - Set thumbnail&#xA;status - Get Mirror Status message&#xA;rsslist - List all subscribed rss feed info&#xA;rssget - Get specific No. of links from specific rss feed&#xA;rsssub - Subscribe new rss feed&#xA;rssunsub - Unsubscribe rss feed by title&#xA;rssset - Rss Settings&#xA;list - Search files in Drive&#xA;search - Search for torrents with API&#xA;cancel - Cancel a task&#xA;cancelall - Cancel all tasks&#xA;del - Delete file/folder from Drive&#xA;log - Get the Bot Log&#xA;shell - Run commands in Shell&#xA;restart - Restart the Bot&#xA;stats - Bot Usage Stats&#xA;ping - Ping the Bot&#xA;help - All cmds with description&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;UPSTREAM REPO (Recommended)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;UPSTREAM_REPO&lt;/code&gt; variable can be used for edit/add any file in repository.&lt;/li&gt; &#xA; &lt;li&gt;You can add private/public repository link to grab/overwrite all files from it.&lt;/li&gt; &#xA; &lt;li&gt;You can skip adding the privates files like token.pickle or accounts folder before deploying, also no need to add variables direct links except &lt;strong&gt;config.env&lt;/strong&gt;, simply fill &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; private one in case you want to grab all files including private files.&lt;/li&gt; &#xA; &lt;li&gt;If you added private files while deploying and you have added private &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; and your private files in this private repository, so your private files will be overwritten from this repository. Also if you are using URL variables like &lt;code&gt;TOKEN_PICKLE_URL&lt;/code&gt; then all files from those variables will override the private files that added before deploying or from private &lt;code&gt;UPSTREAM_REPO&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you filled &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; with the official repository link then be carefull incase any change in requirements.txt your bot will not start after restart. In this case you need to deploy again with updated code to install the new requirements or simply by changing the &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; to you fork link with that old updates or make it empty if deployed master branch.&lt;/li&gt; &#xA; &lt;li&gt;In case you you filled &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; with your fork link be carefull also if you fetched the commits from the official repository.&lt;/li&gt; &#xA; &lt;li&gt;The changes in your &lt;code&gt;UPSTREAM_REPO&lt;/code&gt; will take affect only after restart.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UPSTREAM_BRANCH&lt;/code&gt; don&#39;t ever fill heroku here.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Using Service Accounts for uploading to avoid user rate limit&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Service Account to work, you must set &lt;code&gt;USE_SERVICE_ACCOUNTS&lt;/code&gt; = &#34;True&#34; in config file or environment variables. &lt;strong&gt;NOTE&lt;/strong&gt;: Using Service Accounts is only recommended while uploading to a Team Drive.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;1. Generate Service Accounts. &lt;a href=&#34;https://cloud.google.com/iam/docs/service-accounts&#34;&gt;What is Service Account?&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Let us create only the Service Accounts that we need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Abuse of this feature is not the aim of this project and we do &lt;strong&gt;NOT&lt;/strong&gt; recommend that you make a lot of projects, just one project and 100 SAs allow you plenty of use, its also possible that over abuse might get your projects banned by Google.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you have created SAs in past from this script, you can also just re download the keys by running:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --download-keys $PROJECTID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; 1 Service Account can upload/copy around 750 GB a day, 1 project can make 100 Service Accounts so you can upload 75 TB a day or clone 2 TB from each file creator (uploader email).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Two methods to create service accounts&lt;/h4&gt; &#xA;&lt;p&gt;Choose one of these methods&lt;/p&gt; &#xA;&lt;h5&gt;1. Create Service Accounts in existed Project (Recommended Method)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List your projects ids&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --list-projects&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable services automatically by this command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --enable-services $PROJECTID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Sevice Accounts to current project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --create-sas $PROJECTID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download Sevice Accounts as accounts folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --download-keys $PROJECTID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2. Create Service Accounts in New Project&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 gen_sa_accounts.py --quick-setup 1 --new-only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A folder named accounts will be created which will contain keys for the Service Accounts.&lt;/p&gt; &#xA;&lt;h3&gt;2. Add Service Accounts&lt;/h3&gt; &#xA;&lt;h4&gt;Two methods to add service accounts&lt;/h4&gt; &#xA;&lt;p&gt;Choose one of these methods&lt;/p&gt; &#xA;&lt;h5&gt;1. Add Them To Google Group then to Team Drive (Recommended)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mount accounts folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd accounts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grab emails form all accounts to emails.txt file that would be created in accounts folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;For Windows using PowerShell&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$emails = Get-ChildItem .\**.json |Get-Content -Raw |ConvertFrom-Json |Select -ExpandProperty client_email &amp;gt;&amp;gt;emails.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;For Linux&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;grep -oPh &#39;&#34;client_email&#34;: &#34;\K[^&#34;]+&#39; *.json &amp;gt; emails.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unmount acounts folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add emails from emails.txt to Google Group, after that add this Google Group to your Shared Drive and promote it to manager and delete email.txt file from accounts folder&lt;/p&gt; &#xA;&lt;h5&gt;2. Add Them To Team Drive Directly&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 add_to_team_drive.py -d SharedTeamDriveSrcID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Generate Database&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Using Railway&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://railway.app&#34;&gt;railway&lt;/a&gt; and create account&lt;/li&gt; &#xA; &lt;li&gt;Start new project&lt;/li&gt; &#xA; &lt;li&gt;Press on &lt;code&gt;Provision PostgreSQL&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;After creating database press on &lt;code&gt;PostgresSQL&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Connect&lt;/code&gt; column&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;Postgres Connection URL&lt;/code&gt; and fill &lt;code&gt;DATABASE_URL&lt;/code&gt; variable with it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Using Heroku PostgreSQL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.to/prisma/how-to-setup-a-free-postgresql-database-on-heroku-1dc1&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/See%20Dev.to-black?style=for-the-badge&amp;amp;logo=dev.to&#34; width=&#34;160&#34; &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Using ElephantSQL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://elephantsql.com&#34;&gt;elephantsql&lt;/a&gt; and create account&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Create New Instance&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the further instructions in the screen&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Select Region&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Review&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Create instance&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select your database name&lt;/li&gt; &#xA; &lt;li&gt;Copy your database url, and fill &lt;code&gt;DATABASE_URL&lt;/code&gt; variable with it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Multi Search IDs&lt;/h2&gt; &#xA;&lt;p&gt;To use list from multi TD/folder. Run driveid.py in your terminal and follow it. It will generate &lt;strong&gt;drive_folder&lt;/strong&gt; file or u can simply create &lt;code&gt;drive_folder&lt;/code&gt; file in working directory and fill it, check below format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MyTdName folderID/tdID IndexLink(if available)&#xA;MyTdName2 folderID/tdID IndexLink(if available)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Yt-dlp and Aria2c Authentication Using .netrc File&lt;/h2&gt; &#xA;&lt;p&gt;For using your premium accounts in yt-dlp or for protected Index Links, create .netrc file according to following format:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Create .netrc and not netrc, this file will be hidden, so view hidden files to edit it after creation.&lt;/p&gt; &#xA;&lt;p&gt;Format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine host login username password my_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine instagram login anas.tayyar password mypassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Instagram Note&lt;/strong&gt;: You must login even if you want to download public posts and after first try you must confirm that this was you logged in from different ip(you can confirm from phone app).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Youtube Note&lt;/strong&gt;: For &lt;code&gt;youtube&lt;/code&gt; authentication use &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl#how-do-i-pass-cookies-to-youtube-dl&#34;&gt;cookies.txt&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Using Aria2c you can also use built in feature from bot with or without username. Here example for index link without username.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine example.workers.dev password index_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where host is the name of extractor (eg. instagram, Twitch). Multiple accounts of different hosts can be added each separated by a new line.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Gdtot Cookies&lt;/h2&gt; &#xA;&lt;p&gt;To Clone or Leech gdtot link follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Login/Register to &lt;a href=&#34;https://new.gdtot.top&#34;&gt;gdtot&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy this script and paste it in browser address bar. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: After pasting it check at the beginning of the script in broswer address bar if&amp;nbsp;&lt;code&gt;javascript:&lt;/code&gt;&amp;nbsp;exists or not, if not so write it as shown below.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;javascript:(function () {&#xA; const input = document.createElement(&#39;input&#39;);&#xA; COOKIE = JSON.parse(JSON.stringify({cookie : document.cookie}));&#xA; input.value = COOKIE[&#39;cookie&#39;].split(&#39;crypt=&#39;)[1];&#xA; document.body.appendChild(input);&#xA; input.focus();&#xA; input.select();&#xA; var result = document.execCommand(&#39;copy&#39;);&#xA; document.body.removeChild(input);&#xA;  if(result)&#xA;    alert(&#39;Crypt copied to clipboard&#39;);&#xA;  else&#xA;    prompt(&#39;Failed to copy Crypt. Manually copy below Crypt\n\n&#39;, input.value);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After pressing enter your browser will prompt a alert.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Now you&#39;ll get Crypt value in your clipboard &lt;pre&gt;&lt;code&gt;NGxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWdSVT0%3D&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;From this you have to paste value for &lt;strong&gt;CRYPT&lt;/strong&gt; in config.env file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>programthink/zhao</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/programthink/zhao</id>
    <link href="https://github.com/programthink/zhao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;„ÄêÁºñÁ®ãÈöèÊÉ≥„ÄëÊï¥ÁêÜÁöÑ„ÄäÂ§™Â≠êÂÖöÂÖ≥Á≥ªÁΩëÁªú„ÄãÔºå‰∏ìÈó®Êè≠Èú≤ËµµÂõΩÁöÑÊùÉË¥µ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;= ‰ø∫Êï¥ÁêÜÁöÑ„ÄäÂ§™Â≠êÂÖöÂÖ≥Á≥ªÁΩëÁªú„Äã =&lt;/p&gt; &#xA;&lt;p&gt;== ÁÆÄ‰ªã ==&lt;/p&gt; &#xA;&lt;p&gt;Ê≠§È°πÁõÆÂàõÂª∫‰∫é2016Âπ¥2ÊúàÔºå‰∏ìÈó®Áî®Êù•Êè≠Èú≤Â§©ÊúùÁöÑÊùÉË¥µÔºà‰πüÂ∞±ÊòØ‰º†ËØ¥‰∏≠ÁöÑ‚ÄúËµµÂÆ∂‰∫∫‚ÄùÔºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰ø∫ÊääËøôÂá†Âπ¥Êî∂ÈõÜÊï¥ÁêÜÁöÑÊï∞ÊçÆÂºÄÊ∫êÂà∞ GitHubÔºå‰æø‰∫éÂ§ö‰∫∫Âçè‰Ωú‚Äî‚ÄîÂ§ß‰ºôÂÑøÁæ§Á≠ñÁæ§ÂäõÔºå‰∏ÄËµ∑Êù•ÊõùÂÖâÊùÉË¥µÂÆ∂Êóè„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÂàùÊ¨°‰∏ä‰º†ÁöÑÊï∞ÊçÆÂåÖÊã¨Ôºö700Â§ö‰∏™Êï∞ÊçÆÊñá‰ª∂Ôºà &#39;&#39;&#39;ÂØπÂ∫î700Â§ö‰∫∫Ôºå130Â§ö‰∏™ÂÆ∂Êóè&#39;&#39;&#39; ÔºâÔºåÂè¶Êúâ200Â§öÂº†ÂõæÁâáÔºà‰∫∫Áâ©Â§¥ÂÉèÔºâ„ÄÇÈöèÁùÄ‰ø∫‰∏çÊñ≠ÂÆåÂñÑÔºåÊï∞ÊçÆ‰ºöË∂äÊù•Ë∂äÂ§ö„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÂØπËøô‰∏™È°πÁõÆÔºå‰ø∫‰ºö„ÄêÊåÅÁª≠Êõ¥Êñ∞„Äë„ÄÇÊØîÂ¶ÇÊúùÂª∑ÊØèÊ¨°Êç¢Â±äÁöÑÊó∂ÂÄôÔºå‰ø∫ÈÉΩ‰ºöË°•ÂÖÖÊñ∞ÁöÑÁ¥†Êùê„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏∫‰∫ÜÁ°Æ‰øùÊï∞ÊçÆÁöÑÂèØ‰ø°Â∫¶Ôºå‰ø∫‰∏ªË¶ÅÂèÇËÄÉ‚ÄúÁª¥Âü∫ÁôæÁßë‚Äù‰ª•Âèä‰∏Ä‰∫õÂõΩÈôÖÊùÉÂ®ÅÂ™í‰ΩìÁöÑÊä•ÈÅìÔºàÊØîÂ¶Ç„ÄäÁ∫ΩÁ∫¶Êó∂Êä•„Äã„ÄÅ„ÄäÂçéÂ∞îË°óÊó•Áâà„Äã„ÄÅ„ÄäÈáëËûçÊó∂Êä•„ÄãÁ≠âÁ≠âÔºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âè¶Â§ñÔºåÂØπ‰∫éÊüê‰∫õÂÆ¢ËßÇ‰∫ãÂÆûÔºàÊØîÂ¶ÇÔºöÁîüÂçíÂπ¥Êúà„ÄÅÁÆÄÂéÜ„ÄÅ‰∫≤ÊàöÂÖ≥Á≥ªÔºâÔºå‰ø∫‰πüÂèÇËÄÉ‰∫ÜÂ§©ÊúùÊîøÂ∫úÁöÑÂÆòÊñπÁΩëÁ´ôÔºå‰ª•ÂèäÂ¢ôÂÜÖÁöÑ‚ÄúÁôæÂ∫¶ÁôæÁßë‚Äù„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;== ‰∏ãËΩΩËØ¥Êòé ==&lt;/p&gt; &#xA;&lt;p&gt;GitHub Êèê‰æõ‰∫Ü‚Äú‰∏ãËΩΩÊï¥‰∏™È°πÁõÆ‚ÄùÁöÑÂäüËÉΩÔºå‰ΩÜÊòØ‰ºöÊØîËæÉÂ§ß„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†‰ªÖ‰ªÖÊÉ≥Áúã„ÄäÂ§™Â≠êÂÖöÂÖ≥Á≥ªÁΩëÁªú„ÄãËøô‰ªΩÊñáÊ°£ÔºåÂè™ÈúÄÂú®È¶ñÈ°µ‰∏äÊñπÁÇπÂáªËøõÂÖ• &#39;&#39;&#39;download&#39;&#39;&#39; Ëøô‰∏™ÁõÆÂΩï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËØ•ÁõÆÂΩï‰∏ãÊúâ &#39;&#39;&#39;pdf&#39;&#39;&#39; Âíå &#39;&#39;&#39;jpg&#39;&#39;&#39; ‰∏§‰∏™Â≠êÁõÆÂΩïÔºåÂàÜÂà´Â≠òÊîæÂØπÂ∫îÁöÑ &#39;&#39;&#39;„ÄêÊñá‰ª∂Á±ªÂûã„Äë&#39;&#39;&#39; „ÄÇ‰Ω†ÊÉ≥Ë¶ÅÁúãÂì™‰∏ÄÁßçÊñá‰ª∂Ê†ºÂºèÔºåÂ∞±ËøõÂÖ•Âì™‰∏™Â≠êÁõÆÂΩïÈáåÈù¢„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËøõÂÖ•„ÄêÊñá‰ª∂Á±ªÂûã„ÄëÁöÑÂ≠êÁõÆÂΩï‰πãÂêéÔºå‰ºöÁúãÂà∞‰∏Ä‰∏™Êñá‰ª∂ÂàóË°®ÔºàÁõÆÂâçÊúâ13‰∏™Êñá‰ª∂Ôºâ„ÄÇÂÖàÁÇπÂáª‰Ω†ÊÉ≥Ë¶ÅÁöÑÊüê‰∏™Êñá‰ª∂Ôºå‰ºöËøõÂÖ•ËØ•Êñá‰ª∂ÁöÑÈ°µÈù¢„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÁÑ∂ÂêéÂú®„ÄêÂè≥‰∏äÊñπ„Äë‰Ω†‰ºöÁúãÂà∞‰∏Ä‰∏™ &#39;&#39;&#39;Raw ÊåâÈíÆ&#39;&#39;&#39; ÔºåÂú®Ëøô‰∏™ÊåâÈíÆ‰∏äÁÇπ„ÄêÂè≥ÈîÆ„ÄëÔºåÂú®„ÄêÂè≥ÈîÆËèúÂçï„ÄëÈáåÈù¢ÈÄâ‚Äú‰øùÂ≠ò‚ÄùÊàñ‚ÄúÂè¶Â≠ò‰∏∫‚ÄùÔºåÂ∞±ÂèØ‰ª•ÊääËøô‰∏™Êñá‰ª∂‰∏ãËΩΩÂà∞‰Ω†Êú¨Êú∫„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;== Â§ö‰∫∫Âçè‰ΩúËØ¥Êòé ==&lt;/p&gt; &#xA;&lt;p&gt;‰ø∫ÈùûÂ∏∏Â∏åÊúõÊúâÊõ¥Â§öÁöÑÁΩëÂèãÂèÇ‰∏éËØ•È°πÁõÆÔºåÂ§ß‰ºôÂÑø‰∏ÄËµ∑Êù•ÂÆåÂñÑÂ§©ÊúùÊùÉË¥µÂÆ∂ÊóèÁöÑËµÑÊñô„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊÉ≥Ë¶ÅÂèÇ‰∏éÁöÑÂêåÂ≠¶ÔºåÂèØ‰ª•ÈÄöËøáÂ¶Ç‰∏ãÊñπÂºèÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Âà∞[https://program-think.blogspot.com/ ‰ø∫ÂçöÂÆ¢]ÁïôË®ÄËøõË°åÂèçÈ¶àÔºåË°•ÂÖÖ‰ø°ÊÅØÊàñÂèçÈ¶àÈîôËØØ„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®[https://github.com/programthink/zhao/issues Êú¨È°πÁõÆÂèë‰∏Ä‰∏™ issue]ÔºåË°•ÂÖÖ‰ø°ÊÅØÊàñÂèçÈ¶àÈîôËØØ„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork ËØ•È°πÁõÆÔºåËøõË°å‰øÆÊîπÔºåÁÑ∂ÂêéÂêë‰ø∫Âèë‰∏Ä‰∏™ Pull Request&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÔºàÂêéÈù¢‰∏§ÁßçÊñπÂºèÔºå‰Ω†ÈúÄË¶ÅÊúâ GitHub ÁöÑÂ∏êÂè∑Ôºâ&lt;/p&gt; &#xA;&lt;p&gt;== Êï∞ÊçÆÊ†ºÂºèËØ¥Êòé ==&lt;/p&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆÁöÑÊï∞ÊçÆÊñá‰ª∂ÔºåÂÖ®ÈÉ®ÈááÁî®[https://zh.wikipedia.org/wiki/YAML YAML Ê†ºÂºè]„ÄÇËøôÁßçÊ†ºÂºèÈùûÂ∏∏ÁÆÄÊ¥ÅÊòé‰∫ÜÔºåÊúâÂà©‰∫éÂÆåÂÖ®‰∏çÊáÇÊäÄÊúØÁöÑÁΩëÂèãÂèÇ‰∏éÁºñËæë„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËÄå‰∏î‰ø∫Âú®ÊØè‰∏Ä‰∏™ YAML Ê†ºÂºèÁöÑÊñá‰ª∂‰∏≠ÈÉΩÂÜô‰∫ÜËØ¶ÁªÜÁöÑÊ≥®ÈáäÔºå‰æø‰∫éÂÖ∂‰ªñÁΩëÂèã‰øÆÊîπ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;== ÁõÆÂΩïËØ¥Êòé ==&lt;/p&gt; &#xA;&lt;p&gt;=== data ÁõÆÂΩï ===&lt;/p&gt; &#xA;&lt;p&gt;data ÁõÆÂΩïÁî®Êù•‰øùÂ≠òÊï∞ÊçÆÊñá‰ª∂ÔºåËØ•ÁõÆÂΩï‰∏ãÂè¶ÊúâÂ¶Ç‰∏ã‰∏â‰∏™Â≠êÁõÆÂΩïÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;person&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ëøô‰∏™ÁõÆÂΩïÂ≠òÊîæ‰∏™‰∫∫ÁöÑËµÑÊñôÔºåÊØè‰∏™‰∫∫‰∏Ä‰∏™ÁõÆÂΩïÔºåÁõÆÂΩïÂêçÂ∞±ÊòØ‰∫∫Âêç„ÄÇÂØπ‰∫éÂÅ∂Â∞îÊúâÂêåÂêçÁöÑÊÉÖÂÜµÔºåÂú®ÁõÆÂΩïÂêçÊú´Â∞æËøΩÂä†Êï∞Â≠óÂ∫èÂè∑Êù•Âå∫ÂàÜ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊØè‰∏™ÁõÆÂΩï‰∏ãÈÉΩÊúâ‰∏Ä‰∏™ brief.yaml Êñá‰ª∂ÔºåÂåÖÂê´Ê≠§‰∫∫ÁöÑÁÆÄ‰ªã„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êúâ‰∫õÁõÆÂΩï‰∏ãËøòÊúâ‰∏Ä‰∏™ portrait.png Êñá‰ª∂ÔºåÂØπÂ∫îÊ≠§‰∫∫ÁöÑÂ§¥ÂÉè„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;company&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ëøô‰∏™ÁõÆÂΩïÂ≠òÊîæ‰∏éÂ§™Â≠êÂÖöÊúâÂÖ≥ÁöÑÂÖ¨Âè∏ÊàñÁªÑÁªáÊú∫ÊûÑ„ÄÇÁõÆÂΩïÁªìÊûÑ‰∏é person Á±ª‰ºº„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;family&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ëøô‰∏™ÁõÆÂΩïÂ≠òÊîæÂÆ∂ÊóèÂÖ≥Á≥ªÁöÑ‰ø°ÊÅØ„ÄÇÊØè‰∏™ÂÆ∂ÊóèÊòØ‰∏Ä‰∏™ yaml Ê†ºÂºèÁöÑÊñá‰ª∂„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;=== bin ÁõÆÂΩï ===&lt;/p&gt; &#xA;&lt;p&gt;ËØ•ÁõÆÂΩïÂ≠òÊîæÁºñËØëËÑöÊú¨„ÄÇËØ•ËÑöÊú¨ÁöÑ‰ΩøÁî®ÂèÇËßÅ‰∏ãÈù¢ÁöÑÁ´†ËäÇ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;=== download ÁõÆÂΩï ===&lt;/p&gt; &#xA;&lt;p&gt;ËØ•ÁõÆÂΩïÂ≠òÊîæÂà∂‰ΩúÂ•ΩÁöÑÊñá‰ª∂ÔºåÁõÆÂâçÂÖàÊèê‰æõ jpg Âíå pdf ‰∏§ÁßçÊ†ºÂºè„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÈúÄË¶ÅÂÖ∂ÂÆÉÊ†ºÂºèÔºåÂèØ‰ª•Áî® bin ÁõÆÂΩï‰∏ãÁöÑÁºñËØëËÑöÊú¨Ëá™Ë°åÊêûÂÆöÔºàÁºñËØëËÑöÊú¨ÁöÑ‰ΩøÁî®ÔºåÂèÇËßÅ‰∏ãÈù¢ÁöÑÁ´†ËäÇÔºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;== ÁºñËØëËÑöÊú¨‰ΩøÁî®ËØ¥Êòé ==&lt;/p&gt; &#xA;&lt;p&gt;Ôºà‰ø∫ÊòØÂú® Linux ‰∏äÁºñÂÜôËØ•ËÑöÊú¨ÔºåÂ∞öÊú™Âú® Windows ‰∏äËøõË°åÊµãËØïÔºâ&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†Âú® Windows ‰∏ä‰ΩøÁî®Á¢∞Âà∞ÈóÆÈ¢òÔºåÂèØ‰ª•Âà∞[https://program-think.blogspot.com/ ‰ø∫ÂçöÂÆ¢]ÁïôË®ÄËøõË°åÂèçÈ¶à„ÄÇ‰πüÂèØ‰ª•Âú®[https://github.com/programthink/zhao/issues Êú¨È°πÁõÆÂèë‰∏Ä‰∏™ issue]„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;=== ËÑöÊú¨ÁöÑÂëΩ‰ª§Ë°åÂèÇÊï∞ ===&lt;/p&gt; &#xA;&lt;p&gt;‰ø∫‰ΩøÁî® python ‰Ωú‰∏∫ÁºñËØëËÑöÊú¨ÔºåËØ•ËÑöÊú¨‰Ωç‰∫é bin ÁõÆÂΩï‰∏ã„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÈÄöËøáËØ•ËÑöÊú¨ÂèØ‰ª•ÊääÂéüÂßãÊï∞ÊçÆÁîüÊàê‰∏∫ dot ËØ≠Ë®ÄÁöÑËÑöÊú¨„ÄÇÁÑ∂ÂêéÂÜçË∞ÉÁî® Graphviz Êää dot ËÑöÊú¨ÁîüÊàêÂêÑÁßçÊ†ºÂºèÔºàÊØîÂ¶ÇÔºöpdf„ÄÅjpegÔºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Ë¶Å‰ΩøÁî®ËØ•ËÑöÊú¨ÔºåÂÖàÂú®ÂëΩ‰ª§Ë°åÊ®°Âºè‰∏ãËøõÂÖ• bin ÁõÆÂΩïÔºåÁÑ∂ÂêéËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Ôºö&lt;/p&gt; &#xA;&lt;p&gt;ÔºàÁîüÊàê pdf Ê†ºÂºèÁöÑÁ§∫‰æãÔºâ&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py pdf&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;ÔºàÁîüÊàê jpg Ê†ºÂºèÁöÑÁ§∫‰æãÔºâ&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py jpg&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;=== ‰æùËµñÁöÑËΩØ‰ª∂ ===&lt;/p&gt; &#xA;&lt;p&gt;Ë¶Å‰ΩøÁî®‰∏äËø∞ËÑöÊú¨Ôºå‰Ω†ÈúÄË¶Å‰∫ãÂÖàÂÆâË£ÖÁõ∏ÂÖ≥ÁöÑËΩØ‰ª∂ÔºàÂ¶Ç‰∏ãÔºâ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PythonÔºà2 Êàñ 3Ôºâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Âõ†‰∏∫‰ø∫Áî®ÁöÑÊòØ Python ËÑöÊú¨ÔºåÊâÄ‰ª•‰Ω†ÈúÄË¶ÅÂÖàÂÆâË£Ö python ËΩØ‰ª∂„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÁõÆÂâç Python Êúâ‰∏§ÁßçÂ§ßÁâàÊú¨‚Äî‚Äîpython2 Âíå python3‚Äî‚Äî‰ø∫ÁöÑÁºñËØëËÑöÊú¨ &#39;&#39;&#39;„ÄêÂêåÊó∂ÂÖºÂÆπ„Äë&#39;&#39;&#39; Ëøô‰∏§Áßç Python ÁöÑÂ§ßÁâàÊú¨„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÂØπ‰∫é Python ÁöÑÂ∞èÁâàÊú¨Ôºå‰ø∫Êú¨‰∫∫Âú® &#39;&#39;&#39;2.7&#39;&#39;&#39; Âíå &#39;&#39;&#39;3.5&#39;&#39;&#39; ‰∏äÊµãËØïÈÄöËøá„ÄÇ2.6 Âíå 3.4 ‰º∞ËÆ°‰πüÂèØ‰ª•„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyYAML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ËøôÊòØ‰∏Ä‰∏™Âü∫‰∫é python ÂºÄÂèëÁöÑËΩØ‰ª∂ÂåÖÔºå‰∏ìÈó®Áî®Êù•Â§ÑÁêÜ YAML Ê†ºÂºèÁöÑÊñá‰ª∂„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰Ω†ÈúÄË¶ÅÂú®‰Ω†ÁöÑ python ÁéØÂ¢É‰∏≠ÂÆâË£ÖËØ•ËΩØ‰ª∂ÂåÖ„ÄÇÂÖ∂ÂÆòÊñπÈìæÊé•Â¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;p&gt;[http://pyyaml.org/wiki/PyYAML PyYAML ÁöÑÂÆòÁΩëÁöÑ wiki]&lt;/p&gt; &#xA;&lt;p&gt;[https://pypi.python.org/pypi/PyYAML Python ÂÆòÁΩëÁöÑ PYPI]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graphviz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ëøô‰∏™ËΩØ‰ª∂ÊòØÁî®Êù•ÁîüÊàê„ÄêÂÖ≥Á≥ªÂõæ„ÄëÁöÑ„ÄÇÂÖ≥‰∫éËØ•Ëøô‰∏™ËΩØ‰ª∂Ôºå‰ø∫Â∑≤ÁªèÂÜô‰∫Ü‰∏ÄÁØáÊâ´Áõ≤ÊïôÁ®ãÔºö&lt;/p&gt; &#xA;&lt;p&gt;„Ää[https://program-think.blogspot.com/2016/02/opensource-review-graphviz.html ÂºÄÊ∫êÈ°πÁõÆÔºö„ÄêËá™Âä®„ÄëÁªòÂõæÂ∑•ÂÖ∑Graphviz‚Äî‚Äî„ÄäÂ§™Â≠êÂÖöÂÖ≥Á≥ªÁΩëÁªú„ÄãÂ∞±ÊòØÁî®ÂÆÉÂà∂‰Ωú]„Äã&lt;/p&gt; &#xA;&lt;p&gt;== Ëá¥‚ÄúÂèçÂØπÊ≠§È°πÁõÆÁöÑÂ¢ôÂÜÖÁ®ãÂ∫èÂëò‚Äù ==&lt;/p&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆ‰∏äÁ∫øÁ¨¨‰∫åÂ§©ÔºåÂ∞±Êî∂Ëé∑ 363 ‰∏™ star ÂÖº 88 ‰∏™ forkÔºåÁîöËá≥ËøòÊå§Ëøõ GitHub ÁöÑ‚ÄúÂΩìÊó• Trending‚Äù‚Äî‚Äî‰ø∫ÂæàËç£Âπ∏Ôºå‰πüÂæàÈ´òÂÖ¥ÊúâËøô‰πàÂ§ö‰∫∫Áªô‰ø∫ÊçßÂú∫„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰ΩÜÊòØÂú®[https://github.com/programthink/zhao/issues Êú¨È°πÁõÆÁöÑ issue ÂàóË°®]‰∏≠‰πüÁúãÂà∞Â•ΩÂá†‰∏™ÂèçÂØπÊ≠§È°πÁõÆÁöÑÁ®ãÂ∫èÂëòÔºàÂ∫îËØ•ÈÉΩÊù•Ëá™Â¢ôÂÜÖÔºâÔºå‰ªñ‰ª¨ÊãÖÂøÉËøô‰∏™È°πÁõÆÂØºËá¥ GitHub Ë¢´ GFW Â∞ÅÊùÄ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËøôÂá†Âπ¥Êù•ÔºåÁ±ª‰ººÁöÑË®ÄËÆ∫‰ø∫Â∑≤ÁªèÁúã‰∫Ü‰∏çÂ∞ë„ÄÇÂ∞±Â•ΩÊØîÂº∫ÁõóÊãøÂàÄÊùÄ‰∫∫ÔºåÂõ¥ËßÇËÄÖ‰∏ç‰ΩÜÊ≤°ÊúâË∞¥Ë¥£Âº∫ÁõóÔºåÂèçËÄåÂéªË∞¥Ë¥£ÂçñÂàÄÁöÑÂ∫óÂÆ∂‚Äî‚ÄîËøôÂ∞±ÊòØ‰º†ËØ¥‰∏≠ÁöÑ‚ÄúÊñØÂæ∑Âì•Â∞îÊë©ÁªºÂêàÁóá‚Äù„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊúâÂÖ¥Ë∂£ÁöÑÂêåÂ≠¶ÔºåÂèØ‰ª•Áúã‰ø∫‰πãÂâçÁöÑÂçöÊñá‚Äî‚Äî„Ää[https://program-think.blogspot.com/2012/06/stockholm-syndrome.html Â§©ÊúùÊ∞ë‰ºóÁöÑÂøÉÁêÜÂàÜÊûêÔºöÊñØÂæ∑Âì•Â∞îÊë©ÁªºÂêàÁóá]„Äã&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GoogleCloudPlatform/python-docs-samples</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/GoogleCloudPlatform/python-docs-samples</id>
    <link href="https://github.com/GoogleCloudPlatform/python-docs-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code samples used on cloud.google.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Cloud Platform Python Samples&lt;/h1&gt; &#xA;&lt;p&gt;Python samples for &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-2.7.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-2.7.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.6.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.6.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.7.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.7.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.8.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.8.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.9.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.9.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-3.10.html&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/cloud-devrel-public/python-docs-samples/badges/py-310.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Google Cloud Samples&lt;/h2&gt; &#xA;&lt;p&gt;Check out some of the samples found on this repository on the &lt;a href=&#34;https://cloud.google.com/docs/samples?l=python&#34;&gt;Google Cloud Samples&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://cloud.google.com/python/setup&#34;&gt;&lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;virtualenv&lt;/code&gt;&lt;/a&gt; if you do not already have them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Obtain authentication credentials.&lt;/p&gt; &lt;p&gt;Create local credentials by running the following command and following the oauth2 flow (read more about the command &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/beta/auth/application-default/login&#34;&gt;here&lt;/a&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;gcloud auth application-default login&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Read more about &lt;a href=&#34;https://cloud.google.com/docs/authentication#projects_and_resources&#34;&gt;Google Cloud Platform Authentication&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run a sample&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to one of the sample folders, e.g. &lt;code&gt;logging/cloud-client&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd logging/cloud-client/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a virtualenv. Samples are compatible with Python 3.6+.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python3 -m venv env&#xA;source env/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the dependencies needed to run the samples.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the sample:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python snippets.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions welcome! See the &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/python-docs-samples/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset</id>
    <link href="https://github.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository provides motion datasets collected by Bandai Namco Research Inc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bandai-Namco-Research-Motiondataset&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides motion datasets collected by Bandai Namco Research Inc.&lt;/p&gt; &#xA;&lt;p&gt;Find &lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/README_Japanese.md&#34;&gt;here&lt;/a&gt; for a READEME in Japanese.&lt;/p&gt; &#xA;&lt;p&gt;There is a long-standing interest in making diverse stylized motions for games and movies that pursue realistic and expressive character animation; however, creating new movements that include all the various styles of expression using existing methods is difficult. Due to this, Motion Style Transfer (MST) has been drawing attention recently, which aims to convert the motion in a clip with a given content into another motion in a different style, while keeping the same content. A motion is composed of a content and style, where content is the base of the motion and style comprises of the attributes such as mood and personality of the character tied to the motion.&lt;/p&gt; &#xA;&lt;p&gt;The datasets contain a diverse range of contents such as daily activities, fighting, and dancing; with styles such as active, tired, and happy. These can be used as training data for MST models. The animation below shows examples of visualized motions.&lt;/p&gt; &#xA;&lt;p&gt;Currently, two datasets are available in this repository and are both located under the &lt;code&gt;dataset&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bandai-Namco-Research-Motiondataset-1&lt;/strong&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/dataset/Bandai-Namco-Research-Motiondataset-1/README.md&#34;&gt;Details&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;17 types of wide-range contents including daily activities, fighting, and dancing.&lt;/li&gt; &#xA;   &lt;li&gt;15 styles that include expression variety.&lt;/li&gt; &#xA;   &lt;li&gt;A total of 36,673 frames.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/src/Bandai-Namco-Research-Motiondataset-1/movie_walk.gif&#34; width=&#34;100%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bandai-Namco-Research-Motiondataset-2&lt;/strong&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/dataset/Bandai-Namco-Research-Motiondataset-2/README.md&#34;&gt;Details&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;10 types of content mainly focusing on locomotion and hand actions.&lt;/li&gt; &#xA;   &lt;li&gt;7 styles that use a single, uniform expression.&lt;/li&gt; &#xA;   &lt;li&gt;A total of 384,931 frames.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/src/Bandai-Namco-Research-Motiondataset-2/movie_walk.gif&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;You can find a sample script for visualization (using Blender) including step-by-step instructions under the &lt;code&gt;utils&lt;/code&gt; directory. Please see &lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/utils/blender/README.md&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Data Collection&lt;/h2&gt; &#xA;&lt;p&gt;Each dataset is based on the motion of three professional actors, collected at the motion capture studio of Bandai Namco. We applied post-processing such as noise removal, proportion alignment, and clipping; and saved in BVH format.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/src/images/motion_capture_studio.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The datasets and scripts are available in the following lincenses.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bandai-Namco-Research-Motiondataset-1: &lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/dataset/Bandai-Namco-Research-Motiondataset-1/LICENSE&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bandai-Namco-Research-Motiondataset-2: &lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/dataset/Bandai-Namco-Research-Motiondataset-2/LICENSE&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Motion visualization on Blender: &lt;a href=&#34;https://raw.githubusercontent.com/BandaiNamcoResearchInc/Bandai-Namco-Research-Motiondataset/master/utils/blender/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related works&lt;/h2&gt; &#xA;&lt;p&gt;As mentioned previously, the field of MST has been drawing attention as of late. If you are interested in this topic, please refer to the following non-exhaustive list of research and datasets. The models introduced in these papers show a high-level of performance and the datasets related to MST provide a wide variety of motion data.&lt;/p&gt; &#xA;&lt;h3&gt;Papers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Jurnal of Sensors 2021) A Cyclic Consistency Motion Style Transfer Method Combined with Kinematic Constraints &lt;a href=&#34;https://www.hindawi.com/journals/js/2021/5548614/&#34;&gt;[Paper]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(CVPR 2021) Autoregressive Stylized Motion Synthesis with Generative Flow &lt;a href=&#34;https://openaccess.thecvf.com/content/CVPR2021/papers/Wen_Autoregressive_Stylized_Motion_Synthesis_With_Generative_Flow_CVPR_2021_paper.pdf&#34;&gt;[Paper]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(CVPR 2021) Understanding Object Dynamics for Interactive Image-to-Video Synthesis &lt;a href=&#34;https://ieeexplore.ieee.org/document/9577842&#34;&gt;[Paper]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(ACM Trans. Graph 2020) Unpaired Motion Style Transfer from Video to Animation &lt;a href=&#34;https://deepmotionediting.github.io/papers/Motion_Style_Transfer-camera-ready.pdf&#34;&gt;[Paper]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Datasets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deep-motion-editing &lt;a href=&#34;https://github.com/DeepMotionEditing/deep-motion-editing&#34;&gt;[GitHub]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ubisoft La Forge Animation Dataset &lt;a href=&#34;https://github.com/ubisoft/ubisoft-laforge-animation-dataset&#34;&gt;[GitHub]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;¬© [2022] Bandai Namco Research Inc. All Rights Reserved&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/airflow</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/apache/airflow</id>
    <link href="https://github.com/apache/airflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Airflow - A platform to programmatically author, schedule, and monitor workflows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Airflow&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/apache-airflow&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/apache-airflow.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/airflow/actions&#34;&gt;&lt;img src=&#34;https://github.com/apache/airflow/workflows/CI%20Build/badge.svg?sanitize=true&#34; alt=&#34;GitHub Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/apache/airflow?branch=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/apache/airflow/main.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/:license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/apache-airflow.svg?sanitize=true&#34; alt=&#34;PyPI - Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/apache/airflow.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/apache/airflow.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/apache-airflow&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/search?repo=apache-airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/apache-airflow&#34; alt=&#34;Artifact HUB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ApacheAirflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ApacheAirflow.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://s.apache.org/airflow-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/&#34;&gt;Apache Airflow&lt;/a&gt; (or simply Airflow) is a platform to programmatically author, schedule, and monitor workflows.&lt;/p&gt; &#xA;&lt;p&gt;When workflows are defined as code, they become more maintainable, versionable, testable, and collaborative.&lt;/p&gt; &#xA;&lt;p&gt;Use Airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The Airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#project-focus&#34;&gt;Project Focus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#principles&#34;&gt;Principles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#installing-from-pypi&#34;&gt;Installing from PyPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#official-source-code&#34;&gt;Official source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#convenience-packages&#34;&gt;Convenience packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#user-interface&#34;&gt;User Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#semantic-versioning&#34;&gt;Semantic versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#version-life-cycle&#34;&gt;Version Life Cycle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#support-for-python-and-kubernetes-versions&#34;&gt;Support for Python and Kubernetes versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#base-os-support-for-reference-airflow-images&#34;&gt;Base OS support for reference Airflow images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#approach-to-dependencies-of-airflow&#34;&gt;Approach to dependencies of Airflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#support-for-providers&#34;&gt;Support for providers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#who-uses-apache-airflow&#34;&gt;Who uses Apache Airflow?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#who-maintains-apache-airflow&#34;&gt;Who Maintains Apache Airflow?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#can-i-use-the-apache-airflow-logo-in-my-presentation&#34;&gt;Can I use the Apache Airflow logo in my presentation?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#airflow-merchandise&#34;&gt;Airflow merchandise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Project Focus&lt;/h2&gt; &#xA;&lt;p&gt;Airflow works best with workflows that are mostly static and slowly changing. When the DAG structure is similar from one run to the next, it clarifies the unit of work and continuity. Other similar projects include &lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;Luigi&lt;/a&gt;, &lt;a href=&#34;https://oozie.apache.org/&#34;&gt;Oozie&lt;/a&gt; and &lt;a href=&#34;https://azkaban.github.io/&#34;&gt;Azkaban&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Airflow is commonly used to process data, but has the opinion that tasks should ideally be idempotent (i.e., results of the task will be the same, and will not create duplicated data in a destination system), and should not pass large quantities of data from one task to the next (though tasks can pass metadata using Airflow&#39;s &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/concepts.html#xcoms&#34;&gt;Xcom feature&lt;/a&gt;). For high-volume, data-intensive tasks, a best practice is to delegate to external services specializing in that type of work.&lt;/p&gt; &#xA;&lt;p&gt;Airflow is not a streaming solution, but it is often used to process real-time data, pulling data off streams in batches.&lt;/p&gt; &#xA;&lt;h2&gt;Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic&lt;/strong&gt;: Airflow pipelines are configuration as code (Python), allowing for dynamic pipeline generation. This allows for writing code that instantiates pipelines dynamically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Elegant&lt;/strong&gt;: Airflow pipelines are lean and explicit. Parameterizing your scripts is built into the core of Airflow using the powerful &lt;strong&gt;Jinja&lt;/strong&gt; templating engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow is tested with:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Main version (dev)&lt;/th&gt; &#xA;   &lt;th&gt;Stable version (2.3.1)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;3.7, 3.8, 3.9, 3.10&lt;/td&gt; &#xA;   &lt;td&gt;3.7, 3.8, 3.9, 3.10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Platform&lt;/td&gt; &#xA;   &lt;td&gt;AMD64/ARM64(*)&lt;/td&gt; &#xA;   &lt;td&gt;AMD64/ARM64(*)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kubernetes&lt;/td&gt; &#xA;   &lt;td&gt;1.20, 1.21, 1.22, 1.23, 1.24&lt;/td&gt; &#xA;   &lt;td&gt;1.20, 1.21, 1.22, 1.23, 1.24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;10, 11, 12, 13, 14&lt;/td&gt; &#xA;   &lt;td&gt;10, 11, 12, 13, 14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;5.7, 8&lt;/td&gt; &#xA;   &lt;td&gt;5.7, 8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite&lt;/td&gt; &#xA;   &lt;td&gt;3.15.0+&lt;/td&gt; &#xA;   &lt;td&gt;3.15.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSSQL&lt;/td&gt; &#xA;   &lt;td&gt;2017(*), 2019 (*)&lt;/td&gt; &#xA;   &lt;td&gt;2017(*), 2019 (*)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;* Experimental&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: MySQL 5.x versions are unable to or have limitations with running multiple schedulers -- please see the &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/scheduler.html&#34;&gt;Scheduler docs&lt;/a&gt;. MariaDB is not tested/recommended.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: SQLite is used in Airflow tests. Do not use it in production. We recommend using the latest stable version of SQLite for local development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Support for Python v3.10 will be available from Airflow 2.3.0. The &lt;code&gt;main&lt;/code&gt; (development) branch already supports Python 3.10.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Airflow currently can be run on POSIX-compliant Operating Systems. For development it is regularly tested on fairly modern Linux Distros and recent versions of MacOS. On Windows you can run it via WSL2 (Windows Subsystem for Linux 2) or via Linux Containers. The work to add Windows support is tracked via &lt;a href=&#34;https://github.com/apache/airflow/issues/10388&#34;&gt;#10388&lt;/a&gt; but it is not a high priority. You should only use Linux-based distros as &#34;Production&#34; execution environment as this is the only environment that is supported. The only distro that is used in our CI tests and that is used in the &lt;a href=&#34;https://hub.docker.com/p/apache/airflow&#34;&gt;Community managed DockerHub image&lt;/a&gt; is &lt;code&gt;Debian Bullseye&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Visit the official Airflow website documentation (latest &lt;strong&gt;stable&lt;/strong&gt; release) for help with &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/installation.html&#34;&gt;installing Airflow&lt;/a&gt;, &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/start/index.html&#34;&gt;getting started&lt;/a&gt;, or walking through a more complete &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you&#39;re looking for documentation for the main branch (latest development branch): you can find it on &lt;a href=&#34;https://s.apache.org/airflow-docs/&#34;&gt;s.apache.org/airflow-docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For more information on Airflow Improvement Proposals (AIPs), visit the &lt;a href=&#34;https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals&#34;&gt;Airflow Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for dependent projects like provider packages, Docker image, Helm Chart, you&#39;ll find it in &lt;a href=&#34;https://airflow.apache.org/docs/&#34;&gt;the documentation index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing from PyPI&lt;/h2&gt; &#xA;&lt;p&gt;We publish Apache Airflow as &lt;code&gt;apache-airflow&lt;/code&gt; package in PyPI. Installing it however might be sometimes tricky because Airflow is a bit of both a library and application. Libraries usually keep their dependencies open, and applications usually pin them, but we should do neither and both simultaneously. We decided to keep our dependencies as open as possible (in &lt;code&gt;setup.py&lt;/code&gt;) so users can install different versions of libraries if needed. This means that &lt;code&gt;pip install apache-airflow&lt;/code&gt; will not work from time to time or will produce unusable Airflow installation.&lt;/p&gt; &#xA;&lt;p&gt;To have repeatable installation, however, we keep a set of &#34;known-to-be-working&#34; constraint files in the orphan &lt;code&gt;constraints-main&lt;/code&gt; and &lt;code&gt;constraints-2-0&lt;/code&gt; branches. We keep those &#34;known-to-be-working&#34; constraints files separately per major/minor Python version. You can use them as constraint files when installing Airflow from PyPI. Note that you have to specify correct Airflow tag/version/branch and Python versions in the URL.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installing just Airflow:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Only &lt;code&gt;pip&lt;/code&gt; installation is currently officially supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;While it is possible to install Airflow with tools like &lt;a href=&#34;https://python-poetry.org&#34;&gt;Poetry&lt;/a&gt; or &lt;a href=&#34;https://pypi.org/project/pip-tools&#34;&gt;pip-tools&lt;/a&gt;, they do not share the same workflow as &lt;code&gt;pip&lt;/code&gt; - especially when it comes to constraint vs. requirements management. Installing via &lt;code&gt;Poetry&lt;/code&gt; or &lt;code&gt;pip-tools&lt;/code&gt; is not currently supported.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to install Airflow using those tools, you should use the constraint files and convert them to the appropriate format and workflow that your tool requires.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#39;apache-airflow==2.3.1&#39; \&#xA; --constraint &#34;https://raw.githubusercontent.com/apache/airflow/constraints-2.3.1/constraints-3.7.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Installing with extras (i.e., postgres, google)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#39;apache-airflow[postgres,google]==2.3.1&#39; \&#xA; --constraint &#34;https://raw.githubusercontent.com/apache/airflow/constraints-2.3.1/constraints-3.7.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For information on installing provider packages, check &lt;a href=&#34;http://airflow.apache.org/docs/apache-airflow-providers/index.html&#34;&gt;providers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official source code&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow is an &lt;a href=&#34;https://www.apache.org&#34;&gt;Apache Software Foundation&lt;/a&gt; (ASF) project, and our official source code releases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://www.apache.org/legal/release-policy.html&#34;&gt;ASF Release Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can be downloaded from &lt;a href=&#34;https://downloads.apache.org/airflow&#34;&gt;the ASF Distribution Directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Are cryptographically signed by the release manager&lt;/li&gt; &#xA; &lt;li&gt;Are officially voted on by the PMC members during the &lt;a href=&#34;https://www.apache.org/legal/release-policy.html#release-approval&#34;&gt;Release Approval Process&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following the ASF rules, the source packages released must be sufficient for a user to build and test the release provided they have access to the appropriate platform and tools.&lt;/p&gt; &#xA;&lt;h2&gt;Convenience packages&lt;/h2&gt; &#xA;&lt;p&gt;There are other ways of installing and using Airflow. Those are &#34;convenience&#34; methods - they are not &#34;official releases&#34; as stated by the &lt;code&gt;ASF Release Policy&lt;/code&gt;, but they can be used by the users who do not want to build the software themselves.&lt;/p&gt; &#xA;&lt;p&gt;Those are - in the order of most common ways people install Airflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;PyPI releases&lt;/a&gt; to install Airflow using standard &lt;code&gt;pip&lt;/code&gt; tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;Docker Images&lt;/a&gt; to install airflow via &lt;code&gt;docker&lt;/code&gt; tool, use them in Kubernetes, Helm Charts, &lt;code&gt;docker-compose&lt;/code&gt;, &lt;code&gt;docker swarm&lt;/code&gt;, etc. You can read more about using, customising, and extending the images in the &lt;a href=&#34;https://airflow.apache.org/docs/docker-stack/index.html&#34;&gt;Latest docs&lt;/a&gt;, and learn details on the internals in the &lt;a href=&#34;https://github.com/apache/airflow/raw/main/IMAGES.rst&#34;&gt;IMAGES.rst&lt;/a&gt; document.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/airflow/tags&#34;&gt;Tags in GitHub&lt;/a&gt; to retrieve the git project sources that were used to generate official source packages via git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All those artifacts are not official releases, but they are prepared using officially released sources. Some of those artifacts are &#34;development&#34; or &#34;pre-release&#34; ones, and they are clearly marked as such following the ASF Policy.&lt;/p&gt; &#xA;&lt;h2&gt;User Interface&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DAGs&lt;/strong&gt;: Overview of all DAGs in your environment.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/dags.png&#34; alt=&#34;DAGs&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grid&lt;/strong&gt;: Grid representation of a DAG that spans across time.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/grid.png&#34; alt=&#34;Grid&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Graph&lt;/strong&gt;: Visualization of a DAG&#39;s dependencies and their current status for a specific run.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/graph.png&#34; alt=&#34;Graph&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Task Duration&lt;/strong&gt;: Total time spent on different tasks over time.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/duration.png&#34; alt=&#34;Task Duration&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gantt&lt;/strong&gt;: Duration and overlap of a DAG.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/gantt.png&#34; alt=&#34;Gantt&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;: Quick way to view source code of a DAG.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/code.png&#34; alt=&#34;Code&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Semantic versioning&lt;/h2&gt; &#xA;&lt;p&gt;As of Airflow 2.0.0, we support a strict &lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt; approach for all packages released.&lt;/p&gt; &#xA;&lt;p&gt;There are few specific rules that we agreed to that define details of versioning of the different packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow&lt;/strong&gt;: SemVer rules apply to core airflow only (excludes any changes to providers). Changing limits for versions of Airflow dependencies is not a breaking change on its own.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow Providers&lt;/strong&gt;: SemVer rules apply to changes in the particular provider&#39;s code only. SemVer MAJOR and MINOR versions for the packages are independent of the Airflow version. For example, &lt;code&gt;google 4.1.0&lt;/code&gt; and &lt;code&gt;amazon 3.0.3&lt;/code&gt; providers can happily be installed with &lt;code&gt;Airflow 2.1.2&lt;/code&gt;. If there are limits of cross-dependencies between providers and Airflow packages, they are present in providers as &lt;code&gt;install_requires&lt;/code&gt; limitations. We aim to keep backwards compatibility of providers with all previously released Airflow 2 versions but there will sometimes be breaking changes that might make some, or all providers, have minimum Airflow version specified. Change of that minimum supported Airflow version is a breaking change for provider because installing the new provider might automatically upgrade Airflow (which might be an undesired side effect of upgrading provider).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow Helm Chart&lt;/strong&gt;: SemVer rules apply to changes in the chart only. SemVer MAJOR and MINOR versions for the chart are independent from the Airflow version. We aim to keep backwards compatibility of the Helm Chart with all released Airflow 2 versions, but some new features might only work starting from specific Airflow releases. We might however limit the Helm Chart to depend on minimal Airflow version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow API clients&lt;/strong&gt;: SemVer MAJOR and MINOR versions follow MAJOR and MINOR versions of Airflow. The first MAJOR or MINOR X.Y.0 release of Airflow should always be followed by X.Y.0 release of all clients. The clients then can release their own PATCH releases with bugfixes, independently of Airflow PATCH releases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version Life Cycle&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow version life cycle:&lt;/p&gt; &#xA;&lt;!-- This table is automatically updated by pre-commit scripts/ci/pre_commit/pre_commit_supported_versions.py --&gt; &#xA;&lt;!-- Beginning of auto-generated table --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Current Patch/Minor&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;   &lt;th&gt;First Release&lt;/th&gt; &#xA;   &lt;th&gt;Limited Support&lt;/th&gt; &#xA;   &lt;th&gt;EOL/Terminated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2.3.1&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;   &lt;td&gt;Dec 17, 2020&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.10&lt;/td&gt; &#xA;   &lt;td&gt;1.10.15&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Dec 17, 2020&lt;/td&gt; &#xA;   &lt;td&gt;June 17, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.9&lt;/td&gt; &#xA;   &lt;td&gt;1.9.0&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.8&lt;/td&gt; &#xA;   &lt;td&gt;1.8.2&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.7&lt;/td&gt; &#xA;   &lt;td&gt;1.7.1.2&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Mar 28, 2016&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- End of auto-generated table --&gt; &#xA;&lt;p&gt;Limited support versions will be supported with security and critical bug fix only. EOL versions will not get any fixes nor support. We always recommend that all users run the latest available minor release for whatever major version is in use. We &lt;strong&gt;highly&lt;/strong&gt; recommend upgrading to the latest Airflow major release at the earliest convenient time and before the EOL date.&lt;/p&gt; &#xA;&lt;h2&gt;Support for Python and Kubernetes versions&lt;/h2&gt; &#xA;&lt;p&gt;As of Airflow 2.0, we agreed to certain rules we follow for Python and Kubernetes support. They are based on the official release schedule of Python and Kubernetes, nicely summarized in the &lt;a href=&#34;https://devguide.python.org/#status-of-python-branches&#34;&gt;Python Developer&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/setup/release/version-skew-policy/&#34;&gt;Kubernetes version skew policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;We drop support for Python and Kubernetes versions when they reach EOL. Except for kubernetes, a version stay supported by Airflow if two major cloud provider still provide support for it. We drop support for those EOL versions in main right after EOL date, and it is effectively removed when we release the first new MINOR (Or MAJOR if there is no new MINOR version) of Airflow. For example, for Python 3.7 it means that we will drop support in main right after 27.06.2023, and the first MAJOR or MINOR version of Airflow released after will not have it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &#34;oldest&#34; supported version of Python/Kubernetes is the default one until we decide to switch to later version. &#34;Default&#34; is only meaningful in terms of &#34;smoke tests&#34; in CI PRs, which are run using this default version and the default reference image available. Currently &lt;code&gt;apache/airflow:latest&lt;/code&gt; and &lt;code&gt;apache/airflow:2.3.1&lt;/code&gt; images are Python 3.7 images. This means that default reference image will become the default at the time when we start preparing for dropping 3.7 support which is few months before the end of life for Python 3.7.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We support a new version of Python/Kubernetes in main after they are officially released, as soon as we make them work in our CI pipeline (which might not be immediate due to dependencies catching up with new versions of Python mostly) we release new images/support in Airflow based on the working CI setup.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Base OS support for reference Airflow images&lt;/h2&gt; &#xA;&lt;p&gt;The Airflow Community provides conveniently packaged container images that are published whenever we publish an Apache Airflow release. Those images contain:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Base OS with necessary packages to install Airflow (stable Debian OS)&lt;/li&gt; &#xA; &lt;li&gt;Base Python installation in versions supported at the time of release for the MINOR version of Airflow released (so there could be different versions for 2.3 and 2.2 line for example)&lt;/li&gt; &#xA; &lt;li&gt;Libraries required to connect to suppoerted Databases (again the set of databases supported depends on the MINOR version of Airflow.&lt;/li&gt; &#xA; &lt;li&gt;Predefined set of popular providers (for details see the &lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Possibility of building your own, custom image where the user can choose their own set of providers and libraries (see &lt;a href=&#34;https://airflow.apache.org/docs/docker-stack/build.html&#34;&gt;Building the image&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In the future Airflow might also support a &#34;slim&#34; version without providers nor database clients installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The version of the base OS image is the stable version of Debian. Airflow supports using all currently active stable versions - as soon as all Airflow dependencies support building, and we set up the CI pipeline for building and testing the OS version. Approximately 6 months before the end-of-life of a previous stable version of the OS, Airflow switches the images released to use the latest supported version of the OS. For example since Debian Buster end-of-life is August 2022, Airflow switches the images in &lt;code&gt;main&lt;/code&gt; branch to use Debian Bullseye in February/March 2022. The version will be used in the next MINOR release after the switch happens. In case of the Bullseye switch - 2.3.0 version will use Bullseye. The images released in the previous MINOR version continue to use the version that all other releases for the MINOR version used.&lt;/p&gt; &#xA;&lt;p&gt;Users will continue to be able to build their images using stable Debian releases until the end of life and building and verifying of the images happens in our CI but no unit tests are executed using this image in the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Approach to dependencies of Airflow&lt;/h2&gt; &#xA;&lt;p&gt;Airflow has a lot of dependencies - direct and transitive, also Airflow is both - library and application, therefore our policies to dependencies has to include both - stability of installation of application, but also ability to install newer version of dependencies for those users who develop DAGs. We developed the approach where &lt;code&gt;constraints&lt;/code&gt; are used to make sure airflow can be installed in a repeatable way, while we do not limit our users to upgrade most of the dependencies. As a result we decided not to upper-bound version of Airflow dependencies by default, unless we have good reasons to believe upper-bounding them is needed because of importance of the dependency as well as risk it involves to upgrade specific dependency. We also upper-bound the dependencies that we know cause problems.&lt;/p&gt; &#xA;&lt;p&gt;The constraint mechanism of ours takes care about finding and upgrading all the non-upper bound dependencies automatically (providing that all the tests pass). Our &lt;code&gt;main&lt;/code&gt; build failures will indicate in case there are versions of dependencies that break our tests - indicating that we should either upper-bind them or that we should fix our code/tests to account for the upstream changes from those dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Whenever we upper-bound such a dependency, we should always comment why we are doing it - i.e. we should have a good reason why dependency is upper-bound. And we should also mention what is the condition to remove the binding.&lt;/p&gt; &#xA;&lt;h3&gt;Approach for dependencies for Airflow Core&lt;/h3&gt; &#xA;&lt;p&gt;Those &lt;code&gt;extras&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; dependencies are maintained in &lt;code&gt;setup.cfg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are few dependencies that we decided are important enough to upper-bound them by default, as they are known to follow predictable versioning scheme, and we know that new versions of those are very likely to bring breaking changes. We commit to regularly review and attempt to upgrade to the newer versions of the dependencies as they are released, but this is manual process.&lt;/p&gt; &#xA;&lt;p&gt;The important dependencies are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SQLAlchemy&lt;/code&gt;: upper-bound to specific MINOR version (SQLAlchemy is known to remove deprecations and introduce breaking changes especially that support for different Databases varies and changes at various speed (example: SQLAlchemy 1.4 broke MSSQL integration for Airflow)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alembic&lt;/code&gt;: it is important to handle our migrations in predictable and performant way. It is developed together with SQLAlchemy. Our experience with Alembic is that it very stable in MINOR version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Flask&lt;/code&gt;: We are using Flask as the back-bone of our web UI and API. We know major version of Flask are very likely to introduce breaking changes across those so limiting it to MAJOR version makes sense&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;werkzeug&lt;/code&gt;: the library is known to cause problems in new versions. It is tightly coupled with Flask libraries, and we should update them together&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;celery&lt;/code&gt;: Celery is crucial component of Airflow as it used for CeleryExecutor (and similar). Celery &lt;a href=&#34;https://docs.celeryq.dev/en/stable/contributing.html?highlight=semver#versions&#34;&gt;follows SemVer&lt;/a&gt;, so we should upper-bound it to the next MAJOR version. Also when we bump the upper version of the library, we should make sure Celery Provider minimum Airflow version is updated).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubernetes&lt;/code&gt;: Kubernetes is a crucial component of Airflow as it is used for the KubernetesExecutor (and similar). Kubernetes Python library &lt;a href=&#34;https://github.com/kubernetes-client/python#compatibility&#34;&gt;follows SemVer&lt;/a&gt;, so we should upper-bound it to the next MAJOR version. Also when we bump the upper version of the library, we should make sure Kubernetes Provider minimum Airflow version is updated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Approach for dependencies in Airflow Providers and extras&lt;/h3&gt; &#xA;&lt;p&gt;Those &lt;code&gt;extras&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; dependencies are maintained in &lt;code&gt;setup.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, we should not upper-bound dependencies for providers, however each provider&#39;s maintainer might decide to add additional limits (and justify them with comment)&lt;/p&gt; &#xA;&lt;h2&gt;Support for providers&lt;/h2&gt; &#xA;&lt;p&gt;Providers released by the community have limitation of a minimum supported version of Airflow. The minimum version of Airflow is the &lt;code&gt;MINOR&lt;/code&gt; version (2.1, 2.2 etc.) indicating that the providers might use features that appeared in this release. The default support timespan for the minimum version of Airflow (there could be justified exceptions) is that we increase the minimum Airflow version, when 12 months passed since the first release for the MINOR version of Airflow.&lt;/p&gt; &#xA;&lt;p&gt;For example this means that by default we upgrade the minimum version of Airflow supported by providers to 2.2.0 in the first Provider&#39;s release after 21st of May 2022 (21st of May 2021 is the date when the first &lt;code&gt;PATCHLEVEL&lt;/code&gt; of 2.1 (2.1.0) has been released.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to help build Apache Airflow? Check out our &lt;a href=&#34;https://github.com/apache/airflow/raw/main/CONTRIBUTING.rst&#34;&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Official Docker (container) images for Apache Airflow are described in &lt;a href=&#34;https://github.com/apache/airflow/raw/main/IMAGES.rst&#34;&gt;IMAGES.rst&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who uses Apache Airflow?&lt;/h2&gt; &#xA;&lt;p&gt;More than 400 organizations are using Apache Airflow &lt;a href=&#34;https://github.com/apache/airflow/raw/main/INTHEWILD.md&#34;&gt;in the wild&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who Maintains Apache Airflow?&lt;/h2&gt; &#xA;&lt;p&gt;Airflow is the work of the &lt;a href=&#34;https://github.com/apache/airflow/graphs/contributors&#34;&gt;community&lt;/a&gt;, but the &lt;a href=&#34;https://people.apache.org/committers-by-project.html#airflow&#34;&gt;core committers/maintainers&lt;/a&gt; are responsible for reviewing and merging PRs as well as steering conversations around new feature requests. If you would like to become a maintainer, please review the Apache Airflow &lt;a href=&#34;https://github.com/apache/airflow/raw/main/COMMITTERS.rst#guidelines-to-become-an-airflow-committer&#34;&gt;committer requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Can I use the Apache Airflow logo in my presentation?&lt;/h2&gt; &#xA;&lt;p&gt;Yes! Be sure to abide by the Apache Foundation &lt;a href=&#34;https://www.apache.org/foundation/marks/#books&#34;&gt;trademark policies&lt;/a&gt; and the Apache Airflow &lt;a href=&#34;https://cwiki.apache.org/confluence/display/AIRFLOW/Brandbook&#34;&gt;Brandbook&lt;/a&gt;. The most up to date logos are found in &lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/logos&#34;&gt;this repo&lt;/a&gt; and on the Apache Software Foundation &lt;a href=&#34;https://www.apache.org/logos/about.html&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Airflow merchandise&lt;/h2&gt; &#xA;&lt;p&gt;If you would love to have Apache Airflow stickers, t-shirt, etc. then check out &lt;a href=&#34;https://www.redbubble.com/i/sticker/Apache-Airflow-by-comdev/40497530.EJUG5&#34;&gt;Redbubble Shop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.apache.org/airflow-slack&#34;&gt;Chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The CI infrastructure for Apache Airflow has been sponsored by:&lt;/p&gt; &#xA;&lt;!-- Ordered by most recently &#34;funded&#34; --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://astronomer.io&#34;&gt;&lt;img src=&#34;https://assets2.astronomer.io/logos/logoForLIGHTbackground.png&#34; alt=&#34;astronomer.io&#34; width=&#34;250px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/opensource/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/integration-logos/aws/AWS-Cloud-alt_light-bg@4x.png&#34; alt=&#34;AWS OpenSource&#34; width=&#34;130px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hpcaitech/ColossalAI</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/hpcaitech/ColossalAI</id>
    <link href="https://github.com/hpcaitech/ColossalAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Colossal-AI: A Unified Deep Learning System for Big Model Era&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Colossal-AI&lt;/h1&gt; &#xA;&lt;div id=&#34;top&#34; align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.colossalai.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/Colossal-AI_logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;An integrated large-scale model training system with efficient parallelization techniques.&lt;/p&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;https://arxiv.org/abs/2110.14883&#34;&gt; Paper &lt;/a&gt; | &lt;a href=&#34;https://www.colossalai.org/&#34;&gt; Documentation &lt;/a&gt; | &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI-Examples&#34;&gt; Examples &lt;/a&gt; | &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/discussions&#34;&gt; Forum &lt;/a&gt; | &lt;a href=&#34;https://medium.com/@hpcaitech&#34;&gt; Blog &lt;/a&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/hpcaitech/ColossalAI/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colossalai.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/colossalai/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/hpcaitech/colossalai&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/hpcaitech/colossalai/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/hpcai-tech&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97HuggingFace-Join-yellow&#34; alt=&#34;HuggingFace badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/colossalaiworkspace/shared_invite/zt-z7b26eeb-CBp7jouvu~r0~lcFzX832w&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-join-blueviolet?logo=slack&amp;amp;amp&#34; alt=&#34;slack badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/WeChat.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1-%E5%8A%A0%E5%85%A5-green?logo=wechat&amp;amp;amp&#34; alt=&#34;WeChat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/README-zh-Hans.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; |&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Why-Colossal-AI&#34;&gt;Why Colossal-AI&lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Features&#34;&gt;Features&lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Parallel-Demo&#34;&gt;Parallel Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#ViT&#34;&gt;ViT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-3&#34;&gt;GPT-3&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-2&#34;&gt;GPT-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#BERT&#34;&gt;BERT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PaLM&#34;&gt;PaLM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Single-GPU-Demo&#34;&gt;Single GPU Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-2-Single&#34;&gt;GPT-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PaLM-Single&#34;&gt;PaLM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PyPI&#34;&gt;PyPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Install-From-Source&#34;&gt;Install From Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Use-Docker&#34;&gt;Use Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Quick-View&#34;&gt;Quick View&lt;/a&gt;&lt;/li&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Start-Distributed-Training-in-Lines&#34;&gt;Start Distributed Training in Lines&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Write-a-Simple-2D-Parallel-Model&#34;&gt;Write a Simple 2D Parallel Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Cite-Us&#34;&gt;Cite Us&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why Colossal-AI&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://youtu.be/KnXSfjqkKN0&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/JamesDemmel_Colossal-AI.png&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;Prof. James Demmel (UC Berkeley): Colossal-AI makes distributed training efficient, easy and scalable.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Colossal-AI provides a collection of parallel training components for you. We aim to support you to write your distributed deep learning models just like how you write your model on your laptop. We provide user-friendly tools to kickstart distributed training in a few lines.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Parallelism strategies&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;Pipeline Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;1D, &lt;a href=&#34;https://arxiv.org/abs/2104.05343&#34;&gt;2D&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2105.14500&#34;&gt;2.5D&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2105.14450&#34;&gt;3D&lt;/a&gt; Tensor Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2105.13120&#34;&gt;Sequence Parallelism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.02054&#34;&gt;Zero Redundancy Optimizer (ZeRO)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Heterogeneous Memory Menagement&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2108.05818&#34;&gt;PatrickStar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Friendly Usage&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Parallelism based on configuration file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Parallel Demo&lt;/h2&gt; &#xA;&lt;h3&gt;ViT&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/ViT.png&#34; width=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;14x larger batch size, and 5x faster training for Tensor Parallelism = 64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GPT-3&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT3.png&#34; width=&#34;700/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save 50% GPU resources, and 10.7% acceleration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GPT-2&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT2.png&#34; width=&#34;800/&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;11x lower GPU memory consumption, and superlinear scaling efficiency with Tensor Parallelism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/(updated)GPT-2.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;24x larger model size on the same hardware&lt;/li&gt; &#xA; &lt;li&gt;over 3x acceleration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BERT&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/BERT.png&#34; width=&#34;800/&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2x faster training, or 50% longer sequence length&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PaLM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hpcaitech/PaLM-colossalai&#34;&gt;PaLM-colossalai&lt;/a&gt;: Scalable implementation of Google&#39;s Pathways Language Model (&lt;a href=&#34;https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html&#34;&gt;PaLM&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://www.colossalai.org/&#34;&gt;documentation and tutorials&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Single GPU Demo&lt;/h2&gt; &#xA;&lt;h3&gt;GPT-2&lt;/h3&gt; &#xA;&lt;p id=&#34;GPT-2-Single&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT2-GPU1.png&#34; width=&#34;450/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;20x larger model size on the same hardware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PaLM&lt;/h3&gt; &#xA;&lt;p id=&#34;PaLM-Single&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/PaLM-GPU1.png&#34; width=&#34;450/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;34x larger model size on the same hardware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Download From Official Releases&lt;/h3&gt; &#xA;&lt;p&gt;You can visit the &lt;a href=&#34;https://www.colossalai.org/download&#34;&gt;Download&lt;/a&gt; page to download Colossal-AI with pre-built CUDA extensions.&lt;/p&gt; &#xA;&lt;h3&gt;Download From Source&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The version of Colossal-AI will be in line with the main branch of the repository. Feel free to raise an issue if you encounter any problem. :)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/hpcaitech/ColossalAI.git&#xA;cd ColossalAI&#xA;&#xA;# install dependency&#xA;pip install -r requirements/requirements.txt&#xA;&#xA;# install colossalai&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want to install and enable CUDA kernel fusion (compulsory installation when using fused optimizer):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;NO_CUDA_EXT=1 pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Use Docker&lt;/h2&gt; &#xA;&lt;p&gt;Run the following command to build a docker image from Dockerfile provided.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Building Colossal-AI from scratch requires GPU support, you need to use Nvidia Docker Runtime as the default when doing &lt;code&gt;docker build&lt;/code&gt;. More details can be found &lt;a href=&#34;https://stackoverflow.com/questions/59691207/docker-build-with-nvidia-runtime&#34;&gt;here&lt;/a&gt;. We recommend you install Colossal-AI from our &lt;a href=&#34;https://www.colossalai.org&#34;&gt;project page&lt;/a&gt; directly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ColossalAI&#xA;docker build -t colossalai ./docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following command to start the docker container in interactive mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -ti --gpus all --rm --ipc=host colossalai bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the Colossal-AI community on &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/discussions&#34;&gt;Forum&lt;/a&gt;, &lt;a href=&#34;https://join.slack.com/t/colossalaiworkspace/shared_invite/zt-z7b26eeb-CBp7jouvu~r0~lcFzX832w&#34;&gt;Slack&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/WeChat.png&#34; title=&#34;qrcode&#34;&gt;WeChat&lt;/a&gt; to share your suggestions, feedback, and questions with our engineering team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute to this project, please follow the guideline in &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks so much to all of our amazing contributors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/graphs/contributors&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/contributor_avatar.png&#34; width=&#34;800px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The order of contributor avatars is randomly shuffled.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Quick View&lt;/h2&gt; &#xA;&lt;h3&gt;Start Distributed Training in Lines&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;parallel = dict(&#xA;    pipeline=2,&#xA;    tensor=dict(mode=&#39;2.5d&#39;, depth = 1, size=4)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Heterogeneous Training in Lines&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zero = dict(&#xA;    model_config=dict(&#xA;        tensor_placement_policy=&#39;auto&#39;,&#xA;        shard_strategy=TensorShardStrategy(),&#xA;        reuse_fp16_shard=True&#xA;    ),&#xA;    optimizer_config=dict(initial_scale=2**5, gpu_margin_mem_ratio=0.2)&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Cite Us&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{bian2021colossal,&#xA;  title={Colossal-AI: A Unified Deep Learning System For Large-Scale Parallel Training},&#xA;  author={Bian, Zhengda and Liu, Hongxin and Wang, Boxiang and Huang, Haichen and Li, Yongbin and Wang, Chuanrui and Cui, Fan and You, Yang},&#xA;  journal={arXiv preprint arXiv:2110.14883},&#xA;  year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ml-tooling/best-of-ml-python</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/ml-tooling/best-of-ml-python</id>
    <link href="https://github.com/ml-tooling/best-of-ml-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üèÜ A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Best-of Machine Learning with Python &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;üèÜ&amp;nbsp; A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of&#34; title=&#34;Best-of-badge&#34;&gt;&lt;img src=&#34;http://bit.ly/3o3EHNN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contents&#34; title=&#34;Project Count&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/projects-900-blue.svg?color=5ac4bf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contribution&#34; title=&#34;Contributions are welcome&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/releases&#34; title=&#34;Best-of Updates&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/ml-tooling/best-of-ml-python?color=green&amp;amp;label=updated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34; title=&#34;Subscribe to newsletter&#34;&gt;&lt;img src=&#34;http://bit.ly/2Md9rxM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/mltooling&#34; title=&#34;Follow on Twitter&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mltooling.svg?style=social&amp;amp;label=Follow&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This curated list contains 900 awesome open-source projects with a total of 3.4M stars grouped into 34 categories. All projects are ranked by a project-quality score, which is calculated based on various metrics automatically collected from GitHub and different package managers. If you like to add or update projects, feel free to open an &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue&lt;/a&gt;, submit a &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/pulls&#34;&gt;pull request&lt;/a&gt;, or directly edit the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt;. Contributions are very welcome!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üßô‚Äç‚ôÇÔ∏è&amp;nbsp; Discover other &lt;a href=&#34;https://best-of.org&#34;&gt;best-of lists&lt;/a&gt; or create &lt;a href=&#34;https://github.com/best-of-lists/best-of/raw/main/create-best-of-list.md&#34;&gt;your own&lt;/a&gt;.&lt;br&gt; üì´&amp;nbsp; Subscribe to our &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34;&gt;newsletter&lt;/a&gt; for updates and trending projects. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#machine-learning-frameworks&#34;&gt;Machine Learning Frameworks&lt;/a&gt; &lt;em&gt;56 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-visualization&#34;&gt;Data Visualization&lt;/a&gt; &lt;em&gt;51 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#text-data--nlp&#34;&gt;Text Data &amp;amp; NLP&lt;/a&gt; &lt;em&gt;96 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#image-data&#34;&gt;Image Data&lt;/a&gt; &lt;em&gt;60 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#graph-data&#34;&gt;Graph Data&lt;/a&gt; &lt;em&gt;36 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#audio-data&#34;&gt;Audio Data&lt;/a&gt; &lt;em&gt;28 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#geospatial-data&#34;&gt;Geospatial Data&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#financial-data&#34;&gt;Financial Data&lt;/a&gt; &lt;em&gt;25 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#time-series-data&#34;&gt;Time Series Data&lt;/a&gt; &lt;em&gt;26 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#medical-data&#34;&gt;Medical Data&lt;/a&gt; &lt;em&gt;19 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tabular-data&#34;&gt;Tabular Data&lt;/a&gt; &lt;em&gt;5 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#optical-character-recognition&#34;&gt;Optical Character Recognition&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-containers--structures&#34;&gt;Data Containers &amp;amp; Structures&lt;/a&gt; &lt;em&gt;0 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-loading--extraction&#34;&gt;Data Loading &amp;amp; Extraction&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#web-scraping--crawling&#34;&gt;Web Scraping &amp;amp; Crawling&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-pipelines--streaming&#34;&gt;Data Pipelines &amp;amp; Streaming&lt;/a&gt; &lt;em&gt;43 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#distributed-machine-learning&#34;&gt;Distributed Machine Learning&lt;/a&gt; &lt;em&gt;33 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#hyperparameter-optimization--automl&#34;&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/a&gt; &lt;em&gt;47 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#reinforcement-learning&#34;&gt;Reinforcement Learning&lt;/a&gt; &lt;em&gt;23 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#recommender-systems&#34;&gt;Recommender Systems&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#privacy-machine-learning&#34;&gt;Privacy Machine Learning&lt;/a&gt; &lt;em&gt;6 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#workflow--experiment-tracking&#34;&gt;Workflow &amp;amp; Experiment Tracking&lt;/a&gt; &lt;em&gt;39 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-serialization--deployment&#34;&gt;Model Serialization &amp;amp; Deployment&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-interpretability&#34;&gt;Model Interpretability&lt;/a&gt; &lt;em&gt;52 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#vector-similarity-search-ann&#34;&gt;Vector Similarity Search (ANN)&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#probabilistics--statistics&#34;&gt;Probabilistics &amp;amp; Statistics&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#adversarial-robustness&#34;&gt;Adversarial Robustness&lt;/a&gt; &lt;em&gt;9 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#gpu-utilities&#34;&gt;GPU Utilities&lt;/a&gt; &lt;em&gt;18 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tensorflow-utilities&#34;&gt;Tensorflow Utilities&lt;/a&gt; &lt;em&gt;15 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#jax-utilities&#34;&gt;Jax Utilities&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#sklearn-utilities&#34;&gt;Sklearn Utilities&lt;/a&gt; &lt;em&gt;17 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#pytorch-utilities&#34;&gt;Pytorch Utilities&lt;/a&gt; &lt;em&gt;32 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#database-clients&#34;&gt;Database Clients&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#others&#34;&gt;Others&lt;/a&gt; &lt;em&gt;61 projects&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü•áü•àü•â&amp;nbsp; Combined project-quality score&lt;/li&gt; &#xA; &lt;li&gt;‚≠êÔ∏è&amp;nbsp; Star count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;üê£&amp;nbsp; New project &lt;em&gt;(less than 6 months old)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí§&amp;nbsp; Inactive project &lt;em&gt;(6 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;üíÄ&amp;nbsp; Dead project &lt;em&gt;(12 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìàüìâ&amp;nbsp; Project is trending up or down&lt;/li&gt; &#xA; &lt;li&gt;‚ûï&amp;nbsp; Project was recently added&lt;/li&gt; &#xA; &lt;li&gt;‚ùóÔ∏è&amp;nbsp; Warning &lt;em&gt;(e.g. missing/risky license)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª&amp;nbsp; Contributors count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;üîÄ&amp;nbsp; Fork count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;üìã&amp;nbsp; Issue count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;‚è±Ô∏è&amp;nbsp; Last update timestamp on package manager&lt;/li&gt; &#xA; &lt;li&gt;üì•&amp;nbsp; Download count from package manager&lt;/li&gt; &#xA; &lt;li&gt;üì¶&amp;nbsp; Number of dependent projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Tensorflow related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Sklearn related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PyTorch related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; MxNet related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Apache Spark related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jupyter related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PaddlePaddle related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Pandas related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jax related project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Machine Learning Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose machine learning and deep learning frameworks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;Tensorflow&lt;/a&gt;&lt;/b&gt; (ü•á55 ¬∑ ‚≠ê 170K) - An Open Source Machine Learning Framework for Everyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4K ¬∑ üîÄ 87K ¬∑ üì¶ 200K ¬∑ üìã 35K - 6% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow&#34;&gt;PyPi&lt;/a&gt; (üì• 17M / month ¬∑ üì¶ 14K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow&#34;&gt;Conda&lt;/a&gt; (üì• 3.3M ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/tensorflow/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (üì• 66M ¬∑ ‚≠ê 2K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;scikit-learn&lt;/a&gt;&lt;/b&gt; (ü•á51 ¬∑ ‚≠ê 50K) - scikit-learn: machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2.6K ¬∑ üîÄ 23K ¬∑ üì• 800 ¬∑ üì¶ 350K ¬∑ üìã 10K - 22% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn/scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-learn&#34;&gt;PyPi&lt;/a&gt; (üì• 34M / month ¬∑ üì¶ 25K ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-learn&#34;&gt;Conda&lt;/a&gt; (üì• 13M ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;PyTorch&lt;/a&gt;&lt;/b&gt; (ü•á49 ¬∑ ‚≠ê 56K) - Tensors and Dynamic neural networks in Python with strong GPU.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3.3K ¬∑ üîÄ 16K ¬∑ üì• 3.5K ¬∑ üìã 28K - 35% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch&#34;&gt;PyPi&lt;/a&gt; (üì• 9.3M / month ¬∑ üì¶ 7K ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/pytorch&#34;&gt;Conda&lt;/a&gt; (üì• 17M ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;Keras&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 55K) - Deep Learning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.1K ¬∑ üîÄ 19K ¬∑ üìã 11K - 2% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras&#34;&gt;PyPi&lt;/a&gt; (üì• 10M / month ¬∑ üì¶ 300 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras&#34;&gt;Conda&lt;/a&gt; (üì• 2.3M ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;XGBoost&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 23K) - Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 560 ¬∑ üîÄ 8.4K ¬∑ üì• 4.2K ¬∑ üì¶ 31K ¬∑ üìã 4.4K - 6% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xgboost&#34;&gt;PyPi&lt;/a&gt; (üì• 9.9M / month ¬∑ üì¶ 1.3K ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/xgboost&#34;&gt;Conda&lt;/a&gt; (üì• 2.6M ¬∑ ‚è±Ô∏è 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;jax&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 18K) - Composable transformations of Python+NumPy programs: differentiate,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 400 ¬∑ üîÄ 1.6K ¬∑ üì¶ 4.4K ¬∑ üìã 3.3K - 32% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jax&#34;&gt;PyPi&lt;/a&gt; (üì• 440K / month ¬∑ üì¶ 300 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jaxlib&#34;&gt;Conda&lt;/a&gt; (üì• 320K ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jaxlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;pytorch-lightning&lt;/a&gt;&lt;/b&gt; (ü•à43 ¬∑ ‚≠ê 19K) - The lightweight PyTorch wrapper for high-performance.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 680 ¬∑ üîÄ 2.3K ¬∑ üì• 6.8K ¬∑ üì¶ 9.1K ¬∑ üìã 5K - 9% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-lightning&#34;&gt;PyPi&lt;/a&gt; (üì• 3.8M / month ¬∑ üì¶ 360 ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-lightning&#34;&gt;Conda&lt;/a&gt; (üì• 440K ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;StatsModels&lt;/a&gt;&lt;/b&gt; (ü•à43 ¬∑ ‚≠ê 7.4K) - Statsmodels: statistical modeling and econometrics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 370 ¬∑ üîÄ 2.4K ¬∑ üì• 26 ¬∑ üì¶ 64K ¬∑ üìã 4.8K - 47% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statsmodels/statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsmodels&#34;&gt;PyPi&lt;/a&gt; (üì• 11M / month ¬∑ üì¶ 4.5K ¬∑ ‚è±Ô∏è 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsmodels&#34;&gt;Conda&lt;/a&gt; (üì• 6.2M ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;PySpark&lt;/a&gt;&lt;/b&gt; (ü•à42 ¬∑ ‚≠ê 33K) - Apache Spark Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2.7K ¬∑ üîÄ 26K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/spark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyspark&#34;&gt;PyPi&lt;/a&gt; (üì• 21M / month ¬∑ üì¶ 830 ¬∑ ‚è±Ô∏è 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyspark&#34;&gt;Conda&lt;/a&gt; (üì• 1.6M ¬∑ ‚è±Ô∏è 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;LightGBM&lt;/a&gt;&lt;/b&gt; (ü•à42 ¬∑ ‚≠ê 14K) - A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 260 ¬∑ üîÄ 3.5K ¬∑ üì• 150K ¬∑ üì¶ 13K ¬∑ üìã 2.7K - 8% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/LightGBM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightgbm&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1M / month ¬∑ üì¶ 630 ¬∑ ‚è±Ô∏è 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightgbm&#34;&gt;Conda&lt;/a&gt; (üì• 1M ¬∑ ‚è±Ô∏è 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt;&lt;/b&gt; (ü•à41 ¬∑ ‚≠ê 18K) - PArallel Distributed Deep LEarning: Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 740 ¬∑ üîÄ 4.5K ¬∑ üì• 15K ¬∑ üì¶ 120 ¬∑ üìã 16K - 18% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/Paddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlepaddle&#34;&gt;PyPi&lt;/a&gt; (üì• 99K / month ¬∑ üì¶ 48 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlepaddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;MXNet&lt;/a&gt;&lt;/b&gt; (ü•à40 ¬∑ ‚≠ê 20K) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 970 ¬∑ üîÄ 6.9K ¬∑ üì• 25K ¬∑ üìã 9.7K - 20% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/incubator-mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mxnet&#34;&gt;PyPi&lt;/a&gt; (üì• 330K / month ¬∑ üì¶ 280 ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/mxnet&#34;&gt;Conda&lt;/a&gt; (üì• 7.5K ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;Catboost&lt;/a&gt;&lt;/b&gt; (ü•à40 ¬∑ ‚≠ê 6.5K) - A fast, scalable, high performance Gradient Boosting on Decision.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 990 ¬∑ üîÄ 1K ¬∑ üì• 80K ¬∑ üìã 1.8K - 21% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catboost/catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catboost&#34;&gt;PyPi&lt;/a&gt; (üì• 2.6M / month ¬∑ üì¶ 230 ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/catboost&#34;&gt;Conda&lt;/a&gt; (üì• 1M ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;Fastai&lt;/a&gt;&lt;/b&gt; (ü•à39 ¬∑ ‚≠ê 22K) - The fastai deep learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 610 ¬∑ üîÄ 7.2K ¬∑ üìã 1.6K - 7% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastai/fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastai&#34;&gt;PyPi&lt;/a&gt; (üì• 280K / month ¬∑ üì¶ 300 ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt;&lt;/b&gt; (ü•à38 ¬∑ ‚≠ê 15K) - Cloud-native neural search framework for kind of data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 1.9K ¬∑ üì¶ 280 ¬∑ üìã 1.5K - 4% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jina-ai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jina&#34;&gt;PyPi&lt;/a&gt; (üì• 60K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jina-core&#34;&gt;Conda&lt;/a&gt; (üì• 5.2K ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jina-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jinaai/jina&#34;&gt;Docker Hub&lt;/a&gt; (üì• 1.1M ¬∑ ‚≠ê 7 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull jinaai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;Theano&lt;/a&gt;&lt;/b&gt; (ü•à38 ¬∑ ‚≠ê 9.6K) - Theano was a Python library that allows you to define, optimize, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 380 ¬∑ üîÄ 2.5K ¬∑ üì¶ 13K ¬∑ üìã 2.8K - 24% open ¬∑ ‚è±Ô∏è 23.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Theano/Theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/theano&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 2.8K ¬∑ ‚è±Ô∏è 27.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/theano&#34;&gt;Conda&lt;/a&gt; (üì• 2M ¬∑ ‚è±Ô∏è 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;Thinc&lt;/a&gt;&lt;/b&gt; (ü•à37 ¬∑ ‚≠ê 2.5K) - A refreshing functional take on deep learning, compatible with your favorite.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 51 ¬∑ üîÄ 250 ¬∑ üì¶ 21K ¬∑ üìã 120 - 16% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thinc&#34;&gt;PyPi&lt;/a&gt; (üì• 5.7M / month ¬∑ üì¶ 620 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/thinc&#34;&gt;Conda&lt;/a&gt; (üì• 2M ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;PyFlink&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 19K) - Apache Flink Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.5K ¬∑ üîÄ 11K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-flink&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;Chainer&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 5.7K) - A flexible framework of neural networks for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 320 ¬∑ üîÄ 1.4K ¬∑ üì¶ 2.6K ¬∑ üìã 2K - 0% open ¬∑ ‚è±Ô∏è 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chainer/chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chainer&#34;&gt;PyPi&lt;/a&gt; (üì• 17K / month ¬∑ üì¶ 400 ¬∑ ‚è±Ô∏è 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/chainer&#34;&gt;Conda&lt;/a&gt; (üì• 7.6K ¬∑ ‚è±Ô∏è 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;Flax&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 3K) - Flax is a neural network library for JAX that is designed for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 340 ¬∑ üì• 42 ¬∑ üì¶ 960 ¬∑ üìã 520 - 22% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flax&#34;&gt;PyPi&lt;/a&gt; (üì• 180K / month ¬∑ üì¶ 69 ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/flax&#34;&gt;Conda&lt;/a&gt; (üì• 4.1K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;Vowpal Wabbit&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 8K) - Vowpal Wabbit is a machine learning system which pushes the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 320 ¬∑ üîÄ 1.8K ¬∑ üìã 1.2K - 11% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/VowpalWabbit/vowpal_wabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vowpalwabbit&#34;&gt;PyPi&lt;/a&gt; (üì• 58K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vowpalwabbit&#34;&gt;Conda&lt;/a&gt; (üì• 60K ¬∑ ‚è±Ô∏è 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;Ludwig&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 8.3K) - Data-centric declarative deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 980 ¬∑ üì¶ 120 ¬∑ üìã 740 - 27% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ludwig-ai/ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ludwig&#34;&gt;PyPi&lt;/a&gt; (üì• 3.7K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;tensorflow-upstream&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 590 ¬∑ üìâ) - TensorFlow ROCm port. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4K ¬∑ üîÄ 68 ¬∑ üì• 20 ¬∑ üìã 330 - 17% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-rocm&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-rocm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;Turi Create&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 11K) - Turi Create simplifies the development of custom machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 85 ¬∑ üîÄ 1.1K ¬∑ üì• 6.1K ¬∑ üì¶ 310 ¬∑ üìã 1.8K - 27% open ¬∑ ‚è±Ô∏è 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/turicreate&#34;&gt;PyPi&lt;/a&gt; (üì• 31K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 30.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;tensorpack&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 6.2K) - A Neural Net Training Interface on TensorFlow, with focus.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 58 ¬∑ üîÄ 1.8K ¬∑ üì• 130 ¬∑ üì¶ 1K ¬∑ üìã 1.3K - 0% open ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorpack/tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorpack&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 46 ¬∑ ‚è±Ô∏è 22.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorpack&#34;&gt;Conda&lt;/a&gt; (üì• 1.2K ¬∑ ‚è±Ô∏è 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;mlpack&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 4K) - mlpack: a scalable C++ machine learning library --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 290 ¬∑ üîÄ 1.4K ¬∑ üìã 1.5K - 6% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlpack/mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlpack&#34;&gt;PyPi&lt;/a&gt; (üì• 260 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlpack&#34;&gt;Conda&lt;/a&gt; (üì• 100K ¬∑ ‚è±Ô∏è 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;Ignite&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 4K ¬∑ üìâ) - High-level library to help with training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 540 ¬∑ üìã 1.1K - 12% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-ignite&#34;&gt;PyPi&lt;/a&gt; (üì• 170K / month ¬∑ üì¶ 81 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/ignite&#34;&gt;Conda&lt;/a&gt; (üì• 88K ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;Sonnet&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 9.3K) - TensorFlow-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 53 ¬∑ üîÄ 1.3K ¬∑ üì¶ 840 ¬∑ üìã 180 - 13% open ¬∑ ‚è±Ô∏è 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-sonnet&#34;&gt;PyPi&lt;/a&gt; (üì• 22K / month ¬∑ üì¶ 52 ¬∑ ‚è±Ô∏è 27.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sonnet&#34;&gt;Conda&lt;/a&gt; (üì• 14K ¬∑ ‚è±Ô∏è 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;einops&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 5.1K) - Deep learning operations reinvented (for pytorch, tensorflow, jax and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 220 ¬∑ üì¶ 2.8K ¬∑ üìã 110 - 29% open ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arogozhnikov/einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/einops&#34;&gt;PyPi&lt;/a&gt; (üì• 3.2M / month ¬∑ üì¶ 200 ¬∑ ‚è±Ô∏è 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/einops&#34;&gt;Conda&lt;/a&gt; (üì• 16K ¬∑ ‚è±Ô∏è 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;dyNET&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 3.3K) - DyNet: The Dynamic Neural Network Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 160 ¬∑ üîÄ 700 ¬∑ üì• 5.8K ¬∑ üì¶ 210 ¬∑ üìã 920 - 28% open ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/clab/dynet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dyNET&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 28 ¬∑ ‚è±Ô∏è 21.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dyNET&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;Haiku&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 1.9K) - JAX-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 61 ¬∑ üîÄ 150 ¬∑ üì¶ 440 ¬∑ üìã 160 - 22% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-haiku&#34;&gt;PyPi&lt;/a&gt; (üì• 96K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-haiku&#34;&gt;Conda&lt;/a&gt; (üì• 2.7K ¬∑ ‚è±Ô∏è 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;ktrain&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 1K) - ktrain is a Python library that makes deep learning and AI more.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 240 ¬∑ üì¶ 290 ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amaiya/ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ktrain&#34;&gt;PyPi&lt;/a&gt; (üì• 27K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;Neural Network Libraries&lt;/a&gt;&lt;/b&gt; (ü•â30 ¬∑ ‚≠ê 2.5K) - Neural Network Libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 66 ¬∑ üîÄ 320 ¬∑ üì• 540 ¬∑ üìã 80 - 41% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sony/nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnabla&#34;&gt;PyPi&lt;/a&gt; (üì• 3.6K / month ¬∑ üì¶ 53 ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;skorch&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 4.5K) - A scikit-learn compatible neural network library that wraps.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 300 ¬∑ üì¶ 510 ¬∑ üìã 440 - 11% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/skorch-dev/skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/skorch&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 33 ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/skorch&#34;&gt;Conda&lt;/a&gt; (üì• 550K ¬∑ ‚è±Ô∏è 30.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;Neural Tangents&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.8K) - Fast and Easy Infinite Neural Networks in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 200 ¬∑ üì• 230 ¬∑ üì¶ 36 ¬∑ üìã 120 - 35% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-tangents&#34;&gt;PyPi&lt;/a&gt; (üì• 2.6K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;mace&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 4.6K) - MACE is a deep learning inference framework optimized for mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 63 ¬∑ üîÄ 800 ¬∑ üì• 1.4K ¬∑ üìã 670 - 7% open ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/XiaoMi/mace&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;fklearn&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.4K) - fklearn: Functional Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 43 ¬∑ üîÄ 160 ¬∑ üì¶ 12 ¬∑ üìã 45 - 51% open ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nubank/fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fklearn&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1K / month ¬∑ ‚è±Ô∏è 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;Towhee&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 500) - A framework that provides a simple API for developing ML-driven data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 89 ¬∑ üì• 17 ¬∑ üìã 340 - 13% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/towhee-io/towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/towhee&#34;&gt;PyPi&lt;/a&gt; (üì• 450 / month ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;Objax&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 690) - Objax is a machine learning framework that provides an Object.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 59 ¬∑ üì¶ 21 ¬∑ üìã 100 - 43% open ¬∑ ‚è±Ô∏è 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/objax&#34;&gt;PyPi&lt;/a&gt; (üì• 260 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;NeoML&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 680) - Machine learning framework for both deep learning and traditional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 31 ¬∑ üîÄ 110 ¬∑ üìã 71 - 38% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/neoml-lib/neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neoml&#34;&gt;PyPi&lt;/a&gt; (üì• 320 / month ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;ThunderSVM&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.4K) - ThunderSVM: A Fast SVM Library on GPUs and CPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 34 ¬∑ üîÄ 190 ¬∑ üì• 2.4K ¬∑ üìã 210 - 29% open ¬∑ ‚è±Ô∏è 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Xtra-Computing/thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thundersvm&#34;&gt;PyPi&lt;/a&gt; (üì• 890 / month ¬∑ ‚è±Ô∏è 13.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;chefboost&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 330 ¬∑ üìà) - A Lightweight Decision Tree Framework supporting regular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 87 ¬∑ üì¶ 23 ¬∑ üìã 29 - 17% open ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chefboost&#34;&gt;PyPi&lt;/a&gt; (üì• 760 / month ¬∑ ‚è±Ô∏è 16.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;elegy&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 370) - A High Level API for Deep Learning in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 24 ¬∑ üìã 96 - 31% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/poets-ai/elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elegy&#34;&gt;PyPi&lt;/a&gt; (üì• 600 / month ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/davisking/dlib&#34;&gt;dlib&lt;/a&gt;&lt;/b&gt; (ü•à38 ¬∑ ‚≠ê 11K) - A toolkit for making real world machine learning and data analysis.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSL-1.0&#34;&gt;‚ùóÔ∏èBSL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tflearn/tflearn&#34;&gt;TFlearn&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 9.6K ¬∑ üíÄ) - Deep learning library featuring a higher-level API for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/CNTK&#34;&gt;CNTK&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 17K ¬∑ üíÄ) - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Lasagne/Lasagne&#34;&gt;Lasagne&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 3.8K ¬∑ üíÄ) - Lightweight library to build and train neural networks in Theano. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb&#34;&gt;MindsDB&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 7K) - In-Database Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/numenta/nupic&#34;&gt;NuPIC&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 6.3K ¬∑ üíÄ) - Numenta Platform for Intelligent Computing is an implementation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shogun-toolbox/shogun&#34;&gt;SHOGUN&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 2.9K ¬∑ üíÄ) - Unified and efficient Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aksnzhy/xlearn&#34;&gt;xLearn&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 3K ¬∑ üíÄ) - High performance, easy-to-use, and scalable machine learning (ML).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/itdxer/neupy&#34;&gt;NeuPy&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 710 ¬∑ üíÄ) - NeuPy is a Tensorflow based python library for prototyping and building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NervanaSystems/neon&#34;&gt;neon&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 3.9K ¬∑ üíÄ) - Intel Nervana reference deep learning framework committed to best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorchbearer/torchbearer&#34;&gt;Torchbearer&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 630 ¬∑ üíÄ) - torchbearer: A model fitting library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundergbm&#34;&gt;ThunderGBM&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 620 ¬∑ üíÄ) - ThunderGBM: Fast GBDTs and Random Forests on GPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/StarSpace&#34;&gt;StarSpace&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 3.8K ¬∑ üíÄ) - Learning embeddings for classification, retrieval and ranking. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Visualization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose and task-specific data visualization libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;Matplotlib&lt;/a&gt;&lt;/b&gt; (ü•á49 ¬∑ ‚≠ê 16K) - matplotlib: plotting with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/35wkF7y&#34;&gt;Python-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.4K ¬∑ üîÄ 6.4K ¬∑ üì¶ 560K ¬∑ üìã 8.9K - 20% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/matplotlib/matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matplotlib&#34;&gt;PyPi&lt;/a&gt; (üì• 29M / month ¬∑ üì¶ 55K ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/matplotlib&#34;&gt;Conda&lt;/a&gt; (üì• 12M ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;Bokeh&lt;/a&gt;&lt;/b&gt; (ü•á43 ¬∑ ‚≠ê 16K ¬∑ üìâ) - Interactive Data Visualization in the browser, from Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 600 ¬∑ üîÄ 3.9K ¬∑ üì¶ 52K ¬∑ üìã 6.9K - 10% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bokeh/bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bokeh&#34;&gt;PyPi&lt;/a&gt; (üì• 2.5M / month ¬∑ üì¶ 3.5K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bokeh&#34;&gt;Conda&lt;/a&gt; (üì• 7.3M ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;Seaborn&lt;/a&gt;&lt;/b&gt; (ü•á43 ¬∑ ‚≠ê 9.5K) - Statistical data visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 1.6K ¬∑ üì• 220 ¬∑ üì¶ 160K ¬∑ üìã 2K - 5% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwaskom/seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/seaborn&#34;&gt;PyPi&lt;/a&gt; (üì• 9.5M / month ¬∑ üì¶ 8.8K ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/seaborn&#34;&gt;Conda&lt;/a&gt; (üì• 3.8M ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;Plotly&lt;/a&gt;&lt;/b&gt; (ü•á42 ¬∑ ‚≠ê 12K) - The interactive graphing library for Python (includes Plotly Express). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 200 ¬∑ üîÄ 2.1K ¬∑ üì¶ 10 ¬∑ üìã 2.4K - 49% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/plotly.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotly&#34;&gt;PyPi&lt;/a&gt; (üì• 7.7M / month ¬∑ üì¶ 4K ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotly&#34;&gt;Conda&lt;/a&gt; (üì• 2.6M ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/plotlywidget&#34;&gt;npm&lt;/a&gt; (üì• 45K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install plotlywidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;dash&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 17K) - Analytical Web Apps for Python, R, Julia, and Jupyter. No JavaScript Required. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 1.7K ¬∑ üì¶ 190 ¬∑ üìã 1.3K - 47% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dash&#34;&gt;PyPi&lt;/a&gt; (üì• 870K / month ¬∑ üì¶ 1.2K ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dash&#34;&gt;Conda&lt;/a&gt; (üì• 460K ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;Altair&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 7.5K) - Declarative statistical visualization library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 660 ¬∑ üì¶ 27K ¬∑ üìã 1.6K - 14% open ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/altair-viz/altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/altair&#34;&gt;PyPi&lt;/a&gt; (üì• 8.3M / month ¬∑ üì¶ 340 ¬∑ ‚è±Ô∏è 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/altair&#34;&gt;Conda&lt;/a&gt; (üì• 1.2M ¬∑ ‚è±Ô∏è 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;pandas-profiling&lt;/a&gt;&lt;/b&gt; (ü•à38 ¬∑ ‚≠ê 9K) - Create HTML profiling reports from pandas DataFrame.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 88 ¬∑ üîÄ 1.3K ¬∑ üì¶ 7.9K ¬∑ üìã 570 - 19% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ydataai/pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-profiling&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1M / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-profiling&#34;&gt;Conda&lt;/a&gt; (üì• 210K ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;Graphviz&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 1.2K) - Simple Python interface for Graphviz. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 180 ¬∑ üì¶ 31K ¬∑ üìã 140 - 4% open ¬∑ ‚è±Ô∏è 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/xflr6/graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphviz&#34;&gt;PyPi&lt;/a&gt; (üì• 11M / month ¬∑ üì¶ 3K ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/python-graphviz&#34;&gt;Conda&lt;/a&gt; (üì• 20K ¬∑ ‚è±Ô∏è 04.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda python-graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;pyecharts&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 12K) - Python Echarts Plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 2.7K ¬∑ üì¶ 2.3K ¬∑ üìã 1.6K - 0% open ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyecharts/pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyecharts&#34;&gt;PyPi&lt;/a&gt; (üì• 89K / month ¬∑ üì¶ 220 ¬∑ ‚è±Ô∏è 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;UMAP&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 5.6K) - Uniform Manifold Approximation and Projection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 640 ¬∑ üì¶ 5.3K ¬∑ üìã 620 - 53% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/umap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/umap-learn&#34;&gt;PyPi&lt;/a&gt; (üì• 740K / month ¬∑ üì¶ 320 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/umap-learn&#34;&gt;Conda&lt;/a&gt; (üì• 1.1M ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;PyQtGraph&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 2.8K) - Fast data visualization and GUI tools for scientific / engineering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 220 ¬∑ üîÄ 920 ¬∑ üìã 1K - 31% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyqtgraph/pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqtgraph&#34;&gt;PyPi&lt;/a&gt; (üì• 91K / month ¬∑ üì¶ 790 ¬∑ ‚è±Ô∏è 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyqtgraph&#34;&gt;Conda&lt;/a&gt; (üì• 250K ¬∑ ‚è±Ô∏è 05.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;HoloViews&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 2.2K) - With Holoviews, your data visualizes itself. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 360 ¬∑ üìã 2.8K - 31% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/holoviews&#34;&gt;PyPi&lt;/a&gt; (üì• 340K / month ¬∑ üì¶ 210 ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/holoviews&#34;&gt;Conda&lt;/a&gt; (üì• 720K ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@pyviz/jupyterlab_pyviz&#34;&gt;npm&lt;/a&gt; (üì• 1.7K / month ¬∑ ‚è±Ô∏è 24.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @pyviz/jupyterlab_pyviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;PyVista&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 1.3K) - 3D plotting and mesh analysis through a streamlined interface for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 91 ¬∑ üîÄ 250 ¬∑ üì• 650 ¬∑ üì¶ 760 ¬∑ üìã 810 - 30% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyvista/pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvista&#34;&gt;PyPi&lt;/a&gt; (üì• 75K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvista&#34;&gt;Conda&lt;/a&gt; (üì• 170K ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;FiftyOne&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.3K) - Visualize, create, and debug image and video datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 38 ¬∑ üîÄ 170 ¬∑ üì¶ 110 ¬∑ üìã 780 - 32% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/voxel51/fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiftyone&#34;&gt;PyPi&lt;/a&gt; (üì• 18K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;wordcloud&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 8.8K) - A little word cloud generator in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 65 ¬∑ üîÄ 2.2K ¬∑ üìã 480 - 23% open ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amueller/word_cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wordcloud&#34;&gt;PyPi&lt;/a&gt; (üì• 740K / month ¬∑ üì¶ 710 ¬∑ ‚è±Ô∏è 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wordcloud&#34;&gt;Conda&lt;/a&gt; (üì• 280K ¬∑ ‚è±Ô∏è 15.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;Perspective&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 4.5K) - A data visualization and analytics component, especially.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 69 ¬∑ üîÄ 470 ¬∑ üì¶ 250 ¬∑ üìã 520 - 16% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/finos/perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/perspective-python&#34;&gt;PyPi&lt;/a&gt; (üì• 3K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install perspective-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/perspective&#34;&gt;Conda&lt;/a&gt; (üì• 64K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@finos/perspective-jupyterlab&#34;&gt;npm&lt;/a&gt; (üì• 2.7K / month ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @finos/perspective-jupyterlab&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;plotnine&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 3.1K) - A grammar of graphics for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 95 ¬∑ üîÄ 170 ¬∑ üìã 490 - 12% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/has2k1/plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotnine&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 200 ¬∑ ‚è±Ô∏è 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotnine&#34;&gt;Conda&lt;/a&gt; (üì• 170K ¬∑ ‚è±Ô∏è 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;VisPy&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.9K) - High-performance interactive 2D/3D data visualization library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 590 ¬∑ üì¶ 750 ¬∑ üìã 1.3K - 21% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vispy/vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vispy&#34;&gt;PyPi&lt;/a&gt; (üì• 51K / month ¬∑ üì¶ 96 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vispy&#34;&gt;Conda&lt;/a&gt; (üì• 230K ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/vispy&#34;&gt;npm&lt;/a&gt; (üì• 40 / month ¬∑ ‚è±Ô∏è 15.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;datashader&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.8K) - Quickly and accurately render even the largest data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 47 ¬∑ üîÄ 350 ¬∑ üì¶ 1.1K ¬∑ üìã 500 - 25% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datashader&#34;&gt;PyPi&lt;/a&gt; (üì• 44K / month ¬∑ üì¶ 95 ¬∑ ‚è±Ô∏è 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datashader&#34;&gt;Conda&lt;/a&gt; (üì• 300K ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;bqplot&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 3.3K) - Plotting library for IPython/Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 57 ¬∑ üîÄ 460 ¬∑ üì¶ 30 ¬∑ üìã 580 - 38% open ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bqplot/bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bqplot&#34;&gt;PyPi&lt;/a&gt; (üì• 81K / month ¬∑ üì¶ 92 ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bqplot&#34;&gt;Conda&lt;/a&gt; (üì• 970K ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/bqplot&#34;&gt;npm&lt;/a&gt; (üì• 26K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;D-Tale&lt;/a&gt;&lt;/b&gt; (ü•â30 ¬∑ ‚≠ê 3.4K) - Visualizer for pandas data structures. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;‚ùóÔ∏èLGPL-2.1&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 23 ¬∑ üîÄ 270 ¬∑ üì¶ 370 ¬∑ üìã 460 - 8% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/man-group/dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtale&#34;&gt;PyPi&lt;/a&gt; (üì• 65K / month ¬∑ üì¶ 12 ¬∑ ‚è±Ô∏è 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtale&#34;&gt;Conda&lt;/a&gt; (üì• 120K ¬∑ ‚è±Ô∏è 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;missingno&lt;/a&gt;&lt;/b&gt; (ü•â30 ¬∑ ‚≠ê 3.2K) - Missing data visualization module for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 410 ¬∑ üì¶ 7.4K ¬∑ üìã 120 - 5% open ¬∑ ‚è±Ô∏è 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ResidentMario/missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/missingno&#34;&gt;PyPi&lt;/a&gt; (üì• 1M / month ¬∑ üì¶ 120 ¬∑ ‚è±Ô∏è 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/missingno&#34;&gt;Conda&lt;/a&gt; (üì• 160K ¬∑ ‚è±Ô∏è 15.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;data-validation&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 640) - Library for exploring and validating machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 120 ¬∑ üì• 360 ¬∑ üì¶ 480 ¬∑ üìã 160 - 23% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-data-validation&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3M / month ¬∑ üì¶ 27 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;hvPlot&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 560) - A high-level plotting API for pandas, dask, xarray, and networkx built on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 68 ¬∑ üì¶ 1.3K ¬∑ üìã 420 - 34% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hvplot&#34;&gt;PyPi&lt;/a&gt; (üì• 130K / month ¬∑ üì¶ 62 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hvplot&#34;&gt;Conda&lt;/a&gt; (üì• 170K ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;Facets Overview&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 6.9K ¬∑ üí§) - Visualizations for machine learning datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 840 ¬∑ üì¶ 120 ¬∑ üìã 150 - 50% open ¬∑ ‚è±Ô∏è 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pair-code/facets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facets-overview&#34;&gt;PyPi&lt;/a&gt; (üì• 280K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 24.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facets-overview&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;pythreejs&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 820) - A Jupyter - Three.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 180 ¬∑ üì¶ 19 ¬∑ üìã 220 - 33% open ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythreejs&#34;&gt;PyPi&lt;/a&gt; (üì• 56K / month ¬∑ üì¶ 38 ¬∑ ‚è±Ô∏è 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythreejs&#34;&gt;Conda&lt;/a&gt; (üì• 390K ¬∑ ‚è±Ô∏è 02.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-threejs&#34;&gt;npm&lt;/a&gt; (üì• 5.6K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-threejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;HyperTools&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.7K) - A Python toolbox for gaining geometric insights into high-dimensional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 160 ¬∑ üì• 14 ¬∑ üì¶ 190 ¬∑ üìã 190 - 35% open ¬∑ ‚è±Ô∏è 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContextLab/hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hypertools&#34;&gt;PyPi&lt;/a&gt; (üì• 810 / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;openTSNE&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1K) - Extensible, parallel implementations of t-SNE. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 120 ¬∑ üì¶ 340 ¬∑ üìã 100 - 3% open ¬∑ ‚è±Ô∏è 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pavlin-policar/openTSNE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opentsne&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opentsne&#34;&gt;Conda&lt;/a&gt; (üì• 140K ¬∑ ‚è±Ô∏è 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;lets-plot&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 740) - An open-source plotting library for statistical data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 33 ¬∑ üì• 260 ¬∑ üì¶ 16 ¬∑ üìã 250 - 29% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JetBrains/lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lets-plot&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;vega&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 330) - IPython/Jupyter notebook module for Vega and Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 59 ¬∑ üìã 94 - 12% open ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vega/ipyvega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vega&#34;&gt;PyPi&lt;/a&gt; (üì• 5.7K / month ¬∑ üì¶ 84 ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vega&#34;&gt;Conda&lt;/a&gt; (üì• 480K ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;AutoViz&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 700) - Automatically Visualize any dataset, any size with a single line of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 100 ¬∑ üì¶ 190 ¬∑ üìã 54 - 7% open ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/AutoViz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviz&#34;&gt;PyPi&lt;/a&gt; (üì• 55K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autoviz&#34;&gt;Conda&lt;/a&gt; (üì• 4.7K ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;HiPlot&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2.3K) - HiPlot makes understanding high dimensional data easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 8 ¬∑ üîÄ 120 ¬∑ üì¶ 4 ¬∑ üìã 77 - 15% open ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hiplot&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hiplot&#34;&gt;Conda&lt;/a&gt; (üì• 85K ¬∑ ‚è±Ô∏è 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;Sweetviz&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2K ¬∑ üí§) - Visualize and compare datasets, target values and associations, with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 200 ¬∑ üìã 99 - 28% open ¬∑ ‚è±Ô∏è 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fbdesignpro/sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sweetviz&#34;&gt;PyPi&lt;/a&gt; (üì• 91K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sweetviz&#34;&gt;Conda&lt;/a&gt; (üì• 10K ¬∑ ‚è±Ô∏è 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;Pandas-Bokeh&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 780) - Bokeh Plotting Backend for Pandas and GeoPandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 100 ¬∑ üìã 97 - 31% open ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PatrikHlobil/Pandas-Bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-bokeh&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 11.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;python-ternary&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 560) - Ternary plotting library for python with matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 140 ¬∑ üì• 17 ¬∑ üì¶ 93 ¬∑ üìã 120 - 22% open ¬∑ ‚è±Ô∏è 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcharper/python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/python-ternary&#34;&gt;PyPi&lt;/a&gt; (üì• 15K / month ¬∑ üì¶ 21 ¬∑ ‚è±Ô∏è 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-ternary&#34;&gt;Conda&lt;/a&gt; (üì• 62K ¬∑ ‚è±Ô∏è 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;Popmon&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 300) - Monitor the stability of a Pandas or Spark dataframe. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 19 ¬∑ üì• 14 ¬∑ üì¶ 11 ¬∑ üìã 38 - 55% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ing-bank/popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/popmon&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;joypy&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 420) - Joyplots in Python with matplotlib &amp;amp; pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 47 ¬∑ üì¶ 160 ¬∑ üìã 48 - 22% open ¬∑ ‚è±Ô∏è 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/leotac/joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joypy&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joypy&#34;&gt;Conda&lt;/a&gt; (üì• 13K ¬∑ ‚è±Ô∏è 28.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;PyWaffle&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 490) - Make Waffle Charts in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 88 ¬∑ üì¶ 130 ¬∑ üìã 16 - 25% open ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gyli/PyWaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywaffle&#34;&gt;PyPi&lt;/a&gt; (üì• 3K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pywaffle&#34;&gt;Conda&lt;/a&gt; (üì• 4.5K ¬∑ ‚è±Ô∏è 22.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SciTools/cartopy&#34;&gt;cartopy&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.1K) - Cartopy - a cartographic python library with matplotlib support. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/santosjorge/cufflinks&#34;&gt;Cufflinks&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 2.6K ¬∑ üíÄ) - Productivity Tools for Plotly + Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DmitryUlyanov/Multicore-TSNE&#34;&gt;Multicore-TSNE&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.7K ¬∑ üíÄ) - Parallel t-SNE implementation with Python and Torch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/chartify&#34;&gt;Chartify&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 3.2K ¬∑ üíÄ) - Python library that makes it easy for data scientists to create.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolaskruchten/jupyter_pivottablejs&#34;&gt;pivottablejs&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 460 ¬∑ üíÄ) - Dragndrop Pivot Tables and Charts for Jupyter/IPython.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adamerose/PandasGUI&#34;&gt;PandasGUI&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.6K) - A GUI for Pandas DataFrames. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=MIT-0&#34;&gt;‚ùóÔ∏èMIT-0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SauceCat/PDPbox&#34;&gt;PDPbox&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 680 ¬∑ üíÄ) - python partial dependence plot toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beringresearch/ivis&#34;&gt;ivis&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 260) - Dimensionality reduction in very large datasets using Siamese.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/t-makaro/animatplot&#34;&gt;animatplot&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 390 ¬∑ üíÄ) - A python package for animating plots build on matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/pdvega&#34;&gt;pdvega&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 340 ¬∑ üíÄ) - Interactive plotting for Pandas using Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/data-describe/data-describe&#34;&gt;data-describe&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 290) - datadescribe: Pythonic EDA Accelerator for Data Science. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zsailer/nx_altair&#34;&gt;nx-altair&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 190 ¬∑ üíÄ) - Draw interactive NetworkX graphs with Altair. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/biovault/nptsne&#34;&gt;nptsne&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 28 ¬∑ üíÄ) - nptsne is a numpy compatible python binary package that offers a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Text Data &amp;amp; NLP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing, cleaning, manipulating, and analyzing text data as well as libraries for NLP tasks such as language detection, fuzzy matching, classification, seq2seq learning, conversational AI, keyword extraction, and translation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;transformers&lt;/a&gt;&lt;/b&gt; (ü•á49 ¬∑ ‚≠ê 64K) - Transformers: State-of-the-art Machine Learning for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.3K ¬∑ üîÄ 15K ¬∑ üì• 1.5K ¬∑ üì¶ 28K ¬∑ üìã 9.5K - 5% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/transformers&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1M / month ¬∑ üì¶ 900 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/transformers&#34;&gt;Conda&lt;/a&gt; (üì• 210K ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;nltk&lt;/a&gt;&lt;/b&gt; (ü•á45 ¬∑ ‚≠ê 11K ¬∑ üìà) - Suite of libraries and programs for symbolic and statistical natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 420 ¬∑ üîÄ 2.6K ¬∑ üì¶ 140K ¬∑ üìã 1.6K - 13% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nltk/nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nltk&#34;&gt;PyPi&lt;/a&gt; (üì• 14M / month ¬∑ üì¶ 12K ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nltk&#34;&gt;Conda&lt;/a&gt; (üì• 1.3M ¬∑ ‚è±Ô∏è 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;spaCy&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 23K) - Industrial-strength Natural Language Processing (NLP) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 680 ¬∑ üîÄ 3.8K ¬∑ üì• 3.1K ¬∑ üì¶ 39K ¬∑ üìã 5.1K - 1% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spaCy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy&#34;&gt;PyPi&lt;/a&gt; (üì• 6.3M / month ¬∑ üì¶ 2.3K ¬∑ ‚è±Ô∏è 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;Conda&lt;/a&gt; (üì• 2.6M ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;gensim&lt;/a&gt;&lt;/b&gt; (ü•á42 ¬∑ ‚≠ê 13K) - Topic Modelling for Humans. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;‚ùóÔ∏èLGPL-2.1&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 430 ¬∑ üîÄ 4.2K ¬∑ üì• 3.8K ¬∑ üì¶ 33K ¬∑ üìã 1.8K - 21% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RaRe-Technologies/gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gensim&#34;&gt;PyPi&lt;/a&gt; (üì• 6.8M / month ¬∑ üì¶ 2.9K ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gensim&#34;&gt;Conda&lt;/a&gt; (üì• 800K ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;Rasa&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 14K) - Open source machine learning framework to automate text- and voice-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 540 ¬∑ üîÄ 4K ¬∑ üìã 6.6K - 14% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RasaHQ/rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasa&#34;&gt;PyPi&lt;/a&gt; (üì• 160K / month ¬∑ üì¶ 59 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;flair&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 12K) - A very simple framework for state-of-the-art Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 230 ¬∑ üîÄ 1.9K ¬∑ üì¶ 1.4K ¬∑ üìã 1.9K - 5% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/flairNLP/flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flair&#34;&gt;PyPi&lt;/a&gt; (üì• 88K / month ¬∑ üì¶ 72 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-flair&#34;&gt;Conda&lt;/a&gt; (üì• 7.7K ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;AllenNLP&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 11K) - An open-source NLP research library, built on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 260 ¬∑ üîÄ 2.2K ¬∑ üì• 46 ¬∑ üì¶ 2.5K ¬∑ üìã 2.5K - 3% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/allennlp&#34;&gt;PyPi&lt;/a&gt; (üì• 59K / month ¬∑ üì¶ 180 ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/allennlp&#34;&gt;Conda&lt;/a&gt; (üì• 58K ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;fairseq&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 17K) - Facebook AI Research Sequence-to-Sequence Toolkit written in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 390 ¬∑ üîÄ 4.5K ¬∑ üì• 240 ¬∑ üì¶ 800 ¬∑ üìã 3.4K - 16% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairseq&#34;&gt;PyPi&lt;/a&gt; (üì• 53K / month ¬∑ üì¶ 37 ¬∑ ‚è±Ô∏è 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairseq&#34;&gt;Conda&lt;/a&gt; (üì• 14K ¬∑ ‚è±Ô∏è 28.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;ChatterBot&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 12K ¬∑ üí§) - ChatterBot is a machine learning, conversational dialog engine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 4.1K ¬∑ üì¶ 4.4K ¬∑ üìã 1.6K - 20% open ¬∑ ‚è±Ô∏è 01.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gunthercox/ChatterBot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chatterbot&#34;&gt;PyPi&lt;/a&gt; (üì• 83K / month ¬∑ üì¶ 350 ¬∑ ‚è±Ô∏è 22.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chatterbot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;ParlAI&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 8.8K) - A framework for training and evaluating AI models on a variety of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 180 ¬∑ üîÄ 1.8K ¬∑ üì¶ 77 ¬∑ üìã 1.3K - 6% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ParlAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parlai&#34;&gt;PyPi&lt;/a&gt; (üì• 1.8K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parlai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;sentence-transformers&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 7.8K) - Multilingual Sentence &amp;amp; Image Embeddings with BERT. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 79 ¬∑ üîÄ 1.5K ¬∑ üì¶ 3.3K ¬∑ üìã 1.4K - 51% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/UKPLab/sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentence-transformers&#34;&gt;PyPi&lt;/a&gt; (üì• 3.3M / month ¬∑ üì¶ 110 ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentence-transformers&#34;&gt;Conda&lt;/a&gt; (üì• 21K ¬∑ ‚è±Ô∏è 20.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;stanza&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 6.1K) - Official Stanford NLP Python Library for Many Human Languages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 790 ¬∑ üì¶ 1.1K ¬∑ üìã 710 - 12% open ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stanfordnlp/stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stanza&#34;&gt;PyPi&lt;/a&gt; (üì• 440K / month ¬∑ üì¶ 67 ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/stanfordnlp/stanza&#34;&gt;Conda&lt;/a&gt; (üì• 5.1K ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c stanfordnlp stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;spark-nlp&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 2.7K) - State of the Art Natural Language Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 560 ¬∑ üìã 680 - 8% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohnSnowLabs/spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spark-nlp&#34;&gt;PyPi&lt;/a&gt; (üì• 1.6M / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;TextBlob&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 8.2K ¬∑ üí§) - Simple, Pythonic, text processing--Sentiment analysis, part-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 35 ¬∑ üîÄ 1.1K ¬∑ üì• 99 ¬∑ üì¶ 20K ¬∑ üìã 260 - 39% open ¬∑ ‚è±Ô∏è 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sloria/TextBlob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textblob&#34;&gt;PyPi&lt;/a&gt; (üì• 940K / month ¬∑ üì¶ 1.4K ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textblob&#34;&gt;Conda&lt;/a&gt; (üì• 160K ¬∑ ‚è±Ô∏è 24.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;sentencepiece&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 5.9K) - Unsupervised text tokenizer for Neural Network-based text.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 66 ¬∑ üîÄ 810 ¬∑ üì• 21K ¬∑ üì¶ 15K ¬∑ üìã 520 - 7% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentencepiece&#34;&gt;PyPi&lt;/a&gt; (üì• 6.9M / month ¬∑ üì¶ 390 ¬∑ ‚è±Ô∏è 18.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentencepiece&#34;&gt;Conda&lt;/a&gt; (üì• 190K ¬∑ ‚è±Ô∏è 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;Tokenizers&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 5.6K) - Fast State-of-the-Art Tokenizers optimized for Research and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 56 ¬∑ üîÄ 470 ¬∑ üì¶ 49 ¬∑ üìã 630 - 30% open ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tokenizers&#34;&gt;PyPi&lt;/a&gt; (üì• 7.2M / month ¬∑ üì¶ 120 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tokenizers&#34;&gt;Conda&lt;/a&gt; (üì• 170K ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;fastText&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 24K) - Library for fast text representation and classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 59 ¬∑ üîÄ 4.4K ¬∑ üì¶ 2.9K ¬∑ üìã 1.1K - 43% open ¬∑ ‚è±Ô∏è 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fastText&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fasttext&#34;&gt;PyPi&lt;/a&gt; (üì• 510K / month ¬∑ üì¶ 180 ¬∑ ‚è±Ô∏è 28.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fasttext&#34;&gt;Conda&lt;/a&gt; (üì• 30K ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;Dedupe&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 3.4K) - A python library for accurate and scalable fuzzy matching, record.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 64 ¬∑ üîÄ 480 ¬∑ üì¶ 220 ¬∑ üìã 730 - 6% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dedupeio/dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dedupe&#34;&gt;PyPi&lt;/a&gt; (üì• 310K / month ¬∑ üì¶ 48 ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dedupe&#34;&gt;Conda&lt;/a&gt; (üì• 3.9K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;torchtext&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 3K) - Data loaders and abstractions for text and NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 720 ¬∑ üìã 720 - 45% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchtext&#34;&gt;PyPi&lt;/a&gt; (üì• 150K / month ¬∑ üì¶ 440 ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchtext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;TensorFlow Text&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 940) - Making text a first-class citizen in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 87 ¬∑ üîÄ 220 ¬∑ üì¶ 1.8K ¬∑ üìã 220 - 40% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-text&#34;&gt;PyPi&lt;/a&gt; (üì• 4.1M / month ¬∑ üì¶ 78 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;OpenNMT&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 5.6K) - Open Source Neural Machine Translation in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 2.1K ¬∑ üì¶ 140 ¬∑ üìã 1.3K - 8% open ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenNMT/OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/OpenNMT-py&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;DeepPavlov&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 5.7K) - An open source library for deep learning end-to-end dialog.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 67 ¬∑ üîÄ 1K ¬∑ üì¶ 270 ¬∑ üìã 630 - 12% open ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmipt/DeepPavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeppavlov&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeppavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;haystack&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.7K) - Haystack is an open source NLP framework that leverages Transformer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 760 ¬∑ üì• 13 ¬∑ üìã 1.4K - 15% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/haystack&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ üì¶ 85 ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;jellyfish&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.7K) - a python library for doing approximate and phonetic matching of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 150 ¬∑ üì¶ 3.7K ¬∑ üìã 110 - 9% open ¬∑ ‚è±Ô∏è 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jamesturk/jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jellyfish&#34;&gt;PyPi&lt;/a&gt; (üì• 2.1M / month ¬∑ üì¶ 400 ¬∑ ‚è±Ô∏è 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jellyfish&#34;&gt;Conda&lt;/a&gt; (üì• 220K ¬∑ ‚è±Ô∏è 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;snowballstemmer&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 560) - Snowball compiler and stemming algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 160 ¬∑ üì¶ 4 ¬∑ üìã 77 - 42% open ¬∑ ‚è±Ô∏è 17.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snowballstem/snowball&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snowballstemmer&#34;&gt;PyPi&lt;/a&gt; (üì• 6.8M / month ¬∑ üì¶ 6.7K ¬∑ ‚è±Ô∏è 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/snowballstemmer&#34;&gt;Conda&lt;/a&gt; (üì• 4.3M ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;nlpaug&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 3.3K) - Data augmentation for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 360 ¬∑ üì¶ 330 ¬∑ üìã 180 - 20% open ¬∑ ‚è±Ô∏è 03.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/makcedward/nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlpaug&#34;&gt;PyPi&lt;/a&gt; (üì• 80K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 23.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nlpaug&#34;&gt;Conda&lt;/a&gt; (üì• 1.8K ¬∑ ‚è±Ô∏è 25.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;ftfy&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 3.2K) - Fixes mojibake and other glitches in Unicode text, after the fact. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 110 ¬∑ üì¶ 5.7K ¬∑ üìã 130 - 9% open ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rspeer/python-ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ftfy&#34;&gt;PyPi&lt;/a&gt; (üì• 1.8M / month ¬∑ üì¶ 490 ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ftfy&#34;&gt;Conda&lt;/a&gt; (üì• 160K ¬∑ ‚è±Ô∏è 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;SciSpacy&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1.2K) - A full spaCy pipeline and models for scientific/biomedical documents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 23 ¬∑ üîÄ 150 ¬∑ üì¶ 460 ¬∑ üìã 260 - 14% open ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scispacy&#34;&gt;PyPi&lt;/a&gt; (üì• 25K / month ¬∑ üì¶ 17 ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;NeMo&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 4.3K) - NeMo: a toolkit for conversational AI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 960 ¬∑ üì• 5.3K ¬∑ üìã 1.1K - 6% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/NeMo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nemo-toolkit&#34;&gt;PyPi&lt;/a&gt; (üì• 18K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nemo-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;Sumy&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.8K) - Module for automatic summarization of text documents and HTML pages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 470 ¬∑ üì¶ 1.2K ¬∑ üìã 100 - 13% open ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/miso-belica/sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sumy&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sumy&#34;&gt;Conda&lt;/a&gt; (üì• 950 ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;PyText&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 6.3K) - A natural language modeling framework based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 230 ¬∑ üîÄ 800 ¬∑ üì• 290 ¬∑ üì¶ 110 ¬∑ üìã 220 - 66% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytext-nlp&#34;&gt;PyPi&lt;/a&gt; (üì• 320 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytext-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;vaderSentiment&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 3.6K) - VADER Sentiment Analysis. VADER (Valence Aware Dictionary and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 860 ¬∑ üì¶ 3.8K ¬∑ üìã 110 - 30% open ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cjhutto/vaderSentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vadersentiment&#34;&gt;PyPi&lt;/a&gt; (üì• 190K / month ¬∑ üì¶ 170 ¬∑ ‚è±Ô∏è 22.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vadersentiment&#34;&gt;Conda&lt;/a&gt; (üì• 8.6K ¬∑ ‚è±Ô∏è 22.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;TextDistance&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.8K) - Compute distance between sequences. 30+ algorithms, pure python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 230 ¬∑ üì• 650 ¬∑ üì¶ 2.2K ¬∑ ‚è±Ô∏è 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/life4/textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textdistance&#34;&gt;PyPi&lt;/a&gt; (üì• 520K / month ¬∑ üì¶ 39 ¬∑ ‚è±Ô∏è 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textdistance&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;neuralcoref&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.5K ¬∑ üí§) - Fast Coreference Resolution in spaCy with Neural Networks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 440 ¬∑ üì• 400 ¬∑ üì¶ 490 ¬∑ üìã 300 - 16% open ¬∑ ‚è±Ô∏è 22.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralcoref&#34;&gt;PyPi&lt;/a&gt; (üì• 100K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 08.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/neuralcoref&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 21.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GluonNLP&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.4K ¬∑ üí§) - Toolkit that enables easy text preprocessing, datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 82 ¬∑ üîÄ 520 ¬∑ üì¶ 810 ¬∑ üìã 560 - 46% open ¬∑ ‚è±Ô∏è 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonnlp&#34;&gt;PyPi&lt;/a&gt; (üì• 47K / month ¬∑ üì¶ 22 ¬∑ ‚è±Ô∏è 13.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;textacy&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.9K) - NLP, before and after spaCy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 230 ¬∑ üìã 250 - 11% open ¬∑ ‚è±Ô∏è 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chartbeat-labs/textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textacy&#34;&gt;PyPi&lt;/a&gt; (üì• 43K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textacy&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;PyTextRank&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.8K) - Python implementation of TextRank algorithms (textgraphs) for phrase.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 330 ¬∑ üì¶ 260 ¬∑ üìã 86 - 29% open ¬∑ ‚è±Ô∏è 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DerwenAI/pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytextrank&#34;&gt;PyPi&lt;/a&gt; (üì• 20K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;CLTK&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 720) - The Classical Language Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 310 ¬∑ üì• 25 ¬∑ üì¶ 200 ¬∑ üìã 520 - 4% open ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cltk/cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cltk&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 42 ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;Ciphey&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 9.9K) - Automatically decrypt encryptions without knowing the key or cipher,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 46 ¬∑ üîÄ 610 ¬∑ üìã 290 - 17% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Ciphey/Ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ciphey&#34;&gt;PyPi&lt;/a&gt; (üì• 17K / month ¬∑ ‚è±Ô∏è 06.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/remnux/ciphey&#34;&gt;Docker Hub&lt;/a&gt; (üì• 15K ¬∑ ‚≠ê 7 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull remnux/ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;T5&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 4.2K) - Code for the paper Exploring the Limits of Transfer Learning with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 570 ¬∑ üì¶ 99 ¬∑ üìã 400 - 15% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/text-to-text-transfer-transformer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/t5&#34;&gt;PyPi&lt;/a&gt; (üì• 7.9K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install t5&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;fastNLP&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2.6K) - fastNLP: A Modularized and Extensible NLP Framework. Currently still.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 54 ¬∑ üîÄ 420 ¬∑ üì• 66 ¬∑ üì¶ 79 ¬∑ üìã 200 - 23% open ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastnlp/fastNLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastnlp&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 04.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;spacy-transformers&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.1K) - Use pretrained transformers like BERT, XLNet and GPT-2.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 140 ¬∑ üì¶ 510 ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy-transformers&#34;&gt;PyPi&lt;/a&gt; (üì• 99K / month ¬∑ üì¶ 17 ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy-transformers&#34;&gt;Conda&lt;/a&gt; (üì• 1.3K ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;english-words&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 7.1K) - A text file containing 479k English words for all your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rvuUlR&#34;&gt;Unlicense&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 1.4K ¬∑ üìã 92 - 68% open ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dwyl/english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/english-words&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;Snips NLU&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 3.7K ¬∑ üí§) - Snips Python library to extract meaning from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 500 ¬∑ üìã 260 - 23% open ¬∑ ‚è±Ô∏è 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snipsco/snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snips-nlu&#34;&gt;PyPi&lt;/a&gt; (üì• 2.9K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;scattertext&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.8K) - Beautiful visualizations of how language differs among document.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 250 ¬∑ üì¶ 280 ¬∑ üìã 87 - 19% open ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JasonKessler/scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scattertext&#34;&gt;PyPi&lt;/a&gt; (üì• 4.2K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scattertext&#34;&gt;Conda&lt;/a&gt; (üì• 61K ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;MatchZoo&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 3.7K ¬∑ üí§) - Facilitating the design, comparison and sharing of deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 910 ¬∑ üì¶ 10 ¬∑ üìã 460 - 6% open ¬∑ ‚è±Ô∏è 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NTMC-Community/MatchZoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matchzoo&#34;&gt;PyPi&lt;/a&gt; (üì• 94 / month ¬∑ ‚è±Ô∏è 24.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matchzoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;pytorch-nlp&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 2.1K ¬∑ üí§) - Basic Utilities for PyTorch Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 250 ¬∑ üì¶ 380 ¬∑ üìã 67 - 26% open ¬∑ ‚è±Ô∏è 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PetrochukM/PyTorch-NLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-nlp&#34;&gt;PyPi&lt;/a&gt; (üì• 6.7K / month ¬∑ üì¶ 17 ¬∑ ‚è±Ô∏è 04.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;fast-bert&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.7K) - Super easy library for BERT based NLP models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 330 ¬∑ üìã 250 - 61% open ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/utterworks/fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fast-bert&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;gpt-2-simple&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2.9K ¬∑ üìà) - Python package to easily retrain OpenAIs GPT-2 text-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 590 ¬∑ üì• 300 ¬∑ üìã 250 - 61% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minimaxir/gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpt-2-simple&#34;&gt;PyPi&lt;/a&gt; (üì• 5.6K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;Kashgari&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2.3K ¬∑ üí§) - Kashgari is a production-level NLP Transfer learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 430 ¬∑ üì¶ 52 ¬∑ üìã 370 - 10% open ¬∑ ‚è±Ô∏è 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BrikerMan/Kashgari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kashgari-tf&#34;&gt;PyPi&lt;/a&gt; (üì• 66 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 18.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kashgari-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;sense2vec&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.4K ¬∑ üí§) - Contextually-keyed word vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 230 ¬∑ üì• 30K ¬∑ üì¶ 140 ¬∑ üìã 110 - 18% open ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sense2vec&#34;&gt;PyPi&lt;/a&gt; (üì• 4K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 19.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sense2vec&#34;&gt;Conda&lt;/a&gt; (üì• 25K ¬∑ ‚è±Ô∏è 14.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;Sockeye&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.1K) - Sequence-to-sequence framework with a focus on Neural Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 56 ¬∑ üîÄ 310 ¬∑ üì• 14 ¬∑ üìã 280 - 2% open ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sockeye&#34;&gt;PyPi&lt;/a&gt; (üì• 1K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;Texthero&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.5K ¬∑ üí§) - Text preprocessing, representation and visualization from zero to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 210 ¬∑ üì• 90 ¬∑ üìã 140 - 55% open ¬∑ ‚è±Ô∏è 19.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jbesomi/texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/texthero&#34;&gt;PyPi&lt;/a&gt; (üì• 20K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 01.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;qdrant&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.7K) - Qdrant - vector similarity search engine with extended filtering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 92 ¬∑ üìã 200 - 23% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;FARM&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.5K) - Fast &amp;amp; easy transfer learning for NLP. Harvesting language models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 37 ¬∑ üîÄ 220 ¬∑ üìã 440 - 8% open ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/FARM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/farm&#34;&gt;PyPi&lt;/a&gt; (üì• 4K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 10.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/farm&#34;&gt;Conda&lt;/a&gt; (üì• 1.1K ¬∑ ‚è±Ô∏è 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;OpenPrompt&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.5K) - An Open-Source Framework for Prompt-Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 150 ¬∑ üì¶ 9 ¬∑ üìã 120 - 7% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenPrompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/openprompt&#34;&gt;PyPi&lt;/a&gt; (üì• 650 / month ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install openprompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;rubrix&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.1K) - Rubrix, open-source framework for data-centric NLP. Data annotation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 91 ¬∑ üìã 570 - 12% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/recognai/rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rubrix&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rubrix&#34;&gt;Conda&lt;/a&gt; (üì• 1.4K ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;detoxify&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 430) - Trained models &amp;amp; code to predict toxic comments on all 3 Jigsaw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 51 ¬∑ üì• 44K ¬∑ üì¶ 90 ¬∑ üìã 34 - 50% open ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unitaryai/detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detoxify&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;DeepMatcher&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 4.2K ¬∑ üí§) - Python package for performing Entity and Text Matching using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 1.6K ¬∑ üì¶ 19 ¬∑ üìã 83 - 73% open ¬∑ ‚è±Ô∏è 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/anhaidgroup/deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepmatcher&#34;&gt;PyPi&lt;/a&gt; (üì• 840 / month ¬∑ ‚è±Ô∏è 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;NLP Architect&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.8K ¬∑ üí§) - A model library for exploring state-of-the-art deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 37 ¬∑ üîÄ 440 ¬∑ üì¶ 8 ¬∑ üìã 130 - 15% open ¬∑ ‚è±Ô∏è 12.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlp-architect&#34;&gt;PyPi&lt;/a&gt; (üì• 110 / month ¬∑ ‚è±Ô∏è 12.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;lightseq&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.1K) - LightSeq: A High Performance Library for Sequence Processing and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 9 ¬∑ üîÄ 220 ¬∑ üì• 620 ¬∑ üìã 180 - 54% open ¬∑ ‚è±Ô∏è 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightseq&#34;&gt;PyPi&lt;/a&gt; (üì• 790 / month ¬∑ ‚è±Ô∏è 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;jiant&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1.4K) - jiant is an nlp toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 57 ¬∑ üîÄ 270 ¬∑ üì¶ 2 ¬∑ üìã 550 - 11% open ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nyu-mll/jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jiant&#34;&gt;PyPi&lt;/a&gt; (üì• 57 / month ¬∑ ‚è±Ô∏è 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;finetune&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 660) - Scikit-learn style model finetuning for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 71 ¬∑ üì¶ 9 ¬∑ üìã 140 - 15% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IndicoDataSolutions/finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finetune&#34;&gt;PyPi&lt;/a&gt; (üì• 120 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;TextBox&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 360) - TextBox is an open-source library for building text generation system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 64 ¬∑ üì¶ 5 ¬∑ üìã 20 - 15% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/TextBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textbox&#34;&gt;PyPi&lt;/a&gt; (üì• 77 / month ¬∑ ‚è±Ô∏è 15.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;OpenNRE&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 3.7K) - An Open-Source Package for Neural Relation Extraction (NRE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 940 ¬∑ üìã 350 - 5% open ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenNRE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;Camphr&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 340 ¬∑ üí§) - Camphr - NLP libary for creating pipeline components. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 18 ¬∑ üìã 28 - 7% open ¬∑ ‚è±Ô∏è 18.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PKSHATechnology-Research/camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/camphr&#34;&gt;PyPi&lt;/a&gt; (üì• 190 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;Translate&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 740) - Translate - a PyTorch Language Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 87 ¬∑ üîÄ 170 ¬∑ üìã 93 - 70% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-translate&#34;&gt;PyPi&lt;/a&gt; (üì• 4 / month ¬∑ ‚è±Ô∏è 01.05.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;VizSeq&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 400) - An Analysis Toolkit for Natural Language Generation (Translation,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3 ¬∑ üîÄ 47 ¬∑ üì¶ 6 ¬∑ üìã 16 - 43% open ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizseq&#34;&gt;PyPi&lt;/a&gt; (üì• 69 / month ¬∑ ‚è±Ô∏è 07.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 28 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/seatgeek/fuzzywuzzy&#34;&gt;fuzzywuzzy&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 8.7K ¬∑ üí§) - Fuzzy String Matching in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;‚ùóÔ∏èGPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/saffsd/langid.py&#34;&gt;langid&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2K ¬∑ üíÄ) - Stand-alone language identification system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aboSamoor/polyglot&#34;&gt;polyglot&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 2K ¬∑ üíÄ) - Multilingual text (NLP) processing toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vi3k6i5/flashtext&#34;&gt;flashtext&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 5.2K ¬∑ üíÄ) - Extract Keywords from sentence or Replace keywords in sentences. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/textgenrnn&#34;&gt;textgenrnn&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 4.7K ¬∑ üíÄ) - Easily train your own text-generating neural network of any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mchaput/whoosh&#34;&gt;whoosh&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 230) - Pure-Python full-text search library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;‚ùóÔ∏èBSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VKCOM/YouTokenToMe&#34;&gt;YouTokenToMe&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 800 ¬∑ üíÄ) - Unsupervised text tokenizer focused on computational efficiency. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipunsadvilkar/pySBD&#34;&gt;pySBD&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 440 ¬∑ üíÄ) - pySBD (Python Sentence Boundary Disambiguation) is a rule-based sentence.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asyml/texar&#34;&gt;Texar&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.3K ¬∑ üíÄ) - Toolkit for Machine Learning, Natural Language Processing, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Hironsan/anago&#34;&gt;anaGo&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.4K ¬∑ üíÄ) - Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Delta-ML/delta&#34;&gt;DELTA&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - DELTA is a deep learning based natural language and speech.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EricFillion/happy-transformer&#34;&gt;happy-transformer&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 290) - A package built on top of Hugging Faces transformers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Alir3z4/python-stop-words&#34;&gt;stop-words&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 140 ¬∑ üíÄ) - Get list of common stop words in various languages in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ki6an/fastT5&#34;&gt;fastT5&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 300) - boost inference speed of T5 models by 5x &amp;amp; reduce the model size by 3x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vrasneur/pyfasttext&#34;&gt;pyfasttext&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 230 ¬∑ üíÄ) - Yet another Python binding for fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textpipe/textpipe&#34;&gt;textpipe&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 300 ¬∑ üí§) - Textpipe: clean and extract metadata from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Franck-Dernoncourt/NeuroNER&#34;&gt;NeuroNER&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 1.6K ¬∑ üíÄ) - Named-entity recognition using neural networks. Easy-to-use and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shaypal5/skift&#34;&gt;skift&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 230) - scikit-learn wrappers for Python fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koursaros-ai/nboost&#34;&gt;nboost&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 620 ¬∑ üíÄ) - NBoost is a scalable, search-api-boosting platform for deploying.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dsfsi/textaugment&#34;&gt;textaugment&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 240) - TextAugment: Text Augmentation Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/BLINK&#34;&gt;BLINK&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 880 ¬∑ üíÄ) - Entity Linker solution. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/victordibia/neuralqa&#34;&gt;NeuralQA&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 220 ¬∑ üíÄ) - NeuralQA: A Usable Library for Question Answering on Large Datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/as-ideas/headliner&#34;&gt;Headliner&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 230 ¬∑ üíÄ) - Easy training and deployment of seq2seq models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jaidevd/numerizer&#34;&gt;numerizer&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 140) - A Python module to convert natural language numerics into ints and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MartinoMensio/spacy-dbpedia-spotlight&#34;&gt;spacy-dbpedia-spotlight&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 61) - A spaCy wrapper for DBpedia Spotlight. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/feedly/transfer-nlp&#34;&gt;TransferNLP&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 290 ¬∑ üíÄ) - NLP library designed for reproducible experimentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abelriboulot/onnxt5&#34;&gt;ONNX-T5&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 200 ¬∑ üíÄ) - Summarization, translation, sentiment-analysis, text-generation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textvec/textvec&#34;&gt;textvec&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 180 ¬∑ üíÄ) - Text vectorization tool to outperform TFIDF for classification.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Image Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for image &amp;amp; video processing, manipulation, and augmentation as well as libraries for computer vision tasks such as facial recognition, object detection, and classification.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;Pillow&lt;/a&gt;&lt;/b&gt; (ü•á45 ¬∑ ‚≠ê 9.8K) - The friendly PIL fork (Python Imaging Library). &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;‚ùóÔ∏èPIL&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 400 ¬∑ üîÄ 1.9K ¬∑ üìã 2.5K - 5% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-pillow/Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Pillow&#34;&gt;PyPi&lt;/a&gt; (üì• 46M / month ¬∑ üì¶ 63K ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pillow&#34;&gt;Conda&lt;/a&gt; (üì• 15M ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;scikit-image&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 4.9K) - Image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 550 ¬∑ üîÄ 2K ¬∑ üì¶ 100K ¬∑ üìã 2.4K - 25% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-image/scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-image&#34;&gt;PyPi&lt;/a&gt; (üì• 8.9M / month ¬∑ üì¶ 9.3K ¬∑ ‚è±Ô∏è 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-image&#34;&gt;Conda&lt;/a&gt; (üì• 3.4M ¬∑ ‚è±Ô∏è 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;torchvision&lt;/a&gt;&lt;/b&gt; (ü•á42 ¬∑ ‚≠ê 12K) - Datasets, Transforms and Models specific to Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 490 ¬∑ üîÄ 5.9K ¬∑ üì• 5.7K ¬∑ üìã 2.5K - 28% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchvision&#34;&gt;PyPi&lt;/a&gt; (üì• 5.3M / month ¬∑ üì¶ 3.6K ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchvision&#34;&gt;Conda&lt;/a&gt; (üì• 240K ¬∑ ‚è±Ô∏è 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;PyTorch Image Models&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 19K) - PyTorch image models, scripts, pretrained weights --.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 75 ¬∑ üîÄ 3.1K ¬∑ üì• 1.2M ¬∑ üì¶ 3K ¬∑ üìã 510 - 12% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/pytorch-image-models&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/timm&#34;&gt;PyPi&lt;/a&gt; (üì• 3.3M / month ¬∑ üì¶ 94 ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/timm&#34;&gt;Conda&lt;/a&gt; (üì• 17K ¬∑ ‚è±Ô∏è 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 20K) - OpenMMLab Detection Toolbox and Benchmark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 340 ¬∑ üîÄ 7.3K ¬∑ üì¶ 380 ¬∑ üìã 5.9K - 9% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmdetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmdet&#34;&gt;PyPi&lt;/a&gt; (üì• 38K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmdet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;MoviePy&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 9.2K) - Video editing with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 1.2K ¬∑ üì¶ 16K ¬∑ üìã 1.2K - 24% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Zulko/moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/moviepy&#34;&gt;PyPi&lt;/a&gt; (üì• 4.7M / month ¬∑ üì¶ 750 ¬∑ ‚è±Ô∏è 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/moviepy&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;imageio&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 1K) - Python library for reading and writing image data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 90 ¬∑ üîÄ 210 ¬∑ üì• 240 ¬∑ üì¶ 62K ¬∑ üìã 450 - 13% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/imageio/imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageio&#34;&gt;PyPi&lt;/a&gt; (üì• 18M / month ¬∑ üì¶ 2.6K ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageio&#34;&gt;Conda&lt;/a&gt; (üì• 2.9M ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;Kornia&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 6.6K) - Open Source Differentiable Computer Vision Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 650 ¬∑ üì• 310 ¬∑ üì¶ 1.3K ¬∑ üìã 590 - 27% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kornia/kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kornia&#34;&gt;PyPi&lt;/a&gt; (üì• 320K / month ¬∑ üì¶ 54 ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kornia&#34;&gt;Conda&lt;/a&gt; (üì• 16K ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;InsightFace&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 12K) - State-of-the-art 2D and 3D Face Analysis Project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 44 ¬∑ üîÄ 3.8K ¬∑ üì¶ 160 ¬∑ üìã 1.9K - 54% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepinsight/insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/insightface&#34;&gt;PyPi&lt;/a&gt; (üì• 20K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;opencv-python&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 2.8K) - Automated CI toolchain to produce precompiled opencv-python,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 38 ¬∑ üîÄ 540 ¬∑ üìã 540 - 7% open ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/opencv/opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opencv-python&#34;&gt;PyPi&lt;/a&gt; (üì• 5.5M / month ¬∑ üì¶ 8.9K ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;Face Recognition&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 44K ¬∑ üí§) - The worlds simplest facial recognition api for Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 47 ¬∑ üîÄ 12K ¬∑ üì• 460 ¬∑ üìã 1.2K - 54% open ¬∑ ‚è±Ô∏è 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ageitgey/face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face_recognition&#34;&gt;PyPi&lt;/a&gt; (üì• 56K / month ¬∑ üì¶ 210 ¬∑ ‚è±Ô∏è 21.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/face_recognition&#34;&gt;Conda&lt;/a&gt; (üì• 6.5K ¬∑ ‚è±Ô∏è 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;detectron2&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 21K) - Detectron2 is a platform for object detection, segmentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 210 ¬∑ üîÄ 5.7K ¬∑ üì¶ 620 ¬∑ üìã 3K - 7% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detectron2&#34;&gt;PyPi&lt;/a&gt; (üì• 1 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 06.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/detectron2&#34;&gt;Conda&lt;/a&gt; (üì• 53K ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;Albumentations&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 10K) - Fast image augmentation library and an easy-to-use wrapper.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 1.3K ¬∑ üì¶ 7.9K ¬∑ üìã 640 - 45% open ¬∑ ‚è±Ô∏è 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albumentations-team/albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/albumentations&#34;&gt;PyPi&lt;/a&gt; (üì• 260K / month ¬∑ üì¶ 210 ¬∑ ‚è±Ô∏è 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/albumentations&#34;&gt;Conda&lt;/a&gt; (üì• 37K ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GluonCV&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 5.2K) - Gluon CV Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 1.2K ¬∑ üì¶ 750 ¬∑ üìã 820 - 7% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-cv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluoncv&#34;&gt;PyPi&lt;/a&gt; (üì• 590K / month ¬∑ üì¶ 59 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluoncv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;Wand&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.2K) - The ctypes-based simple ImageMagick binding for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 98 ¬∑ üîÄ 200 ¬∑ üì• 7.6K ¬∑ üì¶ 11K ¬∑ üìã 370 - 4% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emcconville/wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wand&#34;&gt;PyPi&lt;/a&gt; (üì• 380K / month ¬∑ üì¶ 690 ¬∑ ‚è±Ô∏è 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wand&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;PaddleDetection&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 7.8K) - Object Detection toolkit based on PaddlePaddle. It.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 97 ¬∑ üîÄ 2K ¬∑ üì¶ 18 ¬∑ üìã 3.5K - 21% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleDetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddledet&#34;&gt;PyPi&lt;/a&gt; (üì• 260 / month ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddledet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;PaddleSeg&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.8K) - Easy-to-use image segmentation library with awesome pre-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 1.1K ¬∑ üì¶ 560 ¬∑ üìã 1.1K - 50% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleSeg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleseg&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleseg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;imutils&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.1K) - A series of convenience functions to make basic image processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 960 ¬∑ üì¶ 25K ¬∑ üìã 220 - 65% open ¬∑ ‚è±Ô∏è 27.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyImageSearch/imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imutils&#34;&gt;PyPi&lt;/a&gt; (üì• 290K / month ¬∑ üì¶ 760 ¬∑ ‚è±Ô∏è 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imutils&#34;&gt;Conda&lt;/a&gt; (üì• 85K ¬∑ ‚è±Ô∏è 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;deepface&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 3.9K) - A Lightweight Face Recognition and Facial Attribute Analysis (Age,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 870 ¬∑ üì¶ 570 ¬∑ üìã 460 - 1% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepface&#34;&gt;PyPi&lt;/a&gt; (üì• 33K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;imageai&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 7K ¬∑ üí§) - A python library built to empower developers to build applications and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 1.9K ¬∑ üì• 750K ¬∑ üì¶ 1.1K ¬∑ üìã 680 - 37% open ¬∑ ‚è±Ô∏è 08.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OlafenwaMoses/ImageAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageai&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 16 ¬∑ ‚è±Ô∏è 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageai&#34;&gt;Conda&lt;/a&gt; (üì• 2.7K ¬∑ ‚è±Ô∏è 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;ImageHash&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.4K ¬∑ üí§) - A Python Perceptual Image Hashing Module. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 300 ¬∑ üì¶ 5.1K ¬∑ üìã 110 - 12% open ¬∑ ‚è±Ô∏è 07.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohannesBuchner/imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ImageHash&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4M / month ¬∑ üì¶ 320 ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ImageHash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imagehash&#34;&gt;Conda&lt;/a&gt; (üì• 180K ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;vit-pytorch&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 10K) - Implementation of Vision Transformer, a simple way to achieve.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 1.6K ¬∑ üì¶ 110 ¬∑ üìã 180 - 47% open ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vit-pytorch&#34;&gt;PyPi&lt;/a&gt; (üì• 22K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;Augmentor&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 4.7K) - Image augmentation library in Python for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 850 ¬∑ üì¶ 460 ¬∑ üìã 200 - 63% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mdbloice/Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Augmentor&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;Face Alignment&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 5.7K ¬∑ üí§) - 2D and 3D Face alignment library build using pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 23 ¬∑ üîÄ 1.2K ¬∑ üìã 270 - 19% open ¬∑ ‚è±Ô∏è 04.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/1adrianb/face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face-alignment&#34;&gt;PyPi&lt;/a&gt; (üì• 10K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;vidgear&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2.2K) - A High-performance cross-platform Video Processing Python framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 9 ¬∑ üîÄ 180 ¬∑ üì• 590 ¬∑ üì¶ 200 ¬∑ üìã 220 - 0% open ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhiTronix/vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vidgear&#34;&gt;PyPi&lt;/a&gt; (üì• 4.4K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;sahi&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.6K) - A lightweight vision library for performing large scale object detection/.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 240 ¬∑ üì• 270 ¬∑ üì¶ 61 ¬∑ üìã 150 - 13% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/obss/sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sahi&#34;&gt;PyPi&lt;/a&gt; (üì• 21K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sahi&#34;&gt;Conda&lt;/a&gt; (üì• 2.9K ¬∑ ‚è±Ô∏è 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;layout-parser&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 3K) - A Unified Toolkit for Deep Learning Based Document Image.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 8 ¬∑ üîÄ 290 ¬∑ üì¶ 70 ¬∑ üìã 93 - 48% open ¬∑ ‚è±Ô∏è 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Layout-Parser/layout-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/layoutparser&#34;&gt;PyPi&lt;/a&gt; (üì• 5.1K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install layoutparser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;mtcnn&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.8K ¬∑ üí§) - MTCNN face detection implementation for TensorFlow, as a PIP.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 450 ¬∑ üì¶ 2.2K ¬∑ üìã 100 - 62% open ¬∑ ‚è±Ô∏è 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipazc/mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mtcnn&#34;&gt;PyPi&lt;/a&gt; (üì• 30K / month ¬∑ üì¶ 43 ¬∑ ‚è±Ô∏è 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mtcnn&#34;&gt;Conda&lt;/a&gt; (üì• 4.8K ¬∑ ‚è±Ô∏è 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;lightly&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.6K) - A python library for self-supervised learning on images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 120 ¬∑ üì¶ 36 ¬∑ üìã 320 - 19% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lightly-ai/lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightly&#34;&gt;PyPi&lt;/a&gt; (üì• 3.1K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;mahotas&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 750) - Computer Vision in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 140 ¬∑ üì¶ 820 ¬∑ üìã 78 - 21% open ¬∑ ‚è±Ô∏è 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/luispedro/mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mahotas&#34;&gt;PyPi&lt;/a&gt; (üì• 9.9K / month ¬∑ üì¶ 110 ¬∑ ‚è±Ô∏è 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mahotas&#34;&gt;Conda&lt;/a&gt; (üì• 320K ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;pyvips&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 400) - python binding for libvips using cffi. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 39 ¬∑ üì¶ 320 ¬∑ üìã 280 - 37% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/libvips/pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvips&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 39 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvips&#34;&gt;Conda&lt;/a&gt; (üì• 19K ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;MMF&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 4.9K) - A modular framework for vision &amp;amp; language multimodal research from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 820 ¬∑ üì¶ 12 ¬∑ üìã 620 - 30% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmf&#34;&gt;PyPi&lt;/a&gt; (üì• 460 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 12.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;facenet-pytorch&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.9K) - Pretrained Pytorch face detection (MTCNN) and facial.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 640 ¬∑ üì• 300K ¬∑ üì¶ 770 ¬∑ üìã 150 - 40% open ¬∑ ‚è±Ô∏è 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/timesler/facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facenet-pytorch&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;pytorchvideo&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.4K) - A deep learning library for video understanding research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 260 ¬∑ üìã 130 - 41% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorchvideo&#34;&gt;PyPi&lt;/a&gt; (üì• 17K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;tensorflow-graphics&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 2.6K) - TensorFlow Graphics: Differentiable Graphics Layers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 340 ¬∑ üìã 220 - 59% open ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-graphics&#34;&gt;PyPi&lt;/a&gt; (üì• 3.4K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;icevision&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 690) - An Agnostic Computer Vision Framework - Pluggable to any Training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 39 ¬∑ üîÄ 98 ¬∑ üìã 640 - 21% open ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airctic/icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/icevision&#34;&gt;PyPi&lt;/a&gt; (üì• 3.9K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;CellProfiler&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 670) - An open-source application for biological image analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 310 ¬∑ üì• 2.7K ¬∑ üì¶ 8 ¬∑ üìã 3.1K - 6% open ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CellProfiler/CellProfiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cellprofiler&#34;&gt;PyPi&lt;/a&gt; (üì• 800 / month ¬∑ ‚è±Ô∏è 04.09.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cellprofiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;deep-daze&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 4.2K) - Simple command line tool for text to image generation using OpenAIs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 310 ¬∑ üì¶ 38 ¬∑ üìã 160 - 55% open ¬∑ ‚è±Ô∏è 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deep-daze&#34;&gt;PyPi&lt;/a&gt; (üì• 2.1K / month ¬∑ ‚è±Ô∏è 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;Image Super-Resolution&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 3.6K ¬∑ üí§) - Super-scale your images and run experiments with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 620 ¬∑ üì¶ 83 ¬∑ üìã 200 - 44% open ¬∑ ‚è±Ô∏è 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/idealo/image-super-resolution&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ISR&#34;&gt;PyPi&lt;/a&gt; (üì• 4.5K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 08.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ISR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/idealo/image-super-resolution-gpu&#34;&gt;Docker Hub&lt;/a&gt; (üì• 210 ¬∑ ‚è±Ô∏è 01.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull idealo/image-super-resolution-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;vissl&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2.6K) - VISSL is FAIRs library of extensible, modular and scalable components.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 270 ¬∑ üì¶ 7 ¬∑ üìã 140 - 33% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vissl&#34;&gt;PyPi&lt;/a&gt; (üì• 760 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 02.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;Classy Vision&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.5K) - An end-to-end PyTorch framework for image and video.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 75 ¬∑ üîÄ 260 ¬∑ üìã 110 - 46% open ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ClassyVision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/classy_vision&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/classy_vision&#34;&gt;Conda&lt;/a&gt; (üì• 13K ¬∑ ‚è±Ô∏è 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;Norfair&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.4K) - Lightweight Python library for adding real-time object tracking to any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 130 ¬∑ üì• 100 ¬∑ üìã 57 - 31% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tryolabs/norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/norfair&#34;&gt;PyPi&lt;/a&gt; (üì• 3.6K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;image-match&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.7K ¬∑ üí§) - Quickly search over billions of images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 400 ¬∑ üìã 110 - 57% open ¬∑ ‚è±Ô∏è 21.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ProvenanceLabs/image-match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/image_match&#34;&gt;PyPi&lt;/a&gt; (üì• 560 / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 13.02.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install image_match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;pycls&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.9K) - Codebase for Image Classification Research, written in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 220 ¬∑ üì¶ 5 ¬∑ üìã 81 - 30% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycls&#34;&gt;PyPi&lt;/a&gt; (üì• 510 / month ¬∑ ‚è±Ô∏è 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;DE‚´∂TR&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 8.9K) - End-to-End Object Detection with Transformers. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 1.6K ¬∑ üìã 430 - 37% open ¬∑ ‚è±Ô∏è 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;PySlowFast&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 4.8K) - PySlowFast: video understanding codebase from FAIR for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 920 ¬∑ üì¶ 7 ¬∑ üìã 510 - 50% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/SlowFast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyslowfast&#34;&gt;PyPi&lt;/a&gt; (üì• 9 / month ¬∑ ‚è±Ô∏è 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyslowfast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;scenic&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 980) - Scenic: A Jax Library for Computer Vision Research and Beyond. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 110 ¬∑ üì¶ 16 ¬∑ üìã 62 - 54% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/scenic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;Caer&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 620 ¬∑ üí§) - A lightweight Computer Vision library. Scale your models, not boilerplate. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 8 ¬∑ üîÄ 110 ¬∑ üì• 19 ¬∑ üìã 15 - 13% open ¬∑ ‚è±Ô∏è 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jasmcaus/caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caer&#34;&gt;PyPi&lt;/a&gt; (üì• 3.3K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/glfw/glfw&#34;&gt;glfw&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 9.1K) - A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Zlib&#34;&gt;‚ùóÔ∏èZlib&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aleju/imgaug&#34;&gt;imgaug&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 13K ¬∑ üíÄ) - Image augmentation for machine learning experiments. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorch3d&#34;&gt;PyTorch3D&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 6K) - PyTorch3D is FAIRs library of reusable components for deep.. &lt;code&gt;‚ùóUnlicensed&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uploadcare/pillow-simd&#34;&gt;Pillow-SIMD&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 1.8K) - The friendly PIL fork. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;‚ùóÔ∏èPIL&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainercv&#34;&gt;chainercv&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - ChainerCV: a Library for Deep Learning in Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/segmentation_models&#34;&gt;segmentation_models&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 3.9K ¬∑ üíÄ) - Segmentation models with pretrained backbones. Keras.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/imagededup&#34;&gt;Image Deduplicator&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 4K ¬∑ üíÄ) - Finding duplicate images made easy!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/luminoth&#34;&gt;Luminoth&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.4K ¬∑ üíÄ) - Deep Learning toolkit for Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hhatto/nude.py&#34;&gt;nude.py&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 860 ¬∑ üíÄ) - Nudity detection with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Oulu-IMEDS/solt&#34;&gt;solt&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 260 ¬∑ üíÄ) - Streaming over lightweight data transformations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qanastek/HugsVision&#34;&gt;HugsVision&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 160) - HugsVision is a easy to use huggingface wrapper for state-of-the-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolas-chaulet/torch-points3d&#34;&gt;Torch Points 3D&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 61 ¬∑ üê£) - Pytorch framework for doing deep learning on point.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Graph Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for graph processing, clustering, embedding, and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;networkx&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 11K) - Network Analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 590 ¬∑ üîÄ 2.6K ¬∑ üì• 60 ¬∑ üì¶ 110K ¬∑ üìã 2.9K - 12% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/networkx/networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/networkx&#34;&gt;PyPi&lt;/a&gt; (üì• 22M / month ¬∑ üì¶ 13K ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/networkx&#34;&gt;Conda&lt;/a&gt; (üì• 6.5M ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;PyTorch Geometric&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 15K) - Graph Neural Network Library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 270 ¬∑ üîÄ 2.6K ¬∑ üìã 2.6K - 37% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyg-team/pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric&#34;&gt;PyPi&lt;/a&gt; (üì• 88K / month ¬∑ üì¶ 43 ¬∑ ‚è±Ô∏è 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_geometric&#34;&gt;Conda&lt;/a&gt; (üì• 6.5K ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;dgl&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 9.6K) - Python package built to ease deep learning on graph, on top of existing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 210 ¬∑ üîÄ 2.3K ¬∑ üì¶ 6 ¬∑ üìã 1.6K - 15% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dgl&#34;&gt;PyPi&lt;/a&gt; (üì• 26K / month ¬∑ üì¶ 45 ¬∑ ‚è±Ô∏è 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;StellarGraph&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.4K ¬∑ üí§) - StellarGraph - Machine Learning on Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 360 ¬∑ üì¶ 140 ¬∑ üìã 1K - 27% open ¬∑ ‚è±Ô∏è 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stellargraph/stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stellargraph&#34;&gt;PyPi&lt;/a&gt; (üì• 20K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;pygraphistry&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.6K) - PyGraphistry is a Python library to quickly load, shape,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 160 ¬∑ üì¶ 69 ¬∑ üìã 210 - 42% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graphistry/pygraphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphistry&#34;&gt;PyPi&lt;/a&gt; (üì• 2.9K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;ogb&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.3K) - Benchmark datasets, data loaders, and evaluators for graph machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 290 ¬∑ üì¶ 300 ¬∑ üìã 210 - 3% open ¬∑ ‚è±Ô∏è 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ogb&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ogb&#34;&gt;Conda&lt;/a&gt; (üì• 7.9K ¬∑ ‚è±Ô∏è 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;Paddle Graph Learning&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.3K) - Paddle Graph Learning (PGL) is an efficient and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 26 ¬∑ üîÄ 240 ¬∑ üì¶ 26 ¬∑ üìã 120 - 39% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgl&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;Spektral&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 2.1K) - Graph Neural Networks with Keras and Tensorflow 2. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 280 ¬∑ üì¶ 120 ¬∑ üìã 230 - 19% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/danielegrattarola/spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spektral&#34;&gt;PyPi&lt;/a&gt; (üì• 6.8K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;PyKEEN&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 860) - A Python library for learning and evaluating knowledge graph embeddings. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 120 ¬∑ üì• 140 ¬∑ üìã 400 - 30% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykeen/pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykeen&#34;&gt;PyPi&lt;/a&gt; (üì• 1.6K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;PyTorch-BigGraph&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 3.1K) - Generate embeddings from large-scale graph-structured.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 410 ¬∑ üì• 130 ¬∑ üìã 190 - 28% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/PyTorch-BigGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchbiggraph&#34;&gt;PyPi&lt;/a&gt; (üì• 280K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 01.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchbiggraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;pytorch_geometric_temporal&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 1.6K) - PyTorch Geometric Temporal: Spatiotemporal Signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 230 ¬∑ üìã 110 - 10% open ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric-temporal&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric-temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;AmpliGraph&lt;/a&gt;&lt;/b&gt; (ü•à24 ¬∑ ‚≠ê 1.8K ¬∑ üí§) - Python library for Representation Learning on Knowledge.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 200 ¬∑ üì¶ 20 ¬∑ üìã 200 - 10% open ¬∑ ‚è±Ô∏è 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Accenture/AmpliGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ampligraph&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ ‚è±Ô∏è 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ampligraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;graph4nlp&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 1.3K) - Graph4nlp is the library for the easy use of Graph Neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 160 ¬∑ üìã 150 - 9% open ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graph4ai/graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graph4nlp&#34;&gt;PyPi&lt;/a&gt; (üì• 100 / month ¬∑ ‚è±Ô∏è 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;Node2Vec&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 910) - Implementation of the node2vec algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 210 ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eliorc/node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/node2vec&#34;&gt;PyPi&lt;/a&gt; (üì• 150K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/node2vec&#34;&gt;Conda&lt;/a&gt; (üì• 21K ¬∑ ‚è±Ô∏è 25.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;torch-cluster&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 520) - PyTorch Extension Library of Optimized Graph Cluster.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 95 ¬∑ üìã 100 - 13% open ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-cluster&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 27 ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_cluster&#34;&gt;Conda&lt;/a&gt; (üì• 31K ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;jraph&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 900) - A Graph Neural Network Library in Jax. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 58 ¬∑ üì¶ 18 ¬∑ üìã 22 - 45% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jraph&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jraph&#34;&gt;Conda&lt;/a&gt; (üì• 390 ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;deepsnap&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 420 ¬∑ üí§) - Python library assists deep learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 46 ¬∑ üì• 8 ¬∑ üì¶ 21 ¬∑ üìã 39 - 38% open ¬∑ ‚è±Ô∏è 19.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepsnap&#34;&gt;PyPi&lt;/a&gt; (üì• 430 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 05.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;AutoGL&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 800) - An autoML framework &amp;amp; toolkit for machine learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 91 ¬∑ üìã 20 - 30% open ¬∑ ‚è±Ô∏è 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/THUMNLab/AutoGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-graph-learning&#34;&gt;PyPi&lt;/a&gt; (üì• 6 / month ¬∑ ‚è±Ô∏è 23.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-graph-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GraphGym&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 1K) - Platform for designing and evaluating Graph Neural Networks (GNN). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 5 ¬∑ üîÄ 120 ¬∑ üì• 13 ¬∑ üì¶ 2 ¬∑ üìã 26 - 15% open ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/GraphGym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphgym&#34;&gt;PyPi&lt;/a&gt; (üì• 56 / month ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphgym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;kglib&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 500 ¬∑ üí§) - Grakn Knowledge Graph Library (ML R&amp;amp;D). &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 88 ¬∑ üì• 210 ¬∑ üìã 62 - 19% open ¬∑ ‚è±Ô∏è 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vaticle/kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/grakn-kglib&#34;&gt;PyPi&lt;/a&gt; (üì• 44 / month ¬∑ ‚è±Ô∏è 19.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install grakn-kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;ptgnn&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 320) - A PyTorch Graph Neural Network Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 38 ¬∑ üì¶ 1 ¬∑ üìã 7 - 28% open ¬∑ ‚è±Ô∏è 01.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ptgnn&#34;&gt;PyPi&lt;/a&gt; (üì• 97 / month ¬∑ ‚è±Ô∏è 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 15 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/igraph/python-igraph&#34;&gt;igraph&lt;/a&gt;&lt;/b&gt; (ü•á31 ¬∑ ‚≠ê 970) - Python interface for igraph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;‚ùóÔ∏èGPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kozea/pygal&#34;&gt;pygal&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.5K) - PYthon svg GrAph plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/karateclub&#34;&gt;Karate Club&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 1.6K) - Karate Club: An API Oriented Open-source Python Framework for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/divelab/DIG&#34;&gt;DIG&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.1K) - A library for graph deep learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/phanein/deepwalk&#34;&gt;DeepWalk&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.4K ¬∑ üíÄ) - DeepWalk - Deep Learning for Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/graph_nets&#34;&gt;graph-nets&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 5.1K ¬∑ üíÄ) - Build Graph Nets in Tensorflow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IBCNServices/pyRDF2Vec&#34;&gt;pyRDF2Vec&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 150) - Python Implementation and Extension of RDF2Vec. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gsi-upm/sematch&#34;&gt;Sematch&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 390 ¬∑ üíÄ) - semantic similarity framework for knowledge graph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepgraph/deepgraph&#34;&gt;DeepGraph&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 250 ¬∑ üí§) - Analyze Data with Pandas-based Networks. Documentation:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shenweichen/GraphEmbedding&#34;&gt;GraphEmbedding&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 2.8K ¬∑ üíÄ) - Implementation and experiments of graph embedding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenKE&#34;&gt;OpenKE&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 3K ¬∑ üíÄ) - An Open-Source Package for Knowledge Embedding (KE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alibaba/euler&#34;&gt;Euler&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 2.8K ¬∑ üíÄ) - A distributed graph deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamleif/GraphSAGE&#34;&gt;GraphSAGE&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 2.7K ¬∑ üíÄ) - Representation learning on large graphs using stochastic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNE&#34;&gt;OpenNE&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 1.6K ¬∑ üíÄ) - An Open-Source Package for Network Embedding (NE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DeepGraphLearning/graphvite&#34;&gt;GraphVite&lt;/a&gt;&lt;/b&gt; (ü•â12 ¬∑ ‚≠ê 1K ¬∑ üíÄ) - GraphVite: A General and High-performance Graph Embedding System. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Audio Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for audio analysis, manipulation, transformation, and extraction, as well as speech recognition and music generation tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;espnet&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 5.1K) - End-to-End Speech Processing Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 270 ¬∑ üîÄ 1.6K ¬∑ üì• 76 ¬∑ üì¶ 50 ¬∑ üìã 1.8K - 17% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/espnet/espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/espnet&#34;&gt;PyPi&lt;/a&gt; (üì• 8.1K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;DeepSpeech&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 20K) - DeepSpeech is an open source embedded (offline, on-device).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 160 ¬∑ üîÄ 3.5K ¬∑ üì• 840K ¬∑ üì¶ 750 ¬∑ üìã 2.1K - 5% open ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mozilla/DeepSpeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeech&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 37 ¬∑ ‚è±Ô∏è 19.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepspeech&#34;&gt;Conda&lt;/a&gt; (üì• 520 ¬∑ ‚è±Ô∏è 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;torchaudio&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 1.7K) - Data manipulation and transformation for audio signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 160 ¬∑ üîÄ 420 ¬∑ üìã 640 - 27% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/audio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchaudio&#34;&gt;PyPi&lt;/a&gt; (üì• 510K / month ¬∑ üì¶ 140 ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchaudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;Magenta&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 18K) - Magenta: Music and Art Generation with Machine Intelligence. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 3.6K ¬∑ üì¶ 360 ¬∑ üìã 920 - 37% open ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/magenta&#34;&gt;PyPi&lt;/a&gt; (üì• 4.7K / month ¬∑ üì¶ 36 ¬∑ ‚è±Ô∏è 12.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;librosa&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 5.2K) - Python library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 96 ¬∑ üîÄ 800 ¬∑ üìã 970 - 4% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/librosa/librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/librosa&#34;&gt;PyPi&lt;/a&gt; (üì• 950K / month ¬∑ üì¶ 1.2K ¬∑ ‚è±Ô∏è 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/librosa&#34;&gt;Conda&lt;/a&gt; (üì• 460K ¬∑ ‚è±Ô∏è 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;speechbrain&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 4.1K) - A PyTorch-based Speech Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 160 ¬∑ üîÄ 760 ¬∑ üì¶ 180 ¬∑ üìã 670 - 21% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/speechbrain/speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/speechbrain&#34;&gt;PyPi&lt;/a&gt; (üì• 9.4K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;SpeechRecognition&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 6.3K) - Speech recognition module for Python, supporting several.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 45 ¬∑ üîÄ 2K ¬∑ üìã 520 - 45% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Uberi/speech_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/SpeechRecognition&#34;&gt;PyPi&lt;/a&gt; (üì• 270K / month ¬∑ üì¶ 700 ¬∑ ‚è±Ô∏è 05.12.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install SpeechRecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/speechrecognition&#34;&gt;Conda&lt;/a&gt; (üì• 140K ¬∑ ‚è±Ô∏è 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge speechrecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;Pydub&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 6.1K) - Manipulate audio with a simple and easy high level interface. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 92 ¬∑ üîÄ 810 ¬∑ üì¶ 12K ¬∑ üìã 480 - 45% open ¬∑ ‚è±Ô∏è 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jiaaro/pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydub&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9M / month ¬∑ üì¶ 900 ¬∑ ‚è±Ô∏è 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydub&#34;&gt;Conda&lt;/a&gt; (üì• 23K ¬∑ ‚è±Ô∏è 13.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;pyAudioAnalysis&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 4.8K) - Python Audio Analysis Library: Feature Extraction,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 26 ¬∑ üîÄ 1.1K ¬∑ üì¶ 270 ¬∑ üìã 290 - 59% open ¬∑ ‚è±Ô∏è 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tyiannak/pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyAudioAnalysis&#34;&gt;PyPi&lt;/a&gt; (üì• 27K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;Coqui TTS&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 4.9K) - - a deep learning toolkit for Text-to-Speech, battle-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 88 ¬∑ üîÄ 500 ¬∑ üì• 160K ¬∑ üìã 330 - 8% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coqui-ai/TTS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tts&#34;&gt;PyPi&lt;/a&gt; (üì• 6K / month ¬∑ ‚è±Ô∏è 14.07.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tts&#34;&gt;Conda&lt;/a&gt; (üì• 1.7K ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;Porcupine&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.7K) - On-device wake word detection powered by deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 31 ¬∑ üîÄ 390 ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Picovoice/Porcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pvporcupine&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pvporcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;tinytag&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 530) - Read audio and music meta data and duration of MP3, OGG, OPUS, MP4, M4A,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 89 ¬∑ üì¶ 520 ¬∑ üìã 90 - 12% open ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/devsnd/tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tinytag&#34;&gt;PyPi&lt;/a&gt; (üì• 94K / month ¬∑ üì¶ 70 ¬∑ ‚è±Ô∏è 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;audioread&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 400) - cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 93 ¬∑ üì¶ 8.5K ¬∑ üìã 79 - 39% open ¬∑ ‚è±Ô∏è 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/beetbox/audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audioread&#34;&gt;PyPi&lt;/a&gt; (üì• 920K / month ¬∑ üì¶ 320 ¬∑ ‚è±Ô∏è 20.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/audioread&#34;&gt;Conda&lt;/a&gt; (üì• 430K ¬∑ ‚è±Ô∏è 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;spleeter&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 20K) - Deezer source separation library including pretrained models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 2.2K ¬∑ üì• 1.7M ¬∑ üìã 680 - 20% open ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deezer/spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spleeter&#34;&gt;PyPi&lt;/a&gt; (üì• 13K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spleeter&#34;&gt;Conda&lt;/a&gt; (üì• 64K ¬∑ ‚è±Ô∏è 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;DDSP&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 2.2K) - DDSP: Differentiable Digital Signal Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 31 ¬∑ üîÄ 250 ¬∑ üì¶ 26 ¬∑ üìã 140 - 17% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ddsp&#34;&gt;PyPi&lt;/a&gt; (üì• 2.8K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ddsp&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;audiomentations&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 980) - A Python library for audio data augmentation. Inspired by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 120 ¬∑ üì¶ 130 ¬∑ üìã 120 - 24% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iver56/audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audiomentations&#34;&gt;PyPi&lt;/a&gt; (üì• 4.5K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;Madmom&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 900) - Python audio and music signal processing library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 150 ¬∑ üì¶ 200 ¬∑ üìã 260 - 21% open ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CPJKU/madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madmom&#34;&gt;PyPi&lt;/a&gt; (üì• 2.7K / month ¬∑ üì¶ 27 ¬∑ ‚è±Ô∏è 14.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;python-soundfile&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 450) - SoundFile is an audio library based on libsndfile, CFFI, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 68 ¬∑ üì• 3.2K ¬∑ üìã 170 - 39% open ¬∑ ‚è±Ô∏è 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bastibe/python-soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/soundfile&#34;&gt;PyPi&lt;/a&gt; (üì• 1M / month ¬∑ üì¶ 540 ¬∑ ‚è±Ô∏è 27.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/pysoundfile&#34;&gt;Conda&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda pysoundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;kapre&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 820) - kapre: Keras Audio Preprocessors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 140 ¬∑ üì• 22 ¬∑ üì¶ 1.6K ¬∑ üìã 94 - 12% open ¬∑ ‚è±Ô∏è 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keunwoochoi/kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kapre&#34;&gt;PyPi&lt;/a&gt; (üì• 3.7K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;nnAudio&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 680) - Audio processing by using pytorch 1D convolution network. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 66 ¬∑ üì¶ 53 ¬∑ üìã 49 - 24% open ¬∑ ‚è±Ô∏è 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KinWaiCheuk/nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnAudio&#34;&gt;PyPi&lt;/a&gt; (üì• 25K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aubio/aubio&#34;&gt;aubio&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.7K) - a library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MTG/essentia&#34;&gt;Essentia&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2.1K) - C++ library for audio and music analysis, description and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jameslyons/python_speech_features&#34;&gt;python_speech_features&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 2.1K ¬∑ üíÄ) - This library provides common speech features for ASR.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/TTS&#34;&gt;TTS&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 6K ¬∑ üíÄ) - Deep learning for Text to Speech (Discussion forum:.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/worldveil/dejavu&#34;&gt;Dejavu&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 5.7K ¬∑ üíÄ) - Audio fingerprinting and recognition in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parisson/TimeSide&#34;&gt;TimeSide&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 320) - Scalable audio processing framework written in Python with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmcfee/muda&#34;&gt;Muda&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 210 ¬∑ üí§) - A library for augmenting annotated audio data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adefossez/julius&#34;&gt;Julius&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 270) - Fast PyTorch based DSP for audio and 1D signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Geospatial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to load, process, analyze, and write geographic data as well as libraries for spatial analysis, map visualization, and geocoding.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;pydeck&lt;/a&gt;&lt;/b&gt; (ü•á42 ¬∑ ‚≠ê 9.8K) - WebGL2 powered visualization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 200 ¬∑ üîÄ 1.8K ¬∑ üì¶ 4.1K ¬∑ üìã 2.4K - 6% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/visgl/deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydeck&#34;&gt;PyPi&lt;/a&gt; (üì• 970K / month ¬∑ üì¶ 23 ¬∑ ‚è±Ô∏è 25.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydeck&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/deck.gl&#34;&gt;npm&lt;/a&gt; (üì• 310K / month ¬∑ üì¶ 380 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;Shapely&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 2.8K) - Manipulation and analysis of geometric objects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 460 ¬∑ üì• 40 ¬∑ üì¶ 30K ¬∑ üìã 880 - 18% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shapely/shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapely&#34;&gt;PyPi&lt;/a&gt; (üì• 6.8M / month ¬∑ üì¶ 3.8K ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shapely&#34;&gt;Conda&lt;/a&gt; (üì• 3.7M ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;Rasterio&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 1.7K) - Rasterio reads and writes geospatial raster datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 470 ¬∑ üì• 760 ¬∑ üì¶ 4.9K ¬∑ üìã 1.5K - 9% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasterio/rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasterio&#34;&gt;PyPi&lt;/a&gt; (üì• 740K / month ¬∑ üì¶ 780 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rasterio&#34;&gt;Conda&lt;/a&gt; (üì• 1.5M ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;folium&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 5.8K) - Python Data. Leaflet.js Maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 2.1K ¬∑ üì¶ 16K ¬∑ üìã 950 - 23% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-visualization/folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/folium&#34;&gt;PyPi&lt;/a&gt; (üì• 960K / month ¬∑ üì¶ 660 ¬∑ ‚è±Ô∏è 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/folium&#34;&gt;Conda&lt;/a&gt; (üì• 780K ¬∑ ‚è±Ô∏è 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GeoPandas&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 3.2K) - Python tools for geographic data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 720 ¬∑ üì• 1.5K ¬∑ üì¶ 14K ¬∑ üìã 1.3K - 30% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopandas/geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopandas&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3M / month ¬∑ üì¶ 1.1K ¬∑ ‚è±Ô∏è 16.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopandas&#34;&gt;Conda&lt;/a&gt; (üì• 1.6M ¬∑ ‚è±Ô∏è 01.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;pyproj&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 760) - Python interface to PROJ (cartographic projections and coordinate.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 180 ¬∑ üì¶ 14K ¬∑ üìã 490 - 2% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyproj4/pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyproj&#34;&gt;PyPi&lt;/a&gt; (üì• 4.5M / month ¬∑ üì¶ 1.7K ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyproj&#34;&gt;Conda&lt;/a&gt; (üì• 3.4M ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;geopy&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 3.6K) - Geocoding library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 570 ¬∑ üì¶ 38K ¬∑ üìã 260 - 10% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopy/geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopy&#34;&gt;PyPi&lt;/a&gt; (üì• 3.6M / month ¬∑ üì¶ 3.9K ¬∑ ‚è±Ô∏è 11.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopy&#34;&gt;Conda&lt;/a&gt; (üì• 710K ¬∑ ‚è±Ô∏è 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;ipyleaflet&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.3K) - A Jupyter - Leaflet.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 330 ¬∑ üì¶ 1.8K ¬∑ üìã 490 - 38% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyleaflet&#34;&gt;PyPi&lt;/a&gt; (üì• 72K / month ¬∑ üì¶ 110 ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyleaflet&#34;&gt;Conda&lt;/a&gt; (üì• 820K ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-leaflet&#34;&gt;npm&lt;/a&gt; (üì• 51K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-leaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;Fiona&lt;/a&gt;&lt;/b&gt; (ü•â32 ¬∑ ‚≠ê 920) - Fiona reads and writes geographic data files. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 66 ¬∑ üîÄ 180 ¬∑ üì¶ 8.6K ¬∑ üìã 680 - 11% open ¬∑ ‚è±Ô∏è 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Toblerity/Fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiona&#34;&gt;PyPi&lt;/a&gt; (üì• 2.6M / month ¬∑ üì¶ 780 ¬∑ ‚è±Ô∏è 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fiona&#34;&gt;Conda&lt;/a&gt; (üì• 2.9M ¬∑ ‚è±Ô∏è 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;ArcGIS API&lt;/a&gt;&lt;/b&gt; (ü•â31 ¬∑ ‚≠ê 1.3K) - Documentation and samples for ArcGIS API for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 80 ¬∑ üîÄ 880 ¬∑ üì• 3.4K ¬∑ üìã 520 - 23% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Esri/arcgis-python-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arcgis&#34;&gt;PyPi&lt;/a&gt; (üì• 75K / month ¬∑ üì¶ 22 ¬∑ ‚è±Ô∏è 03.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arcgis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/esridocker/arcgis-api-python-notebook&#34;&gt;Docker Hub&lt;/a&gt; (üì• 7K ¬∑ ‚≠ê 33 ¬∑ ‚è±Ô∏è 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull esridocker/arcgis-api-python-notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;geojson&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 720) - Python bindings and utilities for GeoJSON. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 95 ¬∑ üì¶ 9.3K ¬∑ üìã 84 - 26% open ¬∑ ‚è±Ô∏è 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jazzband/geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geojson&#34;&gt;PyPi&lt;/a&gt; (üì• 740K / month ¬∑ üì¶ 1.1K ¬∑ ‚è±Ô∏è 09.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geojson&#34;&gt;Conda&lt;/a&gt; (üì• 510K ¬∑ ‚è±Ô∏è 11.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;PySAL&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1K) - PySAL: Python Spatial Analysis Library Meta-Package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 75 ¬∑ üîÄ 270 ¬∑ üìã 610 - 1% open ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pysal/pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pysal&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pysal&#34;&gt;Conda&lt;/a&gt; (üì• 440K ¬∑ ‚è±Ô∏è 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GeoViews&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 410) - Simple, concise geographical visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 68 ¬∑ üìã 300 - 34% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geoviews&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 26 ¬∑ ‚è±Ô∏è 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geoviews&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;EarthPy&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 360) - A package built to support working with spatial data using open source.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 40 ¬∑ üîÄ 140 ¬∑ üì¶ 140 ¬∑ üìã 220 - 8% open ¬∑ ‚è±Ô∏è 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/earthlab/earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/earthpy&#34;&gt;PyPi&lt;/a&gt; (üì• 7.8K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/earthpy&#34;&gt;Conda&lt;/a&gt; (üì• 43K ¬∑ ‚è±Ô∏è 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DenisCarriere/geocoder&#34;&gt;Geocoder&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.4K ¬∑ üíÄ) - Python Geocoder. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytroll/satpy&#34;&gt;Satpy&lt;/a&gt;&lt;/b&gt; (ü•â30 ¬∑ ‚≠ê 840) - Python package for earth-observing satellite data processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sentinelsat/sentinelsat&#34;&gt;Sentinelsat&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 760) - Search and download Copernicus Sentinel satellite images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pbugnion/gmaps&#34;&gt;gmaps&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 740 ¬∑ üíÄ) - Google maps for Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mapbox/mapboxgl-jupyter&#34;&gt;Mapbox GL&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 610 ¬∑ üíÄ) - Use Mapbox GL JS to visualize data in a Python Jupyter notebook. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geospace-code/pymap3d&#34;&gt;pymap3d&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 250) - pure-Python (Numpy optional) 3D coordinate conversions for geospace ecef.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andrea-cuttone/geoplotlib&#34;&gt;geoplotlib&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 960 ¬∑ üíÄ) - python toolbox for visualizing geographical data and making maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marceloprates/prettymaps&#34;&gt;prettymaps&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 8K) - A small set of Python functions to draw pretty maps from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Financial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for algorithmic stock/crypto trading, risk analytics, backtesting, technical analysis, and other tasks on financial data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;yfinance&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 7.1K) - Download market data from Yahoo! Finances API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 53 ¬∑ üîÄ 1.5K ¬∑ üì¶ 12K ¬∑ üìã 780 - 56% open ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ranaroussi/yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yfinance&#34;&gt;PyPi&lt;/a&gt; (üì• 330K / month ¬∑ üì¶ 120 ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/ranaroussi/yfinance&#34;&gt;Conda&lt;/a&gt; (üì• 43K ¬∑ ‚è±Ô∏è 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c ranaroussi yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;Qlib&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 8.6K) - Qlib is an AI-oriented quantitative investment platform, which aims to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 94 ¬∑ üîÄ 1.5K ¬∑ üì• 280 ¬∑ üì¶ 17 ¬∑ üìã 550 - 29% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/qlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqlib&#34;&gt;PyPi&lt;/a&gt; (üì• 2.7K / month ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;ta&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 3K) - Technical Analysis Library using Pandas and Numpy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 700 ¬∑ üì¶ 1.2K ¬∑ üìã 210 - 53% open ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bukosabino/ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ta&#34;&gt;PyPi&lt;/a&gt; (üì• 76K / month ¬∑ üì¶ 33 ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ta&#34;&gt;Conda&lt;/a&gt; (üì• 3.1K ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;Alpha Vantage&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 3.6K ¬∑ üí§) - A python wrapper for Alpha Vantage API for financial data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 39 ¬∑ üîÄ 640 ¬∑ üìã 260 - 5% open ¬∑ ‚è±Ô∏è 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RomelTorres/alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alpha_vantage&#34;&gt;PyPi&lt;/a&gt; (üì• 15K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 26.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/alpha_vantage&#34;&gt;Conda&lt;/a&gt; (üì• 1.2K ¬∑ ‚è±Ô∏è 14.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;IB-insync&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.8K) - Python sync/async framework for Interactive Brokers API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 480 ¬∑ üìã 400 - 1% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/erdewit/ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ib_insync&#34;&gt;PyPi&lt;/a&gt; (üì• 6.6K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 28.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ib-insync&#34;&gt;Conda&lt;/a&gt; (üì• 16K ¬∑ ‚è±Ô∏è 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ib-insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;ffn&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.1K ¬∑ üìà) - ffn - a financial function library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 26 ¬∑ üîÄ 200 ¬∑ üì¶ 200 ¬∑ üìã 97 - 17% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ffn&#34;&gt;PyPi&lt;/a&gt; (üì• 29K / month ¬∑ üì¶ 25 ¬∑ ‚è±Ô∏è 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ffn&#34;&gt;Conda&lt;/a&gt; (üì• 840 ¬∑ ‚è±Ô∏è 22.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;bt&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.4K) - bt - flexible backtesting for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 310 ¬∑ üì¶ 110 ¬∑ üìã 280 - 19% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bt&#34;&gt;PyPi&lt;/a&gt; (üì• 4.4K / month ¬∑ üì¶ 21 ¬∑ ‚è±Ô∏è 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bt&#34;&gt;Conda&lt;/a&gt; (üì• 4.3K ¬∑ ‚è±Ô∏è 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;TensorTrade&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 3.9K) - An open source reinforcement learning framework for training,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 61 ¬∑ üîÄ 880 ¬∑ üì¶ 36 ¬∑ üìã 230 - 14% open ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensortrade-org/tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensortrade&#34;&gt;PyPi&lt;/a&gt; (üì• 550 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensortrade&#34;&gt;Conda&lt;/a&gt; (üì• 1.1K ¬∑ ‚è±Ô∏è 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;Enigma Catalyst&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.3K ¬∑ üí§) - An Algorithmic Trading Library for Crypto-Assets in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 700 ¬∑ üì¶ 24 ¬∑ üìã 490 - 27% open ¬∑ ‚è±Ô∏è 22.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scrtlabs/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/enigma-catalyst&#34;&gt;PyPi&lt;/a&gt; (üì• 560 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 11.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install enigma-catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;stockstats&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 990) - Supply a wrapper ``StockDataFrame`` based on the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 8 ¬∑ üîÄ 260 ¬∑ üì¶ 460 ¬∑ üìã 85 - 9% open ¬∑ ‚è±Ô∏è 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jealous/stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stockstats&#34;&gt;PyPi&lt;/a&gt; (üì• 8.2K / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;tf-quant-finance&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 3.1K) - High-performance TensorFlow library for quantitative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 39 ¬∑ üîÄ 420 ¬∑ üìã 44 - 50% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-quant-finance&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;Crypto Signals&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 4K ¬∑ üí§) - Github.com/CryptoSignal - #1 Quant Trading &amp;amp; Technical.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 1K ¬∑ üìã 260 - 20% open ¬∑ ‚è±Ô∏è 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CryptoSignal/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/shadowreaver/crypto-signal&#34;&gt;Docker Hub&lt;/a&gt; (üì• 140K ¬∑ ‚≠ê 7 ¬∑ ‚è±Ô∏è 03.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull shadowreaver/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;finmarketpy&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 2.9K) - Python library for backtesting trading strategies &amp;amp; analyzing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 450 ¬∑ üì• 40 ¬∑ üì¶ 5 ¬∑ üìã 26 - 88% open ¬∑ ‚è±Ô∏è 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cuemacro/finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finmarketpy&#34;&gt;PyPi&lt;/a&gt; (üì• 110 / month ¬∑ ‚è±Ô∏è 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/zipline&#34;&gt;zipline&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 15K ¬∑ üíÄ) - Zipline, a Pythonic Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mementum/backtrader&#34;&gt;backtrader&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 8.8K ¬∑ üí§) - Python Backtesting library for trading strategies. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/pyfolio&#34;&gt;pyfolio&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 4.4K ¬∑ üíÄ) - Portfolio and risk analytics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bashtage/arch&#34;&gt;arch&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 920) - ARCH models in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=NCSA&#34;&gt;‚ùóÔ∏èNCSA&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/alphalens&#34;&gt;Alphalens&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 2.3K ¬∑ üíÄ) - Performance analysis of predictive (alpha) stock factors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/empyrical&#34;&gt;empyrical&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 920 ¬∑ üíÄ) - Common financial risk and performance metrics. Used by zipline.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gbeced/pyalgotrade&#34;&gt;PyAlgoTrade&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 3.7K ¬∑ üíÄ) - Python Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peerchemist/finta&#34;&gt;FinTA&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.6K ¬∑ üí§) - Common financial technical indicators implemented in Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kernc/backtesting.py&#34;&gt;Backtesting.py&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 2.5K) - Backtest trading strategies in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmilthaler/FinQuant&#34;&gt;FinQuant&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 770 ¬∑ üíÄ) - A program for financial portfolio management, analysis and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tradytics/surpriver&#34;&gt;surpriver&lt;/a&gt;&lt;/b&gt; (ü•â12 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - Find big moving stocks before they move using machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alvarobartt/pyrtfolio&#34;&gt;pyrtfolio&lt;/a&gt;&lt;/b&gt; (ü•â7 ¬∑ ‚≠ê 110 ¬∑ üíÄ) - Python package to generate stock portfolios. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Time Series Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for forecasting, anomaly detection, feature extraction, and machine learning on time-series and sequential data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;sktime&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 5.3K) - A unified framework for machine learning with time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 850 ¬∑ üì• 76 ¬∑ üì¶ 440 ¬∑ üìã 1.2K - 35% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alan-turing-institute/sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sktime&#34;&gt;PyPi&lt;/a&gt; (üì• 160K / month ¬∑ üì¶ 23 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sktime-all-extras&#34;&gt;Conda&lt;/a&gt; (üì• 4K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sktime-all-extras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;Prophet&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 14K ¬∑ üìà) - Tool for producing high quality forecasts for time series data that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 4.2K ¬∑ üì• 650 ¬∑ üìã 1.8K - 11% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fbprophet&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4M / month ¬∑ üì¶ 130 ¬∑ ‚è±Ô∏è 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fbprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prophet&#34;&gt;Conda&lt;/a&gt; (üì• 47K ¬∑ ‚è±Ô∏è 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;pmdarima&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 1.2K) - A statistical library designed to fill the void in Pythons time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 210 ¬∑ üì¶ 2.1K ¬∑ üìã 280 - 9% open ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alkaline-ml/pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pmdarima&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2M / month ¬∑ üì¶ 51 ¬∑ ‚è±Ô∏è 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pmdarima&#34;&gt;Conda&lt;/a&gt; (üì• 39K ¬∑ ‚è±Ô∏è 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;NeuralProphet&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.3K) - NeuralProphet: A simple forecasting package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 280 ¬∑ üì¶ 82 ¬∑ üìã 270 - 26% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ourownstory/neural_prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralprophet&#34;&gt;PyPi&lt;/a&gt; (üì• 73K / month ¬∑ ‚è±Ô∏è 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;tslearn&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.1K) - A machine learning toolkit dedicated to time-series data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 270 ¬∑ üì¶ 490 ¬∑ üìã 270 - 32% open ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tslearn-team/tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tslearn&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tslearn&#34;&gt;Conda&lt;/a&gt; (üì• 250K ¬∑ ‚è±Ô∏è 15.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;pytorch-forecasting&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2K) - Time series forecasting with PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 320 ¬∑ üìã 470 - 46% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jdb78/pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-forecasting&#34;&gt;PyPi&lt;/a&gt; (üì• 62K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-forecasting&#34;&gt;Conda&lt;/a&gt; (üì• 19K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;tsfresh&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 6.4K) - Automatic extraction of relevant features from time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 82 ¬∑ üîÄ 970 ¬∑ üìã 480 - 8% open ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/blue-yonder/tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfresh&#34;&gt;PyPi&lt;/a&gt; (üì• 410K / month ¬∑ üì¶ 55 ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tsfresh&#34;&gt;Conda&lt;/a&gt; (üì• 170K ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;Darts&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 4.1K ¬∑ üìâ) - A python library for easy manipulation and forecasting of time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 53 ¬∑ üîÄ 410 ¬∑ üì¶ 57 ¬∑ üìã 460 - 35% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unit8co/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/u8darts&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install u8darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/u8darts-all&#34;&gt;Conda&lt;/a&gt; (üì• 4.3K ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge u8darts-all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/unit8/darts&#34;&gt;Docker Hub&lt;/a&gt; (üì• 340 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull unit8/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;STUMPY&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.3K) - STUMPY is a powerful and scalable Python library for modern time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 220 ¬∑ üìã 320 - 11% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/TDAmeritrade/stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stumpy&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/stumpy&#34;&gt;Conda&lt;/a&gt; (üì• 39K ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GluonTS&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.7K) - Probabilistic time series modeling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 86 ¬∑ üîÄ 560 ¬∑ üìã 730 - 40% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/gluon-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonts&#34;&gt;PyPi&lt;/a&gt; (üì• 85K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/gluonts&#34;&gt;Conda&lt;/a&gt; (üì• 34 ¬∑ ‚è±Ô∏è 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;pyts&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 1.3K) - A Python package for time series classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 130 ¬∑ üì¶ 200 ¬∑ üìã 61 - 57% open ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/johannfaouzi/pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyts&#34;&gt;PyPi&lt;/a&gt; (üì• 140K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyts&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;Streamz&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.1K) - Real-time stream processing for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 45 ¬∑ üîÄ 130 ¬∑ üì¶ 290 ¬∑ üìã 250 - 41% open ¬∑ ‚è±Ô∏è 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-streamz/streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamz&#34;&gt;PyPi&lt;/a&gt; (üì• 13K / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/streamz&#34;&gt;Conda&lt;/a&gt; (üì• 300K ¬∑ ‚è±Ô∏è 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;StatsForecast&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 670 ¬∑ üê£) - Lightning fast forecasting with statistical and econometric.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 9 ¬∑ üîÄ 41 ¬∑ üìã 40 - 32% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Nixtla/statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsforecast&#34;&gt;PyPi&lt;/a&gt; (üì• 47K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsforecast&#34;&gt;Conda&lt;/a&gt; (üì• 4.3K ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;greykite&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.5K) - A flexible, intuitive and fast forecasting library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 68 ¬∑ üì¶ 9 ¬∑ üìã 61 - 14% open ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/linkedin/greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/greykite&#34;&gt;PyPi&lt;/a&gt; (üì• 53K / month ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;TSFEL&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 500) - An intuitive library to extract features from time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 65 ¬∑ üì¶ 36 ¬∑ üìã 50 - 14% open ¬∑ ‚è±Ô∏è 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fraunhoferportugal/tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfel&#34;&gt;PyPi&lt;/a&gt; (üì• 4.6K / month ¬∑ ‚è±Ô∏è 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;Auto TS&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 430) - Automatically build ARIMA, SARIMAX, VAR, FB Prophet and XGBoost.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 80 ¬∑ üìã 72 - 13% open ¬∑ ‚è±Ô∏è 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_TS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-ts&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2K / month ¬∑ ‚è±Ô∏è 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;atspy&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 440) - AtsPy: Automated Time Series Models in Python (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 5 ¬∑ üîÄ 85 ¬∑ üì¶ 6 ¬∑ üìã 20 - 90% open ¬∑ ‚è±Ô∏è 18.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/atspy&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3K / month ¬∑ ‚è±Ô∏è 24.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RJT1990/pyflux&#34;&gt;PyFlux&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 2K ¬∑ üíÄ) - Open source time series library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/luminol&#34;&gt;luminol&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1K ¬∑ üíÄ) - Anomaly Detection and Correlation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmbee/seglearn&#34;&gt;seglearn&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 520 ¬∑ üíÄ) - Python module for machine learning time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/X-DataInitiative/tick&#34;&gt;tick&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 380 ¬∑ üíÄ) - Module for statistical learning, with a particular emphasis on time-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast&#34;&gt;NeuralForecast&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 610) - Scalable and user friendly neural forecasting algorithms.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wwrechard/pydlm&#34;&gt;pydlm&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 420 ¬∑ üíÄ) - A python library for Bayesian time series modeling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/adtk&#34;&gt;ADTK&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 820 ¬∑ üíÄ) - A Python toolkit for rule-based/unsupervised anomaly detection in time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/target/matrixprofile-ts&#34;&gt;matrixprofile-ts&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 680 ¬∑ üíÄ) - A Python library for detecting patterns and anomalies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/tsaug&#34;&gt;tsaug&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 240 ¬∑ üíÄ) - A Python package for time series augmentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Medical Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing and analyzing medical data such as MRIs, EEGs, genomic data, and other medical imaging formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;MNE&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 1.9K) - MNE: Magnetoencephalography (MEG) and Electroencephalography (EEG) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 290 ¬∑ üîÄ 1K ¬∑ üì¶ 1.6K ¬∑ üìã 4.1K - 9% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mne-tools/mne-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mne&#34;&gt;PyPi&lt;/a&gt; (üì• 51K / month ¬∑ üì¶ 210 ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mne&#34;&gt;Conda&lt;/a&gt; (üì• 200K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;Nilearn&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 860) - Machine learning for NeuroImaging in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 180 ¬∑ üîÄ 460 ¬∑ üì• 58 ¬∑ üì¶ 1.5K ¬∑ üìã 1.6K - 17% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nilearn/nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nilearn&#34;&gt;PyPi&lt;/a&gt; (üì• 21K / month ¬∑ üì¶ 240 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nilearn&#34;&gt;Conda&lt;/a&gt; (üì• 150K ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;NIPYPE&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 630 ¬∑ üìâ) - Workflows and interfaces for neuroimaging packages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 240 ¬∑ üîÄ 490 ¬∑ üì¶ 930 ¬∑ üìã 1.3K - 29% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nipype&#34;&gt;PyPi&lt;/a&gt; (üì• 51K / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nipype&#34;&gt;Conda&lt;/a&gt; (üì• 470K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;MONAI&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 3K) - AI Toolkit for Healthcare Imaging. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 96 ¬∑ üîÄ 590 ¬∑ üì¶ 320 ¬∑ üìã 1.7K - 12% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Project-MONAI/MONAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/monai&#34;&gt;PyPi&lt;/a&gt; (üì• 50K / month ¬∑ üì¶ 17 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/monai&#34;&gt;Conda&lt;/a&gt; (üì• 670 ¬∑ ‚è±Ô∏è 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;Lifelines&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.9K) - Survival analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 470 ¬∑ üì¶ 890 ¬∑ üìã 860 - 26% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CamDavidsonPilon/lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lifelines&#34;&gt;PyPi&lt;/a&gt; (üì• 330K / month ¬∑ üì¶ 110 ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lifelines&#34;&gt;Conda&lt;/a&gt; (üì• 190K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;Hail&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 800) - Scalable genomic data analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 79 ¬∑ üîÄ 210 ¬∑ üì¶ 68 ¬∑ üìã 2K - 2% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hail-is/hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hail&#34;&gt;PyPi&lt;/a&gt; (üì• 33K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;NiBabel&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 470) - Python package to access a cacophony of neuro-imaging file formats. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 95 ¬∑ üîÄ 230 ¬∑ üì¶ 7.2K ¬∑ üìã 460 - 30% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nibabel&#34;&gt;PyPi&lt;/a&gt; (üì• 180K / month ¬∑ üì¶ 970 ¬∑ ‚è±Ô∏è 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nibabel&#34;&gt;Conda&lt;/a&gt; (üì• 430K ¬∑ ‚è±Ô∏è 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;DIPY&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 510) - DIPY is the paragon 3D/4D+ imaging library in Python. Contains generic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 360 ¬∑ üì¶ 560 ¬∑ üìã 810 - 18% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dipy/dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dipy&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 80 ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dipy&#34;&gt;Conda&lt;/a&gt; (üì• 300K ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;DeepVariant&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.5K) - DeepVariant is an analysis pipeline that uses a deep neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 610 ¬∑ üì• 3.9K ¬∑ üìã 490 - 0% open ¬∑ ‚è±Ô∏è 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/deepvariant&#34;&gt;Conda&lt;/a&gt; (üì• 41K ¬∑ ‚è±Ô∏è 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;Medical Detection Toolkit&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 1.1K) - The Medical Detection Toolkit contains 2D + 3D.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3 ¬∑ üîÄ 290 ¬∑ üìã 130 - 33% open ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NifTK/NiftyNet&#34;&gt;NiftyNet&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.3K ¬∑ üíÄ) - [unmaintained] An open-source convolutional neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipy&#34;&gt;NIPY&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 320 ¬∑ üíÄ) - Neuroimaging in Python FMRI analysis package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/projectglow/glow&#34;&gt;Glow&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 200) - An open-source toolkit for large-scale genomic analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DLTK/DLTK&#34;&gt;DLTK&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.3K ¬∑ üíÄ) - Deep Learning Toolkit for Medical Image Analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/loli/medpy&#34;&gt;MedPy&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 410 ¬∑ üíÄ) - Medical image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/brainiak/brainiak&#34;&gt;Brainiak&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 270 ¬∑ üí§) - Brain Imaging Analysis Kit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/perone/medicaltorch&#34;&gt;MedicalTorch&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 780 ¬∑ üíÄ) - A medical imaging framework for Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QTIM-Lab/DeepNeuro&#34;&gt;DeepNeuro&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 110 ¬∑ üíÄ) - A deep learning python package for neuroimaging data. Made by:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Tencent/MedicalNet&#34;&gt;MedicalNet&lt;/a&gt;&lt;/b&gt; (ü•â12 ¬∑ ‚≠ê 1.4K ¬∑ üíÄ) - Many studies have shown that the performance on deep learning is.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tabular Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing tabular and structured data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;carefree-learn&lt;/a&gt;&lt;/b&gt; (ü•à19 ¬∑ ‚≠ê 360) - Deep Learning PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1 ¬∑ üîÄ 33 ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carefree0910/carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carefree-learn&#34;&gt;PyPi&lt;/a&gt; (üì• 120 / month ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;pytorch_tabular&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 590) - A standard framework for modelling Deep Learning Models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 9 ¬∑ üîÄ 61 ¬∑ üìã 60 - 26% open ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/manujosephv/pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_tabular&#34;&gt;PyPi&lt;/a&gt; (üì• 2K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 01.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;deltapy&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 430) - DeltaPy - Tabular Data Augmentation (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 43 ¬∑ üì¶ 2 ¬∑ üìã 3 - 66% open ¬∑ ‚è±Ô∏è 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deltapy&#34;&gt;PyPi&lt;/a&gt; (üì• 130 / month ¬∑ ‚è±Ô∏è 09.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 2 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AnotherSamWilson/miceforest&#34;&gt;miceforest&lt;/a&gt;&lt;/b&gt; (ü•á22 ¬∑ ‚≠ê 160) - Multiple Imputation with Random Forests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/upgini/upgini&#34;&gt;upgini&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 28 ¬∑ üê£) - Low-code feature search library for supervised machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Optical Character Recognition&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for optical character recognition (OCR) and text extraction from images or videos.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 22K ¬∑ üìà) - Awesome multilingual OCR toolkits based on PaddlePaddle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 4.5K ¬∑ üì¶ 650 ¬∑ üìã 4.6K - 24% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleocr&#34;&gt;PyPi&lt;/a&gt; (üì• 62K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;EasyOCR&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 15K) - Ready-to-use OCR with 80+ supported languages and all popular writing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 98 ¬∑ üîÄ 2.1K ¬∑ üì• 1.6M ¬∑ üì¶ 1.2K ¬∑ üìã 560 - 19% open ¬∑ ‚è±Ô∏è 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JaidedAI/EasyOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/easyocr&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install easyocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;Tesseract&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 4.2K) - Python-tesseract is an optical character recognition (OCR) tool.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 41 ¬∑ üîÄ 600 ¬∑ üìã 300 - 5% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/madmaze/pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytesseract&#34;&gt;PyPi&lt;/a&gt; (üì• 590K / month ¬∑ üì¶ 940 ¬∑ ‚è±Ô∏è 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytesseract&#34;&gt;Conda&lt;/a&gt; (üì• 500K ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;OCRmyPDF&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 6.4K) - OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 67 ¬∑ üîÄ 570 ¬∑ üìã 870 - 10% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ocrmypdf/OCRmyPDF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ocrmypdf&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 12 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ocrmypdf&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;tesserocr&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.6K) - A Python wrapper for the tesseract-ocr API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 26 ¬∑ üîÄ 220 ¬∑ üì¶ 660 ¬∑ üìã 250 - 32% open ¬∑ ‚è±Ô∏è 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sirfz/tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tesserocr&#34;&gt;PyPi&lt;/a&gt; (üì• 63K / month ¬∑ üì¶ 67 ¬∑ ‚è±Ô∏è 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tesserocr&#34;&gt;Conda&lt;/a&gt; (üì• 70K ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;MMOCR&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 2.5K) - OpenMMLab Text Detection, Recognition and Understanding Toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 50 ¬∑ üîÄ 440 ¬∑ üì¶ 12 ¬∑ üìã 550 - 16% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmocr&#34;&gt;PyPi&lt;/a&gt; (üì• 2.7K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;keras-ocr&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1K) - A packaged and flexible version of the CRAFT text detector and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 270 ¬∑ üì• 260K ¬∑ üìã 170 - 38% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/faustomorales/keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-ocr&#34;&gt;PyPi&lt;/a&gt; (üì• 6.5K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/keras-ocr&#34;&gt;Conda&lt;/a&gt; (üì• 43 ¬∑ ‚è±Ô∏è 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;calamari&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 920) - Line based ATR Engine based on OCRopy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 190 ¬∑ üìã 250 - 19% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Calamari-OCR/calamari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/calamari_ocr&#34;&gt;PyPi&lt;/a&gt; (üì• 720 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 13.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install calamari_ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;attention-ocr&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 910 ¬∑ üí§) - A Tensorflow model for text recognition (CNN + seq2seq.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 240 ¬∑ üì¶ 19 ¬∑ üìã 150 - 16% open ¬∑ ‚è±Ô∏è 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emedvedev/attention-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aocr&#34;&gt;PyPi&lt;/a&gt; (üì• 200 / month ¬∑ ‚è±Ô∏è 19.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;pdftabextract&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 2K) - A set of tools for extracting tables from PDF files helping to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2 ¬∑ üîÄ 340 ¬∑ üì¶ 39 ¬∑ üìã 21 - 14% open ¬∑ ‚è±Ô∏è 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/WZBSocialScienceCenter/pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdftabextract&#34;&gt;PyPi&lt;/a&gt; (üì• 560 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 09.01.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;Mozart&lt;/a&gt;&lt;/b&gt; (ü•â10 ¬∑ ‚≠ê 370 ¬∑ üí§) - An optical music recognition (OMR) system. Converts sheet.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 5 ¬∑ üîÄ 56 ¬∑ üìã 11 - 27% open ¬∑ ‚è±Ô∏è 05.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aashrafh/Mozart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jlsutherland/doc2text&#34;&gt;doc2text&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 1.3K ¬∑ üíÄ) - Detect text blocks and OCR poorly scanned PDFs in bulk. Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Containers &amp;amp; Structures&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose data containers &amp;amp; structures as well as utilities &amp;amp; extensions for pandas.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Loading &amp;amp; Extraction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for loading, collecting, and extracting data from a variety of data sources and formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-loading--extraction&#34;&gt;best-of-python - Data Extraction&lt;/a&gt;&lt;/b&gt; ( ‚≠ê 2.2K) - Collection of data-loading and -extraction libraries.&lt;/p&gt; &#xA;&lt;p&gt;üîó&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-containers--dataframes&#34;&gt;best-of-python - Data Containers&lt;/a&gt;&lt;/b&gt; ( ‚≠ê 2.2K) - Collection of data-container, dataframe, and pandas-..&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Web Scraping &amp;amp; Crawling&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for web scraping, crawling, downloading, and mining as well as libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python#web-scraping--crawling&#34;&gt;best-of-web-python - Web Scraping&lt;/a&gt;&lt;/b&gt; ( ‚≠ê 1.5K) - Collection of web-scraping and crawling libraries.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Pipelines &amp;amp; Streaming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for data batch- and stream-processing, workflow automation, job scheduling, and other data pipeline tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;Celery&lt;/a&gt;&lt;/b&gt; (ü•á46 ¬∑ ‚≠ê 19K) - Asynchronous task queue/job queue based on distributed message passing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.2K ¬∑ üîÄ 4.3K ¬∑ üì¶ 70K ¬∑ üìã 4.7K - 11% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/celery/celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/celery&#34;&gt;PyPi&lt;/a&gt; (üì• 5.3M / month ¬∑ üì¶ 15K ¬∑ ‚è±Ô∏è 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/celery&#34;&gt;Conda&lt;/a&gt; (üì• 840K ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;Airflow&lt;/a&gt;&lt;/b&gt; (ü•á45 ¬∑ ‚≠ê 26K) - Platform to programmatically author, schedule, and monitor workflows. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2.4K ¬∑ üîÄ 11K ¬∑ üì• 290K ¬∑ üìã 5.7K - 16% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-airflow&#34;&gt;PyPi&lt;/a&gt; (üì• 6.6M / month ¬∑ üì¶ 470 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/airflow&#34;&gt;Conda&lt;/a&gt; (üì• 610K ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;Docker Hub&lt;/a&gt; (üì• 73M ¬∑ ‚≠ê 340 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;rq&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 8.3K ¬∑ üìà) - Simple job queues for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 260 ¬∑ üîÄ 1.3K ¬∑ üì¶ 10K ¬∑ üìã 960 - 18% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rq/rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rq&#34;&gt;PyPi&lt;/a&gt; (üì• 570K / month ¬∑ üì¶ 1.7K ¬∑ ‚è±Ô∏è 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rq&#34;&gt;Conda&lt;/a&gt; (üì• 71K ¬∑ ‚è±Ô∏è 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;Beam&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 5.5K) - Unified programming model to define and execute data processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.3K ¬∑ üîÄ 3.5K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-beam&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1M / month ¬∑ üì¶ 150 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/apache-beam-with-aws&#34;&gt;Conda&lt;/a&gt; (üì• 9.2K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge apache-beam-with-aws&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;luigi&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 16K) - Luigi is a Python module that helps you build complex pipelines of batch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 590 ¬∑ üîÄ 2.3K ¬∑ üì¶ 1.7K ¬∑ üìã 970 - 10% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/luigi&#34;&gt;PyPi&lt;/a&gt; (üì• 580K / month ¬∑ üì¶ 400 ¬∑ ‚è±Ô∏è 23.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/luigi&#34;&gt;Conda&lt;/a&gt; (üì• 10K ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;Prefect&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 9.2K) - The easiest way to automate your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 330 ¬∑ üîÄ 900 ¬∑ üì¶ 790 ¬∑ üìã 2.3K - 23% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PrefectHQ/prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prefect&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 64 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prefect&#34;&gt;Conda&lt;/a&gt; (üì• 260K ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;Great Expectations&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 6.6K) - Always know what to expect from your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 290 ¬∑ üîÄ 950 ¬∑ üìã 1.3K - 15% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/great-expectations/great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/great_expectations&#34;&gt;PyPi&lt;/a&gt; (üì• 6.4M / month ¬∑ üì¶ 32 ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/great-expectations&#34;&gt;Conda&lt;/a&gt; (üì• 380K ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge great-expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Dagster&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 4.8K) - An orchestration platform for the development, production, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 210 ¬∑ üîÄ 600 ¬∑ üì¶ 380 ¬∑ üìã 4.1K - 23% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dagster-io/dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dagster&#34;&gt;PyPi&lt;/a&gt; (üì• 280K / month ¬∑ üì¶ 88 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dagster&#34;&gt;Conda&lt;/a&gt; (üì• 510K ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;joblib&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 2.8K ¬∑ üìâ) - Computing with Python functions. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 320 ¬∑ üì¶ 190K ¬∑ üìã 730 - 45% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/joblib/joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joblib&#34;&gt;PyPi&lt;/a&gt; (üì• 25M / month ¬∑ üì¶ 4.9K ¬∑ ‚è±Ô∏è 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joblib&#34;&gt;Conda&lt;/a&gt; (üì• 8.9M ¬∑ ‚è±Ô∏è 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;dbt&lt;/a&gt;&lt;/b&gt; (ü•à36 ¬∑ ‚≠ê 4.9K) - dbt enables data analysts and engineers to transform their data using the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 220 ¬∑ üîÄ 900 ¬∑ üì• 360 ¬∑ üì¶ 470 ¬∑ üìã 2.8K - 12% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dbt-labs/dbt-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dbt&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5M / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dbt&#34;&gt;Conda&lt;/a&gt; (üì• 200K ¬∑ ‚è±Ô∏è 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;Kedro&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 7.2K) - A Python framework for creating reproducible, maintainable and modular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 660 ¬∑ üì¶ 870 ¬∑ üìã 770 - 14% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kedro-org/kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kedro&#34;&gt;PyPi&lt;/a&gt; (üì• 320K / month ¬∑ üì¶ 38 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;Activeloop&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.5K) - Dataset format for AI. Build, manage, query &amp;amp; visualize datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 97 ¬∑ üîÄ 380 ¬∑ üìã 370 - 14% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/activeloopai/Hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hub&#34;&gt;PyPi&lt;/a&gt; (üì• 5.6K / month ¬∑ üì¶ 53 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;huey&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4K) - a little task queue for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 66 ¬∑ üîÄ 330 ¬∑ üì¶ 930 ¬∑ üìã 510 - 0% open ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coleifer/huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huey&#34;&gt;PyPi&lt;/a&gt; (üì• 170K / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huey&#34;&gt;Conda&lt;/a&gt; (üì• 24K ¬∑ ‚è±Ô∏è 16.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;ploomber&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 2.4K) - The fastest way to build data pipelines. Develop iteratively,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 160 ¬∑ üì¶ 42 ¬∑ üìã 700 - 27% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ploomber/ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ploomber&#34;&gt;PyPi&lt;/a&gt; (üì• 4.2K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ploomber&#34;&gt;Conda&lt;/a&gt; (üì• 7.4K ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;TFX&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.8K) - TFX is an end-to-end platform for deploying production ML pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 580 ¬∑ üìã 770 - 32% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tfx&#34;&gt;PyPi&lt;/a&gt; (üì• 360K / month ¬∑ üì¶ 12 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;mleap&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.4K) - MLeap: Deploy ML Pipelines to Production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 73 ¬∑ üîÄ 300 ¬∑ üì¶ 180 ¬∑ üìã 440 - 20% open ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/combust/mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mleap&#34;&gt;PyPi&lt;/a&gt; (üì• 230K / month ¬∑ üì¶ 26 ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mleap&#34;&gt;Conda&lt;/a&gt; (üì• 47K ¬∑ ‚è±Ô∏è 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;petl&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1K) - Python Extract Transform and Load Tables of Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 54 ¬∑ üîÄ 170 ¬∑ üì¶ 720 ¬∑ üìã 440 - 17% open ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/petl-developers/petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petl&#34;&gt;PyPi&lt;/a&gt; (üì• 190K / month ¬∑ üì¶ 74 ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/petl&#34;&gt;Conda&lt;/a&gt; (üì• 76K ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;zenml&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2K) - ZenML : Build portable, production-ready MLOps pipelines... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 160 ¬∑ üìã 86 - 24% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/zenml-io/zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/zenml&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;Optimus&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.2K) - Agile Data Preparation Workflows madeeasy with Pandas, Dask,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 210 ¬∑ üìã 230 - 13% open ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hi-primus/optimus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optimuspyspark&#34;&gt;PyPi&lt;/a&gt; (üì• 47K / month ¬∑ ‚è±Ô∏è 30.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optimuspyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;PyFunctional&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 2K) - Python library for creating data pipelines with chain functional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 120 ¬∑ üì¶ 440 ¬∑ üìã 130 - 6% open ¬∑ ‚è±Ô∏è 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EntilZha/PyFunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyfunctional&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyfunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;streamparse&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.5K) - Run Python in Apache Storm topologies. Pythonic API, CLI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 42 ¬∑ üîÄ 220 ¬∑ üì¶ 54 ¬∑ üìã 330 - 21% open ¬∑ ‚è±Ô∏è 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Parsely/streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamparse&#34;&gt;PyPi&lt;/a&gt; (üì• 3.8K / month ¬∑ üì¶ 27 ¬∑ ‚è±Ô∏è 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;arq&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.2K) - Fast job queuing and RPC in python with asyncio and redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 39 ¬∑ üîÄ 100 ¬∑ üì¶ 230 ¬∑ üìã 140 - 26% open ¬∑ ‚è±Ô∏è 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/samuelcolvin/arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arq&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arq&#34;&gt;Conda&lt;/a&gt; (üì• 2.2K ¬∑ ‚è±Ô∏è 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;whylogs&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.1K) - Open standard for end-to-end data and ML monitoring for any scale in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 56 ¬∑ üì• 50 ¬∑ üìã 160 - 39% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/whylabs/whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/whylogs&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;TaskTiger&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.1K) - Python task queue using Redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 62 ¬∑ üì¶ 22 ¬∑ üìã 68 - 48% open ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/closeio/tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tasktiger&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 02.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;Pypeline&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.3K) - Concurrent data pipelines in Python . &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 80 ¬∑ üìã 58 - 25% open ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cgarciae/pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pypeln&#34;&gt;PyPi&lt;/a&gt; (üì• 13K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pypeln&#34;&gt;Conda&lt;/a&gt; (üì• 6.5K ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;pdpipe&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 670) - Easy pipelines for pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 34 ¬∑ üì¶ 40 ¬∑ üìã 45 - 28% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pdpipe/pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdpipe&#34;&gt;PyPi&lt;/a&gt; (üì• 1.8K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pdpipe&#34;&gt;Conda&lt;/a&gt; (üì• 4.3K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;spark-deep-learning&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 1.9K) - Deep Learning Pipelines for Apache Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 460 ¬∑ üì¶ 21 ¬∑ üìã 100 - 74% open ¬∑ ‚è±Ô∏è 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/databricks/spark-deep-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;riko&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 1.6K) - A Python stream processing engine modeled after Yahoo! Pipes. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 75 ¬∑ üìã 30 - 73% open ¬∑ ‚è±Ô∏è 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nerevu/riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/riko&#34;&gt;PyPi&lt;/a&gt; (üì• 140 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;Databolt Flow&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 940 ¬∑ üí§) - Python library for building highly effective data science.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 70 ¬∑ üì¶ 20 ¬∑ üìã 23 - 43% open ¬∑ ‚è±Ô∏è 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/d6t/d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/d6tflow&#34;&gt;PyPi&lt;/a&gt; (üì• 360 / month ¬∑ ‚è±Ô∏è 06.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;Mara Pipelines&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 1.9K) - A lightweight opinionated ETL framework, halfway between plain.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 89 ¬∑ üì¶ 9 ¬∑ üìã 27 - 48% open ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mara/mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mara-pipelines&#34;&gt;PyPi&lt;/a&gt; (üì• 270 / month ¬∑ ‚è±Ô∏è 23.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;kale&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 530 ¬∑ üí§) - Kubeflows superfood for Data Scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 110 ¬∑ üìã 160 - 52% open ¬∑ ‚è±Ô∏è 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kubeflow-kale/kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kubeflow-kale&#34;&gt;PyPi&lt;/a&gt; (üì• 990 / month ¬∑ ‚è±Ô∏è 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kubeflow-kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Yelp/mrjob&#34;&gt;mrjob&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.6K ¬∑ üíÄ) - Run MapReduce jobs on Hadoop or Amazon Web Services. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/robinhood/faust&#34;&gt;faust&lt;/a&gt;&lt;/b&gt; (ü•â30 ¬∑ ‚≠ê 6.2K ¬∑ üíÄ) - Python Stream Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databand-ai/dbnd&#34;&gt;dbnd&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 220) - DBND is an agile pipeline framework that helps data engineering teams.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-bonobo/bonobo&#34;&gt;bonobo&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - Extract Transform Load for Python 3.5+. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/douban/dpark&#34;&gt;dpark&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.7K ¬∑ üíÄ) - Python clone of Spark, a MapReduce alike framework in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/svenkreiss/pysparkling&#34;&gt;pysparkling&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 250 ¬∑ üíÄ) - A pure Python implementation of Apache Sparks RDD and DStream.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pricingassistant/mrq&#34;&gt;mrq&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 870 ¬∑ üíÄ) - Mr. Queue - A distributed worker task queue in Python using Redis &amp;amp; gevent. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bodywork-ml/bodywork-core&#34;&gt;bodywork-core&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 340) - ML pipeline orchestration and model deployments on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/analysiscenter/batchflow&#34;&gt;BatchFlow&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 180) - BatchFlow helps you conveniently work with random or sequential.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/olirice/flupy&#34;&gt;flupy&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 170) - Fluent data pipelines for python and your shell. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kkyon/botflow&#34;&gt;Botflow&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 1.2K ¬∑ üíÄ) - Python Fast Dataflow programming framework for Data pipeline work(.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vincentclaes/datajob&#34;&gt;datajob&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 91) - Build and deploy a serverless data pipeline on AWS with no effort. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Distributed Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that provide capabilities to distribute and parallelize machine learning tasks across large-scale compute infrastructure.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;Ray&lt;/a&gt;&lt;/b&gt; (ü•á43 ¬∑ ‚≠ê 21K) - An open source framework that provides a simple, universal API for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 690 ¬∑ üîÄ 3.6K ¬∑ üì¶ 4.9K ¬∑ üìã 10K - 22% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ray-project/ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ray&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2M / month ¬∑ üì¶ 270 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ray-tune&#34;&gt;Conda&lt;/a&gt; (üì• 30K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ray-tune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;dask&lt;/a&gt;&lt;/b&gt; (ü•á43 ¬∑ ‚≠ê 9.9K) - Parallel computing with task scheduling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 530 ¬∑ üîÄ 1.5K ¬∑ üì¶ 37K ¬∑ üìã 4.4K - 16% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask&#34;&gt;PyPi&lt;/a&gt; (üì• 6.1M / month ¬∑ üì¶ 2.6K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask&#34;&gt;Conda&lt;/a&gt; (üì• 5.6M ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;dask.distributed&lt;/a&gt;&lt;/b&gt; (ü•á41 ¬∑ ‚≠ê 1.4K) - A distributed task scheduler for Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 270 ¬∑ üîÄ 620 ¬∑ üì¶ 24K ¬∑ üìã 2.9K - 38% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/distributed&#34;&gt;PyPi&lt;/a&gt; (üì• 5M / month ¬∑ üì¶ 1.2K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/distributed&#34;&gt;Conda&lt;/a&gt; (üì• 6.9M ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;horovod&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 12K) - Distributed training framework for TensorFlow, Keras, PyTorch, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 2K ¬∑ üì¶ 590 ¬∑ üìã 2K - 15% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/horovod/horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/horovod&#34;&gt;PyPi&lt;/a&gt; (üì• 65K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;H2O-3&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 5.8K) - H2O is an Open Source, Distributed, Fast &amp;amp; Scalable Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 220 ¬∑ üîÄ 1.9K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/h2oai/h2o-3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/h2o&#34;&gt;PyPi&lt;/a&gt; (üì• 400K / month ¬∑ üì¶ 75 ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install h2o&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;DeepSpeed&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 6.8K) - DeepSpeed is a deep learning optimization library that makes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 800 ¬∑ üì¶ 260 ¬∑ üìã 920 - 51% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/DeepSpeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeed&#34;&gt;PyPi&lt;/a&gt; (üì• 120K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/deepspeed/deepspeed&#34;&gt;Docker Hub&lt;/a&gt; (üì• 14K ¬∑ ‚≠ê 3 ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull deepspeed/deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;BigDL&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 3.9K) - Building Large-Scale AI Applications for Distributed Big Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 990 ¬∑ üì¶ 36 ¬∑ üìã 1.3K - 35% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/BigDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bigdl&#34;&gt;PyPi&lt;/a&gt; (üì• 5.8K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bigdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/com.intel.analytics.bigdl/bigdl-SPARK_2.4&#34;&gt;Maven&lt;/a&gt; (üì¶ 4 ¬∑ ‚è±Ô∏è 20.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;dependency&amp;gt;&#xA; &#x9;&amp;lt;groupId&amp;gt;com.intel.analytics.bigdl&amp;lt;/groupId&amp;gt;&#xA; &#x9;&amp;lt;artifactId&amp;gt;bigdl-SPARK_2.4&amp;lt;/artifactId&amp;gt;&#xA; &#x9;&amp;lt;version&amp;gt;[VERSION]&amp;lt;/version&amp;gt;&#xA; &amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;ipyparallel&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.2K) - IPython Parallel: Interactive Parallel Computing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 890 ¬∑ üìã 330 - 16% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipython/ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyparallel&#34;&gt;PyPi&lt;/a&gt; (üì• 48K / month ¬∑ üì¶ 290 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyparallel&#34;&gt;Conda&lt;/a&gt; (üì• 610K ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;FairScale&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.7K) - PyTorch extensions for high performance and large scale training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 61 ¬∑ üîÄ 180 ¬∑ üì¶ 290 ¬∑ üìã 310 - 21% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairscale&#34;&gt;PyPi&lt;/a&gt; (üì• 150K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairscale&#34;&gt;Conda&lt;/a&gt; (üì• 18K ¬∑ ‚è±Ô∏è 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;metrics&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 860) - Machine learning metrics for distributed, scalable PyTorch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 180 ¬∑ üì• 660 ¬∑ üì¶ 3K ¬∑ üìã 370 - 16% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metrics&#34;&gt;PyPi&lt;/a&gt; (üì• 3.2K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 28.04.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchmetrics&#34;&gt;Conda&lt;/a&gt; (üì• 350K ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;dask-ml&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 800) - Scalable Machine Learning with Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 73 ¬∑ üîÄ 220 ¬∑ üì¶ 620 ¬∑ üìã 470 - 48% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask-ml&#34;&gt;PyPi&lt;/a&gt; (üì• 86K / month ¬∑ üì¶ 55 ¬∑ ‚è±Ô∏è 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask-ml&#34;&gt;Conda&lt;/a&gt; (üì• 320K ¬∑ ‚è±Ô∏è 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;TensorFlowOnSpark&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 3.8K) - TensorFlowOnSpark brings TensorFlow programs to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 34 ¬∑ üîÄ 970 ¬∑ üìã 360 - 1% open ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoo/TensorFlowOnSpark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflowonspark&#34;&gt;PyPi&lt;/a&gt; (üì• 550K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflowonspark&#34;&gt;Conda&lt;/a&gt; (üì• 10K ¬∑ ‚è±Ô∏è 27.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;SynapseML&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 92 ¬∑ üîÄ 670 ¬∑ üìã 580 - 42% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/synapseml&#34;&gt;PyPi&lt;/a&gt; (üì• 32K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install synapseml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;petastorm&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.4K) - Petastorm library enables single machine or distributed training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 44 ¬∑ üîÄ 240 ¬∑ üì• 310 ¬∑ üì¶ 70 ¬∑ üìã 280 - 50% open ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petastorm&#34;&gt;PyPi&lt;/a&gt; (üì• 86K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;Elephas&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.5K) - Distributed Deep learning with Keras &amp;amp; Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;keras&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 300 ¬∑ üì¶ 56 ¬∑ üìã 160 - 11% open ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elephas&#34;&gt;PyPi&lt;/a&gt; (üì• 92K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/elephas&#34;&gt;Conda&lt;/a&gt; (üì• 8.1K ¬∑ ‚è±Ô∏è 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;Mesh&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.3K) - Mesh TensorFlow: Model Parallelism Made Easier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 220 ¬∑ üì¶ 680 ¬∑ üìã 110 - 87% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/mesh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mesh-tensorflow&#34;&gt;PyPi&lt;/a&gt; (üì• 22K / month ¬∑ üì¶ 32 ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mesh-tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;mpi4py&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 540) - Python bindings for MPI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 77 ¬∑ üì• 4.8K ¬∑ üìã 77 - 16% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mpi4py/mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mpi4py&#34;&gt;PyPi&lt;/a&gt; (üì• 180K / month ¬∑ üì¶ 580 ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mpi4py&#34;&gt;Conda&lt;/a&gt; (üì• 1.1M ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;analytics-zoo&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.5K) - Distributed Tensorflow, Keras and PyTorch on Apache.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 710 ¬∑ üì¶ 3 ¬∑ üìã 1.4K - 39% open ¬∑ ‚è±Ô∏è 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/analytics-zoo&#34;&gt;PyPi&lt;/a&gt; (üì• 4K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;MMLSpark&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 92 ¬∑ üîÄ 670 ¬∑ üìã 580 - 42% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmlspark&#34;&gt;PyPi&lt;/a&gt; (üì• 3 / month ¬∑ ‚è±Ô∏è 18.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmlspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;Apache Singa&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 2.6K) - a distributed deep learning platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 79 ¬∑ üîÄ 790 ¬∑ üì¶ 1 ¬∑ üìã 97 - 41% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/nusdbsystem/singa&#34;&gt;Conda&lt;/a&gt; (üì• 460 ¬∑ ‚è±Ô∏è 09.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c nusdbsystem singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/singa&#34;&gt;Docker Hub&lt;/a&gt; (üì• 280 ¬∑ ‚≠ê 4 ¬∑ ‚è±Ô∏è 04.06.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;Submit it&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 620) - Python 3.6+ toolbox for submitting jobs to Slurm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 63 ¬∑ üìã 66 - 31% open ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookincubator/submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/submitit&#34;&gt;PyPi&lt;/a&gt; (üì• 21K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/submitit&#34;&gt;Conda&lt;/a&gt; (üì• 6K ¬∑ ‚è±Ô∏è 10.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;Hivemind&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1K) - Decentralized deep learning in PyTorch. Built to train models on thousands.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 61 ¬∑ üì¶ 7 ¬∑ üìã 120 - 35% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/learning-at-home/hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hivemind&#34;&gt;PyPi&lt;/a&gt; (üì• 4.1K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;BytePS&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 3.2K) - A high performance and generic framework for distributed DNN training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 450 ¬∑ üìã 260 - 38% open ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/byteps&#34;&gt;PyPi&lt;/a&gt; (üì• 56 / month ¬∑ ‚è±Ô∏è 02.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/bytepsimage/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (üì• 1.3K ¬∑ ‚è±Ô∏è 03.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull bytepsimage/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;mesh-transformer-jax&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 4.1K) - Model parallel transformers in JAX and Haiku. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 23 ¬∑ üîÄ 530 ¬∑ üìã 170 - 12% open ¬∑ ‚è±Ô∏è 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kingoflolz/mesh-transformer-jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;parallelformers&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 460) - Parallelformers: An Efficient Model Parallelization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 28 ¬∑ üì¶ 7 ¬∑ üìã 18 - 38% open ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tunib-ai/parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parallelformers&#34;&gt;PyPi&lt;/a&gt; (üì• 190 / month ¬∑ ‚è±Ô∏è 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DEAP/deap&#34;&gt;DEAP&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.7K) - Distributed Evolutionary Algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/launchpad&#34;&gt;launchpad&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 270) - Launchpad is a library that simplifies writing distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/tensorframes&#34;&gt;TensorFrames&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 760 ¬∑ üíÄ) - [DEPRECATED] Tensorflow wrapper for DataFrames on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ibotta/sk-dist&#34;&gt;sk-dist&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 280 ¬∑ üí§) - Distributed scikit-learn meta-estimators in PySpark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peterwittek/somoclu&#34;&gt;somoclu&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 240 ¬∑ üí§) - Massively parallel self-organizing maps: accelerate training on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 970 ¬∑ üíÄ) - Distributed Computing for AI Made Simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/lazycluster&#34;&gt;LazyCluster&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 43 ¬∑ üí§) - Distributed machine learning made simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petuum/autodist&#34;&gt;autodist&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 120 ¬∑ üíÄ) - Simple Distributed Deep Learning on TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for hyperparameter optimization, automl and neural architecture search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;Optuna&lt;/a&gt;&lt;/b&gt; (ü•á39 ¬∑ ‚≠ê 6.4K ¬∑ üìà) - A hyperparameter optimization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 200 ¬∑ üîÄ 700 ¬∑ üì¶ 3.3K ¬∑ üìã 1.2K - 11% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/optuna/optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optuna&#34;&gt;PyPi&lt;/a&gt; (üì• 3.5M / month ¬∑ üì¶ 200 ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/optuna&#34;&gt;Conda&lt;/a&gt; (üì• 280K ¬∑ ‚è±Ô∏è 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;NNI&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 11K) - An open source AutoML toolkit for automate machine learning lifecycle,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 170 ¬∑ üîÄ 1.6K ¬∑ üì¶ 230 ¬∑ üìã 1.6K - 18% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nni&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;AutoKeras&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 8.5K) - AutoML library for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 1.4K ¬∑ üì• 4.4K ¬∑ üì¶ 320 ¬∑ üìã 820 - 10% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autokeras&#34;&gt;PyPi&lt;/a&gt; (üì• 53K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;auto-sklearn&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 6.3K) - Automated Machine Learning with scikit-learn. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 79 ¬∑ üîÄ 1.2K ¬∑ üì• 35 ¬∑ üì¶ 290 ¬∑ üìã 890 - 12% open ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-sklearn&#34;&gt;PyPi&lt;/a&gt; (üì• 38K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/auto-sklearn&#34;&gt;Conda&lt;/a&gt; (üì• 4.5K ¬∑ ‚è±Ô∏è 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;Hyperopt&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 6.2K) - Distributed Asynchronous Hyperparameter Optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 93 ¬∑ üîÄ 970 ¬∑ üì¶ 6.6K ¬∑ üìã 610 - 61% open ¬∑ ‚è±Ô∏è 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hyperopt/hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperopt&#34;&gt;PyPi&lt;/a&gt; (üì• 2.1M / month ¬∑ üì¶ 420 ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hyperopt&#34;&gt;Conda&lt;/a&gt; (üì• 410K ¬∑ ‚è±Ô∏è 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;Keras Tuner&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 2.5K) - Hyperparameter tuning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 330 ¬∑ üì¶ 1.4K ¬∑ üìã 390 - 44% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-tuner&#34;&gt;PyPi&lt;/a&gt; (üì• 650K / month ¬∑ üì¶ 41 ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-tuner&#34;&gt;Conda&lt;/a&gt; (üì• 6.4K ¬∑ ‚è±Ô∏è 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;BoTorch&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 2.3K) - Bayesian optimization in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 74 ¬∑ üîÄ 260 ¬∑ üì¶ 250 ¬∑ üìã 260 - 23% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/botorch&#34;&gt;PyPi&lt;/a&gt; (üì• 170K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/botorch&#34;&gt;Conda&lt;/a&gt; (üì• 25K ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;featuretools&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 6.2K) - An open source python library for automated feature engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 65 ¬∑ üîÄ 810 ¬∑ üìã 800 - 20% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alteryx/featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/featuretools&#34;&gt;PyPi&lt;/a&gt; (üì• 130K / month ¬∑ üì¶ 63 ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/featuretools&#34;&gt;Conda&lt;/a&gt; (üì• 85K ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;Ax&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 1.8K) - Adaptive Experimentation Platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 200 ¬∑ üì¶ 280 ¬∑ üìã 420 - 11% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/Ax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ax-platform&#34;&gt;PyPi&lt;/a&gt; (üì• 150K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ax-platform&#34;&gt;Conda&lt;/a&gt; (üì• 1.3K ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;AutoGluon&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 4.5K) - AutoGluon: AutoML for Image, Text, and Tabular Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 72 ¬∑ üîÄ 590 ¬∑ üì¶ 120 ¬∑ üìã 690 - 22% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autogluon&#34;&gt;PyPi&lt;/a&gt; (üì• 67K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;nevergrad&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 3.3K) - A Python toolbox for performing gradient-free optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 310 ¬∑ üì¶ 330 ¬∑ üìã 260 - 41% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nevergrad&#34;&gt;PyPi&lt;/a&gt; (üì• 41K / month ¬∑ üì¶ 18 ¬∑ ‚è±Ô∏è 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nevergrad&#34;&gt;Conda&lt;/a&gt; (üì• 26K ¬∑ ‚è±Ô∏è 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;scikit-optimize&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 2.3K ¬∑ üí§) - Sequential model-based optimization with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 76 ¬∑ üîÄ 420 ¬∑ üì¶ 2.7K ¬∑ üìã 620 - 37% open ¬∑ ‚è±Ô∏è 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-optimize/scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-optimize&#34;&gt;PyPi&lt;/a&gt; (üì• 910K / month ¬∑ üì¶ 170 ¬∑ ‚è±Ô∏è 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-optimize&#34;&gt;Conda&lt;/a&gt; (üì• 550K ¬∑ ‚è±Ô∏è 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;Talos&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.5K) - Hyperparameter Optimization for TensorFlow, Keras and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 260 ¬∑ üì¶ 140 ¬∑ üìã 390 - 5% open ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/autonomio/talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/talos&#34;&gt;PyPi&lt;/a&gt; (üì• 1.8K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;mljar-supervised&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.9K) - Python package for AutoML on Tabular Data with Feature.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 270 ¬∑ üì¶ 45 ¬∑ üìã 480 - 18% open ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mljar/mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mljar-supervised&#34;&gt;PyPi&lt;/a&gt; (üì• 9.4K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mljar-supervised&#34;&gt;Conda&lt;/a&gt; (üì• 1.6K ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;Hyperas&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 2.1K) - Keras + Hyperopt: A very simple wrapper for convenient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 300 ¬∑ üì¶ 240 ¬∑ üìã 250 - 37% open ¬∑ ‚è±Ô∏è 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperas&#34;&gt;PyPi&lt;/a&gt; (üì• 13K / month ¬∑ üì¶ 24 ¬∑ ‚è±Ô∏è 28.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;AdaNet&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 3.4K ¬∑ üí§) - Fast and flexible AutoML with learning guarantees. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 520 ¬∑ üì¶ 43 ¬∑ üìã 110 - 57% open ¬∑ ‚è±Ô∏è 30.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adanet&#34;&gt;PyPi&lt;/a&gt; (üì• 680 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 09.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;Neuraxle&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 520) - The worlds cleanest AutoML framework - Do hyperparameter tuning with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 53 ¬∑ üì¶ 32 ¬∑ üìã 320 - 24% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Neuraxio/Neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuraxle&#34;&gt;PyPi&lt;/a&gt; (üì• 350 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;HpBandSter&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 540) - a distributed Hyperband implementation on Steroids. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 110 ¬∑ üì¶ 220 ¬∑ üìã 92 - 61% open ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/HpBandSter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hpbandster&#34;&gt;PyPi&lt;/a&gt; (üì• 40K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 06.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hpbandster&#34;&gt;Conda&lt;/a&gt; (üì• 1.6K ¬∑ ‚è±Ô∏è 11.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;Hyperactive&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 400) - An optimization and data collection toolbox for convenient and fast.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 32 ¬∑ üì• 100 ¬∑ üì¶ 15 ¬∑ üìã 45 - 11% open ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SimonBlanke/Hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperactive&#34;&gt;PyPi&lt;/a&gt; (üì• 580 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;lazypredict&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 360) - Lazy Predict help build a lot of basic models without much code.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 63 ¬∑ üì¶ 290 ¬∑ üìã 63 - 46% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shankarpandala/lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lazypredict&#34;&gt;PyPi&lt;/a&gt; (üì• 7.2K / month ¬∑ ‚è±Ô∏è 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lazypredict&#34;&gt;Conda&lt;/a&gt; (üì• 400 ¬∑ ‚è±Ô∏è 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;Auto ViML&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 340) - Automatically Build Multiple ML Models with a Single Line of Code... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 77 ¬∑ üì¶ 16 ¬∑ üìã 20 - 25% open ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_ViML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviml&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;sklearn-deap&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 700 ¬∑ üí§) - Use evolutionary algorithms instead of gridsearch in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 110 ¬∑ üì¶ 31 ¬∑ üìã 55 - 38% open ¬∑ ‚è±Ô∏è 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rsteca/sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-deap&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;AlphaPy&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 780) - Automated Machine Learning [AutoML] with Python, scikit-learn, Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3 ¬∑ üîÄ 160 ¬∑ üì¶ 3 ¬∑ üìã 41 - 29% open ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ScottfreeLLC/AlphaPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alphapy&#34;&gt;PyPi&lt;/a&gt; (üì• 81 / month ¬∑ ‚è±Ô∏è 29.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alphapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;model_search&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 3.2K) - AutoML algorithms for model architecture search at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1 ¬∑ üîÄ 360 ¬∑ üìã 50 - 70% open ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/model_search&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 23 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/tpot&#34;&gt;TPOT&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 8.6K) - A Python Automated Machine Learning tool that optimizes machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmfn/BayesianOptimization&#34;&gt;Bayesian Optimization&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 6K ¬∑ üíÄ) - A Python implementation of global optimization with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Epistimio/orion&#34;&gt;Orion&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 230) - Asynchronous Distributed Hyperparameter Optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SheffieldML/GPyOpt&#34;&gt;GPyOpt&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 810 ¬∑ üíÄ) - Gaussian Process Optimization using GPy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/SMAC3&#34;&gt;SMAC3&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 700) - Sequential Model-based Algorithm Configuration. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;‚ùóÔ∏èBSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ClimbsRocks/auto_ml&#34;&gt;auto_ml&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.6K ¬∑ üíÄ) - [UNMAINTAINED] Automated machine learning for analytics &amp;amp; production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AxeldeRomblay/MLBox&#34;&gt;MLBox&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.3K ¬∑ üíÄ) - MLBox is a powerful Automated Machine Learning python library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;‚ùóÔ∏èBSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/featurewiz&#34;&gt;featurewiz&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 230) - Use advanced feature engineering strategies and select best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/claesenm/optunity&#34;&gt;optunity&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 390 ¬∑ üíÄ) - optimization routines for hyperparameter tuning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamFalcon/test-tube&#34;&gt;Test Tube&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 720 ¬∑ üíÄ) - Python library to easily log experiments and parallelize.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dragonfly/dragonfly&#34;&gt;Dragonfly&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 640 ¬∑ üíÄ) - An open source python library for scalable Bayesian optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HDI-Project/ATM&#34;&gt;Auto Tune Models&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 520 ¬∑ üíÄ) - Auto Tune Models - A multi-tenant, multi-data system for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sherpa-ai/sherpa&#34;&gt;Sherpa&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 310 ¬∑ üíÄ) - Hyperparameter optimization that enables researchers to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tobegit3hub/advisor&#34;&gt;Advisor&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - Open-source implementation of Google Vizier for hyper parameters.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/xcessiv&#34;&gt;Xcessiv&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 1.3K ¬∑ üíÄ) - A web-based application for quick, scalable, and automated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HunterMcGushion/hyperparameter_hunter&#34;&gt;HyperparameterHunter&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 690 ¬∑ üíÄ) - Easy hyperparameter optimization and automatic result.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmcarpenter2/parfit&#34;&gt;Parfit&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 200 ¬∑ üíÄ) - A package for parallelizing the fit and flexibly scoring of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/automl-gs&#34;&gt;automl-gs&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 1.8K ¬∑ üíÄ) - Provide an input CSV and a target field to predict, generate a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carpedm20/ENAS-pytorch&#34;&gt;ENAS&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 2.6K ¬∑ üíÄ) - PyTorch implementation of Efficient Neural Architecture Search via.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/LGE-ARC-AdvancedAI/auptimizer&#34;&gt;Auptimizer&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 180 ¬∑ üíÄ) - An automatic ML model optimization tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joeddav/devol&#34;&gt;Devol&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 940 ¬∑ üíÄ) - Genetic neural architecture search with Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/electricbrainio/hypermax&#34;&gt;Hypermax&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 100 ¬∑ üíÄ) - Better, faster hyper-parameter optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gdikov/hypertunity&#34;&gt;Hypertunity&lt;/a&gt;&lt;/b&gt; (ü•â9 ¬∑ ‚≠ê 120 ¬∑ üíÄ) - A toolset for black-box hyperparameter optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Reinforcement Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating reinforcement learning &amp;amp; agent-based systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;OpenAI Gym&lt;/a&gt;&lt;/b&gt; (ü•á42 ¬∑ ‚≠ê 28K) - A toolkit for developing and comparing reinforcement learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 360 ¬∑ üîÄ 7.8K ¬∑ üì¶ 30K ¬∑ üìã 1.7K - 6% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gym&#34;&gt;PyPi&lt;/a&gt; (üì• 640K / month ¬∑ üì¶ 2.4K ¬∑ ‚è±Ô∏è 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gym&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;TF-Agents&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 2.3K) - TF-Agents: A reliable, scalable and easy to use TensorFlow.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 630 ¬∑ üì¶ 800 ¬∑ üìã 560 - 23% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-agents&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;FinRL&lt;/a&gt;&lt;/b&gt; (ü•á30 ¬∑ ‚≠ê 5K) - FinRL: The first open-source project for financial reinforcement learning... &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 64 ¬∑ üîÄ 1.2K ¬∑ üì¶ 11 ¬∑ üìã 400 - 13% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AI4Finance-Foundation/FinRL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finrl&#34;&gt;PyPi&lt;/a&gt; (üì• 280 / month ¬∑ ‚è±Ô∏è 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;Dopamine&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 9.8K) - Dopamine is a research framework for fast prototyping of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 1.3K ¬∑ üìã 170 - 51% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/dopamine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dopamine-rl&#34;&gt;PyPi&lt;/a&gt; (üì• 46K / month ¬∑ üì¶ 37 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dopamine-rl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;Acme&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.7K) - A library of reinforcement learning components and agents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 68 ¬∑ üîÄ 330 ¬∑ üì¶ 78 ¬∑ üìã 210 - 19% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-acme&#34;&gt;PyPi&lt;/a&gt; (üì• 3.7K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-acme&#34;&gt;Conda&lt;/a&gt; (üì• 2.3K ¬∑ ‚è±Ô∏è 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;ViZDoom&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.4K) - Doom-based AI Research Platform for Reinforcement Learning from Raw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 47 ¬∑ üîÄ 340 ¬∑ üì• 12K ¬∑ üì¶ 140 ¬∑ üìã 430 - 20% open ¬∑ ‚è±Ô∏è 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwydmuch/ViZDoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizdoom&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizdoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;TensorLayer&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 7K) - Deep Learning and Reinforcement Learning Library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 1.6K ¬∑ üì• 1.4K ¬∑ üìã 470 - 5% open ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorlayer/tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorlayer&#34;&gt;PyPi&lt;/a&gt; (üì• 2.5K / month ¬∑ üì¶ 40 ¬∑ ‚è±Ô∏è 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;PARL&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 2.6K) - A high-performance distributed training framework for Reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 710 ¬∑ üì¶ 91 ¬∑ üìã 380 - 19% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PARL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parl&#34;&gt;PyPi&lt;/a&gt; (üì• 830 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;TensorForce&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 3.1K) - Tensorforce: a TensorFlow library for applied.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 82 ¬∑ üîÄ 520 ¬∑ üìã 640 - 2% open ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorforce/tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorforce&#34;&gt;PyPi&lt;/a&gt; (üì• 1.8K / month ¬∑ üì¶ 27 ¬∑ ‚è±Ô∏è 07.09.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;Stable Baselines&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 3.5K ¬∑ üí§) - A fork of OpenAI Baselines, implementations of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 690 ¬∑ üìã 920 - 12% open ¬∑ ‚è±Ô∏è 25.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hill-a/stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stable-baselines&#34;&gt;PyPi&lt;/a&gt; (üì• 8.9K / month ¬∑ üì¶ 34 ¬∑ ‚è±Ô∏è 06.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;garage&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.4K) - A toolkit for reproducible reinforcement learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 260 ¬∑ üì¶ 40 ¬∑ üìã 1K - 20% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlworkgroup/garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/garage&#34;&gt;PyPi&lt;/a&gt; (üì• 480 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 23.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;RLax&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 800) - A library of reinforcement learning building blocks in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 62 ¬∑ üì¶ 50 ¬∑ üìã 24 - 50% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rlax&#34;&gt;PyPi&lt;/a&gt; (üì• 4.2K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;TRFL&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 3.1K ¬∑ üí§) - TensorFlow Reinforcement Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 380 ¬∑ üì¶ 80 ¬∑ üìã 22 - 27% open ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trfl&#34;&gt;PyPi&lt;/a&gt; (üì• 4.9K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;PFRL&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 850) - PFRL: a PyTorch-based deep reinforcement learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 110 ¬∑ üì¶ 41 ¬∑ üìã 66 - 40% open ¬∑ ‚è±Ô∏è 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pfnet/pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pfrl&#34;&gt;PyPi&lt;/a&gt; (üì• 2.9K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;ReAgent&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 3.2K) - A platform for Reasoning systems (Reinforcement Learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 440 ¬∑ üìã 120 - 35% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ReAgent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reagent&#34;&gt;PyPi&lt;/a&gt; (üì• 9 / month ¬∑ ‚è±Ô∏è 27.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reagent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;Coach&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.2K ¬∑ üí§) - Reinforcement Learning Coach by Intel AI Lab enables easy.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 35 ¬∑ üîÄ 420 ¬∑ üìã 270 - 32% open ¬∑ ‚è±Ô∏è 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rl_coach&#34;&gt;PyPi&lt;/a&gt; (üì• 160 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 10.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rl_coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;rliable&lt;/a&gt;&lt;/b&gt; (ü•â12 ¬∑ ‚≠ê 420) - [NeurIPS21 Outstanding Paper] Library for reliable evaluation on RL.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2 ¬∑ üîÄ 22 ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/rliable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rliable%60&#34;&gt;PyPi&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rliable`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/baselines&#34;&gt;baselines&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 13K ¬∑ üíÄ) - OpenAI Baselines: high-quality implementations of reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-rl/keras-rl&#34;&gt;keras-rl&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 5.3K ¬∑ üíÄ) - Deep Reinforcement Learning for Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainerrl&#34;&gt;ChainerRL&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.1K ¬∑ üíÄ) - ChainerRL is a deep reinforcement learning library built on top of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/lab&#34;&gt;DeepMind Lab&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 6.7K) - A customisable 3D platform for agent-based AI research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;‚ùóÔ∏èGPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SerpentAI/SerpentAI&#34;&gt;SerpentAI&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 6.3K ¬∑ üíÄ) - Game Agent Framework. Helping you create AIs / Bots that learn to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/enlite-ai/maze&#34;&gt;Maze&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 210) - Maze Applied Reinforcement Learning Framework. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Custom&#34;&gt;‚ùóÔ∏èCustom&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Recommender Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating recommendation systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;Recommenders&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 13K) - Best Practices on Recommendation Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 2.3K ¬∑ üì• 170 ¬∑ üì¶ 27 ¬∑ üìã 690 - 19% open ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recommenders&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;implicit&lt;/a&gt;&lt;/b&gt; (ü•á30 ¬∑ ‚≠ê 2.8K) - Fast Python Collaborative Filtering for Implicit Feedback Datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 530 ¬∑ üì¶ 600 ¬∑ üìã 400 - 18% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benfred/implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/implicit&#34;&gt;PyPi&lt;/a&gt; (üì• 140K / month ¬∑ üì¶ 31 ¬∑ ‚è±Ô∏è 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/implicit&#34;&gt;Conda&lt;/a&gt; (üì• 350K ¬∑ ‚è±Ô∏è 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;lightfm&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 4K) - A Python implementation of LightFM, a hybrid recommendation algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 44 ¬∑ üîÄ 620 ¬∑ üì¶ 730 ¬∑ üìã 450 - 22% open ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lyst/lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightfm&#34;&gt;PyPi&lt;/a&gt; (üì• 400K / month ¬∑ üì¶ 45 ¬∑ ‚è±Ô∏è 27.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightfm&#34;&gt;Conda&lt;/a&gt; (üì• 120K ¬∑ ‚è±Ô∏è 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;TF Recommenders&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.3K) - TensorFlow Recommenders is a library for building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 33 ¬∑ üîÄ 190 ¬∑ üì¶ 110 ¬∑ üìã 270 - 55% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-recommenders&#34;&gt;PyPi&lt;/a&gt; (üì• 2.4M / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;TF Ranking&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.5K) - Learning to Rank in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 430 ¬∑ üìã 290 - 18% open ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow_ranking&#34;&gt;PyPi&lt;/a&gt; (üì• 62K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow_ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;RecBole&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.9K) - A unified, comprehensive and efficient recommendation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 45 ¬∑ üîÄ 350 ¬∑ üìã 400 - 14% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/RecBole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recbole&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3K / month ¬∑ ‚è±Ô∏è 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/aibox/recbole&#34;&gt;Conda&lt;/a&gt; (üì• 1.6K ¬∑ ‚è±Ô∏è 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c aibox recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;Cornac&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 580) - A Comparative Framework for Multimodal Recommender Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 94 ¬∑ üì¶ 110 ¬∑ üìã 93 - 5% open ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PreferredAI/cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornac&#34;&gt;PyPi&lt;/a&gt; (üì• 120K / month ¬∑ üì¶ 15 ¬∑ ‚è±Ô∏è 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cornac&#34;&gt;Conda&lt;/a&gt; (üì• 220K ¬∑ ‚è±Ô∏è 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;recmetrics&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 390) - A library of metrics for evaluating recommender systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 85 ¬∑ üì¶ 25 ¬∑ üìã 21 - 42% open ¬∑ ‚è±Ô∏è 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statisticianinstilettos/recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recmetrics&#34;&gt;PyPi&lt;/a&gt; (üì• 910 / month ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;Case Recommender&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 410) - Case Recommender: A Flexible and Extensible Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 79 ¬∑ üì¶ 10 ¬∑ üìã 27 - 25% open ¬∑ ‚è±Ô∏è 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/caserec/CaseRecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caserecommender&#34;&gt;PyPi&lt;/a&gt; (üì• 180 / month ¬∑ ‚è±Ô∏è 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caserecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NicolasHug/Surprise&#34;&gt;scikit-surprise&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 5.4K ¬∑ üíÄ) - A Python scikit for building and analyzing recommender.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jfkirk/tensorrec&#34;&gt;tensorrec&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.2K ¬∑ üíÄ) - A TensorFlow recommendation algorithm and framework in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ibayer/fastFM&#34;&gt;fastFM&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 980 ¬∑ üíÄ) - fastFM: A Library for Factorization Machines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lenskit/lkpy&#34;&gt;lkpy&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 200) - Python recommendation toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maciejkula/spotlight&#34;&gt;Spotlight&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 2.7K ¬∑ üíÄ) - Deep recommender models using PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ylongqi/openrec&#34;&gt;OpenRec&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 390 ¬∑ üíÄ) - OpenRec is an open-source and modular library for neural network-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ShopRunner/collie&#34;&gt;Collie&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 88) - A library for preparing, training, and evaluating scalable deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Privacy Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for encrypted and privacy-preserving machine learning using methods like federated learning &amp;amp; differential privacy.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;PySyft&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 8.1K) - A library for answering questions using data you cannot see. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 440 ¬∑ üîÄ 1.8K ¬∑ üìã 3.1K - 11% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenMined/PySyft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/syft&#34;&gt;PyPi&lt;/a&gt; (üì• 4.5K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install syft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;FATE&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 4.3K) - An Industrial Grade Federated Learning Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 74 ¬∑ üîÄ 1.3K ¬∑ üìã 1.2K - 33% open ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/FederatedAI/FATE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ETAF&#34;&gt;PyPi&lt;/a&gt; (üì• 13 / month ¬∑ ‚è±Ô∏è 06.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ETAF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;Opacus&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 1.1K) - Training PyTorch models with differential privacy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 50 ¬∑ üîÄ 200 ¬∑ üì• 45 ¬∑ üì¶ 110 ¬∑ üìã 180 - 21% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opacus&#34;&gt;PyPi&lt;/a&gt; (üì• 5.4K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opacus&#34;&gt;Conda&lt;/a&gt; (üì• 720 ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;TensorFlow Privacy&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.6K) - Library for training machine learning models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 46 ¬∑ üîÄ 350 ¬∑ üì• 71 ¬∑ üìã 150 - 43% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-privacy&#34;&gt;PyPi&lt;/a&gt; (üì• 33K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;TFEncrypted&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1K) - A Framework for Encrypted Machine Learning in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 28 ¬∑ üîÄ 180 ¬∑ üì¶ 61 ¬∑ üìã 410 - 40% open ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tf-encrypted/tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-encrypted&#34;&gt;PyPi&lt;/a&gt; (üì• 700 / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;CrypTen&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.1K) - A framework for Privacy Preserving Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 170 ¬∑ üì¶ 18 ¬∑ üìã 150 - 16% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/CrypTen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/crypten&#34;&gt;PyPi&lt;/a&gt; (üì• 240 / month ¬∑ ‚è±Ô∏è 09.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install crypten&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Workflow &amp;amp; Experiment Tracking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to organize, track, and visualize machine learning experiments.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;Tensorboard&lt;/a&gt;&lt;/b&gt; (ü•á43 ¬∑ ‚≠ê 5.9K) - TensorFlows Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 280 ¬∑ üîÄ 1.5K ¬∑ üì¶ 110K ¬∑ üìã 1.7K - 33% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboard&#34;&gt;PyPi&lt;/a&gt; (üì• 15M / month ¬∑ üì¶ 2.4K ¬∑ ‚è±Ô∏è 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard&#34;&gt;Conda&lt;/a&gt; (üì• 2.9M ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;mlflow&lt;/a&gt;&lt;/b&gt; (ü•á41 ¬∑ ‚≠ê 12K) - Open source platform for the machine learning lifecycle. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 410 ¬∑ üîÄ 2.7K ¬∑ üìã 2.4K - 43% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlflow/mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlflow&#34;&gt;PyPi&lt;/a&gt; (üì• 11M / month ¬∑ üì¶ 310 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlflow&#34;&gt;Conda&lt;/a&gt; (üì• 570K ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;DVC&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 9.7K) - Data Version Control | Git for Data &amp;amp; Models | ML Experiments Management. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 270 ¬∑ üîÄ 930 ¬∑ üì• 84K ¬∑ üìã 3.7K - 17% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iterative/dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dvc&#34;&gt;PyPi&lt;/a&gt; (üì• 520K / month ¬∑ üì¶ 47 ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dvc&#34;&gt;Conda&lt;/a&gt; (üì• 1.1M ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;PyCaret&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 5.7K) - An open-source, low-code machine learning library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 1.3K ¬∑ üì• 570 ¬∑ üì¶ 2.1K ¬∑ üìã 1.5K - 15% open ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pycaret/pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycaret&#34;&gt;PyPi&lt;/a&gt; (üì• 450K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycaret&#34;&gt;Conda&lt;/a&gt; (üì• 10K ¬∑ ‚è±Ô∏è 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;SageMaker SDK&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 1.6K) - A library for training and deploying machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 260 ¬∑ üîÄ 780 ¬∑ üì¶ 1.4K ¬∑ üìã 1K - 33% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aws/sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sagemaker&#34;&gt;PyPi&lt;/a&gt; (üì• 8.9M / month ¬∑ üì¶ 50 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sagemaker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sagemaker-python-sdk&#34;&gt;Conda&lt;/a&gt; (üì• 270K ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;wandb client&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 3.9K) - A tool for visualizing and tracking your machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 320 ¬∑ üìã 1.9K - 25% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wandb/client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wandb&#34;&gt;PyPi&lt;/a&gt; (üì• 3.2M / month ¬∑ üì¶ 260 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wandb&#34;&gt;Conda&lt;/a&gt; (üì• 57K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;AzureML SDK&lt;/a&gt;&lt;/b&gt; (ü•à35 ¬∑ ‚≠ê 3.1K) - Python notebooks with ML and deep learning examples with Azure.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 60 ¬∑ üîÄ 2.1K ¬∑ üì• 460 ¬∑ üìã 1.3K - 21% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Azure/MachineLearningNotebooks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/azureml-sdk&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3M / month ¬∑ üì¶ 46 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install azureml-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;ClearML&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 3.2K) - ClearML - Auto-Magical CI/CD to streamline your ML workflow... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 430 ¬∑ üì• 430 ¬∑ üì¶ 250 ¬∑ üìã 540 - 41% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allegroai/clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/clearml&#34;&gt;PyPi&lt;/a&gt; (üì• 81K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/allegroai/trains&#34;&gt;Docker Hub&lt;/a&gt; (üì• 30K ¬∑ ‚è±Ô∏è 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull allegroai/trains&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;snakemake&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 1.4K ¬∑ üìâ) - This is the development home of the workflow management system.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 250 ¬∑ üîÄ 330 ¬∑ üì¶ 1.1K ¬∑ üìã 1K - 59% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snakemake/snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snakemake&#34;&gt;PyPi&lt;/a&gt; (üì• 49K / month ¬∑ üì¶ 210 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/snakemake&#34;&gt;Conda&lt;/a&gt; (üì• 440K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;tensorboardX&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 7.3K ¬∑ üìâ) - tensorboard for pytorch (and chainer, mxnet, numpy, ...). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 71 ¬∑ üîÄ 850 ¬∑ üì• 350 ¬∑ üì¶ 19K ¬∑ üìã 440 - 16% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lanpa/tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboardX&#34;&gt;PyPi&lt;/a&gt; (üì• 3M / month ¬∑ üì¶ 880 ¬∑ ‚è±Ô∏è 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboardx&#34;&gt;Conda&lt;/a&gt; (üì• 690K ¬∑ ‚è±Ô∏è 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboardx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;Metaflow&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 5.6K) - Build and manage real-life data science projects with ease!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 52 ¬∑ üîÄ 510 ¬∑ üì¶ 290 ¬∑ üìã 450 - 49% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Netflix/metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metaflow&#34;&gt;PyPi&lt;/a&gt; (üì• 52K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metaflow&#34;&gt;Conda&lt;/a&gt; (üì• 40K ¬∑ ‚è±Ô∏è 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;sacred&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 3.8K) - Sacred is a tool to help you configure, organize, log and reproduce.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 97 ¬∑ üîÄ 340 ¬∑ üì¶ 1.4K ¬∑ üìã 540 - 16% open ¬∑ ‚è±Ô∏è 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IDSIA/sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sacred&#34;&gt;PyPi&lt;/a&gt; (üì• 35K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 14.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sacred&#34;&gt;Conda&lt;/a&gt; (üì• 420 ¬∑ ‚è±Ô∏è 14.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;Catalyst&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 2.9K) - Accelerated deep learning R&amp;amp;D. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 360 ¬∑ üì¶ 550 ¬∑ üìã 330 - 0% open ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catalyst-team/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catalyst&#34;&gt;PyPi&lt;/a&gt; (üì• 2.2M / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;aim&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 2.4K) - Aim easy-to-use and performant open-source ML experiment tracker. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 37 ¬∑ üîÄ 150 ¬∑ üì¶ 78 ¬∑ üìã 540 - 33% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aimhubio/aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aim&#34;&gt;PyPi&lt;/a&gt; (üì• 43K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aim&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;VisualDL&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 4.3K) - Deep Learning Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 31 ¬∑ üîÄ 580 ¬∑ üì• 180 ¬∑ üì¶ 1.1K ¬∑ üìã 410 - 18% open ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/VisualDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/visualdl&#34;&gt;PyPi&lt;/a&gt; (üì• 90K / month ¬∑ üì¶ 23 ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install visualdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;ml-metadata&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 470) - For recording and retrieving metadata associated with ML.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 98 ¬∑ üì• 1.7K ¬∑ üì¶ 220 ¬∑ üìã 87 - 28% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ml-metadata&#34;&gt;PyPi&lt;/a&gt; (üì• 730K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;Guild AI&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 700) - Experiment tracking, ML developer tools. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 63 ¬∑ üì• 1 ¬∑ üì¶ 51 ¬∑ üìã 360 - 43% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guildai/guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/guildai&#34;&gt;PyPi&lt;/a&gt; (üì• 3.2K / month ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;livelossplot&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.2K) - Live training loss plot in Jupyter Notebook for Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 140 ¬∑ üì¶ 790 ¬∑ üìã 74 - 5% open ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stared/livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/livelossplot&#34;&gt;PyPi&lt;/a&gt; (üì• 70K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;Labml&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.1K) - Monitor deep learning model training and hardware usage from your mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 78 ¬∑ üì¶ 47 ¬∑ üìã 25 - 52% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/labmlai/labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/labml&#34;&gt;PyPi&lt;/a&gt; (üì• 4.1K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;lore&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1.5K) - Lore makes machine learning approachable for Software Engineers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 26 ¬∑ üîÄ 130 ¬∑ üì¶ 19 ¬∑ üìã 45 - 57% open ¬∑ ‚è±Ô∏è 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/instacart/lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lore&#34;&gt;PyPi&lt;/a&gt; (üì• 730 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;Studio.ml&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 370 ¬∑ üí§) - Studio: Simplify and expedite model building process. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 52 ¬∑ üì¶ 5 ¬∑ üìã 250 - 22% open ¬∑ ‚è±Ô∏è 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/studioml/studio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/studioml&#34;&gt;PyPi&lt;/a&gt; (üì• 540 / month ¬∑ ‚è±Ô∏è 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install studioml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;keepsake&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 1.6K) - Version control for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 64 ¬∑ üìã 190 - 65% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/replicate/keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keepsake&#34;&gt;PyPi&lt;/a&gt; (üì• 570 / month ¬∑ ‚è±Ô∏è 11.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neptune-ai/neptune-client&#34;&gt;Neptune.ai&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 280) - Experiment tracking tool and model registry. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kaggle/kaggle-api&#34;&gt;kaggle&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 4.7K ¬∑ üíÄ) - Official Kaggle API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/knockknock&#34;&gt;knockknock&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 2.4K ¬∑ üíÄ) - Knock Knock: Get notified when your training ends with only two.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/tnt&#34;&gt;TNT&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.4K ¬∑ üíÄ) - Simple tools for logging and visualizing, loading and training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EducationalTestingService/skll&#34;&gt;SKLL&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 530) - SciKit-Learn Laboratory (SKLL) makes it easy to run machine.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;‚ùóÔ∏èBSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/m3dev/gokart&#34;&gt;gokart&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 250) - Gokart solves reproducibility, task dependencies, constraints of good code,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/tensorwatch&#34;&gt;TensorWatch&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 3.2K ¬∑ üíÄ) - Debugging, monitoring and visualization for Python Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/waleedka/hiddenlayer&#34;&gt;hiddenlayer&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 1.6K ¬∑ üíÄ) - Neural network graphs and training metrics for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MrPowers/quinn&#34;&gt;quinn&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 330 ¬∑ üíÄ) - pyspark methods to enhance developer productivity. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/tensorboard_logger&#34;&gt;TensorBoard Logger&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 620 ¬∑ üíÄ) - Log TensorBoard events without touching TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/mxboard&#34;&gt;MXBoard&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 330 ¬∑ üíÄ) - Logging MXNet data for visualization in TensorBoard. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datmo/datmo&#34;&gt;datmo&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 340 ¬∑ üíÄ) - Open source production model management tool for data scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradsflow/chitra&#34;&gt;chitra&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 190) - A multi-functional library for full-stack Deep Learning. Simplifies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minerva-ml/steppy&#34;&gt;steppy&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 130 ¬∑ üíÄ) - Lightweight, Python library for fast and reproducible experimentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/caliban&#34;&gt;caliban&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 430 ¬∑ üíÄ) - Research workflows made easy, locally and in the Cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelChimp/modelchimp&#34;&gt;ModelChimp&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 120 ¬∑ üí§) - Experiment tracking for machine and deep learning projects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traintool&#34;&gt;traintool&lt;/a&gt;&lt;/b&gt; (ü•â8 ¬∑ ‚≠ê 9 ¬∑ üíÄ) - Train off-the-shelf machine learning models in one.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Serialization &amp;amp; Deployment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to serialize models to files, convert between a variety of model formats, and optimize models for deployment.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;onnx&lt;/a&gt;&lt;/b&gt; (ü•á41 ¬∑ ‚≠ê 13K) - Open standard for machine learning interoperability. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 230 ¬∑ üîÄ 2.7K ¬∑ üì• 18K ¬∑ üì¶ 6.9K ¬∑ üìã 2K - 13% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/onnx/onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/onnx&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1M / month ¬∑ üì¶ 370 ¬∑ ‚è±Ô∏è 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/onnx&#34;&gt;Conda&lt;/a&gt; (üì• 410K ¬∑ ‚è±Ô∏è 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;Core ML Tools&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 2.7K) - Core ML tools contain supporting tools for Core ML model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 400 ¬∑ üì• 4.2K ¬∑ üì¶ 910 ¬∑ üìã 1K - 33% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/coremltools&#34;&gt;PyPi&lt;/a&gt; (üì• 100K / month ¬∑ üì¶ 140 ¬∑ ‚è±Ô∏è 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/coremltools&#34;&gt;Conda&lt;/a&gt; (üì• 31K ¬∑ ‚è±Ô∏è 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;huggingface_hub&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 430) - All the open source things related to the Hugging Face Hub. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 63 ¬∑ üîÄ 100 ¬∑ üìã 240 - 34% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huggingface_hub&#34;&gt;PyPi&lt;/a&gt; (üì• 5.7M / month ¬∑ üì¶ 82 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huggingface_hub&#34;&gt;Conda&lt;/a&gt; (üì• 140K ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;TorchServe&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.6K) - Serve, optimize and scale PyTorch models in production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 520 ¬∑ üì• 1.8K ¬∑ üìã 890 - 14% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchserve&#34;&gt;PyPi&lt;/a&gt; (üì• 21K / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/torchserve&#34;&gt;Conda&lt;/a&gt; (üì• 23K ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/pytorch/torchserve&#34;&gt;Docker Hub&lt;/a&gt; (üì• 1M ¬∑ ‚≠ê 12 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull pytorch/torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;triton&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 3.6K) - Development repository for the Triton language and compiler. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 41 ¬∑ üîÄ 290 ¬∑ üì¶ 100 ¬∑ üìã 200 - 37% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/triton&#34;&gt;PyPi&lt;/a&gt; (üì• 100K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;BentoML&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 3.5K) - The Unified Model Serving Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 390 ¬∑ üì• 1.5K ¬∑ üìã 590 - 10% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bentoml/BentoML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bentoml&#34;&gt;PyPi&lt;/a&gt; (üì• 32K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bentoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;Hummingbird&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 2.8K) - Hummingbird compiles trained ML models into tensor computation for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 220 ¬∑ üì• 170 ¬∑ üì¶ 32 ¬∑ üìã 240 - 20% open ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/hummingbird&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hummingbird-ml&#34;&gt;PyPi&lt;/a&gt; (üì• 2.4K / month ¬∑ ‚è±Ô∏è 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hummingbird-ml&#34;&gt;Conda&lt;/a&gt; (üì• 7.5K ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;m2cgen&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 2.1K) - Transform ML models into a native code (Java, C, Python, Go, JavaScript,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 190 ¬∑ üì• 16 ¬∑ üì¶ 34 ¬∑ üìã 90 - 26% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BayesWitnesses/m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/m2cgen&#34;&gt;PyPi&lt;/a&gt; (üì• 42K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;cortex&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 7.7K) - Production infrastructure for machine learning at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 590 ¬∑ üìã 1.1K - 9% open ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cortexlabs/cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cortex&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;sklearn-porter&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.2K ¬∑ üìà) - Transpile trained scikit-learn estimators to C, Java,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 160 ¬∑ üì¶ 43 ¬∑ üìã 76 - 55% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nok/sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-porter&#34;&gt;PyPi&lt;/a&gt; (üì• 270 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 18.12.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;pytorch2keras&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 790 ¬∑ üí§) - PyTorch to Keras model convertor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 130 ¬∑ üì¶ 46 ¬∑ üìã 120 - 44% open ¬∑ ‚è±Ô∏è 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gmalivenko/pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch2keras&#34;&gt;PyPi&lt;/a&gt; (üì• 740 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;nebullvm&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 1.1K ¬∑ üê£) - Easy-to-use library to boost AI inference leveraging state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 52 ¬∑ üì¶ 1 ¬∑ üìã 38 - 60% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nebuly-ai/nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nebullvm&#34;&gt;PyPi&lt;/a&gt; (üì• 640 / month ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 4 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/MMdnn&#34;&gt;mmdnn&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 5.6K ¬∑ üíÄ) - MMdnn is a set of tools to help users inter-operate among different deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/larq/compute-engine&#34;&gt;Larq Compute Engine&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 190) - Highly optimized inference engine for Binarized.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/riga/tfdeploy&#34;&gt;tfdeploy&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 350 ¬∑ üíÄ) - Deploy tensorflow graphs for fast evaluation and export to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/backprop-ai/backprop&#34;&gt;backprop&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 230 ¬∑ üí§) - Backprop makes it simple to use, finetune, and deploy state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Interpretability&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to visualize, explain, debug, evaluate, and interpret machine learning models.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;shap&lt;/a&gt;&lt;/b&gt; (ü•á40 ¬∑ ‚≠ê 16K) - A game theoretic approach to explain the output of any machine learning model. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 180 ¬∑ üîÄ 2.4K ¬∑ üì¶ 5.5K ¬∑ üìã 1.9K - 69% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/slundberg/shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shap&#34;&gt;PyPi&lt;/a&gt; (üì• 4.9M / month ¬∑ üì¶ 220 ¬∑ ‚è±Ô∏è 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shap&#34;&gt;Conda&lt;/a&gt; (üì• 1.2M ¬∑ ‚è±Ô∏è 23.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;arviz&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 1.2K) - Exploratory analysis of Bayesian models with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 120 ¬∑ üîÄ 280 ¬∑ üì• 110 ¬∑ üì¶ 2.3K ¬∑ üìã 730 - 20% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arviz-devs/arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arviz&#34;&gt;PyPi&lt;/a&gt; (üì• 450K / month ¬∑ üì¶ 100 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arviz&#34;&gt;Conda&lt;/a&gt; (üì• 720K ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;Netron&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 19K) - Visualizer for neural network, deep learning, and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2 ¬∑ üîÄ 2.2K ¬∑ üì• 43K ¬∑ üì¶ 7 ¬∑ üìã 800 - 2% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lutzroeder/netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/netron&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 65 ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;Lime&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 9.8K ¬∑ üí§) - Lime: Explaining the predictions of any machine learning classifier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 61 ¬∑ üîÄ 1.5K ¬∑ üì¶ 2.3K ¬∑ üìã 560 - 6% open ¬∑ ‚è±Ô∏è 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lime&#34;&gt;PyPi&lt;/a&gt; (üì• 500K / month ¬∑ üì¶ 110 ¬∑ ‚è±Ô∏è 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lime&#34;&gt;Conda&lt;/a&gt; (üì• 100K ¬∑ ‚è±Ô∏è 28.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;InterpretML&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 4.7K) - Fit interpretable models. Explain blackbox machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 580 ¬∑ üì¶ 210 ¬∑ üìã 290 - 32% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret&#34;&gt;PyPi&lt;/a&gt; (üì• 90K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;Captum&lt;/a&gt;&lt;/b&gt; (ü•á31 ¬∑ ‚≠ê 3.2K) - Model interpretability and understanding for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 83 ¬∑ üîÄ 330 ¬∑ üì¶ 550 ¬∑ üìã 360 - 23% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/captum&#34;&gt;PyPi&lt;/a&gt; (üì• 53K / month ¬∑ üì¶ 19 ¬∑ ‚è±Ô∏è 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/captum&#34;&gt;Conda&lt;/a&gt; (üì• 920 ¬∑ ‚è±Ô∏è 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;Model Analysis&lt;/a&gt;&lt;/b&gt; (ü•á31 ¬∑ ‚≠ê 1.2K) - Model analysis tools for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 43 ¬∑ üîÄ 250 ¬∑ üìã 76 - 35% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-analysis&#34;&gt;PyPi&lt;/a&gt; (üì• 930K / month ¬∑ üì¶ 21 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;shapash&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1.7K) - Shapash makes Machine Learning models transparent and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 34 ¬∑ üîÄ 230 ¬∑ üì¶ 74 ¬∑ üìã 120 - 15% open ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MAIF/shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapash&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;Alibi&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1.6K) - Algorithms for explaining machine learning models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 190 ¬∑ üì¶ 170 ¬∑ üìã 300 - 42% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi&#34;&gt;PyPi&lt;/a&gt; (üì• 24K / month ¬∑ üì¶ 24 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;yellowbrick&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 3.6K) - Visual analysis and diagnostic tools to facilitate machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 520 ¬∑ üìã 660 - 13% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DistrictDataLabs/yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yellowbrick&#34;&gt;PyPi&lt;/a&gt; (üì• 640K / month ¬∑ üì¶ 62 ¬∑ ‚è±Ô∏è 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/yellowbrick&#34;&gt;Conda&lt;/a&gt; (üì• 27K ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;DoWhy&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 3.8K) - DoWhy is a Python library for causal inference that supports explicit.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 610 ¬∑ üì• 29 ¬∑ üì¶ 110 ¬∑ üìã 200 - 27% open ¬∑ ‚è±Ô∏è 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Microsoft/dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dowhy&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dowhy&#34;&gt;Conda&lt;/a&gt; (üì• 5.4K ¬∑ ‚è±Ô∏è 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;dtreeviz&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.1K) - A python library for decision tree visualization and model interpretation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 270 ¬∑ üì¶ 380 ¬∑ üìã 120 - 20% open ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtreeviz&#34;&gt;PyPi&lt;/a&gt; (üì• 110K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtreeviz&#34;&gt;Conda&lt;/a&gt; (üì• 11K ¬∑ ‚è±Ô∏è 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;fairlearn&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.3K) - A Python package to assess and improve fairness of machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 67 ¬∑ üîÄ 310 ¬∑ üìã 380 - 44% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fairlearn/fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairlearn&#34;&gt;PyPi&lt;/a&gt; (üì• 96K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairlearn&#34;&gt;Conda&lt;/a&gt; (üì• 18K ¬∑ ‚è±Ô∏è 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;explainerdashboard&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.2K) - Quickly build Explainable AI dashboards that show the inner.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 160 ¬∑ üì¶ 110 ¬∑ üìã 180 - 6% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/oegedijk/explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/explainerdashboard&#34;&gt;PyPi&lt;/a&gt; (üì• 40K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/explainerdashboard&#34;&gt;Conda&lt;/a&gt; (üì• 16K ¬∑ ‚è±Ô∏è 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;Fairness 360&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 1.7K) - A comprehensive set of fairness metrics for datasets and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 550 ¬∑ üì¶ 160 ¬∑ üìã 140 - 55% open ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIF360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aif360&#34;&gt;PyPi&lt;/a&gt; (üì• 8.5K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 04.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aif360&#34;&gt;Conda&lt;/a&gt; (üì• 2.1K ¬∑ ‚è±Ô∏è 29.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;responsible-ai-widgets&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 490) - This project provides responsible AI user interfaces.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 120 ¬∑ üì¶ 29 ¬∑ üìã 260 - 19% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/responsible-ai-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/raiwidgets&#34;&gt;PyPi&lt;/a&gt; (üì• 11K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install raiwidgets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;checklist&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 1.7K ¬∑ üí§) - Beyond Accuracy: Behavioral Testing of NLP models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 160 ¬∑ üì¶ 130 ¬∑ üìã 92 - 13% open ¬∑ ‚è±Ô∏è 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/checklist&#34;&gt;PyPi&lt;/a&gt; (üì• 41K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 24.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/checklist&#34;&gt;Conda&lt;/a&gt; (üì• 2.9K ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;CausalNex&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.5K) - A Python library that helps data scientists to infer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 170 ¬∑ üì¶ 39 ¬∑ üìã 110 - 19% open ¬∑ ‚è±Ô∏è 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/quantumblacklabs/causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalnex&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;Explainability 360&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.1K) - Interpretability and explainability of data and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 29 ¬∑ üîÄ 220 ¬∑ üì¶ 45 ¬∑ üìã 64 - 59% open ¬∑ ‚è±Ô∏è 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIX360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aix360&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aix360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;imodels&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 770) - Interpretable ML package for concise, transparent, and accurate predictive.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 74 ¬∑ üì¶ 12 ¬∑ üìã 33 - 27% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/csinva/imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imodels&#34;&gt;PyPi&lt;/a&gt; (üì• 3.2K / month ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;LIT&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 2.9K) - The Language Interpretability Tool: Interactively analyze NLP models for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 300 ¬∑ üì¶ 10 ¬∑ üìã 130 - 48% open ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/lit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lit-nlp&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2K / month ¬∑ ‚è±Ô∏è 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lit-nlp&#34;&gt;Conda&lt;/a&gt; (üì• 35K ¬∑ ‚è±Ô∏è 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;keract&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 980) - Layers Outputs and Gradients in Keras. Made easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 180 ¬∑ üì¶ 140 ¬∑ üìã 86 - 5% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/philipperemy/keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keract&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;deeplift&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 640) - Public facing deeplift repo. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 150 ¬∑ üì¶ 59 ¬∑ üìã 84 - 42% open ¬∑ ‚è±Ô∏è 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kundajelab/deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeplift&#34;&gt;PyPi&lt;/a&gt; (üì• 750 / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;tf-explain&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 930) - Interpretability Methods for tf.keras models with Tensorflow 2.x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 98 ¬∑ üì¶ 120 ¬∑ üìã 91 - 43% open ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sicara/tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-explain&#34;&gt;PyPi&lt;/a&gt; (üì• 2.2K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;DiCE&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 830) - Generate Diverse Counterfactual Explanations for any machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 120 ¬∑ üìã 120 - 44% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/DiCE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dice-ml&#34;&gt;PyPi&lt;/a&gt; (üì• 53K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dice-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;What-If Tool&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 680) - Source code/webpage/demos for the What-If Tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 130 ¬∑ üìã 100 - 54% open ¬∑ ‚è±Ô∏è 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/what-if-tool&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/witwidget&#34;&gt;PyPi&lt;/a&gt; (üì• 6.5K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install witwidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard-plugin-wit&#34;&gt;Conda&lt;/a&gt; (üì• 990K ¬∑ ‚è±Ô∏è 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard-plugin-wit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wit-widget&#34;&gt;npm&lt;/a&gt; (üì• 4.3K / month ¬∑ ‚è±Ô∏è 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install wit-widget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;aequitas&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 480 ¬∑ üí§) - Bias and Fairness Audit Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 88 ¬∑ üì¶ 100 ¬∑ üìã 59 - 64% open ¬∑ ‚è±Ô∏è 27.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dssg/aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aequitas&#34;&gt;PyPi&lt;/a&gt; (üì• 2.5K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 16.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;sklearn-evaluation&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 320) - Machine learning model evaluation made easy: plots,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 8 ¬∑ üîÄ 31 ¬∑ üì¶ 46 ¬∑ üìã 39 - 23% open ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/edublancas/sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-evaluation&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;ecco&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.4K) - Explain, analyze, and visualize NLP language models. Ecco creates.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 94 ¬∑ üì• 16 ¬∑ üì¶ 7 ¬∑ üìã 36 - 38% open ¬∑ ‚è±Ô∏è 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jalammar/ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ecco&#34;&gt;PyPi&lt;/a&gt; (üì• 290 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ecco&#34;&gt;Conda&lt;/a&gt; (üì• 400 ¬∑ ‚è±Ô∏è 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;iNNvestigate&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 980 ¬∑ üí§) - A toolbox to iNNvestigate neural networks predictions!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 220 ¬∑ üìã 240 - 29% open ¬∑ ‚è±Ô∏è 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albermax/innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/innvestigate&#34;&gt;PyPi&lt;/a&gt; (üì• 370 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;tcav&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 520 ¬∑ üí§) - Code for the TCAV ML interpretability project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 130 ¬∑ üì¶ 12 ¬∑ üìã 61 - 11% open ¬∑ ‚è±Ô∏è 16.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tcav&#34;&gt;PyPi&lt;/a&gt; (üì• 120 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 23.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;XAI&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 820 ¬∑ üí§) - XAI - An eXplainability toolbox for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3 ¬∑ üîÄ 120 ¬∑ üì¶ 15 ¬∑ üìã 9 - 22% open ¬∑ ‚è±Ô∏è 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EthicalML/xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xai&#34;&gt;PyPi&lt;/a&gt; (üì• 150 / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;LOFO&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 470) - Leave One Feature Out Importance. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 3 ¬∑ üîÄ 53 ¬∑ üì¶ 19 ¬∑ üìã 20 - 20% open ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aerdem4/lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lofo-importance&#34;&gt;PyPi&lt;/a&gt; (üì• 480 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;Anchor&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 700) - Code for High-Precision Model-Agnostic Explanations paper. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 97 ¬∑ üìã 70 - 27% open ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/anchor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/anchor_exp&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2K / month ¬∑ ‚è±Ô∏è 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install anchor_exp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;interpret-text&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 320) - A library that incorporates state-of-the-art explainers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 57 ¬∑ üìã 74 - 78% open ¬∑ ‚è±Ô∏è 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret-text&#34;&gt;PyPi&lt;/a&gt; (üì• 100 / month ¬∑ ‚è±Ô∏è 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/eli5&#34;&gt;eli5&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.5K ¬∑ üíÄ) - A library for debugging/inspecting machine learning classifiers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmabey/pyLDAvis&#34;&gt;pyLDAvis&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.6K ¬∑ üíÄ) - Python library for interactive topic model visualization... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/lucid&#34;&gt;Lucid&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 4.4K ¬∑ üíÄ) - A collection of infrastructure and tools for research in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/scikit-plot&#34;&gt;scikit-plot&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 2.2K ¬∑ üíÄ) - An intuitive library to add plotting functionality to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchecks/deepchecks&#34;&gt;Deep Checks&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 1.5K) - Test Suites for Validating ML Models &amp;amp; Data. Deepchecks is a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raghakot/keras-vis&#34;&gt;keras-vis&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 2.9K ¬∑ üíÄ) - Neural network visualization toolkit for keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelOriented/DALEX&#34;&gt;DALEX&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1K) - moDel Agnostic Language for Exploration and eXplanation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andosa/treeinterpreter&#34;&gt;TreeInterpreter&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 710 ¬∑ üíÄ) - Package for interpreting scikit-learns decision tree.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/random-forest-importances&#34;&gt;random-forest-importances&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 500 ¬∑ üíÄ) - Code to compute permutation and drop-column.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oracle/Skater&#34;&gt;Skater&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1K) - Python Library for Model Interpretation/Explanations. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=UPL-1.0&#34;&gt;‚ùóÔ∏èUPL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/fairness-indicators&#34;&gt;fairness-indicators&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 260) - Tensorflows Fairness Evaluation and Visualization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-card-toolkit&#34;&gt;model-card-toolkit&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 280) - a tool that leverages rich metadata and lineage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MisaOgura/flashtorch&#34;&gt;FlashTorch&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 670 ¬∑ üíÄ) - Visualization toolkit for neural networks in PyTorch! Demo --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explainX/explainx&#34;&gt;ExplainX.ai&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 310 ¬∑ üíÄ) - Explainable AI framework for data scientists. Explain &amp;amp; debug any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SAP/contextual-ai&#34;&gt;contextual-ai&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 80) - Contextual AI adds explainability to different stages of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/suinleelab/attributionpriors&#34;&gt;Attribution Priors&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 98 ¬∑ üíÄ) - Tools for training explainable models using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intuit/bias-detector&#34;&gt;bias-detector&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 37) - Bias Detector is a python package for detecting bias in machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Vector Similarity Search (ANN)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for Approximate Nearest Neighbor Search and Vector Indexing/Similarity Search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/erikbern/ann-benchmarks&#34;&gt;ANN Benchmarks&lt;/a&gt;&lt;/b&gt; ( ‚≠ê 2.9K) - Benchmarks of approximate nearest neighbor libraries in Python.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;Milvus&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 10K) - An open-source vector database for scalable similarity search and AI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 210 ¬∑ üîÄ 1.5K ¬∑ üì• 29K ¬∑ üìã 5.1K - 5% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/milvus-io/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (üì• 40K / month ¬∑ üì¶ 16 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/milvusdb/milvus&#34;&gt;Docker Hub&lt;/a&gt; (üì• 960K ¬∑ ‚≠ê 18 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull milvusdb/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;Faiss&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 17K) - A library for efficient similarity search and clustering of dense vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 98 ¬∑ üîÄ 2.6K ¬∑ üì¶ 640 ¬∑ üìã 1.8K - 9% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (üì• 40K / month ¬∑ üì¶ 16 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/faiss&#34;&gt;Conda&lt;/a&gt; (üì• 320K ¬∑ ‚è±Ô∏è 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;Annoy&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 9.9K) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 81 ¬∑ üîÄ 1K ¬∑ üì¶ 2.1K ¬∑ üìã 340 - 10% open ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/annoy&#34;&gt;PyPi&lt;/a&gt; (üì• 1.3M / month ¬∑ üì¶ 240 ¬∑ ‚è±Ô∏è 18.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-annoy&#34;&gt;Conda&lt;/a&gt; (üì• 230K ¬∑ ‚è±Ô∏è 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;NMSLIB&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 2.8K) - Non-Metric Space Library (NMSLIB): An efficient similarity search.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 48 ¬∑ üîÄ 380 ¬∑ üì¶ 610 ¬∑ üìã 400 - 15% open ¬∑ ‚è±Ô∏è 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nmslib&#34;&gt;PyPi&lt;/a&gt; (üì• 100K / month ¬∑ üì¶ 47 ¬∑ ‚è±Ô∏è 03.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nmslib&#34;&gt;Conda&lt;/a&gt; (üì• 52K ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;hnswlib&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2K) - Header-only C++/python library for fast approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 56 ¬∑ üîÄ 360 ¬∑ üì¶ 240 ¬∑ üìã 250 - 51% open ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hnswlib&#34;&gt;PyPi&lt;/a&gt; (üì• 350K / month ¬∑ üì¶ 24 ¬∑ ‚è±Ô∏è 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hnswlib&#34;&gt;Conda&lt;/a&gt; (üì• 40K ¬∑ ‚è±Ô∏è 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;PyNNDescent&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 620) - A Python nearest neighbor descent for approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 85 ¬∑ üì¶ 1.6K ¬∑ üìã 100 - 48% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pynndescent&#34;&gt;PyPi&lt;/a&gt; (üì• 2.8M / month ¬∑ üì¶ 26 ¬∑ ‚è±Ô∏è 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pynndescent&#34;&gt;Conda&lt;/a&gt; (üì• 620K ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;NGT&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 900) - Nearest Neighbor Search with Neighborhood Graph and Tree for High-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 91 ¬∑ üìã 100 - 14% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoojapan/NGT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ngt&#34;&gt;PyPi&lt;/a&gt; (üì• 17K / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ngt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;N2&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 520 ¬∑ üí§) - TOROS N2 - lightweight approximate Nearest Neighbor library which runs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 18 ¬∑ üîÄ 64 ¬∑ üì¶ 23 ¬∑ üìã 39 - 43% open ¬∑ ‚è±Ô∏è 20.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kakao/n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/n2&#34;&gt;PyPi&lt;/a&gt; (üì• 580 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 16.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plasticityai/magnitude&#34;&gt;Magnitude&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - A fast, efficient universal vector embedding utility package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pixelogik/NearPy&#34;&gt;NearPy&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 710 ¬∑ üíÄ) - Python framework for fast (approximated) nearest neighbour search in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pysparnn&#34;&gt;PySparNN&lt;/a&gt;&lt;/b&gt; (ü•â11 ¬∑ ‚≠ê 900 ¬∑ üíÄ) - Approximate Nearest Neighbor Search for Sparse Data in Python!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Probabilistics &amp;amp; Statistics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries providing capabilities for probabilistic programming/reasoning, bayesian inference, gaussian processes, or statistics.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;PyMC3&lt;/a&gt;&lt;/b&gt; (ü•á40 ¬∑ ‚≠ê 6.6K) - Probabilistic Programming in Python: Bayesian Modeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 380 ¬∑ üîÄ 1.6K ¬∑ üì• 1.9K ¬∑ üì¶ 620 ¬∑ üìã 2.7K - 7% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pymc-devs/pymc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymc3&#34;&gt;PyPi&lt;/a&gt; (üì• 360K / month ¬∑ üì¶ 240 ¬∑ ‚è±Ô∏è 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pymc3&#34;&gt;Conda&lt;/a&gt; (üì• 410K ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;tensorflow-probability&lt;/a&gt;&lt;/b&gt; (ü•á37 ¬∑ ‚≠ê 3.7K) - Probabilistic reasoning and statistical analysis in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 450 ¬∑ üîÄ 970 ¬∑ üìã 1.2K - 44% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-probability&#34;&gt;PyPi&lt;/a&gt; (üì• 950K / month ¬∑ üì¶ 310 ¬∑ ‚è±Ô∏è 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-probability&#34;&gt;Conda&lt;/a&gt; (üì• 57K ¬∑ ‚è±Ô∏è 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;Pyro&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 7.5K) - Deep universal probabilistic programming with Python and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 920 ¬∑ üì¶ 720 ¬∑ üìã 980 - 22% open ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyro-ppl/pyro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyro-ppl&#34;&gt;PyPi&lt;/a&gt; (üì• 180K / month ¬∑ üì¶ 59 ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyro-ppl&#34;&gt;Conda&lt;/a&gt; (üì• 8.9K ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GPyTorch&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.8K) - A highly efficient and modular implementation of Gaussian Processes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 93 ¬∑ üîÄ 420 ¬∑ üì¶ 580 ¬∑ üìã 1.1K - 26% open ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cornellius-gp/gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpytorch&#34;&gt;PyPi&lt;/a&gt; (üì• 190K / month ¬∑ üì¶ 38 ¬∑ ‚è±Ô∏è 04.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpytorch&#34;&gt;Conda&lt;/a&gt; (üì• 34K ¬∑ ‚è±Ô∏è 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;hmmlearn&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.5K) - Hidden Markov Models in Python, with scikit-learn like API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 40 ¬∑ üîÄ 700 ¬∑ üì¶ 1.3K ¬∑ üìã 390 - 13% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hmmlearn/hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hmmlearn&#34;&gt;PyPi&lt;/a&gt; (üì• 390K / month ¬∑ üì¶ 130 ¬∑ ‚è±Ô∏è 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hmmlearn&#34;&gt;Conda&lt;/a&gt; (üì• 120K ¬∑ ‚è±Ô∏è 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;filterpy&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.3K ¬∑ üí§) - Python Kalman filtering and optimal estimation library. Implements.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 510 ¬∑ üì¶ 1.4K ¬∑ üìã 210 - 26% open ¬∑ ‚è±Ô∏è 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlabbe/filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/filterpy&#34;&gt;PyPi&lt;/a&gt; (üì• 690K / month ¬∑ üì¶ 130 ¬∑ ‚è±Ô∏è 10.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/filterpy&#34;&gt;Conda&lt;/a&gt; (üì• 95K ¬∑ ‚è±Ô∏è 05.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;pgmpy&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 2.1K) - Python Library for learning (Structure and Parameter), inference.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 110 ¬∑ üîÄ 630 ¬∑ üì• 150 ¬∑ üì¶ 360 ¬∑ üìã 790 - 28% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pgmpy/pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgmpy&#34;&gt;PyPi&lt;/a&gt; (üì• 97K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GPflow&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 1.6K) - Gaussian processes in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 420 ¬∑ üì¶ 360 ¬∑ üìã 780 - 17% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/GPflow/GPflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpflow&#34;&gt;PyPi&lt;/a&gt; (üì• 23K / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpflow&#34;&gt;Conda&lt;/a&gt; (üì• 12K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;pandas-ta&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.5K) - Technical Analysis Indicators - Pandas TA is an easy to use.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 44 ¬∑ üîÄ 560 ¬∑ üì¶ 660 ¬∑ üìã 390 - 13% open ¬∑ ‚è±Ô∏è 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/twopirllc/pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-ta&#34;&gt;PyPi&lt;/a&gt; (üì• 76K / month ¬∑ üì¶ 16 ¬∑ ‚è±Ô∏è 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-ta&#34;&gt;Conda&lt;/a&gt; (üì• 800 ¬∑ ‚è±Ô∏è 05.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;patsy&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 830 ¬∑ üí§) - Describing statistical models in Python using symbolic formulas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 94 ¬∑ üì¶ 52K ¬∑ üìã 140 - 51% open ¬∑ ‚è±Ô∏è 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pydata/patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/patsy&#34;&gt;PyPi&lt;/a&gt; (üì• 9.5M / month ¬∑ üì¶ 2.6K ¬∑ ‚è±Ô∏è 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/patsy&#34;&gt;Conda&lt;/a&gt; (üì• 4.8M ¬∑ ‚è±Ô∏è 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;pomegranate&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 2.9K) - Fast, flexible and easy to use probabilistic modelling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 65 ¬∑ üîÄ 530 ¬∑ üì¶ 690 ¬∑ üìã 660 - 7% open ¬∑ ‚è±Ô∏è 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pomegranate&#34;&gt;PyPi&lt;/a&gt; (üì• 35K / month ¬∑ üì¶ 46 ¬∑ ‚è±Ô∏è 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pomegranate&#34;&gt;Conda&lt;/a&gt; (üì• 86K ¬∑ ‚è±Ô∏è 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;SALib&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 590) - Sensitivity Analysis Library in Python. Contains Sobol, Morris, FAST, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 36 ¬∑ üîÄ 180 ¬∑ üìã 280 - 16% open ¬∑ ‚è±Ô∏è 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SALib/SALib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/salib&#34;&gt;PyPi&lt;/a&gt; (üì• 130K / month ¬∑ üì¶ 58 ¬∑ ‚è±Ô∏è 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/salib&#34;&gt;Conda&lt;/a&gt; (üì• 81K ¬∑ ‚è±Ô∏è 04.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;Orbit&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.4K) - A Python package for Bayesian forecasting with object-oriented design.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 99 ¬∑ üì¶ 6 ¬∑ üìã 370 - 16% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/orbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/orbit-ml&#34;&gt;PyPi&lt;/a&gt; (üì• 46K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install orbit-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;bambi&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 770) - BAyesian Model-Building Interface (Bambi) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 86 ¬∑ üì¶ 28 ¬∑ üìã 250 - 15% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bambinos/bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bambi&#34;&gt;PyPi&lt;/a&gt; (üì• 4.6K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bambi&#34;&gt;Conda&lt;/a&gt; (üì• 7.9K ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;Baal&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 590) - Library to enable Bayesian active learning in your research or labeling.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 54 ¬∑ üìã 75 - 24% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ElementAI/baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/baal&#34;&gt;PyPi&lt;/a&gt; (üì• 990 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/baal&#34;&gt;Conda&lt;/a&gt; (üì• 1.5K ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blei-lab/edward&#34;&gt;Edward&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 4.7K ¬∑ üíÄ) - A probabilistic programming language in TensorFlow. Deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raphaelvallat/pingouin&#34;&gt;pingouin&lt;/a&gt;&lt;/b&gt; (ü•â28 ¬∑ ‚≠ê 1.1K) - Statistical package in Python based on Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stan-dev/pystan&#34;&gt;PyStan&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 190) - PyStan, a Python interface to Stan, a platform for statistical modeling... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maximtrp/scikit-posthocs&#34;&gt;scikit-posthocs&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 240) - Multiple Pairwise Comparisons (Post Hoc) Tests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mattjj/pyhsmm&#34;&gt;pyhsmm&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 510 ¬∑ üíÄ) - Bayesian inference in HSMMs and HMMs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/funsor&#34;&gt;Funsor&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 190) - Functional tensors for probabilistic programming. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thu-ml/zhusuan&#34;&gt;ZhuSuan&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 2.1K ¬∑ üíÄ) - A probabilistic programming library for Bayesian deep learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Adversarial Robustness&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for testing the robustness of machine learning models against attacks with adversarial/malicious examples.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;ART&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 3K ¬∑ üìâ) - Adversarial Robustness Toolbox (ART) - Python Library for Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 99 ¬∑ üîÄ 830 ¬∑ üì¶ 220 ¬∑ üìã 690 - 13% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adversarial-robustness-toolbox&#34;&gt;PyPi&lt;/a&gt; (üì• 7.1K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/adversarial-robustness-toolbox&#34;&gt;Conda&lt;/a&gt; (üì• 9.4K ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;Foolbox&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.2K) - A Python toolbox to create adversarial examples that fool neural networks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 32 ¬∑ üîÄ 400 ¬∑ üì¶ 290 ¬∑ üìã 350 - 6% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bethgelab/foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/foolbox&#34;&gt;PyPi&lt;/a&gt; (üì• 2.7K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/foolbox&#34;&gt;Conda&lt;/a&gt; (üì• 5.9K ¬∑ ‚è±Ô∏è 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;CleverHans&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 5.5K ¬∑ üí§) - An adversarial example library for constructing attacks,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 130 ¬∑ üîÄ 1.3K ¬∑ üì¶ 320 ¬∑ üìã 450 - 5% open ¬∑ ‚è±Ô∏è 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cleverhans-lab/cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cleverhans&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 24.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cleverhans&#34;&gt;Conda&lt;/a&gt; (üì• 3K ¬∑ ‚è±Ô∏è 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;TextAttack&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2K) - TextAttack is a Python framework for adversarial attacks, data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 51 ¬∑ üîÄ 250 ¬∑ üì¶ 78 ¬∑ üìã 200 - 20% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/QData/TextAttack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textattack&#34;&gt;PyPi&lt;/a&gt; (üì• 2.2K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textattack&#34;&gt;Conda&lt;/a&gt; (üì• 2.8K ¬∑ ‚è±Ô∏è 29.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;robustness&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 700) - A library for experimenting with, training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 140 ¬∑ üì¶ 77 ¬∑ üìã 74 - 24% open ¬∑ ‚è±Ô∏è 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MadryLab/robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/robustness&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 01.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/robustness&#34;&gt;Conda&lt;/a&gt; (üì• 3.5K ¬∑ ‚è±Ô∏è 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;AdvBox&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 1.2K) - Advbox is a toolbox to generate adversarial examples that fool neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 240 ¬∑ üìã 38 - 21% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/advboxes/AdvBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/advbox&#34;&gt;PyPi&lt;/a&gt; (üì• 21 / month ¬∑ ‚è±Ô∏è 05.12.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install advbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BorealisAI/advertorch&#34;&gt;advertorch&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.1K) - A Toolbox for Adversarial Robustness Research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textflint/textflint&#34;&gt;textflint&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 560) - Unified Multilingual Robustness Evaluation Toolkit for Natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/artificial-adversary&#34;&gt;Adversary&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 360 ¬∑ üíÄ) - Tool to generate adversarial text examples and test machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;GPU Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that require and make use of CUDA/GPU system capabilities to optimize data handling and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;CuPy&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 6K) - NumPy &amp;amp; SciPy for GPU. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 300 ¬∑ üîÄ 600 ¬∑ üì• 31K ¬∑ üì¶ 1K ¬∑ üìã 1.8K - 22% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cupy&#34;&gt;PyPi&lt;/a&gt; (üì• 26K / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cupy&#34;&gt;Conda&lt;/a&gt; (üì• 1.4M ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/cupy/cupy&#34;&gt;Docker Hub&lt;/a&gt; (üì• 55K ¬∑ ‚≠ê 7 ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;cuDF&lt;/a&gt;&lt;/b&gt; (ü•á31 ¬∑ ‚≠ê 4.8K) - cuDF - GPU DataFrame Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 240 ¬∑ üîÄ 600 ¬∑ üìã 4.6K - 15% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cudf&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;ArrayFire&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 3.8K ¬∑ üìâ) - ArrayFire: a general purpose GPU library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 81 ¬∑ üîÄ 490 ¬∑ üì• 2.4K ¬∑ üìã 1.5K - 15% open ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arrayfire/arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arrayfire&#34;&gt;PyPi&lt;/a&gt; (üì• 7K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;gpustat&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.9K) - A simple command-line utility for querying and monitoring GPU status. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 220 ¬∑ üì¶ 1.9K ¬∑ üìã 82 - 28% open ¬∑ ‚è±Ô∏è 07.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wookayin/gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpustat&#34;&gt;PyPi&lt;/a&gt; (üì• 620K / month ¬∑ üì¶ 99 ¬∑ ‚è±Ô∏è 02.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpustat&#34;&gt;Conda&lt;/a&gt; (üì• 130K ¬∑ ‚è±Ô∏è 24.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;cuML&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 2.7K) - cuML - RAPIDS Machine Learning Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 150 ¬∑ üîÄ 400 ¬∑ üìã 2K - 33% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cuml&#34;&gt;PyPi&lt;/a&gt; (üì• 770 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;PyCUDA&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 1.3K) - CUDA integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 75 ¬∑ üîÄ 250 ¬∑ üì¶ 1.3K ¬∑ üìã 220 - 29% open ¬∑ ‚è±Ô∏è 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycuda&#34;&gt;PyPi&lt;/a&gt; (üì• 30K / month ¬∑ üì¶ 190 ¬∑ ‚è±Ô∏è 03.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycuda&#34;&gt;Conda&lt;/a&gt; (üì• 67K ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;Apex&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 6.4K) - A PyTorch Extension: Tools for easy mixed precision and distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 93 ¬∑ üîÄ 1K ¬∑ üì¶ 1K ¬∑ üìã 1K - 58% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nvidia-apex&#34;&gt;Conda&lt;/a&gt; (üì• 84K ¬∑ ‚è±Ô∏è 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nvidia-apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;DALI&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 3.9K) - A GPU-accelerated library containing highly optimized building blocks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 74 ¬∑ üîÄ 500 ¬∑ üìã 1.2K - 16% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/DALI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;cuGraph&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1K) - cuGraph - RAPIDS Graph Analytics Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 85 ¬∑ üîÄ 190 ¬∑ üìã 820 - 12% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cugraph&#34;&gt;PyPi&lt;/a&gt; (üì• 210 / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/libcugraph&#34;&gt;Conda&lt;/a&gt; (üì• 6.9K ¬∑ ‚è±Ô∏è 29.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge libcugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;scikit-cuda&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 890) - Python interface to GPU-powered libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 46 ¬∑ üîÄ 170 ¬∑ üì¶ 190 ¬∑ üìã 220 - 22% open ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lebedov/scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-cuda&#34;&gt;PyPi&lt;/a&gt; (üì• 650 / month ¬∑ üì¶ 44 ¬∑ ‚è±Ô∏è 27.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;BlazingSQL&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 1.8K ¬∑ üí§) - BlazingSQL is a lightweight, GPU accelerated, SQL engine for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 170 ¬∑ üìã 720 - 18% open ¬∑ ‚è±Ô∏è 30.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BlazingDB/blazingsql&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/blazingsql/blazingsql-protocol&#34;&gt;Conda&lt;/a&gt; (üì• 940 ¬∑ ‚è±Ô∏è 11.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c blazingsql blazingsql-protocol&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;Vulkan Kompute&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 870) - General purpose GPU compute framework built on Vulkan to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 61 ¬∑ üì• 160 ¬∑ üì¶ 3 ¬∑ üìã 180 - 32% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KomputeProject/kompute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kp&#34;&gt;PyPi&lt;/a&gt; (üì• 130 / month ¬∑ ‚è±Ô∏è 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;cuSignal&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 600) - GPU accelerated signal processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 38 ¬∑ üîÄ 91 ¬∑ üìã 130 - 11% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cusignal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 5 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anderskm/gputil&#34;&gt;GPUtil&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 870 ¬∑ üíÄ) - A Python module for getting the GPU status from NVIDA GPUs using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbcotter/py3nvml&#34;&gt;py3nvml&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 200) - Python 3 Bindings for NVML library. Get NVIDIA GPU status inside your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolargo/nvidia-ml-py3&#34;&gt;nvidia-ml-py3&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 79 ¬∑ üíÄ) - Python 3 Bindings for the NVIDIA Management Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Santosh-Gupta/SpeedTorch&#34;&gt;SpeedTorch&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 650 ¬∑ üíÄ) - Library for faster pinned CPU - GPU transfer in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stas00/ipyexperiments&#34;&gt;ipyexperiments&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 150) - jupyter/ipython experiment containers for GPU and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tensorflow Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend TensorFlow with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;TF Addons&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 1.5K) - Useful extra functionality for TensorFlow 2.x maintained by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 190 ¬∑ üîÄ 510 ¬∑ üì¶ 6.4K ¬∑ üìã 930 - 23% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-addons&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4M / month ¬∑ üì¶ 170 ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;TensorFlow Datasets&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 3.3K) - TFDS is a collection of datasets ready to use with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 250 ¬∑ üîÄ 1.3K ¬∑ üìã 1.2K - 47% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-datasets&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2M / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-datasets&#34;&gt;Conda&lt;/a&gt; (üì• 4.6K ¬∑ ‚è±Ô∏è 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;tensorflow-hub&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 3.1K) - A library for transfer learning by reusing parts of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 90 ¬∑ üîÄ 1.6K ¬∑ üì¶ 12K ¬∑ üìã 640 - 2% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-hub&#34;&gt;PyPi&lt;/a&gt; (üì• 5.3M / month ¬∑ üì¶ 280 ¬∑ ‚è±Ô∏è 14.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-hub&#34;&gt;Conda&lt;/a&gt; (üì• 63K ¬∑ ‚è±Ô∏è 18.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;tensor2tensor&lt;/a&gt;&lt;/b&gt; (ü•à34 ¬∑ ‚≠ê 12K) - Library of deep learning models and datasets designed to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 240 ¬∑ üîÄ 3K ¬∑ üì¶ 1.2K ¬∑ üìã 1.2K - 45% open ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor2tensor&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 93 ¬∑ ‚è±Ô∏è 17.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;TensorFlow Transform&lt;/a&gt;&lt;/b&gt; (ü•à33 ¬∑ ‚≠ê 920) - Input pipeline framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 200 ¬∑ üì¶ 870 ¬∑ üìã 190 - 19% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-transform&#34;&gt;PyPi&lt;/a&gt; (üì• 3.4M / month ¬∑ üì¶ 56 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;TF Model Optimization&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 1.2K) - A toolkit to optimize ML models for deployment for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 67 ¬∑ üîÄ 280 ¬∑ üì¶ 1.8K ¬∑ üìã 320 - 52% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-optimization&#34;&gt;PyPi&lt;/a&gt; (üì• 170K / month ¬∑ üì¶ 20 ¬∑ ‚è±Ô∏è 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;Keras-Preprocessing&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 1K) - Utilities for working with image data, text data, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 52 ¬∑ üîÄ 440 ¬∑ üìã 200 - 47% open ¬∑ ‚è±Ô∏è 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-preprocessing&#34;&gt;PyPi&lt;/a&gt; (üì• 10M / month ¬∑ üì¶ 1.5K ¬∑ ‚è±Ô∏è 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-preprocessing&#34;&gt;Conda&lt;/a&gt; (üì• 1.3M ¬∑ ‚è±Ô∏è 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;TensorFlow I/O&lt;/a&gt;&lt;/b&gt; (ü•â29 ¬∑ ‚≠ê 560) - Dataset, streaming, and file system extensions.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 94 ¬∑ üîÄ 230 ¬∑ üìã 520 - 35% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-io&#34;&gt;PyPi&lt;/a&gt; (üì• 200K / month ¬∑ üì¶ 24 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;efficientnet&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 2K ¬∑ üí§) - Implementation of EfficientNet model. Keras and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 460 ¬∑ üì• 240K ¬∑ üì¶ 1K ¬∑ üìã 120 - 51% open ¬∑ ‚è±Ô∏è 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qubvel/efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/efficientnet&#34;&gt;PyPi&lt;/a&gt; (üì• 130K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 15.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/efficientnet&#34;&gt;Conda&lt;/a&gt; (üì• 58 ¬∑ ‚è±Ô∏è 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;Neural Structured Learning&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 920) - Training neural models with structured signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 33 ¬∑ üîÄ 170 ¬∑ üì¶ 230 ¬∑ üìã 62 - 4% open ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-structured-learning&#34;&gt;PyPi&lt;/a&gt; (üì• 16K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 18.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;TensorFlow Cloud&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 330) - The TensorFlow Cloud repository provides APIs that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 27 ¬∑ üîÄ 69 ¬∑ üì¶ 150 ¬∑ üìã 81 - 67% open ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-cloud&#34;&gt;PyPi&lt;/a&gt; (üì• 170K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;TF Compression&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 610) - Data compression in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 210 ¬∑ üìã 83 - 2% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-compression&#34;&gt;PyPi&lt;/a&gt; (üì• 1.1K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;tffm&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 780) - TensorFlow implementation of an arbitrary order Factorization Machine. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 190 ¬∑ üì¶ 11 ¬∑ üìã 40 - 45% open ¬∑ ‚è±Ô∏è 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geffy/tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tffm&#34;&gt;PyPi&lt;/a&gt; (üì• 1.9K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;Saliency&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 790) - Framework-agnostic implementation for state-of-the-art saliency.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 160 ¬∑ üì¶ 28 ¬∑ üìã 40 - 35% open ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/saliency&#34;&gt;PyPi&lt;/a&gt; (üì• 630 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/taehoonlee/tensornets&#34;&gt;TensorNets&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1K ¬∑ üíÄ) - High level network definitions with pre-trained weights in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Jax Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Jax with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;equinox&lt;/a&gt;&lt;/b&gt; (ü•á23 ¬∑ ‚≠ê 560) - Callable PyTrees and filtered transforms = neural networks in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 29 ¬∑ üì¶ 19 ¬∑ üìã 44 - 13% open ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/patrick-kidger/equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/equinox&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ucl-bug/jaxdf&#34;&gt;jaxdf&lt;/a&gt;&lt;/b&gt; (ü•â9 ¬∑ ‚≠ê 50) - A JAX-based research framework for writing differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Sklearn Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend scikit-learn with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;MLxtend&lt;/a&gt;&lt;/b&gt; (ü•á35 ¬∑ ‚≠ê 3.9K) - A library of extension and helper modules for Pythons data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 89 ¬∑ üîÄ 750 ¬∑ üì¶ 6K ¬∑ üìã 420 - 25% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlxtend&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4M / month ¬∑ üì¶ 140 ¬∑ ‚è±Ô∏è 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlxtend&#34;&gt;Conda&lt;/a&gt; (üì• 200K ¬∑ ‚è±Ô∏è 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;imbalanced-learn&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 5.9K) - A Python Package to Tackle the Curse of Imbalanced.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 63 ¬∑ üîÄ 1.2K ¬∑ üì¶ 11K ¬∑ üìã 510 - 9% open ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imbalanced-learn&#34;&gt;PyPi&lt;/a&gt; (üì• 2.7M / month ¬∑ üì¶ 260 ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imbalanced-learn&#34;&gt;Conda&lt;/a&gt; (üì• 210K ¬∑ ‚è±Ô∏è 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;category_encoders&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 1.9K) - A library of sklearn compatible categorical variable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 52 ¬∑ üîÄ 350 ¬∑ üì¶ 3.4K ¬∑ üìã 250 - 29% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/category_encoders&#34;&gt;PyPi&lt;/a&gt; (üì• 3.3M / month ¬∑ üì¶ 23 ¬∑ ‚è±Ô∏è 14.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/category_encoders&#34;&gt;Conda&lt;/a&gt; (üì• 160K ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;scikit-opt&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 3.2K) - Genetic Algorithm, Particle Swarm Optimization, Simulated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 14 ¬∑ üîÄ 760 ¬∑ üì¶ 74 ¬∑ üìã 150 - 27% open ¬∑ ‚è±Ô∏è 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guofei9987/scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-opt&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;fancyimpute&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 1.1K ¬∑ üí§) - Multivariate imputation and matrix completion.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 170 ¬∑ üì¶ 1.2K ¬∑ üìã 110 - 0% open ¬∑ ‚è±Ô∏è 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iskandr/fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fancyimpute&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 29 ¬∑ ‚è±Ô∏è 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;scikit-lego&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 820) - Extra blocks for scikit-learn pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 50 ¬∑ üîÄ 85 ¬∑ üì¶ 48 ¬∑ üìã 240 - 9% open ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/koaning/scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-lego&#34;&gt;PyPi&lt;/a&gt; (üì• 15K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-lego&#34;&gt;Conda&lt;/a&gt; (üì• 18K ¬∑ ‚è±Ô∏è 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;sklearn-contrib-lightning&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 1.6K) - Large-scale linear classification, regression and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 200 ¬∑ üì• 230 ¬∑ üì¶ 100 ¬∑ üìã 93 - 54% open ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-contrib-lightning&#34;&gt;PyPi&lt;/a&gt; (üì• 2K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sklearn-contrib-lightning&#34;&gt;Conda&lt;/a&gt; (üì• 160K ¬∑ ‚è±Ô∏è 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;combo&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 580 ¬∑ üí§) - (AAAI 20) A Python Toolbox for Machine Learning Model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;xgboost&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1 ¬∑ üîÄ 99 ¬∑ üì¶ 460 ¬∑ üìã 14 - 78% open ¬∑ ‚è±Ô∏è 02.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/combo&#34;&gt;PyPi&lt;/a&gt; (üì• 33K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;iterative-stratification&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 650) - scikit-learn cross validators for iterative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 61 ¬∑ üì¶ 210 ¬∑ üìã 19 - 21% open ¬∑ ‚è±Ô∏è 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trent-b/iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/iterative-stratification&#34;&gt;PyPi&lt;/a&gt; (üì• 2.2M / month ¬∑ üì¶ 8 ¬∑ ‚è±Ô∏è 03.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;DESlib&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 400 ¬∑ üí§) - A Python library for dynamic classifier and ensemble selection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 13 ¬∑ üîÄ 73 ¬∑ üì¶ 25 ¬∑ üìã 140 - 11% open ¬∑ ‚è±Ô∏è 10.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/DESlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deslib&#34;&gt;PyPi&lt;/a&gt; (üì• 550 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 08.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;scikit-tda&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 340) - Topological Data Analysis for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 43 ¬∑ üì¶ 31 ¬∑ üìã 19 - 78% open ¬∑ ‚è±Ô∏è 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-tda/scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-tda&#34;&gt;PyPi&lt;/a&gt; (üì• 1.4K / month ¬∑ ‚è±Ô∏è 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/sklearn-crfsuite&#34;&gt;sklearn-crfsuite&lt;/a&gt;&lt;/b&gt; (ü•à26 ¬∑ ‚≠ê 400 ¬∑ üíÄ) - scikit-learn inspired API for CRFsuite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-multilearn/scikit-multilearn&#34;&gt;scikit-multilearn&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 750 ¬∑ üíÄ) - A scikit-learn based module for multi-label et. al... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/skope-rules&#34;&gt;skope-rules&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 460 ¬∑ üíÄ) - machine learning with logical rules in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;‚ùóÔ∏èBSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mathurinm/celer&#34;&gt;celer&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 140) - Fast solver for L1-type problems: Lasso, sparse Logisitic regression,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skggm/skggm&#34;&gt;skggm&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 200) - Scikit-learn compatible estimation of general graphical models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/dabl&#34;&gt;dabl&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 110 ¬∑ üí§) - Data Analysis Baseline Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Pytorch Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Pytorch with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;PML&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 4.4K) - The easiest way to use deep metric learning in your application. Modular,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 540 ¬∑ üì¶ 260 ¬∑ üìã 350 - 13% open ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KevinMusgrave/pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-metric-learning&#34;&gt;PyPi&lt;/a&gt; (üì• 2.2M / month ¬∑ üì¶ 9 ¬∑ ‚è±Ô∏è 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/metric-learning/pytorch-metric-learning&#34;&gt;Conda&lt;/a&gt; (üì• 6.9K ¬∑ ‚è±Ô∏è 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c metric-learning pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;accelerate&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 2.5K) - A simple way to train and use PyTorch models with multi-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 44 ¬∑ üîÄ 170 ¬∑ üì¶ 520 ¬∑ üìã 230 - 37% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/accelerate&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3M / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/accelerate&#34;&gt;Conda&lt;/a&gt; (üì• 2.1K ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;lightning-flash&lt;/a&gt;&lt;/b&gt; (ü•á29 ¬∑ ‚≠ê 1.5K) - Your PyTorch AI Factory - Flash enables you to easily.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 69 ¬∑ üîÄ 170 ¬∑ üì¶ 79 ¬∑ üìã 460 - 6% open ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightning-flash&#34;&gt;PyPi&lt;/a&gt; (üì• 6.4K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightning-flash&#34;&gt;Conda&lt;/a&gt; (üì• 1.6K ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;pytorch-summary&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 3.5K ¬∑ üí§) - Model summary in PyTorch similar to `model.summary()`.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 390 ¬∑ üì¶ 5.1K ¬∑ üìã 160 - 73% open ¬∑ ‚è±Ô∏è 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sksq96/pytorch-summary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsummary&#34;&gt;PyPi&lt;/a&gt; (üì• 100K / month ¬∑ üì¶ 71 ¬∑ ‚è±Ô∏è 26.09.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsummary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;pytorch-optimizer&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 2.4K) - torch-optimizer -- collection of optimizers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 230 ¬∑ üì¶ 600 ¬∑ üìã 45 - 35% open ¬∑ ‚è±Ô∏è 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jettify/pytorch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch_optimizer&#34;&gt;PyPi&lt;/a&gt; (üì• 54K / month ¬∑ üì¶ 23 ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch_optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torch-optimizer&#34;&gt;Conda&lt;/a&gt; (üì• 1.4K ¬∑ ‚è±Ô∏è 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;torchdiffeq&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 4.1K) - Differentiable ODE solvers with full GPU support and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 20 ¬∑ üîÄ 730 ¬∑ üì¶ 250 ¬∑ üìã 180 - 22% open ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rtqichen/torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchdiffeq&#34;&gt;PyPi&lt;/a&gt; (üì• 6.5K / month ¬∑ üì¶ 20 ¬∑ ‚è±Ô∏è 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchdiffeq&#34;&gt;Conda&lt;/a&gt; (üì• 5.1K ¬∑ ‚è±Ô∏è 03.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;PyTorch Sparse&lt;/a&gt;&lt;/b&gt; (ü•à25 ¬∑ ‚≠ê 640) - PyTorch Extension Library of Optimized Autograd Sparse.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 25 ¬∑ üîÄ 87 ¬∑ üìã 180 - 17% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-sparse&#34;&gt;PyPi&lt;/a&gt; (üì• 24K / month ¬∑ üì¶ 37 ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_sparse&#34;&gt;Conda&lt;/a&gt; (üì• 88K ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;TabNet&lt;/a&gt;&lt;/b&gt; (ü•à24 ¬∑ ‚≠ê 1.7K) - PyTorch implementation of TabNet paper :.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 340 ¬∑ üìã 240 - 15% open ¬∑ ‚è±Ô∏è 23.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dreamquark-ai/tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-tabnet&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 7 ¬∑ ‚è±Ô∏è 02.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-tabnet&#34;&gt;Conda&lt;/a&gt; (üì• 490 ¬∑ ‚è±Ô∏è 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;Pytorch Toolbelt&lt;/a&gt;&lt;/b&gt; (ü•à24 ¬∑ ‚≠ê 1.2K) - PyTorch extensions for fast R&amp;amp;D prototyping and Kaggle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 7 ¬∑ üîÄ 94 ¬∑ üìã 28 - 21% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BloodAxe/pytorch-toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_toolbelt&#34;&gt;PyPi&lt;/a&gt; (üì• 8.8K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;torch-scatter&lt;/a&gt;&lt;/b&gt; (ü•à24 ¬∑ ‚≠ê 990) - PyTorch Extension Library of Optimized Scatter Operations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 19 ¬∑ üîÄ 110 ¬∑ üìã 260 - 9% open ¬∑ ‚è±Ô∏è 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-scatter&#34;&gt;PyPi&lt;/a&gt; (üì• 30K / month ¬∑ üì¶ 43 ¬∑ ‚è±Ô∏è 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_scatter&#34;&gt;Conda&lt;/a&gt; (üì• 77K ¬∑ ‚è±Ô∏è 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;SRU&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 2K ¬∑ üí§) - Training RNNs as Fast as CNNs (https://arxiv.org/abs/1709.02755). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 300 ¬∑ üì¶ 18 ¬∑ üìã 120 - 46% open ¬∑ ‚è±Ô∏è 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/asappresearch/sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sru&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;Torchmeta&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 1.6K ¬∑ üí§) - A collection of extensions and data-loaders for few-shot.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 210 ¬∑ üì¶ 90 ¬∑ üìã 140 - 34% open ¬∑ ‚è±Ô∏è 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tristandeleu/pytorch-meta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchmeta&#34;&gt;PyPi&lt;/a&gt; (üì• 2.6K / month ¬∑ ‚è±Ô∏è 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchmeta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;EfficientNets&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 1.5K ¬∑ üí§) - Pretrained EfficientNet, EfficientNet-Lite, MixNet,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 5 ¬∑ üîÄ 190 ¬∑ üì¶ 100 ¬∑ üìã 53 - 3% open ¬∑ ‚è±Ô∏è 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/gen-efficientnet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geffnet&#34;&gt;PyPi&lt;/a&gt; (üì• 13K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geffnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;Higher&lt;/a&gt;&lt;/b&gt; (ü•à23 ¬∑ ‚≠ê 1.4K ¬∑ üí§) - higher is a pytorch library allowing users to obtain higher.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 9 ¬∑ üîÄ 98 ¬∑ üì¶ 140 ¬∑ üìã 99 - 49% open ¬∑ ‚è±Ô∏è 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/higher&#34;&gt;PyPi&lt;/a&gt; (üì• 20K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 14.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;Performer Pytorch&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 830) - An implementation of Performer, a linear attention-based.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 110 ¬∑ üì¶ 46 ¬∑ üìã 76 - 43% open ¬∑ ‚è±Ô∏è 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/performer-pytorch&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 4 ¬∑ ‚è±Ô∏è 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;reformer-pytorch&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.7K) - Reformer, the efficient Transformer, in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 230 ¬∑ üìã 120 - 11% open ¬∑ ‚è±Ô∏è 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reformer-pytorch&#34;&gt;PyPi&lt;/a&gt; (üì• 4.4K / month ¬∑ ‚è±Ô∏è 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;torchsde&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 980 ¬∑ üí§) - Differentiable SDE solvers with GPU support and efficient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 5 ¬∑ üîÄ 100 ¬∑ üì¶ 15 ¬∑ üìã 48 - 14% open ¬∑ ‚è±Ô∏è 26.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsde&#34;&gt;PyPi&lt;/a&gt; (üì• 950 / month ¬∑ ‚è±Ô∏è 20.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchsde&#34;&gt;Conda&lt;/a&gt; (üì• 9.3K ¬∑ ‚è±Ô∏è 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;Torch-Struct&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 1K) - Fast, general, and tested differentiable structured prediction.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 81 ¬∑ üìã 54 - 44% open ¬∑ ‚è±Ô∏è 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/harvardnlp/pytorch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-struct&#34;&gt;PyPi&lt;/a&gt; (üì• 44K / month ¬∑ ‚è±Ô∏è 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;pytorchviz&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 2.2K ¬∑ üí§) - A small package to create visualizations of PyTorch execution.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 230 ¬∑ üì¶ 670 ¬∑ üìã 56 - 37% open ¬∑ ‚è±Ô∏è 15.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/szagoruyko/pytorchviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;Tez&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 1K) - Tez is a super-simple and lightweight Trainer for PyTorch. It also.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1 ¬∑ üîÄ 130 ¬∑ üì¶ 25 ¬∑ üìã 32 - 50% open ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhishekkrthakur/tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tez&#34;&gt;PyPi&lt;/a&gt; (üì• 660 / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;tinygrad&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 6K) - You like pytorch? You like micrograd? You love tinygrad!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 59 ¬∑ üîÄ 600 ¬∑ üì¶ 2 ¬∑ üìã 110 - 19% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geohot/tinygrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;Tensor Sensor&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 640) - The goal of this library is to generate more helpful.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 33 ¬∑ üì¶ 7 ¬∑ üìã 23 - 34% open ¬∑ ‚è±Ô∏è 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor-sensor&#34;&gt;PyPi&lt;/a&gt; (üì• 1.7K / month ¬∑ ‚è±Ô∏è 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensor-sensor&#34;&gt;Conda&lt;/a&gt; (üì• 280 ¬∑ ‚è±Ô∏è 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;madgrad&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 760) - MADGRAD Optimization Method. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 2 ¬∑ üîÄ 55 ¬∑ üì¶ 25 ¬∑ üìã 8 - 12% open ¬∑ ‚è±Ô∏è 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madgrad&#34;&gt;PyPi&lt;/a&gt; (üì• 7.6K / month ¬∑ ‚è±Ô∏è 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;Pywick&lt;/a&gt;&lt;/b&gt; (ü•â15 ¬∑ ‚≠ê 370 ¬∑ üí§) - High-level batteries-included neural network training library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 38 ¬∑ üì¶ 6 ¬∑ üìã 14 - 14% open ¬∑ ‚è±Ô∏è 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/achaiah/pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywick&#34;&gt;PyPi&lt;/a&gt; (üì• 26 / month ¬∑ ‚è±Ô∏è 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Cadene/pretrained-models.pytorch&#34;&gt;pretrainedmodels&lt;/a&gt;&lt;/b&gt; (ü•á32 ¬∑ ‚≠ê 8.5K ¬∑ üíÄ) - Pretrained ConvNets for pytorch: NASNet, ResNeXt,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lukemelas/EfficientNet-PyTorch&#34;&gt;EfficientNet-PyTorch&lt;/a&gt;&lt;/b&gt; (ü•à27 ¬∑ ‚≠ê 7K ¬∑ üíÄ) - A PyTorch implementation of EfficientNet and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GRAAL-Research/poutyne&#34;&gt;Poutyne&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 520) - A simplified framework and utilities for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;‚ùóÔ∏èLGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Luolc/AdaBound&#34;&gt;AdaBound&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 2.9K ¬∑ üíÄ) - An optimizer that trains as fast as Adam and as good as SGD. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adobe/antialiased-cnns&#34;&gt;Antialiased CNNs&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 1.5K ¬∑ üí§) - pip install antialiased-cnns to improve stability and.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC%20BY-NC-SA%204.0&#34;&gt;‚ùóÔ∏èCC BY-NC-SA 4.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/lambda-networks&#34;&gt;Lambda Networks&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 1.5K ¬∑ üíÄ) - Implementation of LambdaNetworks, a new approach to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;micrograd&lt;/a&gt;&lt;/b&gt; (ü•â16 ¬∑ ‚≠ê 2.1K ¬∑ üíÄ) - A tiny scalar-valued autograd engine and a neural net library.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TorchDrift/TorchDrift&#34;&gt;TorchDrift&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 210 ¬∑ üí§) - Drift Detection for your PyTorch Models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Database Clients&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for connecting to, operating, and querying databases.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#database-clients&#34;&gt;best-of-python - DB Clients&lt;/a&gt;&lt;/b&gt; ( ‚≠ê 2.2K) - Collection of database clients for python.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;scipy&lt;/a&gt;&lt;/b&gt; (ü•á49 ¬∑ ‚≠ê 9.7K) - Ecosystem of open-source software for mathematics, science, and engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.3K ¬∑ üîÄ 4.2K ¬∑ üì• 350K ¬∑ üì¶ 510K ¬∑ üìã 8.5K - 20% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scipy/scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scipy&#34;&gt;PyPi&lt;/a&gt; (üì• 45M / month ¬∑ üì¶ 58K ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scipy&#34;&gt;Conda&lt;/a&gt; (üì• 23M ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;SymPy&lt;/a&gt;&lt;/b&gt; (ü•á44 ¬∑ ‚≠ê 9.2K) - A computer algebra system written in pure Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.1K ¬∑ üîÄ 3.7K ¬∑ üì• 450K ¬∑ üì¶ 42K ¬∑ üìã 12K - 35% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sympy/sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sympy&#34;&gt;PyPi&lt;/a&gt; (üì• 1.7M / month ¬∑ üì¶ 4.1K ¬∑ ‚è±Ô∏è 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sympy&#34;&gt;Conda&lt;/a&gt; (üì• 2.1M ¬∑ ‚è±Ô∏è 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;Streamlit&lt;/a&gt;&lt;/b&gt; (ü•á38 ¬∑ ‚≠ê 19K) - Streamlit The fastest way to build data apps in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 1.7K ¬∑ üì¶ 300 ¬∑ üìã 2.4K - 23% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/streamlit/streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamlit&#34;&gt;PyPi&lt;/a&gt; (üì• 990K / month ¬∑ üì¶ 370 ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;PyOD&lt;/a&gt;&lt;/b&gt; (ü•á36 ¬∑ ‚≠ê 5.7K) - A Comprehensive and Scalable Python Library for Outlier Detection (Anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 39 ¬∑ üîÄ 1.1K ¬∑ üì¶ 1.3K ¬∑ üìã 260 - 50% open ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyod&#34;&gt;PyPi&lt;/a&gt; (üì• 500K / month ¬∑ üì¶ 32 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyod&#34;&gt;Conda&lt;/a&gt; (üì• 21K ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;&lt;/b&gt; (ü•á34 ¬∑ ‚≠ê 7.1K) - Wrap UIs around any model, share with anyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 72 ¬∑ üîÄ 450 ¬∑ üì¶ 800 ¬∑ üìã 690 - 20% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gradio-app/gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gradio&#34;&gt;PyPi&lt;/a&gt; (üì• 290K / month ¬∑ üì¶ 20 ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;PaddleHub&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 8K) - Awesome pre-trained models toolkit based on PaddlePaddle.(300+.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 61 ¬∑ üîÄ 1.6K ¬∑ üì• 570 ¬∑ üì¶ 800 ¬∑ üìã 1.1K - 40% open ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleHub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlehub&#34;&gt;PyPi&lt;/a&gt; (üì• 15K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlehub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;Datasette&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 6.1K) - An open source multi-tool for exploring and publishing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 63 ¬∑ üîÄ 410 ¬∑ üì• 39 ¬∑ üì¶ 660 ¬∑ üìã 1.3K - 26% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/simonw/datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datasette&#34;&gt;PyPi&lt;/a&gt; (üì• 250K / month ¬∑ üì¶ 160 ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datasette&#34;&gt;Conda&lt;/a&gt; (üì• 4K ¬∑ ‚è±Ô∏è 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;DeepChem&lt;/a&gt;&lt;/b&gt; (ü•á33 ¬∑ ‚≠ê 3.6K) - Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 190 ¬∑ üîÄ 1.3K ¬∑ üì¶ 90 ¬∑ üìã 1.5K - 31% open ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepchem/deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepchem&#34;&gt;PyPi&lt;/a&gt; (üì• 7.6K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepchem&#34;&gt;Conda&lt;/a&gt; (üì• 9.9K ¬∑ ‚è±Ô∏è 19.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;Autograd&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 5.8K) - Efficiently computes derivatives of numpy code. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 51 ¬∑ üîÄ 820 ¬∑ üì¶ 3.4K ¬∑ üìã 390 - 42% open ¬∑ ‚è±Ô∏è 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/HIPS/autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autograd&#34;&gt;PyPi&lt;/a&gt; (üì• 1.2M / month ¬∑ üì¶ 280 ¬∑ ‚è±Ô∏è 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autograd&#34;&gt;Conda&lt;/a&gt; (üì• 210K ¬∑ ‚è±Ô∏è 25.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;datalad&lt;/a&gt;&lt;/b&gt; (ü•à32 ¬∑ ‚≠ê 320) - Keep code, data, containers under control with git and git-annex. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 47 ¬∑ üîÄ 90 ¬∑ üìã 3.5K - 13% open ¬∑ ‚è±Ô∏è 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/datalad/datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datalad&#34;&gt;PyPi&lt;/a&gt; (üì• 7.6K / month ¬∑ üì¶ 54 ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datalad&#34;&gt;Conda&lt;/a&gt; (üì• 210K ¬∑ ‚è±Ô∏è 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;carla&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 7.8K) - Open-source simulator for autonomous driving research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 140 ¬∑ üîÄ 2.3K ¬∑ üì¶ 180 ¬∑ üìã 3.9K - 14% open ¬∑ ‚è±Ô∏è 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carla-simulator/carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carla&#34;&gt;PyPi&lt;/a&gt; (üì• 22K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;Pythran&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.7K) - Ahead of Time compiler for numeric kernels. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 66 ¬∑ üîÄ 170 ¬∑ üì¶ 140 ¬∑ üìã 760 - 14% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serge-sans-paille/pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythran&#34;&gt;PyPi&lt;/a&gt; (üì• 330K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythran&#34;&gt;Conda&lt;/a&gt; (üì• 230K ¬∑ ‚è±Ô∏è 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;agate&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 1.1K ¬∑ üí§) - A Python data analysis library that is optimized for humans instead of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 49 ¬∑ üîÄ 140 ¬∑ üì¶ 920 ¬∑ üìã 680 - 7% open ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wireservice/agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/agate&#34;&gt;PyPi&lt;/a&gt; (üì• 3.4M / month ¬∑ üì¶ 130 ¬∑ ‚è±Ô∏è 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/agate&#34;&gt;Conda&lt;/a&gt; (üì• 83K ¬∑ ‚è±Ô∏è 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;pyopencl&lt;/a&gt;&lt;/b&gt; (ü•à31 ¬∑ ‚≠ê 890) - OpenCL integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 91 ¬∑ üîÄ 230 ¬∑ üì¶ 730 ¬∑ üìã 310 - 22% open ¬∑ ‚è±Ô∏è 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyopencl&#34;&gt;PyPi&lt;/a&gt; (üì• 32K / month ¬∑ üì¶ 190 ¬∑ ‚è±Ô∏è 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyopencl&#34;&gt;Conda&lt;/a&gt; (üì• 600K ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;River&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 3.4K) - Online machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 77 ¬∑ üîÄ 380 ¬∑ üì¶ 120 ¬∑ üìã 370 - 4% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/online-ml/river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/river&#34;&gt;PyPi&lt;/a&gt; (üì• 6.4K / month ¬∑ üì¶ 12 ¬∑ ‚è±Ô∏è 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/river&#34;&gt;Conda&lt;/a&gt; (üì• 8.2K ¬∑ ‚è±Ô∏è 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;hdbscan&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 2.2K) - A high performance implementation of HDBSCAN clustering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 400 ¬∑ üì¶ 1.4K ¬∑ üìã 420 - 63% open ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hdbscan&#34;&gt;PyPi&lt;/a&gt; (üì• 400K / month ¬∑ üì¶ 150 ¬∑ ‚è±Ô∏è 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan&#34;&gt;Conda&lt;/a&gt; (üì• 1.1M ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;PennyLane&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1.4K) - PennyLane is a cross-platform Python library for differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 98 ¬∑ üîÄ 360 ¬∑ üì• 60 ¬∑ üìã 700 - 25% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PennyLaneAI/PennyLane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pennylane&#34;&gt;PyPi&lt;/a&gt; (üì• 12K / month ¬∑ üì¶ 32 ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pennylane&#34;&gt;Conda&lt;/a&gt; (üì• 1.1K ¬∑ ‚è±Ô∏è 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;tensorly&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1.2K) - TensorLy: Tensor Learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 52 ¬∑ üîÄ 240 ¬∑ üì¶ 260 ¬∑ üìã 190 - 25% open ¬∑ ‚è±Ô∏è 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorly/tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorly&#34;&gt;PyPi&lt;/a&gt; (üì• 5.1K / month ¬∑ üì¶ 30 ¬∑ ‚è±Ô∏è 08.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorly&#34;&gt;Conda&lt;/a&gt; (üì• 240K ¬∑ ‚è±Ô∏è 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;kmodes&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 1K) - Python implementations of the k-modes and k-prototypes clustering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 21 ¬∑ üîÄ 370 ¬∑ üì¶ 1.2K ¬∑ üìã 150 - 10% open ¬∑ ‚è±Ô∏è 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nicodv/kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kmodes&#34;&gt;PyPi&lt;/a&gt; (üì• 370K / month ¬∑ üì¶ 26 ¬∑ ‚è±Ô∏è 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kmodes&#34;&gt;Conda&lt;/a&gt; (üì• 8.9K ¬∑ ‚è±Ô∏è 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;adapter-transformers&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 820) - Huggingface Transformers + Adapters =. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1.3K ¬∑ üîÄ 140 ¬∑ üì¶ 75 ¬∑ üìã 180 - 29% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Adapter-Hub/adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adapter-transformers&#34;&gt;PyPi&lt;/a&gt; (üì• 39K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;causalml&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 3K) - Uplift modeling and causal inference with machine learning algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 41 ¬∑ üîÄ 480 ¬∑ üì¶ 50 ¬∑ üìã 260 - 17% open ¬∑ ‚è±Ô∏è 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalml&#34;&gt;PyPi&lt;/a&gt; (üì• 47K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;pyjanitor&lt;/a&gt;&lt;/b&gt; (ü•à29 ¬∑ ‚≠ê 920) - Clean APIs for data cleaning. Python implementation of R package Janitor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 100 ¬∑ üîÄ 150 ¬∑ üì¶ 180 ¬∑ üìã 470 - 22% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyjanitor-devs/pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyjanitor&#34;&gt;PyPi&lt;/a&gt; (üì• 22K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyjanitor&#34;&gt;Conda&lt;/a&gt; (üì• 120K ¬∑ ‚è±Ô∏è 22.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;Mars&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 2.4K) - Mars is a tensor-based unified framework for large-scale data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 45 ¬∑ üîÄ 300 ¬∑ üìã 1.1K - 17% open ¬∑ ‚è±Ô∏è 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mars-project/mars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymars&#34;&gt;PyPi&lt;/a&gt; (üì• 26K / month ¬∑ üì¶ 1 ¬∑ ‚è±Ô∏è 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;alibi-detect&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.3K) - Algorithms for outlier, adversarial and drift detection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 16 ¬∑ üîÄ 140 ¬∑ üì¶ 90 ¬∑ üìã 240 - 32% open ¬∑ ‚è±Ô∏è 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi-detect&#34;&gt;PyPi&lt;/a&gt; (üì• 28K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;TabPy&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.3K) - Execute Python code on the fly and display results in Tableau visualizations:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 46 ¬∑ üîÄ 460 ¬∑ üì¶ 90 ¬∑ üìã 290 - 3% open ¬∑ ‚è±Ô∏è 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tableau/TabPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tabpy&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 2 ¬∑ ‚è±Ô∏è 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tabpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/tabpy-client&#34;&gt;Conda&lt;/a&gt; (üì• 2.8K ¬∑ ‚è±Ô∏è 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda tabpy-client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;gplearn&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 1.1K) - Genetic Programming in Python, with a scikit-learn inspired API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 200 ¬∑ üì¶ 250 ¬∑ üìã 190 - 17% open ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trevorstephens/gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gplearn&#34;&gt;PyPi&lt;/a&gt; (üì• 6.1K / month ¬∑ üì¶ 10 ¬∑ ‚è±Ô∏è 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gplearn&#34;&gt;Conda&lt;/a&gt; (üì• 2.3K ¬∑ ‚è±Ô∏è 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;Trax&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 6.9K) - Trax Deep Learning with Clear Code and Speed. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 78 ¬∑ üîÄ 700 ¬∑ üì¶ 54 ¬∑ üìã 210 - 41% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trax&#34;&gt;PyPi&lt;/a&gt; (üì• 4.2K / month ¬∑ ‚è±Ô∏è 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;pycm&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.2K) - Multi-class confusion matrix library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 110 ¬∑ üì¶ 140 ¬∑ üìã 180 - 6% open ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sepandhaghighi/pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycm&#34;&gt;PyPi&lt;/a&gt; (üì• 36K / month ¬∑ üì¶ 13 ¬∑ ‚è±Ô∏è 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;AugLy&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 4.5K) - A data augmentations library for audio, image, text, and video. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 23 ¬∑ üîÄ 240 ¬∑ üì¶ 36 ¬∑ üìã 66 - 19% open ¬∑ ‚è±Ô∏è 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/AugLy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/augly&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install augly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;metric-learn&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 1.2K) - Metric learning algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 22 ¬∑ üîÄ 220 ¬∑ üì¶ 200 ¬∑ üìã 170 - 30% open ¬∑ ‚è±Ô∏è 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metric-learn&#34;&gt;PyPi&lt;/a&gt; (üì• 14K / month ¬∑ üì¶ 11 ¬∑ ‚è±Ô∏è 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metric-learn&#34;&gt;Conda&lt;/a&gt; (üì• 5.7K ¬∑ ‚è±Ô∏è 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;avalanche&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 930) - Avalanche: an End-to-End Library for Continual Learning based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 56 ¬∑ üîÄ 150 ¬∑ üì¶ 9 ¬∑ üìã 510 - 14% open ¬∑ ‚è±Ô∏è 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContinualAI/avalanche&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/avalanche-lib&#34;&gt;PyPi&lt;/a&gt; (üì• 700 / month ¬∑ ‚è±Ô∏è 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install avalanche-lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;PySwarms&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 920 ¬∑ üí§) - A research toolkit for particle swarm optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 43 ¬∑ üîÄ 290 ¬∑ üì¶ 170 ¬∑ üìã 210 - 7% open ¬∑ ‚è±Ô∏è 23.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ljvmiranda921/pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyswarms&#34;&gt;PyPi&lt;/a&gt; (üì• 19K / month ¬∑ üì¶ 6 ¬∑ ‚è±Ô∏è 03.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;AstroML&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 820) - Machine learning, statistics, and data mining for astronomy and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 30 ¬∑ üîÄ 280 ¬∑ üìã 150 - 40% open ¬∑ ‚è±Ô∏è 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/astroML/astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/astroML&#34;&gt;PyPi&lt;/a&gt; (üì• 1.5K / month ¬∑ üì¶ 33 ¬∑ ‚è±Ô∏è 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/astroml&#34;&gt;Conda&lt;/a&gt; (üì• 29K ¬∑ ‚è±Ô∏è 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge astroml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;Prince&lt;/a&gt;&lt;/b&gt; (ü•â25 ¬∑ ‚≠ê 800) - Python factor analysis library (PCA, CA, MCA, MFA, FAMD). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 12 ¬∑ üîÄ 140 ¬∑ üì¶ 210 ¬∑ üìã 110 - 35% open ¬∑ ‚è±Ô∏è 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MaxHalford/prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prince&#34;&gt;PyPi&lt;/a&gt; (üì• 79K / month ¬∑ üì¶ 5 ¬∑ ‚è±Ô∏è 06.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prince-factor-analysis&#34;&gt;Conda&lt;/a&gt; (üì• 9.8K ¬∑ ‚è±Ô∏è 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prince-factor-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;BioPandas&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 470) - Working with molecular structures in pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 10 ¬∑ üîÄ 98 ¬∑ üì¶ 100 ¬∑ üìã 43 - 39% open ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/biopandas&#34;&gt;PyPi&lt;/a&gt; (üì• 4.5K / month ¬∑ üì¶ 14 ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/biopandas&#34;&gt;Conda&lt;/a&gt; (üì• 110K ¬∑ ‚è±Ô∏è 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;findspark&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 440) - Find pyspark to make it importable. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 15 ¬∑ üîÄ 67 ¬∑ üì¶ 2.5K ¬∑ üìã 23 - 52% open ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minrk/findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/findspark&#34;&gt;PyPi&lt;/a&gt; (üì• 2.3M / month ¬∑ üì¶ 140 ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/findspark&#34;&gt;Conda&lt;/a&gt; (üì• 640K ¬∑ ‚è±Ô∏è 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;Feature Engine&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 860 ¬∑ üí§) - Feature engineering package with sklearn like functionality. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 24 ¬∑ üîÄ 200 ¬∑ ‚è±Ô∏è 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/solegalli/feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/feature_engine&#34;&gt;PyPi&lt;/a&gt; (üì• 76K / month ¬∑ üì¶ 66 ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/feature_engine&#34;&gt;Conda&lt;/a&gt; (üì• 9K ¬∑ ‚è±Ô∏è 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;StreamAlert&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 2.7K) - StreamAlert is a serverless, realtime data analysis framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 33 ¬∑ üîÄ 320 ¬∑ üìã 340 - 24% open ¬∑ ‚è±Ô∏è 04.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airbnb/streamalert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;opyrator&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 2.6K ¬∑ üí§) - Turns your machine learning code into microservices with web API,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 120 ¬∑ üì¶ 36 ¬∑ üìã 26 - 7% open ¬∑ ‚è±Ô∏è 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ml-tooling/opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opyrator&#34;&gt;PyPi&lt;/a&gt; (üì• 600 / month ¬∑ ‚è±Ô∏è 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opyrator&#34;&gt;Conda&lt;/a&gt; (üì• 110 ¬∑ ‚è±Ô∏è 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;impyute&lt;/a&gt;&lt;/b&gt; (ü•â20 ¬∑ ‚≠ê 320) - Data imputations library to preprocess datasets with missing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 11 ¬∑ üîÄ 44 ¬∑ üì¶ 140 ¬∑ üìã 64 - 42% open ¬∑ ‚è±Ô∏è 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eltonlaw/impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/impyute&#34;&gt;PyPi&lt;/a&gt; (üì• 5K / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 29.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;SUOD&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 320) - (MLSys 21) An Acceleration System for Large-scare Unsupervised Heterogeneous.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 1 ¬∑ üîÄ 41 ¬∑ üì¶ 420 ¬∑ üìã 9 - 66% open ¬∑ ‚è±Ô∏è 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/SUOD&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/suod&#34;&gt;PyPi&lt;/a&gt; (üì• 27K / month ¬∑ ‚è±Ô∏è 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install suod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;pykale&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 340) - Knowledge-Aware machine LEarning (KALE): accessible machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 17 ¬∑ üîÄ 45 ¬∑ üìã 98 - 14% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykale/pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykale&#34;&gt;PyPi&lt;/a&gt; (üì• 56 / month ¬∑ ‚è±Ô∏è 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;apricot&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 420) - apricot implements submodular optimization for the purpose of selecting.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 4 ¬∑ üîÄ 40 ¬∑ üì• 10 ¬∑ üì¶ 25 ¬∑ üìã 24 - 25% open ¬∑ ‚è±Ô∏è 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/apricot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apricot-select&#34;&gt;PyPi&lt;/a&gt; (üì• 390 / month ¬∑ üì¶ 3 ¬∑ ‚è±Ô∏è 28.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apricot-select&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;KD-Lib&lt;/a&gt;&lt;/b&gt; (ü•â17 ¬∑ ‚≠ê 390) - A Pytorch Knowledge Distillation library for benchmarking and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;GitHub&lt;/a&gt; (üë®‚Äçüíª 6 ¬∑ üîÄ 34 ¬∑ üìã 59 - 22% open ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SforAiDl/KD_Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/KD-Lib&#34;&gt;PyPi&lt;/a&gt; (üì• 120 / month ¬∑ ‚è±Ô∏è 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install KD-Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/cython-blis&#34;&gt;Cython BLIS&lt;/a&gt;&lt;/b&gt; (ü•à30 ¬∑ ‚≠ê 190) - Fast matrix-multiplication as a self-contained Python library no.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/pysc2&#34;&gt;pysc2&lt;/a&gt;&lt;/b&gt; (ü•à28 ¬∑ ‚≠ê 7.5K ¬∑ üíÄ) - StarCraft II Learning Environment. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JustGlowing/minisom&#34;&gt;minisom&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 1.1K) - MiniSom is a minimalistic implementation of the Self Organizing.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC-BY-3.0&#34;&gt;‚ùóÔ∏èCC-BY-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/annoviko/pyclustering&#34;&gt;pyclustering&lt;/a&gt;&lt;/b&gt; (ü•â27 ¬∑ ‚≠ê 960 ¬∑ üíÄ) - pyclustring is a Python, C++ data mining library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleanlab/cleanlab&#34;&gt;cleanlab&lt;/a&gt;&lt;/b&gt; (ü•â26 ¬∑ ‚≠ê 3.4K) - The standard data-centric AI package for data quality and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;‚ùóÔ∏èAGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/modAL-python/modAL&#34;&gt;modAL&lt;/a&gt;&lt;/b&gt; (ü•â24 ¬∑ ‚≠ê 1.7K ¬∑ üíÄ) - A modular active learning framework for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAILabel&#34;&gt;MONAILabel&lt;/a&gt;&lt;/b&gt; (ü•â23 ¬∑ ‚≠ê 240) - MONAI Label is an intelligent open source image labeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vecxoz/vecstack&#34;&gt;vecstack&lt;/a&gt;&lt;/b&gt; (ü•â22 ¬∑ ‚≠ê 660 ¬∑ üíÄ) - Python package for stacking (machine learning technique). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flennerhag/mlens&#34;&gt;mlens&lt;/a&gt;&lt;/b&gt; (ü•â21 ¬∑ ‚≠ê 740 ¬∑ üíÄ) - ML-Ensemble high performance ensemble learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kLabUM/rrcf&#34;&gt;rrcf&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 380 ¬∑ üíÄ) - Implementation of the Robust Random Cut Forest algorithm for anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/scikit-rebate&#34;&gt;scikit-rebate&lt;/a&gt;&lt;/b&gt; (ü•â19 ¬∑ ‚≠ê 360 ¬∑ üíÄ) - A scikit-learn-compatible Python implementation of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alegonz/baikal&#34;&gt;baikal&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 590 ¬∑ üíÄ) - A graph-based functional API for building complex scikit-learn.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pandas-ml/pandas-ml&#34;&gt;pandas-ml&lt;/a&gt;&lt;/b&gt; (ü•â18 ¬∑ ‚≠ê 290 ¬∑ üíÄ) - pandas, scikit-learn, xgboost and seaborn integration. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/NeuralCompression&#34;&gt;NeuralCompression&lt;/a&gt;&lt;/b&gt; (ü•â14 ¬∑ ‚≠ê 250) - A collection of tools for neural compression enthusiasts. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traingenerator&#34;&gt;traingenerator&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 1.2K ¬∑ üíÄ) - A web app to generate template code for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dstackai/dstack&#34;&gt;dstack&lt;/a&gt;&lt;/b&gt; (ü•â13 ¬∑ ‚≠ê 44 ¬∑ üê£) - dstack: continuous training in the cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;‚ùóÔ∏èGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Palashio/nylon&#34;&gt;nylon&lt;/a&gt;&lt;/b&gt; (ü•â12 ¬∑ ‚≠ê 77 ¬∑ üí§) - An intelligent, flexible grammar of machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paperswithcode.com&#34;&gt;&lt;strong&gt;Papers With Code&lt;/strong&gt;&lt;/a&gt;: Discover ML papers, code, and evaluation tables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sotabench.com&#34;&gt;&lt;strong&gt;Sotabench&lt;/strong&gt;&lt;/a&gt;: Discover &amp;amp; compare open-source ML models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://toolbox.google.com/datasetsearch&#34;&gt;&lt;strong&gt;Google Dataset Search&lt;/strong&gt;&lt;/a&gt;: Dataset search engine by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.datasetlist.com/&#34;&gt;&lt;strong&gt;Dataset List&lt;/strong&gt;&lt;/a&gt;: List of the biggest ML datasets from across the web.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awesomedata/awesome-public-datasets&#34;&gt;&lt;strong&gt;Awesome Public Datasets&lt;/strong&gt;&lt;/a&gt;: A topic-centric list of open datasets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://best-of.org&#34;&gt;&lt;strong&gt;Best-of lists&lt;/strong&gt;&lt;/a&gt;: Discover other best-of lists with awesome open-source projects on all kinds of topics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python-dev&#34;&gt;&lt;strong&gt;best-of-python-dev&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python developer tools and libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python&#34;&gt;&lt;strong&gt;best-of-web-python&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python libraries for web development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are encouraged and always welcome! If you like to add or update projects, choose one of the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open an issue by selecting one of the provided categories from the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue page&lt;/a&gt; and fill in the requested information.&lt;/li&gt; &#xA; &lt;li&gt;Modify the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/raw/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt; with your additions or changes, and submit a pull request. This can also be done directly via the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;Github UI&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like to contribute to or share suggestions regarding the project metadata col&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tiangolo/fastapi</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/tiangolo/fastapi</id>
    <link href="https://github.com/tiangolo/fastapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fastapi.tiangolo.com&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png&#34; alt=&#34;FastAPI&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tiangolo/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/tiangolo/fastapi/workflows/Test/badge.svg?event=push&amp;amp;branch=master&#34; alt=&#34;Test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/tiangolo/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/tiangolo/fastapi?color=%2334D058&#34; alt=&#34;Coverage&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/fastapi?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058&#34; alt=&#34;Supported Python versions&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://fastapi.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://fastapi.tiangolo.com&#34;&gt;https://fastapi.tiangolo.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/tiangolo/fastapi&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;https://github.com/tiangolo/fastapi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/p&gt; &#xA;&lt;p&gt;The key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Very high performance, on par with &lt;strong&gt;NodeJS&lt;/strong&gt; and &lt;strong&gt;Go&lt;/strong&gt; (thanks to Starlette and Pydantic). &lt;a href=&#34;https://raw.githubusercontent.com/tiangolo/fastapi/master/#performance&#34;&gt;One of the fastest Python frameworks available&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast to code&lt;/strong&gt;: Increase the speed to develop features by about 200% to 300%. *&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fewer bugs&lt;/strong&gt;: Reduce about 40% of human (developer) induced errors. *&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intuitive&lt;/strong&gt;: Great editor support. &lt;abbr title=&#34;also known as auto-complete, autocompletion, IntelliSense&#34;&gt;Completion&lt;/abbr&gt; everywhere. Less time debugging.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy&lt;/strong&gt;: Designed to be easy to use and learn. Less time reading docs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Short&lt;/strong&gt;: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Robust&lt;/strong&gt;: Get production-ready code. With automatic interactive documentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;: Based on (and fully compatible with) the open standards for APIs: &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;OpenAPI&lt;/a&gt; (previously known as Swagger) and &lt;a href=&#34;https://json-schema.org/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;JSON Schema&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;* estimation based on tests on an internal development team, building production applications.&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- sponsors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bit.ly/2QSouzH&#34; target=&#34;_blank&#34; title=&#34;Jina: build neural search-as-a-service for any kind of data in just minutes.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/jina.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cryptapi.io/&#34; target=&#34;_blank&#34; title=&#34;CryptAPI: Your easy to use, secure and privacy oriented payment gateway.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/cryptapi.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://classiq.link/n4s&#34; target=&#34;_blank&#34; title=&#34;Join the team building a new SaaS platform that will change the computing world&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/classiq.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.dropbase.io/careers&#34; target=&#34;_blank&#34; title=&#34;Dropbase - seamlessly collect, clean, and centralize data.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/dropbase.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.deta.sh/?ref=fastapi&#34; target=&#34;_blank&#34; title=&#34;The launchpad for all your (team&#39;s) ideas&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/deta.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.investsuite.com/jobs&#34; target=&#34;_blank&#34; title=&#34;Wealthtech jobs with FastAPI&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/investsuite.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://training.talkpython.fm/fastapi-courses&#34; target=&#34;_blank&#34; title=&#34;FastAPI video courses on demand from people you trust&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/talkpython.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://testdriven.io/courses/tdd-fastapi/&#34; target=&#34;_blank&#34; title=&#34;Learn to build high-quality web apps with best practices&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/testdriven.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack/&#34; target=&#34;_blank&#34; title=&#34;Build powerful search from composable, open source building blocks&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/haystack-fastapi.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.udemy.com/course/fastapi-rest/&#34; target=&#34;_blank&#34; title=&#34;Learn FastAPI by building a complete project. Extend your knowledge on advanced web development-AWS, Payments, Emails.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/ines-course.jpg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://careers.budget-insight.com/&#34; target=&#34;_blank&#34; title=&#34;Budget Insight is hiring!&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/budget-insight.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- /sponsors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/fastapi-people/#sponsors&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Other sponsors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Opinions&lt;/h2&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;[...] I&#39;m using &lt;strong&gt;FastAPI&lt;/strong&gt; a ton these days. [...] I&#39;m actually planning to use it for all of my team&#39;s &lt;strong&gt;ML services at Microsoft&lt;/strong&gt;. Some of them are getting integrated into the core &lt;strong&gt;Windows&lt;/strong&gt; product and some &lt;strong&gt;Office&lt;/strong&gt; products.&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Kabir Khan - &#xA; &lt;strong&gt;Microsoft&lt;/strong&gt; &#xA; &lt;a href=&#34;https://github.com/tiangolo/fastapi/pull/26&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;We adopted the &lt;strong&gt;FastAPI&lt;/strong&gt; library to spawn a &lt;strong&gt;REST&lt;/strong&gt; server that can be queried to obtain &lt;strong&gt;predictions&lt;/strong&gt;. [for Ludwig]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - &#xA; &lt;strong&gt;Uber&lt;/strong&gt; &#xA; &lt;a href=&#34;https://eng.uber.com/ludwig-v0-2/&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;&lt;strong&gt;Netflix&lt;/strong&gt; is pleased to announce the open-source release of our &lt;strong&gt;crisis management&lt;/strong&gt; orchestration framework: &lt;strong&gt;Dispatch&lt;/strong&gt;! [built with &lt;strong&gt;FastAPI&lt;/strong&gt;]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Kevin Glisson, Marc Vilanova, Forest Monsen - &#xA; &lt;strong&gt;Netflix&lt;/strong&gt; &#xA; &lt;a href=&#34;https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;I‚Äôm over the moon excited about &lt;strong&gt;FastAPI&lt;/strong&gt;. It‚Äôs so fun!&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Brian Okken - &#xA; &lt;strong&gt;&lt;a href=&#34;https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?time_in_sec=855&#34; target=&#34;_blank&#34;&gt;Python Bytes&lt;/a&gt; podcast host&lt;/strong&gt; &#xA; &lt;a href=&#34;https://twitter.com/brianokken/status/1112220079972728832&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;Honestly, what you&#39;ve built looks super solid and polished. In many ways, it&#39;s what I wanted &lt;strong&gt;Hug&lt;/strong&gt; to be - it&#39;s really inspiring to see someone build that.&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Timothy Crosley - &#xA; &lt;strong&gt;&lt;a href=&#34;https://www.hug.rest/&#34; target=&#34;_blank&#34;&gt;Hug&lt;/a&gt; creator&lt;/strong&gt; &#xA; &lt;a href=&#34;https://news.ycombinator.com/item?id=19455465&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;If you&#39;re looking to learn one &lt;strong&gt;modern framework&lt;/strong&gt; for building REST APIs, check out &lt;strong&gt;FastAPI&lt;/strong&gt; [...] It&#39;s fast, easy to use and easy to learn [...]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;We&#39;ve switched over to &lt;strong&gt;FastAPI&lt;/strong&gt; for our &lt;strong&gt;APIs&lt;/strong&gt; [...] I think you&#39;ll like it [...]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Ines Montani - Matthew Honnibal - &#xA; &lt;strong&gt;&lt;a href=&#34;https://explosion.ai&#34; target=&#34;_blank&#34;&gt;Explosion AI&lt;/a&gt; founders - &lt;a href=&#34;https://spacy.io&#34; target=&#34;_blank&#34;&gt;spaCy&lt;/a&gt; creators&lt;/strong&gt; &#xA; &lt;a href=&#34;https://twitter.com/_inesmontani/status/1144173225322143744&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt; - &#xA; &lt;a href=&#34;https://twitter.com/honnibal/status/1144031421859655680&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Typer&lt;/strong&gt;, the FastAPI of CLIs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://typer.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg?sanitize=true&#34; style=&#34;width: 20%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are building a &lt;abbr title=&#34;Command Line Interface&#34;&gt;CLI&lt;/abbr&gt; app to be used in the terminal instead of a web API, check out &lt;a href=&#34;https://typer.tiangolo.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Typer&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Typer&lt;/strong&gt; is FastAPI&#39;s little sibling. And it&#39;s intended to be the &lt;strong&gt;FastAPI of CLIs&lt;/strong&gt;. ‚å®Ô∏è üöÄ&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Python 3.6+&lt;/p&gt; &#xA;&lt;p&gt;FastAPI stands on the shoulders of giants:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.starlette.io/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Starlette&lt;/a&gt; for the web parts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pydantic-docs.helpmanual.io/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Pydantic&lt;/a&gt; for the data parts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install fastapi&#xA;&#xA;---&amp;gt; 100%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;You will also need an ASGI server, for production such as &lt;a href=&#34;https://www.uvicorn.org&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Uvicorn&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/pgjones/hypercorn&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Hypercorn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install &#34;uvicorn[standard]&#34;&#xA;&#xA;---&amp;gt; 100%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;Create it&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a file &lt;code&gt;main.py&lt;/code&gt; with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;Or use &lt;code&gt;async def&lt;/code&gt;...&lt;/summary&gt; &#xA; &lt;p&gt;If your code uses &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt;, use &lt;code&gt;async def&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;async def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;async def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;If you don&#39;t know, check the &lt;em&gt;&#34;In a hurry?&#34;&lt;/em&gt; section about &lt;a href=&#34;https://fastapi.tiangolo.com/async/#in-a-hurry&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; in the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Run it&lt;/h3&gt; &#xA;&lt;p&gt;Run the server with:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ uvicorn main:app --reload&#xA;&#xA;INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)&#xA;INFO:     Started reloader process [28720]&#xA;INFO:     Started server process [28722]&#xA;INFO:     Waiting for application startup.&#xA;INFO:     Application startup complete.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;About the command &lt;code&gt;uvicorn main:app --reload&lt;/code&gt;...&lt;/summary&gt; &#xA; &lt;p&gt;The command &lt;code&gt;uvicorn main:app&lt;/code&gt; refers to:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;main&lt;/code&gt;: the file &lt;code&gt;main.py&lt;/code&gt; (the Python &#34;module&#34;).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;app&lt;/code&gt;: the object created inside of &lt;code&gt;main.py&lt;/code&gt; with the line &lt;code&gt;app = FastAPI()&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;--reload&lt;/code&gt;: make the server restart after code changes. Only do this for development.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Check it&lt;/h3&gt; &#xA;&lt;p&gt;Open your browser at &lt;a href=&#34;http://127.0.0.1:8000/items/5?q=somequery&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/items/5?q=somequery&#34;&gt;http://127.0.0.1:8000/items/5?q=somequery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the JSON response as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#34;item_id&#34;: 5, &#34;q&#34;: &#34;somequery&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You already created an API that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Receives HTTP requests in the &lt;em&gt;paths&lt;/em&gt; &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/items/{item_id}&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Both &lt;em&gt;paths&lt;/em&gt; take &lt;code&gt;GET&lt;/code&gt; &lt;em&gt;operations&lt;/em&gt; (also known as HTTP &lt;em&gt;methods&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;em&gt;path&lt;/em&gt; &lt;code&gt;/items/{item_id}&lt;/code&gt; has a &lt;em&gt;path parameter&lt;/em&gt; &lt;code&gt;item_id&lt;/code&gt; that should be an &lt;code&gt;int&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;em&gt;path&lt;/em&gt; &lt;code&gt;/items/{item_id}&lt;/code&gt; has an optional &lt;code&gt;str&lt;/code&gt; &lt;em&gt;query parameter&lt;/em&gt; &lt;code&gt;q&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Interactive API docs&lt;/h3&gt; &#xA;&lt;p&gt;Now go to &lt;a href=&#34;http://127.0.0.1:8000/docs&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/docs&#34;&gt;http://127.0.0.1:8000/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the automatic interactive API documentation (provided by &lt;a href=&#34;https://github.com/swagger-api/swagger-ui&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Swagger UI&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png&#34; alt=&#34;Swagger UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative API docs&lt;/h3&gt; &#xA;&lt;p&gt;And now, go to &lt;a href=&#34;http://127.0.0.1:8000/redoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/redoc&#34;&gt;http://127.0.0.1:8000/redoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the alternative automatic documentation (provided by &lt;a href=&#34;https://github.com/Rebilly/ReDoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;ReDoc&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png&#34; alt=&#34;ReDoc&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example upgrade&lt;/h2&gt; &#xA;&lt;p&gt;Now modify the file &lt;code&gt;main.py&lt;/code&gt; to receive a body from a &lt;code&gt;PUT&lt;/code&gt; request.&lt;/p&gt; &#xA;&lt;p&gt;Declare the body using standard Python types, thanks to Pydantic.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;from pydantic import BaseModel&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;class Item(BaseModel):&#xA;    name: str&#xA;    price: float&#xA;    is_offer: Union[bool, None] = None&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&#xA;&#xA;@app.put(&#34;/items/{item_id}&#34;)&#xA;def update_item(item_id: int, item: Item):&#xA;    return {&#34;item_name&#34;: item.name, &#34;item_id&#34;: item_id}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server should reload automatically (because you added &lt;code&gt;--reload&lt;/code&gt; to the &lt;code&gt;uvicorn&lt;/code&gt; command above).&lt;/p&gt; &#xA;&lt;h3&gt;Interactive API docs upgrade&lt;/h3&gt; &#xA;&lt;p&gt;Now go to &lt;a href=&#34;http://127.0.0.1:8000/docs&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/docs&#34;&gt;http://127.0.0.1:8000/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The interactive API documentation will be automatically updated, including the new body:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png&#34; alt=&#34;Swagger UI&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on the button &#34;Try it out&#34;, it allows you to fill the parameters and directly interact with the API:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-04-swagger-03.png&#34; alt=&#34;Swagger UI interaction&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Then click on the &#34;Execute&#34; button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-05-swagger-04.png&#34; alt=&#34;Swagger UI interaction&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative API docs upgrade&lt;/h3&gt; &#xA;&lt;p&gt;And now, go to &lt;a href=&#34;http://127.0.0.1:8000/redoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/redoc&#34;&gt;http://127.0.0.1:8000/redoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The alternative documentation will also reflect the new query parameter and body:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-06-redoc-02.png&#34; alt=&#34;ReDoc&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Recap&lt;/h3&gt; &#xA;&lt;p&gt;In summary, you declare &lt;strong&gt;once&lt;/strong&gt; the types of parameters, body, etc. as function parameters.&lt;/p&gt; &#xA;&lt;p&gt;You do that with standard modern Python types.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to learn a new syntax, the methods or classes of a specific library, etc.&lt;/p&gt; &#xA;&lt;p&gt;Just standard &lt;strong&gt;Python 3.6+&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, for an &lt;code&gt;int&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;item_id: int&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for a more complex &lt;code&gt;Item&lt;/code&gt; model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;item: Item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...and with that single declaration you get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Editor support, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Completion.&lt;/li&gt; &#xA;   &lt;li&gt;Type checks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Validation of data: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatic and clear errors when the data is invalid.&lt;/li&gt; &#xA;   &lt;li&gt;Validation even for deeply nested JSON objects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;abbr title=&#34;also known as: serialization, parsing, marshalling&#34;&gt;Conversion&lt;/abbr&gt; of input data: coming from the network to Python data and types. Reading from: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON.&lt;/li&gt; &#xA;   &lt;li&gt;Path parameters.&lt;/li&gt; &#xA;   &lt;li&gt;Query parameters.&lt;/li&gt; &#xA;   &lt;li&gt;Cookies.&lt;/li&gt; &#xA;   &lt;li&gt;Headers.&lt;/li&gt; &#xA;   &lt;li&gt;Forms.&lt;/li&gt; &#xA;   &lt;li&gt;Files.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;abbr title=&#34;also known as: serialization, parsing, marshalling&#34;&gt;Conversion&lt;/abbr&gt; of output data: converting from Python data and types to network data (as JSON): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Convert Python types (&lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, etc).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;datetime&lt;/code&gt; objects.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;UUID&lt;/code&gt; objects.&lt;/li&gt; &#xA;   &lt;li&gt;Database models.&lt;/li&gt; &#xA;   &lt;li&gt;...and many more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automatic interactive API documentation, including 2 alternative user interfaces: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swagger UI.&lt;/li&gt; &#xA;   &lt;li&gt;ReDoc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Coming back to the previous code example, &lt;strong&gt;FastAPI&lt;/strong&gt; will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Validate that there is an &lt;code&gt;item_id&lt;/code&gt; in the path for &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests.&lt;/li&gt; &#xA; &lt;li&gt;Validate that the &lt;code&gt;item_id&lt;/code&gt; is of type &lt;code&gt;int&lt;/code&gt; for &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If it is not, the client will see a useful, clear error.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check if there is an optional query parameter named &lt;code&gt;q&lt;/code&gt; (as in &lt;code&gt;http://127.0.0.1:8000/items/foo?q=somequery&lt;/code&gt;) for &lt;code&gt;GET&lt;/code&gt; requests. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;As the &lt;code&gt;q&lt;/code&gt; parameter is declared with &lt;code&gt;= None&lt;/code&gt;, it is optional.&lt;/li&gt; &#xA;   &lt;li&gt;Without the &lt;code&gt;None&lt;/code&gt; it would be required (as is the body in the case with &lt;code&gt;PUT&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;PUT&lt;/code&gt; requests to &lt;code&gt;/items/{item_id}&lt;/code&gt;, Read the body as JSON: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check that it has a required attribute &lt;code&gt;name&lt;/code&gt; that should be a &lt;code&gt;str&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check that it has a required attribute &lt;code&gt;price&lt;/code&gt; that has to be a &lt;code&gt;float&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check that it has an optional attribute &lt;code&gt;is_offer&lt;/code&gt;, that should be a &lt;code&gt;bool&lt;/code&gt;, if present.&lt;/li&gt; &#xA;   &lt;li&gt;All this would also work for deeply nested JSON objects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Convert from and to JSON automatically.&lt;/li&gt; &#xA; &lt;li&gt;Document everything with OpenAPI, that can be used by: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Interactive documentation systems.&lt;/li&gt; &#xA;   &lt;li&gt;Automatic client code generation systems, for many languages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provide 2 interactive documentation web interfaces directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;We just scratched the surface, but you already get the idea of how it all works.&lt;/p&gt; &#xA;&lt;p&gt;Try changing the line with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;    return {&#34;item_name&#34;: item.name, &#34;item_id&#34;: item_id}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;        ... &#34;item_name&#34;: item.name ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;        ... &#34;item_price&#34;: item.price ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...and see how your editor will auto-complete the attributes and know their types:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/vscode-completion.png&#34; alt=&#34;editor support&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a more complete example including more features, see the &lt;a href=&#34;https://fastapi.tiangolo.com/tutorial/&#34;&gt;Tutorial - User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spoiler alert&lt;/strong&gt;: the tutorial - user guide includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Declaration of &lt;strong&gt;parameters&lt;/strong&gt; from other different places as: &lt;strong&gt;headers&lt;/strong&gt;, &lt;strong&gt;cookies&lt;/strong&gt;, &lt;strong&gt;form fields&lt;/strong&gt; and &lt;strong&gt;files&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;How to set &lt;strong&gt;validation constraints&lt;/strong&gt; as &lt;code&gt;maximum_length&lt;/code&gt; or &lt;code&gt;regex&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A very powerful and easy to use &lt;strong&gt;&lt;abbr title=&#34;also known as components, resources, providers, services, injectables&#34;&gt;Dependency Injection&lt;/abbr&gt;&lt;/strong&gt; system.&lt;/li&gt; &#xA; &lt;li&gt;Security and authentication, including support for &lt;strong&gt;OAuth2&lt;/strong&gt; with &lt;strong&gt;JWT tokens&lt;/strong&gt; and &lt;strong&gt;HTTP Basic&lt;/strong&gt; auth.&lt;/li&gt; &#xA; &lt;li&gt;More advanced (but equally easy) techniques for declaring &lt;strong&gt;deeply nested JSON models&lt;/strong&gt; (thanks to Pydantic).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GraphQL&lt;/strong&gt; integration with &lt;a href=&#34;https://strawberry.rocks&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Strawberry&lt;/a&gt; and other libraries.&lt;/li&gt; &#xA; &lt;li&gt;Many extra features (thanks to Starlette) as: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;WebSockets&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;extremely easy tests based on &lt;code&gt;requests&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Cookie Sessions&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;...and more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Independent TechEmpower benchmarks show &lt;strong&gt;FastAPI&lt;/strong&gt; applications running under Uvicorn as &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=test&amp;amp;runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&amp;amp;hw=ph&amp;amp;test=query&amp;amp;l=zijzen-7&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;one of the fastest Python frameworks available&lt;/a&gt;, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)&lt;/p&gt; &#xA;&lt;p&gt;To understand more about it, see the section &lt;a href=&#34;https://fastapi.tiangolo.com/benchmarks/&#34; class=&#34;internal-link&#34; target=&#34;_blank&#34;&gt;Benchmarks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Used by Pydantic:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/esnme/ultrajson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ujson&lt;/code&gt;&lt;/a&gt; - for faster JSON &lt;abbr title=&#34;converting the string that comes from an HTTP request into Python data&#34;&gt;&#34;parsing&#34;&lt;/abbr&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoshData/python-email-validator&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;email_validator&lt;/code&gt;&lt;/a&gt; - for email validation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Used by Starlette:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://requests.readthedocs.io&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; - Required if you want to use the &lt;code&gt;TestClient&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;jinja2&lt;/code&gt;&lt;/a&gt; - Required if you want to use the default template configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andrew-d.github.io/python-multipart/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;python-multipart&lt;/code&gt;&lt;/a&gt; - Required if you want to support form &lt;abbr title=&#34;converting the string that comes from an HTTP request into Python data&#34;&gt;&#34;parsing&#34;&lt;/abbr&gt;, with &lt;code&gt;request.form()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pythonhosted.org/itsdangerous/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;itsdangerous&lt;/code&gt;&lt;/a&gt; - Required for &lt;code&gt;SessionMiddleware&lt;/code&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pyyaml.org/wiki/PyYAMLDocumentation&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;pyyaml&lt;/code&gt;&lt;/a&gt; - Required for Starlette&#39;s &lt;code&gt;SchemaGenerator&lt;/code&gt; support (you probably don&#39;t need it with FastAPI).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/esnme/ultrajson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ujson&lt;/code&gt;&lt;/a&gt; - Required if you want to use &lt;code&gt;UJSONResponse&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Used by FastAPI / Starlette:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.uvicorn.org&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;uvicorn&lt;/code&gt;&lt;/a&gt; - for the server that loads and serves your application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ijl/orjson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;orjson&lt;/code&gt;&lt;/a&gt; - Required if you want to use &lt;code&gt;ORJSONResponse&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can install all of these with &lt;code&gt;pip install &#34;fastapi[all]&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bregman-arie/devops-exercises</title>
    <updated>2022-05-29T02:29:34Z</updated>
    <id>tag:github.com,2022-05-29:/bregman-arie/devops-exercises</id>
    <link href="https://github.com/bregman-arie/devops-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚Ñπ&lt;/span&gt; &amp;nbsp;This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üìä&lt;/span&gt; &amp;nbsp;There are currently &lt;strong&gt;2292&lt;/strong&gt; exercises and questions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üìö&lt;/span&gt; &amp;nbsp;To learn more about DevOps and SRE, check the resources in &lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &amp;nbsp;You can use these for preparing for an interview but most of the questions and exercises don&#39;t represent an actual interview. Please read &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/faq.md&#34;&gt;FAQ page&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üë•&lt;/span&gt; &amp;nbsp;Join our &lt;a href=&#34;https://www.facebook.com/groups/538897960007080&#34;&gt;DevOps community&lt;/a&gt; where we have discussions and share resources on DevOps&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üìù&lt;/span&gt; &amp;nbsp;You can add more exercises by submitting pull requests :) Read about contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:START --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DevOps&#34;&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cicd/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cicd.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;cicd&#34;&gt;&lt;br&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/git/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Git&#34;&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/ansible/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;ansible&#34;&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Network&#34;&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Linux&#34;&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/software_development/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;programming&#34;&gt;&lt;br&gt;&lt;b&gt;Software Development&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/python-exercises&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Python&#34;&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;go&#34;&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/shell/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Bash&#34;&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/kubernetes/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;kubernetes&#34;&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Prometheus&#34;&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cloud/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Cloud&#34;&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/aws/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png&#34; width=&#34;100px;&#34; height=&#34;75px;&#34; alt=&#34;aws&#34;&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#azure&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;azure&#34;&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png&#34; width=&#34;70px;&#34; height=&#34;70px;&#34; alt=&#34;Google Cloud Platform&#34;&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;openstack&#34;&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/security/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;security&#34;&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Operating System&#34;&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Monitoring&#34;&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Elastic&#34;&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Virtualization&#34;&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/dns/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DNS&#34;&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Misc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Misc&#34;&gt;&lt;br&gt;&lt;b&gt;Misc&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Testing&#34;&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Databases&#34;&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;RegEx&#34;&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Design&#34;&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Hardware&#34;&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Big Data&#34;&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Certificates&#34;&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/containers/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Containers&#34;&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;sql&#34;&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/openshift/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;OpenShift&#34;&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Storage&#34;&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/soft_skills/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;HR&#34;&gt;&lt;br&gt;&lt;b&gt;Soft Skills&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/terraform/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Terraform&#34;&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Mongo&#34;&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;puppet&#34;&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Distributed&#34;&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;you&#34;&gt;&lt;br&gt;&lt;b&gt;Questions you can ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/perl/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/perl.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;perl&#34;&gt;&lt;br&gt;&lt;b&gt;Perl&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:END --&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you need in order to communicate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A common language (for the two ends to understand)&lt;/li&gt; &lt;li&gt;A way to address who do you want to communicate with&lt;/li&gt; &lt;li&gt;A Connection (so the content of of the communication can reach the recipients) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP/IP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A set of protocols that define how two or more devices can communicate with each other. To learn more about TCP/IP, read &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is APIPA?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA is a set of it addresses that devices are allocated when the main DHCP server is not reachable &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ip range does APIPA use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA uses the ip range: 169.254.0.1 - 169.254.255.254. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Ethernet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Ethernet simply refers to the most common type of Local Area Network (LAN) used today. A LAN‚Äîin contrast to a WAN (Wide Area Network), which spans a larger geographical area‚Äîis a connected network of computers in a small area, like your office, college campus, or even home. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A MAC address is a unique identification number or code used to identify individual devices on the network.&lt;/p&gt; &lt;p&gt;Packets that are sent on the ethernet are always coming from a MAC address and sent to a MAC address. If a network adapter is receiving a packet, it is comparing the packet‚Äôs destination MAC address to the adapter‚Äôs own MAC address.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When a device sends a packet to the broadcast MAC address (FF:FF:FF:FF:FF:FF‚Äã), it is delivered to all stations on the local network. Ethernet broadcasts are used to resolve IP addresses to MAC addresses (by ARP) at the datalink layer . &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an IP address?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A Subnet mask is a 32-bit number that masks an IP address, and divides the IP address into network address and host address. Subnet Mask is made by setting network bits to all &#34;1&#34;s and setting host bits to all &#34;0&#34;s. Within a given network, two host addresses are reserved for special purpose, and cannot be assigned to hosts. The &#34;0&#34; address is assigned a network address and &#34;255&#34; is assigned to a broadcast address, and they cannot be assigned to hosts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| Address Class | No of Network Bits | No of Host Bits | Subnet mask     | CIDR notation |&#xA;| ------------- | ------------------ | --------------- | --------------- | ------------- |&#xA;| A             | 8                  | 24              | 255.0.0.0       | /8            |&#xA;| A             | 9                  | 23              | 255.128.0.0     | /9            |&#xA;| A             | 12                 | 20              | 255.240.0.0     | /12           |&#xA;| A             | 14                 | 18              | 255.252.0.0     | /14           |&#xA;| B             | 16                 | 16              | 255.255.0.0     | /16           |&#xA;| B             | 17                 | 15              | 255.255.128.0   | /17           |&#xA;| B             | 20                 | 12              | 255.255.240.0   | /20           |&#xA;| B             | 22                 | 10              | 255.255.252.0   | /22           |&#xA;| C             | 24                 | 8               | 255.255.255.0   | /24           |&#xA;| C             | 25                 | 7               | 255.255.255.128 | /25           |&#xA;| C             | 28                 | 4               | 255.255.255.240 | /28           |&#xA;| C             | 30                 | 2               | 255.255.255.252 | /30           |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a private IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Private IP addresses are assigned to the hosts in the same network to communicate among one another. As the name &#34;private&#34; suggests, the devices having the priate IP addresses assigned can&#39;t be reached by the devices from any external network. For example, if I am living in a hostel and I want my hostelmates to join the game server I have hosted, I will ask them to join via my server&#39;s private IP address, since the network is local to the hostel. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a public IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; A public IP address is the public facing IP address. In the event that you was hosting a game server that you want your friends to join, you will give your friends your public IP address to allow their computers to identify and locate your network and server in order for the connection to take place. One time that you would not need to use a public facing IP address is in the event that you was playing with friends who was connected to the same network as you, in that case, you would use a private ip address. In order for someone to be able to connect to your server that is located internally, you will have to setup a port forward to tell your router to allow traffic from the public domain into your network and vice versa. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Application: user end (HTTP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Presentation: establishes context between application-layer entities (Encryption is here)&lt;/li&gt; &#xA;   &lt;li&gt;Session: establishes, manages and terminates the connections&lt;/li&gt; &#xA;   &lt;li&gt;Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)&lt;/li&gt; &#xA;   &lt;li&gt;Network: transfers datagrams from one network to another (IP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Data link: provides a link between two directly connected nodes (MAC is here)&lt;/li&gt; &#xA;   &lt;li&gt;Physical: the electrical and physical spec the data connection (Bits are here)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read more about the OSI model in &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;penguintutor.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For each of the following determine to which OSI layer it belongs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Error correction&lt;/li&gt; &#xA;   &lt;li&gt;Packets routing&lt;/li&gt; &#xA;   &lt;li&gt;Cables and electrical signals&lt;/li&gt; &#xA;   &lt;li&gt;MAC address&lt;/li&gt; &#xA;   &lt;li&gt;IP address&lt;/li&gt; &#xA;   &lt;li&gt;Terminate connections&lt;/li&gt; &#xA;   &lt;li&gt;3 way handshake&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;li&gt;Error correction - Data link&lt;/li&gt; &lt;li&gt;Packets routing - Network&lt;/li&gt; &lt;li&gt;Cables and electrical signals - Physical&lt;/li&gt; &lt;li&gt;MAC address - Data link&lt;/li&gt; &lt;li&gt;IP address - Network&lt;/li&gt; &lt;li&gt;Terminate connections - Session&lt;/li&gt; &lt;/b&gt;&#xA; &lt;li&gt;&lt;b&gt;3 way handshake - Transport &lt;/b&gt;&lt;/li&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt; &lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting. Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection. Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt; &lt;p&gt;CSMA/CD algorithm:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt; &lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt; &lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt; &lt;li&gt;Both hosts stop sending the frame and they send to everyone a &#39;jam signal&#39; notifying everyone that a collision occurred&lt;/li&gt; &lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt; &lt;li&gt;Once each host waited for a random time, they try to send the frame again and so the &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following network devices and the difference between them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;router&lt;/li&gt; &#xA;   &lt;li&gt;switch&lt;/li&gt; &#xA;   &lt;li&gt;hub&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does a router works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A router is a physical or virtual appliance that passes information between two or more packet-switched computer networks. A router inspects a given data packet&#39;s destination Internet Protocol address (IP address), calculates the best way for it to reach its destination and then forwards it accordingly.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network Address Translation (NAT) is a process in which one or more local IP address is translated into one or more Global IP address and vice versa in order to provide Internet access to the local hosts.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy? How does it works? What do we need it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A proxy server acts as a gateway between you and the internet. It‚Äôs an intermediary server separating end users from the websites they browse.&lt;/p&gt; &lt;p&gt;If you‚Äôre using a proxy server, internet traffic flows through the proxy server on its way to the address you requested. The request then comes back through that same proxy server (there are exceptions to this rule), and then the proxy server forwards the data received from the website to you.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roxy servers provide varying levels of functionality, security, and privacy depending on your use case, needs, or company policy. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP? How does it works? What is the 3 way handshake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP 3-way handshake or three-way handshake is a process which is used in a TCP/IP network to make a connection between server and client.&lt;/p&gt; &lt;p&gt;A three-way handshake is primarily used to create a TCP socket connection. It works when:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A client node sends a SYN data packet over an IP network to a server on the same or an external network. The objective of this packet is to ask/infer if the server is open for new connections.&lt;/li&gt; &lt;li&gt;The target server must have open ports that can accept and initiate new connections. When the server receives the SYN packet from the client node, it responds and returns a confirmation receipt ‚Äì the ACK packet or SYN/ACK packet.&lt;/li&gt; &lt;li&gt;The client node receives the SYN/ACK from the server and responds with an ACK packet. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is round-trip delay or round-trip time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Round-trip_delay&#34;&gt;wikipedia&lt;/a&gt;: &#34;the length of time it takes for a signal to be sent plus the length of time it takes for an acknowledgement of that signal to be received&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus question: what is the RTT of LAN? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn&#39;t handle package order. This makes UDP more lightweight than TCP and a perfect candidate for services like streaming.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;Penguintutor.com&lt;/a&gt; provides a good explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;default gateway&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A default gateway serves as an access point or IP router that a networked computer uses to send information to a computer in another network or the internet. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ARP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;ARP stands for Address Resolution Protocol. When you try to ping an IP address on your local network, say 192.168.1.1, your system has to turn the IP address 192.168.1.1 into a MAC address. This involves using ARP to resolve the address, hence its name.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systems keep an ARP look-up table where they store information about what IP addresses are associated with what MAC addresses. When trying to send a packet to an IP address, the system will first consult this table to see if it already knows the MAC address. If there is a value cached, ARP is not used. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TTL? What does it helps to prevent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DHCP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It stands for Dynamic Host Configuration Protocol, and allocates IP addresses, subnet masks and gateways to hosts. This is how it works:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A host upon entering a network, broadcasts a message in search of a DHCP server (DHCP DISCOVER)&lt;/li&gt; &#xA;   &lt;li&gt;An offer message is sent back by the DHCP server as a packet containing lease time, subnet mask, IP addresses, etc (DHCP OFFER)&lt;/li&gt; &#xA;   &lt;li&gt;Depending on which offer accepted, the client sends back a reply broadcast letting all DHCP servers know (DHCP REQUEST)&lt;/li&gt; &#xA;   &lt;li&gt;Server sends an acknowledgment (DHCP ACK)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://linuxjourney.com/lesson/dhcp-overview&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have two DHCP servers in the same network? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSL tunneling? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VLAN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens if you send a packet that is bigger than the MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False?. Ping is using UDP because it doesn&#39;t care about reliable connection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT? How does it work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;NAT stands for network address translation. It‚Äôs a way to map multiple local private addresses to a public one before transferring the information. Organizations that want multiple devices to employ a single IP address use NAT, as do most home routers. For example, your computer&#39;s private IP could be 192.168.1.100, but your router maps the traffic to it&#39;s public IP (e.g. 1.1.1.1). Any device on the internet would see the traffic coming from your public IP (1.1.1.1) instead of your private IP (192.168.1.100). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which port number is used in each of the following protocols?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;SMTP&lt;/li&gt; &#xA;   &lt;li&gt;HTTP&lt;/li&gt; &#xA;   &lt;li&gt;DNS&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;SFTP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH - 22&lt;/li&gt; &lt;li&gt;SMTP - 25&lt;/li&gt; &lt;li&gt;HTTP - 80&lt;/li&gt; &lt;li&gt;DNS - 53&lt;/li&gt; &lt;li&gt;HTTPS - 443&lt;/li&gt; &lt;li&gt;FTP - 21&lt;/li&gt; &lt;li&gt;SFTP - 22 &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Network - Data and Control planes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;control plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The control plane is the part of the network that decides how to route and forward packets to a different location. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;data plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The data plane is the part of the network that actually forwards the data/packets. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;management plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Refers to monitoring and management functions. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;To which plane (data, control, ...) is creating routing tables belongs to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Control Plane. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRE? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VXLAN? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SNAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain OSPF&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is latency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency is the time taken for an information to reach its destination from the source. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is bandwidth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bandwidth is the capacity of a communication channel to measure how much data the latter can handle over a specific time period. More bandwidth would imply more traffic handling and thus more data transfer. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is throughput?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput refers to the measurement of the real amount of data transferred over a certain period of time across any transmission channel. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When performing a search query, what is more important, latency or throughput? And how to assure that what managing global infrastructure?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency. To have a good latency, a search query should be forwarded to the closest datacenter. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When uploading a video, what is more important, latency or throughput? And how to assure that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput. To have a good throughput, the upload stream should be routed to an underutilized link. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What other considerations (except latency and throughput) are there when forwarding requests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keep caches updated (which means the request could be forwarded not to the closest datacenter) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the exponential backoff algorithm? Where is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;00110011110100011101 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the application layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Hypertext Transfer Protocol (HTTP) - used for the webpages on the internet&lt;/li&gt; &lt;li&gt;Simple Mail Transfer Protocol (SMTP) - email transmission&lt;/li&gt; &lt;li&gt;Telecommunications Network - (TELNET) - terminal emulation to allow client access to telnet server&lt;/li&gt; &lt;li&gt;File Transfer Protocol (FTP) - facilitates transfer of files between any two machines&lt;/li&gt; &lt;li&gt;Domain Name System (DNS) - domain name translation&lt;/li&gt; &lt;li&gt;Dynamic Host Configuration Protocol (DHCP) - allocates IP addresses, subnet masks and gateways to hosts&lt;/li&gt; &lt;li&gt;Simple Network Management Protocol (SNMP) - gathers data of devices on the network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the network Layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Internet Protocol (IP) - assists in routing packets from one machine to another&lt;/li&gt; &lt;li&gt;Internet Control Message Protocol (ICMP) - lets one know what is going such as error messages and debugging information &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HSTS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; HTTP Strict Transport Security is a web server directive that informs user agents and web browsers how to handle its connection through a response header sent at the very beginning and back to the browser. This forces connections over HTTPS encryption, disregarding any script&#39;s call to load any resource in that domain over HTTP. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more [here](&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&#34;&gt;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Network - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Internet? Is it the same as the World Wide Web?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The internet refers to network of networks, transferring huge amounts of data around the globe.&lt;br&gt; The World Wide Web is an application running on millions of server, on top of the internet, accessed through what is know as the web browser &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ISP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ISP (Internet Service Provider) is the local internet company provider. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h4&gt;Linux Master Application&lt;/h4&gt; &#xA;&lt;p&gt;A completely free application for testing your knowledge on Linux&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codingshell.linuxmaster&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux_master.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Only you know :)&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Administration&lt;/li&gt; &lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;li&gt;Networking&lt;/li&gt; &lt;li&gt;Development&lt;/li&gt; &lt;li&gt;Deployments &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;touch&lt;/li&gt; &#xA;   &lt;li&gt;ls&lt;/li&gt; &#xA;   &lt;li&gt;rm&lt;/li&gt; &#xA;   &lt;li&gt;cat&lt;/li&gt; &#xA;   &lt;li&gt;cp&lt;/li&gt; &#xA;   &lt;li&gt;mkdir&lt;/li&gt; &#xA;   &lt;li&gt;pwd&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch - update file&#39;s timestamp. More commonly used for creating files&lt;/li&gt; &lt;li&gt;ls - listing files and directories&lt;/li&gt; &lt;li&gt;rm - remove files and directories&lt;/li&gt; &lt;li&gt;cat - create, view and concatenate files&lt;/li&gt; &lt;li&gt;cp - copy files and directories&lt;/li&gt; &lt;li&gt;mkdir - create directories&lt;/li&gt; &lt;li&gt;pwd - print current working directory (= at what path the user currently located)&lt;/li&gt; &lt;li&gt;cd - change directory &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following commands does? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cd /&lt;/li&gt; &#xA;   &lt;li&gt;cd ~&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;   &lt;li&gt;cd ..&lt;/li&gt; &#xA;   &lt;li&gt;cd .&lt;/li&gt; &#xA;   &lt;li&gt;cd -&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cd / -&amp;gt; change to the root directory&lt;/li&gt; &lt;li&gt;cd ~ -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd .. -&amp;gt; change to the directory above your current i.e parent directory&lt;/li&gt; &lt;li&gt;cd . -&amp;gt; change to the directory you currently in&lt;/li&gt; &lt;li&gt;cd - -&amp;gt; change to the last visited path &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some of the commands in the previous question can be run with the -r/-R flag. What does it do? Give an example to when you would use it&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The -r (or -R in some commands) flag allows the user to run a certain command recursively. For example, listing all the files under the following tree is possible when done recursively (&lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;/dir1/ dir2/ file1 file2 dir3/ file3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To list all the files, one can run &lt;code&gt;ls -R /dir1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each field in the output of `ls -l` command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It shows a detailed list of files in a long format. From the left: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;file permissions, number of links, owner name, owner group, file size, timestamp of last modification and directory/file name &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are hidden files/directories? How to list them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These are files directly not displayed after performing a standard ls direct listing. An example of these files are .bashrc which are used to execute some scripts. Some also store configuration about services on your host like .KUBECONFIG. The command used to list them is, &lt;code&gt;ls -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do &amp;gt; and &amp;lt; do in terms of input and output for programs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; They take in input (&amp;lt;) and output for a given file (&amp;gt;) using stdin and stdout. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;myProgram &amp;lt; input.txt &amp;gt; executionOutput.txt&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed&lt;/li&gt; &#xA;   &lt;li&gt;grep&lt;/li&gt; &#xA;   &lt;li&gt;cut&lt;/li&gt; &#xA;   &lt;li&gt;awk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;sed: a stream editor. Can be used for various purposes like replacing a word in a file: &lt;code&gt;sed -i s/salad/burger/g&lt;/code&gt;&lt;/li&gt; &lt;li&gt;grep: a search tool. Used to search, count or match a text in a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;searching for any line that contains a word in a file: &lt;code&gt;grep &#39;word&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;or displaying the total number of times a string appears in a file: &lt;code&gt;grep -c &#39;This is a string&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;cut: a tool for cutting out selected portions of each line of a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;syntax: &lt;code&gt;cut OPTION [FILE]&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;cutting first two bytes from a word in a file: &lt;code&gt;cut -b 1-2 file.md&lt;/code&gt;, output: &lt;code&gt;wo&lt;/code&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;      &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to rename the name of a file or a directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;mv&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Specify which command would you use (and how) for each of the following scenarios &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove a directory with files&lt;/li&gt; &#xA;   &lt;li&gt;Display the content of a file&lt;/li&gt; &#xA;   &lt;li&gt;Provides access to the file /tmp/x for everyone&lt;/li&gt; &#xA;   &lt;li&gt;Change working directory to user home directory&lt;/li&gt; &#xA;   &lt;li&gt;Replace every occurrence of the word &#34;good&#34; with &#34;great&#34; in the file /tmp/y&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;rm -rf dir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cat or less&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;chmod 777 /tmp/x&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;sed -i s/good/great/g /tmp/y&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you check what is the path of a certain command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;whereis&lt;/li&gt; &lt;li&gt;which &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between these two commands? Will it result in the same output? &lt;pre&gt;&lt;code&gt;echo hello world&#xA;echo &#34;hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The echo command receives two separate arguments in the first execution and in the second execution it gets one argument which is the string &#34;hello world&#34;. The output will be the same. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain piping. How do you perform piping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using a pipe in Linux, allows you to send the output of one command to the input of another command. For example: &lt;code&gt;cat /etc/services | wc -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed &#34;s/1/2/g&#39; /tmp/myFile&lt;/li&gt; &#xA;   &lt;li&gt;find . -iname *.yaml -exec sed -i &#34;s/1/2/g&#34; {} ;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sed &#39;s/1/2/g&#39; /tmp/myFile  # sed &#34;s/1/2/g&#34; is also fine&#xA;find . -iname &#34;*.yaml&#34; -exec sed -i &#34;s/1/2/g&#34; {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which commands you executed in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;history command or .bash_history file &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get &#34;command not found&#34;. What could be wrong and how to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;&lt;b&gt; Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go. This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours. You would solve this by fixing your $PATH variable: &lt;/b&gt;&lt;/p&gt;&#xA; &lt;p&gt;&lt;b&gt;As to fix it there are several options:&lt;/b&gt;&lt;/p&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH=&#34;$PATH&#34;:/user/bin:/..etc&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You have your weird env variables backed up.&lt;/li&gt; &#xA;   &lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours, permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time. &lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;. With cron, tasks are scheduled using the following format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt; &lt;p&gt;&#xA;   &lt;minute&gt; &#xA;    &lt;hour&gt; &#xA;     &lt;day of month&gt; &#xA;      &lt;month&gt; &#xA;       &lt;day of week&gt; &#xA;        &lt;command to execute&gt;&#xA;       &lt;/day&gt;&#xA;      &lt;/month&gt;&#xA;     &lt;/day&gt;&#xA;    &lt;/hour&gt;&#xA;   &lt;/minute&gt;&lt;/p&gt; &lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alternatively if you are using a distro with systemd it&#39;s recommended to use systemd timers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - I/O Redirection&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Linux I/O redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls &amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 2&amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr to stdout redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following command? &lt;code&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 die_hard&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An output similar to: &lt;code&gt;yippikaiyay: command not found...&lt;/code&gt;&lt;br&gt; The file &lt;code&gt;die_hard&lt;/code&gt; will not be created &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux FHS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Linux FHS (Filesystem Hierarchy Standard) what is the &lt;code&gt;/&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The root of the filesystem. The beginning of the tree. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following paths? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/bin, /sbin, /usr/bin and /usr/sbin&lt;/li&gt; &#xA;   &lt;li&gt;/etc&lt;/li&gt; &#xA;   &lt;li&gt;/home&lt;/li&gt; &#xA;   &lt;li&gt;/var&lt;/li&gt; &#xA;   &lt;li&gt;/tmp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;binaries&lt;/li&gt; &lt;li&gt;configuration files&lt;/li&gt; &lt;li&gt;home directories of the different users&lt;/li&gt; &lt;li&gt;files that tend to change and be modified like logs&lt;/li&gt; &lt;li&gt;temporary files &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is special about the /tmp directory when compared to other directories?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/tmp&lt;/code&gt; folder is cleaned automatically, usually upon reboot. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What makes /proc different from other filesystems?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? only root can create files in /proc&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. No one can create file in /proc directly (certain operations can lead to files being created in /proc by the kernel). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can be found in /proc/cmdline?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The command passed to the boot loader to run the kernel &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which path can you find the system devices (e.g. block storage)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Permissions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following permissions mean?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;777&lt;/li&gt; &#xA;   &lt;li&gt;644&lt;/li&gt; &#xA;   &lt;li&gt;750&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;pre&gt;&#xA;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.&#xA;644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).&#xA;750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;chmod +x some_file&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It adds execute permissions to all sets i.e user, group and others &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is setgid and setuid&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;setuid is a linux file permission that permits a user to run a file or program with the permissions of the owner of that file. This is possible by elevation of current user privileges.&lt;/li&gt; &lt;li&gt;setgid is a process when executed will run as the group that owns the file. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the purpose of sticky bit?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Its a bit that only allows the owner or the root user to delete or modify the file. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;chmod&lt;/li&gt; &#xA;   &lt;li&gt;chown&lt;/li&gt; &#xA;   &lt;li&gt;chgrp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;chmod - changes access permissions to files system objects&lt;/li&gt; &lt;li&gt;chown - changes the owner of file system files and directories&lt;/li&gt; &lt;li&gt;chgrp - changes the group associated with a file system object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In order to install packages on the system one must be the root user or use the sudo command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what are ACLs. For what use cases would you recommend to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to create a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;No more disk space&lt;/li&gt; &lt;li&gt;No more inodes&lt;/li&gt; &lt;li&gt;No permissions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A user accidentally executed the following &lt;code&gt;chmod -x $(which chmod)&lt;/code&gt;. How to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using &lt;code&gt;sudo setfacl -m u::rx /usr/bin/chmod&lt;/code&gt; will set the execute permissions on &lt;code&gt;chmod&lt;/code&gt; for all the users. Post this, the &lt;code&gt;chmod&lt;/code&gt; binary can be used as usual. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - systemd&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is systemd?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;b&gt; Systemd is a daemon (System &#39;d&#39;, d stands for daemon). &lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time talk to the daemon.&lt;/p&gt; &lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;br&gt; Hardware -&amp;gt; Kernel -&amp;gt; &lt;u&gt;Daemons&lt;/u&gt;, System Libraries, Server Display. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start or stop a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To start a service: &lt;code&gt;systemctl start &amp;lt;service name&amp;gt;&lt;/code&gt; To stop a service: &lt;code&gt;systemctl stop &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check the status of a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;systemctl status &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Troubleshooting &amp;amp; Debugging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where system logs are located?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/var/log &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to follow file&#39;s content as it being appended without opening the file every time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;tail -f &amp;lt;file_name&amp;gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports. &lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat. &lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets. &lt;code&gt;tcpdump&lt;/code&gt; for capturing packets &lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes &lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are &#34;wasted&#34; on &lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from someone claiming &#34;my system is SLOW&#34;. What do you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it&#39;s related to disk or network.&lt;/li&gt; &lt;li&gt;Check if it&#39;s network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain iostat output&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to debug binaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Kernel&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;uname -a&lt;/code&gt; command &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain user space vs. kernel space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The operating system executes the kernel in protected memory to prevent anyone from changing (and risking it crashing). This is what is known as &#34;Kernel space&#34;. &#34;User space&#34; is where users executes their commands or applications. It&#39;s important to create this separation since we can&#39;t rely on user applications to not tamper with the kernel, causing it to crash.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Applications can access system resources and indirectly the kernel space by making what is called &#34;system calls&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what phases of kernel lifecycle, can you change its configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Build time (when it&#39;s compiled)&lt;/li&gt; &lt;li&gt;Boot time (when it starts)&lt;/li&gt; &lt;li&gt;Runtime (once it&#39;s already running) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find kernel&#39;s configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Usually it will reside in &lt;code&gt;/boot/config-&amp;lt;kernel version&amp;gt;.&amp;lt;os release&amp;gt;.&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find the file that contains the command passed to the boot loader to run the kernel?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/proc/cmdline&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list kernel&#39;s runtime parameters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;sysctl -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will running &lt;code&gt;sysctl -a&lt;/code&gt; as a regular user vs. root, produce different result?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you might notice that in most systems, when running &lt;code&gt;systctl -a&lt;/code&gt; with root, you&#39;ll get more runtime parameters compared to executing the same command with a regular user. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You would like to enable IPv4 forwarding in the kernel, how would you do it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;sudo sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make it persistent (applied after reboot for example): insert &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; into &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to is to run &lt;code&gt;echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How &lt;code&gt;sysctl&lt;/code&gt; applies the changes to kernel&#39;s runtime parameters the moment you run sysctl command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;If you &lt;code&gt;strace&lt;/code&gt; the sysctl command you can see it does it by changing the file under /proc/sys/...&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In the past it was done with sysctl system call, but it was deprecated at some point. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How changes to kernel runtime parameters persist? (applied even after reboot to the system for example)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There is a service called &lt;code&gt;systemd-sysctl&lt;/code&gt; that takes the content of /etc/sysctl.conf and applies it. This is how changes persist, even after reboot, when they are written in /etc/sysctl.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are the changes you make to kernel parameters in a container, affects also the kernel parameters of the host on which the container runs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No. Containers have their own /proc filesystem so any change to kernel parameters inside a container, are not affecting the host or other containers running on that host. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - SSH&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH? How to check if a Linux server is running SSH?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SSH_(Secure_Shell)&#34;&gt;Wikipedia Definition&lt;/a&gt;: &#34;SSH or Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network.&#34;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work&#34;&gt;Hostinger.com Definition&lt;/a&gt;: &#34;SSH, or Secure Shell, is a remote administration protocol that allows users to control and modify their remote servers over the Internet.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An SSH server will have SSH daemon running. Depends on the distribution, you should be able to check whether the service is running (e.g. systemctl status sshd). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why SSH is considered better than telnet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet also allows you to connect to a remote host but as opposed to SSH where the communication is encrypted, in telnet, the data is sent in clear text, so it doesn&#39;t considered to be secured because anyone on the network can see what exactly is sent, including passwords. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The file stores the key fingerprints for the clients connecting to the SSH server. This fingerprint creates a trust between the client and the server for future SSH connections. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to ssh to a server and you get &#34;Host key verification failed&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It means that the key of the remote host was changed and doesn&#39;t match the one that stored on the machine (in ~/.ssh/known_hosts). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;ssh-keygen&lt;/code&gt; is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; is a tool to generate an authentication key pair for SSH, that consists of a private and a public key. It supports a number of algorithms to generate authentication keys :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa-sk&lt;/li&gt; &#xA;   &lt;li&gt;ed25519&lt;/li&gt; &#xA;   &lt;li&gt;ed25519-sk&lt;/li&gt; &#xA;   &lt;li&gt;rsa (default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;One can also specify number of bits in key. Command below generates an SSH key pair with RSA 4096-bits :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.&#xA;Enter file in which to save the key (/home/user/.ssh/id_rsa): &#xA;Enter passphrase (empty for no passphrase): &#xA;Enter same passphrase again: &#xA;Your identification has been saved in /home/user/.ssh/id_rsa&#xA;Your public key has been saved in /home/user/.ssh/id_rsa.pub&#xA;The key fingerprint is:&#xA;SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro&#xA;The key&#39;s randomart image is:&#xA;+---[RSA 4096]----+&#xA;|        . ..+***o|&#xA;|         o o++*o+|&#xA;|        . =+.++++|&#xA;|         B.oX+. .|&#xA;|        S *=o+   |&#xA;|       . o oE.   |&#xA;|      . + + +    |&#xA;|       . = + .   |&#xA;|        .   .    |&#xA;+----[SHA256]-----+&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;One can check how many bits an SSH key has with :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -l -f /home/user/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output should look like this :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4096 SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro (RSA)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shows the key is RSA 4096-bits.&lt;/p&gt; &lt;p&gt;&lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; parameters usage explanation :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-l          Show the fingerprint of the key file.&#xA;-f filename Filename of the key file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Learn more : &lt;a href=&#34;https://superuser.com/a/139311&#34;&gt;How can I tell how many bits my ssh key is? - Superuser&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Globbing, Wildcards&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Globbing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [^XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [0-5]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following matches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;?&lt;/li&gt; &#xA;   &lt;li&gt;*&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The ? matches any single character&lt;/li&gt; &lt;li&gt;The * matches zero or more characters &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do we grep for in each of the following commands?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep -E &#34;error|failure&#34; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]$&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An IP address&lt;/li&gt; &lt;li&gt;The word &#34;error&#34; or &#34;failure&#34;&lt;/li&gt; &lt;li&gt;Lines which end with a number &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which line numbers will be printed when running `grep &#39;\baaa\b&#39;` on the following content: &lt;p&gt;aaa bbb ccc.aaa aaaaaa&lt;/p&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;&lt;p&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lines 1 and 3. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference single and double quotes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is escaping? What escape character is used for escaping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An exit code (or return code) represents the code returned by a child process to its parent process.&lt;/p&gt; &lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error. Each number has different meaning, based on how the application was developed.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href=&#34;https://shapeshed.com/unix-exit-codes&#34;&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Boot Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRUB2?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Secure Boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Disk &amp;amp; Filesystem&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an inode?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data related to the file like its size, owner, permissions, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following is not included in inode: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link count&lt;/li&gt; &#xA;   &lt;li&gt;File size&lt;/li&gt; &#xA;   &lt;li&gt;File name&lt;/li&gt; &#xA;   &lt;li&gt;File timestamp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;File name (it&#39;s part of the directory file) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Run &lt;code&gt;mount&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run the &lt;code&gt;mount&lt;/code&gt; command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;cat /proc/mounts&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode. Soft link is a shortcut to another file, using a different inode. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Directories always have by minimum 2 links&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you check what type of filesystem is used in /home?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many answers for this question. One way is running &lt;code&gt;df -T&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;new empty file&lt;/li&gt; &#xA;   &lt;li&gt;a file with text (without using text editor)&lt;/li&gt; &#xA;   &lt;li&gt;a file with given size&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You are trying to create a new file but you get &#34;File system is full&#34;. You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;du -sh&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is LVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to LVM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PV&lt;/li&gt; &#xA;   &lt;li&gt;VG&lt;/li&gt; &#xA;   &lt;li&gt;LV&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is lazy umount?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is tmpfs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following logs? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/var/log/messages&lt;/li&gt; &#xA;   &lt;li&gt;/var/log/boot.log&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? both /tmp and /var/tmp cleared upon system boot&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. /tmp is cleared upon system boot while /var/tmp is cleared every a couple of days or not cleared at all (depends on distro). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Performance Analysis&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the current load average?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One can use &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You know how to see the load average, great. but what each part of it means? for example 1.43, 2.34, 2.78&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html&#34;&gt;This article&lt;/a&gt; summarizes the load average topic in a great way &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check process usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pidstat &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check disk I/O?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;iostat -xz 1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check TCP stats?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;sar -n TCP,ETCP 1 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Processes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;how to list all the processes running in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;ps -ef&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at the end of the command. As to why, since some commands/processes can take a lot of time to finish execution or run forever, you may want to run them in the background instead of waiting for them to finish before gaining control again in current session. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; mem() { ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk &#39;{printf $1/1024 &#34;MB&#34;; $1=&#34;&#34;; print }&#39; } &lt;/code&gt; [Source](https://stackoverflow.com/questions/3853655/in-linux-how-to-tell-how-much-memory-processes-are-using) &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signal is used by default when you run &#39;kill *process id*&#39;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;The default signal is SIGTERM (15). This signal kills&#xA;process gracefully which means it allows it to save current&#xA;state configuration.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SIGTERM - default signal for terminating a process SIGHUP - common usage is for reloading configuration SIGKILL - a signal which cannot caught or ignored&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill -0 &#xA;   &lt;pid&gt;&lt;/pid&gt;&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a trap?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Every couple of days, a certain process stops running. How can you look into why it&#39;s happening?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Daemon in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A background process. Most of these processes are waiting for requests or set of conditions to be met before actually running anything. Some examples: sshd, crond, rpcbind. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;Running (R)&#xA;Uninterruptible Sleep (D) - The process is waiting for I/O&#xA;Interruptible Sleep (S)&#xA;Stopped (T)&#xA;Dead (x)&#xA;Zombie (z)&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a zombie process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn&#39;t checking for the child exit code, the child process can still exists although it finished to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can&#39;t kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it&#39;s already dead.&lt;/p&gt; &lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn&#39;t programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt; &#xA;   &lt;li&gt;Process which are Java processes&lt;/li&gt; &#xA;   &lt;li&gt;Zombie Processes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the init process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is the first process executed by the kernel during the booting of a system. It is a daemon process which runs till the system is shutdown. That is why, it is the parent of all the processes &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain how network process/connection is established and how it&#39;s terminated?&amp;gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the files which end with &#39;.yml&#39; and replace the number 1 in 2 in each file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i &#34;s/1/2/g&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run ls and you get &#34;/lib/ld-linux-armhf.so.3 no such file or directory&#34;. What is the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Kerberos File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system. &lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0 - the default data stream for input&lt;/li&gt; &#xA;   &lt;li&gt;1 - the default data stream for output&lt;/li&gt; &#xA;   &lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href=&#34;https://www.computerhope.com/jargon/f/file-descriptor.htm&#34;&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Security&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SELiunx?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kerberos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is nftables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list all the interfaces?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;ip link show&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the loopback (lo) interface?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The loopback interface is a special, virtual network interface that your computer uses to communicate with itself. It is used mainly for diagnostics and troubleshooting, and to connect to servers running on the local machine. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands are used for? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ip addr&lt;/li&gt; &#xA;   &lt;li&gt;ip route&lt;/li&gt; &#xA;   &lt;li&gt;ip link&lt;/li&gt; &#xA;   &lt;li&gt;ping&lt;/li&gt; &#xA;   &lt;li&gt;netstat&lt;/li&gt; &#xA;   &lt;li&gt;traceroute&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One of the following would work:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;&#xA;lsof -i -n -P | grep &amp;lt;port_number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The MAC address of an interface is assigned/set by the OS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Technically, yes. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is telnet and why is it a bad idea to use it in production? (or at all)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet is a type of client-server protocol that can be used to open a command line on a remote computer, typically a server. By default, all the data sent and received via telnet is transmitted in clear/plain text, therefore it should not be used as it does not encrypt any data between the client and the server. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;br&gt; Using nc is one way&lt;br&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a network utility that analyses and may inject tasks into the data-stream travelling over the targeted network. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list active connections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network interface bonding and do you know how it&#39;s performed in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network bonding modes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There a couple of modes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;balance-rr: round robing bonding&lt;/li&gt; &lt;li&gt;active-backup: a fault tolerance mode where only one is active&lt;/li&gt; &lt;li&gt;balance-tlb: Adaptive transmit load balancing&lt;/li&gt; &lt;li&gt;balance-alb: Adaptive load balancing &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a bridge? How it&#39;s added in Linux OS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - DNS&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the hostname of the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;cat /etc/hostname&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also run &lt;code&gt;hostnamectl&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; but that might print only a temporary hostname. The one in the file is the permanent one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can specify one or more of the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;host&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;dig codingshell.com&lt;/code&gt; and get the following result: &lt;pre&gt;&lt;code&gt;ANSWER SECTION:&#xA;codingshell.com.&#x9;3515&#x9;IN&#x9;A&#x9;185.199.109.153&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What is the meaning of the number 3515?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is the TTL. When you lookup for an address using a domain/host name, your OS is performing DNS resolution by contacting DNS name servers to get the IP address of the host/domain you are looking for.&lt;br&gt; When you get a reply, this reply in cached in your OS for a certain period of time. This is period of time is also known as TTL and this is the meaning of 3515 number - it will be cached for 3515 seconds before removed from the cache and during that period of time, you&#39;ll get the value from the cache instead of asking DNS name servers for the address again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux - Packaging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with packaging? (as in building packages) Can you explain how does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How packages installation/removal is performed on the distribution you are using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The answer depends on the distribution being used.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Fedora/CentOS/RHEL/Rocky it can be done with &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt; commands. In Ubuntu it can be done with the &lt;code&gt;apt&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;RPM: explain the spec format (what it should and can include)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn&#39;t belongs to any package?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where repositories are stored? (based on the distribution you are using)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an archive? How do you create one in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the content of an archive?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need package managers? Why not simply creating archives and publish them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Package managers allow you to manage packages lifecycle as in installing, removing and updating the packages.&lt;br&gt; In addition, you can specify in a spec how a certain package will be installed - where to copy the files, which commands to run prior to the installation, post the installation, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux DNF&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNF?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://github.com/rpm-software-management/dnf&#34;&gt;repo&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&#34;Dandified YUM (DNF) is the next upcoming major version of YUM. It does package management using RPM, libsolv and hawkey libraries.&#34;&lt;/p&gt; &lt;p&gt;Official &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to look for a package that provides the command /usr/bin/git? (the package isn&#39;t necessarily installed)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dnf provides /usr/bin/git &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Applications and Services&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Depends on the init system.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt; System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab Upstart: add Upstart init script at /etc/init/service.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with &#34;connection refused&#34;. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH server is not installed&lt;/li&gt; &lt;li&gt;SSH server is not running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CUPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of web servers are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Nginx, Apache httpd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Users and Groups&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;superuser&#34; (or root user)? How is it different from regular users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;Command to create users is &lt;code&gt;useradd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Syntax: &lt;code&gt;useradd [options] Username&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;There are 2 configuration files, which stores users information&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; - Users information like, username, shell etc is stored in this file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; - Users password is stored in encrypted format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores information about groups?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/groups&lt;/code&gt; file stores the group name, group ID, usernames which are in secondary group.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you change/set the password of a user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; is the command to set/change password of a user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores users passwords? Is it visible for everyone?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; file holds the passwords of the users in encryted format. NO, it is only visble to the &lt;code&gt;root&lt;/code&gt; user&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;YES, we can create new user by manually adding an entry in the &lt;code&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;For example, if we need to create a user called &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Step 1: Add an entry to &lt;code&gt;/etc/passwd&lt;/code&gt; file, so user gets created.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;‚ùå&lt;/span&gt;2001:2001::/home/john:/bin/bash&#34; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 2: Add an entry to &lt;code&gt;/etc/group&lt;/code&gt; file, because every user belong to the primary group that has same name as the username.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;‚ùå&lt;/span&gt;2001:&#34; &amp;gt;&amp;gt; /etc/group&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 3: Verify if the user got created&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;id john&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What information is stored in /etc/passwd? explain each field&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; is a configuration file, which contains users information. Each entry in this file has, 7 fields,&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username:password:UID:GID:Comment:home directory:shell&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username&lt;/code&gt; - The name of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;password&lt;/code&gt; - This field is actually a placeholder of the password field. Due to security concerns, this field does not contain the password, just a placeholder (x) to the encrypted password stored in &lt;code&gt;/etc/shadow&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;UID&lt;/code&gt; - User ID of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;GID&lt;/code&gt; - Group ID&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Comment&lt;/code&gt; - This field is to provide description about the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;home directory&lt;/code&gt; - Abousulte path of the user&#39;s home directory. This directory gets created once the user is added.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;shell&lt;/code&gt; - This field contains the absolute path of the shell that will be used by the respective user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;adduser user_name --shell=/bin/false --no-create-home&lt;/code&gt; You can also add a user and then edit /etc/passwd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to switch to another user? How to switch to the root user?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;su command. Use su - to switch to root &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the UID the root user? What about a regular user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;UID of root user is 0&lt;/p&gt; &#xA; &lt;p&gt;Default values of UID_MIN and UID_MAX in &lt;code&gt;/etc/login.defs&lt;/code&gt; &lt;code&gt;UID_MIN&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt; &lt;code&gt;UID_MAX&lt;/code&gt; is &lt;code&gt;60000&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Actually, we can change this value. But UID &amp;lt; 1000 are reserved for system accounts. Therefore, as per the default configuration, for regular user UID starts from &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is /etc/skel?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/skel&lt;/code&gt; is a directory, that contains files or directories, so when a new user is created, these files/directories created under &lt;code&gt;/etc/skel&lt;/code&gt; will be copied to user&#39;s home directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to see a list of who logged-in to the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;last&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;useradd&lt;/li&gt; &#xA;   &lt;li&gt;usermod&lt;/li&gt; &#xA;   &lt;li&gt;whoami&lt;/li&gt; &#xA;   &lt;li&gt;id&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;useradd&lt;/code&gt; - Command for creating new users &lt;code&gt;usermod&lt;/code&gt; - Modify the users setting &lt;code&gt;whoami&lt;/code&gt; - Outputs, the username that we are currently logged in &lt;code&gt;id&lt;/code&gt; - Prints the&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;grep $(whoami) /etc/passwd&lt;/code&gt; but the output is empty. What might be a possible reason for that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The user you are using isn&#39;t defined locally but originates from services like LDAP.&lt;br&gt; You can verify with: &lt;code&gt;getent passwd&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Hardware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find information on the processor (like number of CPUs)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;/proc/cpuinfo&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also use &lt;code&gt;nproc&lt;/code&gt; for number of processors &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print information on the BIOS, motherboard, processor and RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dmidecoode &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print all the information on connected block devices in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lsblk &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In user space, applications don&#39;t have full access to hardware resources&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Only in kernel space they have full access to hardware resources. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a private key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is using openssl this way:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-private-key.pem 4096&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a public key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key [private key file name] -sha256 -out ca.pem&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If using the private key from the previous question then the command would be:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key ca-private-key.pem -sha256 -out ca.pem&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Namespaces&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of namespaces are there in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Process ID namespaces: these namespaces include independent set of process IDs&lt;/li&gt; &lt;li&gt;Mount namespaces: Isolation and control of mountpoints&lt;/li&gt; &lt;li&gt;Network namespaces: Isolates system networking resources such as routing table, interfaces, ARP table, etc.&lt;/li&gt; &lt;li&gt;UTS namespaces: Isolate host and domains&lt;/li&gt; &lt;li&gt;IPC namespaces: Isolates interprocess communications&lt;/li&gt; &lt;li&gt;User namespaces: Isolate user and group IDs&lt;/li&gt; &lt;li&gt;Time namespaces: Isolates time machine &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In every PID (Process ID) namespace the first process assigned with the process id number 1&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Inside the namespace it&#39;s PID 1 while to the parent namespace the PID is a different one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In a child PID namespace all processes are aware of parent PID namespace and processes and the parent PID namespace has no visibility of child PID namespace processes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. The opposite is true. Parent PID namespace is aware and has visibility of processes in child PID namespace and child PID namespace has no visibility as to what is going on in the parent PID namespace. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? By default, when creating two separate network namespaces, a ping from one namespace to another will work fine&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Network namespace has its own interfaces and routing table. There is no way (without creating a bridge for example) for one network namespace to reach another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? With UTS namespaces, processes may appear as if they run on different hosts and domains while running on the same host&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? It&#39;s not possible to have a root user with ID 0 in child user namespaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. In every child user namespace, it&#39;s possible to have a separate root user with uid of 0. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What time namespaces are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In time namespaces processes can use different system time. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Virtualization&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What virtualization solutions are available for Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;KVM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://www.xen.org/&#34;&gt;XEN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://linux-vserver.org/Welcome_to_Linux-VServer.org&#34;&gt;Linux-VServer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://user-mode-linux.sourceforge.net/&#34;&gt;User-mode Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is KVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Is an open source virtualization technology used to operate on x86 hardware.&lt;/p&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;docs&lt;/a&gt; Recommended read:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-KVM&#34;&gt;Red Hat Article - What is KVM?&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Libvirt?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s an open source collection of software used to manage virtual machines. It can be used with: KVM, Xen, LXC and others. It&#39;s also called Libvirt Virtualization API.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From the official &lt;a href=&#34;https://libvirt.org/&#34;&gt;docs&lt;/a&gt; Hypervisor supported &lt;a href=&#34;https://libvirt.org/drivers.html&#34;&gt;docs&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - AWK&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Wikipedia: &#34;AWK is domain-specific language designed for text processing and typically used as a data extraction and reporting tool&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the 4th column in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;{print $4}&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print every line that is longer than 79 characters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;length($0) &amp;gt; 79&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find and locate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a user process performs a privileged operation, such as reading from the disk?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using system calls &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - System Calls&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a system call? What system calls are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a program executes a system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A program executes a trap instruction. The instruction jump into the kernel while raising the privileged level to kernel space.&lt;/li&gt; &lt;li&gt;Once in kernel space, it can perform any privileged operation&lt;/li&gt; &lt;li&gt;Once it&#39;s finished, it calls a &#34;return-from-trap&#34; instruction which returns to user space while reducing back the privilege level to user space. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the fork() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of fork()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;On success, the PID of the child process in parent and 0 in child process&lt;/li&gt; &lt;li&gt;On error, -1 in the parent &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one reason for fork() to fail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not enough memory to create a new process &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need the wait() system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution. If wait is not used by a parent process then a child process might become a zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the kernel notifies the parent process about child process termination?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The kernel notifies the parent by sending the SIGCHLD to the parent. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the waitpid() is different from wait()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The waitpid() is a non-blocking version of the wait() function.&lt;br&gt; It also supports using library routine (e.g. system()) to wait a child process without messing up with other children processes for which the process has not waited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The wait() system call won&#39;t return until the child process has run and exited&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True in most cases though there are cases where wait() returns before the child exits. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the exec() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It transforms the current running program into another program.&lt;br&gt; Given the name of an executable and some arguments, it loads the code and static data from the specified executable and overwrites its current code segment and current static code data. After initializing its memory space (like stack and heap) the OS runs the program passing any arguments as the argv of that process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? A successful call to exec() never returns&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True&lt;br&gt; Since a succesful exec replace the current process, it can&#39;t return anything to the process that made the call. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system calls are used for creating a new process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork(), exec() and the wait() system call is also included in this workflow. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What execve() does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of malloc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the pipe() system call. What does it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://toroid.org/unix-pipe-implementation&#34;&gt;Unix pipe implementation&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Pipes provide a unidirectional interprocess communication channel. A pipe has a read end and a write end. Data written to the write end of a pipe can be read from the read end of the pipe. A pipe is created using pipe(2), which returns two file descriptors, one referring to the read end of the pipe, the other referring to the write end.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {&#34;ls&#34;, &#34;-l&#34;, &#34;NULL&#34;}&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What exactly the command &lt;code&gt;alias x=y&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why running a new program is done using the fork() and exec() system calls? why a different API wasn&#39;t developed where there is one call to run a new program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This way provides a lot of flexibility. It allows the shell for example, to run code after the call to fork() but before the call to exec(). Such code can be used to alter the environment of the program it about to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe shortly what happens when you execute a command in the shell&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The shell figures out, using the PATH variable, where the executable of the command resides in the filesystem. It then calls fork() to create a new child process for running the command. Once the fork was executed successfully, it calls a variant of exec() to execute the command and finally, waits the command to finish using wait(). When the child completes, the shell returns from wait() and prints out the prompt again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are a couple of ways to do that:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt; &lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt; &lt;li&gt;fallocate -l 2097152 new_file.txt &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following block do?: &lt;pre&gt;&lt;code&gt;open(&#34;/my/file&#34;) = 5&#xA;read(5, &#34;file content&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe three different ways to remove a file (or its content)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is context switch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Context_switch&#34;&gt;wikipedia&lt;/a&gt;: a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You found there is a server with high CPU load but you didn&#39;t find a process with high CPU. How is that possible?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Advanced - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called &#39;lo&#39;. What is it and why do we need it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another common way to task this questions is &#34;what part of the tcp header does traceroute modify?&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are cgroups?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href=&#34;https://ops.tips/blog/how-linux-creates-sockets&#34;&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it&#39;s still running?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between paging and swapping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is OOM killer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Distribution&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Linux distributions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Kernel&lt;/li&gt; &lt;li&gt;Utilities&lt;/li&gt; &lt;li&gt;Services&lt;/li&gt; &lt;li&gt;Software/Packages Management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Linux - Sed&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using sed, extract the date from the following line: &lt;code&gt;201.7.19.90 - - [05/Jun/1985:13:42:99 +0000] &#34;GET /site HTTP/1.1&#34; 200 32421&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;echo $line | sed &#39;s/.*\[//g;s/].*//g;s/:.*//g&#39;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a random string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way is to run the following: &lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A collection of packages - kernel, GNU, third party apps, ...&lt;/li&gt; &lt;li&gt;Sometimes distributions store some information on the distribution in &lt;code&gt;/etc/*-release&lt;/code&gt; file &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example for Red Hat distribution it will be &lt;code&gt;/etc/redhat-release&lt;/code&gt; and for Amazon it will be &lt;code&gt;/etc/os-release&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lsb_release&lt;/code&gt; is a common command you can use in multiple different distributions &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name 5 commands which are two letters long&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ways are there for creating a new empty file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch new_file&lt;/li&gt; &lt;li&gt;echo &#34;&#34; &amp;gt; new_file &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How `cd -` works? How does it knows the previous location?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;$OLDPWD &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List three ways to print all the files in the current directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;ls&lt;/li&gt; &lt;li&gt;find .&lt;/li&gt; &lt;li&gt;echo * &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to count the number of lines in a file? What about words?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You define x=2 in /etc/bashrc and x=6 ~/.bashrc you then login to the system. What would be the value of x?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between man and info?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A good answer can be found &lt;a href=&#34;https://askubuntu.com/questions/9325/what-is-the-difference-between-man-and-info-documentation&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;environment variables&#34;. How do you list all environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a TTY device?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create your own environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;X=2&lt;/code&gt; for example. But this will persist to new shells. To have it in new shells as well, use &lt;code&gt;export X=2&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If I plug a new device into a Linux machine, where on the system, a new device entry/file will be created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/dev &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why there are different sections in man? What is the difference between the sections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is User-mode Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Under which license Linux is distributed? &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;GPL v2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operating System&lt;/h2&gt; &#xA;&lt;h3&gt;Operating System Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 101&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_101.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_101_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 102&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_102.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_102_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operating System - Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an operating system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the book &#34;Operating Systems: Three Easy Pieces&#34;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It would support the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Create - allow to create new processes&lt;/li&gt; &lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt; &lt;li&gt;State - allow to check the state of the process, whether it&#39;s running, stopped, waiting, etc.&lt;/li&gt; &lt;li&gt;Stop - allow to stop a running process &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a process is created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The OS is reading program&#39;s code and any additional relevant data&lt;/li&gt; &lt;li&gt;Program&#39;s code is loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s heap which is required for dynamically allocated data like the data structures linked lists and hash tables&lt;/li&gt; &lt;li&gt;I/O initialization tasks are performed, like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt; &lt;li&gt;OS is running the program, starting from main() &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It was true in the past but today&#39;s operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are different states of a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Running - it&#39;s executing instructions&lt;/li&gt; &lt;li&gt;Ready - it&#39;s ready to run but for different reasons it&#39;s on hold&lt;/li&gt; &lt;li&gt;Blocked - it&#39;s waiting for some operation to complete. For example I/O disk request &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some reasons for a process to become blocked?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;I/O operations (e.g. Reading from a disk)&lt;/li&gt; &lt;li&gt;Waiting for a packet from a network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Inter Process Communication (IPC)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;time sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it&#39;s possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it&#39;s simply one CPU shared by applying multiprogramming and multi-tasking. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;space sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way where it&#39;s not being transferred between them.&lt;br&gt; It&#39;s used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is yours until you decide to delete it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What component determines which process runs at a given moment in time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU scheduler &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;virtual memory&#34; and what purpose it serves?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is demand paging?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is copy-on-write or shadowing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Some pieces of the code in the kernel are loaded into protected areas of the memory so applications can&#39;t overwritten them&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is POSIX?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Virtualization uses software to create an abstraction layer over computer hardware that allows the hardware elements of a single computer‚Äîprocessors, memory, storage and more - to be divided into multiple virtual computers, commonly called virtual machines (VMs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Red Hat: &#34;A hypervisor is software that creates and runs virtual machines (VMs). A hypervisor, sometimes called a virtual machine monitor (VMM), isolates the hypervisor operating system and resources from the virtual machines and enables the creation and management of those VMs.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-a-hypervisor&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of hypervisors are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hosted hypervisors and bare-metal hypervisors. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages and disadvantges of bare-metal hypervisor over a hosted hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Due to having its own drivers and a direct access to hardware components, a baremetal hypervisor will often have better performances along with stability and scalability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On the other hand, there will probably be some limitation regarding loading (any) drivers so a hosted hypervisor will usually benefit from having a better hardware compatibility. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of virtualization are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Operating system virtualization Network functions virtualization Desktop virtualization &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is containerization is a type of Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, it&#39;s a operating-system-level virtualization, where the kernel is shared and allows to use multiple isolated user-spaces instances. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the introduction of virtual machines changed the industry and the way applications were deployed?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The introduction of virtual machines allowed companies to deploy multiple business applications on the same hardware while each application is separated from each other in secured way, where each is running on its own separate operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - OOP&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its&#xA;properties.&#xA;&#xA;So if Class B inherits from Class A, every characteristics from class A will be also available in class B.&#xA;Class A would be the &#39;Base class&#39; and B class would be the &#39;derived class&#39;.&#xA;&#xA;This comes handy when you have several classes that share the same functionalities.&#xA;&#xA;The basic syntax is:&#xA;&#xA;class Base: pass&#xA;&#xA;class Derived(Base): pass&#xA;&#xA;A more forged example:&#xA;&#xA;class Animal:&#xA;    def __init__(self):&#xA;        print(&#34;and I&#39;m alive!&#34;)&#xA;&#xA;    def eat(self, food):&#xA;        print(&#34;√±om √±om √±om&#34;, food)&#xA;&#xA;class Human(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is &#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def write_poem(self):&#xA;        print(&#39;Foo bar bar foo foo bar!&#39;)&#xA;&#xA;class Dog(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is&#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def bark(self):&#xA;        print(&#39;woof woof&#39;)&#xA;&#xA;&#xA;michael = Human(&#39;Michael&#39;)&#xA;michael.eat(&#39;Spam&#39;)&#xA;michael.write_poem()&#xA;&#xA;bruno = Dog(&#39;Bruno&#39;)&#xA;bruno.eat(&#39;bone&#39;)&#xA;bruno.bark()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; My name is  Michael&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; √±om √±om √±om Spam&#xA;&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!&#xA;&amp;gt;&amp;gt;&amp;gt; My name is Bruno&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; √±om √±om √±om bone&#xA;&amp;gt;&amp;gt;&amp;gt; woof woof&#xA;&#xA;Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.&#xA;&#xA;There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class MyClass(object):&#xA;    x = 1&#xA;&#xA;    def __init__(self, y):&#xA;        self.y = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Exceptions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;#  Note that you generally don&#39;t need to know the compiling process but knowing where everything comes from&#xA;#  and giving complete answers shows that you truly know what you are talking about.&#xA;&#xA;Generally, every compiling process have a two steps.&#xA;    - Analysis&#xA;    - Code Generation.&#xA;&#xA;    Analysis can be broken into:&#xA;        1. Lexical analysis   (Tokenizes source code)&#xA;        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)&#xA;&#xA;               for i in &#39;foo&#39;&#xA;                          ^&#xA;             SyntaxError: invalid syntax&#xA;&#xA;        We missed &#39;:&#39;&#xA;&#xA;&#xA;        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,&#xA;          hash a mutable object or use an undeclared function?)&#xA;&#xA;                 1/0&#xA;                ZeroDivisionError: division by zero&#xA;&#xA;    These three analysis steps are the responsible for error handlings.&#xA;&#xA;    The second step would be responsible for errors, mostly syntax errors, the most common error.&#xA;    The third step would be responsible for Exceptions.&#xA;&#xA;    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:&#xA;&#xA;        ImportError&#xA;        ValueError&#xA;        KeyError&#xA;        FileNotFoundError&#xA;        IndentationError&#xA;        IndexError&#xA;        ...&#xA;&#xA;    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.&#xA;&#xA;    Basic example:&#xA;&#xA;    class DividedBy2Error(Exception):&#xA;        def __init__(self, message):&#xA;            self.message = message&#xA;&#xA;&#xA;    def division(dividend,divisor):&#xA;        if divisor == 2:&#xA;            raise DividedBy2Error(&#39;I dont want you to divide by 2!&#39;)&#xA;        return dividend / divisor&#xA;&#xA;    division(100, 2)&#xA;&#xA;    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt; Errors detected during execution are called Exceptions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Handling Exception:&lt;/strong&gt; When an error occurs, or exception as we call it, Python will normally stop and generate an error message.&lt;br&gt; Exceptions can be handled using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statement in python.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Following example asks the user for input until a valid integer has been entered. &lt;br&gt; If user enter a non-integer value it will raise exception and using except it will catch that exception and ask the user to enter valid integer again.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;while True:&#xA;    try:&#xA;        a = int(input(&#34;please enter an integer value: &#34;))&#xA;        break&#xA;    except ValueError:&#xA;        print(&#34;Ops! Please enter a valid integer value.&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more details about errors and exceptions follow this &lt;a href=&#34;https://docs.python.org/3/tutorial/errors.html&#34;&gt;https://docs.python.org/3/tutorial/errors.html&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following function? &lt;pre&gt;&lt;code&gt;def true_or_false():&#xA;    try:&#xA;        return True&#xA;    finally:&#xA;        return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; False &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Built-in functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following built-in functions (their purpose + use case example): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;repr&lt;/li&gt; &#xA;   &lt;li&gt;any&lt;/li&gt; &#xA;   &lt;li&gt;all&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between repr function and str?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the __call__ method?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is used to emulate callable objects. It allows a class instance to be called as a function.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example code:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;class Foo:&#xA;    def __init__(self: object) -&amp;gt;  None:&#xA;        pass&#xA;    def __call__(self: object) -&amp;gt; None:&#xA;        print(&#34;Called!&#34;)&#xA;&#xA;f = Foo()&#xA;f()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Result:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;Called!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do classes has the __call__ method as well? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Translation lookup in i18n&lt;/li&gt; &lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt; &lt;li&gt;As a general purpose &#34;throwaway&#34; variable name. For example: x, y, _ = get_data() (x and y are used but since we don&#39;t care about third variable, we &#34;threw it away&#34;). &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is GIL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Python Global Interpreter Lock (GIL) is a type of process lock which is used by python whenever it deals with processes. Generally, Python only uses only one thread to execute the set of written statements. This means that in python only one thread will be executed at a time &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A &lt;code&gt;lambda&lt;/code&gt; expression is an &#39;anonymous&#39; function, the difference from a normal defined function using the keyword `def`` is the syntax and usage.&lt;/p&gt; &lt;p&gt;The syntax is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;lambda[parameters]: [expresion]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A lambda function add 10 with any argument passed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;x = lambda a: a + 10&#xA;print(x(10))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;An addition function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;addition = lambda x, y: x + y&#xA;print(addition(10, 20))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squaring function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;square = lambda x : x ** 2&#xA;print(square(5))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Generally it is considered a bad practice under PEP 8 to assign a lambda expresion, they are meant to be used as parameters and inside of other defined functions.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;getter&lt;/li&gt; &#xA;   &lt;li&gt;setter&lt;/li&gt; &#xA;   &lt;li&gt;deleter&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is @property&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x, y = y, x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following object&#39;s magic variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def return_sum():&#xA;&#x9;amount_of_numbers = int(input(&#34;How many numbers? &#34;))&#xA;&#x9;total_sum = 0&#xA;&#x9;while amount_of_numbers != 0:&#xA;&#x9;&#x9;num = int(input(&#34;Input a number. &#34;))&#xA;&#x9;&#x9;total_sum += num&#xA;&#x9;&#x9;amount_of_numbers -= 1&#xA;&#x9;return total_sum&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [2, 5, 6]&#xA;print(&#34;{0:.3f}&#34;.format(sum(li)/len(li)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Lists&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tuple in Python? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A tuple is a built-in data type in Python. It&#39;s used for storing multiple items in a single variable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List, like a tuple, is also used for storing multiple items. What is then, the difference between a tuple and a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;List, as opposed to a tuple, is a mutable data type. It means we can modify it and at items to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the number 2 to the list &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;x.append(2)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get the last element of a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;some_list[-1]&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the items of [1, 2, 3] to the list [4, 5, 6]?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; x = [4, 5, 6] x.extend([1, 2, 3]) &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Don&#39;t use &lt;code&gt;append&lt;/code&gt; unless you would like the list as one item. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove the first 3 items from a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;my_list[0:3] = []&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to insert an item to the beginning of a list? What about two items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One item:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers = [1, 2, 3, 4, 5]&#xA;numbers.insert(0, 0)&#xA;print(numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple items or list:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers_1 = [2, 3, 4, 5]&#xA;numbers_2 = [0, 1]&#xA;numbers_1 = numbers_2 + numbers_1&#xA;print(numbers_1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or without creating a new list:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt; &lt;p&gt;sorted(list) will return a new list (original list doesn&#39;t change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() is faster than sorted(list) in case of Lists &lt;/p&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert every string to an integer: &lt;code&gt;[[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nested_li = [[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&#xA;[[int(x) for x in li] for li in nested_li]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted(li1 + li2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;i, j = 0&#xA;merged_li = []&#xA;&#xA;while i &amp;lt; len(li1) and j &amp;lt; len(li2):&#xA;    if li1[i] &amp;lt; li2[j]:&#xA;        merged_li.append(li1[i])&#xA;        i += 1&#xA;    else:&#xA;        merged_li.append(li2[j])&#xA;        j += 1&#xA;&#xA;merged_li = merged_li + merged_li[i:] + merged_li[j:]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;There are many ways of solving this problem:&lt;br&gt; &lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Taking advantage of sets and len:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:&#xA;    return len(set(l)) == len(l)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:&#xA;    seen = []&#xA;&#xA;    for i in l:&#xA;        if i in seen:&#xA;            return False&#xA;        seen.append(i)&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:&#xA;    for i in l:&#xA;        if l.count(i) &amp;gt; 1:&#xA;            return False&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:&#xA;    return all(map(lambda x: l.count(x) &amp;lt; 2, l))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following function &lt;pre&gt;&lt;code&gt;def my_func(li = []):&#xA;    li.append(&#34;hmm&#34;)&#xA;    print(li)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[&#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;, &#39;hmm&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for item in some_list:&#xA;    print(item)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list with indexes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for i, item in enumerate(some_list):&#xA;    print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start list iteration from 2nd index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using range like this&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in range(1, len(some_list)):&#xA;    some_list[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is using slicing&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in some_list[1:]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Method 1&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in reversed(li):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Method 2&lt;/p&gt; &lt;pre&gt;&lt;code&gt;n = len(li) - 1&#xA;while n &amp;gt; 0:&#xA;    ...&#xA;    n -= 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]&#xA;&#xA;sorted(li, key=lambda l: l[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Combine [1, 2, 3] and [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;] so the result is [(1, &#39;x&#39;), (2, &#39;y&#39;), (3, &#39;z&#39;)]&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]&#xA;letters = [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]&#xA;&#xA;list(zip(nums, letters))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions&#34;&gt;Docs&lt;/a&gt;: &#34;List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.&#34;.&lt;/p&gt; &lt;p&gt;It&#39;s better because they&#39;re compact, faster and have better readability.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For loop:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = []&#xA;for number_list in number_lists:&#xA;    for number in number_list:&#xA;        if number % 2 == 0:&#xA;            odd_numbers.append(number)&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List comprehesion:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = [number for number_list in number_lists for number in number_list if number % 2 == 0]&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list: &lt;code&gt;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&lt;/code&gt; Extract all type of foods. Final output should be: {&#39;mushrooms&#39;, &#39;goombas&#39;, &#39;turtles&#39;}&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;brothers_menu =  \&#xA;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&#xA;&#xA;# &#34;Classic&#34; Way&#xA;def get_food(brothers_menu) -&amp;gt; set:&#xA;    temp = []&#xA;&#xA;    for brother in brothers_menu:&#xA;        for food in brother[&#39;food&#39;]:&#xA;            temp.append(food)&#xA;&#xA;    return set(temp)&#xA;&#xA;# One liner way (Using list comprehension)&#xA;set([food for bro in x for food in bro[&#39;food&#39;]])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Dictionaries&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;my_dict = dict(x=1, y=2) OR my_dict = {&#39;x&#39;: 1, &#39;y&#39;: 2} OR my_dict = dict([(&#39;x&#39;, 1), (&#39;y&#39;, 2)]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove a key from a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;del my_dict[&#39;some_key&#39;] you can also use &lt;code&gt;my_dict.pop(&#39;some_key&#39;)&lt;/code&gt; which returns the value of the key. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert the string &#34;a.b.c&#34; to the dictionary &lt;code&gt;{&#39;a&#39;: {&#39;b&#39;: {&#39;c&#39;: 1}}}&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;output = {}&#xA;string = &#34;a.b.c&#34;&#xA;path = string.split(&#39;.&#39;)&#xA;target = reduce(lambda d, k: d.setdefault(k, {}), path[:-1], output)&#xA;target[path[-1]] = 1&#xA;print(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Common Algorithms Implementation&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement &#34;binary search&#34; in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/coding/python/binary_search.py&#34;&gt;Solution&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write to a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;with open(&#39;file.txt&#39;, &#39;w&#39;) as file:&#xA;    file.write(&#34;My insightful comment&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print a random line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print every 3rd line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of lines in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of of words in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a dictionary (variable) to a file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import json&#xA;&#xA;with open(&#39;file.json&#39;, &#39;w&#39;) as f:&#xA;    f.write(json.dumps(dict_var))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python OS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print current working directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.getcwd())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; print the file name (file1)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.path.basename(&#39;/dir1/dir2/file1&#39;))&#xA;&#xA;# Another way&#xA;print(os.path.split(&#39;/dir1/dir2/file1&#39;)[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Print the path without the file name (/dir1/dir2)&lt;/li&gt; &#xA;   &lt;li&gt;Print the name of the directory where the file resides (dir2)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;## Part 1.&#xA;# os.path.dirname gives path removing the end component&#xA;dirpath = os.path.dirname(&#39;/dir1/dir2/file1&#39;)&#xA;print(dirpath)&#xA;&#xA;## Part 2.&#xA;print(os.path.basename(dirpath))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you execute shell commands using Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join path components? for example &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;luig&lt;/code&gt; will result in &lt;code&gt;/home/luigi&lt;/code&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you remove non-empty directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Regex&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the re module &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Strings&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the first repeated character in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;While you iterate through the characters, store them in a dictionary and check for every character whether it&#39;s already in the dictionary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def firstRepeatedCharacter(str):&#xA;    chars = {}&#xA;    for ch in str:&#xA;        if ch in chars:&#xA;            return ch&#xA;        else:&#xA;            chars[ch] = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the unique characters from a string? for example given the input &#34;itssssssameeeemarioooooo&#34; the output will be &#34;mrtisaoe&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x = &#34;itssssssameeeemarioooooo&#34;&#xA;y = &#39;&#39;.join(set(x))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def permute_string(string):&#xA;&#xA;    if len(string) == 1:&#xA;        return [string]&#xA;&#xA;    permutations = []&#xA;    for i in range(len(string)):&#xA;        swaps = permute_string(string[:i] + string[(i+1):])&#xA;        for swap in swaps:&#xA;            permutations.append(string[i] + swap)&#xA;&#xA;    return permutations&#xA;&#xA;print(permute_string(&#34;abc&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from itertools import permutations&#xA;&#xA;[&#39;&#39;.join(p) for p in permutations(&#34;abc&#34;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Detailed answer can be found here: &lt;a href=&#34;http://codingshell.com/python-all-string-permutations&#34;&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the &#34;count&#34; method like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;ImAString.count(&#34; &#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the string (which represents a matrix) &#34;1 2 3\n4 5 6\n7 8 9&#34; create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following? &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; &#39;, &#39;.join([&#34;One&#34;, &#34;Two&#34;, &#34;Three&#34;])&#xA;&amp;gt;&amp;gt; &#34; &#34;.join(&#34;welladsadgadoneadsadga&#34;.split(&#34;adsadga&#34;)[:2])&#xA;&amp;gt;&amp;gt; &#34;&#34;.join([&#34;c&#34;, &#34;t&#34;, &#34;o&#34;, &#34;a&#34;, &#34;o&#34;, &#34;q&#34;, &#34;l&#34;])[0::2]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;One, Two, Three&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;well done&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;cool&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If &lt;code&gt;x = &#34;pizza&#34;&lt;/code&gt;, what would be the result of &lt;code&gt;x[::-1]&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It will reverse the string, so x would be equal to &lt;code&gt;azzip&lt;/code&gt;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Reverse each word in a string (while keeping the order)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the output of the following code: &lt;code&gt;&#34;&#34;.join([&#34;a&#34;, &#34;h&#34;, &#34;m&#34;, &#34;a&#34;, &#34;h&#34;, &#34;a&#34;, &#34;n&#34;, &#34;q&#34;, &#34;r&#34;, &#34;l&#34;, &#34;o&#34;, &#34;i&#34;, &#34;f&#34;, &#34;o&#34;, &#34;o&#34;])[2::3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;mario &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Iterators&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an iterator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the output of the following block? &lt;pre&gt;&lt;code&gt;for i in range(3, 3):&#xA;   print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No output :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of methods and how to use them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Static method&lt;/li&gt; &#xA;   &lt;li&gt;Class method&lt;/li&gt; &#xA;   &lt;li&gt;instance method&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to reverse a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[[&#39;Mario&#39;, 90], [&#39;Geralt&#39;, 82], [&#39;Gordon&#39;, 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;zip()&lt;/li&gt; &#xA;   &lt;li&gt;map()&lt;/li&gt; &#xA;   &lt;li&gt;filter()&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Python - Slicing&lt;/h4&gt; &#xA;&lt;p&gt;For the following slicing exercises, assume you have the following list: &lt;code&gt;my_list = [8, 2, 1, 10, 5, 4, 3, 9]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[0:4]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:6]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:5]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::-1]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[2:]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[:3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Debugging&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pdb :D &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt; &#xA; &lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    return&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    pass&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt; &#xA; &lt;p&gt;We could use the dis module to see what&#39;s going on:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;)&#xA;              2 LOAD_CONST               1 (&#39;a&#39;)&#xA;              4 MAKE_FUNCTION            0&#xA;              6 STORE_NAME               0 (a)&#xA;&#xA;  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;)&#xA;             10 LOAD_CONST               3 (&#39;b&#39;)&#xA;             12 MAKE_FUNCTION            0&#xA;             14 STORE_NAME               1 (b)&#xA;             16 LOAD_CONST               4 (None)&#xA;             18 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;:&#xA;  3           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;:&#xA;  6           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return will always return None regardless of the operations, therefore&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def sum(a, b):&#xA;    global c&#xA;    c = a + b&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to improve the following block of code? &lt;pre&gt;&lt;code&gt;li = []&#xA;for i in range(1, 10):&#xA;    li.append(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[i for i in range(1, 10)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the following function &lt;pre&gt;&lt;code&gt;def is_int(num):&#xA;    if isinstance(num, int):&#xA;        print(&#39;Yes&#39;)&#xA;    else:&#xA;        print(&#39;No&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python - Linked List&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement a linked list in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The reason we need to implement in the first place, it&#39;s because a linked list isn&#39;t part of Python standard library.&lt;br&gt; To implement a linked list, we have to implement two structures: The linked list itself and a node which is used by the linked list.&lt;/p&gt; &lt;p&gt;Let&#39;s start with a node. A node has some value (the data it holds) and a pointer to the next node&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Node(object):&#xA;    def __init__(self, data):&#xA;        self.data = data&#xA;        self.next = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the linked list. An empty linked list has nothing but an empty head.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class LinkedList(object):&#xA;    def __init__(self):&#xA;        self.head = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can start using the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ll = Linkedlist()&#xA;ll.head = Node(1)&#xA;ll.head.next = Node(2)&#xA;ll.head.next.next = Node(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What we have is:&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;| 1 | -&amp;gt; | 2 | -&amp;gt; | 3 |&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;Usually, more methods are implemented, like a push_head() method where you insert a node at the beginning of the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def push_head(self, value):&#xA;    new_node = Node(value)&#xA;    new_node.next = self.head&#xA;    self.head = new_node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a method to the Linked List class to traverse (print every node&#39;s data) the linked list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;def print_list(self): node = self.head while(node): print(node.data) node = node.next &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a method to that will return a boolean based on whether there is a loop in a linked list or not&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Let&#39;s use the Floyd&#39;s Cycle-Finding algorithm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def loop_exists(self):&#xA;    one_step_p = self.head&#xA;    two_steps_p = self.head&#xA;    while(one_step_p and two_steps_p and two_steps_p.next):&#xA;        one_step_p = self.head.next&#xA;        two_step_p = self.head.next.next&#xA;        if (one_step_p == two_steps_p):&#xA;            return True &#xA;    return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Testing&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt; &lt;p&gt;5 style guidelines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.&#xA;2. Surround top-level function and class definitions with two blank lines.&#xA;3. Use commas when making a tuple of one element&#xA;4. Use spaces (and not tabs) for indentation&#xA;5. Use 4 spaces per indentation level&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain mocks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why one shouldn&#39;t use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Flask&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe what is Django/Flask and how you have used it? Why Flask and not Django? (or vice versa)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a route?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; As every web framework, Flask provides a route functionality that lets you serve a content of a given URL. &lt;p&gt;There are multiple ways to map a URL with a function in Python.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decorator: you can use python decorators. In this case we&#39;re using &lt;code&gt;app&lt;/code&gt;. This &lt;code&gt;app&lt;/code&gt; decorator is the instance of the &lt;code&gt;Flask&lt;/code&gt; class. And route it&#39;s a method of this class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)&#xA;def home():&#xA;  return &#39;main website&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;add_url_rule&lt;/code&gt; method: This is a method of the Flask class. We can also use it for map the URL with a function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;def home():&#xA;  return &#39;main website&#39;&#xA;&#xA;app.add_url_rule(&#39;/&#39;, view_func=home)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a blueprint in Flask?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a template?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;zip&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following: &lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))&#xA;list(zip(range(5), range(50), range(-2)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]&#xA;[]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Descriptors&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Descriptors&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about descriptors &lt;a href=&#34;https://docs.python.org/3/howto/descriptor.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;a.num2&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class B:&#xA;    def __get__(self, obj, objtype=None):&#xA;        reuturn 10&#xA;&#xA;class A:&#xA;    num1 = 2&#xA;    num2 = Five()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 10 &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;some_car = Car(&#34;Red&#34;, 4)&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class Print:&#xA;&#xA;    def __get__(self, obj, objtype=None):&#xA;        value = obj._color&#xA;        print(&#34;Color was set to {}&#34;.format(valie))&#xA;        return value&#xA;&#xA;    def __set__(self, obj, value):&#xA;        print(&#34;The color of the car is {}&#34;.format(value))&#xA;        obj._color = value&#xA;&#xA;class Car:&#xA;&#xA;    color = Print()&#xA;&#xA;    def __ini__(self, color, age):&#xA;        self.color = color&#xA;        self.age = age&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; An instance of Car class will be created and the following will be printed: &#34;The color of the car is Red&#34; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you spawn multiple processes with Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def add(num1, num2):&#xA;    return num1 + num2&#xA;&#xA;&#xA;def sub(num1, num2):&#xA;    return num1 - num2&#xA;&#xA;&#xA;def mul(num1, num2):&#xA;    return num1*num2&#xA;&#xA;&#xA;def div(num1, num2):&#xA;    return num1 / num2&#xA;&#xA;operators = {&#xA;    &#39;+&#39;: add,&#xA;    &#39;-&#39;: sub,&#xA;    &#39;*&#39;: mul,&#xA;    &#39;/&#39;: div&#xA;}&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    operator = str(input(&#34;Operator: &#34;))&#xA;    num1 = int(input(&#34;1st number: &#34;))&#xA;    num2 = int(input(&#34;2nd number: &#34;))&#xA;    print(operators[operator](num1, num2))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good reference &lt;a href=&#34;https://docs.python.org/3/library/datatypes.html&#34;&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments for another function eg; &lt;pre&gt;&lt;code&gt;def wee(word):&#xA;    return word&#xA;&#xA;def oh(f):&#xA;    return f + &#34;Ohh&#34;&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; oh(wee(&#34;Wee&#34;))&#xA;&amp;lt;&amp;lt;&amp;lt; Wee Ohh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper, (a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt; &lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt; &lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt; &lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;every time, that&#39;s what decorators do, they introduce syntax to write all of this on the go, using the keyword &#39;@&#39;. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt; &lt;pre&gt;&lt;code&gt;Simple decorator:&#xA;&#xA;def deco(f):&#xA;    print(f&#34;Hi I am the {f.__name__}() function!&#34;)&#xA;    return f&#xA;&#xA;@deco&#xA;def hello_world():&#xA;    return &#34;Hi, I&#39;m in!&#34;&#xA;&#xA;a = hello_world()&#xA;print(a)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!&#xA;    Hi, I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;. But at this point we can only control the before execution, let&#39;s take on the after:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        print(&#34;Rick Sanchez!&#34;)&#xA;        func = f(*args, **kwargs)&#xA;        print(&#34;I&#39;m in!&#34;)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f(word):&#xA;    print(word)&#xA;&#xA;a = f(&#34;************&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!&#xA;    ************&#xA;    I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;deco receives a function -&amp;gt; f wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt; &lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs) deco returns wrapper.&lt;/p&gt; &lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt; &lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import time&#xA;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        before = time.time()&#xA;        func = f(*args, **kwargs)&#xA;        after = time.time()&#xA;        print(after-before)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f():&#xA;    time.sleep(2)&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def n_times(n):&#xA;    def wrapper(f):&#xA;        def inner(*args, **kwargs):&#xA;            for _ in range(n):&#xA;                func = f(*args, **kwargs)&#xA;            return func&#xA;        return inner&#xA;    return wrapper&#xA;&#xA;@n_times(4)&#xA;def f():&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;************&#xA;   ************&#xA;   ************&#xA;   ************&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;class Car:&#xA;    def __init__(self, model, color):&#xA;        self.model = model&#xA;        self.color = color&#xA;&#xA;    def __eq__(self, other):&#xA;        if not isinstance(other, Car):&#xA;            return NotImplemented&#xA;        return self.model == other.model and self.color == other.color&#xA;&#xA;&amp;gt;&amp;gt; a = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; b = Car(&#39;model_2&#39;, &#39;green&#39;)&#xA;&amp;gt;&amp;gt; c = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; a == b&#xA;False&#xA;&amp;gt;&amp;gt; a == c&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Context Manager&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement Linux&#39;s &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How yield works exactly?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Google: &#34;Monitoring is one of the primary means by which service owners keep track of a system‚Äôs health and availability&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action. If the issue doesn&#39;t require any human intervention, then the problem can be fixed by some processes running in the relevant environment. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alerts&lt;br&gt; Tickets&lt;br&gt; Logging&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Prometheus? What are some of Prometheus&#39;s main features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios it might be better to NOT use Prometheus?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Prometheus documentation: &#34;if you need 100% accuracy, such as for per-request billing&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Alert?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following Prometheus components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prometheus server&lt;/li&gt; &#xA;   &lt;li&gt;Push Gateway&lt;/li&gt; &#xA;   &lt;li&gt;Alert Manager&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Prometheus server is responsible for scraping and storing the data&lt;br&gt; Push gateway is used for short-lived jobs&lt;br&gt; Alert manager is responsible for alerts ;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Go&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strong and static typing - the type of the variables can&#39;t be changed over time and they have to be defined at compile time&lt;/li&gt; &#xA;   &lt;li&gt;Simplicity&lt;/li&gt; &#xA;   &lt;li&gt;Fast compile times&lt;/li&gt; &#xA;   &lt;li&gt;Built-in concurrency&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collected&lt;/li&gt; &#xA;   &lt;li&gt;Platform independent&lt;/li&gt; &#xA;   &lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go also has good community. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt; &#xA; &lt;p&gt;False. We can&#39;t redeclare variables but yes, we must used declared variables. &lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;fmt - formatted I/O &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following block of code? How to fix it? &lt;pre&gt;&lt;code&gt;func main() {&#xA;    var x float32 = 13.5&#xA;    var y int&#xA;    y = x&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get &#34;e&#34;. Why is that? How to fix it? &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;    var x int = 101&#xA;    var y string&#xA;    y = string(x)&#xA;    fmt.Println(y)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string. If you want to get &#34;101&#34; you should use the package &#34;strconv&#34; and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the following code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;func main() {&#xA;    var x = 2&#xA;    var y = 3&#xA;    const someConst = x + y&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Constants in Go can only be declared using constant expressions. But &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and their sum is variable. &lt;br&gt; &lt;code&gt;const initializer x + y is not a constant&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;x = iota&#xA;&#x9;y = iota&#xA;)&#xA;const z = iota&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, y)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, z)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go&#39;s iota identifier is used in const declarations to simplify definitions of incrementing numbers. Because it can be used in expressions, it provides a generality beyond that of simple enumerations. &lt;br&gt; &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the first iota group, &lt;code&gt;z&lt;/code&gt; in the second. &lt;br&gt; &lt;a href=&#34;https://github.com/golang/go/wiki/Iota&#34;&gt;Iota page in Go Wiki&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It avoids having to declare all the variables for the returns values. It is called the &lt;a href=&#34;https://golang.org/doc/effective_go.html#blank&#34;&gt;blank identifier&lt;/a&gt;. &lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/27764421/what-is-underscore-comma-in-a-go-declaration#answer-27764432&#34;&gt;answer in SO&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;_ = iota + 3&#xA;&#x9;x&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Since the first iota is declared with the value &lt;code&gt;3&lt;/code&gt; (&lt;code&gt; + 3&lt;/code&gt;), the next one has the value &lt;code&gt;4&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;time&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;var wg sync.WaitGroup&#xA;&#xA;&#x9;wg.Add(1)&#xA;&#x9;go func() {&#xA;&#x9;&#x9;time.Sleep(time.Second * 2)&#xA;&#x9;&#x9;fmt.Println(&#34;1&#34;)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}()&#xA;&#xA;&#x9;go func() {&#xA;&#x9;&#x9;fmt.Println(&#34;2&#34;)&#xA;&#x9;}()&#xA;&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Println(&#34;3&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 2 1 3&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://tutorialedge.net/golang/go-waitgroup-tutorial/&#34;&gt;Aritcle about sync/waitgroup&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/sync/&#34;&gt;Golang package sync&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func mod1(a []int) {&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;1:&#34;, a)&#xA;}&#xA;&#xA;func mod2(a []int) {&#xA;&#x9;a = append(a, 125) // !&#xA;&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;2:&#34;, a)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;s1 := []int{1, 2, 3, 4}&#xA;&#x9;mod1(s1)&#xA;&#x9;fmt.Println(&#34;1:&#34;, s1)&#xA;&#xA;&#x9;s2 := []int{1, 2, 3, 4}&#xA;&#x9;mod2(s2)&#xA;&#x9;fmt.Println(&#34;2:&#34;, s2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: &lt;code&gt;&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 2 [5 5 5 5 5]&lt;br&gt; 2 [1 2 3 4]&lt;br&gt; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;In &lt;code&gt;mod1&lt;/code&gt; a is link, and when we&#39;re using &lt;code&gt;a[i]&lt;/code&gt;, we&#39;re changing &lt;code&gt;s1&lt;/code&gt; value to. But in &lt;code&gt;mod2&lt;/code&gt;, &lt;code&gt;append&lt;/code&gt; creats new slice, and we&#39;re changing only &lt;code&gt;a&lt;/code&gt; value, not &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golangbot.com/arrays-and-slices/&#34;&gt;Aritcle about arrays&lt;/a&gt;, &lt;a href=&#34;https://blog.golang.org/slices&#34;&gt;Blog post about &lt;code&gt;append&lt;/code&gt;&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;container/heap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;// An IntHeap is a min-heap of ints.&#xA;type IntHeap []int&#xA;&#xA;func (h IntHeap) Len() int           { return len(h) }&#xA;func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] }&#xA;func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }&#xA;&#xA;func (h *IntHeap) Push(x interface{}) {&#xA;&#x9;// Push and Pop use pointer receivers because they modify the slice&#39;s length,&#xA;&#x9;// not just its contents.&#xA;&#x9;*h = append(*h, x.(int))&#xA;}&#xA;&#xA;func (h *IntHeap) Pop() interface{} {&#xA;&#x9;old := *h&#xA;&#x9;n := len(old)&#xA;&#x9;x := old[n-1]&#xA;&#x9;*h = old[0 : n-1]&#xA;&#x9;return x&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;h := &amp;amp;IntHeap{4, 8, 3, 6}&#xA;&#x9;heap.Init(h)&#xA;&#x9;heap.Push(h, 7)&#xA;&#xA;  fmt.Println((*h)[0])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/container/heap/&#34;&gt;Golang container/heap package&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mongo&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;MongoDB advantages are as followings:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemaless&lt;/li&gt; &#xA;   &lt;li&gt;Easy to scale-out&lt;/li&gt; &#xA;   &lt;li&gt;No complex joins&lt;/li&gt; &#xA;   &lt;li&gt;Structure of a single object is clear&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Heterogeneous data which changes often&lt;/li&gt; &lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt; &lt;li&gt;Best if the database needs to scale rapidly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an aggregator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Queries&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({&#34;name&#34;: /abc/})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find() and find_one()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you export data from Mongo DB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;mongoexport&lt;/li&gt; &lt;li&gt;programming languages &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;SQL&lt;/h2&gt; &#xA;&lt;h3&gt;SQL Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Functions vs. Comparisons&lt;/td&gt; &#xA;   &lt;td&gt;Query Improvements&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/improve_query.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/solutions/improve_query.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;SQL Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SQL (Structured Query Language) is a standard language for relational databases (like MySQL, MariaDB, ...).&lt;br&gt; It&#39;s used for reading, updating, removing and creating data in a relational database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many businesses and areas within the finance field due to it&#39;s ACID compliance.&lt;/p&gt; &lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications in mind, so it works great if you need to quickly spread the same information around to multiple servers&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure that Relational Databases require, you can store different data types together. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Practical SQL - Basics&lt;/h5&gt; &#xA;&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Customer_Name&lt;/th&gt; &#xA;   &lt;th&gt;Items_in_cart&lt;/th&gt; &#xA;   &lt;th&gt;Cash_spent_to_Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;John Smith&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Jane Smith&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;40.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Bobby Frank&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Order_ID&lt;/th&gt; &#xA;   &lt;th&gt;Item&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Date_sold&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky&lt;/td&gt; &#xA;   &lt;td&gt;2.20&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Bubble Bath&lt;/td&gt; &#xA;   &lt;td&gt;8.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Q987&lt;/td&gt; &#xA;   &lt;td&gt;80-Pack TP&lt;/td&gt; &#xA;   &lt;td&gt;90.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Chicken&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Beef&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;X202&lt;/td&gt; &#xA;   &lt;td&gt;Coffee&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-04-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select * &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many items are in John&#39;s cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt; From Customers &lt;br&gt; Where Customer_Name = &#34;John Smith&#34;; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt; From Customers &lt;br&gt; where Items_in_cart &amp;gt; 0; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in both the Customers table and Orders table &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt; From Customers c &lt;br&gt; Left Join Orders o &lt;br&gt; On c.Customer_ID = o.Customer_ID;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;with cat_food as ( &lt;br&gt; Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt; From Orders &lt;br&gt; Where Item like &#34;%Cat Food%&#34; &lt;br&gt; Group by Customer_ID &lt;br&gt; ) &lt;br&gt; Select Customer_name, TOTAL_PRICE &lt;br&gt; From Customers c &lt;br&gt; Inner JOIN cat_food f &lt;br&gt; ON c.Customer_ID = f.Customer_ID &lt;br&gt; where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt; &lt;p&gt;Although this was a simple statement, the &#34;with&#34; clause really shines when a complex query needs to be run on a table before joining to another. With statements are nice, because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren&#39;t readily available, so we used a with statement to create the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following queries would you use? &lt;pre&gt;&lt;code&gt;SELECT count(*)                             SELECT count(*)&#xA;FROM shawarma_purchases                     FROM shawarma_purchases&#xA;WHERE                               vs.     WHERE&#xA;  YEAR(purchased_at) == &#39;2017&#39;              purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;                                            purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;SELECT count(*)&#xA;FROM shawarma_purchases&#xA;WHERE&#xA;  purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;  purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When you use a function (&lt;code&gt;YEAR(purchased_at)&lt;/code&gt;) it has to scan the whole database as opposed to using indexes and basically the column as it is, in its natural state. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Azure&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Portal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/modules/intro-to-azure-fundamentals/what-is-microsoft-azure&#34;&gt;Microsoft Docs&lt;/a&gt;: &#34;The Azure portal is a web-based, unified console that provides an alternative to command-line tools. With the Azure portal, you can manage your Azure subscription by using a graphical user interface.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Marketplace?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/modules/intro-to-azure-fundamentals/what-is-microsoft-azure&#34;&gt;Microsoft Docs&lt;/a&gt;: &#34;Azure marketplace helps connect users with Microsoft partners, independent software vendors, and startups that are offering their solutions and services, which are optimized to run on Azure.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain availability sets and availability zones&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An availability set is a logical grouping of VMs that allows Azure to understand how your application is built to provide redundancy and availability. It is recommended that two or more VMs are created within an availability set to provide for a highly available application and to meet the&amp;nbsp;99.95% Azure SLA. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Policy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Azure Resource Manager? Can you describe the format for ARM templates?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure managed disks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure - Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure compute services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Azure Virtual Machines&lt;/li&gt; &lt;li&gt;Azure Batch&lt;/li&gt; &lt;li&gt;Azure Service Fabric&lt;/li&gt; &lt;li&gt;Azure Container Instances&lt;/li&gt; &lt;li&gt;Azure Virtual Machine Scale Set?s &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Virtual Machines&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Windows or Linux virtual machines &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Virtual Machine Scale Sets&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Scaling Linux or Windows virtual machines used in Azure &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Functions&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Azure Functions is the serverless compute service of Azure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Container Instances&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Running containerized applications (without the need to provision virtual machines). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Batch&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Running parallel and high-performance computing applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Service Fabric&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Kubernetes&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure - Network&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure network services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an Azure region?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the N-tier architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure Storage&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure storage services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What storage options Azure supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Azure Security Center? What are some of its features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s a monitoring service that provides threat protection across all of the services in Azure. More specifically, it:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Provides security recommendations based on your usage&lt;/li&gt; &lt;li&gt;Monitors security settings and continuously all the services&lt;/li&gt; &lt;li&gt;Analyzes and identifies potential inbound attacks&lt;/li&gt; &lt;li&gt;Detects and blocks malware using machine learning &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Active Directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Azure AD is a cloud-based identity service. You can use it as a standalone service or integrate it with existing Active Directory service you already running. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Advanced Threat Protection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components are part of Azure ATP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where logs are stored in Azure Monitor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure Site Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the advisor does&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain VNet peering&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which protocols are available for configuring health probe&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure Active&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a subscription? What types of subscriptions are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a blob storage service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain GCP&#39;s architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cloud Functions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network tags are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are flow logs? Where are they enabled?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list buckets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Two ways to do that: $ gsutil ls $ gcloud alpha storage ls &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Compute metadata key allows you to run code at startup?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;startap-script &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands does? `gcloud deployment-manager deployments create`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a set of tools to help developers write, run and debug GCP kubernetes based applications. It provides built-in support for rapid iteration, debugging and running applications in development and production K8s environments. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GKE&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is the managed kubernetes service on GCP for deploying, managing and scaling containerised applications using Google infrastructure. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h3&gt;Anthos&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a managed application platform for organisations like enterprises that require quick modernisation and certain levels of consistency for their legacy applications in a hybrid or multicloud world. From this explanation the core ideas can be drawn from these statements; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Managed -&amp;gt; the customer does not need to worry about the underlying software intergrations, they just enable the API.&lt;/li&gt; &#xA;   &lt;li&gt;application platform -&amp;gt; It consists of open source tools like K8s, Knative, Istio and Tekton&lt;/li&gt; &#xA;   &lt;li&gt;Enterprises -&amp;gt; these are usually organisations with complex needs&lt;/li&gt; &#xA;   &lt;li&gt;Consistency -&amp;gt; to have the same policies declaratively initiated to be run anywhere securely e.g on-prem, GCP or other-clouds (AWS or Azure)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fun fact: Anthos is flower in greek, they grow in the ground (earth) but need rain from the clouds to flourish. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List the technical components that make up Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Infrastructure management - Google Kubernetes Engine (GKE)&lt;/li&gt; &lt;li&gt;Cluster management - GKE, Ingress for Anthos&lt;/li&gt; &lt;li&gt;Service management - Anthos Service Mesh&lt;/li&gt; &lt;li&gt;Policy enforcement - Anthos Config Management, Anthos Enterprise Data Protection, Policy Controller&lt;/li&gt; &lt;li&gt;Application deployment - CI/CD tools like Cloud Build, GitLab&lt;/li&gt; &lt;li&gt;Application development - Cloud Code &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the primary computing environment for Anthos to easily manage workload deployment?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Kubernetes Engine (GKE) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos handle the control plane and node components for GKE?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On GCP the kubernetes api-server is the only control plane component exposed to customers whilst compute engine manages instances in the project. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which load balancing options are available?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Networking load balancing for L4 and HTTP(S) Load Balancing for L7 which are both managed services that do not require additional configuration.&lt;/li&gt; &lt;li&gt;Ingress for Anthos which allows the ability to deploy a load balancer that serves an application across multiple clusters on GKE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you deploy Anthos on AWS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Yes, Anthos on AWS is now GA. For more read &lt;a href=&#34;https://cloud.google.com/anthos/gke/docs/aws&#34;&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain the enterprise security capabilities provided by Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Control plane security - GCP manages and maintains the K8s control plane out of the box. The user can secure the api-server by using master authorized networks and private clusters. These allow the user to disable access on the public IP address by assigning a private IP address to the master.&lt;/li&gt; &lt;li&gt;Node security - By default workloads are provisioned on Compute engine instances that use Google&#39;s Container Optimised OS. This operating system implements a locked-down firewall, limited user accounts with root disabled and a read-only filesystem. There is a further option to enable GKE Sandbox for stronger isolation in multi-tenant deployment scenarios.&lt;/li&gt; &lt;li&gt;Network security - Within a created cluster VPC, Anthos GKE leverages a powerful software-defined network that enables simple Pod-to-Pod communications. Network policies allow locking down ingress and egress connections in a given namespace. Filtering can also be implemented to incoming load-balanced traffic for services that require external access, by supplying whitelisted CIDR IP ranges.&lt;/li&gt; &lt;li&gt;Workload security - Running workloads run with limited privileges, default Docker AppArmor security policies are applied to all Kubernetes Pods. Workload identity for Anthos GKE aligns with the open source kubernetes service accounts with GCP service account permissions.&lt;/li&gt; &lt;li&gt;Audit logging - Adminstrators are given a way to retain, query, process and alert on events of the deployed environments. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can workloads deployed on Anthos GKE on-prem clusters securely connect to Google Cloud services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Cloud Virtual Private Network (Cloud VPN) - this is for secure networking&lt;/li&gt; &lt;li&gt;Google Cloud Key Management Service (Cloud KMS) - for key management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Island Mode configuration with regards to networking in Anthos GKE deployed on-prem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;This is when pods can directly talk to each other within a cluster, but cannot be reached from outside the cluster thus forming an &#34;island&#34; within the network that is not connected to the external network. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Anthos Config Management&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is a core component of the Anthos stack which provides platform, service and security operators with a single, unified approach to multi-cluster management that spans both on-premises and cloud environments. It closely follows K8s best practices, favoring declarative approaches over imperative operations, and actively monitors cluster state and applies the desired state as defined in Git. It includes three key components as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An importer that reads from a central Git repository&lt;/li&gt; &lt;li&gt;A component that synchronises stored configuration data into K8s objects&lt;/li&gt; &lt;li&gt;A component that monitors drift between desired and actual cluster configurations with a capability of reconciliation when need rises. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Config Management help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It follows common modern software development practices which makes cluster configuration, management and policy changes auditable, revertable, and versionable easily enforcing IT governance and unifying resource management in an organisation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is a suite of tools that assist in monitoring and managing deployed services on Anthos of all shapes and sizes whether running in cloud, hybrid or multi-cloud environments. It leverages the APIs and core components from Istio, a highly configurable and open-source service mesh platform. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the two main components of Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data plane - it consists of a set of distributed proxies that mediate all inbound and outbound network traffic between individual services which are configured using a centralised control plane and an open API&lt;/li&gt; &lt;li&gt;Control plane - is a fully managed offering outside of Anthos GKE clusters to simplify management overhead and ensure highest possible availability. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of the managed control plane of Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic Director - it is GCP&#39;s fully managed service mesh traffic control plane, responsible for translating Istio API objects into configuration information for the distributed proxies, as well as directing service mesh ingress and egress traffic&lt;/li&gt; &lt;li&gt;Managed CA - is a centralised certificate authority responsible for providing SSL certificates to each of the distributed proxies, authentication information and distributing secrets&lt;/li&gt; &lt;li&gt;Operations tooling - formerly stackdriver, provides a managed ingestion point for observability and telemetry, specifically monitoring, tracing and logging data generated by each of the proxies. This powers the observability dashboard for operators to visually inspect their services and service dependencies assisting in the implementation of SRE best practices for monitoring SLIs and establishing SLOs. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Service Mesh help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Tool and technology integration that makes up Anthos service mesh delivers signficant operational benefits to Anthos environments, with minimal additional overhead such as follows: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Uniform observability - the data plane reports service to service communication back to the control plane generating a service dependency graph. Traffic inspection by the proxy inserts headers to facilitate distributed tracing, capturing and reporting service logs together with service-level metrics (i.e latency, errors, availability).&lt;/li&gt; &lt;li&gt;Operational agility - fine-grained controls for managing the flow of inter-mesh (north-south) and intra-mesh (east-west) traffic are provided.&lt;/li&gt; &lt;li&gt;Policy-driven security - policies can be enforced consistently across diverse protocols and runtimes as service communications are secured by default. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List possible use cases of traffic controls that can be implemented within Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic splitting across differing service versions for canary or A/B testing&lt;/li&gt; &lt;li&gt;Circuit breaking to prevent cascading failures&lt;/li&gt; &lt;li&gt;Fault injection to help build resilient and fault-tolerant deployments&lt;/li&gt; &lt;li&gt;HTTP header-based traffic steering between individual services or versions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Run for Anthos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It is part of the Anthos stack that brings a serverless container experience to Anthos, offering a high-level platform experience on top of K8s clusters. It is built with Knative, an open-source operator for K8s that brings serverless application serving and eventing capabilities. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Cloud Run for Anthos simplify operations?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Platform teams in organisations that wish to offer developers additional tools to test, deploy and run applications can use Knative to enhance this experience on Anthos as Cloud Run. Below are some of the benefits;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Easy migration from K8s deployments - Without Cloud Run, platform engineers have to configure deployment, service, and HorizontalPodAutoscalers(HPA) objects to a loadbalancer and autoscaling. If application is already serving traffic it becomes hard to change configurations or roll back efficiently. Using Cloud Run all this is managed thus the Knative service manifest describes the application to be autoscaled and loadbalanced&lt;/li&gt; &lt;li&gt;Autoscaling - a sudden traffic spike may cause application containers in K8s to crash due to overload thus an efficient automated autoscaling is executed to serve the high volume of traffic&lt;/li&gt; &lt;li&gt;Networking - it has built-in load balancing capabilities and policies for traffic splitting between multiple versions of an application.&lt;/li&gt; &lt;li&gt;Releases and rollouts - supports the notion of the Knatibe API&#39;s revisions which describe new versions or different configurations of your application and canary deployments by splitting traffic.&lt;/li&gt; &lt;li&gt;Monitoring - observing and recording metrics such as latency, error rate and requests per second. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain three high-level out of the box autoscaling primitives offered by Cloud Run for Anthos that do not exist in K8s natively&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Rapid, request-based autoscaling - default autoscalers monitor request metrics which allows Cloud Run for Anthos to handle spiky traffic patterns smoothly&lt;/li&gt; &lt;li&gt;Concurrency controls - limits such as max in-flight requests per container are enforced to ensure the container does not become overloaded and crash. More containers are added to handle the spiky traffic, buffering the requests.&lt;/li&gt; &lt;li&gt;Scale to zero - if an application is inactive for a while Cloud Run scales it down to zero to reduce its footprint. Alternatively one can turn off scale-to-zero to prevent cold starts. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List some Cloud Run for Anthos use cases&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As it does not support stateful applications or sticky sessions, it is suitable for running stateless applications such as:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Machine learning model predictions e.g Tensorflow serving containers&lt;/li&gt; &lt;li&gt;API gateways, API middleware, web front ends and Microservices&lt;/li&gt; &lt;li&gt;Event handlers, ETL &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;OpenStack&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you tell me what each of the following services/projects is responsible for?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nova&lt;/li&gt; &#xA;   &lt;li&gt;Neutron&lt;/li&gt; &#xA;   &lt;li&gt;Cinder&lt;/li&gt; &#xA;   &lt;li&gt;Glance&lt;/li&gt; &#xA;   &lt;li&gt;Keystone&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova - Manage virtual instances&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Keystone - Authentication service across the cloud &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy or snapshot instances&lt;/li&gt; &#xA;   &lt;li&gt;GUI for viewing and modifying resources&lt;/li&gt; &#xA;   &lt;li&gt;Block Storage&lt;/li&gt; &#xA;   &lt;li&gt;Manage virtual instances&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance - Images Service. Also used for copying or snapshot instances&lt;/li&gt; &lt;li&gt;Horizon - GUI for viewing and modifying resources&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Nova - Manage virtual instances &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tenant/project?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Determine true or false: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenStack is free to use&lt;/li&gt; &#xA;   &lt;li&gt;The service responsible for networking is Glance&lt;/li&gt; &#xA;   &lt;li&gt;The purpose of tenant/project is to share resources between different projects and users of OpenStack&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how you bring up an instance with a floating IP&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from a customer saying: &#34;I can ping my instance but can&#39;t connect (ssh) it&#34;. What might be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Deployment &amp;amp; TripleO&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you deployed OpenStack in the past? If yes, can you describe how you did it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with TripleO? How is it different from Devstack or Packstack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read about TripleO right &lt;a href=&#34;https://docs.openstack.org/tripleo-docs/latest&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Nova in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Used to provision and manage virtual instances&lt;/li&gt; &lt;li&gt;It supports Multi-Tenancy in different levels - logging, end-user control, auditing, etc.&lt;/li&gt; &lt;li&gt;Highly scalable&lt;/li&gt; &lt;li&gt;Authentication can be done using internal system or LDAP&lt;/li&gt; &lt;li&gt;Supports multiple types of block storage&lt;/li&gt; &lt;li&gt;Tries to be hardware and hypervisor agnostice &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about Nova architecture and components?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - the server which serves metadata and compute APIs&lt;/li&gt; &lt;li&gt;the different Nova components communicate by using a queue (Rabbitmq usually) and a database&lt;/li&gt; &lt;li&gt;a request for creating an instance is inspected by nova-scheduler which determines where the instance will be created and running&lt;/li&gt; &lt;li&gt;nova-compute is the component responsible for communicating with the hypervisor for creating the instance and manage its lifecycle &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Neutron in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;One of the core component of OpenStack and a standalone project&lt;/li&gt; &lt;li&gt;Neutron focused on delivering networking as a service&lt;/li&gt; &lt;li&gt;With Neutron, users can set up networks in the cloud and configure and manage a variety of network services&lt;/li&gt; &lt;li&gt;Neutron interacts with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Keystone - authorize API calls&lt;/li&gt; &#xA;     &lt;li&gt;Nova - nova communicates with neutron to plug NICs into a network&lt;/li&gt; &#xA;     &lt;li&gt;Horizon - supports networking entities in the dashboard and also provides topology view which includes networking details &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;neutron-dhcp-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-l3-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-metering-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-*-agtent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-server&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;neutron-l3-agent - L3/NAT forwarding (provides external network access for VMs for example)&lt;/li&gt; &lt;li&gt;neutron-dhcp-agent - DHCP services&lt;/li&gt; &lt;li&gt;neutron-metering-agent - L3 traffic metering&lt;/li&gt; &lt;li&gt;neutron-*-agtent - manages local vSwitch configuration on each compute (based on chosen plugin)&lt;/li&gt; &lt;li&gt;neutron-server - exposes networking API and passes requests to other plugins if required &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain these network types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Network&lt;/li&gt; &#xA;   &lt;li&gt;Guest Network&lt;/li&gt; &#xA;   &lt;li&gt;API Network&lt;/li&gt; &#xA;   &lt;li&gt;External Network&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Management Network - used for internal communication between OpenStack components. Any IP address in this network is accessible only within the datacetner&lt;/li&gt; &lt;li&gt;Guest Network - used for communication between instances/VMs&lt;/li&gt; &lt;li&gt;API Network - used for services API communication. Any IP address in this network is publicly accessible&lt;/li&gt; &lt;li&gt;External Network - used for public communication. Any IP address in this network is accessible by anyone on the internet &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which order should you remove the following entities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many reasons for that. One for example: you can&#39;t remove router if there are active ports assigned to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a provider network?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L2 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L3 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack - Glance&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Glance in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance is the OpenStack image service&lt;/li&gt; &lt;li&gt;It handles requests related to instances disks and images&lt;/li&gt; &lt;li&gt;Glance also used for creating snapshots for quick instances backups&lt;/li&gt; &lt;li&gt;Users can use Glance to create new images or upload existing ones &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Glance architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;glance-api - responsible for handling image API calls such as retrieval and storage. It consists of two APIs: 1. registry-api - responsible for internal requests 2. user API - can be accessed publicly&lt;/li&gt; &lt;li&gt;glance-registry - responsible for handling image metadata requests (e.g. size, type, etc). This component is private which means it&#39;s not available publicly&lt;/li&gt; &lt;li&gt;metadata definition service - API for custom metadata&lt;/li&gt; &lt;li&gt;database - for storing images metadata&lt;/li&gt; &lt;li&gt;image repository - for storing images. This can be a filesystem, swift object storage, HTTP, etc. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Swift&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Swift in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift is Object Store service and is an highly available, distributed and consistent store designed for storing a lot of data&lt;/li&gt; &lt;li&gt;Swift is distributing data across multiple servers while writing it to multiple disks&lt;/li&gt; &lt;li&gt;One can choose to add additional servers to scale the cluster. All while swift maintaining integrity of the information and data replications. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can users store by default an object of 100GB in size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not by default. Object Storage API limits the maximum to 5GB per object but it can be adjusted. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to Swift: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Container&lt;/li&gt; &#xA;   &lt;li&gt;Account&lt;/li&gt; &#xA;   &lt;li&gt;Object&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Container - Defines a namespace for objects.&lt;/li&gt; &lt;li&gt;Account - Defines a namespace for containers&lt;/li&gt; &lt;li&gt;Object - Data content (e.g. image, document, ...) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? there can be two objects with the same name in the same container but not in two different containers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Two objects can have the same name if they are in different containers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack - Cinder&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cinder in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Cinder is OpenStack Block Storage service&lt;/li&gt; &lt;li&gt;It basically provides used with storage resources they can consume with other services such as Nova&lt;/li&gt; &lt;li&gt;One of the most used implementations of storage supported by Cinder is LVM&lt;/li&gt; &lt;li&gt;From user perspective this is transparent which means the user doesn&#39;t know where, behind the scenes, the storage is located or what type of storage is used &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Cinder&#39;s components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cinder-api - receives API requests&lt;/li&gt; &lt;li&gt;cinder-volume - manages attached block devices&lt;/li&gt; &lt;li&gt;cinder-scheduler - responsible for storing volumes &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe the following concepts in regards to Keystone? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Role&lt;/li&gt; &#xA;   &lt;li&gt;Tenant/Project&lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Endpoint&lt;/li&gt; &#xA;   &lt;li&gt;Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Role - A list of rights and privileges determining what a user or a project can perform&lt;/li&gt; &lt;li&gt;Tenant/Project - Logical representation of a group of resources isolated from other groups of resources. It can be an account, organization, ...&lt;/li&gt; &lt;li&gt;Service - An endpoint which the user can use for accessing different resources&lt;/li&gt; &lt;li&gt;Endpoint - a network address which can be used to access a certain OpenStack service&lt;/li&gt; &lt;li&gt;Token - Used for access resources while describing which resources can be accessed by using a scope &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the properties of a service? In other words, how a service is identified?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Name&lt;/li&gt; &lt;li&gt;ID number&lt;/li&gt; &lt;li&gt;Type&lt;/li&gt; &lt;li&gt;Description &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: - PublicURL - InternalURL - AdminURL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;PublicURL - Publicly accessible through public internet&lt;/li&gt; &lt;li&gt;InternalURL - Used for communication between services&lt;/li&gt; &lt;li&gt;AdminURL - Used for administrative management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a service catalog?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A list of services and their endpoints &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Services&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe each of the following services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swift&lt;/li&gt; &#xA;   &lt;li&gt;Sahara&lt;/li&gt; &#xA;   &lt;li&gt;Ironic&lt;/li&gt; &#xA;   &lt;li&gt;Trove&lt;/li&gt; &#xA;   &lt;li&gt;Aodh&lt;/li&gt; &#xA;   &lt;li&gt;Ceilometer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift - highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &lt;li&gt;Sahara - Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Ironic - Bare Metal Provisioning&lt;/li&gt; &lt;li&gt;Trove - Database as a service that runs on OpenStack&lt;/li&gt; &lt;li&gt;Aodh - Alarms Service&lt;/li&gt; &lt;li&gt;Ceilometer - Track and monitor usage &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database as a service which runs on OpenStack&lt;/li&gt; &#xA;   &lt;li&gt;Bare Metal Provisioning&lt;/li&gt; &#xA;   &lt;li&gt;Track and monitor usage&lt;/li&gt; &#xA;   &lt;li&gt;Alarms Service&lt;/li&gt; &#xA;   &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &#xA;   &lt;li&gt;highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as a service which runs on OpenStack - Trove&lt;/li&gt; &lt;li&gt;Bare Metal Provisioning - Ironic&lt;/li&gt; &lt;li&gt;Track and monitor usage - Ceilometer&lt;/li&gt; &lt;li&gt;Alarms Service - Aodh&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters - Sahara&lt;/li&gt; &lt;li&gt;highly available, distributed, eventually consistent object/blob store - Swift &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Keystone service in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can&#39;t have OpenStack deployed without Keystone&lt;/li&gt; &lt;li&gt;It Provides identity, policy and token services &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The authentication provided is for both users and services&lt;/li&gt; &#xA;     &lt;li&gt;The authorization supported is token-based and user-based.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;There is a policy defined based on RBAC stored in a JSON file and each line in that file defines the level of access to apply &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Keystone architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;There is a service API and admin API through which Keystone gets requests&lt;/li&gt; &lt;li&gt;Keystone has four backends: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Token Backend - Temporary Tokens for users and services&lt;/li&gt; &#xA;     &lt;li&gt;Policy Backend - Rules management and authorization&lt;/li&gt; &#xA;     &lt;li&gt;Identity Backend - users and groups (either standalone DB, LDAP, ...)&lt;/li&gt; &#xA;     &lt;li&gt;Catalog Backend - Endpoints&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It has pluggable environment where you can integrate with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LDAP&lt;/li&gt; &#xA;     &lt;li&gt;KVS (Key Value Store)&lt;/li&gt; &#xA;     &lt;li&gt;SQL&lt;/li&gt; &#xA;     &lt;li&gt;PAM&lt;/li&gt; &#xA;     &lt;li&gt;Memcached &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the Keystone authentication process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keystone gets a call/request and checks whether it&#39;s from an authorized user, using username, password and authURL&lt;/li&gt; &lt;li&gt;Once confirmed, Keystone provides a token.&lt;/li&gt; &lt;li&gt;A token contains a list of user&#39;s projects so there is no to authenticate every time and a token can submitted instead &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Compute (Nova)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following does?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nova-api&lt;/li&gt; &#xA;   &lt;li&gt;nova-compuate&lt;/li&gt; &#xA;   &lt;li&gt;nova-conductor&lt;/li&gt; &#xA;   &lt;li&gt;nova-cert&lt;/li&gt; &#xA;   &lt;li&gt;nova-consoleauth&lt;/li&gt; &#xA;   &lt;li&gt;nova-scheduler&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - responsible for managing requests/calls&lt;/li&gt; &lt;li&gt;nova-compute - responsible for managing instance lifecycle&lt;/li&gt; &lt;li&gt;nova-conductor - Mediates between nova-compute and the database so nova-compute doesn&#39;t access it directly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of Nova proxies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova-novncproxy - Access through VNC connections&lt;/li&gt; &lt;li&gt;Nova-spicehtml5proxy - Access through SPICE&lt;/li&gt; &lt;li&gt;Nova-xvpvncproxy - Access through a VNC connection &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Horizon&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Horizon in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Django-based project focusing on providing an OpenStack dashboard and the ability to create additional customized dashboards&lt;/li&gt; &lt;li&gt;You can use it to access the different OpenStack services resources - instances, images, networks, ... &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;By accessing the dashboard, users can use it to list, create, remove and modify the different resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It&#39;s also highly customizable and you can modify or add to it based on your needs &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell about Horizon architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;API is backward compatible&lt;/li&gt; &lt;li&gt;There are three type of dashboards: user, system and settings&lt;/li&gt; &lt;li&gt;It provides core support for all OpenStack core projects such as Neutron, Nova, etc. (out of the box, no need to install extra packages or plugins)&lt;/li&gt; &lt;li&gt;Anyone can extend the dashboards and add new components&lt;/li&gt; &lt;li&gt;Horizon provides templates and core classes from which one can build its own dashboard &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Puppet? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Module&lt;/li&gt; &#xA;   &lt;li&gt;Manifest&lt;/li&gt; &#xA;   &lt;li&gt;Node&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Facter&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MCollective?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Elastic&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The Elastic Stack consists of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Elasticsearch&lt;/li&gt; &#xA;   &lt;li&gt;Kibana&lt;/li&gt; &#xA;   &lt;li&gt;Logstash&lt;/li&gt; &#xA;   &lt;li&gt;Beats&lt;/li&gt; &#xA;   &lt;li&gt;Elastic Hadoop&lt;/li&gt; &#xA;   &lt;li&gt;APM Server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Elasticserach, Logstash and Kibana are also known as the ELK stack. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Logstash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://logit.io/blog/post/the-top-50-elk-stack-and-elasticsearch-interview-questions&#34;&gt;blog&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Logstash is a powerful, flexible pipeline that collects, enriches and transports data. It works as an extract, transform &amp;amp; load (ETL) tool for collecting log messages.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what beats are&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Beats are lightweight data shippers. These data shippers installed on the client where the data resides. Examples of beats: Filebeat, Metricbeat, Auditbeat. There are much more.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe what happens from the moment an app logged some information until it&#39;s displayed to the user in a dashboard when the Elastic stack is used&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The process may vary based on the chosen architecture and the processing you may want to apply to the logs. One possible workflow is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;The data logged by the application is picked by filebeat and sent to logstash&lt;/li&gt; &lt;li&gt;Logstash process the log based on the defined filters. Once done, the output is sent to Elasticsearch&lt;/li&gt; &lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt; &lt;li&gt;The user creates visualizations in Kibana which based on the indexed data&lt;/li&gt; &lt;li&gt;The user creates a dashboard which composed out of the visualization created in the previous step &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h5&gt;Elasticsearch&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a data node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is where data is stored and also where different processing takes place (e.g. when you search for a data). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a master node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Par of a master node responsibilites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track the status of all the nodes in the cluster&lt;/li&gt; &#xA;   &lt;li&gt;Verify replicas are working and the data is available from every data node.&lt;/li&gt; &#xA;   &lt;li&gt;No hot nodes (no data node that works much harder than other nodes)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;While there can be multiple master nodes in reality only of them is the elected master node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an ingest node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A node which responsible for parsing the data. In case you don&#39;t use logstash then this node can recieve data from beats and parse it, similarly to how it can be parsed in Logstash. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Coordinating node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A Coordinating node responsible for routing requests out and in to the cluser (data nodes). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How data is stored in elasticsearch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data is stored in an index&lt;/li&gt; &lt;li&gt;The index is spread across the cluster using shards &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt; You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt; &lt;p&gt;The official docs also offer a great explanation (in general, it&#39;s really good documentation, as every project should have):&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Shards&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt; This allows Elasticsearch to scale to an entire cluster of servers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Document?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL. As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check the health of your elasticsearch cluster and it&#39;s red. What does it mean? What can cause the status to be yellow instead of green?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Red means some data is unavailable. Yellow can be caused by running single node cluster instead of multi-node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;_index&lt;/li&gt; &lt;li&gt;_id&lt;/li&gt; &lt;li&gt;_type &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Mapping&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can optimize fields for partial matching&lt;/li&gt; &lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt; &lt;li&gt;You can perform language-specific analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Replicas&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In a network/cloud environment where failures can be expected any time, it is very useful and highly recommended to have a failover mechanism in case a shard/node somehow goes offline or disappears for whatever reason. To this end, Elasticsearch allows you to make one or more copies of your index‚Äôs shards into what are called replica shards, or replicas for short. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check &#34;Current Phase&#34; under &#34;Index lifecycle management&#34; and you see it&#39;s set to &#34;hot&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;The index is actively being written to&#34;. More about the phases &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/7.6/ilm-policy-definition.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;curl -X PUT &#34;localhost:9200/customer/_doc/1?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;{ &#34;name&#34;: &#34;John Doe&#34; }&#39;&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It creates customer index if it doesn&#39;t exists and adds a new document with the field name which is set to &#34;John Dow&#34;. Also, if it&#39;s the first document it will get the ID 1. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will happen if you run the previous command twice? What about running it 100 times?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;If name value was different then it would update &#34;name&#34; to the new value&lt;/li&gt; &lt;li&gt;In any case, it bumps version field by one &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Bulk API? What would you use it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bulk API is used when you need to index multiple documents. For high number of documents it would be significantly faster to use rather than individual requests since there are less network roundtrips. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Query DSL&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;p&gt;&#34;In the query context, a query clause answers the question ‚ÄúHow well does this document match this query clause?‚Äù Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;In a filter context, a query clause answers the question ‚ÄúDoes this document match this query clause?‚Äù The answer is a simple Yes or No‚Äâ‚Äî‚Äâno scores are calculated. Filter context is mostly used for filtering structured data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt; A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Logstash&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt; &lt;li&gt;Filter Plugins - processing data&lt;/li&gt; &lt;li&gt;Output Plugins - push data to different outputs/services/platforms &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is grok?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A logstash plugin which modifies information in one format and immerse it in another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How grok works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What grok patterns are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is `_grokparsefailure?`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you test or debug grok patterns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash Codecs? What codecs are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Kibana&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Discover&#34; in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The raw data as it is stored in the index. You can search and filter it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You see in Kibana, after clicking on Discover, &#34;561 hits&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Total number of documents matching the search results. If not query used then simply the total number of documents. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Visualize&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Visualize&#34; is where you can create visual representations for your data (pie charts, graphs, ...) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Filebeat&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If one is using ELK, is it a must to also use filebeat? In what scenarios it&#39;s useful to use filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a harvester?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read &lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/how-filebeat-works.html#harvester&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? a single harvester harvest multiple files, according to the limits set in filebeat.yml&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. One harvester harvests one file. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are filebeat modules?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Elastic Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you secure an Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can generate certificates with the provided elastic utils and change configuration to enable security using certificates model. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distributed&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to Martin Kleppmann:&lt;/p&gt; &lt;p&gt;&#34;Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another definition: &#34;Systems that are physically separated, but logically connected&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can cause a system to fail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Network&lt;/li&gt; &lt;li&gt;CPU&lt;/li&gt; &lt;li&gt;Memory&lt;/li&gt; &lt;li&gt;Disk &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is &#34;CAP theorem&#34;? (aka as Brewer&#39;s theorem)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to the CAP theorem, it&#39;s not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Availability: Every request receives a response (it doesn&#39;t has to be the most recent data)&lt;/li&gt; &lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt; &lt;li&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_standby.png&#34; width=&#34;500x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 1. The transition can take time. In other words, noticeable downtime. 2. Standby server is a waste of resources - if first application server is running then the standby does nothing &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_lb.png&#34; width=&#34;700x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Issues: If load balancer dies , we lose the ability to communicate with the application. &lt;p&gt;Ways to improve:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Add another load balancer&lt;/li&gt; &lt;li&gt;Use DNS A record for both load balancers&lt;/li&gt; &lt;li&gt;Use message queue &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Shared-Nothing&#34; architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Sidecar Pattern (Or sidecar proxy)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Highly Available &#34;Hello World&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/ha_hello_world.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/solutions/ha_hello_world.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you type in a URL in an address bar in a browser?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The browser searches for the record of the domain name IP address in the DNS in the following order:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browser cache&lt;/li&gt; &#xA;   &lt;li&gt;Operating system cache&lt;/li&gt; &#xA;   &lt;li&gt;The DNS server configured on the user&#39;s system (can be ISP DNS, public DNS, ...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;If it couldn&#39;t find a DNS record locally, a full DNS resolution is started.&lt;/li&gt; &#xA;   &lt;li&gt;It connects to the server using the TCP protocol&lt;/li&gt; &#xA;   &lt;li&gt;The browser sends an HTTP request to the server&lt;/li&gt; &#xA;   &lt;li&gt;The server sends an HTTP response back to the browser&lt;/li&gt; &#xA;   &lt;li&gt;The browser renders the response (e.g. HTML)&lt;/li&gt; &#xA;   &lt;li&gt;The browser then sends subsequent requests as needed to the server to get the embedded links, javascript, images in the HTML and then steps 3 to 5 are repeated.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: add more details! &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is an API&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;I like this definition from &lt;a href=&#34;https://blog.christianposta.com/microservices/api-gateways-are-going-through-an-identity-crisis&#34;&gt;blog.christianposta.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An explicitly and purposefully defined interface designed to be invoked over a network that enables software developers to get programmatic access to data and functionality within an organization in a controlled and comfortable way.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an API specification?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? API Definition is the same as API Specification&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API definition is similar to an API specification in that it provides an understanding of how an API is organized and how the API functions. But the API definition is aimed at machine consumption instead of human consumption of APIs.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Payload in API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Automation? How it&#39;s related or different from Orchestration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Automation is the act of automating tasks to reduce human intervention or interaction in regards to IT technology and systems.&lt;br&gt; While automation focuses on a task level, Orchestration is the process of automating processes and/or workflows which consists of multiple tasks that usually across multiple systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me about interesting bugs you&#39;ve found and also fixed&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Debuggger and how it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What services an application might have?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Authorization&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Authentication&lt;/li&gt; &lt;li&gt;Ordering&lt;/li&gt; &lt;li&gt;Front-end&lt;/li&gt; &lt;li&gt;Back-end ... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Metadata?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data about data. Basically, it describes the type of information that an underlying data will hold. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can use one of the following formats: JSON, YAML, XML. Which one would you use? Why?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I can&#39;t answer this for you :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s KPI?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s DSL (Domain Specific Language)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Domain Specific Language (DSLs) are used to create a customised language that represents the domain such that domain experts can easily interpret it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s the difference between KPI and OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;YAML&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data serialization language used by many technologies today like Kubernetes, Ansible, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Any valid JSON file is also a valid YAML file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Because YAML is superset of JSON. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;{&#xA;    applications: [&#xA;        {&#xA;            name: &#34;my_app&#34;,&#xA;            language: &#34;python&#34;,&#xA;            version: 20.17&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; JSON &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;applications:&#xA;  - app: &#34;my_app&#34;&#xA;    language: &#34;python&#34;&#xA;    version: 20.17&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; YAML &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a multi-line string with YAML? What use cases is it good for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: |&#xA;  look mama&#xA;  I can write a multi-line string&#xA;  I love YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s good for use cases like writing a shell script where each line of the script is a different command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;someMultiLineString: |&lt;/code&gt; to &lt;code&gt;someMultiLineString: &amp;gt;&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;using &lt;code&gt;&amp;gt;&lt;/code&gt; will make the multi-line string to fold into a single line&lt;/p&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: &amp;gt;&#xA;  This is actually&#xA;  a single line&#xA;  do not let appearances fool you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are placeholders in YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;They allow you reference values instead of directly writing them and it is used like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;username: {{ my.user_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you define multiple YAML components in one file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using this: &lt;code&gt;---&lt;/code&gt; For Examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;document_number: 1&#xA;---&#xA;document_number: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firmware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a firmware&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Firmware&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In computing, firmware is a specific class of computer software that provides the low-level control for a device&#39;s specific hardware. Firmware, such as the BIOS of a personal computer, may contain basic functions of a device, and may provide hardware abstraction services to higher-level software such as operating systems.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customers and Service Providers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLO (service-level objective)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLA (service-level agreement)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Jira&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain/Demonstrate the following types in Jira: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Epic&lt;/li&gt; &#xA;   &lt;li&gt;Story&lt;/li&gt; &#xA;   &lt;li&gt;Task&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a project in Jira?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Kafka&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kafka?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Kafka, how to automatically balance brokers leadership of partitions in a cluster? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable auto leader election and reduce the imbalance percentage ratio&lt;/li&gt; &#xA;   &lt;li&gt;Manually rebalance by using kafkat&lt;/li&gt; &#xA;   &lt;li&gt;Configure group.initial.rebalance.delay.ms to 3000&lt;/li&gt; &#xA;   &lt;li&gt;All of the above&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cassandra&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When running a cassandra cluster, how often do you need to run nodetool repair in order to keep the cluster consistent? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Within the columnFamily GC-grace Once a week&lt;/li&gt; &#xA;   &lt;li&gt;Less than the compacted partition minimum bytes&lt;/li&gt; &#xA;   &lt;li&gt;Depended on the compaction strategy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;Server SYN+ACK&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;HTTP request&lt;/li&gt; &lt;li&gt;HTTP response &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It doesn&#39;t maintain state for incoming request. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It consists of:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Request line - request type&lt;/li&gt; &lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt; &lt;li&gt;Body (not always included) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;GET&lt;/li&gt; &lt;li&gt;POST&lt;/li&gt; &lt;li&gt;HEAD&lt;/li&gt; &lt;li&gt;PUT&lt;/li&gt; &lt;li&gt;DELETE&lt;/li&gt; &lt;li&gt;CONNECT&lt;/li&gt; &lt;li&gt;OPTIONS&lt;/li&gt; &lt;li&gt;TRACE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;1xx - informational&lt;/li&gt; &lt;li&gt;2xx - Success&lt;/li&gt; &lt;li&gt;3xx - Redirect&lt;/li&gt; &lt;li&gt;4xx - Error, client fault&lt;/li&gt; &lt;li&gt;5xx - Error, server fault &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get &#34;504 Gateway Timeout&#34; error from an HTTP server. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The server didn&#39;t receive a response from another server it communicates with in a timely manner. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is &#34;X-Forwarded-For&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X-Forwarded-For&#34;&gt;Wikipedia&lt;/a&gt;: &#34;The X-Forwarded-For (XFF) HTTP header field is a common method for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Load Balancers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer accepts (or denies) incoming network traffic from a client, and based on some criteria (application related, network, etc.) it distributes those communications out to servers (at least one). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why to used a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Scalability - using a load balancer, you can possibly add more servers in the backend to handle more requests/traffic from the clients, as opposed to using one server.&lt;/li&gt; &lt;li&gt;Redundancy - if one server in the backend dies, the load balancer will keep forwarding the traffic/requests to the second server so users won&#39;t even notice one of the servers in the backend is down. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What load balancer techniques/algorithms are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Round Robin&lt;/li&gt; &lt;li&gt;Weighted Round Robin&lt;/li&gt; &lt;li&gt;Least Connection&lt;/li&gt; &lt;li&gt;Weighted Least Connection&lt;/li&gt; &lt;li&gt;Resource Based&lt;/li&gt; &lt;li&gt;Fixed Weighting&lt;/li&gt; &lt;li&gt;Weighted Response Time&lt;/li&gt; &lt;li&gt;Source IP Hash&lt;/li&gt; &lt;li&gt;URL Hash &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of round robin algorithm in load balancing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A simple round robin algorithm knows nothing about the load and the spec of each server it forwards the requests to. It is possible, that multiple heavy workloads requests will get to the same server while other servers will got only lightweight requests which will result in one server doing most of the work, maybe even crashing at some point because it unable to handle all the heavy workloads requests by its own.&lt;/li&gt; &lt;li&gt;Each request from the client creates a whole new session. This might be a problem for certain scenarios where you would like to perform multiple operations where the server has to know about the result of operation so basically, being sort of aware of the history it has with the client. In round robin, first request might hit server X, while second request might hit server Y and ask to continue processing the data that was processed on server X already. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which scenarios would you use ALB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;At what layers a load balancer can operate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;L4 and L7 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you perform load balancing without using a dedicated load balancer instance?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you can use DNS for performing load balancing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNS load balancing? What its advantages? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Load Balancers - Sticky Sessions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are sticky sessions? What are their pros and cons?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Recommended read:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://access.redhat.com/solutions/900933&#34;&gt;Red Hat Article&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Can cause uneven load on instance (since requests routed to the same instances) Pros:&lt;/li&gt; &lt;li&gt;Ensures in-proc sessions are not lost when a new request is created &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one use case for using sticky sessions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would like to make sure the user doesn&#39;t lose the current session data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What sticky sessions use for enabling the &#34;stickiness&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Cookies. There are application based cookies and duration based cookies. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain application-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the application and/or the load balancer&lt;/li&gt; &lt;li&gt;Usually allows to include custom data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain duration-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the load balancer&lt;/li&gt; &lt;li&gt;Session is not sticky anymore once the duration elapsed &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Load Balancers - Load Balancing Algorithms&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following load balancing techniques &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Resource Based&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Weighting&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Response Time&lt;/li&gt; &#xA;   &lt;li&gt;Source IP Hash&lt;/li&gt; &#xA;   &lt;li&gt;URL Hash&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain use case for connection draining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open, use connection draining. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. &lt;p&gt;The maximum timeout value can be set between 1 and 3,600 seconds on both GCP and AWS.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Licenses&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with &#34;Creative Commons&#34;? What do you know about it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the differences between copyleft and permissive licenses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Copyleft, any derivative work must use the same licensing while in permissive licensing there are no such condition. GPL-3 is an example of copyleft license while BSD is an example of permissive license. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Random&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a search engine works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How auto completion works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU cache. &lt;a href=&#34;https://www.enterprisestorageforum.com/hardware/cache-memory/&#34;&gt;Source&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a memory leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SSH HTTP DHCP DNS ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cache API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://idiallo.com/blog/c10k-2016&#34;&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage formats are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;File&lt;/li&gt; &lt;li&gt;Block&lt;/li&gt; &lt;li&gt;Object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage devices are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain IOPS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain storage throughput&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a filesystem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Dark Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Questions you CAN ask&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions-you-ask&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview. These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that&#39;s really up to you.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you like about working here?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt. Phrase the question in the light that all companies have the deal with this, but you want to see the current pain points they are dealing with &lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at setting expectations with projects. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why I should NOT join you? (or &#39;what you don&#39;t like about working here?&#39;)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What was your favorite project you&#39;ve worked on?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if you would enjoy working on projects like these. This is also a good way to see if the managers are allowing employees to learn and grow with projects outside of the normal work you&#39;d do. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company. Additionally, it can be a great way to show how you&#39;d be an asset to the team.&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you&#39;ve solved that in the past, you can show how you&#39;d be able to mitigate that problem. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Let&#39;s say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain white-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain black-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are unit tests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of tests would you run to test a web application?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain test harness?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is A/B testing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of tests: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load Testing&lt;/li&gt; &#xA;   &lt;li&gt;Stress Testing&lt;/li&gt; &#xA;   &lt;li&gt;Capacity Testing&lt;/li&gt; &#xA;   &lt;li&gt;Volume Testing&lt;/li&gt; &#xA;   &lt;li&gt;Endurance Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Board Tables&lt;/td&gt; &#xA;   &lt;td&gt;Relational DB Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/table_for_message_board_system.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/solutions/table_for_message_board_system.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a relational database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data Storage: system to store data in tables&lt;/li&gt; &lt;li&gt;SQL: programming language to manage relational databases&lt;/li&gt; &lt;li&gt;Data Definition Language: a standard syntax to create, alter and delete tables &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database must meet each of the four criteria&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the update is considered failed as a whole, and will not go through - the DB will revert back to it&#39;s original state before the update occurred. It should also be mentioned that Atomicity ensures that each transaction is completed as it&#39;s own stand alone &#34;unit&#34; - if any part fails, the whole statement fails.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you make a change to the DB, it shouldn&#39;t corrupt it. Consistency is upheld by checks and constraints that are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would not be executed&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen &#34;mid-update&#34; - as multiple transactions are running at the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt; &#xA; &lt;p&gt;For example, let&#39;s say that 20 other people were making changes to the database at the same time. At the time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should only see the 15 changes that had completed - you wouldn&#39;t see the database mid-update as the change goes through.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens (power failure, system crash, etc.). This means that all completed transactions must be recorded in non-volatile memory.&lt;/p&gt; &#xA; &lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB&#39;s can be ACID compliant depending on how they operate, but as a general rule of thumb, NoSQL DB&#39;s are not considered ACID compliant&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sharding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Sharding is a horizontal partitioning.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Are you able to explain what is it good for? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You find out your database became a bottleneck and users experience issues accessing data. How can you deal with such situation?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not much information provided as to why it became a bottleneck and what is current architecture, so one general approach could be&lt;br&gt; to reduce the load on your database by moving frequently-accessed data to in-memory structure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection pool?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it&#39;s used is to avoid an overhead of establishing a connection for every query done to a database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn&#39;t closed after being created and is no longer needed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Table Lock?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt; &lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt; &lt;li&gt;Check for table locks and kill irrelevant locking sessions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation&#39;s decision-making process&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a time-series database&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an index in a database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A database index is a data structure that improves the speed of operations in a table. Indexes can be created using one or more columns, providing the basis for both rapid random lookups and efficient ordering of access to records. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are there in relational databases?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Normalization&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data that is used multiple times in a database should be stored once and referenced with a foreign key.&lt;br&gt; This has the clear benefit of ease of maintenance where you need to change a value only in a single place to change it everywhere. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Primary Key and Foreign Key&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Primary Key: each row in every table should a unique identifier that represents the row.&lt;br&gt; Foreign Key: a reference to another table&#39;s primary key. This allows you to join table together to retrieve all the information you need without duplicating data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of data tables have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Primary data table: main data you care about&lt;/li&gt; &lt;li&gt;Details table: includes a foreign key and has one to many relationship&lt;/li&gt; &lt;li&gt;Lookup values table: can be one table per lookup or a table containing all the lookups and has one to many relationship&lt;/li&gt; &lt;li&gt;Multi reference table &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ORM? What benefits it provides in regards to relational databases usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34;&gt;Wikipedia&lt;/a&gt;: &#34;is a programming technique for converting data between incompatible type systems using object-oriented programming languages&#34;&lt;/p&gt; &lt;p&gt;In regards to the relational databases:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as code&lt;/li&gt; &lt;li&gt;Database abstraction&lt;/li&gt; &lt;li&gt;Encapsulates SQL complexity&lt;/li&gt; &lt;li&gt;Enables code review process&lt;/li&gt; &lt;li&gt;Enables usage as a native OOP structure &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DDL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In the context of SQL, data definition or data description language (DDL) is a syntax for creating and modifying database objects such as tables, indices, and users.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;p&gt;Given a text file, perform the following exercises&lt;/p&gt; &#xA;&lt;h4&gt;Extract&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract the first word of each line&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus: extract the last word of each line &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the IP addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract dates in the format of yyyy-mm-dd or yyyy-dd-mm&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract email addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Replace&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace tabs with four spaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace &#39;red&#39; with &#39;green&#39;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;System Design&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a &#34;Single point of failure&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;3-Tier Architecture&#34; (including pros and cons)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt; &lt;li&gt;Not designed for today&#39;s infrastructure (like public clouds)&lt;/li&gt; &lt;li&gt;Scaling a team to work monolithic architecture is more challenging &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of microoservices architecture over a monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Each of the services individually fail without escalating into an application-wide outage.&lt;/li&gt; &lt;li&gt;Each service can be developed and maintained by a separate team and this team can choose its own tools and coding language &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s a service mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh&#34;&gt;This article&lt;/a&gt; provides a great explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Loose Coupling&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a message queue? When is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Scalability&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Scalability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability easily grow in size and capacity based on demand and usage. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticity&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability to grow but also to reduce based on what is required &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Disaster Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Fault Tolerance and High Availability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Fault Tolerance - The ability to self-heal and return to normal capacity. Also the ability to withstand a failure and remain functional.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;High Availability - Being able to access a resource (in some use cases, using different platforms) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between high availability and Disaster Recovery?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.wintellect.com/high-availability-vs-disaster-recovery&#34;&gt;wintellect.com&lt;/a&gt;: &#34;High availability, simply put, is eliminating single points of failure and disaster recovery is the process of getting a system back to an operational state when a system is rendered inoperative. In essence, disaster recovery picks up when high availability fails, so HA first.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the disadvantages of Vertical Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With vertical scaling alone, the component still remains a single point of failure. In addition, it has hardware limit where if you don&#39;t have more resources, you might not be able to scale vertically. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which type of cloud services usually support vertical scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Databases, cache. It&#39;s common mostly for non-distributed systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the disadvantage of Horizontal Scaling? What is often required in order to perform Horizontal Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer. You can add more resources, but if you would like them to be part of the process, you have to serve them the requests/responses. Also, data inconsistency is a concern with horizontal scaling. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain in which use cases will you use vertical scaling and in which use cases you will use horizontal scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Resiliency and what ways are there to make a system more resilient&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Consistent Hashing&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/cdn-no-downtime.png&#34; width=&#34;300x;&#34; height=&#34;400px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_issue.png&#34; width=&#34;400x;&#34; height=&#34;300px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt; Instead of working in &#34;push mode&#34;, the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_fix.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/input-process-output.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Cache&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;cache&#34;? In which cases would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;distributed cache&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;cache replacement policy&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Take a look &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which cache replacement policies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can find a list &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following cache policies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIFO&lt;/li&gt; &#xA;   &lt;li&gt;LIFO&lt;/li&gt; &#xA;   &lt;li&gt;LRU&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about it &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why not writing everything to cache instead of a database/datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Migrations&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can mention:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward cut over dress rehearsals DNS redirection &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Branch by Abstraction&#34; technique&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Design a system&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a video streaming website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a photo upload website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you build a URL shortener?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;More System Design Questions&lt;/h4&gt; &#xA;&lt;p&gt;Additional exercises can be found in &lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;system-design-notebook repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/system_design_notebook.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a CPU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A central processing unit (CPU) performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics processing units (GPUs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;RAM (Random Access Memory) is the hardware in a computing device where the operating system (OS), application programs and data in current use are kept so they can be quickly reached by the device&#39;s processor. RAM is the main memory in a computer. It is much faster to read from and write to than other kinds of storage, such as a hard disk drive (HDD), solid-state drive (SSD) or optical drive. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An embedded system is a computer system - a combination of a computer processor, computer memory, and input/output peripheral devices‚Äîthat has a dedicated function within a larger mechanical or electronic system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you give an example of an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Raspberry Pi &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is exactly Big Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As defined by Doug Laney:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Volume: Extremely large volumes of data&lt;/li&gt; &lt;li&gt;Velocity: Real time, batch, streams of data&lt;/li&gt; &lt;li&gt;Variety: Various forms of data, structured, semi-structured and unstructured&lt;/li&gt; &lt;li&gt;Veracity or Variability: Inconsistent, sometimes inaccurate, varying data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DataOps? How is it related to DevOps?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;DataOps seeks to reduce the end-to-end cycle time of data analytics, from the origin of ideas to the literal creation of charts, graphs and models that create value. DataOps combines Agile development, DevOps and statistical process controls and applies them to data analytics. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An answer from &lt;a href=&#34;https://www.talend.com/resources/what-is-data-architecture&#34;&gt;talend.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Data architecture is the process of standardizing how organizations collect, store, transform, distribute, and use data. The goal is to deliver relevant data to people who need it, when they need it, and help them make sense of it.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the different formats of data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Structured - data that has defined format and length (e.g. numbers, words)&lt;/li&gt; &lt;li&gt;Semi-structured - Doesn&#39;t conform to a specific format but is self-describing (e.g. XML, SWIFT)&lt;/li&gt; &lt;li&gt;Unstructured - does not follow a specific format (e.g. images, test messages) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_warehouse&#34;&gt;Wikipedia&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/data-warehouse&#34;&gt;Amazon&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Lake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_lake&#34;&gt;Data Lake - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain the difference between a data lake and a data warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Data Versioning&#34;? What models of &#34;Data Versioning&#34; are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ETL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Apache Hadoop&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hadoop&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Apache Hadoop - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop YARN&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Responsible for managing the compute resources in clusters and scheduling users&#39; applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop MapReduce&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A programming model for large-scale data processing &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop Distributed File Systems (HDFS)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Distributed file system providing high aggregate bandwidth across the cluster.&lt;/li&gt; &lt;li&gt;For a user it looks like a regular file system structure but behind the scenes it&#39;s distributed across multiple machines in a cluster&lt;/li&gt; &lt;li&gt;Typical file size is TB and it can scale and supports millions of files&lt;/li&gt; &lt;li&gt;It&#39;s fault tolerant which means it provides automatic recovery from faults&lt;/li&gt; &lt;li&gt;It&#39;s best suited for running long batch operations rather than live analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about HDFS architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;HDFS Architecture&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Master-slave architecture&lt;/li&gt; &lt;li&gt;Namenode - master, Datanodes - slaves&lt;/li&gt; &lt;li&gt;Files split into blocks&lt;/li&gt; &lt;li&gt;Blocks stored on datanodes&lt;/li&gt; &lt;li&gt;Namenode controls all metadata &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Ceph&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Ceph&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Ceph favor consistency and correctness over performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; True &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which services or types of storage Ceph supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Object (RGW)&lt;/li&gt; &lt;li&gt;Block (RBD)&lt;/li&gt; &lt;li&gt;File (CephFS) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RADOS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Reliable Autonomic Distributed Object Storage&lt;/li&gt; &lt;li&gt;Provides low-level data object storage service&lt;/li&gt; &lt;li&gt;Strong Consistency&lt;/li&gt; &lt;li&gt;Simplifies design and implementation of higher layers (block, file, object) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe RADOS software components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Monitor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Central authority for authentication, data placement, policy&lt;/li&gt; &#xA;     &lt;li&gt;Coordination point for all other cluster components&lt;/li&gt; &#xA;     &lt;li&gt;Protect critical cluster state with Paxos&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Manager &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregates real-time metrics (throughput, disk usage, etc.)&lt;/li&gt; &#xA;     &lt;li&gt;Host for pluggable management functions&lt;/li&gt; &#xA;     &lt;li&gt;1 active, 1+ standby per cluster&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OSD (Object Storage Daemon) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Stores data on an HDD or SSD&lt;/li&gt; &#xA;     &lt;li&gt;Services client IO requests &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are &#34;Placement Groups&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in the detail the following: Objects -&amp;gt; Pool -&amp;gt; Placement Groups -&amp;gt; OSDs&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OMAP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a metadata server? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Packer&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Packer? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In general, Packer automates machine images creation. It allows you to focus on configuration prior to deployment while making the images. This allows you start the instances much faster in most cases. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer follows a &#34;configuration-&amp;gt;deployment&#34; model or &#34;deployment-&amp;gt;configuration&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A configuration-&amp;gt;deployment which has some advantages like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Deployment Speed - you configure once prior to deployment instead of configuring every time you deploy. This allows you to start instances/services much quicker.&lt;/li&gt; &lt;li&gt;More immutable infrastructure - with configuration-&amp;gt;deployment it&#39;s not likely to have very different deployments since most of the configuration is done prior to the deployment. Issues like dependencies errors are handled/discovered prior to deployment in this model. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Certificates&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a way to prepare for a certain exam this is the section for you. Here you&#39;ll find a list of certificates, each references to a separate file with focused questions that will help you to prepare to the exam. Good luck :)&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-cloud-practitioner.md&#34;&gt;Cloud Practitioner&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-solutions-architect-associate.md&#34;&gt;Solutions Architect Associate&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/azure-fundamentals-az-900.md&#34;&gt;AZ-900&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/cka.md&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other DevOps Projects&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/howtheydevops&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/how_they_devops.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_resources.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/infraverse&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/infraverse.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all of our amazing &lt;a href=&#34;https://github.com/bregman-arie/devops-exercises/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt; &#xA;&lt;p&gt;Logos credits can be found &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/credits.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>