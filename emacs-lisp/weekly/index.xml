<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-03T01:42:17Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>konrad1977/flyover</title>
    <updated>2025-08-03T01:42:17Z</updated>
    <id>tag:github.com,2025-08-03:/konrad1977/flyover</id>
    <link href="https://github.com/konrad1977/flyover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A beautiful inline overlay for Emacs (Flycheck | Flymake)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flyover&lt;/h1&gt; &#xA;&lt;p&gt;‚ù§Ô∏è &lt;a href=&#34;https://github.com/sponsors/konrad1977&#34;&gt;Please sponsor me if you like this package&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://melpa.org/#/flyover&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/flyover-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/flyover_logo.png&#34; alt=&#34;Flyover logo&#34; height=&#34;300&#34; width=&#34;300&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;A modern, aesthetic overlay display for &lt;em&gt;Flycheck&lt;/em&gt; and &lt;em&gt;Flymake&lt;/em&gt; in Emacs. Flyover is a full featured package with tons of features for you to customize.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üé® Beautiful, customizable overlays for error display and theme aware&lt;/li&gt; &#xA; &lt;li&gt;üö¶ Different styles for errors, warnings, and info messages&lt;/li&gt; &#xA; &lt;li&gt;üîÑ Real-time overlay updates while editing&lt;/li&gt; &#xA; &lt;li&gt;üí° Smart positioning and formatting of error messages&lt;/li&gt; &#xA; &lt;li&gt;üéØ Efficient overlay management&lt;/li&gt; &#xA; &lt;li&gt;üìù Markdown-style syntax highlighting in messages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/overlay_1.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/overlay_2.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;flyover.el&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add to your load path:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;load-path &#34;/path/to/flyover&#34;)&#xA;(require &#39;flyover)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Enable flyover-mode globally&#xA;(add-hook &#39;flycheck-mode-hook #&#39;flyover-mode)&#xA;&#xA;;; Configure which error levels to display&#xA;;; Possible values: error, warning, info&#xA;(setq flyover-levels &#39;(error warning info))  ; Show all levels&#xA;;; (setq flyover-levels &#39;(error warning))    ; Show only errors and warnings&#xA;;; (setq flyover-levels &#39;(error))            ; Show only errors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Theme Integration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Use theme colors for error/warning/info faces&#xA;(setq flyover-use-theme-colors t)&#xA;&#xA;;; Adjust background lightness (lower values = darker)&#xA;(setq flyover-background-lightness 45)&#xA;&#xA;;; Make icon background darker than foreground&#xA;(setq flyover-percent-darker 40)&#xA;&#xA;(setq flyover-text-tint &#39;lighter) ;; or &#39;darker or nil&#xA;&#xA;;; &#34;Percentage to lighten or darken the text when tinting is enabled.&#34;&#xA;(setq flyover-text-tint-percent 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing Faces&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the appearance of overlays by modifying these faces:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(custom-set-faces&#xA; &#39;(flyover-error&#xA;   ((t :background &#34;#453246&#34;&#xA;       :foreground &#34;#ea8faa&#34;&#xA;       :height 0.9&#xA;       :weight normal)))&#xA; &#xA; &#39;(flyover-warning&#xA;   ((t :background &#34;#331100&#34;&#xA;       :foreground &#34;#DCA561&#34;&#xA;       :height 0.9&#xA;       :weight normal)))&#xA; &#xA; &#39;(flyover-info&#xA;   ((t :background &#34;#374243&#34;&#xA;       :foreground &#34;#a8e3a9&#34;&#xA;       :height 0.9&#xA;       :weight normal))))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Once enabled, &lt;code&gt;flyover&lt;/code&gt; will automatically display error messages as overlays below the corresponding line. The overlays will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Show errors in red with appropriate background&lt;/li&gt; &#xA; &lt;li&gt;Display warnings in yellow/orange&lt;/li&gt; &#xA; &lt;li&gt;Show information messages in green&lt;/li&gt; &#xA; &lt;li&gt;Highlight code snippets and symbols in messages&lt;/li&gt; &#xA; &lt;li&gt;Update in real-time as you type&lt;/li&gt; &#xA; &lt;li&gt;Clear automatically when errors are fixed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Checker Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Choose which checkers to use (flycheck, flymake, or both)&#xA;(setq flyover-checkers &#39;(flycheck flymake))&#xA;&#xA;;; Enable debug messages&#xA;(setq flyover-debug nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optimization settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Time in seconds to wait before checking and displaying errors after a change&#xA;(setq flyover-debounce-interval 0.2) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Positioning settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Number of lines below the error line to display the overlay&#xA;;; Default is 1 (next line), set to 0 for same line, 2 for two lines below, etc.&#xA;(setq flyover-line-position-offset 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Message wrapping settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Enable wrapping of long error messages across multiple lines&#xA;(setq flyover-wrap-messages t)&#xA;&#xA;;; Maximum length of each line when wrapping messages&#xA;(setq flyover-max-line-length 80)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/flycheck_overlay_multiline.png&#34; alt=&#34;Display text on multiple lines&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Flycheck Overlay Icons&lt;/h2&gt; &#xA;&lt;p&gt;You can customize the icons used for different types of Flycheck messages in the overlay display. These settings allow you to define custom icons for information, warning, and error messages.&lt;/p&gt; &#xA;&lt;h3&gt;Icon settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;;; Icons&#xA;(setq flyover-info-icon &#34;üõà&#34;)&#xA;(setq flyover-warning-icon &#34;‚ö†&#34;)&#xA;(setq flyover-error-icon &#34;‚úò&#34;)&#xA;&#xA;;;; Icon padding&#xA;&#xA;;;; You might want to adjust this setting if you icons are not centererd or if you more or less space.fs&#xA;(setq flyover-icon-left-padding 0.9)&#xA;(setq flyover-icon-right-padding 0.9)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing Error Indicators&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the appearance of the error indicators using various line and arrow styles through the &lt;code&gt;flyover-virtual-line-type&lt;/code&gt; variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(setq flyover-virtual-line-type &#39;curved-dotted-arrow)&#xA;&#xA;;;; Overide virtual-line-type with your own&#xA;(setq flyover-virtual-line-icon &#34;‚ï∞‚îÄ‚îÄ&#34;) ;;; default its nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Style Name&lt;/th&gt; &#xA;   &lt;th&gt;Display&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No indicator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;line-no-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îî‚îÄ‚îÄ&lt;/td&gt; &#xA;   &lt;td&gt;Straight line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curved-line-no-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ï∞‚îÄ‚îÄ&lt;/td&gt; &#xA;   &lt;td&gt;Curved line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;double-line-no-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ïö‚ïê‚ïê&lt;/td&gt; &#xA;   &lt;td&gt;Double line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bol&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îó‚îÅ‚îÅ&lt;/td&gt; &#xA;   &lt;td&gt;Bold line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotted-line-no-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îî‚îà‚îà&lt;/td&gt; &#xA;   &lt;td&gt;Dotted line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;straight-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îî‚îÄ‚îÄ‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Straight line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;double-line-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ïö‚ïê‚ïê‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Double line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bold-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îó‚îÅ‚îÅ‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Bold line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotted-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚îî‚îà‚îà‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Dotted line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curved-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ï∞‚îÄ‚îÄ‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Curved line with arrow (default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curved-bold-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ï∞‚îÅ‚îÅ‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Curved bold line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curved-double-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ï∞‚ïê‚ïê‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Curved double line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curved-dotted-arrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ï∞‚îà‚îà‚ñ∫&lt;/td&gt; &#xA;   &lt;td&gt;Curved dotted line with arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Visibility settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;;; Hide checker name for a cleaner UI&#xA;(setq flyover-hide-checker-name t) &#xA;&#xA;;;; show at end of the line instead.&#xA;(setq flyover-show-at-eol t) &#xA;&#xA;;;; Hide overlay when cursor is at same line, good for show-at-eol.&#xA;(setq flyover-hide-when-cursor-is-on-same-line t) &#xA;&#xA;;;; Show an arrow (or icon of your choice) before the error to highlight the error a bit more.&#xA;(setq flyover-show-virtual-line t)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/flycheck_hide_overlay_cursor.gif&#34; alt=&#34;Gif of showing hide cursor is on same line&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Show or hide checker name&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/checker_name.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/no_checker_name.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Show under or after the faulty code&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/eol.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;img src=&#34;https://github.com/konrad1977/flycheck-overlay/raw/main/screenshots/under.png&#34; alt=&#34;Screenshot of overlay-usage for Emacs.&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The package includes comprehensive tests for the message wrapping functionality:&lt;/p&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run core wrapping tests (no dependencies required)&#xA;emacs -batch -l test-wrapping.el&#xA;&#xA;# Run full test suite (requires flycheck)&#xA;emacs -batch -l flyover.el -l flycheck-overlay-test.el -f ert-run-tests-batch-and-exit&#xA;&#xA;# Interactive testing&#xA;# In Emacs: M-x load-file RET flyover-test.el RET&#xA;# Then: M-x flyover-run-tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Test Coverage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Message wrapping with various lengths&lt;/li&gt; &#xA; &lt;li&gt;Multi-line display functionality&lt;/li&gt; &#xA; &lt;li&gt;Line position offset behavior&lt;/li&gt; &#xA; &lt;li&gt;Edge cases (empty messages, single words, exact lengths)&lt;/li&gt; &#xA; &lt;li&gt;Integration with flycheck error objects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Add tests for new functionality in &lt;code&gt;flyover-test.el&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some amazing feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to the Flycheck team for the excellent error checking framework&lt;/li&gt; &#xA; &lt;li&gt;Inspired by various overlay-based error display implementations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Mikael Konradsson &lt;a href=&#34;mailto:mikael.konradsson@outlook.com&#34;&gt;mikael.konradsson@outlook.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>