<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-30T01:40:51Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>awth13/org-appear</title>
    <updated>2024-06-30T01:40:51Z</updated>
    <id>tag:github.com,2024-06-30:/awth13/org-appear</id>
    <link href="https://github.com/awth13/org-appear" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Toggle visibility of hidden Org mode element parts upon entering and leaving an element&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[[https://melpa.org/#/org-appear][file:https://melpa.org/packages/org-appear-badge.svg]] [[https://github.com/awth13/org-appear/actions/workflows/check.yml][file:https://github.com/awth13/org-appear/actions/workflows/check.yml/badge.svg?branch=master]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;org-appear&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make invisible parts of Org elements appear visible.&lt;/p&gt; &#xA;&lt;p&gt;** About&lt;/p&gt; &#xA;&lt;p&gt;[[https://orgmode.org/][Org mode]] provides a way to toggle visibility of hidden elements such as emphasis markers, links, etc. by customising specific variables, e.g., &lt;del&gt;org-hide-emphasis-markers&lt;/del&gt;. However, it is currently not possible to do this interactively and on an element-by-element basis. This package, inspired by [[https://github.com/io12/org-fragtog][org-fragtog]], enables automatic visibility toggling depending on cursor position. Hidden element parts appear when the cursor enters an element and disappear when it leaves.&lt;/p&gt; &#xA;&lt;p&gt;[[file:demo.gif]]&lt;/p&gt; &#xA;&lt;p&gt;** Installation&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to install &lt;del&gt;org-appear&lt;/del&gt; is from MELPA, using your favourite package manager or &lt;del&gt;package-install&lt;/del&gt;. For Guix users, &lt;del&gt;org-appear&lt;/del&gt; is also available in the official GNU Guix channel.&lt;/p&gt; &#xA;&lt;p&gt;** Manual installation&lt;/p&gt; &#xA;&lt;p&gt;With [[https://github.com/raxod502/straight.el][straight.el]], simply put the following line in &lt;del&gt;init.el&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp&lt;/p&gt; &#xA;&lt;p&gt;(straight-use-package &#39;(org-appear :type git :host github :repo &#34;awth13/org-appear&#34;))&lt;/p&gt; &#xA;&lt;p&gt;#+end_src&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, git clone this repository and point Emacs to it using the &lt;del&gt;:load-path&lt;/del&gt; keyword of &lt;del&gt;use-package&lt;/del&gt; or &lt;del&gt;require&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;** Usage&lt;/p&gt; &#xA;&lt;p&gt;The package can be enabled interactively or automatically on Org mode start-up:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp&lt;/p&gt; &#xA;&lt;p&gt;(add-hook &#39;org-mode-hook &#39;org-appear-mode)&lt;/p&gt; &#xA;&lt;p&gt;#+end_src&lt;/p&gt; &#xA;&lt;p&gt;By default, toggling is instantaneous and only emphasis markers are toggled. The following custom variables can be changed to enable additional functionality.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;org-appear-autoemphasis :: if non-nil and &lt;del&gt;org-hide-emphasis-markers&lt;/del&gt; is on, toggle emphasis markers&lt;/li&gt; &#xA; &lt;li&gt;org-appear-autolinks :: if non-nil and &lt;del&gt;org-link-descriptive&lt;/del&gt; is on, toggle links&lt;/li&gt; &#xA; &lt;li&gt;org-appear-autosubmarkers :: if non-nil and &lt;del&gt;org-pretty-entities&lt;/del&gt; is on, toggle subscripts and superscripts&lt;/li&gt; &#xA; &lt;li&gt;org-appear-autoentities :: if non-nil and &lt;del&gt;org-pretty-entities&lt;/del&gt; is on, toggle Org entitites&lt;/li&gt; &#xA; &lt;li&gt;org-appear-autokeywords :: if non-nil and &lt;del&gt;org-hidden-keywords&lt;/del&gt; is on, toggle keywords in &lt;del&gt;org-hidden-keywords&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;org-appear-inside-latex :: if non-nil, toggle entities and sub/superscripts in LaTeX fragments&lt;/li&gt; &#xA; &lt;li&gt;org-appear-delay :: seconds of delay before toggling&lt;/li&gt; &#xA; &lt;li&gt;org-appear-trigger :: when to toggle elements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If Org mode custom variables that control visibility of elements are configured to show hidden parts, the respective &lt;del&gt;org-appear&lt;/del&gt; settings do not have an effect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;org-appear-trigger&lt;/del&gt; can be set to &lt;del&gt;always&lt;/del&gt;, &lt;del&gt;on-change&lt;/del&gt;, or &lt;del&gt;manual&lt;/del&gt;. With &lt;del&gt;on-change&lt;/del&gt;, elements will be toggled only when the buffer is modified or on mouse click. This option disables delayed toggling. With &lt;del&gt;manual&lt;/del&gt;, toggling must be enabled by calling &lt;del&gt;org-appear-manual-start&lt;/del&gt;. &lt;del&gt;org-appear-manual-stop&lt;/del&gt; is used to disable toggling with this option.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;manual&lt;/del&gt; option is useful for, e.g., integrating &lt;del&gt;org-appear&lt;/del&gt; with &lt;del&gt;evil-mode&lt;/del&gt;. Below is an example configuration for toggling elements in Insert mode only. Note that &lt;del&gt;org-appear&lt;/del&gt; expects to be enabled in Org mode buffers only, which is why the example attaches &lt;del&gt;evil-mode&lt;/del&gt; hooks to the Org mode startup hook.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp&lt;/p&gt; &#xA;&lt;p&gt;(setq org-appear-trigger &#39;manual) (add-hook &#39;org-mode-hook (lambda () (add-hook &#39;evil-insert-state-entry-hook #&#39;org-appear-manual-start nil t) (add-hook &#39;evil-insert-state-exit-hook #&#39;org-appear-manual-stop nil t)))&lt;/p&gt; &#xA;&lt;p&gt;#+end_src&lt;/p&gt; &#xA;&lt;p&gt;** Acknowledgements&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to [[https://github.com/SPFabGerman][SPFabGerman]], who came up with the idea and extended &lt;del&gt;org-appear&lt;/del&gt; beyond emphasis marker toggling, and [[https://github.com/daviwil][daviwil]], who proposed the &lt;del&gt;org-appear&lt;/del&gt; name.&lt;/p&gt; &#xA;&lt;p&gt;** Known Issues&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;org-appear&lt;/del&gt; does not handle overlapping emphasis elements correctly, e.g.,&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example &lt;em&gt;Why would someone /nest emphasis&lt;/em&gt; like that?/ #+end_example&lt;/p&gt; &#xA;&lt;p&gt;In the above example, &lt;del&gt;org-appear&lt;/del&gt; can only detect and reveal the first (bold) element. This is due to the reliance on the &lt;del&gt;org-element&lt;/del&gt; API -- &lt;del&gt;org-element-context&lt;/del&gt; in particular -- which also fails to detect the second (italic) element.&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;org-appear&lt;/del&gt; will fail to detect elements nested inside certain other elements, such as comments or document titles.&lt;/p&gt;</summary>
  </entry>
</feed>