<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-11T01:52:21Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iqbalansari/restart-emacs</title>
    <updated>2023-06-11T01:52:21Z</updated>
    <id>tag:github.com,2023-06-11:/iqbalansari/restart-emacs</id>
    <link href="https://github.com/iqbalansari/restart-emacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple emacs package to restart emacs from within emacs&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Restart Emacs&lt;/p&gt; &lt;p&gt;[[http://melpa.org/#/restart-emacs][file:http://melpa.org/packages/restart-emacs-badge.svg]] [[http://stable.melpa.org/#/restart-emacs][file:http://stable.melpa.org/packages/restart-emacs-badge.svg]] [[https://travis-ci.org/iqbalansari/restart-emacs][https://travis-ci.org/iqbalansari/restart-emacs.svg?branch=master]] [[http://www.gnu.org/licenses/gpl-3.0.html][http://img.shields.io/:license-gpl3-blue.svg]] [[http://makeapullrequest.com][file:https://img.shields.io/badge/PRs-welcome-brightgreen.svg]]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Table of contents :TOC_3_gh:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#restart-emacs][Restart Emacs]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#what-is-this][What is this?]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#installation][Installation]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#elpa][ELPA]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#el-get][El-get]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#usage][Usage]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#compatibility][Compatibility]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#restarting-gui-emacs][Restarting GUI Emacs]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#restarting-emacs-running-in-a-terminal][Restarting Emacs running in a terminal]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#restarting-emacs-daemons][Restarting Emacs daemons]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#contributing][Contributing]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#known-issues][Known Issues]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#command-line-arguments-are-not-preserved][Command line arguments are not preserved]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#the-restarted-daemon-quits-as-soon-as-the-all-the-visible-frames-are-killed][The restarted daemon quits as soon as the all the visible frames are killed]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** What is this? This is a simple package to restart Emacs for within Emacs. Inspired by [[http://emacs.stackexchange.com/questions/5428/restart-emacs-from-within-emacs][this]] stackoverflow question.&lt;/p&gt; &#xA;&lt;p&gt;** Installation *** ELPA &lt;del&gt;restart-emacs&lt;/del&gt; is available on [[http://melpa.org/#/restart-emacs][MELPA]] and [[http://stable.melpa.org/#/restart-emacs][MELPA Stable]]. Please follow the instructions on MELPA [[http://melpa.org/#/getting-started][website]] to enable it, if you haven&#39;t already.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You can then install ~restart-emacs~ from the [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Menu.html][package menu]]. Alternatively install it by doing the following&#xA;&#xA;Refresh the package index&#xA;#+BEGIN_QUOTE&#xA;M-x package-refresh-contents RET&#xA;#+END_QUOTE&#xA;&#xA;And then install it by doing&#xA;#+BEGIN_QUOTE&#xA;M-x package-install RET restart-emacs&#xA;#+END_QUOTE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** El-get &lt;del&gt;restart-emacs&lt;/del&gt; can also be installed using &lt;del&gt;el-get&lt;/del&gt;. Assuming you have latest version of el-get installing it by doing something similar to #+BEGIN_QUOTE M-x el-get-install RET restart-emacs #+END_QUOTE&lt;/p&gt; &#xA;&lt;p&gt;** Usage It offers a command &lt;del&gt;restart-emacs&lt;/del&gt; which kills current Emacs session and starts a new session.&lt;/p&gt; &#xA;&lt;p&gt;Additional arguments to be passed to the new instance can be specified using prefix arguments&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with a single &lt;del&gt;universal-argument&lt;/del&gt; (=C-u=) Emacs is restarted with &lt;del&gt;--debug-init&lt;/del&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;with two &lt;del&gt;universal-argument&lt;/del&gt; (=C-u= =C-u=) Emacs is restarted with &lt;del&gt;-Q&lt;/del&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;with three &lt;del&gt;universal-argument&lt;/del&gt; (=C-u= =C-u= =C-u=) the user is prompted for the arguments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;del&gt;restart-emacs&lt;/del&gt; can restore frames on restart, right this is experimental and disabled by default to enable it set &lt;del&gt;restart-emacs-restore-frames&lt;/del&gt; to &lt;del&gt;t&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is also a second command &lt;del&gt;restart-emacs-start-new-emacs&lt;/del&gt; which starts a new session of Emacs without killing the current one. It takes the same arguments as &lt;del&gt;restart-emacs&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;** Compatibility *** Restarting GUI Emacs Restarting graphical Emacs should work on any UNIXy system with &lt;del&gt;sh&lt;/del&gt; and on Windows.&lt;/p&gt; &#xA;&lt;p&gt;*** Restarting Emacs running in a terminal This requires that the shell from which Emacs was launched supports job control. This has been tested to work on &lt;del&gt;sh&lt;/del&gt;, &lt;del&gt;bash&lt;/del&gt;, &lt;del&gt;zsh&lt;/del&gt;, &lt;del&gt;fish&lt;/del&gt;, &lt;del&gt;csh&lt;/del&gt; and &lt;del&gt;tcsh&lt;/del&gt;, however this does not work on Windows.&lt;/p&gt; &#xA;&lt;p&gt;*** Restarting Emacs daemons The latest version of &lt;del&gt;restart-emacs&lt;/del&gt; can now restart Emacs daemons. The the frames are restored once the daemon restarts using &lt;del&gt;desktop-mode&lt;/del&gt;. However since &lt;del&gt;desktop-mode&lt;/del&gt; learned to restore frames only Emacs version 24.4 onwards the daemons can be restarted only on Emacs versions 24.4 and later.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Another issue with restarting Emacs daemons is that the frames open in a&#xA;terminal cannot be recreated on restart, instead the ~restart-emacs~ would&#xA;write a notification on the terminal with the instructions to reconnect, any&#xA;suggestions to improve this are welcome.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** Contributing Code as well as documentation contributions are welcome.&lt;/p&gt; &#xA;&lt;p&gt;[[https://github.com/cask/cask][Cask]] is used to manage project dependencies so make sure you have it installed. To run the tests you need to install the dependencies by running the following&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC sh cask install #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;After the installation completes you can run the tests by running the following command&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC sh cask exec ert-runner #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Known Issues *** Command line arguments are not preserved The new Emacs instance does not use the same command line arguments as the running instance. See [[https://github.com/iqbalansari/restart-emacs/issues/11][#11]] for more details *** The restarted daemon quits as soon as the all the visible frames are killed See &lt;a href=&#34;https://github.com/iqbalansari/restart-emacs/issues/10#issuecomment-307565719&#34;&gt;https://github.com/iqbalansari/restart-emacs/issues/10#issuecomment-307565719&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>emacsorphanage/git-gutter</title>
    <updated>2023-06-11T01:52:21Z</updated>
    <id>tag:github.com,2023-06-11:/emacsorphanage/git-gutter</id>
    <link href="https://github.com/emacsorphanage/git-gutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs port of GitGutter which is Sublime Text Plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;git-gutter.el&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://melpa.org/#/git-gutter&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/git-gutter-badge.svg?sanitize=true&#34; alt=&#34;melpa badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/git-gutter&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/git-gutter-badge.svg?sanitize=true&#34; alt=&#34;melpa stable badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emacsorphanage/git-gutter/actions&#34;&gt;&lt;img src=&#34;https://github.com/emacsorphanage/git-gutter/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;gh actions badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; is an Emacs port of the Sublime Text plugin &lt;a href=&#34;https://github.com/jisaacks/GitGutter&#34;&gt;GitGutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Asynchronous updating&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/#live-updating&#34;&gt;Live updating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/#backends&#34;&gt;Support multiple VCS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support Tramp&lt;/li&gt; &#xA; &lt;li&gt;Work without &lt;code&gt;vc-mode&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/image/git-gutter1.png&#34; alt=&#34;Screenshot of git-gutter.el&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Emacs 25.1 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;(1.7.0 or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;git-gutter.el vs &lt;a href=&#34;https://github.com/syohex/emacs-git-gutter-fringe&#34;&gt;git-gutter-fringe.el&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;git-gutter.el&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;git-gutter-fringe.el&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Work in tty frame&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OK&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;unsupported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Work with linum-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OK(experimental)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Show on right side&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;unsupported&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;configurable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;more configurable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;less configurable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;git-gutter.el&lt;/code&gt; from &lt;a href=&#34;http://melpa.org&#34;&gt;MELPA&lt;/a&gt; with package.el (&lt;code&gt;M-x package-install git-gutter&lt;/code&gt;), with &lt;a href=&#34;https://github.com/dimitri/el-get&#34;&gt;el-get&lt;/a&gt;, or with another package manager of your choice&lt;/p&gt; &#xA;&lt;h2&gt;Global Minor Mode and Minor Mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; provides a global minor-mode(&lt;code&gt;global-git-gutter-mode&lt;/code&gt;) and minor-mode(&lt;code&gt;git-gutter-mode&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you want to use &lt;code&gt;git-gutter&lt;/code&gt; for files in git repository. You add following s-exp in your configuration file(&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt; or &lt;code&gt;~/.emacs&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(global-git-gutter-mode +1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other case, you want to use &lt;code&gt;git-gutter&lt;/code&gt; for some files, you can use &lt;code&gt;git-gutter-mode&lt;/code&gt;. Following example of enabling &lt;code&gt;git-gutter&lt;/code&gt; for some mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(add-hook &#39;ruby-mode-hook &#39;git-gutter-mode)&#xA;(add-hook &#39;python-mode-hook &#39;git-gutter-mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; provides following commands. &lt;strong&gt;Obsoleted interfaces will be removed when 1.0 released.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:next-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Jump to next hunk&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:previous-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Jump to previous hunk&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:end-of-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Move to end of current hunk&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:mark-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Mark current hunk.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:set-start-revision&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Set the start revision from which git-gutter performs the diffs.&lt;/p&gt; &#xA;&lt;p&gt;You can also set the variable &lt;code&gt;git-gutter:start-revision&lt;/code&gt; as a directory-local variable.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:popup-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Popup current diff hunk(alias &lt;code&gt;git-gutter:popup-diff&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter:next-hunk&lt;/code&gt; and &lt;code&gt;git-gutter:previous-hunk&lt;/code&gt; update content of buffer popuped by &lt;code&gt;git-gutter:popup-diff&lt;/code&gt; to current hunk.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:stage-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Stage current hunk. You can use this command like &lt;code&gt;git add -p&lt;/code&gt;. This command is supported only for &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:revert-hunk&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Revert current hunk&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show changes from last commit or Update change information. Please execute this command if diff information is not be updated.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:linum-setup&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Setup for working with &lt;code&gt;linum-mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;git-gutter:update-all-windows&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Update git-gutter information of buffers in all visible window.&lt;/p&gt; &#xA;&lt;h2&gt;Sample Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(require &#39;git-gutter)&#xA;&#xA;;; If you enable global minor mode&#xA;(global-git-gutter-mode t)&#xA;&#xA;;; If you would like to use git-gutter.el and linum-mode&#xA;(git-gutter:linum-setup)&#xA;&#xA;;; If you enable git-gutter-mode for some modes&#xA;(add-hook &#39;ruby-mode-hook &#39;git-gutter-mode)&#xA;&#xA;(global-set-key (kbd &#34;C-x C-g&#34;) &#39;git-gutter)&#xA;(global-set-key (kbd &#34;C-x v =&#34;) &#39;git-gutter:popup-hunk)&#xA;&#xA;;; Jump to next/previous hunk&#xA;(global-set-key (kbd &#34;C-x p&#34;) &#39;git-gutter:previous-hunk)&#xA;(global-set-key (kbd &#34;C-x n&#34;) &#39;git-gutter:next-hunk)&#xA;&#xA;;; Stage current hunk&#xA;(global-set-key (kbd &#34;C-x v s&#34;) &#39;git-gutter:stage-hunk)&#xA;&#xA;;; Revert current hunk&#xA;(global-set-key (kbd &#34;C-x v r&#34;) &#39;git-gutter:revert-hunk)&#xA;&#xA;;; Mark current hunk&#xA;(global-set-key (kbd &#34;C-x v SPC&#34;) #&#39;git-gutter:mark-hunk)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory-local variables&lt;/h2&gt; &#xA;&lt;h3&gt;Set starting revision for diffs&lt;/h3&gt; &#xA;&lt;p&gt;Using directory-local variables, you can set the start revision for diffs for any file in the current directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;;; .dir-locals.el&#xA;((prog-mode . ((git-gutter:start-revision . &#34;my-branch&#34;))))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;h3&gt;Live updating&lt;/h3&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;git-gutter:update-interval&lt;/code&gt; seconds larger than 0, &lt;code&gt;git-gutter&lt;/code&gt; updates diff information in real-time by idle timer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:update-interval 2))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can stop timer by &lt;code&gt;git-gutter:cancel-update-timer&lt;/code&gt; and starts by &lt;code&gt;git-gutter:start-update-timer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Look and feel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/image/git-gutter-multichar.png&#34; alt=&#34;Screenshot of multiple characters in gutter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change the signs and those faces.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:modified-sign &#34;  &#34;) ;; two space&#xA; &#39;(git-gutter:added-sign &#34;++&#34;)    ;; multiple character is OK&#xA; &#39;(git-gutter:deleted-sign &#34;--&#34;))&#xA;&#xA;(set-face-background &#39;git-gutter:modified &#34;purple&#34;) ;; background color&#xA;(set-face-foreground &#39;git-gutter:added &#34;green&#34;)&#xA;(set-face-foreground &#39;git-gutter:deleted &#34;red&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change minor-mode name in mode-line to set &lt;code&gt;git-gutter:lighter&lt;/code&gt;. Default is &#34; GitGutter&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; first character should be a space&#xA;(custom-set-variables&#xA; &#39;(git-gutter:lighter &#34; GG&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using full width characters&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/image/git-gutter-fullwidth.png&#34; alt=&#34;Screenshot of using full-width character as diff sign&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Emacs has &lt;code&gt;char-width&lt;/code&gt; function which returns character width. &lt;code&gt;git-gutter.el&lt;/code&gt; uses it for calculating character length of the signs. But &lt;code&gt;char-width&lt;/code&gt; does not work for some full-width characters. So you should explicitly specify window width, if you use full-width character.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:window-width 2)&#xA; &#39;(git-gutter:modified-sign &#34;☁&#34;)&#xA; &#39;(git-gutter:added-sign &#34;☀&#34;)&#xA; &#39;(git-gutter:deleted-sign &#34;☂&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Backends&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; supports following version control systems&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;(1.7.0 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mercurial-scm.org/&#34;&gt;Mercurial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://subversion.apache.org/&#34;&gt;Subversion&lt;/a&gt;(1.8 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bazaar.canonical.com/en/&#34;&gt;Bazaar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can set backends which &lt;code&gt;git-gutter.el&lt;/code&gt; will be used. Default value of &lt;code&gt;git-gutter:handled-backends&lt;/code&gt; is &lt;code&gt;&#39;(git)&lt;/code&gt;. If you want to use &lt;code&gt;git-gutter.el&lt;/code&gt; for other VCS, please change value of &lt;code&gt;git-gutter:handled-backends&lt;/code&gt; as below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Use for &#39;Git&#39;(`git`), &#39;Mercurial&#39;(`hg`), &#39;Bazaar&#39;(`bzr`), and &#39;Subversion&#39;(`svn`) projects&#xA;(custom-set-variables&#xA; &#39;(git-gutter:handled-backends &#39;(git hg bzr svn)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updates hooks&lt;/h3&gt; &#xA;&lt;p&gt;diff information is updated at hooks in &lt;code&gt;git-gutter:update-hooks&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(add-to-list &#39;git-gutter:update-hooks &#39;focus-in-hook)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updates commands&lt;/h3&gt; &#xA;&lt;p&gt;diff information is updated after command in &lt;code&gt;git-gutter:update-commands&lt;/code&gt; executed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(add-to-list &#39;git-gutter:update-commands &#39;other-window)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disabled modes&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;global-git-gutter-mode&lt;/code&gt;, you may want some modes to disable &lt;code&gt;git-gutter-mode&lt;/code&gt;. You can make it by setting &lt;code&gt;git-gutter:disabled-modes&lt;/code&gt; to &lt;code&gt;non-nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; inactivate git-gutter-mode in asm-mode and image-mode&#xA;(custom-set-variables&#xA; &#39;(git-gutter:disabled-modes &#39;(asm-mode image-mode)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Show signs at gutter by visual lines&lt;/h3&gt; &#xA;&lt;p&gt;Emacs folds long line if &lt;code&gt;truncate-lines&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;git-gutter:visual-line&lt;/code&gt; is non-nil, &lt;code&gt;git-gutter&lt;/code&gt; puts sign by visual lines.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:visual-line t))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default bahavior is that signs are put by logical lines. value of &lt;code&gt;git-gutter:visual-line&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Show Unchanged Information&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/image/git-gutter-unchanged.png&#34; alt=&#34;Screenshot of highlighting unchanged lines&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; can view unchanged information by setting &lt;code&gt;git-gutter:unchanged-sign&lt;/code&gt;. Like following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:unchanged-sign &#34; &#34;))&#xA;(set-face-background &#39;git-gutter:unchanged &#34;yellow&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default value of &lt;code&gt;git-gutter:unchanged-sign&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Show a separator column&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emacsorphanage/git-gutter/master/image/git-gutter-separator.png&#34; alt=&#34;Screenshot of showing separator between buffer and gutter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; can display an additional separator character at the right of the changed signs. This is mostly useful when running emacs in a console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:separator-sign &#34;|&#34;))&#xA;(set-face-foreground &#39;git-gutter:separator &#34;yellow&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default value of &lt;code&gt;git-gutter:separator-sign&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please set &lt;code&gt;git-gutter:always-show-separator&lt;/code&gt; to non-nil, if you want to show separator always.&lt;/p&gt; &#xA;&lt;h3&gt;Hide gutter if there are no changes&lt;/h3&gt; &#xA;&lt;p&gt;Hide gutter when there are no changes if &lt;code&gt;git-gutter:hide-gutter&lt;/code&gt; is non-nil. (Default is nil)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(custom-set-variables&#xA; &#39;(git-gutter:hide-gutter t))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pass option to &#39;git diff&#39; command&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;git diff&lt;/code&gt; option to set &lt;code&gt;git-gutter:diff-option&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; ignore all spaces&#xA;(custom-set-variables&#xA; &#39;(git-gutter:diff-option &#34;-w&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Don&#39;t ask whether commit/revert or not&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; always asks you whether commit/revert or not. If you don&#39;t want, please set &lt;code&gt;git-gutter:ask-p&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Don&#39;t ask me!!&#xA;(custom-set-variables&#xA; &#39;(git-gutter:ask-p nil))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Log/Message Level&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Don&#39;t need log/message.&#xA;(custom-set-variables&#xA; &#39;(git-gutter:verbosity 0))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default value is 4(&lt;code&gt;0&lt;/code&gt; is lowest, &lt;code&gt;4&lt;/code&gt; is highest).&lt;/p&gt; &#xA;&lt;h3&gt;Run hook&lt;/h3&gt; &#xA;&lt;p&gt;Run hook &lt;code&gt;git-gutter-mode-on-hook&lt;/code&gt; when &lt;code&gt;git-gutter-mode&lt;/code&gt; is turn on, and run hook &lt;code&gt;git-gutter-mode-off-hook&lt;/code&gt; when &lt;code&gt;git-gutter-mode&lt;/code&gt; is turn off.&lt;/p&gt; &#xA;&lt;h2&gt;Statistic&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-gutter.el&lt;/code&gt; provides some statistic API. This is useful for knowing how much code you changed etc. To display them in mode-line is also useful.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;(git-gutter:buffer-hunks)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Count unstaged hunks in current buffer.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;(git-gutter:all-hunks)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Count unstaged hunks in all buffers&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;(git-gutter:statistic)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Return statistic unstaged hunks in current buffer. Return value is dot-list. First element is total added lines, second element is total deleted lines.&lt;/p&gt; &#xA;&lt;h2&gt;See Also&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/jisaacks/GitGutter&#34;&gt;GitGutter&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;GitGutter is Sublime Text plugin.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/airblade/vim-gitgutter&#34;&gt;vim-gitgutter&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Vim version of GitGutter&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/dgutov/diff-hl&#34;&gt;diff-hl&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;diff-hl&lt;/code&gt; is similar tool based on &lt;code&gt;vc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/nonsequitur/git-gutter-plus&#34;&gt;git-gutter-plus&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Fork of &lt;code&gt;git-gutter.el&lt;/code&gt;. Some features which are not provided &lt;code&gt;git-gutter.el&lt;/code&gt; provides. However git-gutter-plus updates diff information synchronously.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xiongtx/eros</title>
    <updated>2023-06-11T01:52:21Z</updated>
    <id>tag:github.com,2023-06-11:/xiongtx/eros</id>
    <link href="https://github.com/xiongtx/eros" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Evaluation Result OverlayS for Emacs Lisp.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://melpa.org/#/eros&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/eros-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL_3-green.svg?sanitize=true&#34; alt=&#34;License GPL 3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Eros&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;E&lt;/strong&gt;valuation &lt;strong&gt;R&lt;/strong&gt;esult &lt;strong&gt;O&lt;/strong&gt;verlay&lt;strong&gt;S&lt;/strong&gt; for Emacs Lisp.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xiongtx/eros/master/doc/overlay.png&#34; alt=&#34;Overlay&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install via &lt;a href=&#34;https://melpa.org/#/&#34;&gt;MELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For general information on installing Emacs packages, see the &lt;a href=&#34;https://www.emacswiki.org/emacs/InstallingPackages&#34;&gt;Emacs Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;In your init file, add the following to activate &lt;code&gt;eros-mode&lt;/code&gt; and see Emacs Lisp evaluation results as inline overlays.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(eros-mode 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;M-x eros-mode&lt;/code&gt; to turn the minor mode off, or call&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(eros-mode -1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The code is mostly taken from &lt;a href=&#34;https://github.com/clojure-emacs/cider&#34;&gt;CIDER&lt;/a&gt;, and the idea came from &lt;a href=&#34;http://endlessparentheses.com/eval-result-overlays-in-emacs-lisp.html&#34;&gt;Artur Malabarba&#39;s blog&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>