<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:44:45Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alphapapa/listen.el</title>
    <updated>2024-03-17T01:44:45Z</updated>
    <id>tag:github.com,2024-03-17:/alphapapa/listen.el</id>
    <link href="https://github.com/alphapapa/listen.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Audio/music player for Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+options: broken-links:t *:t num:1 toc:1 author:nil timestamp:nil #+title: listen.el #+export_file_name: listen.texi #+texinfo_dir_category: Emacs #+texinfo_dir_title: Listen: (listen) #+texinfo_dir_desc: Audio/Music player&lt;/p&gt; &#xA;&lt;p&gt;[[file:https:/elpa.gnu.org/packages/listen.html][https://elpa.gnu.org/packages/listen.svg]]&lt;/p&gt; &#xA;&lt;p&gt;This package aims to provide a simple audio/music player for Emacs. It should &#34;just work,&#34; with little-to-no configuration, have intuitive commands, and be easily extended and customized. (Contrast to setting up EMMS, or having to configure external players like MPD.) A Transient menu, under the command &lt;del&gt;listen&lt;/del&gt;, is the primary entry point.&lt;/p&gt; &#xA;&lt;p&gt;The only external dependency is VLC, which is currently the only player backend that is supported. (Other backends may easily be added; see library &lt;del&gt;listen-vlc&lt;/del&gt; for example.) Track metadata is read using EMMS&#39;s native Elisp metadata library, which has been imported into this package.&lt;/p&gt; &#xA;&lt;p&gt;Queues are provided as the means to play consecutive tracks, and they are shown in a &lt;del&gt;vtable&lt;/del&gt;-based view buffer. They are persisted between sessions using the &lt;del&gt;persist&lt;/del&gt; library, and they may be bookmarked.&lt;/p&gt; &#xA;&lt;p&gt;The primary interface to one&#39;s music library is through the filesystem, by selecting a file to play, or by adding files and directories to a queue. Although MPD is not required, support is provided for finding files from a local MPD server&#39;s library using MPD&#39;s metadata searching.&lt;/p&gt; &#xA;&lt;p&gt;A simple &#34;library&#34; view is provided that shows a list of files organized into a hierarchy by genre, date, artist, album, etc. (This will be made more configurable and useful in the future.)&lt;/p&gt; &#xA;&lt;p&gt;Note a silly limitation: a track may be present in a queue only once (but who would want to have a track more than once in a playlist).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contents :CONTENTS:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#screenshots][Screenshots]]&lt;/li&gt; &#xA; &lt;li&gt;[[#installation][Installation]]&lt;/li&gt; &#xA; &lt;li&gt;[[#configuration][Configuration]]&lt;/li&gt; &#xA; &lt;li&gt;[[#usage][Usage]]&lt;/li&gt; &#xA; &lt;li&gt;[[#changelog][Changelog]]&lt;/li&gt; &#xA; &lt;li&gt;[[#development][Development]] :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Screenshots&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[file:images/screenshot-modus-vivendi-tinted.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Requirements:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Emacs version 29.1 or later.&lt;/li&gt; &#xA; &lt;li&gt;[[https://www.videolan.org/vlc/][VLC]]: used to play audio.&lt;/li&gt; &#xA; &lt;li&gt;Optional: &lt;del&gt;ffprobe&lt;/del&gt; (part of [[https://ffmpeg.org/ffprobe.html][FFmpeg]]) is used to read tracks&#39; duration when available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** GNU ELPA&lt;/p&gt; &#xA;&lt;p&gt;Listen.el is published in [[http://elpa.gnu.org/][GNU ELPA]] as [[https://elpa.gnu.org/packages/listen.html][listen]], so it may be installed in Emacs with the command &lt;del&gt;M-x package-install RET listen RET&lt;/del&gt;. This is the recommended way to install Listen.el, as it will install the current stable release.&lt;/p&gt; &#xA;&lt;p&gt;The latest development build may be installed from [[https://elpa.gnu.org/devel/listen.html][ELPA-devel]] or from Git (see below).&lt;/p&gt; &#xA;&lt;p&gt;** Git&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;master&lt;/del&gt; branch of the Git repository is intended to be usable at all times; only minor bugs are expected to be found in it before a new stable release is made.&lt;/p&gt; &#xA;&lt;p&gt;To install, it is recommended to use [[https://github.com/quelpa/quelpa-use-package][quelpa-use-package]], like this (using [[https://github.com/alphapapa/unpackaged.el#upgrade-a-quelpa-use-package-forms-package][this helpful command]] for upgrading versions):&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src elisp ;; Install and load `quelpa-use-package&#39;. (package-install &#39;quelpa-use-package) (require &#39;quelpa-use-package)&lt;/p&gt; &#xA;&lt;p&gt;;; Install Listen. (use-package listen :quelpa (listen :fetcher github :repo &#34;alphapapa/listen.el&#34;)) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;One might also use systems like [[https://github.com/progfolio/elpaca][Elpaca]] or [[https://github.com/radian-software/straight.el][Straight]] (which is also used by [[https://github.com/doomemacs/doomemacs][DOOM]]), but the author cannot offer support for them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Listen is intended to work with little-to-no configuration. You can set the &lt;del&gt;listen-directory&lt;/del&gt; to the location of your music library if it&#39;s not at ~~/Music~. See &lt;del&gt;M-x customize-group RET listen RET&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage Use the command &lt;del&gt;listen&lt;/del&gt; to show the Transient menu. From there, it is--hopefully--self-explanatory. Please feel free to give feedback if it doesn&#39;t seem so. For more information, see the following sections.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;:CONTENTS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#queues][Queues]]&lt;/li&gt; &#xA; &lt;li&gt;[[#library][Library]]&lt;/li&gt; &#xA; &lt;li&gt;[[#players][Players]]&lt;/li&gt; &#xA; &lt;li&gt;[[#mode][Mode]]&lt;/li&gt; &#xA; &lt;li&gt;[[#tips][Tips]] :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Queues&lt;/p&gt; &#xA;&lt;p&gt;While &lt;del&gt;listen&lt;/del&gt; can simply play one track and stop, playing multiple tracks sequentially is provided by /queues/ (what other players may call /playlists/). A queue is a list of tracks, each of which is backed by a file on disk, and which may have associated metadata (provided by reading the file in Emacs with the &lt;del&gt;listen-info&lt;/del&gt; library, or from an external source, like an MPD server).&lt;/p&gt; &#xA;&lt;p&gt;Queues are automatically persisted to disk in the variable &lt;del&gt;listen-queues&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A new, empty queue may be made with the command &lt;del&gt;listen-queue-new&lt;/del&gt;, but it&#39;s usually more convenient to use a command that adds tracks to a queue and enter a new queue name.&lt;/p&gt; &#xA;&lt;p&gt;A queue&#39;s tracks may be de-duplicated using the command &lt;del&gt;listen-queue-deduplicate&lt;/del&gt;. Tracks that appear to have the same metadata (artist, album, and title, compared case-insensitively) are de-duplicated. Also, any tracks no longer backed by a file are removed.&lt;/p&gt; &#xA;&lt;p&gt;*** Adding tracks to a queue&lt;/p&gt; &#xA;&lt;p&gt;Tracks can be added to a queue from various sources using these commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files and directories: &lt;del&gt;listen-queue-add-files&lt;/del&gt;. Individual files may be chosen, or a directory may be, which will be searched recursively for tracks, which are added to the selected queue.&lt;/li&gt; &#xA; &lt;li&gt;From an MPD server: &lt;del&gt;listen-queue-add-from-mpd&lt;/del&gt;. An MPD search query will be read with completion, and matching tracks are added to the selected queue.&lt;/li&gt; &#xA; &lt;li&gt;From a playlist file: &lt;del&gt;listen-queue-add-from-playlist-file&lt;/del&gt;. The playlist file is read, and its tracks are added to the selected queue.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Queue buffer&lt;/p&gt; &#xA;&lt;p&gt;A queue may be shown in a buffer with the command &lt;del&gt;listen-queue&lt;/del&gt;, which shows its tracks in a [[info:vtable#Introduction][vtable]] with columns for metadata and filename.&lt;/p&gt; &#xA;&lt;p&gt;**** Commands&lt;/p&gt; &#xA;&lt;p&gt;In the buffer, you can use these commands:&lt;/p&gt; &#xA;&lt;p&gt;| Listen to track | &lt;del&gt;listen-queue-play&lt;/del&gt; (&lt;del&gt;RET&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Move point forward/backward | &lt;del&gt;forward-line&lt;/del&gt; (&lt;del&gt;n&lt;/del&gt;) / &lt;del&gt;previous-line&lt;/del&gt; (&lt;del&gt;p&lt;/del&gt;) | | Move track forward | &lt;del&gt;listen-queue-transpose-forward&lt;/del&gt; (&lt;del&gt;N&lt;/del&gt;) | | Move track backward | &lt;del&gt;listen-queue-transpose-backward&lt;/del&gt; (&lt;del&gt;P&lt;/del&gt;) | | Kill track | &lt;del&gt;listen-queue-kill-track&lt;/del&gt; (&lt;del&gt;C-k&lt;/del&gt;) | | Yank track | &lt;del&gt;listen-queue-yank&lt;/del&gt; (&lt;del&gt;C-y&lt;/del&gt;) | | Show track&#39;s metadata | &lt;del&gt;listen-view-track&lt;/del&gt; (&lt;del&gt;m&lt;/del&gt;) | | Jump to track&#39;s file in Dired | &lt;del&gt;listen-jump&lt;/del&gt; (&lt;del&gt;j&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Show tracks (at point or selected) in library buffer | &lt;del&gt;listen-library-from-queue&lt;/del&gt; (&lt;del&gt;l&lt;/del&gt;) | | Run shell command on tracks (at point or selected) | &lt;del&gt;listen-queue-shell-command&lt;/del&gt; (&lt;del&gt;!&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Order the queue by column at point | &lt;del&gt;listen-queue-order-by&lt;/del&gt; (&lt;del&gt;o&lt;/del&gt;) | | Shuffle the queue | &lt;del&gt;listen-queue-shuffle&lt;/del&gt; (&lt;del&gt;s&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Revert the queue buffer | &lt;del&gt;listen-queue-revert&lt;/del&gt; (&lt;del&gt;g&lt;/del&gt;) | | Revert queue&#39;s tracks from disk | &lt;del&gt;C-u g&lt;/del&gt; | | Pause the player | &lt;del&gt;listen-pause&lt;/del&gt; (&lt;del&gt;SPC&lt;/del&gt;) | | Show the menu | &lt;del&gt;listen-menu&lt;/del&gt; (&lt;del&gt;?&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;**** Bookmarks&lt;/p&gt; &#xA;&lt;p&gt;Queue buffers may be bookmarked with &lt;del&gt;bookmark-set&lt;/del&gt; (&lt;del&gt;C-x r m&lt;/del&gt;). The bookmark record refers to the queue by name, so if the queue is renamed or discarded, the bookmark will remain.&lt;/p&gt; &#xA;&lt;p&gt;*** Queue list buffer&lt;/p&gt; &#xA;&lt;p&gt;The queue list buffer may be shown with the command &lt;del&gt;listen-queue-list&lt;/del&gt;. In the list buffer, you can use these commands:&lt;/p&gt; &#xA;&lt;p&gt;| Show queue&#39;s buffer | &lt;del&gt;listen-queue&lt;/del&gt; (&lt;del&gt;RET&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Move point forward/backward | &lt;del&gt;forward-line&lt;/del&gt; (&lt;del&gt;n&lt;/del&gt;) / &lt;del&gt;previous-line&lt;/del&gt; (&lt;del&gt;p&lt;/del&gt;) | | Rename a queue | &lt;del&gt;listen-queue-rename&lt;/del&gt; (&lt;del&gt;R&lt;/del&gt;) | | Discard a queue | &lt;del&gt;listen-queue-discard&lt;/del&gt; (&lt;del&gt;C-k&lt;/del&gt;) | | Show queue&#39;s tracks in library buffer | &lt;del&gt;listen-library-from-queue&lt;/del&gt; (&lt;del&gt;l&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Revert the queue list | &lt;del&gt;listen-queue-list&lt;/del&gt; (&lt;del&gt;g&lt;/del&gt;) | | Pause the player | &lt;del&gt;listen-pause&lt;/del&gt; (&lt;del&gt;SPC&lt;/del&gt;) | | Show the menu | &lt;del&gt;listen-menu&lt;/del&gt; (&lt;del&gt;?&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;** Library&lt;/p&gt; &#xA;&lt;p&gt;To help with exploring and managing a music library, &lt;del&gt;listen&lt;/del&gt; provides various &#34;library&#34; features. Tracks can be passed between library and queue buffers and operated on with similar commands and bindings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;listen&lt;/del&gt; does not maintain its own database of audio files; they are simply read from the filesystem as needed. But if a local MPD server is available, tracks can be loaded from its database (which does a fine job of indexing audio files and their metadata); this is generally much faster, because it avoids having to read tracks&#39; metadata with Emacs Lisp or their durations with &lt;del&gt;ffprobe&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;listen&lt;/del&gt; does not provide features to modify tracks&#39; metadata, but it provides commands to run shell commands on tracks&#39; filenames, which works well with external tools like [[https://picard.musicbrainz.org/][Picard]].&lt;/p&gt; &#xA;&lt;p&gt;*** Library buffer&lt;/p&gt; &#xA;&lt;p&gt;A library buffer provides a hierarchical view of tracks grouped by their metadata using [[info:taxy#Top][Taxy]], rendered with [[info:magit-section#Top][Magit Section]]. Each section can be folded, and it shows the number of tracks in it and its subgroups.&lt;/p&gt; &#xA;&lt;p&gt;**** Showing a library buffer&lt;/p&gt; &#xA;&lt;p&gt;Tracks from various sources can be shown in a library using these commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files and directories: &lt;del&gt;listen-library&lt;/del&gt;. Individual files may be chosen, or a directory may be, which will be searched recursively for tracks.&lt;/li&gt; &#xA; &lt;li&gt;From an MPD server: &lt;del&gt;listen-library-from-mpd&lt;/del&gt;. An MPD search query will be read with completion, and matching tracks are read from the MPD server.&lt;/li&gt; &#xA; &lt;li&gt;From a playlist file: &lt;del&gt;listen-library-from-playlist-file&lt;/del&gt;. Tracks are read from the given playlist file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;**** Commands&lt;/p&gt; &#xA;&lt;p&gt;In the library buffer, you can use these commands:&lt;/p&gt; &#xA;&lt;p&gt;| Listen to tracks | &lt;del&gt;listen-library-play&lt;/del&gt; (&lt;del&gt;RET&lt;/del&gt;) | | Add tracks to queue | &lt;del&gt;listen-library-to-queue&lt;/del&gt; (&lt;del&gt;a&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Move point forward/backward | &lt;del&gt;forward-line&lt;/del&gt; (&lt;del&gt;n&lt;/del&gt;) / &lt;del&gt;previous-line&lt;/del&gt; (&lt;del&gt;p&lt;/del&gt;) | | Show track&#39;s metadata | &lt;del&gt;listen-library-view-track&lt;/del&gt; (&lt;del&gt;m&lt;/del&gt;) | | Jump to track&#39;s file in Dired | &lt;del&gt;listen-library-jump&lt;/del&gt; (&lt;del&gt;j&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Run shell command on tracks | &lt;del&gt;listen-library-shell-command&lt;/del&gt; (&lt;del&gt;!&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;| Revert the library buffer | &lt;del&gt;listen-library-revert&lt;/del&gt; (&lt;del&gt;g&lt;/del&gt;) | | Pause the player | &lt;del&gt;listen-pause&lt;/del&gt; (&lt;del&gt;SPC&lt;/del&gt;) | | Show the menu | &lt;del&gt;listen-menu&lt;/del&gt; (&lt;del&gt;?&lt;/del&gt;) |&lt;/p&gt; &#xA;&lt;p&gt;**** Bookmarks&lt;/p&gt; &#xA;&lt;p&gt;Library buffers may be bookmarked with &lt;del&gt;bookmark-set&lt;/del&gt; (&lt;del&gt;C-x r m&lt;/del&gt;). The bookmark record refers to the buffer by the way it was created (e.g. the filename paths, queue name, MPD query, or playlist file the tracks came from), so jumping to the bookmark will show an updated view, as if calling the original command with the same arguments.&lt;/p&gt; &#xA;&lt;p&gt;** Players&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;listen&lt;/del&gt; currently supports audio playback via the VLC backend. Internally, any number of simultaneous player instances could be controlled, but &lt;del&gt;listen&lt;/del&gt;&#39;s UI provides the means to control one at a time.&lt;/p&gt; &#xA;&lt;p&gt;Controlling the player is mainly done through the main [[info:transient#Top][Transient]] menu, through the command &lt;del&gt;listen&lt;/del&gt;. However, all of the commands provided in it are also available as interactive commands, which could be bound by the user in any keymap (see, e.g. [[elisp:(apropos-command &#34;^listen-&#34;)][M-x apropos-command RET ^listen- RET]]).&lt;/p&gt; &#xA;&lt;p&gt;The player is run in a child process, which is started when playback begins. The &lt;del&gt;listen-quit&lt;/del&gt; command terminates the player process.&lt;/p&gt; &#xA;&lt;p&gt;*** Volume&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;listen-volume&lt;/del&gt; command is used to set the current player&#39;s volume. Its argument should be an integer percentage. Some players, e.g. VLC, may allow settings above 100% to boost output beyond normal levels.&lt;/p&gt; &#xA;&lt;p&gt;*** Seeking&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;listen-seek&lt;/del&gt; command is used to seek to a position in the current track. Its argument should be a timestamp in MM:SS format, and it may include a &lt;del&gt;-&lt;/del&gt; or &lt;del&gt;+&lt;/del&gt; prefix to indicate a position relative to the current one.&lt;/p&gt; &#xA;&lt;p&gt;*** Repeat modes&lt;/p&gt; &#xA;&lt;p&gt;Three repeat modes are provided, controlled by the option &lt;del&gt;listen-queue-repeat-mode&lt;/del&gt;, which may have these values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;nil&lt;/del&gt; :: No repeating. When the last track in the current queue finishes playing, playback stops.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;queue&lt;/del&gt; :: The current queue is repeated when its last track finishes playing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;shuffle&lt;/del&gt; :: When the last track in the current queue finishes playing, the queue is shuffled and played again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The repeat mode is most easily set using the commands in the &lt;del&gt;listen&lt;/del&gt; menu.&lt;/p&gt; &#xA;&lt;p&gt;** Mode&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;listen-mode&lt;/del&gt; minor mode runs a timer which plays the next track in the current queue when a track finishes playing (when playing a queue). It is automatically activated when playing a queue. It also shows the current track in the &lt;del&gt;global-mode-string&lt;/del&gt;, which may be displayed in the mode line or tab bar.&lt;/p&gt; &#xA;&lt;p&gt;** Tips&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Since VLC is used as a backend, [[https://www.freedesktop.org/wiki/Specifications/mpris-spec/][MPRIS]]-based player info and controls &#34;just work&#34;, so you can use things like media hotkeys and various widgets to control &lt;del&gt;listen&lt;/del&gt;&#39;s playback.&lt;/li&gt; &#xA; &lt;li&gt;Similarly, you might even see an icon in your task switcher indicating that Emacs is playing sound (e.g. with KDE Plasma).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Changelog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.8-pre&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;del&gt;listen-queue-list&lt;/del&gt; buffer can be bookmarked.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-add-from-mpd&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.7&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Info manual.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;listen-lighter-format&lt;/del&gt; now allows customizing the mode line lighter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue&lt;/del&gt; switches to existing queue buffers without reverting them.&lt;/li&gt; &#xA; &lt;li&gt;Transient &lt;del&gt;qq&lt;/del&gt; command exits the transient.&lt;/li&gt; &#xA; &lt;li&gt;Optimize updating of individual tracks in queue buffer.&lt;/li&gt; &#xA; &lt;li&gt;Improve handling of maximum volume with VLC (allowing boosting over 100%).&lt;/li&gt; &#xA; &lt;li&gt;Library buffer name defaults to given path.&lt;/li&gt; &#xA; &lt;li&gt;Minor improvements to Transient menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When reverting a queue&#39;s tracks from disk, re-detect the currently playing track by filename.&lt;/li&gt; &#xA; &lt;li&gt;Queue bookmark handler.&lt;/li&gt; &#xA; &lt;li&gt;Open library buffer with point at beginning.&lt;/li&gt; &#xA; &lt;li&gt;In queue buffer, sort track numbers numerically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.6&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In library buffer, show disc number when available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reverting library buffers shows tracks from the queue or MPD query originally selected.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-add-files&lt;/del&gt; no longer plays the queue automatically.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-library-play-or-add&lt;/del&gt; renamed to &lt;del&gt;listen-library-play&lt;/del&gt;, and it now plays the selected queue when playing multiple tracks.&lt;/li&gt; &#xA; &lt;li&gt;Face &lt;del&gt;listen-album&lt;/del&gt; slants italic.&lt;/li&gt; &#xA; &lt;li&gt;In library buffer, prefer album-artist over artist tag when available.&lt;/li&gt; &#xA; &lt;li&gt;Use half the number of CPUs to read track durations, by default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading new queue name when no queue is playing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.5.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Viewing queues which aren&#39;t currently playing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.5&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-list&lt;/del&gt; shows a list of queues.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-jump&lt;/del&gt; (bound to &lt;del&gt;j&lt;/del&gt; in queue and library buffers) jumps to the track at point in a Dired buffer.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-track-view&lt;/del&gt; shows a track&#39;s complete metadata in a table view.&lt;/li&gt; &#xA; &lt;li&gt;Mode &lt;del&gt;listen-queue-delay-mode&lt;/del&gt; plays a queue with a configurable, random delay between tracks.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;listen-queue-repeat-mode&lt;/del&gt; (also settable in &lt;del&gt;listen-menu&lt;/del&gt;) allows repeating a queue in-order or shuffled.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;listen-lighter-extra-functions&lt;/del&gt; allows displaying extra information in the &lt;del&gt;listen-mode&lt;/del&gt; lighter.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;listen-track-end-functions&lt;/del&gt; allows running functions when a track finishes playing.&lt;/li&gt; &#xA; &lt;li&gt;Show total queue duration at bottom of track list.&lt;/li&gt; &#xA; &lt;li&gt;Show track ratings in library and queue buffers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All metadata in MP3 and Ogg files is available for display (not only standard tags).&lt;/li&gt; &#xA; &lt;li&gt;For date field in library and queue views, show &lt;del&gt;originalyear&lt;/del&gt; or &lt;del&gt;originaldate&lt;/del&gt; metadata fields in preference to &lt;del&gt;date&lt;/del&gt; (which seems generally more useful, as the &lt;del&gt;date&lt;/del&gt; field may contain a full date, and sometimes of a later release).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increase timeout for reading track durations.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-deduplicate&lt;/del&gt; first removes any tracks not backed by a file.&lt;/li&gt; &#xA; &lt;li&gt;In queue buffer, mark current track by comparing filename (rather than internal track identity).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.4&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-deduplicate&lt;/del&gt; removes duplicate tracks from a queue (by comparing artist, album, and title metadata case-insensitively).&lt;/li&gt; &#xA; &lt;li&gt;Read track durations with &lt;del&gt;ffprobe&lt;/del&gt; and show in library and queue views.&lt;/li&gt; &#xA; &lt;li&gt;Bound key &lt;del&gt;?&lt;/del&gt; to open the &lt;del&gt;listen&lt;/del&gt; Transient menu in library and queue views.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Transposing a track in a queue keeps point on the track.&lt;/li&gt; &#xA; &lt;li&gt;Autoloading of &lt;del&gt;listen&lt;/del&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-library-from-mpd&lt;/del&gt; shows tracks selected from MPD in a library view.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-library-from-queue&lt;/del&gt; shows tracks selected from a queue buffer in a library view.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-library-from-playlist-file&lt;/del&gt; shows tracks from an M3U playlist in a library view.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-add-from-playlist-file&lt;/del&gt; adds tracks from an M3U playlist file to a queue.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading tracks from MPD allows multiple selection using &lt;del&gt;completing-read-multiple&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Various improvements in robustness.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue&lt;/del&gt; doesn&#39;t recreate its buffer when already open.&lt;/li&gt; &#xA; &lt;li&gt;Key bindings in &lt;del&gt;listen&lt;/del&gt; Transient menu.&lt;/li&gt; &#xA; &lt;li&gt;Function &lt;del&gt;listen-queue-complete&lt;/del&gt; accepts argument &lt;del&gt;:allow-new-p&lt;/del&gt; to return a new queue if the entered name doesn&#39;t match an existing one.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Completing read of tracks from MPD.&lt;/li&gt; &#xA; &lt;li&gt;Unset VLC process&#39;s query-on-exit flag.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Credits&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to [[https://amodernist.com/][Philip Kaludercic]] for reviewing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-jump&lt;/del&gt; jumps to the currently playing track in the queue.&lt;/li&gt; &#xA; &lt;li&gt;Command &lt;del&gt;listen-queue-shell-command&lt;/del&gt; runs a shell command on the tracks selected in the queue.&lt;/li&gt; &#xA; &lt;li&gt;Reverting a queue buffer with universal prefix argument refreshes the tracks&#39; metadata from disk.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The queue could sometimes skip tracks when playing.&lt;/li&gt; &#xA; &lt;li&gt;Improve handling of tracks that are changed during playback (e.g. metadata).&lt;/li&gt; &#xA; &lt;li&gt;Update copyright statements in all libraries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** v0.1&lt;/p&gt; &#xA;&lt;p&gt;Initial release.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feedback and patches are welcome.&lt;/p&gt; &#xA;&lt;p&gt;** Copyright assignment&lt;/p&gt; &#xA;&lt;p&gt;Listen.el is published in GNU ELPA and is considered part of GNU Emacs. Therefore, cumulative contributions of more than 15 lines of code require that the author assign copyright of such contributions to the FSF. Authors who are interested in doing so may contact [[mailto:&lt;a href=&#34;mailto:assign@gnu.org&#34;&gt;assign@gnu.org&lt;/a&gt;][&lt;a href=&#34;mailto:assign@gnu.org&#34;&gt;assign@gnu.org&lt;/a&gt;]] to request the appropriate form.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gleam-lang/gleam-mode</title>
    <updated>2024-03-17T01:44:45Z</updated>
    <id>tag:github.com,2024-03-17:/gleam-lang/gleam-mode</id>
    <link href="https://github.com/gleam-lang/gleam-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐙 Gleam support for Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An Emacs Major Mode for &lt;a href=&#34;https://gleam.run&#34;&gt;Gleam&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This mode uses &lt;a href=&#34;https://github.com/tree-sitter/tree-sitter&#34;&gt;tree-sitter&lt;/a&gt; under-the-hood for syntax highlighting and code navigation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/2058614/151681785-5d212e1b-191b-4e7d-a868-f6e42d7efe61.mp4&#34;&gt;https://user-images.githubusercontent.com/2058614/151681785-5d212e1b-191b-4e7d-a868-f6e42d7efe61.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;This project will eventually be hosted on &lt;a href=&#34;https://melpa.org&#34;&gt;MELPA&lt;/a&gt;. However, until that time, the best way to install this is first to clone the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules git@github.com:gleam-lang/gleam-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you&#39;ll need to load this from your init script (&lt;code&gt;~/.emacs&lt;/code&gt; or &lt;code&gt;~/.config/emacs/init.el&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;use-package (recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package gleam-mode&#xA;  :load-path &#34;~/path/to/gleam-mode&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;~/path/to/gleam-mode&lt;/code&gt; with the path where you cloned gleam-mode.&lt;/p&gt; &#xA;&lt;h3&gt;vanilla&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;load-path &#34;~/path/to/gleam-mode&#34;)&#xA;(load-library &#34;gleam-mode&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;~/path/to/gleam-mode&lt;/code&gt; with the path where you cloned gleam-mode.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;gleam-mode ships with a &lt;code&gt;gleam-format&lt;/code&gt; command that is not bound by default to any keybinding. To bind it:&lt;/p&gt; &#xA;&lt;h3&gt;use-package&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;:bind (:map gleam-mode-map (&amp;lt;binding&amp;gt; . gleam-format))&lt;/code&gt; to your use-package declaration. e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package gleam-mode&#xA;  :load-path &#34;~/path/to/gleam-mode&#34;&#xA;  :bind (:map gleam-mode-map&#xA;              (&#34;C-c g f&#34; . gleam-format)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(here &#34;C-c g f&#34; means &lt;code&gt;Control&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; followed by &lt;code&gt;g&lt;/code&gt; followed by &lt;code&gt;f&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;vanilla&lt;/h3&gt; &#xA;&lt;p&gt;Add the following after the lines where you setup gleam-mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(define-key gleam-mode-map (kbd &#34;C-c g f&#34;) &#39;gleam-format)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(here &#34;C-c g f&#34; means &lt;code&gt;Control&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; followed by &lt;code&gt;g&lt;/code&gt; followed by &lt;code&gt;f&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Syntax highlighting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Indentation (at least somewhat)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Completion?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; REPL?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program is licensed under The Apache License, Version 2.0 or, at your option, under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3, or (at your option) any later version. See &lt;a href=&#34;https://raw.githubusercontent.com/gleam-lang/gleam-mode/main/LICENSE-apache&#34;&gt;LICENSE-apache&lt;/a&gt; for the terms of the Apache License, Version 2.0 or &lt;a href=&#34;https://raw.githubusercontent.com/gleam-lang/gleam-mode/main/LICENSE-gpl&#34;&gt;LICENSE-gpl&lt;/a&gt; for the terms of the GNU Public License, Version 3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Epitech/epitech-emacs</title>
    <updated>2024-03-17T01:44:45Z</updated>
    <id>tag:github.com,2024-03-17:/Epitech/epitech-emacs</id>
    <link href="https://github.com/Epitech/epitech-emacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Public emacs configuration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;epitech-emacs&lt;/h1&gt; &#xA;&lt;p&gt;Official Emacs configuration for Epitech students.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For local installation, run &lt;code&gt;./INSTALL.sh local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For system-wide installation, run &lt;code&gt;sudo ./INSTALL.sh system&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>