<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-03T01:49:28Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Fanael/rainbow-delimiters</title>
    <updated>2023-09-03T01:49:28Z</updated>
    <id>tag:github.com,2023-09-03:/Fanael/rainbow-delimiters</id>
    <link href="https://github.com/Fanael/rainbow-delimiters" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs rainbow delimiters mode&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://melpa.org/#/rainbow-delimiters&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/rainbow-delimiters-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/rainbow-delimiters&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/rainbow-delimiters-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Fanael/rainbow-delimiters/actions&#34;&gt;&lt;img src=&#34;https://github.com/Fanael/rainbow-delimiters/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;rainbow-delimiters&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;rainbow-delimiters&lt;/code&gt; is a &#34;rainbow parentheses&#34;-like mode which highlights delimiters such as parentheses, brackets or braces according to their depth. Each successive level is highlighted in a different color. This makes it easy to spot matching delimiters, orient yourself in the code, and tell which statements are at a given depth.&lt;/p&gt; &#xA;&lt;p&gt;Great care has been taken to make this mode fast. You shouldn&#39;t see any change in scrolling or editing speed when it&#39;s on even when working in delimiter-rich languages like Clojure or Emacs Lisp. It can be used with any language.&lt;/p&gt; &#xA;&lt;p&gt;You can customize the colors &lt;code&gt;rainbow-delimiters&lt;/code&gt; uses. The default colors are intentionally subtle; they are unobtrusive enough to make the mode worth looking at even if you usually don&#39;t like rainbow parentheses modes. A number of major color themes such as Zenburn and Solarized have added their own faces for the mode.&lt;/p&gt; &#xA;&lt;p&gt;This is the official github repository for &lt;code&gt;rainbow-delimiters&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The latest &lt;strong&gt;release&lt;/strong&gt; of &lt;code&gt;rainbow-delimiters&lt;/code&gt; is always found at &lt;a href=&#34;https://github.com/Fanael/rainbow-delimiters/tree/master&#34;&gt;https://github.com/Fanael/rainbow-delimiters/tree/master&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way is to use &lt;a href=&#34;http://melpa.org/&#34;&gt;MELPA&lt;/a&gt; or &lt;a href=&#34;http://stable.melpa.org/&#34;&gt;MELPA Stable&lt;/a&gt;. If either is in your &lt;code&gt;package-archives&lt;/code&gt;, do&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x package-install RET rainbow-delimiters RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, open &lt;code&gt;rainbow-delimiters.el&lt;/code&gt; in Emacs and use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x package-install-from-buffer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any other methods of installation are unsupported.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To toggle the mode in the current buffer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x rainbow-delimiters-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start the mode automatically in &lt;code&gt;foo-mode&lt;/code&gt;, add the following to your init file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(add-hook &#39;foo-mode-hook #&#39;rainbow-delimiters-mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start the mode automatically in most programming modes (Emacs 24 and above):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(add-hook &#39;prog-mode-hook #&#39;rainbow-delimiters-mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Global mode&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s no &lt;code&gt;global-rainbow-delimiters-mode&lt;/code&gt; anymore. It used to exist, but it was impossible to keep it from breaking some major modes. It&#39;s &lt;em&gt;strongly recommended&lt;/em&gt; to use major mode hooks instead, as shown above. There&#39;s nothing stopping you from defining &lt;code&gt;global-rainbow-delimiters-mode&lt;/code&gt; yourself, but if it breaks something, you&#39;re on your own.&lt;/p&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;To customize various options, including the color theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x customize-group rainbow-delimiters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can specify custom colors by customizing following faces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Faces take the form &lt;code&gt;rainbow-delimiters-depth-N-face&lt;/code&gt;, with N being the depth. Depth begins at 1, the outermost color. Faces exist for depths 1-9.&lt;/li&gt; &#xA; &lt;li&gt;The unmatched delimiter face: &lt;code&gt;rainbow-delimiters-unmatched-face&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The mismatched delimiter face: &lt;code&gt;rainbow-delimiters-mismatched-face&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>magit/magit-popup</title>
    <updated>2023-09-03T01:49:28Z</updated>
    <id>tag:github.com,2023-09-03:/magit/magit-popup</id>
    <link href="https://github.com/magit/magit-popup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Define prefix-infix-suffix command combos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Magit-Popup&lt;/h1&gt; &#xA;&lt;p&gt;This package implements a generic interface for toggling switches and setting options and then invoking an Emacs command that does something with these arguments. Usually the command calls an external process with the specified arguments.&lt;/p&gt; &#xA;&lt;p&gt;This package has been superseded by &lt;a href=&#34;https://github.com/magit/transient&#34;&gt;Transient&lt;/a&gt;. No new features will be added but bugs will be fixed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jaypei/emacs-neotree</title>
    <updated>2023-09-03T01:49:28Z</updated>
    <id>tag:github.com,2023-09-03:/jaypei/emacs-neotree</id>
    <link href="https://github.com/jaypei/emacs-neotree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A emacs tree plugin like NerdTree for Vim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;emacs-neotree&lt;/h1&gt; &#xA;&lt;p&gt;A Emacs tree plugin like NerdTree for Vim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/jaypei/emacs-neotree&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jaypei/emacs-neotree.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/neotree&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/neotree-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/neotree&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/neotree-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/jaypei/emacs-neotree/imgs/neotree-1.png&#34; alt=&#34;NeoTree-1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Melpa&lt;/h3&gt; &#xA;&lt;p&gt;You can install the plugin using the packages on &lt;a href=&#34;http://melpa.org/&#34;&gt;melpa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have something like the following in your Emacs startup file (&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;, or &lt;code&gt;~/.emacs&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;    (add-to-list &#39;package-archives&#xA;                 &#39;(&#34;melpa&#34; . &#34;http://melpa.org/packages/&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make that take effect, either evaluate that elisp expression or restart Emacs.&lt;/p&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;M-x package-list-packages&lt;/code&gt;, select &lt;code&gt;neotree&lt;/code&gt; from the list by pressing &lt;code&gt;i&lt;/code&gt;, then press &lt;code&gt;x&lt;/code&gt; to execute the changes. At that point, the package will be installed.&lt;/p&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;Clone project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /some/path&#xA;$ git clone https://github.com/jaypei/emacs-neotree.git neotree&#xA;$ cd neotree&#xA;$ git checkout dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add config to emacs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;load-path &#34;/some/path/neotree&#34;)&#xA;(require &#39;neotree)&#xA;(global-set-key [f8] &#39;neotree-toggle)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open (toggle) NeoTree:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;F8&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Keybindings&lt;/h2&gt; &#xA;&lt;p&gt;Only in Neotree Buffer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;n&lt;/code&gt; next line, &lt;code&gt;p&lt;/code&gt; previous lineã€‚&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SPC&lt;/code&gt; or &lt;code&gt;RET&lt;/code&gt; or &lt;code&gt;TAB&lt;/code&gt; Open current item if it is a file. Fold/Unfold current item if it is a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;U&lt;/code&gt; Go up a directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;g&lt;/code&gt; Refresh&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; Maximize/Minimize the NeoTree Window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;H&lt;/code&gt; Toggle display hidden files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;O&lt;/code&gt; Recursively open a directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-n&lt;/code&gt; Create a file or create a directory if filename ends with a â€˜/â€™&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-d&lt;/code&gt; Delete a file or a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-r&lt;/code&gt; Rename a file or a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-c&lt;/code&gt; Change the root directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-p&lt;/code&gt; Copy a file or a directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Theme config&lt;/h3&gt; &#xA;&lt;p&gt;NeoTree provides following themes: &lt;em&gt;classic&lt;/em&gt;(default) &lt;em&gt;ascii&lt;/em&gt; &lt;em&gt;arrow&lt;/em&gt; &lt;em&gt;icons&lt;/em&gt; &lt;em&gt;nerd&lt;/em&gt;. Theme can be configed by setting &lt;strong&gt;neo-theme&lt;/strong&gt;. For example, use &lt;em&gt;icons&lt;/em&gt; for window system and &lt;em&gt;arrow&lt;/em&gt; terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(setq neo-theme (if (display-graphic-p) &#39;icons &#39;arrow))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For users who want to use the &lt;code&gt;icons&lt;/code&gt; theme. Pls make sure you have installed the &lt;a href=&#34;https://github.com/domtronn/all-the-icons.el&#34;&gt;all-the-icons&lt;/a&gt; package and its &lt;a href=&#34;https://github.com/domtronn/all-the-icons.el/tree/master/fonts&#34;&gt;fonts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;all-the-icons theme screenshots&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jaypei/emacs-neotree/dev/screenshots/icons.png&#34; alt=&#34;&#34; title=&#34;neotree icons theme&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More documentation&lt;/h2&gt; &#xA;&lt;p&gt;EmacsWiki: &lt;a href=&#34;http://www.emacswiki.org/emacs/NeoTree&#34;&gt;En&lt;/a&gt; &lt;a href=&#34;http://www.emacswiki.org/emacs-zh/NeoTree_%E4%B8%AD%E6%96%87wiki&#34;&gt;ä¸­æ–‡ç‰ˆ&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>