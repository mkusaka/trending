<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-20T01:46:49Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emacs-helm/helm</title>
    <updated>2023-08-20T01:46:49Z</updated>
    <id>tag:github.com,2023-08-20:/emacs-helm/helm</id>
    <link href="https://github.com/emacs-helm/helm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs incremental completion and selection narrowing framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL_3-green.svg?sanitize=true&#34; alt=&#34;License GPL 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/helm&#34;&gt;&lt;img alt=&#34;MELPA&#34; src=&#34;https://melpa.org/packages/helm-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stable.melpa.org/#/helm&#34;&gt;&lt;img alt=&#34;MELPA Stable&#34; src=&#34;https://stable.melpa.org/packages/helm-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Emacs-Helm&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars3.githubusercontent.com/u/1541688?v=3&amp;amp;s=200&#34; alt=&#34;Emacs-helm&#34; title=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;justify&#34;&gt; &lt;b&gt;Helm&lt;/b&gt; is an Emacs framework for incremental completions and narrowing selections. It provides an easy-to-use API for developers wishing to build their own Helm applications in Emacs, powerful search tools and dozens of already built-in commands providing completion to almost everything. It is a must-have for anyone using Emacs as a main work environment. Helm has been widely adopted by many Emacs power-users. It is available in Melpa and can be easily installed from the Emacs package manager. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://emacs-helm.github.io/helm/&#34;&gt;&lt;b&gt;Homepage&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/emacs-helm/helm/releases&#34;&gt;&lt;b&gt;Downloads&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/emacs-helm/helm/wiki#install&#34;&gt;&lt;b&gt;Get started&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/emacs-helm/helm/wiki&#34;&gt;&lt;b&gt;Helm wiki&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/emacs-helm/helm/wiki/FAQ&#34;&gt;&lt;b&gt;FAQ&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Helm in action searching with &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34; &lt;b&gt;Grep Ag&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/emacs-helm/helm/raw/master/images/helm-grep-ag-persistent.png?raw=true&#34; alt=&#34;Emacs-helm grep ag&#34; title=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Maintainance of Helm is a lot of work please consider making a donation, thank you!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/user?u=86324343&#34;&gt; &lt;img title=&#34;Donate monthly using Patreon&#34; alt=&#34;Donate monthly using Patreon&#34; style=&#34;height: 50px; width: auto;&#34; src=&#34;https://github.com/emacs-helm/helm/raw/master/images/patreon-25x.png?raw=true&#34;&gt;&lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>emacs-lsp/lsp-treemacs</title>
    <updated>2023-08-20T01:46:49Z</updated>
    <id>tag:github.com,2023-08-20:/emacs-lsp/lsp-treemacs</id>
    <link href="https://github.com/emacs-lsp/lsp-treemacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;lsp-mode ❤️ treemacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[[https://github.com/emacs-lsp/lsp-treemacs/actions][file:https://github.com/emacs-lsp/lsp-treemacs/workflows/CI/badge.svg]] [[https://melpa.org/#/lsp-treemacs][file:https://melpa.org/packages/lsp-treemacs-badge.svg]] [[https://stable.melpa.org/#/lsp-treemacs][file:https://stable.melpa.org/packages/lsp-treemacs-badge.svg]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Table of Contents :TOC_4_gh:noexport:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#summary][Summary]]&lt;/li&gt; &#xA; &lt;li&gt;[[#synchronization][Synchronization]]&lt;/li&gt; &#xA; &lt;li&gt;[[#views][Views]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-errors-list][lsp-treemacs-errors-list]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#commands][Commands]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#screenshot][Screenshot]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-symbols][lsp-treemacs-symbols]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#screenshot-1][Screenshot]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-referenceslsp-treemacs-implementations][lsp-treemacs-references/lsp-treemacs-implementations]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#screenshot-2][Screenshot]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-call-hierarchy][lsp-treemacs-call-hierarchy]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#screenshot-3][Screenshot]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-type-hierarchy][lsp-treemacs-type-hierarchy]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#lsp-treemacs-deps-list][lsp-treemacs-deps-list]] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[#commands-1][Commands]]&lt;/li&gt; &#xA;     &lt;li&gt;[[#screenshot-4][Screenshot]]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Summary Integration between [[https://github.com/emacs-lsp/lsp-mode][lsp-mode]] and [[https://github.com/Alexander-Miller/treemacs][treemacs]] and implementation of treeview controls using [[https://github.com/Alexander-Miller/treemacs][treemacs]] as a tree renderer.&lt;/li&gt; &#xA; &lt;li&gt;Synchronization To enable bidirectional synchronization of lsp workspace folders and [[https://github.com/Alexander-Miller/treemacs][treemacs]] projects. #+begin_src emacs-lisp (lsp-treemacs-sync-mode 1) #+end_src&lt;/li&gt; &#xA; &lt;li&gt;Views ** lsp-treemacs-errors-list Displays tree like error list structure. *** Commands *** Screenshot [[file:screenshots/error-list.png]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;lsp-treemacs-quick-fix&lt;/del&gt; or press &lt;del&gt;x&lt;/del&gt; when you are in Error List view - offer quickfixes for the error at point. ** lsp-treemacs-symbols Displays symbols information. *** Screenshot [[file:screenshots/symbols-list.gif]] ** lsp-treemacs-references/lsp-treemacs-implementations Display references/implementations using tree view: *** Screenshot [[file:screenshots/references.gif]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** lsp-treemacs-call-hierarchy Display call hierarchy. Use =C-u M-x lsp-treemacs-call-hierarchy= to display outgoing call hierarchy. *** Screenshot [[file:screenshots/call-hierarchy.gif]] ** lsp-treemacs-type-hierarchy Display type hierarchy. ** lsp-treemacs-deps-list Browse java dependencies, namespaces, files, etc. *** Commands - &lt;del&gt;lsp-treemacs-java-deps-follow&lt;/del&gt; - select the current editor in the dependency - &lt;del&gt;lsp-treemacs-java-deps-refresh&lt;/del&gt; - refresh the view. Bound to &lt;del&gt;r&lt;/del&gt;. *** Screenshot [[file:screenshots/dependencies.gif]]&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ichernyshovvv/org-timeblock</title>
    <updated>2023-08-20T01:46:49Z</updated>
    <id>tag:github.com,2023-08-20:/ichernyshovvv/org-timeblock</id>
    <link href="https://github.com/ichernyshovvv/org-timeblock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Schedule your day visually, using timeblocking technique inside Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: org-timeblock&lt;/p&gt; &#xA;&lt;p&gt;Schedule your day visually, using [[https://en.wikipedia.org/wiki/Timeblocking][timeblocking technique]] inside Emacs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#screenshots][Screenshots]]&lt;/li&gt; &#xA; &lt;li&gt;[[#screencast][Screencast]]&lt;/li&gt; &#xA; &lt;li&gt;[[#description][Description]]&lt;/li&gt; &#xA; &lt;li&gt;[[#installation][Installation]]&lt;/li&gt; &#xA; &lt;li&gt;[[#usage][Usage]]&lt;/li&gt; &#xA; &lt;li&gt;[[#customization][Customization]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Screenshots :PROPERTIES: :CUSTOM_ID: screenshots :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;org-timeblock-mode buffer:&lt;/p&gt; &#xA;&lt;p&gt;[[file:screenshots/org-timeblock-mode.png]]&lt;/p&gt; &#xA;&lt;p&gt;You can press &lt;del&gt;[t]&lt;/del&gt; to toggle the display of org-timeblock-list-mode buffer. Foreground colors for timeblocks are generated randomly, but you can assign specific background and foreground colors in customizable variable &lt;del&gt;org-timeblock-tag-colors&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;p&gt;[[file:screenshots/org-timeblock-with-list-mode.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Screencast :PROPERTIES: :CUSTOM_ID: screencast :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://youtu.be/lVV9gVp5nxU]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Description :PROPERTIES: :CUSTOM_ID: description :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The builtin orgmode package for viewing tasks or events for a particular day, org-agenda, does not help you to quickly understand, where, for example, you have free time in your day or where you have overlapping tasks. Just a list of tasks is not sufficient. This package is created to fix this problem and provide some of the functionality that modern calendars provide.&lt;/p&gt; &#xA;&lt;p&gt;There are two major modes provided by the package:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;org-timeblock-mode&lt;/del&gt;. Displays visual schedule (timeblocks) of org tasks that are scheduled or have an active timestamp in their body (orgmode events) for selected day (Currently, only day view is available). Available commands:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-day-earlier/later &lt;del&gt;[C-&#xA;     &lt;down&gt;&#xA;      /&#xA;      &lt;up&gt;&#xA;       ]&#xA;      &lt;/up&gt;&#xA;     &lt;/down&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-set-duration &lt;del&gt;[d]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-reschedule &lt;del&gt;[s]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-new-task &lt;del&gt;[+]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-toggle-timeblock-list &lt;del&gt;[t]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-todo &lt;del&gt;[1]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-done &lt;del&gt;[5]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-switch-view &lt;del&gt;[v]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-jump-to-day &lt;del&gt;[j]&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;org-timeblock-list-mode&lt;/del&gt;. Displays a list of org tasks that are scheduled or orgmode events for selected day. It&#39;s sort of like a light org-agenda. The tasks can be sorted via &lt;del&gt;SCHEDULED&lt;/del&gt; org property or manually placed by user via commands &lt;del&gt;org-timeblock-list-drag-line-forward/backward [M-&#xA;    &lt;up&gt;&#xA;     /&#xA;     &lt;down&gt;&#xA;      ]&#xA;     &lt;/down&gt;&#xA;    &lt;/up&gt;&lt;/del&gt;. The order can be saved in a cache file via &lt;del&gt;org-timeblock-list-save [C-s]&lt;/del&gt; command. The sorting algorithm can be changed via &lt;del&gt;org-timeblock-list-toggle-sort-function [S]&lt;/del&gt; command.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-list-schedule &lt;del&gt;[s]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-set-duration &lt;del&gt;[d]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-todo &lt;del&gt;[1]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-done &lt;del&gt;[5]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-drag-line-forward/backward &lt;del&gt;[M-&#xA;     &lt;down&gt;&#xA;      /&#xA;      &lt;up&gt;&#xA;       ]&#xA;      &lt;/up&gt;&#xA;     &lt;/down&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-toggle-sort-function &lt;del&gt;[S]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-toggle-timeblock &lt;del&gt;[t]&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation :PROPERTIES: :CUSTOM_ID: installation :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Emacs 28.1 (or higher)&lt;/li&gt; &#xA; &lt;li&gt;SVG support in your Emacs build&lt;/li&gt; &#xA; &lt;li&gt;org 9.0 (or higher)&lt;/li&gt; &#xA; &lt;li&gt;org-ql 0.7 (or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** package-vc-install (Emacs 29)&lt;/p&gt; &#xA;&lt;p&gt;If you use Emacs 29, you can install the package via&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;M-x package-vc-install RET &lt;a href=&#34;https://github.com/ichernyshovvv/org-timeblock/&#34;&gt;https://github.com/ichernyshovvv/org-timeblock/&lt;/a&gt; RET&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;** Guix&lt;/p&gt; &#xA;&lt;p&gt;If you use Guix, you can install the package from [[https://git.sr.ht/~sokolov/channel][this]] channel.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To add the channel, add this to the list of channels in &lt;del&gt;channels.scm&lt;/del&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src scheme (channel (name &#39;sklv) (url &#34;&lt;a href=&#34;https://git.sr.ht/~sokolov/channel&#34;&gt;https://git.sr.ht/~sokolov/channel&lt;/a&gt;&#34;)) #+end_src&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Then, run &lt;del&gt;guix pull&lt;/del&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you can install the package.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;** Quelpa&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;del&gt;quelpa-use-package&lt;/del&gt; (which can be installed directly from MELPA).&lt;/li&gt; &#xA; &lt;li&gt;Add this form to your init file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src elisp (use-package org-timeblock :quelpa (org-timeblock :fetcher github :repo &#34;ichernyshovvv/org-timeblock&#34;)) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;** Manual&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;del&gt;M-x package-install org-ql&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;git clone &lt;a href=&#34;https://github.com/ichernyshovvv/org-timeblock&#34;&gt;https://github.com/ichernyshovvv/org-timeblock&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the path of the downloaded folder to &lt;del&gt;load-path&lt;/del&gt; somewhere in your Emacs config:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src elisp (add-to-list &#39;load-path &#34;path/to/org-timeblock/&#34;) #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage :PROPERTIES: :CUSTOM_ID: usage :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enter &lt;del&gt;org-timeblock-list-mode&lt;/del&gt;, run &lt;del&gt;M-x org-timeblock-list&lt;/del&gt;. To enter &lt;del&gt;org-timeblock-mode&lt;/del&gt;, run &lt;del&gt;M-x org-timeblock&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;For both modes, the default date is today. All the tasks and events are searched in &lt;del&gt;(org-agenda-files)&lt;/del&gt;. You can change the displayed date via the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;org-timeblock-day-later &lt;del&gt;[C-&#xA;   &lt;down&gt;&#xA;    ]&#xA;   &lt;/down&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;org-timeblock-day-earlier &lt;del&gt;[C-&#xA;   &lt;up&gt;&#xA;    ]&#xA;   &lt;/up&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;org-timeblock-jump-to-day &lt;del&gt;[j]&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To navigate between tasks/blocks, use these commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;org-timeblock-list-mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-list-previous-line &lt;del&gt;[&#xA;     &lt;up&gt;&#xA;      ]&#xA;     &lt;/up&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-next-line &lt;del&gt;[&#xA;     &lt;down&gt;&#xA;      ]&#xA;     &lt;/down&gt;&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;org-timeblock-mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-forward-block &lt;del&gt;[&#xA;     &lt;down&gt;&#xA;      ]&#xA;     &lt;/down&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-bacward-block &lt;del&gt;[&#xA;     &lt;up&gt;&#xA;      ]&#xA;     &lt;/up&gt;&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In both modes, you can navigate via mouse clicks to select an entry or a block.&lt;/p&gt; &#xA;&lt;p&gt;To reschedule or change the duration of a task at point, use these commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;org-timeblock-list-mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-list-schedule &lt;del&gt;[s]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-list-set-duration &lt;del&gt;[d]&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;org-timeblock-mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;org-timeblock-schedule &lt;del&gt;[s]&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;org-timeblock-set-duration &lt;del&gt;[d]&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customization :PROPERTIES: :CUSTOM_ID: customization :END:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;del&gt;M-x customize-group org-timeblock&lt;/del&gt; to see available customizable variables.&lt;/p&gt;</summary>
  </entry>
</feed>