<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-31T01:48:28Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mooz/js2-mode</title>
    <updated>2024-12-31T01:48:28Z</updated>
    <id>tag:github.com,2024-12-31:/mooz/js2-mode</id>
    <link href="https://github.com/mooz/js2-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improved JavaScript editing mode for GNU Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About &lt;a href=&#34;https://github.com/mooz/js2-mode/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/mooz/js2-mode/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://elpa.gnu.org/packages/js2-mode.html&#34;&gt;&lt;img src=&#34;https://elpa.gnu.org/packages/js2-mode.svg?sanitize=true&#34; alt=&#34;GNU ELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/js2-mode&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/js2-mode-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Improved JavaScript editing mode for GNU Emacs (&lt;a href=&#34;http://elpa.gnu.org/packages/js2-mode.html&#34;&gt;description here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For some of the latest changes, see &lt;a href=&#34;https://github.com/mooz/js2-mode/raw/master/NEWS.md&#34;&gt;latest user-visible changes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The stable versions are hosted at &lt;a href=&#34;http://elpa.gnu.org/&#34;&gt;GNU ELPA&lt;/a&gt; (&lt;kbd&gt;M-x list-packages&lt;/kbd&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can also install the latest development version from &lt;a href=&#34;https://melpa.org/#/getting-started&#34;&gt;MELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;Emacs 24.1+ and &lt;code&gt;cl-lib&lt;/code&gt; (either built-in or installed from GNU ELPA).&lt;/p&gt; &#xA;&lt;h1&gt;React and JSX&lt;/h1&gt; &#xA;&lt;p&gt;The currently recommended solution is to install Emacs 27 (you can &lt;a href=&#34;http://git.savannah.gnu.org/cgit/emacs.git/tree/INSTALL.REPO&#34;&gt;build from source&lt;/a&gt; or e.g. install a snapshot from a &lt;a href=&#34;https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa&#34;&gt;PPA&lt;/a&gt;) and use &lt;code&gt;js-mode&lt;/code&gt; as the major mode. To make use of the JS2 AST and the packages that integrate with it, we recommend &lt;code&gt;js2-minor-mode&lt;/code&gt;. See the corresponding &lt;a href=&#34;https://github.com/mooz/js2-mode/raw/bb73461c2c7048d811b38e6b533a30fb5fdcea93/js2-mode.el#L57&#34;&gt;instructions in the Commentary&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;js-mode&lt;/code&gt; in Emacs 27 includes full support for syntax highlighting and indenting of JSX syntax.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/felipeochoa/rjsx-mode/&#34;&gt;rjsx-mode&lt;/a&gt; is an alternative option which comes with certain tradeoffs.&lt;/p&gt; &#xA;&lt;h1&gt;Bugs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;See broken syntax highlighting and timer errors? Recently upgraded Emacs from version 24.2 or earlier? Try &lt;a href=&#34;https://github.com/mooz/js2-mode/issues/72&#34;&gt;reinstalling or byte-recompiling&lt;/a&gt; the package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Any indentation problems should be reported with &lt;code&gt;M-x report-emacs-bug&lt;/code&gt; (please try reproducing them with &lt;code&gt;js-mode&lt;/code&gt; first, for clarity). Starting with Emacs 25, &lt;code&gt;js2-mode&lt;/code&gt; delegates indentation to the indentation engine of &lt;code&gt;js-mode&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please report other problems at &lt;a href=&#34;http://github.com/mooz/js2-mode/issues&#34;&gt;http://github.com/mooz/js2-mode/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;js2-mode&lt;/code&gt; is subject to the same &lt;a href=&#34;http://www.gnu.org/prep/maintain/html_node/Copyright-Papers.html&#34;&gt;copyright assignment&lt;/a&gt; policy as Emacs itself, &lt;code&gt;org-mode&lt;/code&gt;, &lt;code&gt;CEDET&lt;/code&gt; and other packages in &lt;a href=&#34;http://elpa.gnu.org/packages/&#34;&gt;GNU ELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Any &lt;a href=&#34;http://www.gnu.org/prep/maintain/html_node/Legally-Significant.html#Legally-Significant&#34;&gt;legally significant&lt;/a&gt; contributions can only be accepted after the author has completed their paperwork. Please ask for the request form, and we&#39;ll send it to you.&lt;/p&gt; &#xA;&lt;h1&gt;See Also&lt;/h1&gt; &#xA;&lt;p&gt;Some third-party modes that use the generated syntax tree:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magnars/js2-refactor.el&#34;&gt;js2-refactor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skeeto/skewer-mode&#34;&gt;skewer-mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>emacs-straight/eglot</title>
    <updated>2024-12-31T01:48:28Z</updated>
    <id>tag:github.com,2024-12-31:/emacs-straight/eglot</id>
    <link href="https://github.com/emacs-straight/eglot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of the eglot package from GNU ELPA, current as of 2023-12-31&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hlissner/emacs-solaire-mode</title>
    <updated>2024-12-31T01:48:28Z</updated>
    <id>tag:github.com,2024-12-31:/hlissner/emacs-solaire-mode</id>
    <link href="https://github.com/hlissner/emacs-solaire-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;If only certain buffers could be so grossly incandescent.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/hlissner/doom-emacs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made_with-Doom_Emacs-blueviolet.svg?style=flat-square&amp;amp;logo=GNU%20Emacs&amp;amp;logoColor=white&#34; alt=&#34;Made with Doom Emacs&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/tag/hlissner/emacs-solaire-mode.svg?label=release&amp;amp;style=flat-square&#34; alt=&#34;Release tag&#34;&gt; &lt;a href=&#34;http://melpa.org/#/solaire-mode&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/solaire-mode-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/hlissner/emacs-solaire-mode/CI/master?style=flat-square&#34; alt=&#34;Build status&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Solaire mode&lt;/h1&gt; &#xA;&lt;p&gt;If only certain buffers could be so grossly incandescent.&lt;/p&gt; &#xA;&lt;a href=&#34;https://winkla12.deviantart.com/art/Grossly-Incandescent-438305072&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hlissner/emacs-solaire-mode/screenshots/praise.jpg&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;code&gt;solaire-mode&lt;/code&gt; is an aesthetic plugin designed to visually distinguish &#34;real&#34; buffers (i.e. file-visiting code buffers where you do most of your work) from &#34;unreal&#34; buffers (like popups, sidebars, log buffers, terminals, etc) by giving the latter a slightly different -- often darker -- background:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hlissner/emacs-solaire-mode/screenshots/screenshot.png&#34; alt=&#34;solaire-mode at work&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin accomplishes this by doing two things when activated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;solaire-mode&lt;/code&gt; buffer-locally remaps all the faces in &lt;code&gt;solaire-mode-remap-alist&lt;/code&gt;. e.g. &lt;code&gt;default&lt;/code&gt; &amp;lt;-&amp;gt; &lt;code&gt;solaire-default-face&lt;/code&gt;, and &lt;code&gt;mode-line&lt;/code&gt; &amp;lt;-&amp;gt; &lt;code&gt;solaire-mode-line-face&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The latter faces are the (presumably) &#34;adjusted&#34; faces.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;solaire-global-mode&lt;/code&gt; will globally swap faces in &lt;code&gt;solaire-mode-swap-alist&lt;/code&gt; IF your active theme is in &lt;code&gt;solaire-mode-themes-to-face-swap&lt;/code&gt;. Use this if you think a theme has its designated solaire-*-face colors the wrong way around.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Praise the sun.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;face-remapping-alist&lt;/code&gt;, which other plugins may overwrite.&lt;/li&gt; &#xA; &lt;li&gt;Tested mainly on Emacs 25.1+&lt;/li&gt; &#xA; &lt;li&gt;Works in GUI and terminal Emacs (with themes that support it).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-ZGlaAxB7nI&#34;&gt;Try jumping.&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Solaire-mode is available on MELPA: &lt;code&gt;M-x package-install RET solaire-mode&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Doom Emacs&lt;/h3&gt; &#xA;&lt;p&gt;Doom installs this package as part of the &lt;code&gt;:ui doom&lt;/code&gt; module. No additional configuration is needed.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Simply activate &lt;code&gt;solaire-global-mode&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(solaire-global-mode +1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;solaire-mode-real-buffer-fn&lt;/code&gt; (default: &lt;code&gt;solaire-mode-real-buffer-p&lt;/code&gt;): The predicate function used to determine if a buffer is &#34;real&#34; or not. It takes no arguments and must return truthy for buffers where &lt;code&gt;solaire-mode&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be activated in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;solaire-mode-remap-alist&lt;/code&gt;: An alist mapping original faces to replacement faces, which will be buffer-locally remapped in any buffer &lt;code&gt;solaire-mode&lt;/code&gt; is enabled in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;solaire-mode-swap-alist&lt;/code&gt;: An alist mapping original faces to replacement faces, which will be swapped globally if current theme is in &lt;code&gt;solaire-mode-themes-to-face-swap&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;solaire-mode-themes-to-face-swap&lt;/code&gt; (default: &lt;code&gt;()&lt;/code&gt;): A list of themes to swap faces in &lt;code&gt;solaire-mode-swap-alist&lt;/code&gt; for. Can be symbols or regexps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Jolly cooperation with other plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;By default, &lt;code&gt;solaire-mode&lt;/code&gt; remaps the mode-line faces. This interferes with certain mode-line packages like telephone-line or powerline, but works fine for doom-modeline. To disable this behavior use:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(dolist (face &#39;(mode-line mode-line-inactive))&#xA;  (setf (alist-get face solaire-mode-remap-modeline) nil))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is up to themes to decide whether unreal buffers (i.e. non-file-visiting) are lighter or darker than real buffers. If you don&#39;t like their arrangement, add that theme to &lt;code&gt;solaire-mode-themes-to-face-swap&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;solaire-mode-themes-to-face-swap &#39;doom-vibrant)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then solaire-mode will swap all the faces in &lt;code&gt;solaire-mode-swap-alist&lt;/code&gt; (for example, swapping the &lt;code&gt;default&lt;/code&gt; face with &lt;code&gt;solaire-default-face&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;You can add a regexp to &lt;code&gt;solaire-mode-themes-to-face-swap&lt;/code&gt; to affect a family of themes, e.g.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;solaire-mode-themes-to-face-swap &#34;^doom-&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Theme support for solaire-mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;solaire-mode&lt;/code&gt; will disable itself if the active theme doesn&#39;t support it, but to ensure support a theme must at least change &lt;code&gt;solaire-default-face&lt;/code&gt;&#39;s &lt;code&gt;:background&lt;/code&gt;. My recommendation is that it is be &lt;em&gt;slightly&lt;/em&gt; darker or lighter than &lt;code&gt;default&lt;/code&gt;&#39;s background.&lt;/p&gt; &#xA;&lt;p&gt;For example &lt;code&gt;doom-one&lt;/code&gt; (seen in the screenshot above) prefers &lt;code&gt;solaire-default-face&lt;/code&gt; be darker than &lt;code&gt;default&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hlissner/emacs-doom-themes/screenshots/doom-one.png&#34; alt=&#34;doom-one screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Others, like doom-vibrant prefer the opposite:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hlissner/emacs-doom-themes/screenshots/doom-vibrant.png&#34; alt=&#34;doom-vibrant screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For full support, themes can customize the following faces:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Face&lt;/th&gt; &#xA;   &lt;th&gt;Remapped face&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-default-face&lt;/td&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-fringe-face&lt;/td&gt; &#xA;   &lt;td&gt;fringe&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-line-number-face&lt;/td&gt; &#xA;   &lt;td&gt;line-number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-hl-line-face&lt;/td&gt; &#xA;   &lt;td&gt;hl-line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-org-hide-face&lt;/td&gt; &#xA;   &lt;td&gt;org-hide, org-indent&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-mode-line-face&lt;/td&gt; &#xA;   &lt;td&gt;mode-line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-mode-line-inactive-face&lt;/td&gt; &#xA;   &lt;td&gt;mode-line-inactive&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaire-header-line-face&lt;/td&gt; &#xA;   &lt;td&gt;header-line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Themes that support solaire-mode out of the box&lt;/h2&gt; &#xA;&lt;p&gt;The only (known) themes to support solaire-mode are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hlissner/emacs-doom-themes&#34;&gt;doom-themes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/404cn/nano-theme.el&#34;&gt;nano-theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/protesilaos/modus-themes&#34;&gt;modus-themes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ajgrf/parchment&#34;&gt;parchment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nashamri/spacemacs-theme&#34;&gt;spacemacs-theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ianpan870102/vscode-dark-plus-emacs-theme&#34;&gt;vscode-dark-plus-theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ianpan870102/wilmersdorf-emacs-theme&#34;&gt;wilmersdorf-theme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you know of more, feel free to PR them.&lt;/p&gt;</summary>
  </entry>
</feed>