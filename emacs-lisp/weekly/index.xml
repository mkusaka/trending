<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:38:29Z</updated>
  <subtitle>Weekly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>clojure-emacs/ac-nrepl</title>
    <updated>2024-07-07T01:38:29Z</updated>
    <id>tag:github.com,2024-07-07:/clojure-emacs/ac-nrepl</id>
    <link href="https://github.com/clojure-emacs/ac-nrepl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[DEPRECATED] Emacs auto-complete backend for nrepl completions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nrepl completion source for Emacs auto-complete package&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deprecation notice: These days you probably want to use &lt;a href=&#34;https://github.com/clojure-emacs/ac-cider&#34;&gt;ac-cider&lt;/a&gt; or Cider&#39;s built-in &lt;code&gt;company&lt;/code&gt; completion support instead of this.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin provides a completion source for the popular Emacs interactive auto-completion framework &lt;a href=&#34;http://cx4a.org/software/auto-complete/&#34;&gt;auto-complete&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Where nrepl provides it, pop-up documentation for completed symbols will be displayed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Latest stable version&lt;/strong&gt;: see the &lt;a href=&#34;https://github.com/clojure-emacs/ac-nrepl/tags&#34;&gt;latest numbered tag&lt;/a&gt;, which will also be the latest version available via Marmalade.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;First, ensure &lt;code&gt;auto-complete&lt;/code&gt; and &lt;code&gt;cider&lt;/code&gt; are installed: I recommend using packages from &lt;a href=&#34;http://marmalade-repo.org&#34;&gt;Marmalade&lt;/a&gt; or &lt;a href=&#34;http://melpa.org&#34;&gt;Melpa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need both &lt;code&gt;auto-complete&lt;/code&gt; and &lt;code&gt;cider&lt;/code&gt; to be enabled and working, so please consult the corresponding documentation if you have any trouble with this.&lt;/p&gt; &#xA;&lt;p&gt;Next, install &lt;code&gt;ac-nrepl&lt;/code&gt;. If you choose not to use the convenient package in &lt;a href=&#34;http://melpa.org&#34;&gt;Melpa&lt;/a&gt; and &lt;a href=&#34;http://marmalade-repo.org&#34;&gt;Marmalade&lt;/a&gt;, you&#39;ll need to add the directory containing &lt;code&gt;ac-nrepl.el&lt;/code&gt; to your &lt;code&gt;load-path&lt;/code&gt;, and then &lt;code&gt;(require &#39;ac-nrepl)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ac-nrepl&lt;/code&gt; provides an &lt;code&gt;nrepl&lt;/code&gt;-specific completion source, so &lt;code&gt;auto-complete&lt;/code&gt; needs to be told to use them when &lt;code&gt;cider-repl-mode&lt;/code&gt; is active. To do this, put the following code in your emacs init file to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(require &#39;ac-nrepl)&#xA;(add-hook &#39;cider-repl-mode-hook &#39;ac-nrepl-setup)&#xA;(add-hook &#39;cider-mode-hook &#39;ac-nrepl-setup)&#xA;(eval-after-load &#34;auto-complete&#34;&#xA;  &#39;(add-to-list &#39;ac-modes &#39;cider-repl-mode))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to trigger &lt;code&gt;auto-complete&lt;/code&gt; using &lt;kbd&gt;TAB&lt;/kbd&gt; in nrepl buffers, you may want to put &lt;code&gt;auto-complete&lt;/code&gt; into your &lt;code&gt;completion-at-point-functions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(defun set-auto-complete-as-completion-at-point-function ()&#xA;  (setq completion-at-point-functions &#39;(auto-complete)))&#xA;(add-hook &#39;auto-complete-mode-hook &#39;set-auto-complete-as-completion-at-point-function)&#xA;&#xA;(add-hook &#39;cider-repl-mode-hook &#39;set-auto-complete-as-completion-at-point-function)&#xA;(add-hook &#39;cider-mode-hook &#39;set-auto-complete-as-completion-at-point-function)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might consider using &lt;code&gt;ac-nrepl&lt;/code&gt;&#39;s popup documentation in place of &lt;code&gt;nrepl-doc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(eval-after-load &#34;cider&#34;&#xA;  &#39;(define-key cider-mode-map (kbd &#34;C-c C-d&#34;) &#39;ac-nrepl-popup-doc))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ac-nrepl&lt;/code&gt; should now automatically be enabled when you visit a buffer in which &lt;code&gt;cider-repl-mode&lt;/code&gt; is active and &lt;code&gt;auto-complete&lt;/code&gt; is enabled. (The symbols &#34;nrepl and &#34;AC&#34; should appear in the modeline.)&lt;/p&gt; &#xA;&lt;p&gt;Simply trigger auto-completion, and completion candidates supplied by nrepl should be displayed, with symbols on the right hand side of the completion pop-up to indicate the &#34;flavour&#34; of the completion candidate, e.g. &#34;v&#34; for variables. After a short delay, popup documentation for the completed symbol should also be displayed.&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ac-nrepl&lt;/code&gt; was written by &lt;a href=&#34;https://github.com/purcell&#34;&gt;Steve Purcell&lt;/a&gt;, with important contributions from &lt;a href=&#34;https://github.com/samaaron&#34;&gt;Sam Aaron&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Author links:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://coderwall.com/purcell&#34;&gt;&lt;img src=&#34;http://api.coderwall.com/purcell/endorsecount.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://uk.linkedin.com/in/stevepurcell&#34;&gt;&lt;img src=&#34;http://www.linkedin.com/img/webpromo/btn_liprofile_blue_80x15.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.sanityinc.com/&#34;&gt;Steve Purcell&#39;s blog&lt;/a&gt; // &lt;a href=&#34;https://twitter.com/sanityinc&#34;&gt;@sanityinc on Twitter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>