<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-09T01:33:27Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Wilfred/deadgrep</title>
    <updated>2023-08-09T01:33:27Z</updated>
    <id>tag:github.com,2023-08-09:/Wilfred/deadgrep</id>
    <link href="https://github.com/Wilfred/deadgrep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fast, friendly searching with ripgrep and Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deadgrep: use ripgrep from Emacs ☠️&lt;/h1&gt; &#xA;&lt;p&gt;Deadgrep is the fast, beautiful text search that your Emacs deserves.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/Wilfred/deadgrep?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/Wilfred/deadgrep/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/deadgrep&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/deadgrep-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#keybindings&#34;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#additional-interactive-commands&#34;&gt;Additional interactive commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#minibuffer&#34;&gt;Minibuffer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#easy-debugging&#34;&gt;Easy Debugging&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#features&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#super-fast&#34;&gt;Super Fast&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#context-aware&#34;&gt;Context Aware&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#easy-filtering&#34;&gt;Easy Filtering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#polish&#34;&gt;Polish&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#beta-features&#34;&gt;Beta Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#alternative-projects&#34;&gt;Alternative Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/#why-the-name&#34;&gt;Why the name?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- markdown-toc end --&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt;. You need version 0.8 or later.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install deadgrep from MELPA (do &lt;code&gt;M-x package-install&lt;/code&gt; &lt;kbd&gt;RET&lt;/kbd&gt; &lt;code&gt;deadgrep&lt;/code&gt; within Emacs 25.1 or later), or copy it into your &lt;code&gt;~/.emacs.d&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) add deadgrep to a convenient shortcut. I like F5.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(global-set-key (kbd &#34;&amp;lt;f5&amp;gt;&#34;) #&#39;deadgrep)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;Navigating results:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;RET&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Visit the result, file or push button at point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Visit the result in another window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;n&lt;/kbd&gt; and &lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move between search hits&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;M-n&lt;/kbd&gt; and &lt;kbd&gt;M-p&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move between file headers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The commands &lt;code&gt;deadgrep-forward&lt;/code&gt; and &lt;code&gt;deadgrep-backward&lt;/code&gt; are also available to move between buttons as well as search hits.&lt;/p&gt; &#xA;&lt;p&gt;Starting/stopping a search:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the search term&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through available search types: string, words, regexp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through case sensitivity types: smart, sensitive, ignore&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through file modes: all, type, glob&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;I&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch to incremental search, re-running on every keystroke&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;D&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the search directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;^&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Re-run the search in the parent directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;g&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Re-run the search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;TAB&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expand/collapse results for a file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c&lt;/kbd&gt; &lt;kbd&gt;C-k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stop a running search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-u&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A prefix argument prevents search commands from starting automatically.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Additional interactive commands&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;imenu&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move between files in a results buffer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;deadgrep-kill-all-buffers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kill all open deadgrep buffers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;deadgrep-debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;In a results buffer, view the &lt;code&gt;rg&lt;/code&gt; command, output and environment used.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Minibuffer&lt;/h3&gt; &#xA;&lt;p&gt;You use the minibuffer to enter a new search term.&lt;/p&gt; &#xA;&lt;p&gt;You can also reuse a previous search term with &lt;kbd&gt;M-p&lt;/kbd&gt; in the minibuffer. To edit the default search term, use &lt;kbd&gt;M-n&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Easy Debugging&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to debug search results is to review the actual &lt;code&gt;rg&lt;/code&gt; command executed.&lt;/p&gt; &#xA;&lt;p&gt;Fortunately, the &lt;code&gt;deadgrep-debug&lt;/code&gt; function makes it easy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Move to the deadgrep results buffer.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;M-x deadgrep-debug&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Strike &lt;code&gt;enter&lt;/code&gt;, and the debug buffer will appear.&lt;/li&gt; &#xA; &lt;li&gt;Move to the deadgrep debug buffer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Study the results to review the &lt;code&gt;rg&lt;/code&gt; command string and other debugging information to assist you.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Super Fast&lt;/h3&gt; &#xA;&lt;p&gt;Deadgrep uses ripgrep for extremely fast text searches.&lt;/p&gt; &#xA;&lt;p&gt;If you change your search settings, deadgrep will immediately re-run your search.&lt;/p&gt; &#xA;&lt;h3&gt;Context Aware&lt;/h3&gt; &#xA;&lt;p&gt;Deadgrep works hard to minimise your keystrokes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Search term&lt;/strong&gt;: If the region is active, deadgrep uses that.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Search directory&lt;/strong&gt;: If your current file is in a VCS repository, deadgrep uses that for your search directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Regexp and case sensitivity options&lt;/strong&gt;: Deadgrep re-uses whatever settings you used in your last search.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Globbing and file types&lt;/strong&gt;: Deadgrep suggests file types and globbing options that match the file you started the search from.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Host&lt;/strong&gt;: If you&#39;re editing a remote file with Tramp, deadgrep will search the remote machine. This requires &lt;code&gt;rg&lt;/code&gt; to be installed on that machine.&lt;/p&gt; &#xA;&lt;h3&gt;Easy Filtering&lt;/h3&gt; &#xA;&lt;p&gt;Didn&#39;t get the results you wanted? It&#39;s easy to change the search term, search type, or search directory, directly from the results buffer. Just push the relevant button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_filters.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Polish&lt;/h3&gt; &#xA;&lt;p&gt;Deadgrep uses spinners to give you feedback on whether your search has finished.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_spinner.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It highlights regexp syntax according to the syntax accepted by &lt;code&gt;rg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_highlight.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When navigating to a line that matched, the relevant part of the line is temporarily highlighted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_highlight_relevant.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can collapse and expand files with &lt;code&gt;TAB&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_collapsed.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Deadgrep handles minified files robustly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/deadgrep_truncated.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can always jump to exactly the position that point is on, even when searching files that contain tab characters. You can also navigate to the file itself from the file headings.&lt;/p&gt; &#xA;&lt;h2&gt;Beta Features&lt;/h2&gt; &#xA;&lt;p&gt;You can now edit files directly from results buffers with &lt;code&gt;M-x deadgrep-edit-mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is currently in beta. Alternatively, package &lt;a href=&#34;https://github.com/mhayashi1120/Emacs-wgrep&#34;&gt;wgrep&lt;/a&gt; added support for editing deadgrep buffers in April 2023 via &lt;a href=&#34;https://melpa.org/#/wgrep-deadgrep&#34;&gt;wgrep-deadgrep&lt;/a&gt;. (One feature unlocked that way is, e.g., the ability to delete a line in edit mode via &lt;code&gt;C-d&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Alternative Projects&lt;/h2&gt; &#xA;&lt;p&gt;I believe that deadgrep is the best tool for doing Emacs text searches, but there are some other great tools out there. See &lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/deadgrep/master/docs/ALTERNATIVES.md&#34;&gt;ALTERNATIVES&lt;/a&gt; for a discussion.&lt;/p&gt; &#xA;&lt;h2&gt;Why the name?&lt;/h2&gt; &#xA;&lt;p&gt;The name &#34;deadgrep&#34; is a pun on &#34;R.I.P. grep&#34;, and ripgrep.el was already taken.&lt;/p&gt; &#xA;&lt;p&gt;R.I.P wasn&#39;t actually the intention of the name &#34;ripgrep&#34; (see &lt;a href=&#34;https://github.com/BurntSushi/ripgrep/raw/master/FAQ.md#what-does-the-rip-in-ripgrep-mean&#34;&gt;their FAQ&lt;/a&gt;), but deadgrep is easy to remember and type.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lepisma/matplotllm</title>
    <updated>2023-08-09T01:33:27Z</updated>
    <id>tag:github.com,2023-08-09:/lepisma/matplotllm</id>
    <link href="https://github.com/lepisma/matplotllm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LLM Assisted data visualization system&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: MatplotLLM&lt;/p&gt; &#xA;&lt;p&gt;[[https://github.com/lepisma/matplotllm/tags][file:https://img.shields.io/github/v/tag/lepisma/matplotllm.svg]]&lt;/p&gt; &#xA;&lt;p&gt;MatplotLLM is a natural language layer over [[https://matplotlib.org/][Matplotlib]] to visualize data. The main purpose is to accelerate building a certain /your way/ of visualizing data points without meddling with innards of a tool like matplotlib. As of now, this is a system to be used from within Emacs/Org system. The motivation is coming from something I wrote in a blog on AI co-programming [[https://lepisma.xyz/2023/06/29/mu4e-snooze/index.html][here]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage There are two descriptions that you need to provide, both in natural language. One that describes the data source. Second that describes how to plot. The first is a static text description, which you can change as needed between calls of course.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For second, you can provide an /iterative description/ like in a conversation interface. You could start with a first pass description and then keep adding more specifications as feedback.&lt;/p&gt; &#xA;&lt;p&gt;You can use these in an org-babel source block with language name of &lt;del&gt;matplotllm&lt;/del&gt; as shown in below example. There is an org mode divider &lt;del&gt;-----&lt;/del&gt; used to separate data description and plot description. In current design this distinction might look useless, but it might be helpful later on. In plot description, you add empty lines to give iterative feedback. Every redraw shows the current code to the LLM, provides feedback, and asks for new code.&lt;/p&gt; &#xA;&lt;p&gt;You will have to set the value of &lt;del&gt;matplotllm-openai-key&lt;/del&gt; to use this first. We call &lt;del&gt;GPT4&lt;/del&gt; as the backing LLM right now.&lt;/p&gt; &#xA;&lt;p&gt;The example below is trying to reproduce---I haven&#39;t done justice to it yet---the plot in my blog post on [[https://lepisma.xyz/2023/07/22/learning-colemak-dh/index.html][Learning Colemak-DH]].&lt;/p&gt; &#xA;&lt;p&gt;#+NAME: test-plot #+begin_src matplotllm :results file :exports both The data file to read is named &lt;code&gt;log.txt&lt;/code&gt;. Here is how it looks like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2023-07-20 Thu] 97 WPM, acc 98% Stopped daily tracking&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-16 Tue] 66 WPM, acc 91% | 66 WPM, acc 87%&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-15 Mon] 68 WPM, acc 89% | 65 WPM, acc 90% | 71 WPM, acc 93% | Colemak-DH as default.&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-14 Sun] 65 WPM, acc 92% | 62 WPM, acc 87% | 65 WPM, acc 91% | 70 WPM, acc 90%&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each line is for a day has WPM and accuracy entries from multiple tries in a day. Some line may have ill-structured text which you can ignore.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Plot a minimal scatter plot that shows WPM plotted against dates. Use accuracy values as color of the scatter plot, darker (blue purple) is more accurate.&lt;/p&gt; &#xA;&lt;p&gt;Clear up the axis and only show faint grid lines, and show dates where ticks have months written in them without crowding them too much.&lt;/p&gt; &#xA;&lt;p&gt;Annotate the first and last point with actual WPM value. #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+RESULTS: test-plot [[file:matplotllm.png]]&lt;/p&gt; &#xA;&lt;p&gt;Few development notes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The iterative feedback could be provided in a better shell like way rather than in a babel source block.&lt;/li&gt; &#xA; &lt;li&gt;Many times the generated code fails. This happens silently right now and needs better visibility. Though I might want to keep code out of sight and prefer things like heuristic retries over actually letting user debug. My target user---not in the Emacs version---is someone who doesn&#39;t want to use matplotlib manually.&lt;/li&gt; &#xA; &lt;li&gt;Features like saving the plot in high quality, allowing stylistic templates in system prompts, etc. would come in later versions.&lt;/li&gt; &#xA; &lt;li&gt;Plot description usually needs a lot of iterations to get to what you want and also just to keep redraws consistent. This is obvious as writing specifications of /anything/ brings out many hidden unshared models between the parties involved. Data description, on the other hand, works well once specified.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>thierryvolpiatto/wfnames</title>
    <updated>2023-08-09T01:33:27Z</updated>
    <id>tag:github.com,2023-08-09:/thierryvolpiatto/wfnames</id>
    <link href="https://github.com/thierryvolpiatto/wfnames" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Edit filenames like Wdired&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: Wfnames&lt;/p&gt; &#xA;&lt;p&gt;Allows editing filenames.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Allows editing lists of absolute files, this allows editing the directory parts as well.&lt;/p&gt; &#xA;&lt;p&gt;Modified lines are highlighted, maybe in a different color when about to overwrite an existing file.&lt;/p&gt; &#xA;&lt;p&gt;File completion is provided.&lt;/p&gt; &#xA;&lt;p&gt;Not tighted to a directory, allows editing files from various directories.&lt;/p&gt; &#xA;&lt;p&gt;Do not provide edition of permissions and will not.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Motivation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Wdired must be patched to allow editing a list of absolute filenames in Emacs versions before Emacs-29. Also Wdired depends on a default directory which is not relevant and prone to errors when editing absolute filenames that come from various directories. Using this package in Helm allows getting rid of Wdired advices (that have been merged in Emacs-29+).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This package have no user interface, but you can easily use it with [[https://github.com/emacs-helm/helm][Helm]] package by customizing =helm-ff-edit-marked-files-fn= variable. If you are not using [[https://github.com/emacs-helm/helm][Helm]] you will have to define yourself a function that call =wfnames-setup-buffer= with a list of files as argument.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once in the Wfnames buffer, edit your filenames and hit =C-c C-c= to save your changes. You have completion on filenames and directories with =TAB= but if you are using [[https://github.com/victorhge/iedit][Iedit]] package and it is in action use =M-TAB=.&lt;/p&gt;</summary>
  </entry>
</feed>