<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-21T01:30:19Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>merrickluo/lsp-tailwindcss</title>
    <updated>2024-10-21T01:30:19Z</updated>
    <id>tag:github.com,2024-10-21:/merrickluo/lsp-tailwindcss</id>
    <link href="https://github.com/merrickluo/lsp-tailwindcss" rel="alternate"></link>
    <summary type="html">&lt;p&gt;the lsp-mode client for tailwindcss&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[[https://melpa.org/#/lsp-tailwindcss][file:https://melpa.org/packages/lsp-tailwindcss-badge.svg]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lsp-tailwindcss&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The [[https://github.com/emacs-lsp/lsp-mode][lsp-mode]] client for tailwindcss, using language server from [[https://github.com/tailwindlabs/tailwindcss-intellisense][official vscode plugin]].&lt;/p&gt; &#xA;&lt;p&gt;[[file:images/autocomplete.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation ** Doom Emacs in &lt;del&gt;packages.el&lt;/del&gt; #+begin_src emacs-lisp (package! lsp-tailwindcss :recipe (:host github :repo &#34;merrickluo/lsp-tailwindcss&#34;)) #+end_src&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;in &lt;del&gt;config.el&lt;/del&gt; #+begin_src emacs-lisp (use-package! lsp-tailwindcss :after lsp-mode) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;** straight.el #+begin_src emacs-lisp (straight-use-package &#39;(lsp-tailwindcss :type git :host github :repo &#34;merrickluo/lsp-tailwindcss&#34;)) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;** Language Server *** Installation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=M-x lsp-install-server=, then select =tailwindcss=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Update&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=C-u M-x lsp-install-server=, then select =tailwindcss=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Changelog ** 0.3 *** breaking changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;back to use the vscode extension asset for language server installation, since the npm package don&#39;t get updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** minor changes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;more language server settings mapped to custom variables.&lt;/li&gt; &#xA; &lt;li&gt;add new configuration =lsp-tailwindcss-skip-config-check= to skip the config file check, since it&#39;s hard to keep it the same with the language server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** 0.2 *** breaking changes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;now uses [[https://www.npmjs.com/package/@tailwindcss/language-server][tailwindcss language server]] instead of manually download the vscode extension file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** major changes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;added =lsp-tailwindcss-major-modes=, see details in #Customization section.&lt;/li&gt; &#xA; &lt;li&gt;allow global and workspace configuration for tailwindcss-language-server.&lt;/li&gt; &#xA; &lt;li&gt;make variables =lsp-tailwindcss-server-dir=, =lsp-tailwindcss-server-file=, =lsp-tailwindcss-auto-install-server=, =lsp-tailwindcss-server-version= obsolete.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customization ** lsp-tailwindcss *** =lsp-tailwindcss-add-on-mode= Specify that if lsp-tailwindcss runs in add-on mode, see [[https://emacs-lsp.github.io/lsp-mode/page/faq/][in lsp-mode&#39;s documentation.]] This must be set before the package loads (use the init block in use-package instead of config block). #+begin_src emacs-lisp (use-package lsp-tailwindcss :after lsp-mode :init (setq lsp-tailwindcss-add-on-mode t)) #+end_src&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;default: =nil=.&lt;/p&gt; &#xA;&lt;p&gt;*** =lsp-tailwindcss-major-modes= (since 0.2) Specify lsp-tailwindcss should only starts when major-mode in the list or derived from them. default: =rjsx-mode web-mode html-mode css-mode typescript-mode typescript-tsx-mode=.&lt;/p&gt; &#xA;&lt;p&gt;** tailwindcss-language-server All settings described in [[https://github.com/tailwindlabs/tailwindcss-intellisense#extension-settings][tailwindcss-intellisense]] except:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;=tailwindCSS.includeLanguages= The activation of the language server is controlled by =lsp-tailwindcss--activate-p=, so this is not needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=tailwindCSS.colorDecorators= Emacs does not support color decorators.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Default value follows the default value in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;*** Global Configuration Custom variable naming convention: =tailwindCSS.emmetCompletions= =&amp;gt; =lsp-tailwindcss-emmet-completions=.&lt;/p&gt; &#xA;&lt;p&gt;** Rustywind (class sorter) There are two functions integrate the [[https://github.com/avencera/rustywind][rustywind]] class sorter, =lsp-tailwindcss-rustywind= and =lsp-tailwindcss-rustywind-before-save=.&lt;/p&gt; &#xA;&lt;p&gt;After install rustywind =npm i -g rustywind=, run =lsp-tailwindcss-rustywind= manually or add it to before-save-hook to use it.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (add-hook &#39;before-save-hook &#39;lsp-tailwindcss-rustywind-before-save) #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Troubleshooting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;make sure the language server is installed, see [[#language-server][Install language server]].&lt;/li&gt; &#xA; &lt;li&gt;run =M-x lsp-describe-sessions= to see if the =tailwindcss= language server is running.&lt;/li&gt; &#xA; &lt;li&gt;run =M-x lsp-workspace-show-log= to see if there are any errors reported by language server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Q&amp;amp;A ** Unable to calculate the languageId for buffer ... If you want to use lsp-tailwindcss in some other file types, like =erb=, you might see this error report from =lsp-mode=, the solution is configure the language id for it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (add-to-list &#39;lsp-language-id-configuration &#39;(&#34;.*\.erb$&#34; . &#34;html&#34;) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;This is a requirement for lsp-mode, not just for =lsp-tailwindcss=, see &lt;a href=&#34;https://github.com/emacs-lsp/lsp-mode/raw/563233fe72de6f32ffc6a1b3db0ec7f49c12cb50/lsp-mode.el#L694&#34;&gt;https://github.com/emacs-lsp/lsp-mode/blob/563233fe72de6f32ffc6a1b3db0ec7f49c12cb50/lsp-mode.el#L694&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;** How to set up [[https://github.com/ben-rogerson/twin.macro][twin.macro]]?&lt;/p&gt; &#xA;&lt;p&gt;twin.macro can be integrated using =lsp-tailwindcss-experimental-class-regex= variable (which is alias to =tailwindCSS.experimental.classRegex= . see the reference to [[https://github.com/ben-rogerson/twin.macro/discussions/227][discussion]])&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (use-package! lsp-tailwindcss :after lsp-mode :init (setq! lsp-tailwindcss-experimental-class-regex [&#34;tw([^]&lt;em&gt;)&#34; &#34;tw=&#34;([^&#34;]&lt;/em&gt;)&#34; &#34;tw={&#34;([^&#34;}]&lt;em&gt;)&#34; &#34;tw\.\w+([^]&lt;/em&gt;)&#34; &#34;tw\(.&lt;em&gt;?\)([^]&lt;/em&gt;)&#34;])) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;Take a note that it can lead to [[https://emacs-lsp.github.io/lsp-mode/page/faq/#i-have-multiple-language-servers-registered-for-language-foo-which-one-will-be-used-when-opening-a-project][the conflict of lsp-servers priorities]] (i.e. some of the servers will not start). To fix this you need to use =lsp-tailwindcss-add-on-mode= too.&lt;/p&gt; &#xA;&lt;p&gt;Set up with add-on mode: #+begin_src emacs-lisp (use-package! lsp-tailwindcss :after lsp-mode :init (setq! lsp-tailwindcss-experimental-class-regex [&#34;tw&lt;code&gt;([^&lt;/code&gt;]&lt;em&gt;)&#34; &#34;tw=&#34;([^&#34;]&lt;/em&gt;)&#34; &#34;tw={&#34;([^&#34;}]&lt;em&gt;)&#34; &#34;tw\.\w+&lt;code&gt;([^&lt;/code&gt;]&lt;/em&gt;)&#34; &#34;tw\(.&lt;em&gt;?\)&lt;code&gt;([^&lt;/code&gt;]&lt;/em&gt;)&#34;]) (setq! lsp-tailwindcss-add-on-mode t)) #+end_src&lt;/p&gt;</summary>
  </entry>
</feed>