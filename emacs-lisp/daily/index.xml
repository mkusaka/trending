<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-28T01:33:34Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>psibi/justl.el</title>
    <updated>2025-06-28T01:33:34Z</updated>
    <id>tag:github.com,2025-06-28:/psibi/justl.el</id>
    <link href="https://github.com/psibi/justl.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Major mode for driving just files.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NOTE: To avoid having this in the info manual, we use HTML rather than Org syntax; it still appears with the GitHub renderer.&lt;/h1&gt; &#xA;&lt;p&gt;#+HTML: &lt;a href=&#34;https://github.com/psibi/justl.el/actions&#34;&gt;&lt;img src=&#34;https://github.com/psibi/justl.el/actions/workflows/check.yaml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/justl&#34;&gt;&lt;img alt=&#34;MELPA&#34; src=&#34;https://melpa.org/packages/justl-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;justl.el mode is a major mode for driving [[https://github.com/casey/just][justfiles]]. As compared to the [[https://melpa.org/#/just-mode][just-mode]], this mode is built for listing and executing the recipes in the justfile via the [[https://magit.vc/manual/transient][transient]] keymaps. Also works with [[https://www.gnu.org/software/tramp/][TRAMP]].&lt;/p&gt; &#xA;&lt;p&gt;[[https://user-images.githubusercontent.com/737477/132949123-87387b7e-8f7d-45de-ac32-8815d9c1dc5d.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s available via [[https://melpa.org/#/justl][melpa]] and can be installed through [[https://github.com/jwiegley/use-package][use-package]]:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp (use-package justl :ensure t :custom (justl-executable &#34;/home/sibi/bin/just&#34;)) #+end_example&lt;/p&gt; &#xA;&lt;p&gt;Optionally you can install it via [[https://github.com/quelpa/quelpa][quelpa]] too:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp (use-package justl :quelpa (justl :fetcher github :repo &#34;psibi/justl.el&#34;)&lt;/p&gt; &#xA;&lt;p&gt;:custom (justl-executable &#34;/home/sibi/bin/just&#34;) (justl-recipe-width 25)) #+end_example&lt;/p&gt; &#xA;&lt;p&gt;For [[https://github.com/doomemacs/doomemacs][doom emacs]], you can install by adding the following to your &lt;code&gt;config.el&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp (use-package! justl :config (map! :n &#34;e&#34; &#39;justl-exec-recipe)) #+end_example&lt;/p&gt; &#xA;&lt;p&gt;and the following to your &lt;code&gt;packages.el&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp (package! justl :recipe (:host github :repo &#34;psibi/justl.el&#34;)) #+end_example&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To list all the recipes present in your justfile, call&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp M-x justl #+end_example&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to call it from the actual justfile. Calling it from the directory where the justfile is present should be enough.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively if you want to just execute a recipe quickly, call&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example elisp M-x justl-exec-recipe-in-dir #+end_example&lt;/p&gt; &#xA;&lt;p&gt;To execute default recipe, call &lt;em&gt;justl-exec-default-recipe&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To execute multiple recipes in parallel, customize &lt;em&gt;justl-per-recipe-buffer&lt;/em&gt; to create dedicated buffers named /&lt;em&gt;just-RECIPE&lt;/em&gt;/. This is useful to manage long running process.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shortcuts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the just screen, place your cursor on a recipe:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_example h =&amp;gt; help popup ? =&amp;gt; help popup g =&amp;gt; refresh e =&amp;gt; execute recipe E =&amp;gt; execute recipe with a shell w =&amp;gt; execute recipe with arguments W =&amp;gt; open a shell without executing #+end_example&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customize&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Because the help popup is built with transient, you can [[https://www.gnu.org/software/emacs//manual/html_node/transient/Saving-Values.html][set and save your choices]] the same way you would with any other transient dialog.&lt;/li&gt; &#xA; &lt;li&gt;By default, justl searches the executable named &lt;em&gt;just&lt;/em&gt;, you can change the /justl-executable/ variable to set any explicit path.&lt;/li&gt; &#xA; &lt;li&gt;You can also control the width of the RECIPE column in the justl buffer via /justl-recipe width/. By default it has a value of 20.&lt;/li&gt; &#xA; &lt;li&gt;You can change the shell between /eshell/ and /vterm/ using the /justl-shell/ variable. Using vterm requires [[https://github.com/akermu/emacs-libvterm][the vterm package]] to be installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Releases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the [[file:Changelog.org][Changelog.org]] for the list of changes.&lt;/p&gt;</summary>
  </entry>
</feed>