<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-02T01:30:08Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>szermatt/visual-replace</title>
    <updated>2024-11-02T01:30:08Z</updated>
    <id>tag:github.com,2024-11-02:/szermatt/visual-replace</id>
    <link href="https://github.com/szermatt/visual-replace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A nicer interface for query-replace on Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;visual-replace&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/szermatt/visual-replace/actions&#34;&gt;&lt;img src=&#34;https://github.com/szermatt/visual-replace/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://visual-replace.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/visual-replace/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stable.melpa.org/#/visual-replace&#34;&gt;&lt;img src=&#34;https://stable.melpa.org/packages/visual-replace-badge.svg?sanitize=true&#34; alt=&#34;MELPA stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/visual-replace&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/visual-replace-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Visual Replace provides a nicer interface to &lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Query-Replace.html&#34;&gt;Query-Replace&lt;/a&gt; on Emacs than the built-in one.&lt;/p&gt; &#xA;&lt;p&gt;The main improvements are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The prompt of Visual Replace includes both the text to be replaced and the replacement. This makes it easier to craft possibly complex regular expression search and replace.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can modify the scope and type of the search-and-replace command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can see what is going to be modified as you edit the command arguments.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can go through the replacements and apply only some of them, using keyboard shortcuts, or by clicking on the preview.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Visual Replace is only an interface for the existing query and replace mechanisms built into Emacs, that is, the actual replacements are always done by the standard Emacs commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/szermatt/visual-replace/master/images/capture_blue.png&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;The following is just a quick introduction. Read the full documentation at &lt;a href=&#34;https://visual-replace.readthedocs.io/en/latest/&#34;&gt;https://visual-replace.readthedocs.io/en/latest/&lt;/a&gt; or, if you have already installed Visual Replace, in the Emacs info reader&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The prompt also displays the mode of replacement:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;text&lt;/em&gt; → &lt;em&gt;replacement&lt;/em&gt; executes &lt;code&gt;string-replace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;text&lt;/em&gt; →? &lt;em&gt;replacement&lt;/em&gt; executes &lt;code&gt;query-replace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;text&lt;/em&gt; →.* &lt;em&gt;replacement&lt;/em&gt; executes &lt;code&gt;replace-regexp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;text&lt;/em&gt; →?.* &lt;em&gt;replacement&lt;/em&gt; executes &lt;code&gt;query-replace-regexp&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More flags can be toggled, to control:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the scope of the replacement, region or whole buffer&lt;/li&gt; &#xA; &lt;li&gt;whether search and replace applies on whole words only&lt;/li&gt; &#xA; &lt;li&gt;with or without &lt;code&gt;case-fold-search&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;with or without &lt;code&gt;replace-lex-whitespace&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you leave &lt;code&gt;visual-replace&lt;/code&gt; without confirming, with C-g, you can continue where you left off next time by going up in the history, with &lt;code&gt;C-p&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;code&gt;visual-replace&lt;/code&gt; is active, it scrolls the window to keep at least one example of matches visible. You can also press up and down to go through the matches. (&lt;code&gt;C-p&lt;/code&gt; and &lt;code&gt;C-n&lt;/code&gt; remain available to navigate through history.)&lt;/p&gt; &#xA;&lt;h2&gt;COMPARISON&lt;/h2&gt; &#xA;&lt;p&gt;What seems to be unique about &lt;code&gt;visual-replace&lt;/code&gt; is the ability to edit both the thing to be replaced and the replacement at the same time. The other packages I&#39;ve found make it a 2-step process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/benma/visual-regexp.el&#34;&gt;visual-regexp&lt;/a&gt; also supports a preview, but uses its own search-and-replace mechanism and only supports a regexp mode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/emacsorphanage/anzu&#34;&gt;anzu&lt;/a&gt; also supports a preview and supports a more powerful query-replace mechanism, and much more. It was abandoned for a long time, but has been recently taken up by a new maintainer.&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;p&gt;You can install Visual Replace:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;from &lt;a href=&#34;https://melpa.org/#/getting-started&#34;&gt;MELPA&lt;/a&gt;, by typing &lt;code&gt;M-x package-install visual-replace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;from source, by executing &lt;code&gt;(package-vc-install &#34;https://github.com/szermatt/visual-replace&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To replace &lt;code&gt;query-replace&#39; with &lt;/code&gt;visual-replace&#39; globally, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(require &#39;visual-replace)&#xA;(visual-replace-global-mode 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/jwiegley/use-package&#34;&gt;use-package&lt;/a&gt; and with a custom key binding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package visual-replace&#xA;   :defer t&#xA;   :bind ((&#34;C-c r&#34; . visual-replace)&#xA;          :map isearch-mode-map&#xA;          (&#34;C-c r&#34; . visual-replace-from-isearch)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USAGE&lt;/h2&gt; &#xA;&lt;p&gt;Launch `visual-replace&#39; with the keybinding you chose when installing, &#34;M-%&#34; by default.&lt;/p&gt; &#xA;&lt;p&gt;In that mode:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;TAB&#34; navigates between the text to replace and the replacement string&lt;/li&gt; &#xA; &lt;li&gt;&#34;RET&#34; switches to the replacement string, the first time, then executes the replacement&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% SPC&#34; modifies the scope of the search (full buffer, from point, region)&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% r&#34; toggles regexp mode on and off&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% q&#34; toggles query mode one and off&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% w&#34; toggle limiting search to whole words&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% c&#34; toggle case-fold&lt;/li&gt; &#xA; &lt;li&gt;&#34;M-% s&#34; toggle lax whitespace&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you started &lt;code&gt;visual-replace&lt;/code&gt; with another keybinding, replace M-X with that keybinding. Modify &lt;code&gt;visual-replace-mode-map&lt;/code&gt; and &lt;code&gt;visual-replace-secondary-mode-map&lt;/code&gt; to customize the keybindings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;visual-replace-from-isearch&lt;/code&gt; switches from an active isearch session to &lt;code&gt;visual-replace&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;visual-replace-thing-at-point&lt;/code&gt; starts a visual replace session with the symbol at point, or a specified thing as understood by &lt;code&gt;thing-at-point&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;visual-replace-selected&lt;/code&gt; starts with the text within the current active region.&lt;/p&gt; &#xA;&lt;h2&gt;TESTING&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://github.com/emacs-eldev/eldev#installation&#34;&gt;eldev&lt;/a&gt; and run tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eldev test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SOMETHING IS WRONG !&lt;/h2&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;https://visual-replace.readthedocs.io/en/latest/&#34;&gt;doc&lt;/a&gt; and, if that doesn&#39;t help, take the time to &lt;a href=&#34;https://visual-replace.readthedocs.io/en/latest/contrib.html#reporting-issues&#34;&gt;file a bug report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;CONTRIBUTING&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://visual-replace.readthedocs.io/en/latest/contrib.html&#34;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;COMPATIBILITY&lt;/h2&gt; &#xA;&lt;p&gt;Visual-Replace requires Emacs 26.1 or later.&lt;/p&gt;</summary>
  </entry>
</feed>