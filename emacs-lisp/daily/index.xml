<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-22T01:32:36Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dash-docs-el/helm-dash</title>
    <updated>2022-09-22T01:32:36Z</updated>
    <id>tag:github.com,2022-09-22:/dash-docs-el/helm-dash</id>
    <link href="https://github.com/dash-docs-el/helm-dash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Browse Dash docsets inside emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm Dash&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/areina/helm-dash&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/areina/helm-dash.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/areina/helm-dash?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/areina/helm-dash.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://melpa.org/#/helm-dash&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/helm-dash-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/helm-dash&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/helm-dash-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/areina/helm-dash/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/areina/helm-dash.svg?sanitize=true&#34; alt=&#34;Tag Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-gpl3-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s it&lt;/h2&gt; &#xA;&lt;p&gt;This package uses &lt;a href=&#34;http://www.kapeli.com/dash&#34;&gt;Dash&lt;/a&gt; docsets inside emacs to browse documentation. Here&#39;s an &lt;a href=&#34;http://puntoblogspot.blogspot.com.es/2014/01/ann-helm-dash-documentation-browser-for.html&#34;&gt;article&lt;/a&gt; explaining the basic usage of it.&lt;/p&gt; &#xA;&lt;p&gt;It doesn&#39;t require Dash app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/areina/helm-dash/master/misc/helm-dash.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s not&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking for dash.el, the list library, please go to &lt;a href=&#34;http://www.github.com/magnars/dash.el&#34;&gt;dash.el&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emacs-helm/helm&#34;&gt;helm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqlite3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s available on &lt;a href=&#34;https://melpa.org&#34;&gt;MELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now, it&#39;s possible to choose between install the stable or development version of helm-dash. &lt;a href=&#34;https://github.com/milkypostman/melpa#stable-packages&#34;&gt;Here&lt;/a&gt; there is an explanation about stable packages and MELPA and &lt;a href=&#34;https://github.com/areina/helm-dash/tags&#34;&gt;here&lt;/a&gt; a list of our tags.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;m-x package-install helm-dash RET&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing docsets&lt;/h2&gt; &#xA;&lt;p&gt;Helm-dash uses the same docsets as &lt;a href=&#34;http://www.kapeli.com/dash&#34;&gt;Dash&lt;/a&gt;. You can install them with &lt;code&gt;m-x helm-dash-install-docset&lt;/code&gt; for the official docsets or &lt;code&gt;m-x helm-dash-install-user-docset&lt;/code&gt; for user contributed docsets (experimental).&lt;/p&gt; &#xA;&lt;p&gt;To install a docset from a file in your drive you can use &lt;code&gt;m-x helm-dash-install-docset-from-file&#39;. That function takes as input a &lt;/code&gt;tgz&lt;code&gt;file that you obtained, starting from a folder named&lt;/code&gt;&#xA; &lt;docset name&gt;&#xA;  .docset`, with the command:&#xA; &lt;/docset&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tar --exclude=&#39;.DS_Store&#39; -cvzf &amp;lt;docset name&amp;gt;.tgz &amp;lt;docset name&amp;gt;.docset&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;as explained &lt;a href=&#34;https://kapeli.com/docsets#dashdocsetfeed&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;m-x helm-dash RET&lt;/code&gt; will run helm with your active docsets loaded. Typing substrings of what you search will find-as-you-type.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The search starts from 3 chars.&lt;/li&gt; &#xA; &lt;li&gt;Install new docsets with m-x helm-dash-install-docset&lt;/li&gt; &#xA; &lt;li&gt;After installing a new docset, add the name of the docset to `helm-dash-common-docsets&#39; or in &#39;helm-dash-docsets&#39; (which is ment to be buffer local)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;m-x helm-dash-at-point RET&lt;/code&gt; is like helm-dash, but it will prefill the search input with the symbol at point.&lt;/p&gt; &#xA;&lt;p&gt;The command &lt;code&gt;helm-dash-reset-connections&lt;/code&gt; will clear the connections to all sqlite db&#39;s. Use it in case of errors when adding new docsets. The next call to &lt;code&gt;helm-dash&lt;/code&gt; will recreate them.&lt;/p&gt; &#xA;&lt;h2&gt;Variables to customize&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;helm-dash-docsets-path&lt;/code&gt; is the prefix for your docsets. Defaults to ~/.docsets&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;helm-dash-min-length&lt;/code&gt; tells helm-dash from which length to start searching. Defaults to 3.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;helm-dash-browser-func&lt;/code&gt; is a function to encapsulate the way to browse Dash&#39; docsets. Defaults to browse-url. For example, if you want to use eww to browse your docsets, you can do: &lt;code&gt;(setq helm-dash-browser-func &#39;eww)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;helm-dash-enable-debugging&lt;/code&gt; is non-nil stderr from sqlite queries is captured and displayed in a buffer. The default value is &lt;code&gt;t&lt;/code&gt;. Setting this to &lt;code&gt;nil&lt;/code&gt; may speed up queries on some machines (capturing stderr requires the creation and deletion of a temporary file for each query).&lt;/p&gt; &#xA;&lt;h2&gt;Sets of Docsets&lt;/h2&gt; &#xA;&lt;h3&gt;Common docsets&lt;/h3&gt; &#xA;&lt;p&gt;`helm-dash-common-docsets&#39; is a list that should contain the docsets to be active always. In all buffers.&lt;/p&gt; &#xA;&lt;h3&gt;Buffer local docsets&lt;/h3&gt; &#xA;&lt;p&gt;Different subsets of docsets can be activated depending on the buffer. For the moment (it may change in the future) we decided it&#39;s a plain local variable you should setup for every different filetype. This way you can also do fancier things like project-wise docsets sets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(defun go-doc ()&#xA;  (interactive)&#xA;  (setq-local dash-docs-docsets &#39;(&#34;Go&#34;)))&#xA;&#xA;(add-hook &#39;go-mode-hook &#39;go-doc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Only one docset&lt;/h3&gt; &#xA;&lt;p&gt;To narrow the search to just one docset, type its name in the beginning of the search followed by a space. If the docset contains spaces, no problemo, we handle it :D.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does it work in osX?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;sqlite queries. Provisionally, we&#39;re executing shell-commands directly. Our idea is come back to use &lt;a href=&#34;http://www.github.com/mhayashi1120/Emacs-esqlite&#34;&gt;esqlite&lt;/a&gt; when some issues will be fixed.&lt;/p&gt; &#xA;&lt;p&gt;helm-dash has been tested only in linux. We&#39;ve been notified that it doesn&#39;t work in Mac, so we ask for elisp hackers who own something that runs Mac OSX if they could take a look at it.&lt;/p&gt; &#xA;&lt;p&gt;Hints: It looks like something with &#39;end of line&#39; differences. The suspicious are &lt;a href=&#34;http://www.github.com/mhayashi1120/Emacs-esqlite&#34;&gt;esqlite&lt;/a&gt; (which helm-dash requires) or &lt;a href=&#34;http://www.github.com/mhayashi1120/Emacs-pcsv&#34;&gt;pcsv&lt;/a&gt; (which esqlite requires)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I&#39;m using mac osx and pages open but not in the correct anchor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/areina/helm-dash/issues/36&#34;&gt;bug on &lt;strong&gt;mac osx&lt;/strong&gt;&#39;s browse-url&lt;/a&gt; which can&#39;t open urls with #. If you find this issue, and want to debug, great, otherwise, you can use eww or w3 or w3m which will work just fine&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I get nil for every search I do&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;make sure you don&#39;t have sqlite3 .mode column but .mode list (the default). check your .sqliterc&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When selecting an item in helm-dash, no browser lookup occurs with firefox &amp;gt;= 38.0.and emacs &amp;gt;= 24.4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;try:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(setq browse-url-browser-function &#39;browse-url-generic&#xA;      browse-url-generic-program &#34;/path/to/firefox&#34;)&#xA;(setq helm-dash-browser-func &#39;browse-url-generic)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;We â™¥ feedback, issues or pull requests. Feel free to contribute in helm-dash.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re trying to add tests to the project, if you send a PR please consider add new or update the existing ones.&lt;/p&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://github.com/cask/cask&#34;&gt;Cask&lt;/a&gt; if you haven&#39;t already, then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd /path/to/helm-dash&#xA;$ cask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Toni Reina &lt;a href=&#34;mailto:areina0@gmail.com&#34;&gt;areina0@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Raimon Grau &lt;a href=&#34;mailto:raimonster@gmail.com&#34;&gt;raimonster@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>thomasf/dotfiles-thomasf-emacs</title>
    <updated>2022-09-22T01:32:36Z</updated>
    <id>tag:github.com,2022-09-22:/thomasf/dotfiles-thomasf-emacs</id>
    <link href="https://github.com/thomasf/dotfiles-thomasf-emacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs configuration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;My dotfiles&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;These are my personal dotfiles, which I manage with the help of git and a nice tool called &lt;a href=&#34;https://github.com/jbernard/dotfiles&#34; title=&#34;dotfiles&#34;&gt;dotfiles&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the &lt;a href=&#34;https://github.com/jbernard/dotfiles&#34; title=&#34;dotfiles&#34;&gt;dotfiles&lt;/a&gt; package&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install dotfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create some directory where to store multiple dotfiles repositories.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p ~/src/dotfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clone this repository into that directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/thomasf/dotfiles-thomasf-emacs ~/src/dotfiles/emacs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And symlink it&#39;s contents into your home directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotfiles -s -R ~/src/dotfiles/emacs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also check out &lt;code&gt;dotfiles -h&lt;/code&gt; or the &lt;a href=&#34;https://github.com/jbernard/dotfiles&#34;&gt;dotfiles&lt;/a&gt; manual for more information on the hows and whats of that tool.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>etrepum/emacs.d</title>
    <updated>2022-09-22T01:32:36Z</updated>
    <id>tag:github.com,2022-09-22:/etrepum/emacs.d</id>
    <link href="https://github.com/etrepum/emacs.d" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My ${HOME}/.emacs.d nest&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>