<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-29T01:35:36Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>karthink/dired-delight</title>
    <updated>2023-06-29T01:35:36Z</updated>
    <id>tag:github.com,2023-06-29:/karthink/dired-delight</id>
    <link href="https://github.com/karthink/dired-delight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tag files with colors in Dired&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+title: dired-delight: Colorful, persistent tags for files&lt;/p&gt; &#xA;&lt;p&gt;Dired Delight lets you tag files in Dired, Emacs&#39; file manager, with colors.&lt;/p&gt; &#xA;&lt;h1&gt;[[https://github.com/karthink/dired-delight/assets/8607532/317649f7-6e0c-40df-b74e-3dc381119ed8]]&lt;/h1&gt; &#xA;&lt;p&gt;[[https://github-production-user-asset-6210df.s3.amazonaws.com/8607532/248907131-b1a91441-580c-439a-841b-328c45eea170.png]]&lt;/p&gt; &#xA;&lt;p&gt;This affords a visual way -- besides the filesystem tree -- to group files, or persistently mark files needing action, find a specific file at a glance, etc... I think? (Honestly I&#39;m not sure.)&lt;/p&gt; &#xA;&lt;p&gt;*** Features&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are two supported styles for marking:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://github-production-user-asset-6210df.s3.amazonaws.com/8607532/248907455-e871a653-efe2-484d-82bc-95cddebdf437.png]]&lt;/p&gt; &#xA;&lt;h1&gt;[[https://github.com/karthink/dired-delight/assets/8607532/9523c17c-8c80-41aa-8585-38c4b8f94e78]]&lt;/h1&gt; &#xA;&lt;p&gt;A block next to the file name (left), or highlighting (right). Both styles work with and without =dired-hide-details-mode=.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select colors with preview for marking:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://github-production-user-asset-6210df.s3.amazonaws.com/8607532/248907735-1ba63f8f-6cc5-40e1-8f29-51665fc80843.png]]&lt;/p&gt; &#xA;&lt;h1&gt;[[https://github.com/karthink/dired-delight/assets/8607532/c0df5600-d0d2-495f-901f-5d44a063caeb]]&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works fine with [[https://github.com/alexluigit/dirvish/][Dirvish]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Installation&lt;/p&gt; &#xA;&lt;p&gt;**** Manual&lt;/p&gt; &#xA;&lt;p&gt;Clone this repo or download its files and run =M-x package-install-file= on the directory.&lt;/p&gt; &#xA;&lt;p&gt;**** Straight&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (use-package dired-delight :straight (:host github :repo &#34;karthink/dired-delight&#34;) :hook (dired-mode . dired-delight-mode) :bind (:map dired-mode-map (&#34;@&#34; . dired-delight) (&#34;*c&#34; . dired-delight-mark-color))) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;**** Quelpa&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC elisp (package-install &#39;quelpa-use-package) (require &#39;quelpa-use-package)&lt;/p&gt; &#xA;&lt;p&gt;(use-package dired-delight :quelpa (dired-delight :fetcher github :repo &#34;karthink/dired-delight&#34;) :hook (dired-mode . dired-delight-mode) :bind (:map dired-mode-map (&#34;@&#34; . dired-delight) (&#34;*c&#34; . dired-delight-mark-color))) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;*** Usage&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Turn on =dired-delight-mode= in a Dired buffer.&lt;/li&gt; &#xA; &lt;li&gt;Mark files (or not for a single file) and call =dired-delight= to tag marked files. To remove a tag don&#39;t supply any color, i.e. leave it blank.&lt;/li&gt; &#xA; &lt;li&gt;Call =dired-delight-mark-color= to mark all files that have a given color. You can then narrow the buffer to these files, or act on them in any of the usual ways.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The following keybindings may help: #+begin_src emacs-lisp (define-key dired-mode-map (kbd &#34;@&#34;) &#39;dired-delight) (define-key dired-mode-map (kbd &#34;*c&#34;) &#39;dired-delight-mark-color) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;*** Customization&lt;/p&gt; &#xA;&lt;p&gt;| Option | Description | Default | |----------------------------------+----------------------------------------------------+-------------------------| | =dired-delight-display= | Set color display style (block or background) | Block | | =dired-delight-use-relative-names= | Match files by relative names, not absolute paths. | Absolute paths | | =dired-delight-file= | File used to persist Delight data across sessions | =XDG_CACHE_DIR= or =user-emacs-directory= |&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>viperproject/vpr-mode</title>
    <updated>2023-06-29T01:35:36Z</updated>
    <id>tag:github.com,2023-06-29:/viperproject/vpr-mode</id>
    <link href="https://github.com/viperproject/vpr-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Viper mode for emacs&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Viper mode for Emacs [[https://www.pm.inf.ethz.ch/research/viper.html][Viper]] language support for Emacs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dependencies&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Z3 (tested with versions 4.8.7 and 4.12.1)&lt;/li&gt; &#xA; &lt;li&gt;Boogie (for using [[https://github.com/viperproject/carbon][carbon]] as a backend)&lt;/li&gt; &#xA; &lt;li&gt;[[https://github.com/viperproject/viperserver][ViperServer]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This package is under heavy development and does not support all Viper features. Thus, it is not published in any package archives.&lt;/p&gt; &#xA;&lt;p&gt;To install it, one must clone the repository:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell git clone &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:viperproject/vpr-mode.git #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;Then, add the following lines in your init.el.&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC emacs-lisp (add-to-list &#39;load-path &#34;&#xA; &lt;vpr-mode path&gt;&#xA;  &#34;)&#xA; &lt;/vpr-mode&gt;&lt;/p&gt; &#xA;&lt;p&gt;(use-package vpr-mode) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;Last the following variables must be set&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (setq vpr-z3-path &#34;&amp;lt;path/to/z3 exe&amp;gt;&#34;) (setq vpr-viperserver-path &#34;/path/to/viperserver.jar&#34;) (setq vpr-boogie-path &#34;&amp;lt;path/to/boogie exe&amp;gt;&#34;) ; required only for running viper with carbon #+end_src&lt;/p&gt; &#xA;&lt;p&gt;If you want the verification to happen on save:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC emacs-lisp (add-hook &#39;after-save-hook #&#39;vpr-verify) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;Note that the name of the mode is &lt;del&gt;vpr-mode&lt;/del&gt; to not clash with the built-in [[https://www.emacswiki.org/emacs/ViperMode][viper-mode]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current keybindings are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;C-c C-c&lt;/del&gt;: Start Viper server&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;C-c C-v&lt;/del&gt;: Verify this file&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;C-c C-x&lt;/del&gt;: Stop Viper server&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;C-c C-b&lt;/del&gt;: Alternate the backend between silicon and carbon&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;C-c C-a&lt;/del&gt;: Edit the arguments given to Viper through a construction buffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Who do I talk to? This project is maintained by [[https://github.com/Dspil][Dionisios Spiliopoulos]]&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>