<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-05T01:35:20Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>elizagamedev/shell-command-x.el</title>
    <updated>2023-07-05T01:35:20Z</updated>
    <id>tag:github.com,2023-07-05:/elizagamedev/shell-command-x.el</id>
    <link href="https://github.com/elizagamedev/shell-command-x.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extensions for Emacs&#39; shell commands&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shell-command-x.el&lt;/h1&gt; &#xA;&lt;p&gt;Extensions for Emacs&#39; shell commands.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;shell-command-x-mode&lt;/code&gt; provides an assortment of extensions for the interactive Emacs shell commands &lt;code&gt;shell-command&lt;/code&gt; and &lt;code&gt;async-shell-command&lt;/code&gt;. Its primary features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The names of process buffers can be customized on a per-command basis; for example, the buffer name for the command &lt;code&gt;ls -la&lt;/code&gt; can be automatically set to &lt;code&gt;*shell:ls*&lt;/code&gt;, &lt;code&gt;*shell:ls -la*&lt;/code&gt;, or any other number of desired values.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When a command completes, its output buffer can emulate &lt;code&gt;special-mode&lt;/code&gt;; this is useful for quickly dismissing (with &lt;code&gt;quit-window&lt;/code&gt;) or quickly re-running the command (with &lt;code&gt;revert-buffer&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When a command completes, the point can be moved to the beginning of the output buffer if the command wasn&#39;t interactive; this is useful for paging through the output of commands like &lt;code&gt;grep --help&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This package is not yet available on M?ELPA. In the meantime, you can use something like &lt;a href=&#34;https://github.com/radian-software/straight.el&#34;&gt;straight.el&lt;/a&gt; or &lt;a href=&#34;https://github.com/progfolio/elpaca&#34;&gt;elpaca.el&lt;/a&gt;. Here is an example with &lt;a href=&#34;https://github.com/jwiegley/use-package&#34;&gt;use-package.el&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package shell-command-x&#xA;  :elpaca (:host github :repo &#34;elizagamedev/shell-command-x.el&#34;)&#xA;  :init&#xA;  (shell-command-x-mode 1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;shell-command-x&lt;/code&gt; is highly configurable. Refer to its customization group for a full list of options and detailed documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;M-x customize-group RET shell-command-x RET&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, there are some other built-in shell-related configuration options that pair well &lt;code&gt;shell-command-x-mode&lt;/code&gt;. In particular, by setting &lt;code&gt;async-shell-command-display-buffer&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; and configuring &lt;code&gt;display-buffer-alist&lt;/code&gt;, you can configure Emacs to be very particular about only displaying command buffers that have useful output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; If a shell command never outputs anything, don&#39;t show it.&#xA;(customize-set-variable &#39;async-shell-command-display-buffer nil)&#xA;&#xA;(customize-set-variable&#xA; &#39;display-buffer-alist&#xA; `(;; Never show mpv and xdg-open buffers...&#xA;   (&#34;\\*shell:\\(mpv\\|xdg-open\\)\\*.*&#34;&#xA;    (display-buffer-no-window))&#xA;   ;; ...but show all other command outputs in a dedicated side window.&#xA;   (&#34;\\*shell:.*?\\*.*&#34;&#xA;    (display-buffer-in-side-window)&#xA;    (side . right)&#xA;    (window-width . 80)&#xA;    (dedicated . t))&#xA;   ;; etc...&#xA;   ))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Overdr0ne/shelldon&#34;&gt;shelldon.el&lt;/a&gt;. Like &lt;code&gt;shell-command-x&lt;/code&gt;, &lt;code&gt;shelldon&lt;/code&gt; gives buffers more meaningful names. &lt;code&gt;shelldon&lt;/code&gt; also provides a numbered history of each command run out of the box. However, &lt;code&gt;shell-command-x&lt;/code&gt; has a more configurable naming scheme and provides more features. The two packages are theoretically compatible with one another.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xenodium/dwim-shell-command&#34;&gt;dwim-shell-command.el&lt;/a&gt;. This package primarily adds extra templated arguments to shell commands, in particular, when used with &lt;code&gt;dired&lt;/code&gt;. It also provides its own take on whether or not to display shell command buffers, using a combination of heuristics and explicit user input. While the extra templating is a fantastic feature, its focusing behavior conflicts with an ordinary &lt;code&gt;display-buffer-alist&lt;/code&gt;-based workflow. The two packages are theoretically compatible with one another.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sgpthomas/async-shell&#34;&gt;async-shell.el&lt;/a&gt;. In addition to the special-mode like features, provides some additional features via a transient-based interface. It operates separately from the built-in &lt;code&gt;shell-command&lt;/code&gt;, but all in all, it&#39;s very similar to shell-command-x.el.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>stormogulen/.emacs</title>
    <updated>2023-07-05T01:35:20Z</updated>
    <id>tag:github.com,2023-07-05:/stormogulen/.emacs</id>
    <link href="https://github.com/stormogulen/.emacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs Configuration&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;Personal Emacs Configuration Using Cask, Pallet and MELPA&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>