<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-14T01:34:10Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jcs090218/setup-emacs-windows</title>
    <updated>2024-04-14T01:34:10Z</updated>
    <id>tag:github.com,2024-04-14:/jcs090218/setup-emacs-windows</id>
    <link href="https://github.com/jcs090218/setup-emacs-windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Github Action that installs a specific emacs version&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;I&#39;ve created another GitHub Actions project that supports all common platforms (&lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;macOS&lt;/code&gt;, and &lt;code&gt;Windows&lt;/code&gt;). See &lt;a href=&#34;https://github.com/jcs090218/setup-emacs&#34;&gt;jcs090218/setup-emacs&lt;/a&gt; for more information! I will recommend people use that instead of this one!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jcs090218/setup-emacs-windows/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/jcs090218/setup-emacs-windows.svg?label=release&amp;amp;logo=github&#34; alt=&#34;Release Tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jcs090218/setup-emacs-windows/master/#&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/jcs090218/setup-emacs-windows/master/etc/emacs-logo.png&#34; width=&#34;15%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Set up Emacs in Windows&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A Github Action that installs a specific emacs version&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jcs090218/setup-emacs-windows/actions&#34;&gt;&lt;img src=&#34;https://github.com/jcs090218/setup-emacs-windows/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jcs090218/setup-emacs-windows/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/jcs090218/setup-emacs-windows/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://david-dm.org/jcs090218/setup-emacs-windows&#34;&gt;&lt;img src=&#34;https://status.david-dm.org/gh/jcs090218/setup-emacs-windows.svg?sanitize=true&#34; alt=&#34;dependencies Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üîß Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: jcs090218/setup-emacs-windows@master&#xA;with:&#xA;  version: 24.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;emacs&lt;/code&gt; executable on the path will then be the requested version. For a list of available versions, please see the &lt;a href=&#34;https://ftp.gnu.org/gnu/emacs/windows/&#34;&gt;main GNU FTP server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Note about compiling binary emacs modules&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xuchunyang/strptime.el&#34;&gt;Here&#39;s an example&lt;/a&gt; of a project which compiles binary modules against an Emacs installed with this method.&lt;/p&gt; &#xA;&lt;h2&gt;‚öúÔ∏è License&lt;/h2&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DevelopmentCool2449/colorful-mode</title>
    <updated>2024-04-14T01:34:10Z</updated>
    <id>tag:github.com,2024-04-14:/DevelopmentCool2449/colorful-mode</id>
    <link href="https://github.com/DevelopmentCool2449/colorful-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üé®Preview any color in your buffer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+title: [[./assets/colorful-mode-logo.svg]] #+subtitle: Preview any color in your buffer in real time. #+author: Elias G.B. Perez #+language: en #+export_file_name: colorful-mode.texi #+texinfo_dir_category: Emacs misc features #+texinfo_dir_title: colorful-mode: (colorful-mode). #+texinfo_dir_desc: Preview color hexs in your buffer&lt;/p&gt; &#xA;&lt;p&gt;#+html: &lt;img src=&#34;https://raw.githubusercontent.com/DevelopmentCool2449/emacs-svg-badges/main/elisp_logo_warning.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;10%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;üü¢colorful-mode is a minor mode that allow you preview any color format such as &lt;em&gt;color hex&lt;/em&gt; and &lt;em&gt;color names&lt;/em&gt;, in your current buffer in real time and in a user friendly way based on üåà[[https://elpa.gnu.org/packages/rainbow-mode.html][rainbow-mode.el]].&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;WARNING: THIS PACKAGE STILL IN A EXPERIMENTAL STATE, ABRUPT CHANGES SUCH AS DELETE USER FUNCTIONS, OPTIONS AND KEYBINDINGS OR UNEXPECTED BREAKS ARE USUALLY COMMON&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Features ‚ú®&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preview emacs colors names, hexadecimal colors and CSS rgb functions in your current buffer in real time.&lt;/li&gt; &#xA; &lt;li&gt;Convert color to other formats or copy them without replace current color.&lt;/li&gt; &#xA; &lt;li&gt;Preview using highlight or a prefix/suffix string.&lt;/li&gt; &#xA; &lt;li&gt;Preview only colors in strings.&lt;/li&gt; &#xA; &lt;li&gt;Exclude colors such as hex values and color names.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Screenshots and animated GIFs üì∑ [[./assets/gif1.gif]] /With prefix instead highliht/.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[./assets/gif2.gif]] [[./assets/gif3.gif]] [[./assets/screenshot1.png]] [[./assets/screenshot2.png]] [[./assets/screenshot3.png]]&lt;/p&gt; &#xA;&lt;p&gt;[[./assets/screenshot4.png]] /With a custom prefix (in this example a non-ASCII/Unicode character)/.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Options, Setups and Guides üìñ ** Customizable User options&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-allow-mouse-clicks (default: t)= If non-nil, allow using mouse buttons for change color.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-use-prefix (default: nil)= If non-nil, use prefix for preview color instead highlight them. &lt;em&gt;NOTE: css-mode and css-ts-mode by default colorize rgb and hex colors, this may interfere with colorful prefix, you can disable this setting =css-fontify-colors= to nil&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-prefix-string (default: &#34;‚óè&#34;)= Prefix symbol to be used according =colorful-use-prefix=.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-prefix-alignment (default: &#39;left)= The position to put prefix string. The value can be left or right.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-extra-color-keyword-functions= default: #+begin_src emacs-lisp &#39;((emacs-lisp-mode . (colorful-add-color-names colorful-add-rgb-colors)) ((css-mode css-ts-mode) . colorful-add-rgb-colors)) #+end_src List of functions to add extra color keywords to colorful-color-keywords.&lt;/p&gt; &lt;p&gt;It can be a cons cell specifing the mode (or a list of modes) e.g: #+begin_src emacs-lisp (((css-mode css-ts-mode) . colorful-add-rgb-colors) (emacs-lisp-mode . (colorful-add-color-names colorful-add-rgb-colors)) ((text-mode html-mode) . (colorful-add-color-names colorful-add-rgb-colors)) ...) #+end_src Or a simple list of functions for executing wherever colorful is active: (colorful-add-color-names colorful-add-rgb-colors)&lt;/p&gt; &lt;p&gt;Available functions are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;colorful-add-color-names.&lt;/li&gt; &#xA;   &lt;li&gt;colorful-add-rgb-colors.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-exclude-colors (default: &#39;(&#34;#def&#34;))= List of keyword to don&#39;t highlight.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-short-hex-convertions (default: t)= If non nil, hex values converted by coloful should be as short as possible. Setting this to t will make hex values follow a 24-bit specification and can make them inaccurate.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=colorful-only-strings (default: nil)= If non-nil colorful will only highlight colors inside strings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=global-colorful-modes (default: &#39;(mhtml-mode html-ts-mode css-mode css-ts-mode emacs-lisp-mode))= Which major modes global-colorful-mode is switched on in (globally).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Interactive User Functions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=colorful-change-or-copy-color= Change or copy color to a converted format at current cursor position.&lt;/li&gt; &#xA; &lt;li&gt;=colorful-convert-and-change-color= Convert color to a valid format and replace color at current cursor position.&lt;/li&gt; &#xA; &lt;li&gt;=colorful-convert-and-copy-color= Convert color to a valid format and copy it at current cursor position.&lt;/li&gt; &#xA; &lt;li&gt;=colorful-mode= Buffer-local minor mode.&lt;/li&gt; &#xA; &lt;li&gt;=global-colorful-mode= Global minor mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Key bindings These key bindings are defined by: =colorful-mode-map=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=C-c c c= ‚Üí =colorful-change-or-copy-color=.&lt;/li&gt; &#xA; &lt;li&gt;=C-c c k= ‚Üí =colorful-convert-and-copy-color=.&lt;/li&gt; &#xA; &lt;li&gt;=C-c c r= ‚Üí =colorful-convert-and-change-color=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Adding extra colors Colorful by default provides extra functions that highlight additional colors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=colorful-add-color-names= Add emacs color names to colorful-color-keywords.&lt;/li&gt; &#xA; &lt;li&gt;=colorful-add-rgb-colors= Add CSS rgb color to colorful-color-keywords.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For use them add it to: #+begin_src emacs-lisp ;; In this example add emacs color names to colorful-keywords. (add-to-list &#39;colorful-extra-color-keyword-functions #&#39;colorful-add-color-names) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;See: =colorful-extra-color-keyword-functions= for more details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation üì¶ It&#39;s recommended that you must use emacs-28.X or higher.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently colorful-mode is not available in any elisp package archive, however you can install it with =package-vc-install= in emacs-29.X&lt;/p&gt; &#xA;&lt;p&gt;Run =M-x package-vc-install= And type =&lt;a href=&#34;https://github.com/DevelopmentCool2449/colorful-mode.git=&#34;&gt;https://github.com/DevelopmentCool2449/colorful-mode.git=&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For emacs 30 users you can use =use-package= macro with =:vc= keyword:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (use-package colorful-mode :vc (:url &#34;&lt;a href=&#34;https://github.com/DevelopmentCool2449/colorful-mode.git&#34;&gt;https://github.com/DevelopmentCool2449/colorful-mode.git&lt;/a&gt;&#34; :rev :newest) ...) #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How does it compare to =rainbow-mode=? =colorful-mode= improves =rainbow-mode= in adding more features and fixing some /(and old)/ bugs:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;| Comparation | colorful-mode.el | rainbow-mode.el | |--------------------------------------------------------+------------------+-----------------| | Compatible with hl-line and other overlays? | ‚úì | ‚ùå | | Convert color to other formats? | ‚úì | ‚ùå | | Insert open color hex | Work in progress | ‚ùå | | Opcionally use string preffix/suffix instead highlight | ‚úì | ‚ùå | | Exclude keywords/colors to highlight | ‚úì | ‚ùå^{1} | | Highlight only in strings and docstrings | ‚úì | ‚ùå | | Allow highlight some colors only in specific modes | ‚úì | ‚ùå | | No performance issues?^{2} | ‚ùå | ‚úì |&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;rainbow-mode (like colorful) uses regex for highlight some keywords, however it cannot exclude specifics colors keywords (such as &#34;#def&#34; that overrides C &#34;#define&#34; keyword).&lt;/li&gt; &#xA; &lt;li&gt;I didn&#39;t a benchmark however due colorful-mode uses overlays instead text properties (like rainbow-mode) it can be a bit slow.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The intention is to provide a featured alternative to =rainbow-mode.el= with a user-friendy approach&lt;/p&gt; &#xA;&lt;p&gt;If you prefer only highlights without color convertion or preffix/suffix you can use =rainbow-mode.el=.&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, if you want convert colors, overlays and optional prefix strings you can use =colorful-mode.el=.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plans for future Currently this repo will only be used for feature-request /(i can&#39;t promise to do them)/, send bug reports, and feedback /(i would greatly appreciate this since i&#39;m not expert in elisp)/.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Due I have plans for submit it to &lt;em&gt;GNU ELPA&lt;/em&gt; /(and maybe MELPA)/ &lt;em&gt;Pull Resquest will not be accepted&lt;/em&gt; (unless your contribution is less than 15 lines [see: [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Copyright-Assignment.html][Copyright Assignment]]] and this package is ready for submit to ELPA and you are willing to assign copyright to FSF)&lt;/p&gt; &#xA;&lt;p&gt;Also i will try to make this package as stable as possible before submit it to ELPA, later that &lt;em&gt;I won&#39;t be able to be the mantainer&lt;/em&gt; of this package, However I would like if someone would be able to be the mantainer (if you are interested please email me &lt;a href=&#34;mailto:eg642616@gmail.com&#34;&gt;eg642616@gmail.com&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;#+html: &lt;img src=&#34;https://raw.githubusercontent.com/DevelopmentCool2449/emacs-svg-badges/main/powered_by_emacs.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;10%&#34;&gt; #+html: &lt;img src=&#34;https://raw.githubusercontent.com/DevelopmentCool2449/emacs-svg-badges/main/powered_by_org_mode.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;10%&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>