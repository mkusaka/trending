<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-22T01:32:31Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>balloneij/selection-highlight-mode</title>
    <updated>2023-11-22T01:32:31Z</updated>
    <id>tag:github.com,2023-11-22:/balloneij/selection-highlight-mode</id>
    <link href="https://github.com/balloneij/selection-highlight-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Emacs minor mode for highlighting matches to the selection&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+title: Selection Highlight Mode&lt;/p&gt; &#xA;&lt;p&gt;[[https://github.com/balloneij/selection-highlight-mode][file:demo.gif]]&lt;/p&gt; &#xA;&lt;p&gt;An Emacs minor mode for highlighting matches to the selection. Highlights matches across all active windows.&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the &lt;del&gt;Selection Highlight&lt;/del&gt; setting found in VS Code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A la &lt;del&gt;use-package&lt;/del&gt; and &lt;del&gt;straight&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (use-package selection-highlight-mode :straight (selection-highlight-mode :type git :host github :repo &#34;balloneij/selection-highlight-mode&#34;) :config (selection-highlight-mode)) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;For [[https://github.com/doomemacs/doomemacs][Doomed]] individuals:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp ;; packages.el (package! selection-highlight-mode :recipe (:host github :repo &#34;balloneij/selection-highlight-mode&#34;))&lt;/p&gt; &#xA;&lt;p&gt;;; config.el (use-package! selection-highlight-mode :config (selection-highlight-mode)) #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Changelog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;0.1.0&lt;/del&gt; Initial release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;License Copyright 2023 Isaac Ballone.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Distributed under [[LICENSE][the GNU General Public License, version 3]].&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TxGVNN/project-tasks</title>
    <updated>2023-11-22T01:32:31Z</updated>
    <id>tag:github.com,2023-11-22:/TxGVNN/project-tasks</id>
    <link href="https://github.com/TxGVNN/project-tasks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Efficient task management for your project.&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;project-tasks.el - Efficient task management for your projects [[https://melpa.org/#/project-tasks][file:https://melpa.org/packages//project-tasks-badge.svg]] [[http://www.gnu.org/licenses/gpl-3.0.html][http://img.shields.io/:license-gpl3-blue.svg]] ** Concept&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Formed during work on projects, I need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run docker-compose up&lt;/li&gt; &#xA; &lt;li&gt;access the database shell of the db service in docker-compose&lt;/li&gt; &#xA; &lt;li&gt;run mitmproxy&lt;/li&gt; &#xA; &lt;li&gt;run a new shell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using org-babel of org-mode is a great solution (&lt;del&gt;Literate Devops with Org-Mode&lt;/del&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Therefore, this package provides a convenient interface for accessing those tasks instead of accessing org-mode files and executing org-babel code blocks.&lt;/p&gt; &#xA;&lt;p&gt;*** Features&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;M-x &lt;del&gt;project-tasks&lt;/del&gt; #+begin_src markdown Find-file &lt;code&gt;project-tasks-file&lt;/code&gt; org file -&amp;gt; get all src-blocks by &lt;code&gt;(org-babel-src-block-names)&lt;/code&gt; -&amp;gt; display src-blocks to user -&amp;gt; user select and run &lt;code&gt;(org-babel-execute-src-block)&lt;/code&gt; #+end_src&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M-x &lt;del&gt;project-tasks-capture&lt;/del&gt; #+begin_src markdown Let &lt;code&gt;org-default-notes-file&lt;/code&gt; to &lt;code&gt;current_project/project-tasks-file&lt;/code&gt; -&amp;gt; &lt;code&gt;(org-capture)&lt;/code&gt; #+end_src&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M-x &lt;del&gt;project-tasks-jump&lt;/del&gt; #+begin_src markdown Find-file &lt;code&gt;current_project/project-tasks-file&lt;/code&gt; #+end_src&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Usage&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src elisp (use-package project-tasks :ensure t :defer t&lt;/p&gt; &#xA;&lt;p&gt;:commands (project-tasks)&lt;/p&gt; &#xA;&lt;p&gt;:init ;; Show project-tasks when switching projects (add-to-list &#39;project-switch-commands &#39;(project-tasks &#34;tasks&#34;) t) ;; Add action to embark-file map (with-eval-after-load &#39;embark (define-key embark-file-map (kbd &#34;P&#34;) #&#39;project-tasks-in-dir))&lt;/p&gt; &#xA;&lt;p&gt;:custom ;; Set the default filename in project (project-tasks-file &#34;tasks.org&#34;) ;; Set the function to get current project dir (project-tasks-root-func #&#39;project-tasks-project-root)&lt;/p&gt; &#xA;&lt;p&gt;;; Bind project-tasks to project keymap :bind (:map project-prefix-map (&#34;P&#34; . project-tasks) (&#34;o&#34; . project-tasks-capture) (&#34;O&#34; . project-tasks-jump)) )&lt;/p&gt; &#xA;&lt;p&gt;#+end_src&lt;/p&gt; &#xA;&lt;p&gt;*** Notice You need to ensure that your code blocks work as intended. This package serves as an interface for interacting with Org files but does not affect your Org configuration.&lt;/p&gt; &#xA;&lt;p&gt;** Examples Declare some tasks in &lt;del&gt;tasks.org&lt;/del&gt; as below: #+begin_src org&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tasks ,#+name: makemigrations ,#+begin_src compile :name makemigrations django-admin makemigrations ,#+end_src&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;,#+name: browser ,#+begin_src compile :name browser chromium --temp-profile &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; ,#+end_src #+end_src&lt;/p&gt; &#xA;&lt;p&gt;When you call &lt;del&gt;M-x project-tasks&lt;/del&gt;, it will display tasks that you want to choose to run&lt;/p&gt; &#xA;&lt;p&gt;[[https://txgvnn.github.io/images/project-tasks.png]]&lt;/p&gt; &#xA;&lt;p&gt;You can check more examples in &lt;del&gt;tasks.org&lt;/del&gt; file in this repository.&lt;/p&gt;</summary>
  </entry>
</feed>