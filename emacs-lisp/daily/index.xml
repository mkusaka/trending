<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-13T01:41:16Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>weirdNox/org-noter</title>
    <updated>2022-07-13T01:41:16Z</updated>
    <id>tag:github.com,2022-07-13:/weirdNox/org-noter</id>
    <link href="https://github.com/weirdNox/org-noter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs document annotator, using Org-mode&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[[https://melpa.org/#/org-noter][file:https://melpa.org/packages/org-noter-badge.svg]] [[https://stable.melpa.org/#/org-noter][file:https://stable.melpa.org/packages/org-noter-badge.svg]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Org-noter - A synchronized, Org-mode, document annotator After using Sebastian Christ&#39;s amazing [[https://github.com/rudolfochrist/interleave][Interleave package]] for some time, I got some ideas on how I could improve upon it, usability and feature-wise. So I created this package from scratch with those ideas in mind!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Org-noter&#39;s purpose is to let you create notes that are kept in sync when you scroll through the document, but that are external to it - the notes themselves live in an Org-mode file. As such, this leverages the power of [[http://orgmode.org/][Org-mode]] (the notes may have outlines, latex fragments, babel, etc...) while acting like notes that are made /inside/ the document. Also, taking notes is very simple: just press @@html:&lt;kbd&gt;@@i@@html:&lt;/kbd&gt;@@ and annotate away!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: While this is similar to &lt;del&gt;interleave&lt;/del&gt;, it is not intended to be a clone; therefore, /not every feature of the original mode is available/! You may prefer using the original, because this is a different take on the same idea. [[#diff][View some differences here.]]&lt;/p&gt; &#xA;&lt;p&gt;Org-noter is compatible with [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Document-View.html][DocView]], [[https://github.com/politza/pdf-tools][PDF Tools]], and [[https://github.com/wasamasa/nov.el][Nov.el]]. These modes make it possible to annotate &lt;em&gt;PDF&lt;/em&gt;, &lt;em&gt;EPUB&lt;/em&gt;, &lt;em&gt;Microsoft Office&lt;/em&gt;, DVI, PS, and OpenDocument.&lt;/p&gt; &#xA;&lt;p&gt;On a personal note, if you annotate and read lots of PDFs, give PDF Tools a try! It is great.&lt;/p&gt; &#xA;&lt;p&gt;** Features&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to use annotation interface :: Just press @@html:&lt;kbd&gt;@@i@@html:&lt;/kbd&gt;@@ in the document buffer and annotate away!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Keep your notes in sync with the document :: When you take a note by pressing @@html:&lt;kbd&gt;@@i@@html:&lt;/kbd&gt;@@, it saves the location where you took it so it is able to show you the notes while you scroll, automatically!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy navigation :: You may navigate your document as usual, seeing the notes buffer scroll and show you the respective notes; however, you may also navigate by notes, only seeing annotated pages/chapters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Isolated interface :: Each session has its own frame and the document and notes buffers are indirect buffers to the original ones. Killing any of these things will terminate your annotation session.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Simultaneous sessions :: You may open as many annotation sessions as you wish, at the same time! The root heading of each document will be made read-only to prevent you from deleting a heading from an open session.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Resume annotating from where you left :: When &lt;del&gt;org-noter-auto-save-last-location&lt;/del&gt; is non-nil, it will save the last location you visited and pick it up when you start another session! You may also set this per-document, [[#custom][read more here]].&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Keep your notes organized :: You may arrange your notes however you want! You can create groups and nest notes (and even nest documents inside other documents)!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Annotate &lt;del&gt;org-attach&lt;/del&gt;&#39;ed files :: If you have any attached files, it will let you choose one as the document to annotate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many of these features are demonstrated in the screencast, so take a look if you are confused!&lt;/p&gt; &#xA;&lt;p&gt;** Installation *** MELPA This package is [[https://melpa.org/#/org-noter][available from MELPA]], so if you want to install it and have added MELPA to your package archives, you can run @@html:&lt;kbd&gt;@@M-x@@html:&lt;/kbd&gt;@@ &lt;del&gt;package-install&lt;/del&gt; @@html:&lt;kbd&gt;@@RET@@html:&lt;/kbd&gt;@@ &lt;del&gt;org-noter&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;*** Manual installation You can also install it manually, using =package.el=.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download =org-noter.el=&lt;/li&gt; &#xA; &lt;li&gt;Open it&lt;/li&gt; &#xA; &lt;li&gt;Run @@html:&lt;kbd&gt;@@M-x@@html:&lt;/kbd&gt;@@ &lt;del&gt;package-install-from-buffer&lt;/del&gt; @@html:&lt;kbd&gt;@@RET@@html:&lt;/kbd&gt;@@&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;** Usage If you want to give it a try without much trouble:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just have an Org file where you want the notes to go&lt;/li&gt; &#xA; &lt;li&gt;Create a root heading to hold the notes&lt;/li&gt; &#xA; &lt;li&gt;Run @@html:&lt;kbd&gt;@@M-x@@html:&lt;/kbd&gt;@@ &lt;del&gt;org-noter&lt;/del&gt; inside! On the first run, it will ask you for the path of the document and save it in a property. By default, it will also let you annotate an attached file [[https://orgmode.org/manual/Attachments.html][(org-attach documentation)]].&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This will open a new dedicated frame where you can use [[#keys][the keybindings described here]].&lt;/p&gt; &#xA;&lt;p&gt;More generally, there are two modes of operation. You may run @@html:&lt;kbd&gt;@@M-x@@html:&lt;/kbd&gt;@@ &lt;del&gt;org-noter&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Inside a heading in an Org notes file :: This will associate that heading with a document and open a session with it. This mode is the one described in the example above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In a document :: Run @@html:&lt;kbd&gt;@@M-x@@html:&lt;/kbd&gt;@@ &lt;del&gt;org-noter&lt;/del&gt; when viewing a document (eg. PDF, epub...).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;             This will try to find the respective notes file automatically. It will&#xA;             search in all parent folders and some specific folders set by you. See&#xA;             ~org-noter-default-notes-file-names~ and ~org-noter-notes-search-path~&#xA;             for more information.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is, of course, more information in the docstrings of each command.&lt;/p&gt; &#xA;&lt;p&gt;** Screencast [[https://www.youtube.com/watch?v=Un0ZRXTzufo][Watch the screencast here!]]&lt;/p&gt; &#xA;&lt;p&gt;Note that this package has had some updates since this screencast was made, so, while the core functionality is the same, there may be some UX and feature differences.&lt;/p&gt; &#xA;&lt;p&gt;The files used to make this screencast are shipped with the package, so you can try this package even without creating the notes.&lt;/p&gt; &#xA;&lt;p&gt;** Customization @@html:&lt;a name=&#34;custom&#34;&gt;@@ There are two kinds of customizations you may do:&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a name=&#34;custom&#34;&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Global settings, affecting every session&lt;/li&gt; &#xA;  &lt;li&gt;Document-specific settings, which override the global settings&lt;/li&gt; &#xA; &lt;/ol&gt; &lt;p&gt;The &lt;em&gt;global settings&lt;/em&gt; are changed with either the [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization][customization interface from Emacs]] or directly in your init file. To find which settings are available, you may use the customization interface or you may just read =org-noter.el=.&lt;/p&gt; &lt;p&gt;The best way to set &lt;em&gt;document-specific settings&lt;/em&gt; is by using the utility commands provided (list below). In order to use them, you need an open session. The commands may change the settings for that session only (not surviving restarts), or for every session with that document.&lt;/p&gt; &lt;p&gt;&lt;em&gt;List of utility commands&lt;/em&gt; (check the docstrings to learn how to make the changes permanent, or revert to the default):&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;You may set a start location for this document, by using &lt;del&gt;org-noter-set-start-location&lt;/del&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;To automatically resume from where you left, use &lt;del&gt;org-noter-set-auto-save-last-location&lt;/del&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;With &lt;del&gt;org-noter-set-notes-window-behavior&lt;/del&gt;, you may change /when/ the notes window pops up.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;With &lt;del&gt;org-noter-set-notes-window-location&lt;/del&gt;, you may change /where/ the notes window pops up.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;del&gt;org-noter-set-doc-split-fraction&lt;/del&gt; will ask you for the fraction of the frame that the document window occupies when split.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;del&gt;org-noter-set-hide-other&lt;/del&gt; will toggle whether or not it should hide headings not related to the executed action.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;del&gt;org-noter-set-closest-tipping-point&lt;/del&gt; will set the closest note tipping point. Also check the docstring of the variable &lt;del&gt;org-noter-closest-tipping-point&lt;/del&gt; in order to better understand the tipping point.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;custom&#34;&gt;** Keybindings and commands @@html:&lt;/a&gt;&lt;a name=&#34;keys&#34;&gt;@@ :PROPERTIES: :CUSTOM_ID: keys :END: | Key | Description | Where? | | @@html:&lt;kbd&gt;@@i@@html:&lt;/kbd&gt;@@ | Insert note | Document buffer | | @@html:&lt;kbd&gt;@@M-i@@html:&lt;/kbd&gt;@@ | Insert precise note | Document buffer | | @@html:&lt;kbd&gt;@@q@@html:&lt;/kbd&gt;@@ | Kill session | Document buffer | | @@html:&lt;kbd&gt;@@M-p@@html:&lt;/kbd&gt;@@ | Sync previous page/chapter | Document and notes buffer | | @@html:&lt;kbd&gt;@@M-.@@html:&lt;/kbd&gt;@@ | Sync current page/chapter | Document and notes buffer | | @@html:&lt;kbd&gt;@@M-n@@html:&lt;/kbd&gt;@@ | Sync next page/chapter | Document and notes buffer | | @@html:&lt;kbd&gt;@@C-M-p@@html:&lt;/kbd&gt;@@ | Sync previous notes | Document and notes buffer | | @@html:&lt;kbd&gt;@@C-M-.@@html:&lt;/kbd&gt;@@ | Sync selected notes | Document and notes buffer | | @@html:&lt;kbd&gt;@@C-M-n@@html:&lt;/kbd&gt;@@ | Sync next notes | Document and notes buffer |&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a name=&#34;keys&#34;&gt; &lt;p&gt;You can use the usual keybindings to navigate the document (@@html:&lt;kbd&gt;@@n@@html:&lt;/kbd&gt;@@, @@html:&lt;kbd&gt;@@p@@html:&lt;/kbd&gt;@@, @@html:&lt;kbd&gt;@@SPC@@html:&lt;/kbd&gt;@@, ...).&lt;/p&gt; &lt;p&gt;There are two types of sync commands:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;To sync a page/chapter, means it will find the [previous|current|next] page/chapter and show the corresponding notes for that page/chapter; as such, it will always pop up the notes buffer, if it does not exist. This type of command is in relation to the current page/chapter in the document.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;To sync the notes, means it will find the [previous|current|next] notes and go to the corresponding location on the document. So, you need to have the notes window open, because this type of commands is in relation to the selected notes (ie, where the cursor is).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &lt;p&gt;When using PDF Tools, the command &lt;del&gt;org-noter-create-skeleton&lt;/del&gt; imports the PDF outline or annotations (or both!) as notes, and it may be used, for example, as a starting point.&lt;/p&gt; &lt;p&gt;You may also want to check the docstrings of the functions associated with the keybindings, because there is some extra functionality in some.&lt;/p&gt; &lt;p&gt;** Why a rewrite from scratch? Why not contribute to the existing Interleave package? Doing a refactor on a foreign codebase takes a long time because of several factors, like introducing the ideas to the owner (with which he may even disagree), learning its internals, proposing pull requests, more back and forth in code review, etc...&lt;/p&gt; &lt;p&gt;Besides, I like doing things from scratch, not only because it expands my skills, but also because it is something I find very rewarding!&lt;/p&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;keys&#34;&gt;*** Non-exhaustive list of differences from Interleave @@html:&lt;/a&gt;&lt;a name=&#34;diff&#34;&gt;@@ :PROPERTIES: :CUSTOM_ID: diff :END: **** New features&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a name=&#34;diff&#34;&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Each session is isolated, which means that it has its own frame with indirect buffers &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Makes it possible to have several sessions simultaneously open&lt;/li&gt; &#xA;    &lt;li&gt;Doesn&#39;t narrow the original buffer, which continues completely accessible&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Has precise notes (attached to a section of a page)&lt;/li&gt; &#xA;  &lt;li&gt;Also supports nov.el&lt;/li&gt; &#xA;  &lt;li&gt;Skeleton extraction (outline and/or annotations)&lt;/li&gt; &#xA;  &lt;li&gt;Being able to use the closest previous note when no notes are present on the current page&lt;/li&gt; &#xA;  &lt;li&gt;Closing all notes not related to the notes present in the current view&lt;/li&gt; &#xA;  &lt;li&gt;Possibility of overriding some global settings in each document or session&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;p&gt;**** Some annoyances fixed&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Notes not sorted&lt;/li&gt; &#xA;  &lt;li&gt;Notes not synced when executing different page change commands, eg. goto-page or beginning-of-buffer&lt;/li&gt; &#xA;  &lt;li&gt;Sometimes it would start narrowing other parts of the buffer, giving errors when trying to go to notes.&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;p&gt;*** Changes to make in order to be compatible with documents created by Interleave This package only works like the multi-pdf mode of Interleave - you can&#39;t open a session without having a parent headline.&lt;/p&gt; &lt;p&gt;For compatibility with existing notes made with Interleave, you can do one of two things:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Change the following property names inside the your documents: | Old | New | |------------------------+------------------| | =INTERLEAVE_PDF= | =NOTER_DOCUMENT= | | =INTERLEAVE_PAGE_NOTE= | =NOTER_PAGE= |&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Set these variables on your init file: #+BEGIN_SRC emacs-lisp (setq org-noter-property-doc-file &#34;INTERLEAVE_PDF&#34; org-noter-property-note-location &#34;INTERLEAVE_PAGE_NOTE&#34;) #+END_SRC&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &lt;p&gt;** Acknowledgments I must thank [[https://github.com/rudolfochrist][Sebastian]] for the original idea and inspiration. Also, many thanks to everyone who contributed more ideas, reported bugs and submitted PRs :)&lt;/p&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>jaypei/emacs-neotree</title>
    <updated>2022-07-13T01:41:16Z</updated>
    <id>tag:github.com,2022-07-13:/jaypei/emacs-neotree</id>
    <link href="https://github.com/jaypei/emacs-neotree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A emacs tree plugin like NerdTree for Vim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;emacs-neotree&lt;/h1&gt; &#xA;&lt;p&gt;A Emacs tree plugin like NerdTree for Vim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/jaypei/emacs-neotree&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jaypei/emacs-neotree.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/neotree&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/neotree-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/neotree&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/neotree-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/jaypei/emacs-neotree/imgs/neotree-1.png&#34; alt=&#34;NeoTree-1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Melpa&lt;/h3&gt; &#xA;&lt;p&gt;You can install the plugin using the packages on &lt;a href=&#34;http://melpa.org/&#34;&gt;melpa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have something like the following in your Emacs startup file (&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;, or &lt;code&gt;~/.emacs&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;    (add-to-list &#39;package-archives&#xA;                 &#39;(&#34;melpa&#34; . &#34;http://melpa.org/packages/&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make that take effect, either evaluate that elisp expression or restart Emacs.&lt;/p&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;M-x package-list-packages&lt;/code&gt;, select &lt;code&gt;neotree&lt;/code&gt; from the list by pressing &lt;code&gt;i&lt;/code&gt;, then press &lt;code&gt;x&lt;/code&gt; to execute the changes. At that point, the package will be installed.&lt;/p&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;Clone project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /some/path&#xA;$ git clone https://github.com/jaypei/emacs-neotree.git neotree&#xA;$ cd neotree&#xA;$ git checkout dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add config to emacs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(add-to-list &#39;load-path &#34;/some/path/neotree&#34;)&#xA;(require &#39;neotree)&#xA;(global-set-key [f8] &#39;neotree-toggle)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open (toggle) NeoTree:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;F8&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Keybindings&lt;/h2&gt; &#xA;&lt;p&gt;Only in Neotree Buffer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;n&lt;/code&gt; next line, &lt;code&gt;p&lt;/code&gt; previous line。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SPC&lt;/code&gt; or &lt;code&gt;RET&lt;/code&gt; or &lt;code&gt;TAB&lt;/code&gt; Open current item if it is a file. Fold/Unfold current item if it is a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;U&lt;/code&gt; Go up a directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;g&lt;/code&gt; Refresh&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; Maximize/Minimize the NeoTree Window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;H&lt;/code&gt; Toggle display hidden files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;O&lt;/code&gt; Recursively open a directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-n&lt;/code&gt; Create a file or create a directory if filename ends with a ‘/’&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-d&lt;/code&gt; Delete a file or a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-r&lt;/code&gt; Rename a file or a directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-c&lt;/code&gt; Change the root directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-c C-p&lt;/code&gt; Copy a file or a directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Theme config&lt;/h3&gt; &#xA;&lt;p&gt;NeoTree provides following themes: &lt;em&gt;classic&lt;/em&gt;(default) &lt;em&gt;ascii&lt;/em&gt; &lt;em&gt;arrow&lt;/em&gt; &lt;em&gt;icons&lt;/em&gt; &lt;em&gt;nerd&lt;/em&gt;. Theme can be configed by setting &lt;strong&gt;neo-theme&lt;/strong&gt;. For example, use &lt;em&gt;icons&lt;/em&gt; for window system and &lt;em&gt;arrow&lt;/em&gt; terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(setq neo-theme (if (display-graphic-p) &#39;icons &#39;arrow))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For users who want to use the &lt;code&gt;icons&lt;/code&gt; theme. Pls make sure you have installed the &lt;a href=&#34;https://github.com/domtronn/all-the-icons.el&#34;&gt;all-the-icons&lt;/a&gt; package and its &lt;a href=&#34;https://github.com/domtronn/all-the-icons.el/tree/master/fonts&#34;&gt;fonts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;all-the-icons theme screenshots&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jaypei/emacs-neotree/dev/screenshots/icons.png&#34; alt=&#34;&#34; title=&#34;neotree icons theme&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More documentation&lt;/h2&gt; &#xA;&lt;p&gt;EmacsWiki: &lt;a href=&#34;http://www.emacswiki.org/emacs/NeoTree&#34;&gt;En&lt;/a&gt; &lt;a href=&#34;http://www.emacswiki.org/emacs-zh/NeoTree_%E4%B8%AD%E6%96%87wiki&#34;&gt;中文版&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mclear-tools/citar-capf</title>
    <updated>2022-07-13T01:41:16Z</updated>
    <id>tag:github.com,2022-07-13:/mclear-tools/citar-capf</id>
    <link href="https://github.com/mclear-tools/citar-capf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Completion at point for citations using citar&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NOTE: Citar-capf is being merged into citar per this [[https://github.com/emacs-citar/citar/commit/784791a090f9a2ed293f8b3ebd5636c690b718bc][commit]]. All further development will be a part of the citar repo.&lt;/p&gt; &#xA;&lt;p&gt;=citar-capf= provides a completion-at-point function (via the minor-mode =citar-capf-mode=) for citations in latex, org, and markdown ([[https://pandoc.org/MANUAL.html][pandoc]]) modes. This completion depends on [[https://github.com/bdarcus/citar][citar]] and its parsing of bibtex keys. This backend activates for citation styles used by =markdown-mode= (pandoc, (@)), =latex-mode= (\cite{}), and =org-mode= (cite:@).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt; that =citar-capf= reads from a bibliography file or files specified in =citar-bibliography= and presents completion info as set by =citar-templates=.&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_HTML&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/mclear-tools/citar-capf/main/screenshots/citar-capf-screenshot.png&#34;&gt; &#xA;&lt;/div&gt; #+END_HTML &#xA;&lt;p&gt;** Initialization&lt;/p&gt; &#xA;&lt;p&gt;Load the package and turn on the minor-mode via the following hooks:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (require &#39;citar-capf) ;; Define hook (add-hook &#39;tex-mode-hook #&#39;citar-capf-mode) ;; you may need to define this in more than one tex mode (e.g. latex, reftex, etc). (add-hook &#39;markdown-mode-hook #&#39;citar-capf-mode) (add-hook &#39;org-mode-hook #&#39;citar-capf-mode) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;If you use use-package, here&#39;s how you might set things:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (use-package citar-capf :straight (:type git :host github :repo &#34;mclear-tools/citar-capf&#34;) ;; NOTE: Set these hooks for whatever modes for which you want citar citation completion :hook ((org-mode markdown-mode tex-mode latex-mode reftex-mode) . citar-capf-mode) :config ;; if you don&#39;t already have this set in citar (setq citar-bibliography &#34;path/to/bib&#34;) (setq citar-templates `((main . &#34; ${=key= id:15} ${title:48}&#34;) (suffix . &#34;${author editor:30} ${=type=:12} ${=beref=:12} ${tags keywords:*}&#34;) (preview . &#34;${author editor} (${year issued date}) ${title}, ${journal journaltitle publisher container-title collection-title}.\n&#34;)))) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;To remove the hooks just deactivate the minor mode.&lt;/p&gt; &#xA;&lt;p&gt;** Acknowledgements&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to [[https://github.com/bdarcus][Bruce D&#39;Arcus]] for discussion of how to best flesh out the completion function.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>