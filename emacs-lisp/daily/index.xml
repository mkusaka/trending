<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-30T01:40:06Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>integral-dw/org-superstar-mode</title>
    <updated>2022-06-30T01:40:06Z</updated>
    <id>tag:github.com,2022-06-30:/integral-dw/org-superstar-mode</id>
    <link href="https://github.com/integral-dw/org-superstar-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make org-mode stars a little more super&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: org-superstar-mode #+STARTUP: showeverything [[https://melpa.org/#/org-superstar][file:https://melpa.org/packages/org-superstar-badge.svg]] [[https://stable.melpa.org/#/org-superstar][file:https://stable.melpa.org/packages/org-superstar-badge.svg]]&lt;/p&gt; &#xA;&lt;p&gt;[[file:sample_image.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;About Prettify headings and plain lists in Org mode. This package is a direct descendant of ‘[[https://github.com/sabof/org-bullets][org-bullets]]’, with most of the code base completely rewritten. Currently, this package supports:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Prettifying Org heading lines by:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;replacing trailing bullets by UTF-8 bullets^{a)}&lt;/li&gt; &#xA;   &lt;li&gt;hiding leading stars^{b)}, customizing their look^{(new!)} or removing them from vision^{(new!)}&lt;/li&gt; &#xA;   &lt;li&gt;applying a custom face to the header bullet^{d)}&lt;/li&gt; &#xA;   &lt;li&gt;applying a custom face to the leading bullets^{(new!)}&lt;/li&gt; &#xA;   &lt;li&gt;making inline tasks (see =org-inlinetask.el=) more fancy by: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;using double-bullets for inline tasks&lt;/li&gt; &#xA;     &lt;li&gt;applying a custom face to the marker star of inline tasks^{(new!)}&lt;/li&gt; &#xA;     &lt;li&gt;using a special bullet for the marker star^{(new!)}&lt;/li&gt; &#xA;     &lt;li&gt;introducing an independent face for marker stars^{(new!)}&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;(optional) using special bullets for =TODO= keywords^{(new!)}&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Prettifying Org plain list bullets^{(new!)} by:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;replacing each bullet type (&lt;del&gt;*&lt;/del&gt;, &lt;del&gt;+&lt;/del&gt; and &lt;del&gt;-&lt;/del&gt;) with UTF-8 bullets^{c)}&lt;/li&gt; &#xA;   &lt;li&gt;applying a custom face to item bullets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gracefully degrading features when viewed from terminal&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;a) These features are mostly the same as in &lt;del&gt;org-bullets-mode&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;b) Plain hiding is now left to Org mode and the associated variable &lt;del&gt;org-hide-leading-stars&lt;/del&gt; as well as &lt;del&gt;org-hide&lt;/del&gt;, as suggested by [[https://github.com/Kaligule][Kaligule]].&lt;/p&gt; &#xA;&lt;p&gt;c) &lt;del&gt;org-superstar-mode&lt;/del&gt; tries to prettify in a context-sensitive fashion: It strives to only recognize item bullets which are really &lt;em&gt;meant&lt;/em&gt; to be item bullets. Your &lt;del&gt;SRC&lt;/del&gt; blocks are safe!&lt;/p&gt; &#xA;&lt;p&gt;d) Instead of providing the symbol of an existing face in a variable to replace Org&#39;s usual title face(s) for the UTF-8 character, superstar merges a custom face with the face that would have been used, allowing the user to inherit the level-dependent default look.&lt;/p&gt; &#xA;&lt;p&gt;** Planned features There are currently no new features planned. For the time being only one historically planned feature remains listed, which is supposed to develop into a sister project. See below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;+hiding leading commas of quoted stars+ :: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;+unhiding commas whilst editing+ :: I have realized that this feature exceeds the scope of the package, being too interactive. This would require a lot of font-lock related boilerplate which I am currently in the process of dedicating its own package to. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Update :: The package in question has matured, but suffers from intricate timing errors which will require looking into. Especially since they are so far impossible to test reliably due to their nature.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Demos You can find a small demo reel with a variety of configurations [[file:DEMO.org][here]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation&lt;/p&gt; &lt;p&gt;The package is available [[https://melpa.org/#/org-superstar][on MELPA]]!&lt;/p&gt; &lt;p&gt;Furthermore, it ships with [[https://github.com/syl20bnr/spacemacs][Spacemacs]] and [[https://github.com/hlissner/doom-emacs][Doom Emacs]].&lt;/p&gt; &lt;p&gt;If you prefer a manual installation, just plug =org-superstar.el= into your load path and add the following to your =.emacs=: #+BEGIN_SRC elisp (require &#39;org-superstar) (add-hook &#39;org-mode-hook (lambda () (org-superstar-mode 1))) #+END_SRC&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Customization A variety of customization features has been added to allow further tweaking. Suggestions are always welcome!&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; Many of the variables listed below require you to restart &lt;del&gt;org-superstar-mode&lt;/del&gt; to take effect. See the corresponding variable&#39;s documentation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** &#34;Can you make it more like =org-bullets=?&#34; Naturally! In fact, I made the answer to this its own function:&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-configure-like-org-bullets&lt;/del&gt; This function configures &lt;del&gt;superstar-mode&lt;/del&gt; to be as similar to =org-bullets= as possible. Since this function automatically sets various custom variables, it should only be called &lt;em&gt;once&lt;/em&gt; per session, before any other (manual) customization of this package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;~org-superstar-configure-like-org-bullets~ is only meant as a small&#xA;convenience for people who just want minor departures from&#xA;~org-bullets-mode~.  For a more fine-grained customization, it&#39;s&#xA;better to just set the variables you want.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** &#34;Where do I find UTF8-bullets to use?&#34; While it strongly depends on the font(s) you are using which characters are going to be supported, here are some nifty Unicode blocks to consider. I sorted them by the respective Unicode plane.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic Multilingual Plane (U+0000-U+FFFF) :: As the name suggests, the Unicode plane containing most languages, and hence the most commonly encoded. I recommend the following blocks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/General_Punctuation][General Punctuation]] (U+2000-U+206F) :: Bullets, leaders, asterisms.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Dingbat#Unicode][Dingbats]] (U+2700-U+27BF) :: Common typesetting ornaments.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Geometric_Shapes][Geometric Shapes]] (U+25A0-U+25FF) :: Circles, shapes within shapes, etc.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Miscellaneous_Symbols][Miscellaneous Symbols]] (U+2600–U+26FF) :: Smileys and card suits.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Miscellaneous_Symbols_and_Arrows][Miscellaneous Symbols and Arrows]] (U+2B00-U+2BFF) :: Further stars and arrowheads, polygons, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supplementary Multilingual Plane (U+10000-U+1FFFF) :: This one contains (among other things) Emoji and plenty of symbols. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Ornamental_Dingbats][Ornamental Dingbats]] (U+1F650-U+1F67F) :: A few more ornaments, some quotation marks and fancy ampersands.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Geometric_Shapes_Extended][Geometric Shapes Extended]] (U+1F780-U+1F7FF) :: Even more geometric shapes and shapes within shapes, but also asterisk variations.&lt;/li&gt; &#xA;   &lt;li&gt;[[https://en.wikipedia.org/wiki/Supplemental_Arrows-C][Supplemental Arrows-C]] (U+1F800-U+1F8FF) :: A collection of chunky arrows.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Custom UTF8-bullets for heading lines Here&#39;s how you change which bullets are used for which level.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-headline-bullets-list&lt;/del&gt; Those of you familiar with =org-bullets= will recognize this list: It&#39;s a list of single-character strings where the /Nth/ entry is used to determine the bullet used for heading level /N/. By default, this list is cycled through for /N/ greater than the length of the list. Strings are not the only valid way to provide headline bullets, however. Since version &lt;em&gt;1.3.0&lt;/em&gt;, this variable also recognizes characters as well as specific lists, with characters being the new default way of providing bullets. Lists on the other hand provide the user with the means to access advanced composition features and fallback options for terminal users.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-cycle-headline-bullets&lt;/del&gt; This variable gives you more control over how &lt;del&gt;superstar-mode&lt;/del&gt; picks headline bullets. The default, &lt;del&gt;t&lt;/del&gt;, cycles through the list as explained above. Other values are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;* ~nil~ :: Go through the list, then repeat the last entry&#xA;           indefinitely.&#xA;* any integer /k/ :: Cycle through the first /k/ elements of the list.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-leading-bullet&lt;/del&gt; Maybe you actually /like/ that Org&#39;s heading lines are connected to the left margin, but you find a line of stars too visually busy? Enter &lt;del&gt;org-superstar-leading-bullet&lt;/del&gt;. Provide a character of your choice to be displayed instead. Strings are superimposed according to the rules of &lt;del&gt;compose-region&lt;/del&gt;. =org-superstar= ships with a subtle [[https://en.wikipedia.org/wiki/Leader_(typography)][leader]] as the default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Note for terminal users:* You can apply a simplified composition to&#xA;leading stars for terminal sessions.  See&#xA;~org-superstar-leading-fallback~ for details.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-first-inlinetask-bullet&lt;/del&gt; This bullet replaces the red star inline tasks use when &lt;del&gt;org-inlinetask-show-first-star&lt;/del&gt; is non-nil. Strings are superimposed according to the rules of &lt;del&gt;compose-region&lt;/del&gt;, characters render as expected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Note for terminal users:* You can apply a simplified composition&#xA;for terminal sessions.  See&#xA;~org-superstar-first-inlinetask-fallback~ for details.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** Hide leading stars Since &lt;del&gt;org-mode&lt;/del&gt; already takes care of hiding leading stars by providing the dedicated variable &lt;del&gt;org-hide-leading-stars&lt;/del&gt; and its associated face &lt;del&gt;org-hide&lt;/del&gt;, there is no extra option for /hiding/ leading stars like that. Instead, &lt;del&gt;org-hide-leading-stars&lt;/del&gt; implicitly disables further fontification.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;While there is no explicit feature for hiding leading stars, you&#xA;can also use ~org-superstar-leading-bullet~ to hide leading stars&#xA;independently of ~org-hide~: Simply choose a space character as your&#xA;leading bullet.&#xA;&#xA;#+BEGIN_SRC emacs-lisp&#xA;  ;; This is usually the default, but keep in mind it must be nil&#xA;  (setq org-hide-leading-stars nil)&#xA;  ;; This line is necessary.&#xA;  (setq org-superstar-leading-bullet ?\s)&#xA;  ;; If you use Org Indent you also need to add this, otherwise the&#xA;  ;; above has no effect while Indent is enabled.&#xA;  (setq org-indent-mode-turns-on-hiding-stars nil)&#xA;#+END_SRC&#xA;&#xA;If you want to get rid of the indentation caused by leading stars&#xA;entirely, set ~org-superstar-remove-leading-stars~ to ~t~.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** Fancy =TODO= items You can substitute standard headline bullets with specialized ones fitting the current =TODO= keyword! To enable this feature, set &lt;del&gt;org-superstar-special-todo-items&lt;/del&gt; to &lt;del&gt;t&lt;/del&gt;. To set which =TODO= keywords you want to have displayed differently, see &lt;del&gt;org-superstar-todo-bullet-alist&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** No =TODO= bullets If you prefer a more minimal look for =TODO= items, try setting &lt;del&gt;org-superstar-special-todo-items&lt;/del&gt; to the symbol &lt;del&gt;hide&lt;/del&gt;. This causes the heading bullet to disappear entirely for =TODO= items.&lt;/p&gt; &#xA;&lt;p&gt;** Custom UTF8-Bullets for plain lists Why stop at heading lines? Customize the look of your list bullets to make plain lists a little less so.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-item-bullet-alist&lt;/del&gt; Since the concept of &#34;levels&#34; does not really apply to lists, this association list simply assigns a UTF-8 character to each of the three possible bullet characters for plain Org lists.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-prettify-item-bullets&lt;/del&gt; Exactly as it says on the tin. Set this variable to &lt;del&gt;nil&lt;/del&gt; to stop &lt;del&gt;org-superstar-mode&lt;/del&gt; from prettifying lists.&lt;/p&gt; &#xA;&lt;p&gt;*** Fast Plain List Items The default syntax-checking done to ensure only actual plain list items are prettified is rather expensive, but usually not expensive enough to cause significant slowdown. This can change when dealing with Org files containing hundreds or even thousands of plain list items. The command =org-superstar-toggle-lightweight-lists= allows the user to disable syntax checking for plain lists both interactively and in code. For example, if you experience issues for files with more than 100 list items, you could simply add the following to &lt;del&gt;org-mode-hook&lt;/del&gt; instead of a direct call to &lt;del&gt;org-superstar-mode&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#+BEGIN_SRC emacs-lisp&#xA;  (defun my-auto-lightweight-mode ()&#xA;    &#34;Start Org Superstar differently depending on the number of lists items.&#34;&#xA;    (let ((list-items&#xA;           (count-matches &#34;^[ \t]*?\\([+-]\\|[ \t]\\*\\)&#34;&#xA;                          (point-min) (point-max))))&#xA;      (unless (&amp;lt; list-items 100)&#xA;        (org-superstar-toggle-lightweight-lists)))&#xA;    (org-superstar))&#xA;&#xA;  (add-hook &#39;org-mode-hook #&#39;my-auto-lightweight-mode)&#xA;#+END_SRC&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** Custom faces These faces allow you to further manipulate the look and feel of prettified bullets.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-header-bullet&lt;/del&gt;: &#34;Use &lt;del&gt;org-level-N&lt;/del&gt;, but...&#34; A face containing essentially the /difference/ between the default heading face for the given level (like &lt;del&gt;org-level-1&lt;/del&gt;) and the bullet. This face is completely unspecified by default. Any property set will override the corresponding face property of &lt;del&gt;org-level-N&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-leading&lt;/del&gt; A face used to display leading stars if &lt;del&gt;org-superstar-prettify-leading-stars&lt;/del&gt; is enabled.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-item&lt;/del&gt; A face used to display prettified plain list bullets if &lt;del&gt;org-superstar-prettify-item-bullets&lt;/del&gt; is enabled.&lt;/p&gt; &#xA;&lt;p&gt;*** &lt;del&gt;org-superstar-first&lt;/del&gt; A face used for the marker star of inline tasks (see the package &lt;del&gt;org-inlinetask&lt;/del&gt;, in particular &lt;del&gt;org-inlinetask-show-first-star&lt;/del&gt; instead of the default &lt;del&gt;org-warning&lt;/del&gt;, which it inherits from by default.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FAQ / Troubleshooting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** &#34;Question marks everywhere! Help!&#34; Did you enable this mode for example in a terminal session and have been greeted by wonky replacement characters like ‘�’ or plain question marks in headlines or items? Try turning &lt;del&gt;org-superstar-mode&lt;/del&gt; off to see what its /supposed/ to be if it is too visually broken to recognize. The fix depends on whether you are experiencing this on a graphical or terminal display.&lt;/p&gt; &#xA;&lt;p&gt;*** Question mark salad on terminal This usually happens because the font of your terminal does not have a glyph for a bullet character you are using. There are two plausible fixes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) *Change your terminal font:* Emacs has no control over the font&#xA;   of your terminal display.  As a consequence, if you want to&#xA;   keep these particular bullets, your best bet is to change the&#xA;   font.  For example, the default settings should work out of the&#xA;   box for the excellent *DejaVu Sans Mono*.&#xA;2) *Utilize terminal fallback options:* Org Superstar is written&#xA;   with terminal users in mind.  Hence you can roll an entirely&#xA;   different set of bullets for terminal sessions without much&#xA;   effort.  Leading stars have ~org-superstar-leading-fallback~.&#xA;   Headline bullets themselves can be declared independently for&#xA;   graphical and terminal displays in&#xA;   ~org-superstar-headline-bullets-list~.  For example, replacing an&#xA;   entry ~?◉~ with the entry ~(&#34;◉&#34; ?*)~ will make the headline bullet&#xA;   that would normally display as ‘◉’ a plain asterisk on terminal&#xA;   displays.&#xA;3) *Replace the bullet character altogether:* A valid option, but&#xA;   likely not the most desirable.  Check out the documentation for&#xA;   more info on how to customize this package.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*** Borked even in graphical sessions In this case it is all up to your Emacs configuration. The problem remains the fonts available, this time to Emacs. You can either [[https://www.emacswiki.org/emacs/SetFonts][change your Emacs font]] or specify specific fonts for specific Unicode character ranges, which is part of Emacs&#39; intricate face system.&lt;/p&gt; &#xA;&lt;p&gt;** &#34;This mode causes significant slowdown!&#34; I have looked into the matter [[https://github.com/integral-dw/org-superstar-mode/issues/3][in the past]], and from what I understand the usual cause of this is relates to a deeper rooted issue involving fonts and font-lock reliant packages. I recommend adding the following to your =.emacs=: #+BEGIN_SRC emacs-lisp (setq inhibit-compacting-font-caches t) #+END_SRC or any more fancy variation thereof. This variable also holds further information regarding what I believe is the cause of the problem. If this should not fix the problem, please consider opening an issue or sending me a mail!&lt;/p&gt; &#xA;&lt;p&gt;*** &#34;I experience lag when working with long plain lists!&#34; By default, Org Superstar does expensive syntax checking to ensure plain lists are actual plain lists. This is usually not an issue for small files. However, this may pose a problem when your file contains hundreds or thousands of items! You can deal with this interactively using the command =org-superstar-toggle-lightweight-lists=. See also the subsection &#34;&lt;em&gt;Fast Plain List Items&lt;/em&gt;&#34; above.&lt;/p&gt; &#xA;&lt;p&gt;** &#34;I get an error when trying to use it.&#34; This of course should not happen. If your problem is not listed below, please file a bug report! *** Unknown function: &lt;del&gt;org-element-lineage&lt;/del&gt; This is one of the functions my package relies on missing in older versions of Org. The following hack should circumvent the issue, at the cost of the package treating some comments in code blocks as lists. Just put it in your &lt;del&gt;.emacs&lt;/del&gt; before loading up the package. If I messed up and this does not fix the problem, be sure to open an Issue! #+BEGIN_SRC emacs-lisp (setq-default org-superstar-lightweight-lists t) (defun org-element-lineage (x) &#34;Mock function for future Org feature.&#34; nil) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** &#34;What are these weird points in front of heading bullets?&#34; While Org Bullet mode ships only with a feature to hide leading stars, Org Superstar allows you to customize leading stars to still provide some visual guidance without causing too much visual noise. For more information on this topic, see the Section &lt;em&gt;Customization&lt;/em&gt; above, in particular the subsections &lt;del&gt;org-superstar-leading-bullet&lt;/del&gt; and &lt;em&gt;Hide leading stars&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NEWS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** =2021-02-16= &lt;em&gt;1.5.0&lt;/em&gt; has been released, adding support for hiding TODO item bullets as well as specifying a default bullet. As for the plans for &lt;em&gt;2.0.0&lt;/em&gt;: after lots of deliberation I have come to the conclusion that there is no currently scheduled change that would justify a major version number change.&lt;/p&gt; &#xA;&lt;p&gt;** =2021-02-11= Since I have been asked whether there is a way to extend Superstar to other minor modes. The bad news is: no, not feasibly. The good news is: I have created a comparably simple template for this exact purpose for other people to bring a Superstar-like mode to your favorite Outline-type of mode: [[https://github.com/integral-dw/superstar-kit][Superstar Kit]]!&lt;/p&gt; &#xA;&lt;p&gt;Also: Earlier this month, Superstar has reached over 65536 (2^{16}) downloads! Again, thank you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Announcement Log ** =2020-02-02= &lt;em&gt;Good news!&lt;/em&gt; The project is reaching an /acceptable/ first draft state. This means I am now preparing getting this package properly wrapped up and published on MELPA, with a side goal of trying to also be available on ELPA. My conservative estimate for at least being available on MELPA is roughly by the end of this month.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** =2020-02-03= Everything went better than expected! The tests seem to cover most use cases now, and it seems I have added proper terminal support.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-02-04= I set up a pull request, we will see how this goes.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-02-15= Version &lt;em&gt;0.3.0&lt;/em&gt; is out and tagged for your convenience. I am now content enough with the package to &#34;freeze&#34; elements of the API for good and move to version &lt;em&gt;1.0.0&lt;/em&gt; once the pull request is closed. I will keep the &#34;under construction&#34; tags around for the time being, however.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-02-16= Version &lt;em&gt;0.4.0&lt;/em&gt; has been released! You can now associate =TODO= keywords with special headline bullets.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-02-17= Version &lt;em&gt;0.5.0&lt;/em&gt; now supports a new kind of way to hide leading bullets: Instead of using =org-hide=, setting &lt;del&gt;org-superstar-remove-leading-stars&lt;/del&gt; allows you hide them akin to emphasis markers (see =org-hide-emphasis-markers=).&lt;/p&gt; &#xA;&lt;p&gt;** =2020-02-26= Version &lt;em&gt;1.0.0&lt;/em&gt; has been released! With this I consider the package as ready for use as it gets. The change primarily means that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I will try my best not to break backwards compatibility.&lt;/li&gt; &#xA; &lt;li&gt;If I conclude that I have to, I will not do it silently. Instead, you can rely on appropriate warnings.&lt;/li&gt; &#xA; &lt;li&gt;Even then, a backwards incompatible change will result it a major version number change.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** =2020-03-08= The package is now available on MELPA! My sincerest thanks to all the people on GitHub and the Org mailing list that helped me along! I would not have managed without you! :)&lt;/p&gt; &#xA;&lt;p&gt;** =2020-04-01= A minor status update. [[https://melpa.org/#/org-superstar][We cracked the 500 downloads mark on MELPA!]] Unbelievable! Thank you all for your support! Should we reach the 1-2000 downloads mark by the end of the year, I will consider contacting major Emacs releases shipping with org-bullets, such as Spacemacs or Doom.&lt;/p&gt; &#xA;&lt;p&gt;In other news, version &lt;em&gt;1.1.0&lt;/em&gt; is now available, providing a few minor fixes, as well as a new feature to disable expensive syntax checks for plain list items. See the FAQ for more info.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-04-14= Version &lt;em&gt;1.2.0&lt;/em&gt; is now available. This version adds support for using advanced features of &lt;del&gt;compose-region&lt;/del&gt; for TODO item bullets.&lt;/p&gt; &#xA;&lt;p&gt;Also, the package&#39;s downloads doubled in less than two weeks, meaning Org Superstar now has [[https://melpa.org/#/org-superstar][over 1000 downloads on MELPA]]! I have given the whole situation some more thought, and decided that I will contact the Spacemacs team should we reach 2000 downloads this year, which I would consider enough proof of the package&#39;s popularity.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-08-08= Version &lt;em&gt;1.3.0&lt;/em&gt; is here! This version adds support for using advanced features of &lt;del&gt;compose-region&lt;/del&gt; for headline bullets, thus continuing efforts to make the package more visually coherent for general setups while remaining terminal friendly.&lt;/p&gt; &#xA;&lt;p&gt;In other news, Org Superstar reached [[https://melpa.org/#/org-superstar][over 16000 downloads on MELPA]]! This is absolutely insane, and already surpasses my hopes for this year by more than a factor of 8! I am speechless. And, as promised, +I will contact the Spacemacs team sometimes this year.+ Turns out, Org Superstar [[https://github.com/syl20bnr/spacemacs/issues/13831][replaced Org Bullets]] as of the 7th of June on Spacemacs&#39; &lt;del&gt;develop&lt;/del&gt; branch! And it also ships with [[https://github.com/hlissner/doom-emacs][Doom Emacs]]! With that, I have essentially reached every goal I had for this package. However, I will naturally continue maintenance and remain open towards feature suggestions.&lt;/p&gt; &#xA;&lt;p&gt;** =2020-08-29= org-superstar has reached over 32768 (2^{15}) downloads this week! This is absolutely amazing. If there is any room for improvement, I&#39;m very open to suggestions from the community!&lt;/p&gt; &#xA;&lt;p&gt;** =2020-08-18= We have reached version &lt;em&gt;1.4.0&lt;/em&gt;, which concludes the series of feature updates I have planned out. In other words, this package has reached a point of maturity where I would consider it complete. This does /not/ mean that no new features will be added/accepted, but it does mean that I will from now on rely on feature suggestions from the community, and focus on maintenance rather than innovation. The next scheduled update (&lt;em&gt;2.0.0&lt;/em&gt;) will likely involve a subtle revamp of the default values. I will keep you posted.&lt;/p&gt; &#xA;&lt;h1&gt;LocalWords: Org&#39;s MELPA ELPA Worg fontification TODO README UTF Spacemacs&lt;/h1&gt; &#xA;&lt;h1&gt;LocalWords: Org fallback setups asterisms Emoji Smileys Borked&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>emacs-pe/docker-tramp.el</title>
    <updated>2022-06-30T01:40:06Z</updated>
    <id>tag:github.com,2022-06-30:/emacs-pe/docker-tramp.el</id>
    <link href="https://github.com/emacs-pe/docker-tramp.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TRAMP integration for docker containers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-tramp - TRAMP integration for docker containers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Author:&lt;/em&gt; Mario Rodas &lt;a href=&#34;mailto:marsam@users.noreply.github.com&#34;&gt;marsam@users.noreply.github.com&lt;/a&gt;&lt;br&gt; &lt;em&gt;Version:&lt;/em&gt; 0.1&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker-tramp.el&lt;/code&gt; offers a TRAMP method for Docker containers.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;docker-tramp.el&lt;/code&gt; relies in the &lt;code&gt;docker exec&lt;/code&gt; command. Tested with docker version 1.6.x but should work with versions &amp;gt;1.3. Podman also works.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Offers the TRAMP method &lt;code&gt;docker&lt;/code&gt; to access running containers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;C-x C-f /docker:user@container:/path/to/file&#xA;&#xA;where&#xA;  user           is the user that you want to use inside the container (optional)&#xA;  container      is the id or name of the container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/tramp/Ad_002dhoc-multi_002dhops.html&#34;&gt;Multi-hop&lt;/a&gt; examples&lt;/h3&gt; &#xA;&lt;p&gt;If you container is hosted on &lt;code&gt;vm.example.net&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/ssh:vm-user@vm.example.net|docker:user@container:/path/to/file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to run the &lt;code&gt;docker&lt;/code&gt; command as, say, the &lt;code&gt;root&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/sudo:root@localhost|docker:user@container:/path/to/file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Tramp hangs on Alpine container&lt;/h3&gt; &#xA;&lt;p&gt;Busyboxes built with the &lt;code&gt;ENABLE_FEATURE_EDITING_ASK_TERMINAL&lt;/code&gt; config option send also escape sequences, which &lt;code&gt;tramp-wait-for-output&lt;/code&gt; doesn&#39;t ignores correctly. Tramp upstream fixed in &lt;a href=&#34;http://git.savannah.gnu.org/cgit/tramp.git/commit/?id=98a511248a9405848ed44de48a565b0b725af82c&#34;&gt;98a5112&lt;/a&gt; and is available since Tramp&amp;gt;=2.3.&lt;/p&gt; &#xA;&lt;p&gt;For older versions of Tramp you can dump &lt;a href=&#34;https://github.com/emacs-pe/docker-tramp.el/raw/master/docker-tramp-compat.el&#34;&gt;docker-tramp-compat.el&lt;/a&gt; in your &lt;code&gt;load-path&lt;/code&gt; somewhere and add the following to your &lt;code&gt;init.el&lt;/code&gt;, which overwrites &lt;code&gt;tramp-wait-for-output&lt;/code&gt; with the patch applied:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    (require &#39;docker-tramp-compat)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tramp does not respect remote &lt;code&gt;PATH&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a known issue with Tramp, but is not a bug so much as a poor default setting. Adding &lt;code&gt;tramp-own-remote-path&lt;/code&gt; to &lt;code&gt;tramp-remote-path&lt;/code&gt; will make Tramp use the remote&#39;s &lt;code&gt;PATH&lt;/code&gt; environment varialbe.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    (add-to-list &#39;tramp-remote-path &#39;tramp-own-remote-path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Converted from &lt;code&gt;docker-tramp.el&lt;/code&gt; by &lt;a href=&#34;https://github.com/Lindydancer/el2markdown&#34;&gt;&lt;em&gt;el2markdown&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leahneukirchen/nb</title>
    <updated>2022-06-30T01:40:06Z</updated>
    <id>tag:github.com,2022-06-30:/leahneukirchen/nb</id>
    <link href="https://github.com/leahneukirchen/nb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nota Bene, a quick note-taking tool for Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;= nb - Nota Bene, a quick note-taking tool for Emacs&lt;/p&gt; &#xA;&lt;p&gt;nb---Nota Bene---is a note-taking application with Emacs integration akin to Notational Velocity.&lt;/p&gt; &#xA;&lt;p&gt;== Installation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir ~/NB&#xA;cp nb.el ~/.emacs.d&#xA;cp nb ~/bin&#xA;cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;~/.emacs&#xA;(require &#39;nb) &#xA;(global-set-key [f11] &#39;nb)&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;== Usage&lt;/p&gt; &#xA;&lt;p&gt;Type M-x nb or the bound key to search for notes: each search term is a grep(1) regular expression that has to appear somewhere in the note.&lt;/p&gt; &#xA;&lt;p&gt;Use M-x nb-new-note to create a new note.&lt;/p&gt; &#xA;&lt;p&gt;Notes are kept in ~/NB and are named based on the first line of the note. It is a good idea to place a title there.&lt;/p&gt; &#xA;&lt;p&gt;== Copying&lt;/p&gt; &#xA;&lt;p&gt;To the extent possible under law, Christian Neukirchen &lt;a href=&#34;http://purl.org/net/chneukirchen&#34;&gt;http://purl.org/net/chneukirchen&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;http://creativecommons.org/publicdomain/zero/1.0/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;== Links&lt;/p&gt; &#xA;&lt;p&gt;Github page:: &lt;a href=&#34;http://github.com/chneukirchen/nb&#34;&gt;http://github.com/chneukirchen/nb&lt;/a&gt; Christian Neukirchen:: &lt;a href=&#34;http://chneukirchen.org/&#34;&gt;http://chneukirchen.org/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>