<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:30:23Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ichernyshovvv/enlight</title>
    <updated>2024-05-29T01:30:23Z</updated>
    <id>tag:github.com,2024-05-29:/ichernyshovvv/enlight</id>
    <link href="https://github.com/ichernyshovvv/enlight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly customizable startup screen for Emacs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;enlight&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Highly customizable startup screen for Emacs.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ichernyshovvv/enlight/master/demo.gif&#34; alt=&#34;Demo gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation and configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package enlight&#xA;  :init&#xA;  (unless (package-installed-p &#39;enlight)&#xA;    (package-vc-install&#xA;     &#39;(enlight&#xA;       :vc-backend Git&#xA;       :url &#34;https://github.com/ichernyshovvv/enlight&#34;&#xA;       :branch &#34;master&#34;))))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Opening at startup&lt;/h3&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;initial-buffer-choice&lt;/code&gt; custom variable to #&#39;enlight in order to show enlight right after Emacs startup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(setopt initial-buffer-choice #&#39;enlight)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Opening manually&lt;/h3&gt; &#xA;&lt;p&gt;Also you always can switch to the buffer by calling&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x enlight-open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, it will open the buffer in the current window, but you can change the behaviour by customizing &lt;code&gt;display-buffer-alist&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration examples and screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Simple menu&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ichernyshovvv/enlight/master/gallery/menu.png&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package enlight&#xA;  :custom&#xA;  (enlight-content&#xA;   (concat&#xA;    (propertize &#34;MENU&#34; &#39;face &#39;highlight)&#xA;    &#34;\n&#34;&#xA;    (enlight-menu&#xA;     &#39;((&#34;Org Mode&#34;&#xA;&#x9;(&#34;Org-Agenda (current day)&#34; (org-agenda nil &#34;a&#34;) &#34;a&#34;))&#xA;       (&#34;Downloads&#34;&#xA;&#x9;(&#34;Transmission&#34; transmission &#34;t&#34;)&#xA;&#x9;(&#34;Downloads folder&#34; (dired &#34;~/Downloads&#34;) &#34;a&#34;))&#xA;       (&#34;Other&#34;&#xA;&#x9;(&#34;Projects&#34; project-switch-project &#34;p&#34;)))))))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using grid.el&lt;/h3&gt; &#xA;&lt;p&gt;Use can use grid.el to construct a bit more complex layouts.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ichernyshovvv/enlight/master/gallery/complex.png&#34;&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package grid&#xA;  :init&#xA;  (unless (package-installed-p &#39;grid)&#xA;    (package-vc-install&#xA;     &#39;(grid&#xA;       :vc-backend Git&#xA;       :url &#34;https://github.com/ichernyshovvv/grid.el&#34;&#xA;       :branch &#34;master&#34;))))&#xA;&#xA;(defvar enlight-lipsum &#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&#xA;&#xA;Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&#34;)&#xA;&#xA;(defface enlight-yellow-bold&#xA;  &#39;((t (:foreground &#34;#cabf00&#34; :bold t)))&#xA;  &#34;Yellow bold face&#34;)&#xA;&#xA;(defvar enlight-guix&#xA;  (propertize&#xA;   &#34; ..                             `.&#xA; `--..```..`           `..```..--`   &#xA;   .-:///-:::.       `-:::///:-.     &#xA;      ````.:::`     `:::.````        &#xA;           -//:`    -::-             &#xA;            ://:   -::-              &#xA;            `///- .:::`              &#xA;             -+++-:::.               &#xA;              :+/:::-                &#xA;              `-....`                &#34;&#xA;   &#39;face &#39;enlight-yellow-bold))&#xA;&#xA;(defvar enlight-guix-widget&#xA;  `( :content ,(concat &#34;\n&#34; (propertize &#34;Block 1&#34; &#39;face &#39;enlight-yellow-bold)&#xA;&#x9;&#x9;       &#34;\nGUIX MANAGEMENT WIDGET\n\n&#34;)&#xA;     :width 22 :border t :align center :padding 2))&#xA;&#xA;(defvar enlight-email-width&#xA;  `( :content&#xA;     ,(concat &#34;\n&#34; (propertize &#34;Block 2&#34; &#39;face &#39;enlight-yellow-bold)&#xA;&#x9;      &#34;\nEMAIL WIDGET\n\n&#34;)&#xA;     :padding 2 :width 22 :align center :border t))&#xA;&#xA;(defvar enlight-weather-width&#xA;  `( :content&#xA;     ,(concat &#34;\n&#34; (propertize &#34;Block 3&#34; &#39;face &#39;enlight-yellow-bold)&#xA;&#x9;      &#34;\nWEATHER WIDGET\n\n&#34;)&#xA;     :padding 2 :width 22 :border t :align center))&#xA;&#xA;(defvar enlight-calendar&#xA;  (progn&#xA;    (calendar)&#xA;    (diary-mark-entries)&#xA;    (prog1 (with-current-buffer (buffer-name (current-buffer))&#xA;&#x9;     (buffer-string))&#xA;      (calendar-exit))))&#xA;&#xA;(use-package enlight&#xA;  :custom&#xA;  (enlight-content&#xA;   (concat&#xA;    (grid-get-box `( :align center :content ,enlight-guix :width 80))&#xA;    (grid-get-row&#xA;     (list&#xA;      (grid-get-box&#xA;       (concat&#xA;&#x9;(grid-get-box&#xA;&#x9; `( :content&#xA;&#x9;    ,(concat&#xA;&#x9;      (grid-get-box `( :content ,(propertize &#34;HEADER&#34; &#39;face &#39;highlight)&#xA;&#x9;&#x9;&#x9;       :width 80 :align center))&#xA;&#x9;      (grid-get-row&#xA;&#x9;       `(,enlight-guix-widget&#xA;&#x9;&#x9; &#34;     &#34;&#xA;&#x9;&#x9; ,enlight-email-width&#xA;&#x9;&#x9; &#34;     &#34;&#xA;&#x9;&#x9; ,enlight-weather-width)))&#xA;&#x9;    :width 80))&#xA;&#x9;enlight-calendar &#34;\n&#34;&#xA;&#x9;(grid-get-row&#xA;&#x9; `(,(concat&#xA;&#x9;     (propertize &#34;MENU&#34; &#39;face &#39;highlight)&#xA;&#x9;     &#34;\n&#34;&#xA;&#x9;     (enlight-menu&#xA;&#x9;      &#39;((&#34;Org Mode&#34;&#xA;&#x9;&#x9; (&#34;Org-Agenda (current day)&#34; (org-agenda nil &#34;a&#34;) &#34;a&#34;))&#xA;&#x9;&#x9;(&#34;Downloads&#34;&#xA;&#x9;&#x9; (&#34;Transmission&#34; transmission &#34;t&#34;)&#xA;&#x9;&#x9; (&#34;Downloads folder&#34; (dired &#34;~/Downloads&#34;) &#34;a&#34;))&#xA;&#x9;&#x9;(&#34;Other&#34;&#xA;&#x9;&#x9; (&#34;Projects&#34; project-switch-project &#34;p&#34;)))))&#xA;&#x9;   ,(grid-get-column&#xA;&#x9;     `(,(propertize &#34;THINGS TO REMEMBER&#34; &#39;face &#39;highlight)&#xA;&#x9;       (:content ,enlight-lipsum :width 50))))))))))))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Thanks to @a13 and @progfolio for code review.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Scorpil/configs</title>
    <updated>2024-05-29T01:30:23Z</updated>
    <id>tag:github.com,2024-05-29:/Scorpil/configs</id>
    <link href="https://github.com/Scorpil/configs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Just configs for common tools.&lt;/p&gt;</summary>
  </entry>
</feed>