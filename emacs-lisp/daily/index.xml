<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:39:26Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stonebk/dotemacs</title>
    <updated>2022-07-23T01:39:26Z</updated>
    <id>tag:github.com,2022-07-23:/stonebk/dotemacs</id>
    <link href="https://github.com/stonebk/dotemacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Version my emacs config&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>auto-complete/popup-el</title>
    <updated>2022-07-23T01:39:26Z</updated>
    <id>tag:github.com,2022-07-23:/auto-complete/popup-el</id>
    <link href="https://github.com/auto-complete/popup-el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Visual Popup Interface Library for Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://melpa.org/#/popup&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/popup-badge.svg?sanitize=true&#34; alt=&#34;melpa badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stable.melpa.org/#/popup&#34;&gt;&lt;img src=&#34;https://stable.melpa.org/packages/popup-badge.svg?sanitize=true&#34; alt=&#34;melpa stable badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;popup.el&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/auto-complete/popup-el/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/auto-complete/popup-el/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;popup.el is a visual popup user interface library for Emacs. This provides a basic API and common UI widgets such as popup tooltips and popup menus.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tooltip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/auto-complete/popup-el/master/etc/images/popup1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Popup Menu&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/auto-complete/popup-el/master/etc/images/popup2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Popup Cascade Menu&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/auto-complete/popup-el/master/etc/images/popup3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;popup.el&lt;/code&gt; from &lt;a href=&#34;https://melpa.org/&#34;&gt;MELPA&lt;/a&gt; with package.el. popwin is tested under GNU Emacs 24 or later.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, users of Debian 9 or later or Ubuntu 16.04 or later may simply &lt;code&gt;apt-get install elpa-popup&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Popup Items&lt;/h2&gt; &#xA;&lt;p&gt;Elements of &lt;code&gt;popup-list&lt;/code&gt; have to be popup items. A popup item is substantially a string but it may involve some text-properties. There are two ways to make popup items. One is just using strings. Another is to use the &lt;code&gt;popup-make-item&lt;/code&gt; function, which just returns the string after adding text-properties of its keywords. Effective text-properties are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;value&lt;/code&gt; -- This represents the &lt;strong&gt;real&lt;/strong&gt; value of the item. This will be used when returning the value but not the item (or string) from some synchronous functions such as &lt;code&gt;popup-menu*&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face&lt;/code&gt; -- The background face of the item. The value of &lt;code&gt;popup-face&lt;/code&gt; will be overridden.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;selection-face&lt;/code&gt; -- The selection face of the item. The value of &lt;code&gt;popup-selection-face&lt;/code&gt; will be overridden.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;document&lt;/code&gt; -- The documentation string or function of the item.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;summary&lt;/code&gt; -- The summary string of the item. This will be shown inline with the item.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt; -- The symbol character of the item.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sublist&lt;/code&gt; -- The sublist of the item. This is effective only with &lt;code&gt;popup-cascade-menu&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of properties can be accessed by &lt;code&gt;popup-item-&amp;lt;property&amp;gt;&lt;/code&gt; utility function.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-item-propertize&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-item-propertize item &amp;amp;rest properties =&amp;gt; item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Same as &lt;code&gt;propertize&lt;/code&gt; except that this avoids overriding existed value with &lt;code&gt;nil&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-make-item&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-make-item name &amp;amp;key value popup-face selection-face sublist&#xA;document symbol summary =&amp;gt; item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The utility function of &lt;code&gt;popup-item-propertize&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Popups&lt;/h2&gt; &#xA;&lt;p&gt;This section describes the basic data structures and operations of popups.&lt;/p&gt; &#xA;&lt;h3&gt;Struct: &lt;code&gt;popup&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Any instance of &lt;code&gt;popup&lt;/code&gt; structure has the following fields (some unimportant fields are not listed):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;point&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;row&lt;/code&gt; -- The line number.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;column&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt; -- Max width of &lt;code&gt;popup&lt;/code&gt; instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt; -- Max height of &lt;code&gt;popup&lt;/code&gt; instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;current-height&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;direction&lt;/code&gt; -- Positive number means forward, negative number means backward.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;parent&lt;/code&gt; -- The parent of &lt;code&gt;popup&lt;/code&gt; instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face&lt;/code&gt; -- The background face.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;selection-face&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scroll-bar&lt;/code&gt; -- Non-nil means &lt;code&gt;popup&lt;/code&gt; instance has a scroll bar.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt; -- Non-nil means &lt;code&gt;popup&lt;/code&gt; instance has a space for displaying symbols of item.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cursor&lt;/code&gt; -- The current position of &lt;code&gt;list&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scroll-top&lt;/code&gt; -- The offset of scrolling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;list&lt;/code&gt; -- The contents of &lt;code&gt;popup&lt;/code&gt; instance in a list of items (strings).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;original-list&lt;/code&gt; -- Same as &lt;code&gt;list&lt;/code&gt; except that this is not filtered.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of these fields can be accessed by &lt;code&gt;popup-&amp;lt;field&amp;gt;&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-create&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-create point width height &amp;amp;key min-height max-width around face&#xA;selection-face scroll-bar margin-left margin-right symbol parent&#xA;parent-offset =&amp;gt; popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a popup instance at &lt;code&gt;POINT&lt;/code&gt; with &lt;code&gt;WIDTH&lt;/code&gt; and &lt;code&gt;HEIGHT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;MIN-HEIGHT&lt;/code&gt; is the minimal height of the popup. The default value is 0.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;MAX-WIDTH&lt;/code&gt; is the maximum width of the popup. The default value is nil (no limit). If a floating point, the value refers to the ratio of the window. If an integer, limit is in characters.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;AROUND&lt;/code&gt; is non-nil, the popup will be displayed around the point but not at the point.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FACE&lt;/code&gt; is the background face of the popup. The default value is &lt;code&gt;popup-face&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SELECTION-FACE&lt;/code&gt; is the foreground (selection) face of the popup The default value is &lt;code&gt;popup-face&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;SCROLL-BAR&lt;/code&gt; is non-nil, the popup will have a scroll bar at the right.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;MARGIN-LEFT&lt;/code&gt; is non-nil, the popup will have a margin at the left.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;MARGIN-RIGHT&lt;/code&gt; is non-nil, the popup will have a margin at the right.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SYMBOL&lt;/code&gt; is a single character which indicates the kind of the item.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PARENT&lt;/code&gt; is the parent popup instance. If &lt;code&gt;PARENT&lt;/code&gt; is omitted, the popup will be a root instance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PARENT-OFFSET&lt;/code&gt; is a row offset from the parent popup.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(setq popup (popup-create (point) 10 10))&#xA;(popup-set-list popup &#39;(&#34;Foo&#34; &#34;Bar&#34; &#34;Baz&#34;))&#xA;(popup-draw popup)&#xA;;; do something here&#xA;(popup-delete popup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-delete&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-delete popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Delete the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-live-p&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-live-p popup =&amp;gt; boolean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-set-list&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-set-list popup list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the contents of the &lt;code&gt;POPUP&lt;/code&gt;. &lt;code&gt;LIST&lt;/code&gt; has to be popup items.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-draw&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-draw popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Draw the contents of the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-hide&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-hide popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hide the &lt;code&gt;POPUP&lt;/code&gt;. To show again, call &lt;code&gt;popup-draw&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-hidden-p&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-hidden-p popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Return non-nil if the &lt;code&gt;POPUP&lt;/code&gt; is hidden.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-select&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-select popup index&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select the item of &lt;code&gt;INDEX&lt;/code&gt; of the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-selected-item&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-selected-item popup =&amp;gt; item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Return the selected item of the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Return non-nil if the &lt;code&gt;POPUP&lt;/code&gt; is still alive.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-next&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-next popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select the next item of the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-previous&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-previous popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select the next item of the &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-scroll-down&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-scroll-down popup n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scroll down &lt;code&gt;N&lt;/code&gt; items of the &lt;code&gt;POPUP&lt;/code&gt;. This won&#39;t wrap.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-scroll-up&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-scroll-up popup n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scroll up &lt;code&gt;N&lt;/code&gt; items of the &lt;code&gt;POPUP&lt;/code&gt;. This won&#39;t wrap.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-isearch&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-isearch popup &amp;amp;key cursor-color keymap callback help-delay&#xA;=&amp;gt; boolean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter incremental search event loop of &lt;code&gt;POPUP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tooltips&lt;/h2&gt; &#xA;&lt;p&gt;A tooltip is an useful visual UI widget for displaying information something about what cursor points to.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-tip&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-tip string &amp;amp;key point around width height min-height max-width&#xA;truncate margin margin-left margin-right scroll-bar parent&#xA;parent-offset nowait nostrip prompt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show a tooltip with message &lt;code&gt;STRING&lt;/code&gt; at &lt;code&gt;POINT&lt;/code&gt;. This function is synchronized unless &lt;code&gt;NOWAIT&lt;/code&gt; specified. Almost all arguments are same as &lt;code&gt;popup-create&lt;/code&gt; except for &lt;code&gt;TRUNCATE&lt;/code&gt;, &lt;code&gt;NOWAIT&lt;/code&gt;, &lt;code&gt;NOSTRIP&lt;/code&gt; and &lt;code&gt;PROMPT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;TRUNCATE&lt;/code&gt; is non-nil, the tooltip can be truncated.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;NOWAIT&lt;/code&gt; is non-nil, this function immediately returns the tooltip instance without entering event loop.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;NOSTRIP&lt;/code&gt; is non-nil, &lt;code&gt;STRING&lt;/code&gt; properties are not stripped.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PROMPT&lt;/code&gt; is a prompt string used when reading events during the event loop.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(popup-tip &#34;Hello, World!&#34;)&#xA;;; reach here after the tooltip disappeared&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Popup Menus&lt;/h2&gt; &#xA;&lt;p&gt;Popup menu is an useful visual UI widget for prompting users to select an item of a list.&lt;/p&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-menu*&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;popup-menu* list &amp;amp;key point around width height margin margin-left&#xA;margin-right scroll-bar symbol parent parent-offset keymap&#xA;fallback help-delay nowait prompt isearch isearch-filter isearch-cursor-color&#xA;isearch-keymap isearch-callback initial-index =&amp;gt; selected-value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show a popup menu of &lt;code&gt;LIST&lt;/code&gt; at &lt;code&gt;POINT&lt;/code&gt;. This function returns the value of the selected item. Almost all arguments are same as &lt;code&gt;popup-create&lt;/code&gt; except for &lt;code&gt;KEYMAP&lt;/code&gt;, &lt;code&gt;FALLBACK&lt;/code&gt;, &lt;code&gt;HELP-DELAY&lt;/code&gt;, &lt;code&gt;PROMPT&lt;/code&gt;, &lt;code&gt;ISEARCH&lt;/code&gt;, &lt;code&gt;ISEARCH-FILTER&lt;/code&gt;, &lt;code&gt;ISEARCH-CURSOR-COLOR&lt;/code&gt;, &lt;code&gt;ISEARCH-KEYMAP&lt;/code&gt; and &lt;code&gt;ISEARCH-CALLBACK&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;KEYMAP&lt;/code&gt; is provided, it is a keymap which is used when processing events during event loop.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;FALLBACK&lt;/code&gt; is provided, it is a function taking two arguments; a key and a command. &lt;code&gt;FALLBACK&lt;/code&gt; is called when no special operation is found on the key. The default value is &lt;code&gt;popup-menu-fallback&lt;/code&gt;, which does nothing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HELP-DELAY&lt;/code&gt; is a delay of displaying helps.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;NOWAIT&lt;/code&gt; is non-nil, this function immediately returns the menu instance without entering event loop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PROMPT&lt;/code&gt; is a prompt string when reading events during event loop.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;ISEARCH&lt;/code&gt; is non-nil, do isearch as soon as displaying the popup menu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ISEARCH-FILTER&lt;/code&gt; is a filtering function taking two arguments: search pattern and list of items. Returns a list of matching items.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ISEARCH-CURSOR-COLOR&lt;/code&gt; is a cursor color during isearch. The default value is `popup-isearch-cursor-color&#39;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ISEARCH-KEYMAP&lt;/code&gt; is a keymap which is used when processing events during event loop. The default value is &lt;code&gt;popup-isearch-keymap&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ISEARCH-CALLBACK&lt;/code&gt; is a function taking one argument. &lt;code&gt;popup-menu&lt;/code&gt; calls &lt;code&gt;ISEARCH-CALLBACK&lt;/code&gt;, if specified, after isearch finished or isearch canceled. The arguments is whole filtered list of items.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;INITIAL-INDEX&lt;/code&gt; is non-nil, this is an initial index value for &lt;code&gt;popup-select&lt;/code&gt;. Only positive integer is valid.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(popup-menu* &#39;(&#34;Foo&#34; &#34;Bar&#34; &#34;Baz&#34;))&#xA;;; =&amp;gt; &#34;Baz&#34; if you select Baz&#xA;(popup-menu* (list (popup-make-item &#34;Yes&#34; :value t)&#xA;                   (popup-make-item &#34;No&#34; :value nil)))&#xA;;; =&amp;gt; t if you select Yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Function: &lt;code&gt;popup-cascade-menu&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Same as &lt;code&gt;popup-menu&lt;/code&gt; except that an element of &lt;code&gt;LIST&lt;/code&gt; can be also a sub-menu if the element is a cons cell formed &lt;code&gt;(ITEM . SUBLIST)&lt;/code&gt; where &lt;code&gt;ITEM&lt;/code&gt; is an usual item and &lt;code&gt;SUBLIST&lt;/code&gt; is a list of the sub menu.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(popup-cascade-menu &#39;((&#34;Top1&#34; &#34;Sub1&#34; &#34;Sub2&#34;) &#34;Top2&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize Variables&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;popup-isearch-regexp-builder-function&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Function used to construct a regexp from a pattern. You may for instance provide a function that replaces spaces by &#39;.+&#39; if you like helm or ivy style of completion. Default value is &lt;code&gt;#&#39;regexp-quote&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Copyright (C) 2011-2015 Tomohiro Matsuyama &amp;lt;&lt;a href=&#34;mailto:m2ym.pub@gmail.com&#34;&gt;m2ym.pub@gmail.com&lt;/a&gt;&amp;gt;&lt;br&gt; Copyright (C) 2020-2022 Jen-Chieh Shen &amp;lt;&lt;a href=&#34;mailto:jcs090218@gmail.com&#34;&gt;jcs090218@gmail.com&lt;/a&gt;&amp;gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>emacs-straight/jsonrpc</title>
    <updated>2022-07-23T01:39:26Z</updated>
    <id>tag:github.com,2022-07-23:/emacs-straight/jsonrpc</id>
    <link href="https://github.com/emacs-straight/jsonrpc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of the jsonrpc package from GNU ELPA, current as of 2022-07-23&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>