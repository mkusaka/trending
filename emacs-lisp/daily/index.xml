<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-29T01:34:09Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emacsattic/helm-swoop</title>
    <updated>2025-07-29T01:34:09Z</updated>
    <id>tag:github.com,2025-07-29:/emacsattic/helm-swoop</id>
    <link href="https://github.com/emacsattic/helm-swoop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Efficiently hopping squeezed lines powered by Emacs helm interface&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://melpa.org/#/helm-swoop&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/helm-swoop-badge.svg?sanitize=true&#34; alt=&#34;melpa badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/helm-swoop&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/helm-swoop-badge.svg?sanitize=true&#34; alt=&#34;melpa stable badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emacsorphanage/helm-swoop/actions&#34;&gt;&lt;img src=&#34;https://github.com/emacsorphanage/helm-swoop/workflows/Main%20workflow/badge.svg?sanitize=true&#34; alt=&#34;github actions badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;List match lines to another buffer, which is able to squeeze by any words you input. At the same time, the original buffer&#39;s cursor is jumping line to line according to moving up and down the line list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShingoFukuyama/images/master/helm-swoop.gif&#34; alt=&#34;helm-swoop&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Feature&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Culling all lines in buffer with your input&lt;/li&gt; &#xA; &lt;li&gt;Highlight multiple matched pattern&lt;/li&gt; &#xA; &lt;li&gt;Jumping line to line according to list buffer&#39;s move&lt;/li&gt; &#xA; &lt;li&gt;Cache result until modifies the buffer&lt;/li&gt; &#xA; &lt;li&gt;Go back to the last line&lt;/li&gt; &#xA; &lt;li&gt;Multi separated line culling&lt;/li&gt; &#xA; &lt;li&gt;Culling lines are editable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;Now helm-swoop has several ways.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-swoop&lt;/code&gt; when region active&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-swoop&lt;/code&gt; when the cursor is at any symbol&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-swoop&lt;/code&gt; when the cursor is not at any symbol&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-3 M-x helm-swoop&lt;/code&gt; or &lt;code&gt;C-u 5 M-x helm-swoop&lt;/code&gt; multi separated line culling&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-multi-swoop&lt;/code&gt; multi-occur like feature&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-multi-swoop-all&lt;/code&gt; apply all buffers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-u M-x helm-multi-swoop&lt;/code&gt; apply last selected buffers from the second time&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-multi-swoop-org&lt;/code&gt; apply to all org-mode buffers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-multi-swoop-current-mode&lt;/code&gt; apply to all buffers with the same major-mode as the current buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-multi-swoop-projectile&lt;/code&gt; Apply to all opened buffers of the current project&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;M-x helm-swoop-same-face-at-point&lt;/code&gt; list lines have the same face at the cursor is on&lt;/li&gt; &#xA; &lt;li&gt;During isearch &lt;code&gt;M-i&lt;/code&gt; to hand the word over to helm-swoop&lt;/li&gt; &#xA; &lt;li&gt;During helm-swoop &lt;code&gt;M-i&lt;/code&gt; to hand the word over to helm-multi-swoop-all&lt;/li&gt; &#xA; &lt;li&gt;While doing &lt;code&gt;helm-swoop&lt;/code&gt; press &lt;code&gt;C-c C-e&lt;/code&gt; to edit mode, apply changes to original buffer by &lt;code&gt;C-x C-s&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s able to use words within a region or a word at symbol as search query when it called. Also use a keybind you set just type like M-i instead of &lt;code&gt;M-x helm-swoop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Edit mode&lt;/h4&gt; &#xA;&lt;p&gt;While doing &lt;code&gt;helm-swoop&lt;/code&gt; type &lt;code&gt;C-c C-e&lt;/code&gt; to enter the edit mode. Before enter the edit mode, you can choose some lines marked by &lt;code&gt;C-SPC&lt;/code&gt; or &lt;code&gt;M-SPC&lt;/code&gt; to edit. Apply changes to original buffer type &lt;code&gt;C-x C-s&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Across multiple buffers&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;M-x helm-multi-swoop&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select any buffers by [C-SPC] or [M-SPC]&lt;/li&gt; &#xA; &lt;li&gt;Press [RET] to start helm-multi-swoop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShingoFukuyama/images/master/helm-multi-swoop.gif&#34; alt=&#34;helm-multi-swoop&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;M-x helm-multi-swoop-all&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Skip select phase and apply all buffers.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;C-u M-x helm-multi-swoop&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Skip select phase and apply last selected buffers, if you have done helm-multi-swoop before.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;M-x helm-multi-swoop-org&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Skip the select phase and apply to all org-mode buffers&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;M-x helm-multi-swoop-current-mode&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Skip the select phase and apply to all buffers with the same major mode as the current buffer&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;M-x helm-multi-swoop-projectile&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Skip the select phase and apply to all opened buffers of the current project. It requires projectile to be installed. You may specify a filter that will be used for buffers by setting variable &lt;code&gt;helm-multi-swoop-projectile-buffers-filter&lt;/code&gt;. By default its value is &lt;code&gt;projectile-buffers-with-file-or-process&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Multiline behavior&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;M-4 M-x helm-swoop&lt;/code&gt; or &lt;code&gt;C-u 4 M-x helm-swoop&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShingoFukuyama/images/master/helm-swoop2.gif&#34; alt=&#34;helm-swoop2&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; helm from https://github.com/emacs-helm/helm&#xA;(require &#39;helm)&#xA;&#xA;;; Locate the helm-swoop folder to your path&#xA;(add-to-list &#39;load-path &#34;~/.emacs.d/elisp/helm-swoop&#34;)&#xA;(require &#39;helm-swoop)&#xA;&#xA;;; Change the keybinds to whatever you like :)&#xA;(global-set-key (kbd &#34;M-i&#34;) &#39;helm-swoop)&#xA;(global-set-key (kbd &#34;M-I&#34;) &#39;helm-swoop-back-to-last-point)&#xA;(global-set-key (kbd &#34;C-c M-i&#34;) &#39;helm-multi-swoop)&#xA;(global-set-key (kbd &#34;C-x M-i&#34;) &#39;helm-multi-swoop-all)&#xA;&#xA;;; When doing isearch, hand the word over to helm-swoop&#xA;(define-key isearch-mode-map (kbd &#34;M-i&#34;) &#39;helm-swoop-from-isearch)&#xA;;; From helm-swoop to helm-multi-swoop-all&#xA;(define-key helm-swoop-map (kbd &#34;M-i&#34;) &#39;helm-multi-swoop-all-from-helm-swoop)&#xA;;; When doing evil-search, hand the word over to helm-swoop&#xA;;; (define-key evil-motion-state-map (kbd &#34;M-i&#34;) &#39;helm-swoop-from-evil-search)&#xA;&#xA;;; Instead of helm-multi-swoop-all, you can also use helm-multi-swoop-current-mode&#xA;(define-key helm-swoop-map (kbd &#34;M-m&#34;) &#39;helm-multi-swoop-current-mode-from-helm-swoop)&#xA;&#xA;;; Move up and down like isearch&#xA;(define-key helm-swoop-map (kbd &#34;C-r&#34;) &#39;helm-previous-line)&#xA;(define-key helm-swoop-map (kbd &#34;C-s&#34;) &#39;helm-next-line)&#xA;(define-key helm-multi-swoop-map (kbd &#34;C-r&#34;) &#39;helm-previous-line)&#xA;(define-key helm-multi-swoop-map (kbd &#34;C-s&#34;) &#39;helm-next-line)&#xA;&#xA;;; Save buffer when helm-multi-swoop-edit complete&#xA;(setq helm-multi-swoop-edit-save t)&#xA;&#xA;;; If this value is t, split window inside the current window&#xA;(setq helm-swoop-split-with-multiple-windows nil)&#xA;&#xA;;; Split direcion. &#39;split-window-vertically or &#39;split-window-horizontally&#xA;(setq helm-swoop-split-direction &#39;split-window-vertically)&#xA;&#xA;;; If nil, you can slightly boost invoke speed in exchange for text color&#xA;(setq helm-swoop-speed-or-color nil)&#xA;&#xA;;; ;; Go to the opposite side of line from the end or beginning of line&#xA;(setq helm-swoop-move-to-line-cycle t)&#xA;&#xA;;; Optional face for line numbers&#xA;;; Face name is `helm-swoop-line-number-face`&#xA;(setq helm-swoop-use-line-number-face t)&#xA;&#xA;;; If you prefer fuzzy matching&#xA;(setq helm-swoop-use-fuzzy-match t)&#xA;&#xA;;; If you would like to use migemo, enable helm&#39;s migemo feature&#xA;(helm-migemo-mode 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Configure pre-input search query&lt;/h4&gt; &#xA;&lt;p&gt;By default, helm-swoop uses search query at the cursor. You can configure this behavior by setting &lt;code&gt;helm-swoop-pre-input-function&lt;/code&gt; on your own.&lt;/p&gt; &#xA;&lt;p&gt;i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;;; Use search query at the cursor  (default)&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda () (thing-at-point &#39;symbol)))&#xA;&#xA;;; Disable pre-input&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda () &#34;&#34;))&#xA;;; Or, just use M-x helm-swoop-without-pre-input&#xA;&#xA;;; Match only for symbol&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda () (format &#34;\\_&amp;lt;%s\\_&amp;gt; &#34; (thing-at-point &#39;symbol))))&#xA;&#xA;;; Always use the previous search for helm. Remember C-&amp;lt;backspace&amp;gt; will delete entire line&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda () (if (boundp &#39;helm-swoop-pattern)&#xA;                     helm-swoop-pattern &#34;&#34;)))&#xA;&#xA;;; If there is no symbol at the cursor, use the last used words instead.&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda ()&#xA;        (let (($pre-input (thing-at-point &#39;symbol)))&#xA;          (if (eq (length $pre-input) 0)&#xA;              helm-swoop-pattern ;; this variable keeps the last used words&#xA;            $pre-input))))&#xA;&#xA;;; If a symbol or phrase is selected, use it as the initial query.&#xA;(setq helm-swoop-pre-input-function&#xA;      (lambda ()&#xA;        (if mark-active&#xA;            (buffer-substring-no-properties (mark) (point))&#xA;          &#34;&#34;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Require&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/emacs-helm/helm&#34;&gt;helm.el&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;We welcome PR!&lt;/p&gt; &#xA;&lt;h4&gt;Require tools for testing&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cask &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;install via brew&lt;/p&gt; &lt;pre&gt;&lt;code&gt;brew install cask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;manual install&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~/&#xA;hub clone cask/cask&#xA;export PATH=&#34;$HOME/.cask/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;General Public License Version 3 (GPLv3) Copyright (c) Emacsorphanage - &lt;a href=&#34;https://github.com/emacsorphanage&#34;&gt;https://github.com/emacsorphanage&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>