<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-08T01:34:25Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rougier/persid</title>
    <updated>2023-01-08T01:34:25Z</updated>
    <id>tag:github.com,2023-01-08:/rougier/persid</id>
    <link href="https://github.com/rougier/persid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Persistent identifier library for GNU Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;** Persistent Identifier Library&lt;/p&gt; &#xA;&lt;p&gt;The Persistent Identifier Library allows to manipulate persistent identifiers that are used to locate scholar resources online. The library knows about the following formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;isbn&lt;/em&gt;: International Standard Book Number (&lt;a href=&#34;https://isbn.org&#34;&gt;https://isbn.org&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;issn&lt;/em&gt;: International Standard Serial Number (&lt;a href=&#34;https://www.issn.org&#34;&gt;https://www.issn.org&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;doi&lt;/em&gt;: Digital Object identifier (&lt;a href=&#34;https://www.doi.org&#34;&gt;https://www.doi.org&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;pmid&lt;/em&gt;: PubMed (&lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov&#34;&gt;https://pubmed.ncbi.nlm.nih.gov&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;pmcid&lt;/em&gt;: PubMed Central (&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc&#34;&gt;https://www.ncbi.nlm.nih.gov/pmc&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;arxiv&lt;/em&gt;: Cornell University (&lt;a href=&#34;https://arxiv.org&#34;&gt;https://arxiv.org&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Given an identifier in one of the known formats, the libray can query information about the resources and format it as a bibtex entry. To do so, the library primarily use the crossref.org API (doi,pmid, pcmi), openalex.org API (issn), arxiv API (arxiv) and ebook.de (isbn) Unfortunately, ebook.de is far from being complete and a lot of ISBN records are missing.&lt;/p&gt; &#xA;&lt;p&gt;The main function is the interactive &lt;code&gt;persid-bibtex-from&lt;/code&gt; function that accept a single identifier and return the corresponding bibtex. To do that, the format of the identifier is first identified and normalized (if needed), then the correspoding bibtex is queried online:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;doi&lt;/em&gt;: [[https://www.crossref.org/documentation/retrieve-metadata/rest-api/a-non-technical-introduction-to-our-api/][Crossref API]] is used to get bibtex&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;pmid&lt;/em&gt;: [[https://www.ncbi.nlm.nih.gov/pmc/tools/id-converter-api/][PubMed converter API]] is used to convert pmid to doi, then the crossref API is used to get bibtex.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;pmcid&lt;/em&gt;: [[https://www.ncbi.nlm.nih.gov/pmc/tools/id-converter-api/][PubMed converter API]] is used to convert pmcid to doi, then the crossref API is used to get bibtex.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;arxiv&lt;/em&gt;: [[https://arxiv.org/help/api/][arXiv API]] is used to get bibtex&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;issn&lt;/em&gt;: [[https://docs.openalex.org/][OpenAlex API]] is used to get the name and the publisher information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;isbn&lt;/em&gt;: not yet implemented (lack of consistent open database)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;See also&lt;/em&gt;: [[https://guides.lib.berkeley.edu/information-studies/apis][Information Studies: APIs for scholarly resources]]&lt;/p&gt; &#xA;&lt;p&gt;** Example usage&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (insert (persid-bibtex-from &#34;arxiv:2008.06030&#34;) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src bibtex @Article{2020arXiv200806030R, author = {{Rougier}, Nicolas P.}, title = &#34;{On the design of text editors}&#34;, journal = {arXiv e-prints}, keywords = {Computer Science - Human-Computer Interaction}, year = 2020, month = aug, eid = {arXiv:2008.06030}, pages = {arXiv:2008.06030}, archivePrefix = {arXiv}, eprint = {2008.06030}, primaryClass = {cs.HC}, adsurl = {&lt;a href=&#34;https://ui.adsabs.harvard.edu/abs/2020arXiv200806030R%7D&#34;&gt;https://ui.adsabs.harvard.edu/abs/2020arXiv200806030R}&lt;/a&gt;, adsnote = {Provided by the SAO/NASA Astrophysics Data System} } #+end_src bibtex&lt;/p&gt; &#xA;&lt;p&gt;** Related work&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[[https://github.com/cpitclaudel/biblio.el][biblio.el]] makes it easy to browse and gather bibliographic references and publications from various sources, by keywords or by DOI. References are automatically fetched from well-curated sources, and formatted as BibTeX.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[[https://github.com/jkitchin/org-ref][org-ref]] makes it easy to insert citations, cross-references, indexes and glossaries as hyper-functional links into org files. The links are fontified so you can tell them apart from other links, and each link is clickable to access functions like opening a pdf, notes or url associated with the link. Each link also can be exported to LaTeX to build a PDF. For citations, export to other formats is supported by citeproc for high quality export to HTML, markdown, plain text, or stand-alone (i.e. independent of a bibtex file) LaTeX.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[[https://github.com/yantar92/org-capture-ref][org-capture-ref]] extends org-ref&#39;s idea to auto-retrieve BiBTeX from scientific paper links. Instead of limiting BiBTeX generation to research purposes (scientific articles and books), this package auto-generates BiBTeX for any possible web link (Youtube videos, blog posts, reddit threads, etc).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[[https://github.com/larsmagne/bookiez.el][bookiez]] is a library for looking up ISBNs via the Google Book API, displaying the result, and maintaining a database of books.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>