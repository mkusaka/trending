<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-21T01:33:55Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>licht1stein/babashka.el</title>
    <updated>2023-06-21T01:33:55Z</updated>
    <id>tag:github.com,2023-06-21:/licht1stein/babashka.el</id>
    <link href="https://github.com/licht1stein/babashka.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Babashka Tasks for Emacs&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/babashka/babashka/master/logo/babashka.svg?sanitize=true&#34; widht=&#34;200px&#34; height=&#34;200px&#34;&gt; &#xA;&lt;h1&gt;babashka.el&lt;/h1&gt; &#xA;&lt;p&gt;Emacs interface for &lt;a href=&#34;https://babashka.org&#34;&gt;babashka&lt;/a&gt; tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://melpa.org/#/babashka&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/babashka-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stable.melpa.org/#/babashka&#34;&gt;&lt;img src=&#34;https://stable.melpa.org/packages/babashka-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Simply call a task&lt;/h3&gt; &#xA;&lt;p&gt;Library provides one entry point &lt;code&gt;babashka-tasks&lt;/code&gt;. If called from a buffer visiting a file in a project with &lt;code&gt;bb.edn&lt;/code&gt; in it, it will look up the directory tree recursively until &lt;code&gt;bb.edn&lt;/code&gt; is found, parses it for tasks and offer a menu to select a task to run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/licht1stein/babashka.el/master/videos/1-simple.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Call a tasks with command line args&lt;/h3&gt; &#xA;&lt;p&gt;If your task accepts command line arguments, just type them after the task name:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/licht1stein/babashka.el/master/videos/3-args.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Call tasks from any directory&lt;/h3&gt; &#xA;&lt;p&gt;If you want to specify a &lt;code&gt;bb.edn&lt;/code&gt; to run tasks from, simply call &lt;code&gt;babashka-tasks&lt;/code&gt; with an interactive argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;C-u M-x babashka-tasks RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/licht1stein/babashka.el/master/videos/2-interactive.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Babashka.el is available on &lt;a href=&#34;https://melpa.org/#/babashka&#34;&gt;MELPA&lt;/a&gt; and &lt;a href=&#34;https://stable.melpa.org/#/babashka&#34;&gt;MELPA Stable&lt;/a&gt; and can be installed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x package-install RET babashka RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using &lt;code&gt;use-package&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(use-package babashka)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;The project uses &lt;a href=&#34;https://github.com/ptaoussanis/encore/raw/master/BREAK-VERSIONING.md&#34;&gt;break versioning&lt;/a&gt;, meaning that upgrading from 1.0.x to 1.0.y will always be safe, upgrade to 1.y.0 might break something small, and upgrade to y.0.0. will break almost everything. That was a versioning spec in one sentence, by the way.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have more ideas about using babashka from Emacs â€” please submit a PR or a feature request.&lt;/p&gt;</summary>
  </entry>
</feed>