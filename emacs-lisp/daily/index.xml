<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-29T01:27:28Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tecosaur/emacs-everywhere</title>
    <updated>2024-04-29T01:27:28Z</updated>
    <id>tag:github.com,2024-04-29:/tecosaur/emacs-everywhere</id>
    <link href="https://github.com/tecosaur/emacs-everywhere" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of https://git.tecosaur.net/tec/emacs-everywhere&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+title: Emacs Everywhere #+author: TEC #+date: 2021-02-06&lt;/p&gt; &#xA;&lt;p&gt;#+html: &lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Emacs-26.3+-blueviolet.svg?style=flat-square&amp;amp;logo=GNU%20Emacs&amp;amp;logoColor=white&#34;&gt; #+html: &lt;a href=&#34;https://melpa.org/#/emacs-everywhere&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/emacs-everywhere-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; #+html: &lt;img src=&#34;https://img.shields.io/badge/stage-%CE%B2,%20refinement-orange?style=flat-square&#34;&gt; #+html: &lt;img src=&#34;https://img.shields.io/badge/-Linux-fcc624?logo=linux&amp;amp;style=flat-square&amp;amp;logoColor=black&#34;&gt; #+html: &lt;img src=&#34;https://img.shields.io/badge/-MacOS-lightgrey?logo=apple&amp;amp;style=flat-square&amp;amp;logoColor=black&#34;&gt; #+html: &lt;a href=&#34;https://liberapay.com/tec&#34;&gt;&lt;img src=&#34;https://shields.io/badge/support%20my%20efforts-f6c915?logo=Liberapay&amp;amp;style=flat-square&amp;amp;logoColor=black&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;A re-implementation of the fantastic idea in [[https://github.com/zachcurry/emacs-anywhere][zachcurry/emacs-anywhere]].&lt;/p&gt; &#xA;&lt;p&gt;[[https://user-images.githubusercontent.com/20903656/107152385-814f2c00-69a2-11eb-978f-b3e78067b3f3.gif]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Just install from [[https://melpa.org/][MELPA]], and you&#39;re ready to go.&lt;/p&gt; &#xA;&lt;p&gt;** Doom&lt;/p&gt; &#xA;&lt;p&gt;Available with the =:app everywhere= module (and with a nice modeline).&lt;/p&gt; &#xA;&lt;p&gt;** Dependencies&lt;/p&gt; &#xA;&lt;p&gt;On Linux, ensure you have the following dependencies satisfied: =xclip=, =xdotool=, =xprop=, and =xwininfo=.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Invoke the Emacs Everywhere executable^{†}. I recommend doing this by [[*Binding a Shortcut][binding a shortcut]] to: #+begin_src shell emacsclient --eval &#34;(emacs-everywhere)&#34; #+end_src&lt;/p&gt; &#xA;&lt;p&gt;A new Emacs frame will appear, within which you can type away to your heart&#39;s content. It will remember which window you have focused.&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;del&gt;emacs-everywhere-insert-selection&lt;/del&gt; is a hook in &lt;del&gt;emacs-everywhere-init-hooks&lt;/del&gt;, and will insert the last text selection into your new buffer. To clear this, type =DEL= or =C-SPC= /before anything else/.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve finished and want to insert the text into the window you triggered Emacs Everywhere from, just press =C-c C-c= or =C-x 5 0= to close the frame and paste the content into the window (as long as &lt;del&gt;emacs-everywhere-paste-command&lt;/del&gt; is non-nil).&lt;/p&gt; &#xA;&lt;p&gt;If you do /not/ wish to paste the buffer content into the original window, =C-c C-k= still copies the content to the clipboard, but never pastes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;^{&lt;em&gt;†&lt;/em&gt;} This requires the Emacs daemon to be running, but that&#39;s super easy. Just call =emacs --daemon= and you&#39;re sorted!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Binding a Shortcut&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Emacs-everywhere needs a way to launch when a not-emacs application has focus. The easiest way to do this is to have a global keybinding/keyboard shortcut dedicated to launching (same as above): &lt;del&gt;emacsclient --eval &#34;(emacs-everywhere)&#34;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;On linux/bsd, use your desktop environment, windows manager, or a dedicated processes (like sxhkd, xbindkeys). The [[https://help.ubuntu.com/stable/ubuntu-help/keyboard-shortcuts-set.html.en][ubuntu]] and [[https://wiki.archlinux.org/title/Keyboard_shortcuts#Customization][archlinux]] guides are informative.&lt;/p&gt; &#xA;&lt;p&gt;On MacOS, options include [[http://www.hammerspoon.org/][hammerspoon]], [[https://www.alfredapp.com/help/workflows/triggers/hotkey/][alfred]], [[https://apps.apple.com/us/app/thor-launcher/id1120999687?mt=12][thor]], or [[https://github.com/pqrs-org/Karabiner-Elements/issues/134#issuecomment-439658876][karabiner]]. (Untested, see [[https://github.com/tecosaur/emacs-everywhere/issues/1#issuecomment-781329521][the relevant issue]])&lt;/p&gt; &#xA;&lt;p&gt;** Example&lt;/p&gt; &#xA;&lt;p&gt;For xbindkeys, =~/.xbindkeysrc= would include the entry #+begin_src shell &#34;emacsclient --eval &#39;(emacs-everywhere)&#39;&#34; Alt + Mod4 + e #+end_src&lt;/p&gt;</summary>
  </entry>
</feed>