<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-06T01:35:10Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yunnan0317/note</title>
    <updated>2023-03-06T01:35:10Z</updated>
    <id>tag:github.com,2023-03-06:/yunnan0317/note</id>
    <link href="https://github.com/yunnan0317/note" rel="alternate"></link>
    <summary type="html">&lt;p&gt;note&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>abrochard/mermaid-mode</title>
    <updated>2023-03-06T01:35:10Z</updated>
    <id>tag:github.com,2023-03-06:/abrochard/mermaid-mode</id>
    <link href="https://github.com/abrochard/mermaid-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs major mode for working with mermaid graphs https://mermaidjs.github.io/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://melpa.org/#/mermaid-mode&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/mermaid-mode-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;mermaid-mode&lt;/h1&gt; &#xA;&lt;p&gt;Emacs major mode for working with &lt;a href=&#34;https://mermaid-js.github.io/&#34;&gt;mermaid graphs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abrochard/mermaid-mode/master/assets/screenshot.jpg&#34; alt=&#34;Screenshot&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vimeo.com/414458581&#34; title=&#34;Screencast&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abrochard/mermaid-mode/master/assets/thumbnail.png&#34; alt=&#34;Thumbnail&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install from Melpa or load the &lt;code&gt;mermaid-mode.el&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;mmdc&lt;/code&gt; binary from the &lt;a href=&#34;https://github.com/mermaid-js/mermaid-cli&#34;&gt;mermaid-cli project&lt;/a&gt; if you plan to compile graphs in Emacs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Currently supporting flow charts and sequence diagrams with syntax coloring and indentation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;C-c C-c - compile current file to an image&#xA;C-c C-f - compile given file to an image&#xA;C-c C-b - compile current buffer to an image&#xA;C-c C-r - compile current region to an image&#xA;C-c C-o - open in the live editor&#xA;C-c C-d - open the official doc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: All compile commands will open the output in a buffer to view the resulting image.&lt;/p&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;mmdc&lt;/code&gt; location&lt;/h3&gt; &#xA;&lt;p&gt;You can specify the location of &lt;code&gt;mmdc&lt;/code&gt; with the variable &lt;code&gt;mermaid-mmdc-location&lt;/code&gt;, the default assumes you have the binary in your &lt;code&gt;PATH&lt;/code&gt; (and for that you probably want/need to install &lt;a href=&#34;https://github.com/mermaid-js/mermaid-cli&#34;&gt;&lt;code&gt;mermaid-cli&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Output format&lt;/h3&gt; &#xA;&lt;p&gt;By default &lt;code&gt;mmdc&lt;/code&gt; will compile to png format. You can change that by setting the variable &lt;code&gt;mermaid-output-format&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Temp directory&lt;/h3&gt; &#xA;&lt;p&gt;By default &lt;code&gt;mermaid-tmp-dir&lt;/code&gt; points to &lt;code&gt;\tmp\&lt;/code&gt;. Feel free to set it to a more appropriate location that works for you (e.g. on windows).&lt;/p&gt; &#xA;&lt;h3&gt;Key bindings&lt;/h3&gt; &#xA;&lt;p&gt;To customize the key bindings put this into your &lt;code&gt;init.el&lt;/code&gt; ...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(setq mermaid-mode-map&#xA;  (let ((map mermaid-mode-map))&#xA;    (define-key map (kbd &#34;C-c C-c&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-f&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-b&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-r&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-o&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-d&#34;) nil)&#xA;    (define-key map (kbd &#34;C-c C-d c&#34;) &#39;mermaid-compile)&#xA;    (define-key map (kbd &#34;C-c C-d c&#34;) &#39;mermaid-compile)&#xA;    (define-key map (kbd &#34;C-c C-d f&#34;) &#39;mermaid-compile-file)&#xA;    (define-key map (kbd &#34;C-c C-d b&#34;) &#39;mermaid-compile-buffer)&#xA;    (define-key map (kbd &#34;C-c C-d r&#34;) &#39;mermaid-compile-region)&#xA;    (define-key map (kbd &#34;C-c C-d o&#34;) &#39;mermaid-open-browser)&#xA;    (define-key map (kbd &#34;C-c C-d d&#34;) &#39;mermaid-open-doc)&#xA;    map))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;mermaid-cli in Docker&lt;/h3&gt; &#xA;&lt;p&gt;To render mermaid charts without needing to install nodejs+mermaid-cli, you can use the &lt;a href=&#34;https://raw.githubusercontent.com/abrochard/mermaid-mode/master/ghcr.io/mermaid-js/mermaid-cli/mermaid-cli&#34;&gt;docker image&lt;/a&gt; and set your location and flags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(setq mermaid-mmdc-location &#34;docker&#34;)&#xA;(setq mermaid-flags &#34;run -u 1000 -v /tmp:/tmp ghcr.io/mermaid-js/mermaid-cli/mermaid-cli:9.1.6&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-u 1000&lt;/code&gt; ensures that the resulting output png file has a matching UID to the current user, avoiding permissions issues when deleting or overwriting the png. Please set the UID value that works for your local machine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v /tmp:/tmp&lt;/code&gt; mounts the host &lt;code&gt;/tmp&lt;/code&gt; to &lt;code&gt;/tmp&lt;/code&gt; inside the container. This ensures that mmdc inside the container will be reading/writing to the host &lt;code&gt;/tmp&lt;/code&gt; when rendering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;9.1.6&lt;/code&gt;: Latest stable version as of this writing. Can check available tags &lt;a href=&#34;https://github.com/mermaid-js/mermaid-cli/pkgs/container/mermaid-cli%2Fmermaid-cli/versions?filters%5Bversion_type%5D=tagged&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bugs &amp;amp; Issues&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open an issue!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bbatsov/crux</title>
    <updated>2023-03-06T01:35:10Z</updated>
    <id>tag:github.com,2023-03-06:/bbatsov/crux</id>
    <link href="https://github.com/bbatsov/crux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Collection of Ridiculously Useful eXtensions for Emacs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/copyleft/gpl.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL_3-green.svg?sanitize=true&#34; alt=&#34;License GPL 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://melpa.org/#/crux&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/crux-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/crux&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/crux-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;crux&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;strong&gt;C&lt;/strong&gt;ollection of &lt;strong&gt;R&lt;/strong&gt;idiculously &lt;strong&gt;U&lt;/strong&gt;seful e&lt;strong&gt;X&lt;/strong&gt;tensions for Emacs. crux bundles many useful interactive commands to enhance your overall Emacs experience.&lt;/p&gt; &#xA;&lt;p&gt;Most of the crux commands are related to the editing experience, but there are also a bunch of utility commands that are just very useful to have (e.g. &lt;code&gt;crux-open-with&lt;/code&gt; and &lt;code&gt;crux-reopen-as-root&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Origins of crux&lt;/h2&gt; &#xA;&lt;p&gt;Many of the functions in crux started life as blog posts on &lt;a href=&#34;https://emacsredux.com&#34;&gt;Emacs Redux&lt;/a&gt;, then were included in &lt;a href=&#34;https://www.github.com/bbatsov/prelude&#34;&gt;Emacs Prelude&lt;/a&gt;, before finally being &lt;a href=&#34;https://emacsredux.com/blog/2016/01/30/crux/&#34;&gt;extracted&lt;/a&gt; to crux. You can see a full list of blog posts on functions in crux on the &lt;a href=&#34;https://emacsredux.com/tags/#crux&#34;&gt;tags page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Available on all major &lt;code&gt;package.el&lt;/code&gt; community maintained repos - &lt;a href=&#34;http://stable.melpa.org&#34;&gt;MELPA Stable&lt;/a&gt; and &lt;a href=&#34;http://melpa.org&#34;&gt;MELPA&lt;/a&gt; repos.&lt;/p&gt; &#xA;&lt;p&gt;MELPA Stable is recommended as it has the latest stable version. MELPA has a development snapshot for users who don&#39;t mind breakage but don&#39;t want to run from a git checkout.&lt;/p&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;crux&lt;/code&gt; using the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;kbd&gt;M-x package-install [RET] crux [RET]&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the installation doesn&#39;t work try refreshing the package list:&lt;/p&gt; &#xA;&lt;p&gt;&lt;kbd&gt;M-x package-refresh-contents&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can add the following code to your Emacs config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(unless (package-installed-p &#39;crux)&#xA;  (package-refresh-contents)&#xA;  (package-install &#39;crux))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Keybindings&lt;/h2&gt; &#xA;&lt;p&gt;crux doesn&#39;t setup any keybindings for its commands out-of-the-box. There are several reasons for this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most users probably won&#39;t need all the commands, so it&#39;d be an overkill to define a minor mode consuming a lot of valuable keybindings&lt;/li&gt; &#xA; &lt;li&gt;Many of the optimal keybindings are in the user space anyways (e.g. &lt;code&gt;C-c some-letter&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Everyone has their own preferences when it comes to keybindings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s the list of some suggested keybindings. Feel free to bind individual commands to whatever keybindings you prefer.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Suggested Keybinding(s)&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-open-with&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open the currently visited file with an external program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-smart-kill-line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-k&lt;/kbd&gt; or &lt;kbd&gt;Super-k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;First kill to end of line, then kill the whole line.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-smart-open-line-above&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-S-RET&lt;/kbd&gt; or &lt;kbd&gt;Super-o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Insert an empty line above the current line and indent it properly.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-smart-open-line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;S-RET&lt;/kbd&gt; or &lt;kbd&gt;M-o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Insert an empty line and indent it properly (as in most IDEs).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-cleanup-buffer-or-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c n&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fix indentation in buffer and strip whitespace.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-recentf-find-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c f&lt;/kbd&gt; or &lt;kbd&gt;Super-r&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open recently visited file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-recentf-find-directory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open recently visited directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-view-url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c u&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open a new buffer containing the contents of URL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-eval-and-replace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c e&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Eval a bit of Emacs Lisp code and replace it with its result.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-transpose-windows&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-x 4 t&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transpose the buffers between two windows.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-delete-file-and-buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c D&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Delete current file and buffer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-copy-file-preserve-attributes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c c&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Copy current file with file attributes preserved&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-duplicate-current-line-or-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c d&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Duplicate the current line (or region).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-duplicate-and-comment-current-line-or-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c M-d&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Duplicate and comment the current line (or region).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-rename-file-and-buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c r&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rename the current buffer and its visiting file if any.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-visit-term-buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c t&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open a terminal emulator (&lt;code&gt;ansi-term&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-kill-other-buffers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kill all open buffers except the one you&#39;re currently in.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-indent-defun&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-M z&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indent the definition at point.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-indent-rigidly-and-copy-to-clipboard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c TAB&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indent and copy region to clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-find-user-init-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c I&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open user&#39;s init file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-find-user-custom-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c ,&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open user&#39;s custom file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-find-shell-init-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c S&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open shell&#39;s init file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-top-join-line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Super-j&lt;/kbd&gt; or &lt;kbd&gt;C-^&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Join lines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-kill-whole-line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Super-k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kill whole line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-kill-line-backwards&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-Backspace&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kill line backwards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-kill-and-join-forward&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-S-Backspace&lt;/kbd&gt; or &lt;kbd&gt;C-k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If at end of line, join with following; otherwise kill line.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-kill-buffer-truename &lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c P&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kill absolute path of file visited in current buffer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-ispell-word-then-abbrev&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-c i&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fix word using &lt;code&gt;ispell&lt;/code&gt; and then save to &lt;code&gt;abbrev&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-upcase-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-x C-u&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;upcase-region&lt;/code&gt; when &lt;code&gt;transient-mark-mode&lt;/code&gt; is on and region is active.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-downcase-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-x C-l&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;downcase-region&lt;/code&gt; when &lt;code&gt;transient-mark-mode&lt;/code&gt; is on and region is active.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-capitalize-region&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-x M-c&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;capitalize-region&lt;/code&gt; when &lt;code&gt;transient-mark-mode&lt;/code&gt; is on and region is active.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;crux-other-window-or-switch-buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;M-o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Select other window, or switch to most recent buffer if only one windows.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Here&#39;s how you&#39;d bind some of the commands to keycombos:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(global-set-key [remap move-beginning-of-line] #&#39;crux-move-beginning-of-line)&#xA;(global-set-key (kbd &#34;C-c o&#34;) #&#39;crux-open-with)&#xA;(global-set-key [(shift return)] #&#39;crux-smart-open-line)&#xA;(global-set-key (kbd &#34;s-r&#34;) #&#39;crux-recentf-find-file)&#xA;(global-set-key (kbd &#34;C-&amp;lt;backspace&amp;gt;&#34;) #&#39;crux-kill-line-backwards)&#xA;(global-set-key [remap kill-whole-line] #&#39;crux-kill-whole-line)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For &lt;code&gt;crux-ispell-word-then-abbrev&lt;/code&gt; to be most effective you&#39;ll also need to add this to your config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(setq save-abbrevs &#39;silently)&#xA;(setq-default abbrev-mode t)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using the bundled advices&lt;/h2&gt; &#xA;&lt;p&gt;crux ships with some handy advises that can enhance the operation of existing commands.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;(crux-with-region-or-buffer)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;crux-with-region-or-buffer&lt;/code&gt; to make a command acting normally on a region to operate on the entire buffer in the absence of a region. Here are a few examples you can stuff in your config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(crux-with-region-or-buffer indent-region)&#xA;(crux-with-region-or-buffer untabify)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;(crux-with-region-or-line)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Likewise, you can use &lt;code&gt;crux-with-region-or-line&lt;/code&gt; to make a command alternately act on the current line if the mark is not active:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(crux-with-region-or-line comment-or-uncomment-region)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;(crux-with-region-or-sexp-or-line)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Similarly, &lt;code&gt;crux-with-region-or-sexp-or-line&lt;/code&gt; makes a command that acts on the active region, or else the current list (or string), or finally the current line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(crux-with-region-or-sexp-or-line kill-region)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;(crux-with-region-or-point-to-eol)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes you might want to act on the point until the end of the current line, rather than the whole line, in the absence of a region:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-el&#34;&gt;(crux-with-region-or-point-to-eol kill-ring-save)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Minor modes&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;code&gt;(crux-reopen-as-root-mode)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Crux provides a &lt;code&gt;crux-reopen-as-root&lt;/code&gt; command for reopening a file as root. This global minor mode changes &lt;code&gt;find-file&lt;/code&gt; so all root files are automatically opened as root.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2015-2021 Bozhidar Batsov and &lt;a href=&#34;https://github.com/bbatsov/crux/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Distributed under the GNU General Public License; type &lt;kbd&gt;C-h C-c&lt;/kbd&gt; to view it.&lt;/p&gt;</summary>
  </entry>
</feed>