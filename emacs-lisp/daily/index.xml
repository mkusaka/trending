<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-13T01:33:29Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Malabarba/spinner.el</title>
    <updated>2022-10-13T01:33:29Z</updated>
    <id>tag:github.com,2022-10-13:/Malabarba/spinner.el</id>
    <link href="https://github.com/Malabarba/spinner.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs mode-line spinner for operations in progress&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: spinner.el&lt;/p&gt; &#xA;&lt;p&gt;Add spinners and progress-bars to the mode-line for ongoing operations.&lt;/p&gt; &#xA;&lt;p&gt;[[file:some-spinners.gif]]&lt;/p&gt; &#xA;&lt;p&gt;[[file:all-spinners.gif]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;First of all, don’t forget to add &lt;del&gt;(spinner &#34;VERSION&#34;)&lt;/del&gt; to your package’s dependencies.&lt;/p&gt; &#xA;&lt;p&gt;** Major-modes&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Just call &lt;del&gt;(spinner-start)&lt;/del&gt; and a spinner will be added to the mode-line.&lt;/li&gt; &#xA; &lt;li&gt;Call &lt;del&gt;(spinner-stop)&lt;/del&gt; on the same buffer when you want to remove it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The default spinner is a line drawing that rotates. You can pass an argument to &lt;del&gt;spinner-start&lt;/del&gt; to specify which spinner you want. All possibilities are listed in the &lt;del&gt;spinner-types&lt;/del&gt; variable, but here are a few examples for you to try:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;(spinner-start &#39;vertical-breathing 10)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;(spinner-start &#39;minibox)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;(spinner-start &#39;moon)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;(spinner-start &#39;triangle)&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also define your own as a vector of strings (see the examples in &lt;del&gt;spinner-types&lt;/del&gt;).&lt;/p&gt; &#xA;&lt;p&gt;** Minor-modes Minor-modes can create a spinner with &lt;del&gt;spinner-create&lt;/del&gt; and then add it to their mode-line lighter. They can then start the spinner by setting a variable and calling &lt;del&gt;spinner-start-timer&lt;/del&gt;. Finally, they can stop the spinner (and the timer) by just setting the same variable to nil.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example for a minor-mode named &lt;del&gt;foo&lt;/del&gt;. Assuming that &lt;del&gt;foo--lighter&lt;/del&gt; is used as the mode-line lighter, the following code will add an &lt;em&gt;inactive&lt;/em&gt; global spinner to the mode-line. #+begin_src emacs-lisp (defvar foo--spinner (spinner-create &#39;rotating-line)) (defconst foo--lighter &#39;(&#34; foo&#34; (:eval (spinner-print foo--spinner)))) #+end_src&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To activate the spinner, just call &lt;del&gt;(spinner-start foo--spinner)&lt;/del&gt;. It will show up on the mode-line and start animating.&lt;/li&gt; &#xA; &lt;li&gt;To get rid of it, call &lt;del&gt;(spinner-stop foo--spinner)&lt;/del&gt;. It will then disappear again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Some minor-modes will need spinners to be buffer-local. To achieve that, just make the &lt;del&gt;foo--spinner&lt;/del&gt; variable buffer-local and use the third argument of the &lt;del&gt;spinner-create&lt;/del&gt; function. The snippet below is an example.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (defvar-local foo--spinner nil) (defconst foo--lighter &#39;(&#34; foo&#34; (:eval (spinner-print foo--spinner)))) (defun foo--start-spinner () &#34;Create and start a spinner on this buffer.&#34; (unless foo--spinner (setq foo--spinner (spinner-create &#39;moon t))) (spinner-start foo--spinner)) #+end_src&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To activate the spinner, just call &lt;del&gt;(foo--start-spinner)&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To get rid of it, call &lt;del&gt;(spinner-stop foo--spinner)&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will use the &lt;del&gt;moon&lt;/del&gt; spinner, but you can use any of the names defined in the &lt;del&gt;spinner-types&lt;/del&gt; variable or even define your own.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extra options&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both &lt;del&gt;spinner-start&lt;/del&gt; and &lt;del&gt;spinner-create&lt;/del&gt; take extra options to configure the spinner, these are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;FPS&lt;/del&gt;: The number of frames to display per second. Defaults to &lt;del&gt;spinner-frames-per-second&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;DELAY&lt;/del&gt;: After starting a spinner, it still won’t be displayed for this many seconds.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>