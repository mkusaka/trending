<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-11T01:32:21Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Lindydancer/el2markdown</title>
    <updated>2024-01-11T01:32:21Z</updated>
    <id>tag:github.com,2024-01-11:/Lindydancer/el2markdown</id>
    <link href="https://github.com/Lindydancer/el2markdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert Emacs Lisp comments to MarkDown&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;el2markdown - Convert commentary section of elisp files to markdown&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Author:&lt;/em&gt; Anders Lindgren&lt;br&gt; &lt;em&gt;Version:&lt;/em&gt; 0.0.7&lt;br&gt; &lt;em&gt;URL:&lt;/em&gt; &lt;a href=&#34;https://github.com/Lindydancer/el2markdown&#34;&gt;https://github.com/Lindydancer/el2markdown&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package converts &lt;em&gt;Commentary&lt;/em&gt; section in Emacs Lisp modules to text files in MarkDown format, a format supporting headings, code blocks, basic text styles, bullet lists etc.&lt;/p&gt; &#xA;&lt;p&gt;The MarkDown is used by many web sites as an alternative to plain texts. For example, it is used by sites like StackOverflow and GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;What is converted&lt;/h2&gt; &#xA;&lt;p&gt;Everything between the &lt;code&gt;Commentary:&lt;/code&gt; and &lt;code&gt;Code:&lt;/code&gt; markers are included in the generated text. In addition, the title and &lt;em&gt;some&lt;/em&gt; metadata are also included.&lt;/p&gt; &#xA;&lt;h2&gt;How to write comments&lt;/h2&gt; &#xA;&lt;p&gt;The general rule of thumb is that the Emacs Lisp module should be written using plain text, as they always have been written.&lt;/p&gt; &#xA;&lt;p&gt;However, some things are recognized. A single line ending with a colon is considered a &lt;em&gt;heading&lt;/em&gt;. If this line is at the start of a comment block, it is considered a main (level 2) heading. Otherwise it is considered a (level 3) subheading. Note that the line precedes a bullet list or code, it will not be treated as a subheading.&lt;/p&gt; &#xA;&lt;h3&gt;Use Markdown formatting&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to use markdown syntax in the text, like &lt;em&gt;this&lt;/em&gt;, and &lt;strong&gt;this&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Conventions&lt;/h3&gt; &#xA;&lt;p&gt;The following conventions are used when converting elisp comments to MarkDown:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code blocks using either the Markdown convention by indenting the block with four extra spaces, or by starting a paragraph with a &lt;code&gt;(&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In elisp comments, a reference to &lt;code&gt;code&lt;/code&gt; (backquote - quote), they will be converted to MarkDown style (backquote - backquote).&lt;/li&gt; &#xA; &lt;li&gt;In elisp comments, bullets in lists are typically separated by empty lines. In the converted text, the empty lines are removed, as required by MarkDown.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;;; This is a heading:&#xA;;;&#xA;;; Bla bla bla ...&#xA;&#xA;;; This is another heading:&#xA;;;&#xA;;; This is a paragraph!&#xA;;;&#xA;;; A subheading:&#xA;;;&#xA;;; Another paragraph.&#xA;;;&#xA;;; This line is *not* as a subheading:&#xA;;;&#xA;;; * A bullet in a list&#xA;;;&#xA;;; * Another bullet.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Place this package somewhere in Emacs &lt;code&gt;load-path&lt;/code&gt; and add the following lines to a suitable init file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(autoload &#39;el2markdown-view-buffer  &#34;el2markdown&#34; nil t)&#xA;(autoload &#39;el2markdown-write-file   &#34;el2markdown&#34; nil t)&#xA;(autoload &#39;el2markdown-write-readme &#34;el2markdown&#34; nil t)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To generate the markdown representation of the current buffer to a temporary buffer, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x el2markdown-view-buffer RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To write the markdown representation of the current buffer to a file, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x el2markdown-write-file RET name-of-file RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In sites like GitHub, if a file named README.md exists in the root directory of an archive, it is displayed when viewing the archive. To generate a README.md file, in the same directory as the current buffer, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;M-x el2markdown-write-readme RET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post processing&lt;/h2&gt; &#xA;&lt;p&gt;To post-process the output, add a function to &lt;code&gt;el2markdown-post-convert-hook&lt;/code&gt;. The functions in the hook should accept one argument, the output stream (typically the destination buffer). When the hook is run current buffer is the source buffer.&lt;/p&gt; &#xA;&lt;h2&gt;Batch mode&lt;/h2&gt; &#xA;&lt;p&gt;You can run el2markdown in batch mode. The function &lt;code&gt;el2markdown-write-readme&lt;/code&gt; can be called directly using the &lt;code&gt;-f&lt;/code&gt; option. The others can be accessed with the &lt;code&gt;--eval&lt;/code&gt; form.&lt;/p&gt; &#xA;&lt;p&gt;For example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;emacs -batch -l el2markdown.el my-file.el -f el2markdown-write-readme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Converted from &lt;code&gt;el2markdown.el&lt;/code&gt; by &lt;a href=&#34;https://github.com/Lindydancer/el2markdown&#34;&gt;&lt;em&gt;el2markdown&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>darcy-shen/.emacs.d</title>
    <updated>2024-01-11T01:32:21Z</updated>
    <id>tag:github.com,2024-01-11:/darcy-shen/.emacs.d</id>
    <link href="https://github.com/darcy-shen/.emacs.d" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>