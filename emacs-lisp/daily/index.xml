<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-11T01:39:31Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alphapapa/magit-todos</title>
    <updated>2022-08-11T01:39:31Z</updated>
    <id>tag:github.com,2022-08-11:/alphapapa/magit-todos</id>
    <link href="https://github.com/alphapapa/magit-todos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Show source files&#39; TODOs (and FIXMEs, etc) in Magit status buffer&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;magit-todos&lt;/p&gt; &lt;p&gt;[[https://melpa.org/#/magit-todos][file:https://melpa.org/packages/magit-todos-badge.svg]] [[https://stable.melpa.org/#/magit-todos][file:https://stable.melpa.org/packages/magit-todos-badge.svg]]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This package displays keyword entries from source code comments and Org files in the Magit status buffer. Activating an item jumps to it in its file. By default, it uses keywords from [[https://github.com/tarsius/hl-todo][hl-todo]], minus a few (like =NOTE=).&lt;/p&gt; &#xA;&lt;p&gt;** Contents :PROPERTIES: :TOC: siblings :END:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-  [[#screenshots][Screenshots]]&#xA;-  [[#installation][Installation]]&#xA;-  [[#usage][Usage]]&#xA;-  [[#changelog][Changelog]]&#xA;-  [[#credits][Credits]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** Screenshots&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/matrix.png]]&lt;/p&gt; &#xA;&lt;p&gt;Items from Org files can be displayed, and can be fontified like in Org buffers:&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/fancy-org.png]]&lt;/p&gt; &#xA;&lt;p&gt;Items can also be automatically grouped in a customizable way, which can be helpful in large repos:&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/emacs-grouped.png]]&lt;/p&gt; &#xA;&lt;p&gt;This shows grouping items by the first path component, then keyword, then filename, and with optional keyword header fontification:&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/emacs-grouped-by-path.png]]&lt;/p&gt; &#xA;&lt;p&gt;Items in =KEYWORD(username):= format are also read:&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/thiderman.png]]&lt;/p&gt; &#xA;&lt;p&gt;Items specific to the current branch (or =git diff=) can be displayed in a separate list:&lt;/p&gt; &#xA;&lt;p&gt;[[screenshots/branch-list.png]]&lt;/p&gt; &#xA;&lt;p&gt;** Installation :PROPERTIES: :TOC: 0 :END:&lt;/p&gt; &#xA;&lt;p&gt;*** External scanner&lt;/p&gt; &#xA;&lt;p&gt;One of the following external scanners is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[https://github.com/BurntSushi/ripgrep][ripgrep]]&lt;/li&gt; &#xA; &lt;li&gt;=git grep= (built with PCRE support)&lt;/li&gt; &#xA; &lt;li&gt;GNU =grep= (built with PCRE support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most Linux systems should have the latter two by default, but some non-standard systems may not. For example, on MacOS you may use [[https://brew.sh/][Homebrew]] to install =ripgrep=, or =git= with PCRE support, like: &lt;del&gt;brew reinstall --with-pcre2 git&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** Emacs package&lt;/p&gt; &#xA;&lt;p&gt;If you installed from MELPA, you&#39;re done!&lt;/p&gt; &#xA;&lt;p&gt;**** Manually&lt;/p&gt; &#xA;&lt;p&gt;Install these required packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=async=&lt;/li&gt; &#xA; &lt;li&gt;=dash=&lt;/li&gt; &#xA; &lt;li&gt;=f=&lt;/li&gt; &#xA; &lt;li&gt;=hl-todo=&lt;/li&gt; &#xA; &lt;li&gt;=magit=&lt;/li&gt; &#xA; &lt;li&gt;=pcre2el=&lt;/li&gt; &#xA; &lt;li&gt;=s=&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then put this file in your =load-path=, and put this in your init file:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC elisp (require &#39;magit-todos) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Usage :PROPERTIES: :TOC: 0 :END:&lt;/p&gt; &#xA;&lt;p&gt;Activate =magit-todos-mode=. Then open a Magit status buffer, or run &lt;del&gt;magit-todos-list&lt;/del&gt; to show a dedicated to-do list buffer.&lt;/p&gt; &#xA;&lt;p&gt;*** Key bindings&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;In Magit status buffer:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@j T@@html:&lt;/kbd&gt;@@ :: Jump to the to-do list. If the section is empty (e.g. when using manual updates), it will scan for items.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;With point in to-do list:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@b@@html:&lt;/kbd&gt;@@ :: Show branch (=git diff=) to-do list.&lt;/li&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@B@@html:&lt;/kbd&gt;@@ :: Set commit reference used in branch to-do list.&lt;/li&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@j T@@html:&lt;/kbd&gt;@@ :: When configured for manual updates, manually update the to-do list.&lt;/li&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@j l@@html:&lt;/kbd&gt;@@ :: Open dedicated to-do list buffer.&lt;/li&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@RET@@html:&lt;/kbd&gt;@@ :: Show item at point, or open dedicated buffer if point is on top heading.&lt;/li&gt; &#xA; &lt;li&gt;@@html:&lt;kbd&gt;@@SPC@@html:&lt;/kbd&gt;@@ :: Peek at the item at point.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Commands&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=magit-todos-mode= :: Activate =magit-todos-mode=, which automatically inserts the to-do list in Magit status buffers.&lt;/li&gt; &#xA; &lt;li&gt;=magit-todos-list= :: Display the to-do list in a separate buffer. This also works outside of git repos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Helm and Ivy are also supported. Note that the =helm= and =ivy= packages are not required, nor does this package depend on them; they are only used if present. Note as well that these commands can be used directly from source buffers, independently of Magit.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=helm-magit-todos= :: Display the project to-do list with Helm.&lt;/li&gt; &#xA; &lt;li&gt;=ivy-magit-todos= :: Display the project to-do list with Ivy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Tips&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customize settings in the =magit-todos= group.&lt;/li&gt; &#xA; &lt;li&gt;Use dir-local variables to set per-repository settings. For example, to exclude files and directories from being scanned for to-dos in a repo: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;From a buffer in the repo&#39;s directory (like a &lt;del&gt;magit-status&lt;/del&gt; buffer), run the command &lt;del&gt;add-dir-local-variable&lt;/del&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the mode &lt;del&gt;magit-status-mode&lt;/del&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the variable &lt;del&gt;magit-todos-exclude-globs&lt;/del&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Input the glob value, like &lt;del&gt;(&#34;*.html&#34;)&lt;/del&gt; to exclude HTML files. (Note that the input is read as a lisp value, and this variable must be a list of strings.)&lt;/li&gt; &#xA;   &lt;li&gt;Now Emacs will remember that setting in that repository. (You may also want to commit the =.dir-locals.el= file to the repo.)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;The &lt;del&gt;magit-todos-list&lt;/del&gt; command also works outside of git repos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;**** TRAMP :PROPERTIES: :CUSTOM_ID: TRAMP :END:&lt;/p&gt; &#xA;&lt;p&gt;=magit-todos= attempts to work in remote repositories accessed via TRAMP. Note that if TRAMP can&#39;t find the scanner configured in =magit-todos-scanner=, you may need to use directory-local variables to either add the correct path to =tramp-remote-path= or choose a different scanner.&lt;/p&gt; &#xA;&lt;p&gt;** Changelog :PROPERTIES: :TOC: 0 :END:&lt;/p&gt; &#xA;&lt;p&gt;*** 1.6-pre&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Added&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option =magit-todos-submodule-list= controls whether to-dos in submodules are displayed (default: off). (Thanks to [[https://github.com/matsievskiysv][Matsievskiy S.V.]])&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option =magit-todos-exclude-globs= now excludes the &lt;code&gt;.git/&lt;/code&gt; directory by default. (Thanks to [[https://github.com/Amorymeltzer][Amorymeltzer]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Internal&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define jumper keys using a Transient suffix.&lt;/li&gt; &#xA; &lt;li&gt;Use new git-testing function in Magit for remote directories. ([[https://github.com/alphapapa/magit-todos/pull/126][#126]]. Thanks to [[https://github.com/maxhollmann][Max Hollmann]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.5.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove face from indentation. (Thanks to [[https://github.com/Alexander-Miller][Alexander Miller]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.5.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use =magit-todos-exclude-globs= in branch todo list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.5.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add insertion function to end of =magit-status-sections-hook=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.5&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Added&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for remote repositories accessed via TRAMP. See [[#TRAMP][usage notes]].&lt;/li&gt; &#xA; &lt;li&gt;Ivy history support. (Thanks to [[https://github.com/leungbk][Brian Leung]].)&lt;/li&gt; &#xA; &lt;li&gt;Option =magit-todos-branch-list-merge-base-ref=.&lt;/li&gt; &#xA; &lt;li&gt;Command =magit-todos-branch-list-set-commit=, bound to =B= with point in a to-do section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Branch todo list now uses =git merge-base= to determine the ancestor commit to compare to =HEAD=.&lt;/li&gt; &#xA; &lt;li&gt;Enable list-wide key bindings on both headings and to-do items.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Removed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option =magit-todos-branch-list-commit-ref=, replaced by option =magit-todos-branch-list-merge-base-ref=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.4.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t use =--help= option when testing =git grep= command, because it can launch a Web browser on some configurations or platforms (see [[https://github.com/alphapapa/magit-todos/issues/43][#43]]).&lt;/li&gt; &#xA; &lt;li&gt;Caching when branch diff list is displayed.&lt;/li&gt; &#xA; &lt;li&gt;Commands =magit-section-forward= / =backward= sometimes skipped sections (see [[https://github.com/alphapapa/magit-todos/issues/66][#66]]).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.4.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refreshing =magit-todos-list= buffer. ([[https://github.com/alphapapa/magit-todos/issues/92][#92]]. Thanks to [[https://github.com/filalex77][Oleksii Filonenko]] and [[https://github.com/hlissner][Henrik Lissner]] for reporting.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.4.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compiler warning.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.4&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Added&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commands =helm-magit-todos= and =ivy-magit-todos=, which display items with Helm and Ivy. (Note that Helm and Ivy are not required, nor does this package depend on them; they are only used if present.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Warn about files containing lines too long for Emacs&#39;s regexp matcher to handle, rather than aborting the scan ([[https://github.com/alphapapa/magit-todos/issues/63][#63]]).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Updated&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use =magit-setup-buffer= instead of =magit-mode-setup=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Internal&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add synchronous mode to scanner functions, which return results directly usable by other code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Added&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Branch diff task list. See new options =magit-todos-branch-list= and =magit-todos-branch-list-commit-ref=, and command =magit-todos-branch-list-toggle=, bound to =b= with point on to-do list heading. ([[https://github.com/alphapapa/magit-todos/issues/30][#30]], [[https://github.com/alphapapa/magit-todos/issues/77][#77]], [[https://github.com/alphapapa/magit-todos/pull/82][#82]]. Thanks to [[https://github.com/itamarst][Itamar Turner-Trauring]] and [[https://github.com/arronmabrey][Arron Mabrey]] for the suggestion, and to [[https://github.com/smaret][Sébastien Maret]] for implementing the commit-ref option.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Internal&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Put newline in section headings. ([[https://github.com/alphapapa/magit-todos/pull/68][#68]]. Thanks to [[https://github.com/vermiculus][Sean Allred]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Added&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow &lt;del&gt;magit-todos-list&lt;/del&gt; to work outside git repos.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;magit-todos-keyword-suffix&lt;/del&gt; replaces &lt;del&gt;magit-todos-require-colon&lt;/del&gt;, allowing for common and custom suffixes after item keywords (e.g. to match items like =TODO(user):=). (Fixes [[https://github.com/alphapapa/magit-todos/issues/56][#56]]. Thanks to [[https://github.com/thiderman][Lowe Thiderman]] for suggesting.)&lt;/li&gt; &#xA; &lt;li&gt;Optionally group and sort by item suffixes (e.g. handy when suffixes contain usernames).&lt;/li&gt; &#xA; &lt;li&gt;Bind @@html:&lt;kbd&gt;@@RET@@html:&lt;/kbd&gt;@@ on top-level =TODOs= section heading to &lt;del&gt;magit-todos-list&lt;/del&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t fontify section item counts. (Thanks to [[https://github.com/m-cat][Marcin Swieczkowski]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Worked Around&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issue in =async= regarding deleted buffers/processes. This is not an ideal solution, but it solves the problem for now.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Removed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option &lt;del&gt;magit-todos-require-colon&lt;/del&gt;, replaced by &lt;del&gt;magit-todos-keyword-suffix&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.8&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Properly unbind key when mode is disabled. ([[https://github.com/alphapapa/magit-todos/pull/74][#74]]. Thanks to [[https://github.com/akirak][Akira Komamura]].)&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t show message when key is already bound correctly. ([[https://github.com/alphapapa/magit-todos/pull/75][#75]]. Thanks to [[https://github.com/akirak][Akira Komamura]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.7&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Disable undo in hidden Org fontification buffer.&lt;/li&gt; &#xA; &lt;li&gt;Expand top-level to-do list in &lt;del&gt;magit-todos-list&lt;/del&gt; buffer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.6&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Insert root section in &lt;del&gt;magit-todos-list&lt;/del&gt; command. (Really fixes [[https://github.com/alphapapa/magit-todos/issues/55][#55]]. Thanks to [[https://github.com/tarsius][Jonas Bernoulli]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.5&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hide process buffers. (Thanks to [[https://github.com/purcell][Steve Purcell]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.4&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;magit-todos-depth&lt;/del&gt; number-to-string conversion.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update &lt;del&gt;magit-todos-list&lt;/del&gt; for Magit [[https://github.com/magit/magit/commit/40616d7ba57b7c491513e4130d82371460f9e94d][change]]. (Fixes [[https://github.com/alphapapa/magit-todos/issues/55][#55]]. Thanks to [[https://github.com/Oghma][Matteo Lisotto]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Convert &lt;del&gt;magit-todos-depth&lt;/del&gt; setting appropriately for =rg= scanner.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure mode is activated in &lt;del&gt;magit-todos-update&lt;/del&gt; command. (Fixes #54. Thanks to [[https://github.com/smaret][Sebastien Maret]].)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Additions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dedicated to-do list buffer.&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;del&gt;magit-todos-exclude-globs&lt;/del&gt;, a list of glob patterns to ignore when searching for to-do items.&lt;/li&gt; &#xA; &lt;li&gt;Kill running scans when Magit status buffer is closed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove dependency on &lt;del&gt;a&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Remove dependency on =anaphora=.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add missing &lt;del&gt;cl-&lt;/del&gt; prefix. Thanks to [[https://github.com/jellelicht][Jelle Licht]].&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.0.4&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix =find|grep= scanner ([[https://github.com/alphapapa/magit-todos/issues/46][issue 46]]). Thanks to [[https://github.com/Ambrevar][Pierre Neidhardt]].&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.0.3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define variables earlier to avoid compiler warnings.&lt;/li&gt; &#xA; &lt;li&gt;Remove unused var &lt;del&gt;magit-todos-ignore-file-suffixes&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.0.2&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;regexp-quote&lt;/del&gt; item keywords when jumping to an item. (Fixes #36. Thanks to [[https://github.com/dfeich][Derek Feichtinger]].)&lt;/li&gt; &#xA; &lt;li&gt;Ensure =grep= supports =--perl-regexp=.&lt;/li&gt; &#xA; &lt;li&gt;Warn when unable to find a suitable scanner (i.e. =rg=, or a PCRE-compatible version of =git= or =grep=).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.0.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fixes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Test whether =git grep= supports =--perl-regexp= by checking its =--help= output, rather than doing a search and checking for an error.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;message&lt;/del&gt; instead of &lt;del&gt;error&lt;/del&gt; for weird behavior. (This message exists to help track down an inconsequential bug.)&lt;/li&gt; &#xA; &lt;li&gt;Remove unused &lt;del&gt;magit-todos-ignore-directories&lt;/del&gt; option. (To be replaced in a future release.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** 1.0.0&lt;/p&gt; &#xA;&lt;p&gt;Initial release.&lt;/p&gt; &#xA;&lt;p&gt;** Credits&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This package was inspired by [[https://github.com/danielma/magit-org-todos.el][magit-org-todos]].&lt;/li&gt; &#xA; &lt;li&gt;The =ag= support was made much simpler by the great [[https://github.com/joddie/pcre2el][pcre2el]] package by Jon Oddie.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to [[https://github.com/zhaojiangbin][Jiangbin Zhao]] for his extensive testing and feedback.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** License :PROPERTIES: :TOC: ignore :END:&lt;/p&gt; &#xA;&lt;p&gt;GPLv3&lt;/p&gt; &#xA;&lt;h1&gt;Local Variables:&lt;/h1&gt; &#xA;&lt;h1&gt;before-save-hook: org-make-toc&lt;/h1&gt; &#xA;&lt;h1&gt;End:&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>rmuslimov/browse-at-remote</title>
    <updated>2022-08-11T01:39:31Z</updated>
    <id>tag:github.com,2022-08-11:/rmuslimov/browse-at-remote</id>
    <link href="https://github.com/rmuslimov/browse-at-remote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Browse target page on github/bitbucket from emacs buffers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;http://melpa.org/packages/browse-at-remote-badge.svg&#34;&gt;http://melpa.org/packages/browse-at-remote-badge.svg&lt;/a&gt; :target: &lt;a href=&#34;http://melpa.org/#/browse-at-remote&#34;&gt;http://melpa.org/#/browse-at-remote&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;browse-at-remote.el&lt;/h1&gt; &#xA;&lt;p&gt;This package is easiest way to open particular link on &lt;em&gt;github&lt;/em&gt;/&lt;em&gt;gitlab&lt;/em&gt;/&lt;em&gt;bitbucket&lt;/em&gt;/&lt;em&gt;stash&lt;/em&gt;/&lt;em&gt;git.savannah.gnu.org&lt;/em&gt;/&lt;em&gt;sourcehut&lt;/em&gt; from Emacs. It supports various kind of emacs buffer, like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;file buffer&lt;/li&gt; &#xA; &lt;li&gt;dired buffer&lt;/li&gt; &#xA; &lt;li&gt;magit-mode buffers representing code&lt;/li&gt; &#xA; &lt;li&gt;vc-annotate mode (use get there by pressing &lt;code&gt;C-x v g&lt;/code&gt; by default)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;browse-at-remote&lt;/code&gt; to your Cask file:::&lt;/p&gt; &#xA;&lt;p&gt;(depends-on &#34;browse-at-remote&#34;)&lt;/p&gt; &#xA;&lt;p&gt;Manual&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Simply add this package to your emacs path, and add to &lt;code&gt;.emacs&lt;/code&gt;,::&lt;/p&gt; &#xA;&lt;p&gt;(require &#39;browse-at-remote)&lt;/p&gt; &#xA;&lt;p&gt;Active keybindings for &lt;code&gt;browse-at-remote&lt;/code&gt; function:::&lt;/p&gt; &#xA;&lt;p&gt;(global-set-key (kbd &#34;C-c g g&#34;) &#39;browse-at-remote)&lt;/p&gt; &#xA;&lt;p&gt;GNU Guix&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Run &lt;code&gt;guix package -i emacs-browse-at-remote&lt;/code&gt; then load &lt;code&gt;browse-at-remote&lt;/code&gt; from your Emacs init.&lt;/p&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Remote types&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;By default &lt;code&gt;browse-at-remote&lt;/code&gt; knows how to work with popular remote types (github/gitlab..). Knowledge how to work with certain remote-type comes from mapping &lt;code&gt;browse-at-remote-remote-type-domains&lt;/code&gt;. It defines that &lt;code&gt;github.com&lt;/code&gt; should be treat in github manner, &lt;code&gt;bitbucket.org&lt;/code&gt; in bitbucket manner and so on. In your development you may have some specific git-url, and &lt;code&gt;browse-at-remote&lt;/code&gt; will before confuse which remote-type map to your domain.&lt;/p&gt; &#xA;&lt;p&gt;Two solution available:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In that case you can to customize that. (&lt;code&gt;M-x customize ... browse-at-remote-remote-type-domains&lt;/code&gt;). For now our package supports next remote-types:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;bitbucket.com&lt;/li&gt; &#xA;   &lt;li&gt;gitlab.com&lt;/li&gt; &#xA;   &lt;li&gt;github.com&lt;/li&gt; &#xA;   &lt;li&gt;Stash&lt;/li&gt; &#xA;   &lt;li&gt;git.savannah.gnu.org&lt;/li&gt; &#xA;   &lt;li&gt;gist.github.com&lt;/li&gt; &#xA;   &lt;li&gt;Phabricator&lt;/li&gt; &#xA;   &lt;li&gt;git.sr.ht&lt;/li&gt; &#xA;   &lt;li&gt;pagure.io&lt;/li&gt; &#xA;   &lt;li&gt;vs-ssh.visualstudio.com&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set specific remote-type directly in git repo. For example, if your repository is hosted on GitHub enterprise, you should add following setting to its config::&lt;/p&gt; &lt;p&gt;git config --add browseAtRemote.type &#34;github&#34;&lt;/p&gt; &lt;p&gt;or for private Stash repository use command::&lt;/p&gt; &lt;p&gt;git config --add browseAtRemote.type &#34;stash&#34;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Excluding line number if no region is selected&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;By default &lt;code&gt;browse-at-remote&lt;/code&gt; add line number when region is not selected in file attached buffer. If you don&#39;t like that and what to see no line information URL, it&#39;s possible to disable that by adding:::&lt;/p&gt; &#xA;&lt;p&gt;(setq browse-at-remote-add-line-number-if-no-region-selected nil)&lt;/p&gt; &#xA;&lt;p&gt;Or setting via UI with &lt;code&gt;M-x customize&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adding new remote type&lt;/h2&gt; &#xA;&lt;p&gt;You can your own remote if you need - PRs are welcome! Please see good examples here: gnu-savannah-remote_, or stash-remote_.&lt;/p&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Call function from emacs buffer::&lt;/p&gt; &lt;p&gt;M-x browse-at-remote&lt;/p&gt; &lt;p&gt;or::&lt;/p&gt; &lt;p&gt;M-x bar-browse&lt;/p&gt; &lt;p&gt;.. image:: &lt;a href=&#34;http://i.imgur.com/rmAky8e.png&#34;&gt;http://i.imgur.com/rmAky8e.png&lt;/a&gt;&lt;/p&gt; &lt;p&gt;or just call &lt;code&gt;C-c g g&lt;/code&gt; if you&#39;ve already added binding before. You can use this command in dired buffers too.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Target page at github/bitbucket will be opened using your default browser:&lt;/p&gt; &lt;p&gt;.. image:: &lt;a href=&#34;http://i.imgur.com/wBW9Gov.png&#34;&gt;http://i.imgur.com/wBW9Gov.png&lt;/a&gt; alt: screenshot of page at github&lt;/p&gt; &lt;p&gt;or same here is folder view at bitbucket:&lt;/p&gt; &lt;p&gt;.. image:: &lt;a href=&#34;http://i.imgur.com/XuzLhcR.png&#34;&gt;http://i.imgur.com/XuzLhcR.png&lt;/a&gt; alt: screenshot page tree at bibucket&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Opening github commit&#39;s page at &lt;em&gt;magit-commit-mode&lt;/em&gt;, &lt;em&gt;magit-log-mode&lt;/em&gt;:&lt;/p&gt; &lt;p&gt;.. image:: &lt;a href=&#34;http://i.imgur.com/NzlIHYr.png&#34;&gt;http://i.imgur.com/NzlIHYr.png&lt;/a&gt; alt: screenshot of &lt;em&gt;magit-log-mode&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open last commit which added target line:&lt;/p&gt; &lt;p&gt;.. image:: &lt;a href=&#34;http://i.imgur.com/lpmOAz2.png&#34;&gt;http://i.imgur.com/lpmOAz2.png&lt;/a&gt; alt: screen of &lt;em&gt;vc-annotate-mode&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;code&gt;C-x v g&lt;/code&gt; to call standard vc-annotate&lt;/li&gt; &#xA;   &lt;li&gt;Call &lt;code&gt;browse-at-remote&lt;/code&gt; on target line&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@rmuslimov&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@env0der&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@ben&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@duff&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@Wilfred&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@yauhen-l&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@ieure&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@wigust&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@CyberShadow&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@kuba-orlik&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@jwhitbeck&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@microamp&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@FrostyX&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@legendary-mich&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog:&lt;/h2&gt; &#xA;&lt;p&gt;0.14.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New remote type added &lt;strong&gt;Pagure&lt;/strong&gt; by &lt;code&gt;@FrostyX&lt;/code&gt;_. New configuration option &lt;code&gt;browse-at-remote-add-line-number-if-no-region-selected&lt;/code&gt; allowing add or not line number when target page open and region initially is not selected.&lt;/p&gt; &#xA;&lt;p&gt;0.13.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New remote type added &lt;strong&gt;Sourcehut&lt;/strong&gt; by &lt;code&gt;@microamp&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;0.12.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New remote type added &lt;strong&gt;Phabricator&lt;/strong&gt; by &lt;code&gt;@kuba-orlik&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;0.11.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New remote type added &lt;strong&gt;gist.github.com&lt;/strong&gt; by &lt;code&gt;@CyberShadow&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;0.10.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New remote type added &lt;strong&gt;git.savannah.gnu.org&lt;/strong&gt; by &lt;code&gt;@wigust&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;0.9.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Minor fixes, added Stash (bitbucket support) by &lt;code&gt;@yauhen-l&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;0.8.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Drop clojure-style function namings. Add abbrev methods like &lt;code&gt;bar-browse&lt;/code&gt; and &lt;code&gt;bar-to-clipoboard&lt;/code&gt; (where &lt;code&gt;bar&lt;/code&gt; is browse-at-remote abbrev.)&lt;/p&gt; &#xA;&lt;p&gt;0.7.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Major refactorings by &lt;code&gt;@ieure&lt;/code&gt;_. Main function renamed to &lt;code&gt;browse-at-remote/browse&lt;/code&gt;. (renamed in 0.8.0 to &lt;code&gt;bar-browse&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;0.6.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Added support of Gitlab by &lt;code&gt;@env0der&lt;/code&gt;_. Thanks!&lt;/p&gt; &#xA;&lt;p&gt;0.5.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Added support of Github Enterprice. Special thanks for &lt;code&gt;@env0der&lt;/code&gt;_ for this feature.&lt;/p&gt; &#xA;&lt;p&gt;0.4.0&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Function &lt;code&gt;browse-at-remote/to-clipboard&lt;/code&gt; were added (renamed in 0.8.0 to &lt;code&gt;bar-to-clibpoard&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;TODO:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add mercurial support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;@rmuslimov&lt;/code&gt;: &lt;a href=&#34;https://github.com/rmuslimov&#34;&gt;https://github.com/rmuslimov&lt;/a&gt; .. _&lt;code&gt;@env0der&lt;/code&gt;: &lt;a href=&#34;https://github.com/env0der&#34;&gt;https://github.com/env0der&lt;/a&gt; .. _&lt;code&gt;@Wilfred&lt;/code&gt;: &lt;a href=&#34;https://github.com/Wilfred&#34;&gt;https://github.com/Wilfred&lt;/a&gt; .. _&lt;code&gt;@ben&lt;/code&gt;: &lt;a href=&#34;https://github.com/ben&#34;&gt;https://github.com/ben&lt;/a&gt; .. _&lt;code&gt;@duff&lt;/code&gt;: &lt;a href=&#34;https://github.com/duff&#34;&gt;https://github.com/duff&lt;/a&gt; .. _&lt;code&gt;@ieure&lt;/code&gt;: &lt;a href=&#34;https://github.com/ieure&#34;&gt;https://github.com/ieure&lt;/a&gt; .. _&lt;code&gt;@yauhen-l&lt;/code&gt;: &lt;a href=&#34;https://github.com/yauhen-l&#34;&gt;https://github.com/yauhen-l&lt;/a&gt; .. _&lt;code&gt;@wigust&lt;/code&gt;: &lt;a href=&#34;https://github.com/wigust&#34;&gt;https://github.com/wigust&lt;/a&gt; .. _&lt;code&gt;@CyberShadow&lt;/code&gt;: &lt;a href=&#34;https://github.com/CyberShadow&#34;&gt;https://github.com/CyberShadow&lt;/a&gt; .. _&lt;code&gt;@kuba-orlik&lt;/code&gt;: &lt;a href=&#34;https://github.com/kuba-orlik&#34;&gt;https://github.com/kuba-orlik&lt;/a&gt; .. _&lt;code&gt;@jwhitbeck&lt;/code&gt;: &lt;a href=&#34;https://github.com/jwhitbeck&#34;&gt;https://github.com/jwhitbeck&lt;/a&gt; .. _&lt;code&gt;@microamp&lt;/code&gt;: &lt;a href=&#34;https://github.com/microamp&#34;&gt;https://github.com/microamp&lt;/a&gt; .. _&lt;code&gt;@FrostyX&lt;/code&gt;: &lt;a href=&#34;https://github.com/FrostyX&#34;&gt;https://github.com/FrostyX&lt;/a&gt; .. _&lt;code&gt;@legendary-mich&lt;/code&gt;: &lt;a href=&#34;https://github.com/legendary-mich&#34;&gt;https://github.com/legendary-mich&lt;/a&gt; .. _stash-remote: &lt;a href=&#34;https://github.com/rmuslimov/browse-at-remote/pull/34/files&#34;&gt;https://github.com/rmuslimov/browse-at-remote/pull/34/files&lt;/a&gt; .. _gnu-savannah-remote: &lt;a href=&#34;https://github.com/rmuslimov/browse-at-remote/pull/46/files&#34;&gt;https://github.com/rmuslimov/browse-at-remote/pull/46/files&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Alexander-Miller/company-shell</title>
    <updated>2022-08-11T01:39:31Z</updated>
    <id>tag:github.com,2022-08-11:/Alexander-Miller/company-shell</id>
    <link href="https://github.com/Alexander-Miller/company-shell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;-&lt;em&gt;- fill-column: 120 org-list-indent-offset: 1 -&lt;/em&gt;-&lt;/h1&gt; &#xA;&lt;p&gt;#+STARTUP: noinlineimages&lt;/p&gt; &#xA;&lt;p&gt;#+TITLE: Company Shell&lt;/p&gt; &#xA;&lt;p&gt;[[https://melpa.org/#/company-shell][file:https://melpa.org/packages/company-shell-badge.svg]] [[https://stable.melpa.org/#/company-shell][file:https://stable.melpa.org/packages/company-shell-badge.svg]]&lt;/p&gt; &#xA;&lt;p&gt;Company mode completion backends for your shell scripting:&lt;/p&gt; &#xA;&lt;p&gt;[[file:screenshot.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Content :TOC:noexport:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#features][Features]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#backends][Backends]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#doc-strings][Doc Strings]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#caching][Caching]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#setup][Setup]]&lt;/li&gt; &#xA; &lt;li&gt;[[#configuration][Configuration]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#excessively-slow-meta-lookup][Excessively slow meta lookup]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#dependencies][Dependencies]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Features ** Backends&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;del&gt;company-shell&lt;/del&gt; offers 3 backends for 3 different sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;company-shell&lt;/del&gt; - providing completions for binaries that are found on your &lt;del&gt;$PATH&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;company-fish-shell&lt;/del&gt; - providing completions for fish-shell&#39;s functions, both builtin as well as user-defined&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;company-shell-env&lt;/del&gt; - providing completions for environment variables based on the &lt;del&gt;env&lt;/del&gt; command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Doc Strings&lt;/p&gt; &#xA;&lt;p&gt;To find the documentation for a completion candidate /c/ &lt;del&gt;company-shell&lt;/del&gt; and &lt;del&gt;company-fish-shell&lt;/del&gt; will both first try the output of &lt;del&gt;man c&lt;/del&gt;. If /c/ does not have a manpage they will then use &lt;del&gt;c --help&lt;/del&gt; as a fallback. The latter needs to be enabled manually (see the description about &lt;del&gt;company-shell-use-help-arg&lt;/del&gt; below). The meta doc-string (shown in the minibuffer during completion) is provided by (the first line of) &lt;del&gt;whatis c&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are no doc- or meta-strings for &lt;del&gt;company-shell-env&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;** Caching&lt;/p&gt; &#xA;&lt;p&gt;As the process of searching though the content of your &lt;del&gt;$PATH&lt;/del&gt; and building the completion lists is likely to cause a visible delay it is done exactly once - when &lt;del&gt;company-shell&lt;/del&gt; is invoked for the first time. The list of all possible completions will then be saved in the variable &lt;del&gt;company-shell--cache&lt;/del&gt;. &lt;del&gt;company-fish-shell&lt;/del&gt; and &lt;del&gt;company-shell-env&lt;/del&gt; follow the same pattern, their completions are stored in &lt;del&gt;company-shell--fish-cache&lt;/del&gt; and &lt;del&gt;company-shell--env-cache&lt;/del&gt; respectively.&lt;/p&gt; &#xA;&lt;p&gt;All caches may be manually rebuilt by invoking &lt;del&gt;company-shell-rebuild-cache&lt;/del&gt;. This function may also be used in e.g. a mode or local save hook to automatically rebuild the completion cache whenever a file of that mode is opened.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Setup&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Single backend&lt;/p&gt; &lt;p&gt;Add e.g. &lt;del&gt;company-shell&lt;/del&gt; to your &lt;del&gt;company-backends&lt;/del&gt;:&lt;/p&gt; &lt;p&gt;#+BEGIN_SRC emacs-lisp (add-to-list &#39;company-backends &#39;company-shell) #+END_SRC&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multiple backends&lt;/p&gt; &lt;p&gt;To use multiple backends at once add them as a combined backend:&lt;/p&gt; &lt;p&gt;#+BEGIN_SRC emacs-lisp (add-to-list &#39;company-backends &#39;(company-shell company-shell-env company-fish-shell)) #+END_SRC&lt;/p&gt; &lt;p&gt;To learn more about (combining) backends see the doc-string of &lt;del&gt;company-backends&lt;/del&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configuration&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;del&gt;company-shell&lt;/del&gt; offers the following configuration options (available under &lt;del&gt;customize-group&lt;/del&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;company-shell-delete-duplicates&lt;/del&gt; (default value: t)&lt;/p&gt; &lt;p&gt;If non-nil the list of &lt;del&gt;company-shell&#39;s&lt;/del&gt; completions will be purged of duplicates. Duplicates in this context means any two string-equal entries, regardless where they have been found. This would prevent a completion candidate appearing twice because it is found in both /usr/bin and /usr/local/bin. For a change to this variable to take effect the cache needs to be rebuilt via &lt;del&gt;company-shell-rebuild-cache&lt;/del&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;company-shell-modes&lt;/del&gt; (default value: sh-mode fish-mode shell-mode eshell-mode)&lt;/p&gt; &lt;p&gt;List of major modes where &lt;del&gt;company-shell&lt;/del&gt; and &lt;del&gt;company-shell-env&lt;/del&gt; will be providing completions if they are part of &lt;del&gt;company-backends&lt;/del&gt;. All modes not on this list will be ignored. Set value to nil to enable &lt;del&gt;company-shell&lt;/del&gt; regardless of current major-mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;company-fish-shell-modes&lt;/del&gt; (default value: fish-mode shell-mode)&lt;/p&gt; &lt;p&gt;List of major modes where &lt;del&gt;company-fish-shell&lt;/del&gt; will be providing completions if it is part of &lt;del&gt;company-backends&lt;/del&gt;. All modes not on this list will be ignored. Set value to nil to enable &lt;del&gt;company-shell&lt;/del&gt; regardless of current major-mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;company-shell-clean-manpage&lt;/del&gt; (default value: nil)&lt;/p&gt; &lt;p&gt;When t clean the man-page with ~Man-cleanup-manpage&#39;. This is only needed when you have the problem of your man pages being filled with control characters (you&#39;ll know it when you see it).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;company-shell-use-help-arg&lt;/del&gt; (default value: nil)&lt;/p&gt; &lt;p&gt;SETTING THIS TO t IS POTENTIALLY UNSAFE.&lt;/p&gt; &lt;p&gt;If non-nil &lt;del&gt;company-(fish)-shell&lt;/del&gt; will try and find a doc-string by running &lt;del&gt;arg --help&lt;/del&gt; if &lt;del&gt;man arg&lt;/del&gt; did not produce any valid results. This is not completely safe since &lt;del&gt;company-shell&lt;/del&gt; does not and can not know whether it is safe to run a command in this fashion. Some applications may simply ignore or misinterpret this argument, with unpredictable results. Usually this just means that instead of any actual documentation you&#39;ll see an error message telling you the program doesn&#39;t know what to do with the &lt;del&gt;--help&lt;/del&gt; arg or that it was started with invalid input. In rare cases a program may simple ignore the &lt;del&gt;--help&lt;/del&gt; arg and directly spawn a GUI like xfce4-notes-settings does.&lt;/p&gt; &lt;p&gt;To mitigate any such issues company-shell will run the &lt;del&gt;--help&lt;/del&gt; attempt on a timer of 1 second. This is more than enough to fetch the doc output if it is available, but will quickly close any process that may accidentally have been spawned. In addition the command will run in a restricted shell (via &lt;del&gt;$(which sh) --restricted&lt;/del&gt;) to further avoid any unwanted side effects.&lt;/p&gt; &lt;p&gt;Despite these precautions company-shell will nonetheless need to sometimes run completely unknown binaries, which is why this option is turned off by default. You need to consciously enable it in the understanding that you do this AT YOUR OWN RISK.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Excessively slow meta lookup&lt;/p&gt; &#xA;&lt;p&gt;company-shell uses the &lt;del&gt;whatis&lt;/del&gt; shell command to look up &lt;del&gt;meta&lt;/del&gt; strings for company-mode. In [[https://github.com/Alexander-Miller/company-shell/issues/15#issuecomment-940227128][some situations]] that may be extremely slow to the point of rendering company-shell unusable. When that happens you can set &lt;del&gt;company-shell-dont-fetch-meta&lt;/del&gt; to a non-nil value to prevent the lookup from happening.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependencies&lt;/li&gt; &#xA; &lt;li&gt;company&lt;/li&gt; &#xA; &lt;li&gt;cl-lib&lt;/li&gt; &#xA; &lt;li&gt;dash&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>