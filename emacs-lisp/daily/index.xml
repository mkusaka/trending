<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-31T01:33:24Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ziqi-Yang/typst-mode.el</title>
    <updated>2023-03-31T01:33:24Z</updated>
    <id>tag:github.com,2023-03-31:/Ziqi-Yang/typst-mode.el</id>
    <link href="https://github.com/Ziqi-Yang/typst-mode.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Emacs major mode for `typst`, a markup-based typesetting system.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: Typst Mode&lt;/p&gt; &#xA;&lt;p&gt;An Emacs major mode for [[https://typst.app/][typst]], a markup-based typesetting system.&lt;/p&gt; &#xA;&lt;p&gt;Since the language style of =typst= is somewhat complicated to parse(at least for me), currently this package only provides limited syntax highlighting feature :( Maybe complicated cases should be implemented into lsp server?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requirements [[https://github.com/typst/typst][typst]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://github.com/polymode/polymode][polymode]]&lt;/p&gt; &#xA;&lt;p&gt;minium Emacs version hasn&#39;t been tested&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current Features ** Functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;=typst-compile= (default bind: =C-c C-c=)&lt;/li&gt; &#xA; &lt;li&gt;=typst-preview= (default bind: =C-c C-p=)&lt;/li&gt; &#xA; &lt;li&gt;=typst-toggle-watch= (default bind: =C-c C-w=; also provide =typst-watch= and =typst-stop-watch=) ** Style *** Markup | feature | support | Example | |------------------+---------+----------------------| | Paragraph break | ✓ | | | Strong emphasis | ✓ | &lt;em&gt;strong&lt;/em&gt; | | Emphasis | ✓ | /emphasis/ | | Raw text | inline | &lt;code&gt;print(1)&lt;/code&gt; | | Link | ✓ | &lt;a href=&#34;https://typst.app/&#34;&gt;https://typst.app/&lt;/a&gt; | | Label | ✓ | &#xA;  &lt;intro&gt;&#xA;    | | Reference | ✓ | @intro | | Heading | ✓ | == Heading= | | Bullet list | ✓ | - item | | Numbered list | ✓ | + item | | Term list | ✓ | / Term: description | | Math | | =$x^2$= | | Line break | ✓ | \ | | Smart quote | | &#39;single&#39; or &#34;double&#34; | | Symbol shorthand | | ~, --- | | Code expression | name | =#rect(width: 1cm)= | | Character escape | ✓ | Tweet at us #ad | | Comment | ✓ | =/* block */, // line= |&#xA;  &lt;/intro&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Customization faces and custom variables with prefix =typst= or =typst-mode=&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To Dos&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; fix math mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; code block highlight&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add treesit mode&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current Shortages For those stuffs cannot be done in short future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;no syntax support for the context block =[ ]= which is located in the code block ={ }= \ this problem possibly can be solved with &lt;em&gt;nested polymode&lt;/em&gt;. However, currently there is no official support for this function?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;indentation in code mode(contents between &#39;{&#39; and &#39;}&#39;) may not works well, like this: \ (hitting &lt;code&gt;tab&lt;/code&gt; to indent has problem, but it works well when directly call &lt;code&gt;typst-indent-line&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;#+begin_src plain begin_code { [ // no indentation on this line. [ // indentation works well ] ] } #+end_src The issue may caused by Polymode. I have created an issue here: [[https://github.com/polymode/polymode/issues/328][https://github.com/polymode/polymode/issues/328]]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;This is my first Emacs lisp package and I greatly value your assistance, including issues, pull requests, and more!&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Wilfred/ag.el</title>
    <updated>2023-03-31T01:33:24Z</updated>
    <id>tag:github.com,2023-03-31:/Wilfred/ag.el</id>
    <link href="https://github.com/Wilfred/ag.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Emacs frontend to The Silver Searcher&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ag.el&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://melpa.org/#/ag&#34;&gt;&lt;img src=&#34;http://melpa.org/packages/ag-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stable.melpa.org/#/ag&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/ag-badge.svg?sanitize=true&#34; alt=&#34;MELPA Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Wilfred/ag.el&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Wilfred/ag.el.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/Wilfred/ag.el&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/Wilfred/ag.el/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://agel.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/agel/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ag.el allows you to search using &lt;code&gt;ag&lt;/code&gt; from inside Emacs. You can filter by file type, edit results inline, or find files.&lt;/p&gt; &#xA;&lt;p&gt;Ag.el tries very hard to be Do-What-I-Mean, and will make intelligent suggestions about what to search and which directories to search in.&lt;/p&gt; &#xA;&lt;p&gt;Documentation: &lt;a href=&#34;http://agel.readthedocs.org/en/latest/index.html&#34;&gt;http://agel.readthedocs.org/en/latest/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bugs: &lt;a href=&#34;https://github.com/Wilfred/ag.el/issues&#34;&gt;https://github.com/Wilfred/ag.el/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/ag.el/master/ag_el_screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ag plugin for helm: &lt;a href=&#34;https://github.com/syohex/emacs-helm-ag&#34;&gt;https://github.com/syohex/emacs-helm-ag&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ag plugin for counsel/ivy: &lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;https://github.com/abo-abo/swiper&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>gempesaw/dotemacs</title>
    <updated>2023-03-31T01:33:24Z</updated>
    <id>tag:github.com,2023-03-31:/gempesaw/dotemacs</id>
    <link href="https://github.com/gempesaw/dotemacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;my .emacs files and folders&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dotemacs&lt;/h1&gt; &#xA;&lt;p&gt;my .emacs.d folder with all of my customizations; should be completely portable (in theory).&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;You can do this any way you like; this is the way I like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/gempesaw/dotemacs ~/.emacs.d&#xA;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Windows, you&#39;ll probably want to check out &lt;a href=&#34;http://sachachua.com/blog/2012/06/making-gnu-emacs-play-well-on-microsoft-windows-7/&#34;&gt;Sacha Chua&#39;s helpful guide&lt;/a&gt;. When you clone this repo, put it in your %HOME% directory, whatever you make that, since the option of symlinks is slightly less attractive.&lt;/p&gt; &#xA;&lt;h2&gt;dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ag: &lt;code&gt;brew install ag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;makeinfo (ubuntu?): &lt;code&gt;sudo apt-get install texinfo&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Information&lt;/h1&gt; &#xA;&lt;p&gt;These configurations currently come from three main places:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Things I like and have gotten used to over the years&lt;/li&gt; &#xA; &lt;li&gt;Ryan McGeary&#39;s &lt;a href=&#34;http://how-i-work.com/workbenches/30-working-with-os-x-and-emacs&#34;&gt;Working with OS X and Emacs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bozhidar&#39;s Batsov&#39;s &lt;a href=&#34;https://github.com/bbatsov/prelude&#34;&gt;emacs-prelude&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/magnars&#34;&gt;Magnar Sveen&#39;s&lt;/a&gt; amazing work over at &lt;a href=&#34;http://www.emacsrocks.com&#34;&gt;emacsrocks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;I was previously using &lt;a href=&#34;https://github.com/dimitri/&#34;&gt;dmitri&#39;s&lt;/a&gt; &lt;a href=&#34;https://github.com/dimitri/el-get&#34;&gt;el-get&lt;/a&gt; to manage my packges, but have since changed to &lt;a href=&#34;http://elpa.gnu.org/&#34;&gt;package.el&lt;/a&gt; and &lt;a href=&#34;http://melpa.milkbox.net/&#34;&gt;MELPA&lt;/a&gt; to accomplish this task.&lt;/p&gt;</summary>
  </entry>
</feed>