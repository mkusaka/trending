<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-28T01:28:15Z</updated>
  <subtitle>Daily Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ziglang/zig-mode</title>
    <updated>2023-08-28T01:28:15Z</updated>
    <id>tag:github.com,2023-08-28:/ziglang/zig-mode</id>
    <link href="https://github.com/ziglang/zig-mode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zig mode for Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zig-mode&lt;/h1&gt; &#xA;&lt;p&gt;Syntax highlighting and automatic indentation for the &lt;a href=&#34;http://ziglang.org&#34;&gt;Zig programming language&lt;/a&gt; in Emacs. Requires Emacs 24.3 or later.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://elpa.nongnu.org/nongnu/zig-mode.html&#34;&gt;&lt;img src=&#34;https://elpa.nongnu.org/nongnu/zig-mode.svg?sanitize=true&#34; alt=&#34;NonGNU ELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/zig-mode&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/zig-mode-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simply install the &lt;code&gt;zig-mode&lt;/code&gt; package via &lt;a href=&#34;https://elpa.nongnu.org/&#34;&gt;NonGNU ELPA&lt;/a&gt; or &lt;a href=&#34;https://melpa.org/#/getting-started&#34;&gt;MELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Manual install&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can &lt;code&gt;git clone&lt;/code&gt; the &lt;code&gt;zig-mode&lt;/code&gt; repository somewhere (e.g. under your &lt;code&gt;~/.emacs.d/&lt;/code&gt;). &lt;code&gt;zig-mode&lt;/code&gt; depends on &lt;a href=&#34;https://github.com/purcell/emacs-reformatter&#34;&gt;reformatter&lt;/a&gt; for formatting buffers with &lt;code&gt;zig fmt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;reformatter&lt;/code&gt; can be installed from MELPA or installed manually in a similar fashion to &lt;code&gt;zig-mode&lt;/code&gt;. For this method, clone the &lt;code&gt;reformatter&lt;/code&gt; git repository and add the path to the repository to your &lt;code&gt;load-path&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then add the following to your &lt;code&gt;.emacs&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(unless (version&amp;lt; emacs-version &#34;24&#34;)&#xA;  (add-to-list &#39;load-path &#34;~/path/to/your/zig-mode/&#34;)&#xA;  (autoload &#39;zig-mode &#34;zig-mode&#34; nil t)&#xA;  (add-to-list &#39;auto-mode-alist &#39;(&#34;\\.zig\\&#39;&#34; . zig-mode)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ziglang/zig-mode/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/ziglang/zig-mode/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run all unit tests with &lt;code&gt;emacs&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./run_tests.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that Emacs 24.3 or later is required. If you need to specify which Emacs binary to use, you can do that by setting the &lt;code&gt;EMACS&lt;/code&gt; environment variable, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;EMACS=/usr/bin/emacs24 ./run_tests.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Optional Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;zig-mode&lt;/code&gt; used to enable coloration of the compilation buffer using ANSI color codes, but this affected &lt;em&gt;all&lt;/em&gt; compilation buffers, not just zig compilation output. If you want to restore this behavior, you can add the following snippet to your &lt;code&gt;init.el&lt;/code&gt; or &lt;code&gt;.emacs&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(if (&amp;gt;= emacs-major-version 28)&#xA;    (add-hook &#39;compilation-filter-hook &#39;ansi-color-compilation-filter)&#xA;  (progn&#xA;    (defun colorize-compilation-buffer ()&#xA;      (let ((inhibit-read-only t))&#xA;        (ansi-color-apply-on-region compilation-filter-start (point))))&#xA;    (add-hook &#39;compilation-filter-hook &#39;colorize-compilation-buffer)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;zig-mode&lt;/code&gt; is distributed under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ziglang/zig-mode/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>