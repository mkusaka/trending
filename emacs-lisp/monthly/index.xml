<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-01T02:02:43Z</updated>
  <subtitle>Monthly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>flycheck/flycheck</title>
    <updated>2024-03-01T02:02:43Z</updated>
    <id>tag:github.com,2024-03-01:/flycheck/flycheck</id>
    <link href="https://github.com/flycheck/flycheck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;On the fly syntax checking for GNU Emacs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.flycheck.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flycheck/flycheck/master/doc/_static/logo.png&#34; alt=&#34;Flycheck&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flycheck/flycheck/raw/master/COPYING&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/flycheck/flycheck.svg?sanitize=true&#34; alt=&#34;License GPL 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/flycheck/flycheck&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/flycheck/flycheck.svg?sanitize=true&#34; alt=&#34;Join the chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://melpa.org/#/flycheck&#34;&gt;&lt;img src=&#34;https://melpa.org/packages/flycheck-badge.svg?sanitize=true&#34; alt=&#34;MELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stable.melpa.org/#/flycheck&#34;&gt;&lt;img src=&#34;http://stable.melpa.org/packages/flycheck-badge.svg?sanitize=true&#34; alt=&#34;MELPA stable version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://elpa.nongnu.org/nongnu/flycheck.html&#34;&gt;&lt;img src=&#34;https://elpa.nongnu.org/nongnu/flycheck.svg?sanitize=true&#34; alt=&#34;NonGNU ELPA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flycheck/flycheck/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/flycheck/flycheck/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flycheck/flycheck/actions/workflows/docs.yml&#34;&gt;&lt;img src=&#34;https://github.com/flycheck/flycheck/actions/workflows/docs.yml/badge.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flycheck/flycheck/actions/workflows/lint-python.yml&#34;&gt;&lt;img src=&#34;https://github.com/flycheck/flycheck/actions/workflows/lint-python.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint Python&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.flycheck.org&#34;&gt;https://www.flycheck.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Modern on-the-fly syntax checking extension for GNU Emacs. &lt;a href=&#34;https://www.flycheck.org/en/latest/#try-out&#34;&gt;Try it&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flycheck/flycheck/master/doc/images/flycheck-annotated.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Flycheck is available for installation with &lt;code&gt;package.el&lt;/code&gt; on &lt;a href=&#34;https://elpa.nongnu.org/nongnu&#34;&gt;NonGNU ELPA&lt;/a&gt;, &lt;a href=&#34;http://stable.melpa.org&#34;&gt;MELPA Stable&lt;/a&gt; and &lt;a href=&#34;http://melpa.org&#34;&gt;MELPA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install Flycheck with the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;kbd&gt;M-x&lt;/kbd&gt; &lt;code&gt;package-install&lt;/code&gt; &lt;kbd&gt;[RET]&lt;/kbd&gt; &lt;code&gt;flycheck&lt;/code&gt; &lt;kbd&gt;[RET]&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally add this to your Emacs config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-flycheck-mode +1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, if you&#39;re into &lt;code&gt;use-package&lt;/code&gt; you can do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(use-package flycheck&#xA;  :ensure t&#xA;  :config&#xA;  (add-hook &#39;after-init-hook #&#39;global-flycheck-mode))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can start using any of the &lt;a href=&#34;https://www.flycheck.org/en/latest/languages.html&#34;&gt;bundled checkers&lt;/a&gt; or install additional checkers.&lt;/p&gt; &#xA;&lt;p&gt;For a more gentle introduction read the &lt;a href=&#34;https://www.flycheck.org/en/latest/user/installation.html&#34;&gt;Installation&lt;/a&gt; instructions and go through &lt;a href=&#34;https://www.flycheck.org/en/latest/user/quickstart.html&#34;&gt;Quickstart&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Please ask questions about Flycheck on &lt;a href=&#34;https://emacs.stackexchange.com/questions/tagged/flycheck&#34;&gt;Stack Exchange&lt;/a&gt; or in our &lt;a href=&#34;https://gitter.im/flycheck/flycheck&#34;&gt;Gitter chat&lt;/a&gt;, and report bugs to our &lt;a href=&#34;https://github.com/flycheck/flycheck/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all kinds of contributions, whether you write patches, open pull requests, write documentation, help others with Flycheck issues, or just tell other people about your experiences with Flycheck. Please take a look at our &lt;a href=&#34;https://www.flycheck.org/en/latest/contributor/contributing.html&#34;&gt;Contributorâ€™s Guide&lt;/a&gt; for help and guidance about contributing to Flycheck.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsoring&lt;/h2&gt; &#xA;&lt;p&gt;You can support financially the development of Flycheck and related packages via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/flycheck&#34;&gt;Open Collective&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/bbatsov&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/bbatsov&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/bbatsov&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Open Collective Backers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/flycheck/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/backer/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Open Collective Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&#34;https://opencollective.com/flycheck#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/flycheck/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/flycheck/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/flycheck/sponsor/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;We strive to create a safe, friendly and welcoming environment in the Flycheck community and have a &lt;a href=&#34;https://www.flycheck.org/en/latest/community/conduct.html&#34;&gt;Code of Conduct&lt;/a&gt; that defines acceptable and welcome behaviour as well as sanctions for violations. All contributors and all participants are expected to follow it, on Github, Gitter, Emacs.SX or any other place thatâ€™s part of Flycheckâ€™s broader community.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Flycheck is free software: you can redistribute it and/or modify it under the terms of the &lt;a href=&#34;https://github.com/flycheck/flycheck/raw/master/COPYING&#34;&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;Flycheck is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the &lt;a href=&#34;https://github.com/flycheck/flycheck/raw/master/COPYING&#34;&gt;GNU General Public License&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sonatype/docker-nexus3</title>
    <updated>2024-03-01T02:02:43Z</updated>
    <id>tag:github.com,2024-03-01:/sonatype/docker-nexus3</id>
    <link href="https://github.com/sonatype/docker-nexus3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerized version of Nexus Repo Manager 3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sonatype Nexus Repository Docker: sonatype/nexus3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/sonatype/nexus-developers?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/sonatype/nexus-developers.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/sonatype/nexus-developers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Dockerfile for Sonatype Nexus Repository 3, starting with 3.18 the image is based on the &lt;a href=&#34;https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image&#34;&gt;Red Hat Universal Base Image&lt;/a&gt; while earlier versions used CentOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#contribution-guidelines&#34;&gt;Contribution Guidlines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#running&#34;&gt;Running&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#building-the-nexus-repository-manager-image&#34;&gt;Building the Sonatype Nexus Repository image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#chef-solo-for-runtime-and-application&#34;&gt;Chef Solo for Runtime and Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#testing-the-dockerfile&#34;&gt;Testing the Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#red-hat-certified-image&#34;&gt;Red Hat Certified Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#notes&#34;&gt;Notes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#persistent-data&#34;&gt;Persistent Data&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;Go read &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/main/.github/CONTRIBUTING.md&#34;&gt;our contribution guidelines&lt;/a&gt; to get a bit more familiar with how we would like things to flow.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To run, binding the exposed port 8081 to the host, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When stopping, be sure to allow sufficient time for the databases to fully shut down.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker stop --time=120 &amp;lt;CONTAINER_NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl http://localhost:8081/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the Sonatype Nexus Repository image&lt;/h2&gt; &#xA;&lt;p&gt;To build a docker image from the &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/main/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; you can use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build --rm=true --tag=sonatype/nexus3 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following optional variables can be used when building the image:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NEXUS_VERSION: Version of the Sonatype Nexus Repository&lt;/li&gt; &#xA; &lt;li&gt;NEXUS_DOWNLOAD_URL: Download URL for Sonatype Nexus Repository, alternative to using &lt;code&gt;NEXUS_VERSION&lt;/code&gt; to download from Sonatype&lt;/li&gt; &#xA; &lt;li&gt;NEXUS_DOWNLOAD_SHA256_HASH: Sha256 checksum for the downloaded Sonatype Nexus Repository archive. Required if &lt;code&gt;NEXUS_VERSION&lt;/code&gt; or &lt;code&gt;NEXUS_DOWNLOAD_URL&lt;/code&gt; is provided&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chef Solo for Runtime and Application&lt;/h2&gt; &#xA;&lt;p&gt;Chef Solo is used to build out the runtime and application layers of the Docker image. The Chef cookbook being used is available on GitHub at &lt;a href=&#34;https://github.com/sonatype/chef-nexus-repository-manager&#34;&gt;sonatype/chef-nexus-repository-manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing the Dockerfile&lt;/h2&gt; &#xA;&lt;p&gt;We are using &lt;code&gt;rspec&lt;/code&gt; as the test framework. &lt;code&gt;serverspec&lt;/code&gt; provides a docker backend (see the method &lt;code&gt;set&lt;/code&gt; in the test code) to run the tests inside the docker container, and abstracts away the difference between distributions in the tests (e.g. yum, apt,...).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rspec [--backtrace] spec/Dockerfile_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Red Hat Certified Image&lt;/h2&gt; &#xA;&lt;p&gt;A Red Hat certified container image can be created using &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/main/Dockerfile.rh.ubi&#34;&gt;Dockerfile.rh.ubi&lt;/a&gt; which is built to be compliant with Red Hat certification. The image includes additional meta data to comform with Kubernetes and OpenShift standards, a directory with the licenses applicable to the software and a man file for help on how to use the software. It also uses an ENTRYPOINT script the ensure the running user has access to the appropriate permissions for OpenShift &#39;restricted&#39; SCC.&lt;/p&gt; &#xA;&lt;p&gt;The Red Hat certified container image is available from the &lt;a href=&#34;https://access.redhat.com/containers/#/registry.connect.redhat.com/sonatype/nexus-repository-manager&#34;&gt;Red Hat Container Catalog&lt;/a&gt; and qualified accounts can pull it from registry.connect.redhat.com.&lt;/p&gt; &#xA;&lt;h2&gt;Other Red Hat Images&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the Universal Base Image, we can build images based on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Red Hat Enterprise Linux: &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/main/Dockerfile.rh.el&#34;&gt;Dockerfile.rh.el&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CentOS: &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/main/Dockerfile.rh.centos&#34;&gt;Dockerfile.rh.centos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Our &lt;a href=&#34;https://help.sonatype.com/display/NXRM3/System+Requirements&#34;&gt;system requirements&lt;/a&gt; should be taken into account when provisioning the Docker container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Default user is &lt;code&gt;admin&lt;/code&gt; and the uniquely generated password can be found in the &lt;code&gt;admin.password&lt;/code&gt; file inside the volume. See &lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/main/#user-content-persistent-data&#34;&gt;Persistent Data&lt;/a&gt; for information about the volume.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It can take some time (2-3 minutes) for the service to launch in a new container. You can tail the log to determine once Nexus is ready:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker logs -f nexus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation of Nexus is to &lt;code&gt;/opt/sonatype/nexus&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A persistent directory, &lt;code&gt;/nexus-data&lt;/code&gt;, is used for configuration, logs, and storage. This directory needs to be writable by the Nexus process, which runs as UID 200.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There is an environment variable that is being used to pass JVM arguments to the startup script&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;INSTALL4J_ADD_VM_PARAMS&lt;/code&gt;, passed to the Install4J startup script. Defaults to &lt;code&gt;-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;This can be adjusted at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e INSTALL4J_ADD_VM_PARAMS=&#34;-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=/some-other-dir&#34; sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Of particular note, &lt;code&gt;-Djava.util.prefs.userRoot=/some-other-dir&lt;/code&gt; can be set to a persistent path, which will maintain the installed Sonatype Nexus Repository License if the container is restarted.&lt;/p&gt; &lt;p&gt;Be sure to check the &lt;a href=&#34;https://help.sonatype.com/display/NXRM3/System+Requirements#SystemRequirements-MemoryRequirements&#34;&gt;memory requirements&lt;/a&gt; when deciding how much heap and direct memory to allocate.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Another environment variable can be used to control the Nexus Context Path&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;NEXUS_CONTEXT&lt;/code&gt;, defaults to /&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;This can be supplied at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e NEXUS_CONTEXT=nexus sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Persistent Data&lt;/h3&gt; &#xA;&lt;p&gt;There are two general approaches to handling persistent storage requirements with Docker. See &lt;a href=&#34;https://docs.docker.com/engine/tutorials/dockervolumes/&#34;&gt;Managing Data in Containers&lt;/a&gt; for additional information.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;Use a docker volume&lt;/em&gt;. Since docker volumes are persistent, a volume can be created specifically for this purpose. This is the recommended approach.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker volume create --name nexus-data&#xA;$ docker run -d -p 8081:8081 --name nexus -v nexus-data:/nexus-data sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Mount a host directory as the volume&lt;/em&gt;. This is not portable, as it relies on the directory existing with correct permissions on the host. However it can be useful in certain situations where this volume needs to be assigned to certain specific underlying storage.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir /some/dir/nexus-data &amp;amp;&amp;amp; chown -R 200 /some/dir/nexus-data&#xA;$ docker run -d -p 8081:8081 --name nexus -v /some/dir/nexus-data:/nexus-data sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Looking to contribute to our Docker image but need some help? There&#39;s a few ways to get information or our attention:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with us on &lt;a href=&#34;https://gitter.im/sonatype/nexus-developers&#34;&gt;Gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File an issue &lt;a href=&#34;https://issues.sonatype.org/projects/NEXUS/&#34;&gt;on our public JIRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;http://stackoverflow.com/questions/tagged/nexus3&#34;&gt;Nexus3&lt;/a&gt; tag on Stack Overflow&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://groups.google.com/a/glists.sonatype.com/forum/?hl=en#!forum/nexus-users&#34;&gt;Sonatype Nexus Repository User List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Sonatype Nexus Repository OSS is distributed with Sencha Ext JS pursuant to a FLOSS Exception agreed upon between Sonatype, Inc. and Sencha Inc. Sencha Ext JS is licensed under GPL v3 and cannot be redistributed as part of a closed source work.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>syl20bnr/nose.el</title>
    <updated>2024-03-01T02:02:43Z</updated>
    <id>tag:github.com,2024-03-01:/syl20bnr/nose.el</id>
    <link href="https://github.com/syl20bnr/nose.el" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This gives a bunch of functions that handle running nosetests on a particular buffer or part of a buffer. Fork from https://bitbucket.org/durin42/nosemacs/overview&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nose.el&lt;/h1&gt; &#xA;&lt;p&gt;This gives a bunch of functions that handle running nosetests on a particular buffer or part of a buffer.&lt;/p&gt; &#xA;&lt;p&gt;This is a fork from the &lt;a href=&#34;https://bitbucket.org/durin42/nosemacs/overview&#34;&gt;bitbucket repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s different ?&lt;/h2&gt; &#xA;&lt;p&gt;This fork:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;brings Windows compatibility.&lt;/li&gt; &#xA; &lt;li&gt;calls python with an inline script to launch nose.&lt;/li&gt; &#xA; &lt;li&gt;can launch test suites (require to install the nose fixes via &lt;code&gt;easy_install nose-fixes&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;is compatible with virtualenv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need to add the directory containing &lt;code&gt;nose.el&lt;/code&gt; to your &lt;code&gt;load-path&lt;/code&gt;, and then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(require &#39;nose)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;By default, the root of a project is found by looking for any of the files &lt;code&gt;setup.cfg&lt;/code&gt;, &lt;code&gt;.hg&lt;/code&gt;, &lt;code&gt;.git&lt;/code&gt; and &lt;code&gt;.projectile&lt;/code&gt;. You can add files to check for to the file list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(add-to-list &#39;nose-project-root-files &#34;something&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can change the project root test to detect in some other way whether a directory is the project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(setq nose-project-root-test (lambda (dirname) (equal dirname &#34;foo&#34;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want dots as output, rather than the verbose output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(defvar nose-use-verbose nil) ; default is t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Probably also want some key bindings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(add-hook &#39;python-mode-hook&#xA;          (lambda ()&#xA;            (local-set-key &#34;\C-ca&#34; &#39;nosetests-all)&#xA;            (local-set-key &#34;\C-cm&#34; &#39;nosetests-module)&#xA;            (local-set-key &#34;\C-cs&#34; &#39;nosetests-suite)&#xA;            (local-set-key &#34;\C-c.&#34; &#39;nosetests-one)&#xA;            (local-set-key &#34;\C-cpa&#34; &#39;nosetests-pdb-all)&#xA;            (local-set-key &#34;\C-cpm&#34; &#39;nosetests-pdb-module)&#xA;            (local-set-key &#34;\C-cps&#34; &#39;nosetests-pdb-suite)&#xA;            (local-set-key &#34;\C-cp.&#34; &#39;nosetests-pdb-one)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;To be able to launch a test suite, your suite must define a function with the name &lt;code&gt;load_tests&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For instance (typical example to make &lt;code&gt;PyDev&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;nose.el&lt;/code&gt; happy):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import unittest&#xA;&#xA;ALL_TESTS = unittest.TestSuite([my_suites_go_here]) &#xA;&#xA;def load_tests(loader=None, tests=None, pattern=None):&#xA;    return ALL_TESTS&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    unittest.TextTestRunner(verbosity=2).run(ALL_TESTS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;To the original authors of nose.el: &lt;code&gt;Jason Pellerin&lt;/code&gt; and &lt;code&gt;Augie Fackler&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>