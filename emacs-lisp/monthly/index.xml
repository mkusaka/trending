<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Emacs Lisp Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-01T01:53:52Z</updated>
  <subtitle>Monthly Trending of Emacs Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>meow-edit/meow</title>
    <updated>2022-11-01T01:53:52Z</updated>
    <id>tag:github.com,2022-11-01:/meow-edit/meow</id>
    <link href="https://github.com/meow-edit/meow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Yet another modal editing on Emacs / 猫态编辑&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+title: Meow&lt;/p&gt; &#xA;&lt;p&gt;[[https://melpa.org/#/meow][file:https://melpa.org/packages/meow-badge.svg]] [[https://stable.melpa.org/#/meow][file:https://stable.melpa.org/packages/meow-badge.svg]] [[https://github.com/meow-edit/meow/actions/workflows/action.yml][https://github.com/meow-edit/meow/actions/workflows/action.yml/badge.svg]]&lt;/p&gt; &#xA;&lt;p&gt;[[file:meow.svg]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_quote Less is more #+end_quote&lt;/p&gt; &#xA;&lt;p&gt;Meow is yet another modal editing mode for Emacs.&lt;/p&gt; &#xA;&lt;p&gt;Meow aims to blend modal editing into Emacs with minimal interference with its original key-bindings, avoiding most of the hassle introduced by key-binding conflicts. This leads to lower necessary configuration and better integration. More is achieved with fewer commands to remember.&lt;/p&gt; &#xA;&lt;p&gt;Key features compared to existing solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimal configuration -- build your own modal editing system&lt;/li&gt; &#xA; &lt;li&gt;No third-party dependencies ([[file:GET_STARTED.org][try it without touching your configuration]])&lt;/li&gt; &#xA; &lt;li&gt;Doesn&#39;t occupy too many keys &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Much easier to remember for people trying modal editing&lt;/li&gt; &#xA;   &lt;li&gt;More keys available for your own key-bindings&lt;/li&gt; &#xA;   &lt;li&gt;Most of the time, you don&#39;t even need to hold shift!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Lightning fast (unlike Evil)&lt;/li&gt; &#xA; &lt;li&gt;Minimizes modifier usage (e.g. =SPC x f= for =C-x C-f=) inspired by [[https://github.com/emacsorphanage/god-mode][god-mode]]&lt;/li&gt; &#xA; &lt;li&gt;Better workflow for [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macros.html][kmacro]] application at multiple locations&lt;/li&gt; &#xA; &lt;li&gt;Interactive selection manipulation and expansion inspired by avy&lt;/li&gt; &#xA; &lt;li&gt;Selection as top-tier object, and keybindings built around selection&lt;/li&gt; &#xA; &lt;li&gt;Compatible with the vanilla Emacs keymap (or any other keymap from any package)&lt;/li&gt; &#xA; &lt;li&gt;Effortless uniform keymaps across modes&lt;/li&gt; &#xA; &lt;li&gt;Key-binding conflict handling made easy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to ask questions and share ideas in the [[https://github.com/meow-edit/meow/discussions][Discussion]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[file:GET_STARTED.org][Get started]] - Installation and configuration&lt;/p&gt; &#xA;&lt;p&gt;[[file:TUTORIAL.org][Tutorial]] - Learn Meow in 15 minutes&lt;/p&gt; &#xA;&lt;p&gt;[[file:FAQ.org][FAQ]] - Frequently Asked Questions&lt;/p&gt; &#xA;&lt;p&gt;[[file:COMMANDS.org][Commands]] - Documentation for commands&lt;/p&gt; &#xA;&lt;p&gt;[[file:CUSTOMIZATIONS.org][Customizations]] - Helper functions and variables&lt;/p&gt; &#xA;&lt;p&gt;[[file:EXPLANATION.org][Explanation]] - Ideas and concepts behind Meow&lt;/p&gt; &#xA;&lt;p&gt;[[file:CHANGELOG.md][Changelog]] - Changes, releases, and news&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;License&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Licensed under GPLv3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>emacs-straight/flymake</title>
    <updated>2022-11-01T01:53:52Z</updated>
    <id>tag:github.com,2022-11-01:/emacs-straight/flymake</id>
    <link href="https://github.com/emacs-straight/flymake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of the flymake package from GNU ELPA, current as of 2022-11-01&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>rougier/nano-emacs</title>
    <updated>2022-11-01T01:53:52Z</updated>
    <id>tag:github.com,2022-11-01:/rougier/nano-emacs</id>
    <link href="https://github.com/rougier/nano-emacs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GNU Emacs / N Λ N O - Emacs made simple&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GNU Emacs / N Λ N O&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GNU Emacs / N Λ N O&lt;/strong&gt; is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles I described in the article &#34;&lt;a href=&#34;https://arxiv.org/abs/2008.06030&#34;&gt;On the design of text Editors&lt;/a&gt;&#34; that is available on arXiv. The light theme is based on &lt;a href=&#34;https://material.io/&#34;&gt;Material colors&lt;/a&gt; and the dark theme is based on &lt;a href=&#34;https://www.nordtheme.com/&#34;&gt;Nord colors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The philosophy of nano emacs is to stick as much as possible to vanilla emacs without introducing too much dependencies (or none if possible) and to keep it modular enough. The idea is for users to copy the part they are interested in such as to include them in their own configuration.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-emacs-light.png&#34; width=&#34;47.5%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-emacs-dark.png&#34; width=&#34;47.5%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Nano Emacs is quite close to my other project &lt;a href=&#34;https://github.com/rougier/elegant-emacs&#34;&gt;Elegant Emacs&lt;/a&gt; which might be considered to be an early prototype.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You need a recent version of &lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;GNU Emacs&lt;/a&gt; and to have the &lt;a href=&#34;https://fonts.google.com/specimen/Roboto+Mono&#34;&gt;Roboto Mono&lt;/a&gt; and &lt;a href=&#34;https://fonts.google.com/specimen/Fira+Code&#34;&gt;Fira Code&lt;/a&gt; fonts installed on your system. There are no other dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Quick test&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to test nano emacs is to clone the directory on your desktop and to type (from inside the cloned repository):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ emacs -q -l nano.el&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you like the result, you can either manually merge the contents of &lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano.el&#34;&gt;nano.el&lt;/a&gt; into your emacs configuration file, or install nano through the &lt;a href=&#34;https://github.com/raxod502/straight.el&#34;&gt;straight.el&lt;/a&gt; package manager.&lt;/p&gt; &#xA;&lt;h4&gt;Manual Installation&lt;/h4&gt; &#xA;&lt;p&gt;To merge the &lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano.el&#34;&gt;nano.el&lt;/a&gt; contents with your emacs configuration, you&#39;ll need to modify the &lt;code&gt;load-path&lt;/code&gt; to include the nano emacs repository and then call for the different modules. The only mandatory module is &lt;code&gt;nano-faces&lt;/code&gt; that defines 6 faces that are used in other modules.&lt;/p&gt; &#xA;&lt;h4&gt;Installation through straight.el&lt;/h4&gt; &#xA;&lt;p&gt;To install nano through &lt;a href=&#34;https://github.com/raxod502/straight.el&#34;&gt;straight.el&lt;/a&gt;, install straight.el, and then add the following snippet into your emacs configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(straight-use-package&#xA;  &#39;(nano-emacs :type git :host github :repo &#34;rougier/nano-emacs&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;from here, you may either &lt;code&gt;(require &#39;nano)&lt;/code&gt; to pull in the default nano configuration, or call for the different modules. The only mandatory module is &lt;code&gt;nano-faces&lt;/code&gt; that defines 6 faces that are used in other modules.&lt;/p&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the default font, the proportional font and the font-size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(setq nano-font-family-monospaced &#34;Roboto Mono&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This sets the default monospaced font. Defaults to Roboto Mono. Note that if you set this to a font without proper light or bold weights you will lose many of the key design features of nano-emacs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(setq nano-font-family-proportional nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set this to the name (as a string) of your favorite variable-width font to enable &lt;code&gt;variable-width-mode&lt;/code&gt; and &lt;code&gt;mixed-pitch-mode&lt;/code&gt;. If you have already set this somewhere else, you can use &lt;code&gt;(setq nano-font-family-proportional (face-attribute &#39;variable-width :family))&lt;/code&gt; to use the same one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(setq nano-font-size 14)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This sets the font-size of most faces in nano-emacs.&lt;/p&gt; &#xA;&lt;h4&gt;Note about load-order&lt;/h4&gt; &#xA;&lt;p&gt;Because of the way nano-emacs is set up, you need to set these variables &lt;em&gt;before&lt;/em&gt; you call &lt;code&gt;(nano-faces)&lt;/code&gt; and &lt;code&gt;(nano-theme)&lt;/code&gt;. If you change one of these variables after load/calling &lt;code&gt;(nano-faces)&lt;/code&gt; and &lt;code&gt;(nano-theme)&lt;/code&gt;, you will need to call them again for these changes to take effect.&lt;/p&gt; &#xA;&lt;h3&gt;Modules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano.el&#34;&gt;nano.el&lt;/a&gt;&lt;/strong&gt; (optional)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module is mostly used to test nano emacs locally. Its content is supposed to be merged into an existing emacs configuration. See &lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/#Quick-test&#34;&gt;Quick test&lt;/a&gt; section above.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Mandatory&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-base-colors.el&#34;&gt;nano-base-colors.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module defines the fundamental colors of nano theme. If your Emacs has a theme or color-scheme, make sure its loaded before you load nano-faces so that its colors are used by nano.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-faces.el&#34;&gt;nano-faces.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module defines the fundamental faces of nano theme. If your Emacs has a theme or color-scheme, make sure its loaded before you load nano-faces so that its colors are used by nano.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Optional&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-theme-light.el&#34;&gt;nano-theme-light.el&lt;/a&gt;&lt;/strong&gt; &amp;amp; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-theme-dark.el&#34;&gt;nano-theme-dark.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Theses modules define light and dark themes respectively by overriding the base colors. If your Emacs is not themed, you are encouraged to try one of these.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-theme.el&#34;&gt;nano-theme.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module derives faces for several popular emacs modes from the nano faces. You can either use them all by calling &lt;code&gt;(nano-theme)&lt;/code&gt;, or pick what you want by calling your selection of &lt;code&gt;(nano-theme--&lt;/code&gt; functions.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-help.el&#34;&gt;nano-help.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module provides a function to display a small help message in the echo area.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-splash.el&#34;&gt;nano-splash.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module provides a splash screen when emacs is started.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-modeline.el&#34;&gt;nano-modeline.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module defines a header line that is mode dependent and takes care of hiding the modeline when necessary.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-layout.el&#34;&gt;nano-layout.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module defines the overall layout of an emacs frame, defining default font, fringes, margins, etc.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-defaults.el&#34;&gt;nano-defaults.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This modules provides a set of sane default settings for Emacs.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-session.el&#34;&gt;nano-session.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This modules configures Emacs such that a session is saved from one run to the other.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-bindings.el&#34;&gt;nano-bindings.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This modules provides a reduced set of keybindings for a few common commands.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-counsel.el&#34;&gt;nano-counsel.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This modules configures the &lt;a href=&#34;https://elpa.gnu.org/packages/counsel.html&#34;&gt;counsel package&lt;/a&gt; that needs to have been &lt;strong&gt;installed&lt;/strong&gt; by user.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-colors.el&#34;&gt;nano-colors.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This module provides a collection of colors palettes (&lt;a href=&#34;https://yeun.github.io/open-color/&#34;&gt;open colors&lt;/a&gt;, &lt;a href=&#34;https://material.io/&#34;&gt;material colors&lt;/a&gt;, &lt;a href=&#34;https://www.nordtheme.com/&#34;&gt;nord colors&lt;/a&gt;) with functions for easily accessing them.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Experimental&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-mu4e.el&#34;&gt;nano-mu4e.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This package setup the look and feel of mu4e.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-mu4e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-minibuffer.el&#34;&gt;nano-minibuffer.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Minibuffer using &lt;a href=&#34;https://github.com/muffinmad/emacs-mini-frame&#34;&gt;mini-frame&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;div&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-minibuffer-light.png&#34; width=&#34;47.5%&#34;&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-minibuffer-dark.png&#34; width=&#34;47.5%&#34;&gt; &#xA;  &lt;/div&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-command.el&#34;&gt;nano-command.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This package provides an experimental command line prompt in the header line. It has not history nor completion but can be used for one line input such as org-capture.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-command.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/nano-agenda.el&#34;&gt;nano-agenda.el&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;An experimental interactive mini agenda that displays side by side a mini calendar on the left and timestamped org entries on the right.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rougier/nano-emacs/master/images/nano-agenda.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Related works&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mclear-tools/bespoke-themes&#34;&gt;Bespoke theme&lt;/a&gt; Custom medium contrast light and dark themes inspired by nano emacs, elegant emacs, Nord and Solarized themes.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>