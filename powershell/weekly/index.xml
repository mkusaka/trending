<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-13T01:48:56Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eaaasun/CCStopper</title>
    <updated>2022-11-13T01:48:56Z</updated>
    <id>tag:github.com,2022-11-13:/eaaasun/CCStopper</id>
    <link href="https://github.com/eaaasun/CCStopper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stops Adobe&#39;s pesky background apps and more 😉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CCStopper &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Stops Adobe&#39;s pesky background apps and more 😉&lt;/p&gt; &#xA;&lt;h3&gt;Version&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Released Variant&lt;/th&gt; &#xA;   &lt;th&gt;Ver. Num&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Table of Contents &#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#v120-changelog&#34;&gt;v1.2.0 Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#future-features&#34;&gt;Future Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#known-issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eaaasun/CCStopper/main/#disclaimernotice&#34;&gt;Disclaimer/Notice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v1.2.0 Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UI Change &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added submenus and changed inputs, new system for creating menus&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Powershell Rewrite &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Everything is in Powershell!&lt;/li&gt; &#xA;   &lt;li&gt;Added &lt;code&gt;functions.ps1&lt;/code&gt; file, helps with code reuse&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Reversibility in modules &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you used the RemoveAGS module before this version, it will not be reversible.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Separated Hosts Patch from Credit Card Patch &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/sh32devnull&#34;&gt;@sh32devnull&lt;/a&gt; for Hosts Patch&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Added HideCCFolder module &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/ItsProfessional&#34;&gt;@ItsProfessional&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bug Fixes and Improvements&lt;/li&gt; &#xA; &lt;li&gt;Documentation Update&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;Read previous changelogs from &lt;a href=&#34;https://github.com/eaaasun/CCStopper/releases&#34;&gt;the releases&lt;/a&gt; &#xA; &lt;!-- omit in toc --&gt;&lt;/h6&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get the latest &lt;a href=&#34;https://github.com/eaaasun/CCStopper/releases/latest&#34;&gt;release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the ZIP file (This is important, CCStopper will not work without the additional scripts in the additional folders. Also, antivirus may block it from running in the downloads folder.)&lt;/li&gt; &#xA; &lt;li&gt;Run CCStopper.bat&lt;/li&gt; &#xA; &lt;li&gt;Select an option&lt;/li&gt; &#xA; &lt;li&gt;Prevent profit (for Adobe)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please do not list options by number if you are creating a guide or asking a question that uses CCStopper. To reduce confusion, use the names of the options. Thank you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All patches are reversible by running the same patch again.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stop running Adobe background processes&lt;/li&gt; &#xA; &lt;li&gt;Internet Patches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Credit Card Trial - Creates firewall rule to block the credit card prompt. See &lt;a href=&#34;https://github.com/eaaasun/CCStopper/issues/42&#34;&gt;issue #42&lt;/a&gt; if it does not work.&lt;/li&gt; &#xA;   &lt;li&gt;Add to Hosts - Blocks unnecessary Adobe servers in the hosts file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;System Patches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Genuine Checker - Replaces and locks Genuine Checker files.&lt;/li&gt; &#xA;   &lt;li&gt;Hide CCFolder - Hides the Creative Cloud folder in Windows Explorer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why administrator permissions?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;This script needs those permissions to modify files and settings. CCStopper is fully open source for auditing.&lt;/p&gt;&#xA; &lt;/blockquote&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is this a virus?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Virus detections are false positives. CCStopper is fully open source for auditing.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;I found a bug/issue! What do I do?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Before submitting an issue, update to the latest version and check &lt;a href=&#34;https://github.com/eaaasun/CCStopper/raw/main/README.md#known-issues&#34;&gt;the known issues&lt;/a&gt; and existing issues. Please read through the issue form before submitting so the bug can be patched ASAP.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is this available for MacOS?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;It is not available for MacOS, and I won&#39;t port it to MacOS as long as I use Windows.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will more features be added?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Yes! They are in the Future Features section below. Open a discussion &lt;a href=&#34;https://github.com/eaaasun/CCStopper/discussions/new?category=feature-request&#34;&gt;here&lt;/a&gt; to suggest a feature.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is there any way to support the project?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Please donate your time! If you have Powershell/Batch knowledge, contribute to the project! If not, finding bugs and suggesting features is just as helpful!&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Future Features&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please visit the &lt;a href=&#34;https://github.com/users/eaaasun/projects/2&#34;&gt;project board&lt;/a&gt; to see what features are planned. If you have a suggestion, please open a discussion &lt;a href=&#34;https://github.com/eaaasun/CCStopper/discussions/new?category=feature-request&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check the &lt;a href=&#34;https://github.com/eaaasun/CCStopper/issues&#34;&gt;issues&lt;/a&gt; page for the latest issues. The &lt;a href=&#34;https://github.com/users/eaaasun/projects/2&#34;&gt;project board&lt;/a&gt; has a verified list of bugs, so it may not be up to date.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Disclaimer/Notice&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This script is in an early stage, and offered as-is. There will be &lt;em&gt;many&lt;/em&gt; bugs. I am not responsible for any damage, loss of data, or thermonuclear wars caused by these scripts. I am not affiliated with Adobe.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; Don&#39;t use this tool for piracy. It&#39;s illegal, and multi-billion dollar companies like Adobe &lt;em&gt;need&lt;/em&gt; to profit off unreliable and overpriced software. Piracy &lt;em&gt;helps&lt;/em&gt; Adobe by increasing their market dominance. If you want to dethrone Adobe, use &lt;a href=&#34;https://ass.easun.me&#34;&gt;alternatives&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;Made with &amp;lt;3, and &amp;lt;/3 for Adobe&lt;/h6&gt;</summary>
  </entry>
  <entry>
    <title>ChrisTitusTech/powershell-profile</title>
    <updated>2022-11-13T01:48:56Z</updated>
    <id>tag:github.com,2022-11-13:/ChrisTitusTech/powershell-profile</id>
    <link href="https://github.com/ChrisTitusTech/powershell-profile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pretty PowerShell that looks good and functions almost as good as Linux terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;powershell-profile&lt;/h1&gt; &#xA;&lt;p&gt;Pretty PowerShell that looks good and functions almost as good as Linux terminal&lt;/p&gt; &#xA;&lt;h2&gt;One Line Install (Elevated PowerShell Recommended)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;irm &#34;https://github.com/ChrisTitusTech/powershell-profile/raw/main/setup.ps1&#34; | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fix the Missing Font&lt;/h2&gt; &#xA;&lt;p&gt;extract the downloaded &lt;code&gt;cove.zip&lt;/code&gt; that is in the folder you ran the script from and install the nerd fonts.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker</title>
    <updated>2022-11-13T01:48:56Z</updated>
    <id>tag:github.com,2022-11-13:/jenkinsci/docker</id>
    <link href="https://github.com/jenkinsci/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&#34;https://jenkins.io/&#34;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://jenkins.io/sites/default/files/jenkins_logo.png&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: read the section &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&#34;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping.&lt;/p&gt; &#xA;&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Avoid using a &lt;a href=&#34;https://docs.docker.com/storage/bind-mounts/&#34;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; &#xA;&lt;h2&gt;Backing up data&lt;/h2&gt; &#xA;&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; &#xA;&lt;p&gt;This is highly recommended. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; &#xA;&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links, etc)&lt;/p&gt; &#xA;&lt;p&gt;For more info check Docker docs section on &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setting the number of executors&lt;/h1&gt; &#xA;&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jenkins.model.*&#xA;Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connecting agents&lt;/h1&gt; &#xA;&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you are only using &lt;a href=&#34;https://plugins.jenkins.io/ssh-slaves/&#34;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; &#xA;&lt;h1&gt;Passing JVM parameters&lt;/h1&gt; &#xA;&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h1&gt;Configuring logging&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir data&#xA;cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF&#xA;handlers=java.util.logging.ConsoleHandler&#xA;jenkins.level=FINEST&#xA;java.util.logging.ConsoleHandler.level=FINEST&#xA;EOF&#xA;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&#34;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&#34; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring reverse proxy&lt;/h1&gt; &#xA;&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&#34;--prefix=/jenkins&#34;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Passing Jenkins launcher parameters&lt;/h1&gt; &#xA;&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk11 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; &#xA;&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;&#xA;COPY --chown=jenkins:jenkins certificate.pfx /var/lib/jenkins/certificate.pfx&#xA;COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk&#xA;ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsKeyStore=/var/lib/jenkins/certificate.pfx --httpsKeyStorePassword=Password12&#xA;EXPOSE 8083&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;ENV JENKINS_SLAVE_AGENT_PORT 50001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or as a parameter to docker,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing more tools&lt;/h1&gt; &#xA;&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;# if we want to install via apt&#xA;USER root&#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here&#xA;# drop back to the regular jenkins user - good practice&#xA;USER jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Install plugins script&lt;/h3&gt; &#xA;&lt;p&gt;You can rely on the plugin manager CLI to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; &#xA;&lt;h3&gt;Setting update centers&lt;/h3&gt; &#xA;&lt;p&gt;During the download, the script will use update centers defined by the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&#34;https://updates.jenkins.io&#34;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&#34;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&#34;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&#34;https://updates.jenkins.io/experimental&#34;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&#34;https://jenkins.io/blog/2018/05/15/incremental-deployment/&#34;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&#34;https://repo.jenkins-ci.org/incrementals&#34;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt&#xA;RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; &#xA;&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24986&#34;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port&#xA;curl -sSL &#34;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&#34; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2&#xA;pam-auth:1.1&#xA;matrix-project:1.4.1&#xA;script-security:1.13&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Updating plugins file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkinsci/plugin-installation-manager-tool&#34;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; &#xA;&lt;p&gt;Example command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-command&#34;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk11&#xA;docker run -it ${JENKINS_IMAGE} bash -c &#34;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&#34; &amp;gt;  plugins2.txt&#xA;mv plugins2.txt plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &#34;docker pull&#34; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; &#xA;&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; &#xA;&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; &#xA;&lt;h3&gt;Hacking&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&#34;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on Gitter, &lt;a href=&#34;https://gitter.im/jenkinsci/docker&#34;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>