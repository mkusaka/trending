<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:57:57Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MicrosoftDocs/microsoft-365-docs</title>
    <updated>2023-03-12T01:57:57Z</updated>
    <id>tag:github.com,2023-03-12:/MicrosoftDocs/microsoft-365-docs</id>
    <link href="https://github.com/MicrosoftDocs/microsoft-365-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is used to host the source for the Microsoft 365 documentation on https://docs.microsoft.com.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;ms.date: 01/04/2018&lt;/h2&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;h2&gt;Learn how to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Anyone who is interested can contribute to the topics. When you contribute, your work will go directly into the content set after being merged. It will then be published to &lt;a href=&#34;https://learn.microsoft.com/&#34;&gt;Microsoft Learn&lt;/a&gt; and you will be listed as a contributor at: &lt;a href=&#34;https://github.com/MicrosoftDocs/microsoft-365-docs/graphs/contributors&#34;&gt;https://github.com/MicrosoftDocs/microsoft-365-docs/graphs/contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Quickly update an article using GitHub.com&lt;/h3&gt; &#xA;&lt;p&gt;Contributors who only make infrequent or small updates can edit the file directly on GitHub.com without having to install any additional software. This article shows you how. &lt;a href=&#34;https://www.microsoft.com/videoplayer/embed/RE1XQTG&#34;&gt;This two-minute video&lt;/a&gt; also covers how to contribute.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you&#39;re signed in to GitHub.com with your GitHub account.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browse to the page you want to edit on Microsoft Learn.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On the right-hand side of the page, click &lt;strong&gt;Edit&lt;/strong&gt; (pencil icon).&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://learn.microsoft.com/compliance/media/quick-update-edit.png&#34; alt=&#34;Edit button on Microsoft Learn.&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The corresponding topic file on GitHub opens, where you need to click the &lt;strong&gt;Edit this file&lt;/strong&gt; pencil icon.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://learn.microsoft.com/compliance/media/quick-update-github.png&#34; alt=&#34;Edit button on github.com.&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The topic opens in a line-numbered editing page where you can make changes to the file. Files in GitHub are written and edited using Markdown language. For help on using Markdown, see &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Mastering Markdown&lt;/a&gt;. Select the &lt;strong&gt;Preview changes&lt;/strong&gt; tab to view your changes as you go.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you&#39;re finished making changes, go to the &lt;strong&gt;Propose file change&lt;/strong&gt; section at the bottom of the page:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A brief title is required. By default, the title is the name of the file, but you can change it.&lt;/li&gt; &#xA;   &lt;li&gt;Optionally, you can enter more details in the &lt;strong&gt;Add an optional extended description&lt;/strong&gt; box.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;When you&#39;re ready, click the green &lt;strong&gt;Propose file change&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://learn.microsoft.com/compliance/media/propose-file-change.png&#34; alt=&#34;Propose file change section.&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On the &lt;strong&gt;Comparing changes&lt;/strong&gt; page that appears, click the green &lt;strong&gt;Create pull request&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://learn.microsoft.com/compliance/media/comparing-changes-page.png&#34; alt=&#34;Comparing changes page.&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On the &lt;strong&gt;Open a pull request&lt;/strong&gt; page that appears, click the green &lt;strong&gt;Create pull request&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://learn.microsoft.com/compliance/media/open-a-pull-request-page.png&#34; alt=&#34;Open a pull request page.&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Your permissions in the repo determine what you see in the last several steps. People with no special privileges will see the &lt;strong&gt;Propose file change&lt;/strong&gt; section and subsequent confirmation pages as described. People with permissions to create and approve their own pull requests will see a similar &lt;strong&gt;Commit changes&lt;/strong&gt; section with extra options for creating a new branch and fewer confirmation pages.&lt;br&gt;&lt;br&gt;The point is: click any green buttons that are presented to you until there are no more.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The writer identified in the metadata of the topic will be notified and will eventually review and approve your changes so the topic will be updated on Microsoft Learn. If there are questions or issues with the updates, the writer will contact you.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;h3&gt;Legal Notices&lt;/h3&gt; &#xA;&lt;p&gt;Microsoft and any contributors grant you a license to the Microsoft documentation and other content in this repository under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/MicrosoftDocs/microsoft-365-docs/public/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file, and grant you a license to any code in the repository under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/MicrosoftDocs/microsoft-365-docs/public/LICENSE-CODE&#34;&gt;LICENSE-CODE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries.&lt;/p&gt; &#xA;&lt;p&gt;The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks. Microsoft&#39;s general trademark guidelines can be found at &lt;a href=&#34;https://go.microsoft.com/fwlink/?LinkID=254653&#34;&gt;https://go.microsoft.com/fwlink/?LinkID=254653&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Privacy information can be found at &lt;a href=&#34;https://privacy.microsoft.com/&#34;&gt;https://privacy.microsoft.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft and any contributors reserve all others rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Romanitho/Winget-AutoUpdate</title>
    <updated>2023-03-12T01:57:57Z</updated>
    <id>tag:github.com,2023-03-12:/Romanitho/Winget-AutoUpdate</id>
    <link href="https://github.com/Romanitho/Winget-AutoUpdate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WAU daily updates apps as system and notify connected users. (Allowlist and Blocklist support)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Winget-AutoUpdate (WAU)&lt;/h1&gt; &#xA;&lt;p&gt;This project uses the Winget tool to daily update apps (with system context) and notify users when updates are available and installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96626929/150645599-9460def4-0818-4fe9-819c-dd7081ff8447.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Intallation&lt;/h2&gt; &#xA;&lt;p&gt;Just &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/releases&#34;&gt;download latest release (source code)&lt;/a&gt;, unzip, run &#34;install.bat&#34; as admin to install by default.&lt;/p&gt; &#xA;&lt;h2&gt;Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Keep some apps out of Winget-AutoUpdate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h4&gt;BlockList&lt;/h4&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can exclude apps from update job (for instance, apps you want to keep at a specific version or apps with built-in auto-update): Add (or remove) the apps&#39; ID you want to disable autoupdate to &#39;excluded_apps.txt&#39;. (File must be placed in WAU&#39;s installation folder, or re-run install.bat).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h4&gt;Or AllowList&lt;/h4&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From 1.7.0 version, you can update only pre-selected apps. To do so, create an &#34;included_apps.txt&#34; with the apps&#39; ID of the apps you want to auto-update and run the &lt;code&gt;Winget-AutoUpdate-Install.ps1&lt;/code&gt; with &lt;code&gt;-UseWhiteList&lt;/code&gt; parameter. Related post: &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/issues/36&#34;&gt;https://github.com/Romanitho/Winget-AutoUpdate/issues/36&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can use WiGui to create these lists: &lt;a href=&#34;https://github.com/Romanitho/Winget-Install-GUI&#34;&gt;https://github.com/Romanitho/Winget-Install-GUI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Notification Level&lt;/h3&gt; &#xA;&lt;p&gt;From version 1.9.0, you can choose which notification will be displayed: Full, Success only or none. Use &lt;code&gt;-NotificationLevel&lt;/code&gt; parameter when you run &lt;code&gt;Winget-AutoUpdate-Install.ps1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Notification language&lt;/h3&gt; &#xA;&lt;p&gt;You can easily translate toast notifications by creating your locale xml config file (and share it with us :) ).&lt;/p&gt; &#xA;&lt;h3&gt;Default install location&lt;/h3&gt; &#xA;&lt;p&gt;By default, scripts and components will be placed in ProgramData location (inside a Winget-AutoUpdate folder). You can change this with script argument (Not Recommended).&lt;/p&gt; &#xA;&lt;h3&gt;When does the script run?&lt;/h3&gt; &#xA;&lt;p&gt;From version 1.9.0 (on new installations) WAU runs everyday at 6AM. You can now configure the frequency with &lt;code&gt;-UpdatesInterval&lt;/code&gt; option (Daily, BiDaily, Weekly, BiWeekly or Monthly). You can also add &lt;code&gt;-UpdatesAtLogon&lt;/code&gt; parameter to run at user logon and keep this option activated like previous versions (recommanded).&lt;/p&gt; &#xA;&lt;h3&gt;Log location&lt;/h3&gt; &#xA;&lt;p&gt;You can find logs in install location, in logs folder.&lt;br&gt; If &lt;strong&gt;Intune Management Extension&lt;/strong&gt; is installed, a &lt;strong&gt;SymLink&lt;/strong&gt; (WAU-updates.log) is created under &lt;strong&gt;C:\ProgramData\Microsoft\IntuneManagementExtension\Logs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&#34;Unknown&#34; App version&lt;/h3&gt; &#xA;&lt;p&gt;As explained in this &lt;a href=&#34;https://github.com/microsoft/winget-cli/issues/1255&#34;&gt;post&lt;/a&gt;, Winget cannot detect the current version of some installed apps. We decided to skip managing these apps with WAU to avoid retries each time WAU runs:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96626929/155092000-c774979d-2db7-4dc6-8b7c-bd11c7643950.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Eventually, try to reinstall or update app manually to see if new version is detected.&lt;/p&gt; &#xA;&lt;h3&gt;Handle metered connections&lt;/h3&gt; &#xA;&lt;p&gt;We might want to stop WAU on metered connection (to save cellular data on connection sharing for instance). That&#39;s why from v1.12.0 the default behavior will detect and stop WAU on limited connections (only for fresh install).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Previous installed versions will ignore this new setting on update to keep historical operation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To force WAU to run on metered connections anyway, run new installation with &lt;code&gt;-RunOnMetered&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h3&gt;System &amp;amp; user context&lt;/h3&gt; &#xA;&lt;p&gt;From version 1.15.0, WAU run with system and user contexts. This way, even apps installed on User&#39;s scope are updated. Shorcuts for manually run can also be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Update WAU&lt;/h2&gt; &#xA;&lt;h3&gt;Manual Update&lt;/h3&gt; &#xA;&lt;p&gt;Same process as new installation : download, unzip and run &lt;code&gt;install.bat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic Update&lt;/h3&gt; &#xA;&lt;p&gt;A new Auto-Update process has been released from version 1.5.0. By default, WAU AutoUpdate is enabled. It will not overwrite the configurations, icons (if personalised), excluded_apps list,... To disable WAU AutoUpdate, run the &lt;code&gt;Winget-AutoUpdate-Install.ps1&lt;/code&gt; with &lt;code&gt;-DisableWAUAutoUpdate&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstall WAU&lt;/h2&gt; &#xA;&lt;p&gt;Simply uninstall it from your programs:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96626929/170879336-ef034956-4778-41f0-b8fd-d307b77b70a9.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GUI installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Romanitho/Winget-Install-GUI/&#34;&gt;WiGui&lt;/a&gt; can be used to install WAU even easier:&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/96626929/167912772-de5a55fe-68a8-44ed-91fb-fcf5b34d891f.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Advanced installation&lt;/h2&gt; &#xA;&lt;p&gt;You can run the &lt;code&gt;Winget-AutoUpdate-Install.ps1&lt;/code&gt; script with parameters :&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-Silent&lt;/strong&gt;&lt;br&gt; Install Winget-AutoUpdate and prerequisites silently.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-MaxLogFiles&lt;/strong&gt;&lt;br&gt; Specify number of allowed log files.&lt;br&gt; Default is 3 out of 0-99:&lt;br&gt; Setting MaxLogFiles to 0 don&#39;t delete any old archived log files.&lt;br&gt; Setting it to 1 keeps the original one and just let it grow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-MaxLogSize&lt;/strong&gt;&lt;br&gt; Specify the size of the log file in bytes before rotating.&lt;br&gt; Default is 1048576 = 1 MB (ca. 7500 lines)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-WingetUpdatePath&lt;/strong&gt;&lt;br&gt; Specify Winget-AutoUpdate installation location. Default: &lt;code&gt;C:\ProgramData\Winget-AutoUpdate&lt;/code&gt; (Recommended to leave default).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-DoNotUpdate&lt;/strong&gt;&lt;br&gt; Do not run Winget-AutoUpdate after installation. By default, Winget-AutoUpdate is run just after installation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-DisableWAUAutoUpdate&lt;/strong&gt;&lt;br&gt; Disable Winget-AutoUpdate update checking. By default, WAU auto updates if new version is available on Github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-UseWhiteList&lt;/strong&gt;&lt;br&gt; Use White List instead of Black List. This setting will not create the &#34;excluded_apps.txt&#34; but &#34;included_apps.txt&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-ListPath&lt;/strong&gt;&lt;br&gt; Get Black/White List from external Path (&lt;strong&gt;URL/UNC/Local/GPO&lt;/strong&gt;) - download/copy to Winget-AutoUpdate installation location if external list is newer.&lt;br&gt; &lt;strong&gt;PATH&lt;/strong&gt; must end with a Directory, not a File...&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;-ListPath&lt;/code&gt; is set to &lt;strong&gt;GPO&lt;/strong&gt; the Black/White List can be managed from within the GPO itself under &lt;strong&gt;Application GPO Blacklist&lt;/strong&gt;/&lt;strong&gt;Application GPO Whitelist&lt;/strong&gt;.&lt;br&gt; Thanks to &lt;a href=&#34;https://github.com/Weatherlights&#34;&gt;Weatherlights&lt;/a&gt; in &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/discussions/256#discussioncomment-4710599&#34;&gt;#256 (reply in thread)&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-ModsPath&lt;/strong&gt;&lt;br&gt; Get Mods from external Path (&lt;strong&gt;URL/UNC/Local&lt;/strong&gt;) - download/copy to &lt;code&gt;mods&lt;/code&gt; in Winget-AutoUpdate installation location if external mods are newer.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;strong&gt;URL&lt;/strong&gt;: This requires a site directory with &lt;strong&gt;Directory Listing Enabled&lt;/strong&gt; and no index page overriding the listing of files (or an index page with href listing of all the &lt;strong&gt;Mods&lt;/strong&gt; to be downloaded):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&#xA;&amp;lt;li&amp;gt;&amp;lt;a  href=&#34;Adobe.Acrobat.Reader.32-bit-installed.ps1&#34;&amp;gt;Adobe.Acrobat.Reader.32-bit-installed.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&#xA;&amp;lt;li&amp;gt;&amp;lt;a  href=&#34;Adobe.Acrobat.Reader.64-bit-override.txt&#34;&amp;gt;Adobe.Acrobat.Reader.64-bit-override.txt&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&#xA;&amp;lt;li&amp;gt;&amp;lt;a  href=&#34;Notepad++.Notepad++-installed.ps1&#34;&amp;gt;Notepad++.Notepad++-installed.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&#xA;&amp;lt;li&amp;gt;&amp;lt;a  href=&#34;Notepad++.Notepad++-uninstalled.ps1&#34;&amp;gt;Notepad++.Notepad++-uninstalled.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Validated on &lt;strong&gt;IIS/Apache&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nota bene IIS&lt;/strong&gt; :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The extension &lt;strong&gt;.ps1&lt;/strong&gt; must be added as &lt;strong&gt;MIME Types&lt;/strong&gt; (text/powershell-script) otherwise it&#39;s displayed in the listing but can&#39;t be opened&lt;/li&gt; &#xA; &lt;li&gt;Files with special characters in the filename can&#39;t be opened by default from an IIS server - config must be administrated: &lt;strong&gt;Enable Allow double escaping&lt;/strong&gt; in &#39;&lt;strong&gt;Request Filtering&lt;/strong&gt;&#39;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;-InstallUserContext&lt;/strong&gt;&lt;br&gt; Install WAU with system and &lt;strong&gt;user&lt;/strong&gt; context executions (From version 1.15.3).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-BypassListForUsers&lt;/strong&gt;&lt;br&gt; Bypass Black/White list when run in user context (From version 1.15.0).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-NoClean&lt;/strong&gt;&lt;br&gt; Keep critical files when installing/uninstalling. This setting will keep &#34;excluded_apps.txt&#34;, &#34;included_apps.txt&#34;, &#34;mods&#34; and &#34;logs&#34; as they were.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-DesktopShortcut&lt;/strong&gt;&lt;br&gt; Create a shortcut for user interaction on the Desktop to run task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt; (From version 1.15.0).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-StartMenuShortcut&lt;/strong&gt;&lt;br&gt; Create shortcuts for user interaction in the Start Menu to run task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt;, open Logs and Web Help (From version 1.15.0).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-NotificationLevel&lt;/strong&gt;&lt;br&gt; Specify the Notification level: Full (Default, displays all notification), SuccessOnly (Only displays notification for success) or None (Does not show any popup).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-UpdatesAtLogon&lt;/strong&gt;&lt;br&gt; Set WAU to run at user logon.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-UpdatesInterval&lt;/strong&gt;&lt;br&gt; Specify the update frequency: Daily (Default), BiDaily, Weekly, BiWeekly, Monthly or Never. Can be set to &#39;Never&#39; in combination with &#39;-UpdatesAtLogon&#39; for instance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-UpdatesAtTime&lt;/strong&gt;&lt;br&gt; Specify the time of the update interval execution time. Default 6AM. (From version 1.15.0).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-RunOnMetered&lt;/strong&gt;&lt;br&gt; Run WAU on metered connection. Default No.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-Uninstall&lt;/strong&gt;&lt;br&gt; Remove scheduled tasks and scripts.&lt;/p&gt; &#xA;&lt;h2&gt;Intune/SCCM use&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/discussions/88&#34;&gt;https://github.com/Romanitho/Winget-AutoUpdate/discussions/88&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom scripts (Mods feature)&lt;/h2&gt; &#xA;&lt;p&gt;From version 1.8.0, the Mods feature allows you to run additional scripts when upgrading or installing an app. Just put the scripts in question with the &lt;strong&gt;AppID&lt;/strong&gt; followed by the &lt;code&gt;-preinstall&lt;/code&gt;, &lt;code&gt;-upgrade&lt;/code&gt;, &lt;code&gt;-install&lt;/code&gt; or &lt;code&gt;-installed&lt;/code&gt; suffix in the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Runs before upgrade/install: &lt;code&gt;AppID-preinstall.ps1&lt;/code&gt;&lt;br&gt; Runs during upgrade/install (before install check): &lt;code&gt;AppID-upgrade.ps1&lt;/code&gt;/&lt;code&gt;AppID-install.ps1&lt;/code&gt;&lt;br&gt; Runs after upgrade/install has been confirmed: &lt;code&gt;AppID-installed.ps1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;strong&gt;-install&lt;/strong&gt; mod will be used for upgrades too if &lt;strong&gt;-upgrade&lt;/strong&gt; doesn&#39;t exist (&lt;strong&gt;WAU&lt;/strong&gt; first tries &lt;code&gt;&amp;amp; $Winget upgrade --id&lt;/code&gt; and if the app isn&#39;t detected after that &lt;code&gt;&amp;amp; $Winget install --id&lt;/code&gt; is tried).&lt;br&gt; &lt;code&gt;AppID-install.ps1&lt;/code&gt; is recommended because it&#39;s used in &lt;strong&gt;both&lt;/strong&gt; scenarios.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Example:&lt;br&gt; If you want to run a script that removes the shortcut from &lt;strong&gt;%PUBLIC%\Desktop&lt;/strong&gt; (we don&#39;t want to fill the desktop with shortcuts our users can&#39;t delete) just after installing &lt;strong&gt;Acrobat Reader DC&lt;/strong&gt; (32-bit), prepare a powershell script that removes the Public Desktop shortcut &lt;strong&gt;Acrobat Reader DC.lnk&lt;/strong&gt; and name your script like this: &lt;code&gt;Adobe.Acrobat.Reader.32-bit-installed.ps1&lt;/code&gt; and put it in the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can find more information on &lt;a href=&#34;https://github.com/Romanitho/Winget-Install#custom-mods&#34;&gt;Winget-Install Repo&lt;/a&gt;, as it&#39;s a related feature.&lt;br&gt; Read more in the &lt;code&gt;README.md&lt;/code&gt; under the directory &lt;strong&gt;mods&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Share your mods with the community:&lt;br&gt; &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/discussions/categories/mods&#34;&gt;https://github.com/Romanitho/Winget-AutoUpdate/discussions/categories/mods&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Winget native parameters&lt;/h3&gt; &#xA;&lt;p&gt;Another finess is the &lt;strong&gt;AppID&lt;/strong&gt; followed by the &lt;code&gt;-override&lt;/code&gt; suffix as a &lt;strong&gt;text file&lt;/strong&gt; (.&lt;strong&gt;txt&lt;/strong&gt;) that you can place under the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Example:&lt;br&gt; &lt;strong&gt;Canneverbe.CDBurnerXP-override.txt&lt;/strong&gt; with the content &lt;code&gt;ADDLOCAL=All REMOVE=Desktop_Shortcut /qn&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This will use the &lt;strong&gt;content&lt;/strong&gt; of the text file as a native &lt;strong&gt;winget --override&lt;/strong&gt; parameter when upgrading (as proposed by &lt;a href=&#34;https://github.com/JonNesovic&#34;&gt;JonNesovic&lt;/a&gt; in &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/discussions/244#discussion-4637666&#34;&gt;Mod for --override argument #244&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;GPO Management&lt;/h2&gt; &#xA;&lt;p&gt;In an enterprise environment it&#39;s crucial that different groups can have different settings in applications etc. or to implement other mandatory settings, i.e for security/management reasons.&lt;br&gt; &lt;strong&gt;WAU&lt;/strong&gt; doesn&#39;t have any setting that can be changed except for when installing (or editing the registry/the task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt; as &lt;strong&gt;Admin&lt;/strong&gt;).&lt;br&gt; With the use of &lt;strong&gt;ADML/ADMX&lt;/strong&gt; files you can manage every &lt;strong&gt;WAU&lt;/strong&gt; setting from within &lt;strong&gt;GPO&lt;/strong&gt;.&lt;br&gt; They will be detected/evaluated during the next run of &lt;strong&gt;WAU&lt;/strong&gt; (taking effect before any actions).&lt;br&gt; The &lt;strong&gt;GPO ADMX/ADML&lt;/strong&gt; validated with:&lt;br&gt; &lt;a href=&#34;https://developer.vmware.com/samples/7115/windows-10---validate-admx-for-ingestion&#34;&gt;Windows 10 - Validate ADMX for Ingestion&lt;/a&gt;&lt;br&gt; Read more in the &lt;code&gt;README.md&lt;/code&gt; under the directory &lt;strong&gt;Policies&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/102996177/213920242-7ff8e2b4-d926-4407-b860-1e5922e29c3e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;In some cases, you need to &#34;unblock&#34; the &lt;code&gt;install.bat&lt;/code&gt; file (Windows Defender SmartScreen). Right click, properties and unblock. Then, you&#39;ll be able to run it.&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As reported by &lt;a href=&#34;https://github.com/soredake&#34;&gt;soredake&lt;/a&gt;, Powershell from MsStore is not supported with WAU in system context. See &lt;a href=&#34;https://github.com/Romanitho/Winget-AutoUpdate/issues/113&#34;&gt;https://github.com/Romanitho/Winget-AutoUpdate/issues/113&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optimization&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to give us any suggestions or optimizations in code and support us by adding a star :).&lt;/p&gt;</summary>
  </entry>
</feed>