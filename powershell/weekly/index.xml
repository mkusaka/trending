<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:33:40Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SobieskiCodes/RDPWrap</title>
    <updated>2024-04-21T03:33:40Z</updated>
    <id>tag:github.com,2024-04-21:/SobieskiCodes/RDPWrap</id>
    <link href="https://github.com/SobieskiCodes/RDPWrap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RDPwrap + win10 privacy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RDPWrap + win 10 privacy&lt;/h1&gt; &#xA;&lt;p&gt;Since so many people still use / find this, I&#39;ve gone ahead and updated it, @sebaxakerhtc has streamlined the process.&lt;br&gt; This repo is using Github actions, watching &lt;a href=&#34;https://github.com/sebaxakerhtc/rdpwrap/&#34;&gt;sebaxakerhtc&#39;s&lt;/a&gt; modified version of RDPWrap.&lt;br&gt; Included is win10privacy to block windows updates.&lt;br&gt; UNINSTALL YOUR CURRENT RDPWRAP IF IT IS INSTALLED, REBOOT THE MACHINE BEFORE STARTING THIS.&lt;br&gt; For those that found this via the youtube video, the branch you see in video can be found &lt;a href=&#34;https://github.com/SobieskiCodes/RDPWrap/tree/youtube_branch&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;Disable your antivirus software&#xA;Run Installer or Installer Black&#xA;Add exclusion for &#34;C:\Program Files\RDP Wrapper&#34; folder&#xA;Right-click W10Privacy.exe and choose Run as administrator from the context menu. Choose to make a system restore point. It’s also worth making a full system backup (just in case).&#xA;Go to Extras &amp;gt; Windows Updates to manage the options. There are six different check boxes.&#xA;Check the first five options&#xA;Click Set changed settings&#xA;Enable your antivirus software&#xA;Enjoy!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;I took no part in either of these tools. The original RDPWrap can be found &lt;a href=&#34;https://github.com/stascorp/rdpwrap&#34;&gt;here&lt;/a&gt;&lt;br&gt; The automated custom RDPWrap used here can be found on &lt;a href=&#34;https://github.com/sebaxakerhtc/&#34;&gt;sebaxakerhtc&#39;s&lt;/a&gt; profile.&lt;br&gt; And the original win10privacy can be found &lt;a href=&#34;https://www.winprivacy.de/english-home/&#34;&gt;here&lt;/a&gt;&lt;br&gt; If this works for you, please consider donating to the authors as they made this possible.&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>canix1/PIMSCAN</title>
    <updated>2024-04-21T03:33:40Z</updated>
    <id>tag:github.com,2024-04-21:/canix1/PIMSCAN</id>
    <link href="https://github.com/canix1/PIMSCAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tool for creating reports on Entra ID Role Assignments&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;⚔ &lt;img src=&#34;https://github.com/canix1/PIMSCAN/raw/main/img/PIMSCAN.png&#34; width=&#34;70%&#34;&gt; ⚔&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;b&gt;A tool to create reports on Entra ID Role Assignments.&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/canix1/PIMSCAN/raw/main/img/Animation.gif&#34; width=&#34;80%&#34;&gt; &lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell Module: MSAL.PS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-module MSAL.PS -Scope CurrentUser -Force -Confirm:$False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minumum Permissions with limited data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the parameter &lt;strong&gt;-LimitedReadOnly&lt;/strong&gt;, .\PIMSCAN.ps1 -TenantId [Tenant ID] -Show -verbose &lt;strong&gt;-LimitedReadOnly&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Global Reader role&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consent for these:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AdministrativeUnit.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Directory.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Group.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureAD&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureResources&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAssignmentSchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedEligibilitySchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementAlert.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;User.Read&lt;/li&gt; &#xA;   &lt;li&gt;User.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;offline_access&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following grant command as a Global Admin to grant a specific user the read-only scopes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Module Microsoft.Graph -Scope CurrentUser&#xA;&#xA;connect-MgGraph -Scopes &#34;Directory.AccessAsUser.All&#34; -TenantId &#34;&amp;lt;Your Tenant ID&amp;gt;&#34;&#xA;&#xA;$scopesOnlyRead = &#34;AdministrativeUnit.Read.All Directory.Read.All Group.Read.All PrivilegedAccess.Read.AzureAD PrivilegedAccess.Read.AzureADGroup PrivilegedAccess.Read.AzureResources PrivilegedAssignmentSchedule.Read.AzureADGroup PrivilegedEligibilitySchedule.Read.AzureADGroup RoleAssignmentSchedule.Read.Directory RoleEligibilitySchedule.Read.Directory RoleManagement.Read.All RoleManagement.Read.Directory RoleManagementAlert.Read.Directory RoleManagementPolicy.Read.Directory RoleManagementPolicy.Read.AzureADGroup User.Read User.Read.All offline_access&#34;&#xA;$params = @{&#xA;     # Microsoft Graph Command Line Tools&#xA;     ClientId = &#34;4ad243ae-ea7f-4496-949e-4c64f1e96d71&#34;&#xA;     # Singe User Consent&#xA;     ConsentType = &#34;Principal&#34;&#xA;     # Prinicpal to allow consent for&#xA;     PrincipalId = &#34;&amp;lt;Prinicipal Object ID&amp;gt;&#34;&#xA;     # GraphAggregatorService&#xA;     ResourceId = &#34;4131d640-34dd-4690-ad11-45ddcd773304&#34;&#xA;     # List of scopes/permissions&#xA;     Scope =  $scopesOnlyRead&#xA;}&#xA;&#xA;New-MgOauth2PermissionGrant -BodyParameter $params&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will not be able to collect the data in the table below with Read-Only&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Object&lt;/th&gt; &#xA;   &lt;th&gt;Attribute&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required Permission&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;justification&lt;/td&gt; &#xA;   &lt;td&gt;Supplied justification&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;status&lt;/td&gt; &#xA;   &lt;td&gt;State of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;createdDateTime&lt;/td&gt; &#xA;   &lt;td&gt;Creation date of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;justification&lt;/td&gt; &#xA;   &lt;td&gt;Supplied justification&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;status&lt;/td&gt; &#xA;   &lt;td&gt;State of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;createdDateTime&lt;/td&gt; &#xA;   &lt;td&gt;Creation date of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Full access with Write scopes for roleAssignmentScheduleRequests and roleEligibilityScheduleRequests.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You must have or be able to consent to the following scopes for the enterprise app &lt;strong&gt;Microsoft Graph Command Line Tools&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AdministrativeUnit.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Directory.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Group.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureAD&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureResources&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAssignmentSchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedEligibilitySchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.ReadWrite.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementAlert.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;User.Read&lt;/li&gt; &#xA;   &lt;li&gt;User.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;offline_access&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following grant command as a Global Admin to grant a specific user the read-only scopes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Module Microsoft.Graph -Scope CurrentUser&#xA;&#xA;connect-MgGraph -Scopes &#34;Directory.AccessAsUser.All&#34; -TenantId &#34;&amp;lt;Your Tenant ID&amp;gt;&#34;&#xA;&#xA;$scopesWrite = &#34;AdministrativeUnit.Read.All Directory.Read.All Group.Read.All PrivilegedAccess.Read.AzureAD PrivilegedAccess.Read.AzureADGroup PrivilegedAccess.Read.AzureResources PrivilegedAssignmentSchedule.Read.AzureADGroup PrivilegedEligibilitySchedule.Read.AzureADGroup RoleAssignmentSchedule.Read.Directory RoleAssignmentSchedule.ReadWrite.Directory RoleEligibilitySchedule.Read.Directory RoleEligibilitySchedule.ReadWrite.Directory RoleManagement.Read.All RoleManagement.Read.Directory RoleManagementAlert.Read.Directory RoleManagementPolicy.Read.Directory RoleManagementPolicy.Read.AzureADGroup User.Read User.Read.All offline_access&#34;&#xA;&#xA;$params = @{&#xA;     # Microsoft Graph Command Line Tools&#xA;     ClientId = &#34;4ad243ae-ea7f-4496-949e-4c64f1e96d71&#34;&#xA;     # Singe User Consent&#xA;     ConsentType = &#34;Principal&#34;&#xA;     # Prinicpal to allow consent for&#xA;     PrincipalId = &#34;&amp;lt;Prinicipal Object ID&amp;gt;&#34;&#xA;     # GraphAggregatorService&#xA;     ResourceId = &#34;4131d640-34dd-4690-ad11-45ddcd773304&#34;&#xA;     # List of scopes/permissions&#xA;     Scope =  $scopesWrite&#xA;}&#xA;&#xA;New-MgOauth2PermissionGrant -BodyParameter $params&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Read-Only Limited&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\PIMSCAN.ps1 -TenantId &amp;lt;TenantID&amp;gt; -Show -Verbose -LimitedReadOnly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get all data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\PIMSCAN.ps1 -TenantId &amp;lt;TenantID&amp;gt; -Show -Verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Results are saved in a HTML file.&lt;/p&gt; &#xA;&lt;p&gt;Open the Entra_ID_Role_Report_[TenantID].html if you did not used the &lt;strong&gt;-Show&lt;/strong&gt; parameter.&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-sdk-assets</title>
    <updated>2024-04-21T03:33:40Z</updated>
    <id>tag:github.com,2024-04-21:/Azure/azure-sdk-assets</id>
    <link href="https://github.com/Azure/azure-sdk-assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK Assets&lt;/h1&gt; &#xA;&lt;p&gt;This repository is used for resources that the Azure SDK team does not wish to be confined within any of our language-specific repositories.&lt;/p&gt; &#xA;&lt;p&gt;These language-specific repos are located at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net&#34;&gt;Azure/azure-sdk-for-net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-js&#34;&gt;Azure/azure-sdk-for-js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python&#34;&gt;Azure/azure-sdk-for-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java&#34;&gt;Azure/azure-sdk-for-java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-android&#34;&gt;Azure/azure-sdk-for-android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-ios&#34;&gt;Azure/azure-sdk-for-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-go&#34;&gt;Azure/azure-sdk-for-go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-cpp&#34;&gt;Azure/azure-sdk-for-cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-c&#34;&gt;Azure/azure-sdk-for-c&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This list is subject to addition.&lt;/p&gt; &#xA;&lt;p&gt;The repository currently contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Test Recordings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This list will expand as necessary.&lt;/p&gt; &#xA;&lt;h2&gt;Usage of this repo&lt;/h2&gt; &#xA;&lt;p&gt;As part of a greater engineering effort to re-use components, the azure-sdk team uses the &lt;a href=&#34;https://github.com/Azure/azure-sdk-tools/raw/main/tools/test-proxy/Azure.Sdk.Tools.TestProxy/README.md&#34;&gt;&lt;code&gt;test-proxy&lt;/code&gt;&lt;/a&gt; as an out-of-process record/playback solution. Each language will need a small shim to call into the proxy (which is hosted as an http server locally), but other than that, we save the effort of maintaining a record/playback framework for &lt;em&gt;each language&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This common record/playback server also has the ability to restore and retrieve recordings from an external source. This repository functions as that external source.&lt;/p&gt; &#xA;&lt;p&gt;For usage of the azure-sdk &lt;code&gt;test-proxy&lt;/code&gt; to store and retrieve recordings, please reference &lt;a href=&#34;https://github.com/Azure/azure-sdk-tools/tree/main/tools/test-proxy/documentation/asset-sync#asset-sync-retrieve-external-test-recordings&#34;&gt;this readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For detailed reading on &lt;em&gt;why&lt;/em&gt; the azure-sdk team is storing their assets in an external repository, please read &lt;a href=&#34;https://github.com/Azure/azure-sdk-tools/raw/main/tools/test-proxy/documentation/test-proxy/initial-investigation.md&#34;&gt;this document&lt;/a&gt; for additional detail.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This repository has tags created automatically by the &lt;a href=&#34;https://github.com/Azure/azure-sdk-tools/tree/main/tools/test-proxy/documentation/asset-sync#asset-sync-retrieve-external-test-recordings&#34;&gt;&lt;code&gt;test-proxy&lt;/code&gt; tool&lt;/a&gt; as part of the &lt;code&gt;push&lt;/code&gt; mechanism. As this repository will only ever contain resources for external usage, normal contribution from MS employees or OSS devs is unlikely.&lt;/p&gt; &#xA;&lt;p&gt;In the case an enterprising user has suggestions, please file an issue under the label &lt;code&gt;question&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>