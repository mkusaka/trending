<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-23T01:49:10Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>redcanaryco/atomic-red-team</title>
    <updated>2022-10-23T01:49:10Z</updated>
    <id>tag:github.com,2022-10-23:/redcanaryco/atomic-red-team</id>
    <link href="https://github.com/redcanaryco/atomic-red-team" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Small and highly portable detection tests based on MITRE&#39;s ATT&amp;CK.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://redcanary.com/wp-content/uploads/Atomic-Red-Team-Logo.png&#34; width=&#34;150px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Atomic Red Team&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/redcanaryco/atomic-red-team/actions/workflows/validate-atomics.yml/badge.svg?branch=master&#34; alt=&#34;GitHub Action Status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Atomic Red Team‚Ñ¢ is a library of tests mapped to the &lt;a href=&#34;https://attack.mitre.org/&#34;&gt;MITRE ATT&amp;amp;CK¬Æ&lt;/a&gt; framework. Security teams can use Atomic Red Team to quickly, portably, and reproducibly test their environments.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;You can execute atomic tests directly from the command line, no installation required. See the &lt;a href=&#34;https://github.com/redcanaryco/atomic-red-team/wiki/Getting-Started&#34;&gt;Getting started&lt;/a&gt; page of our wiki.&lt;/p&gt; &#xA;&lt;p&gt;For a more robust testing experience, consider using an execution framework like &lt;a href=&#34;https://github.com/redcanaryco/invoke-atomicredteam&#34;&gt;Invoke-Atomic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;The Atomic Red Team documentation is available as a &lt;a href=&#34;https://github.com/redcanaryco/atomic-red-team/wiki/&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information about the philosophy and development of Atomic Red Team, visit our website at &lt;a href=&#34;https://atomicredteam.io&#34;&gt;https://atomicredteam.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to Atomic Red Team&lt;/h2&gt; &#xA;&lt;p&gt;Atomic Red Team is open source and community developed. If you&#39;re interested in becoming a contributor, check out these resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://slack.atomicredteam.io&#34;&gt;Slack workspace&lt;/a&gt; and get involved with the community. Don&#39;t forget to review the &lt;a href=&#34;https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; before you join.&lt;/li&gt; &#xA; &lt;li&gt;Report bugs and request new features by &lt;a href=&#34;https://github.com/redcanaryco/atomic-red-team/issues/new/choose&#34;&gt;submitting an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read our &lt;a href=&#34;https://github.com/redcanaryco/atomic-red-team/wiki/Contributing&#34;&gt;contribution guide&lt;/a&gt; for more information about contributing directly to this repository.&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt&#34;&gt;license&lt;/a&gt; for information regarding the distribution and modification of Atomic Red Team.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MicrosoftDocs/windows-driver-docs</title>
    <updated>2022-10-23T01:49:10Z</updated>
    <id>tag:github.com,2022-10-23:/MicrosoftDocs/windows-driver-docs</id>
    <link href="https://github.com/MicrosoftDocs/windows-driver-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Windows Driver Kit documentation sources&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h1&gt;Windows Driver Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the Windows driver docs repository, housing the source for the official &lt;a href=&#34;https://learn.microsoft.com/windows-hardware/drivers&#34;&gt;Windows hardware developer documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for the driver reference (API/DDI) documentation, it&#39;s in the &lt;a href=&#34;https://github.com/MicrosoftDocs/windows-driver-docs-ddi&#34;&gt;&lt;code&gt;windows-driver-docs-ddi&lt;/code&gt; GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We actively merge contributions into this repository via &lt;a href=&#34;https://help.github.com/articles/using-pull-requests/&#34;&gt;pull request&lt;/a&gt; into the &lt;em&gt;staging&lt;/em&gt; branch (for the public repo) or the &lt;em&gt;main&lt;/em&gt; branch (for the private repo).&lt;/p&gt; &#xA;&lt;p&gt;For more information on contributing, read our &lt;a href=&#34;https://raw.githubusercontent.com/MicrosoftDocs/windows-driver-docs/staging/CONTRIBUTING.md&#34;&gt;contributions guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dataplat/dbatools</title>
    <updated>2022-10-23T01:49:10Z</updated>
    <id>tag:github.com,2022-10-23:/dataplat/dbatools</id>
    <link href="https://github.com/dataplat/dbatools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄ SQL Server automation and instance migrations have never been safer, faster or freer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://open.vscode.dev/dataplat/dbatools&#34;&gt;Open in Visual Studio Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img align=&#34;left&#34; src=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/bin/dbatools.png&#34; alt=&#34;dbatools logo&#34;&gt; dbatools is PowerShell module that you may think of like a command-line SQL Server Management Studio. The project initially started out as just &lt;code&gt;Start-SqlMigration.ps1&lt;/code&gt;, but has now grown into a collection of &lt;a href=&#34;https://dbatools.io/commands&#34;&gt;over 500 commands&lt;/a&gt; that help automate SQL Server tasks and encourage best practices.&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute to the project? We&#39;d love to have you! Visit our &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/contributing.md&#34;&gt;contributing.md&lt;/a&gt; for a jump start.&lt;/p&gt; &#xA;&lt;p&gt;Want to say thanks? Click the star at the top of the page üåü&lt;/p&gt; &#xA;&lt;h2&gt;Key links for reference:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlcommunity.slack.com/messages/C1M2WEASG/&#34;&gt;dbatools Slack channel&lt;/a&gt; for general discussion on the module and asking questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlcommunity.slack.com/messages/C3EJ852JD/&#34;&gt;dbatools-dev Slack channel&lt;/a&gt; for discussion around contributing to the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dbatools.io&#34;&gt;dbatools documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Need an invite to the SQL Community Slack workspace? Check out the &lt;a href=&#34;https://dbatools.io/slack/&#34;&gt;self-invite page&lt;/a&gt;. Drop by if you&#39;d like to chat about dbatools or even &lt;a href=&#34;https://dbatools.io/team&#34;&gt;join the team&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installer&lt;/h2&gt; &#xA;&lt;p&gt;dbatools now works on PowerShell Core (aka PowerShell 6+). This means that you can run a large majority of our commands on &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;macOS &lt;/strong&gt;ü§©üëç&lt;/p&gt; &#xA;&lt;p&gt;Run the following to install dbatools from the PowerShell Gallery (to install on a server or for all users, remove the &lt;code&gt;-Scope&lt;/code&gt; parameter and run in an elevated session):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module dbatools -Scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have a version of PowerShell that supports the PowerShell Gallery, you can install it manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Invoke-Expression (Invoke-WebRequest https://dbatools.io/in)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: please only use &lt;code&gt;Invoke-Expression (Invoke-WebRequest..)&lt;/code&gt; from sources you trust, like us üëç&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage scenarios&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the simple things you can do in SSMS (e.g. starting a job, backing up a database), we&#39;ve also read a whole bunch of docs and came up with commands that do nifty things quickly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lost sysadmin access and need to regain entry to your SQL Server? Use &lt;a href=&#34;http://dbatools.io/Reset-DbaAdmin&#34;&gt;Reset-DbaAdmin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Need to easily test your backups? Use &lt;a href=&#34;http://dbatools.io/Test-DbaLastBackup&#34;&gt;Test-DbaLastBackup&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;SPN management got you down? Use &lt;a href=&#34;http://dbatools.io/schwifty&#34;&gt;our suite of SPN commands&lt;/a&gt; to find which SPNs are missing and easily add them.&lt;/li&gt; &#xA; &lt;li&gt;Got so many databases you can&#39;t keep track? Congrats on your big ol&#39; environment! Use &lt;a href=&#34;http://dbatools.io/Find-DbaDatabase&#34;&gt;Find-DbaDatabase&lt;/a&gt; to easily find your database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage examples&lt;/h2&gt; &#xA;&lt;p&gt;As previously mentioned, dbatools now offers &lt;a href=&#34;https://dbatools.io/commands&#34;&gt;over 500 commands&lt;/a&gt;! &lt;a href=&#34;https://gist.github.com/potatoqualitee/e8932b64aeb6ef404e252d656b6318a2&#34;&gt;Here are some of the ones we highlight at conferences&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;PowerShell v3 and above required. (See below for important information about alternative logins and specifying SQL Server ports).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Set some vars&#xA;$new = &#34;localhost\sql2016&#34;&#xA;$old = $instance = &#34;localhost&#34;&#xA;$allservers = $old, $new&#xA;&#xA;# Alternatively, use Registered Servers&#xA;$allservers = Get-DbaRegServer -SqlInstance $instance&#xA;&#xA;# Need to restore a database? It can be as simple as this:&#xA;Restore-DbaDatabase -SqlInstance $instance -Path &#34;C:\temp\AdventureWorks2012-Full Database Backup.bak&#34;&#xA;&#xA;# Use Ola Hallengren&#39;s backup script? We can restore an *ENTIRE INSTANCE* with just one line&#xA;Get-ChildItem -Directory \\workstation\backups\sql2012 | Restore-DbaDatabase -SqlInstance $new&#xA;&#xA;# What about if you need to make a backup? And you are logging in with alternative credentials?&#xA;Get-DbaDatabase -SqlInstance $new -SqlCredential sqladmin | Backup-DbaDatabase&#xA;&#xA;# Testing your backups is crazy easy!&#xA;Start-Process https://dbatools.io/Test-DbaLastBackup&#xA;Test-DbaLastBackup -SqlInstance $old | Out-GridView&#xA;&#xA;# But what if you want to test your backups on a different server?&#xA;Test-DbaLastBackup -SqlInstance $old -Destination $new | Out-GridView&#xA;&#xA;# Nowadays, we don&#39;t just backup databases. Now, we&#39;re backing up logins&#xA;Export-DbaLogin -SqlInstance $instance -Path C:\temp\logins.sql&#xA;Invoke-Item C:\temp\logins.sql&#xA;&#xA;# And Agent Jobs&#xA;Get-DbaAgentJob -SqlInstance $old | Export-DbaScript -Path C:\temp\jobs.sql&#xA;&#xA;# What if you just want to script out your restore?&#xA;Get-ChildItem -Directory \\workstation\backups\subset\ | Restore-DbaDatabase -SqlInstance $new -OutputScriptOnly -WithReplace | Out-File -Filepath c:\temp\restore.sql&#xA;Invoke-Item c:\temp\restore.sql&#xA;&#xA;# You&#39;ve probably heard about how easy migrations can be with dbatools. Here&#39;s an example&#xA;$startDbaMigrationSplat = @{&#xA;    Source = $old&#xA;    Destination = $new&#xA;    BackupRestore = $true&#xA;    SharedPath = &#39;C:\temp&#39;&#xA;    Exclude = &#39;BackupDevice&#39;,&#39;SysDbUserObjects&#39;,&#39;Credentials&#39;&#xA;}&#xA;&#xA;Start-DbaMigration @startDbaMigrationSplat -Force | Select-Object * | Out-GridView&#xA;&#xA;# Know how snapshots used to be a PITA? Now they&#39;re super easy&#xA;New-DbaDbSnapshot -SqlInstance $new -Database db1 -Name db1_snapshot&#xA;Get-DbaDbSnapshot -SqlInstance $new&#xA;Get-DbaProcess -SqlInstance $new -Database db1 | Stop-DbaProcess&#xA;Restore-DbaFromDatabaseSnapshot -SqlInstance $new -Database db1 -Snapshot db1_snapshot&#xA;Remove-DbaDbSnapshot -SqlInstance $new -Snapshot db1_snapshot # or -Database db1&#xA;&#xA;# Have you tested your last good DBCC CHECKDB? We&#39;ve got a command for that&#xA;$old | Get-DbaLastGoodCheckDb | Out-GridView&#xA;&#xA;# Here&#39;s how you can find your integrity jobs and easily start them. Then, you can watch them run, and finally check your newest DBCC CHECKDB results&#xA;$old | Get-DbaAgentJob | Where-Object Name -match integrity | Start-DbaAgentJob&#xA;$old | Get-DbaRunningJob&#xA;$old | Get-DbaLastGoodCheckDb | Out-GridView&#xA;&#xA;# Our new build website is super useful!&#xA;Start-Process https://dbatools.io/builds&#xA;&#xA;# You can use the same JSON the website uses to check the status of your own environment&#xA;$allservers | Get-DbaBuild&#xA;&#xA;# We evaluated 37,545 SQL Server stored procedures on 9 servers in 8.67 seconds!&#xA;$new | Find-DbaStoredProcedure -Pattern dbatools&#xA;&#xA;# Have an employee who is leaving? Find all of their objects.&#xA;$allservers | Find-DbaUserObject -Pattern ad\jdoe | Out-GridView&#xA;&#xA;# Find detached databases, by example&#xA;Detach-DbaDatabase -SqlInstance $instance -Database AdventureWorks2012&#xA;Find-DbaOrphanedFile -SqlInstance $instance | Out-GridView&#xA;&#xA;# Check out how complete our sp_configure command is&#xA;Get-DbaSpConfigure -SqlInstance $new | Out-GridView&#xA;&#xA;# Easily update configuration values&#xA;Set-DbaSpConfigure -SqlInstance $new -ConfigName XPCmdShellEnabled -Value $true&#xA;&#xA;# DB Cloning too!&#xA;Invoke-DbaDbClone -SqlInstance $new -Database db1 -CloneDatabase db1_clone | Out-GridView&#xA;&#xA;# Read and watch XEvents&#xA;Get-DbaXESession -SqlInstance $new -Session system_health | Read-DbaXEFile&#xA;Get-DbaXESession -SqlInstance $new -Session system_health | Read-DbaXEFile | Select-Object -ExpandProperty Fields | Out-GridView&#xA;&#xA;# Reset-DbaAdmin&#xA;Reset-DbaAdmin -SqlInstance $instance -Login sqladmin -Verbose&#xA;Get-DbaDatabase -SqlInstance $instance -SqlCredential sqladmin&#xA;&#xA;# sp_whoisactive&#xA;Install-DbaWhoIsActive -SqlInstance $instance -Database master&#xA;Invoke-DbaWhoIsActive -SqlInstance $instance -ShowOwnSpid -ShowSystemSpids&#xA;&#xA;# Diagnostic query!&#xA;$instance | Invoke-DbaDiagnosticQuery -UseSelectionHelper | Export-DbaDiagnosticQuery -Path $home&#xA;Invoke-Item $home&#xA;&#xA;# Ola, yall&#xA;$instance | Install-DbaMaintenanceSolution -ReplaceExisting -BackupLocation C:\temp -InstallJobs&#xA;&#xA;# Startup parameters&#xA;Get-DbaStartupParameter -SqlInstance $instance&#xA;Set-DbaStartupParameter -SqlInstance $instance -SingleUser -WhatIf&#xA;&#xA;# Database clone&#xA;Invoke-DbaDbClone -SqlInstance $new -Database dbwithsprocs -CloneDatabase dbwithsprocs_clone&#xA;&#xA;# Schema change and Pester tests&#xA;Get-DbaSchemaChangeHistory -SqlInstance $new -Database tempdb&#xA;&#xA;# Get Db Free Space AND write it to table&#xA;Get-DbaDbSpace -SqlInstance $instance | Out-GridView&#xA;Get-DbaDbSpace -SqlInstance $instance -IncludeSystemDB | ConvertTo-DbaDataTable | Write-DbaDataTable -SqlInstance $instance -Database tempdb -Table DiskSpaceExample -AutoCreateTable&#xA;Invoke-DbaQuery -SqlInstance $instance -Database tempdb -Query &#39;SELECT * FROM dbo.DiskSpaceExample&#39; | Out-GridView&#xA;&#xA;# History&#xA;Get-Command -Module dbatools *history*&#xA;&#xA;# Identity usage&#xA;Test-DbaIdentityUsage -SqlInstance $instance | Out-GridView&#xA;&#xA;# Test/Set SQL max memory&#xA;$allservers | Get-DbaMaxMemory&#xA;$allservers | Test-DbaMaxMemory | Format-Table&#xA;$allservers | Test-DbaMaxMemory | Where-Object { $_.SqlMaxMB -gt $_.TotalMB } | Set-DbaMaxMemory -WhatIf&#xA;Set-DbaMaxMemory -SqlInstance $instance -MaxMb 1023&#xA;&#xA;# Testing sql server linked server connections&#xA;Test-DbaLinkedServerConnection -SqlInstance $instance&#xA;&#xA;# See protocols&#xA;Get-DbaServerProtocol -ComputerName $instance | Out-GridView&#xA;&#xA;# Reads trace files - default trace by default&#xA;Read-DbaTraceFile -SqlInstance $instance | Out-GridView&#xA;&#xA;# don&#39;t have remoting access? Explore the filesystem. Uses master.sys.xp_dirtree&#xA;Get-DbaFile -SqlInstance $instance&#xA;&#xA;# Test your SPNs and see what&#39;d happen if you&#39;d set them&#xA;$servers | Test-DbaSpn | Out-GridView&#xA;$servers | Test-DbaSpn | Out-GridView -PassThru | Set-DbaSpn -WhatIf&#xA;&#xA;# Get Virtual Log File information&#xA;Get-DbaDbVirtualLogFile -SqlInstance $new -Database db1&#xA;Get-DbaDbVirtualLogFile -SqlInstance $new -Database db1 | Measure-Object&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important Note&lt;/h2&gt; &#xA;&lt;h4&gt;Alternative SQL Credentials&lt;/h4&gt; &#xA;&lt;p&gt;By default, all SQL-based commands will login to SQL Server using Trusted/Windows Authentication. To use alternative credentials, including SQL Logins or alternative Windows credentials, use the &lt;code&gt;-SqlCredential&lt;/code&gt;. This parameter accepts the results of &lt;code&gt;Get-Credential&lt;/code&gt; which generates a &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/get-credential?view=powershell-5.1&#34;&gt;PSCredential&lt;/a&gt; object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-DbaDatabase -SqlInstance sql2017 -SqlCredential sqladmin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dbatools.io/wp-content/uploads/2016/05/cred.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-6897&#34; src=&#34;https://dbatools.io/wp-content/uploads/2016/05/cred.jpg&#34; alt=&#34;&#34; width=&#34;322&#34; height=&#34;261&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A few (or maybe just one - &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/Restore-DbaDatabase&#34;&gt;Restore-DbaDatabase&lt;/a&gt;), you can also use &lt;code&gt;-AzureCredential&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Alternative Windows Credentials&lt;/h4&gt; &#xA;&lt;p&gt;For commands that access Windows such as &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/Get-DbaDiskSpace&#34;&gt;Get-DbaDiskSpace&lt;/a&gt;, you will pass the &lt;code&gt;-Credential&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$cred = Get-Credential ad\winadmin&#xA;Get-DbaDiskSpace -ComputerName sql2017 -Credential $cred&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To store credentials to disk, please read more at &lt;a href=&#34;https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/&#34;&gt;Jaap Brasser&#39;s blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Servers with custom ports&lt;/h4&gt; &#xA;&lt;p&gt;If you use non-default ports and SQL Browser is disabled, you can access servers using a semicolon (functionality we&#39;ve added) or a comma (the way Microsoft does it).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;-SqlInstance sql2017:55559&#xA;-SqlInstance &#39;sql2017,55559&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that PowerShell sees commas as arrays, so you must surround the host name with quotes.&lt;/p&gt; &#xA;&lt;h4&gt;Using Start-Transcript&lt;/h4&gt; &#xA;&lt;p&gt;Due to an &lt;a href=&#34;https://github.com/dataplat/dbatools/issues/2722&#34;&gt;issue&lt;/a&gt; in the way PowerShell 5.1 works you need to use &lt;code&gt;Import-Module dbatools&lt;/code&gt; before you run &lt;code&gt;Start-Transcript&lt;/code&gt;. If this isn&#39;t done then your transcript will stop when the module is imported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-Module dbatools&#xA;Start-Transcript&#xA;Get-DbaDatabase -SqlInstance sql2017&#xA;Stop-Transcript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;dbatools aims to support as many configurations as possible, including&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell v3 and above&lt;/li&gt; &#xA; &lt;li&gt;Windows, macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;SQL Server 2000 - Current&lt;/li&gt; &#xA; &lt;li&gt;Express - Datacenter Edition&lt;/li&gt; &#xA; &lt;li&gt;Clustered and stand-alone instances&lt;/li&gt; &#xA; &lt;li&gt;Windows and SQL authentication&lt;/li&gt; &#xA; &lt;li&gt;Default and named instances&lt;/li&gt; &#xA; &lt;li&gt;Multiple instances on one server&lt;/li&gt; &#xA; &lt;li&gt;Auto-populated parameters for command-line completion (think -Database and -Login)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more at our website at &lt;a href=&#34;https://dbatools.io&#34;&gt;dbatools.io&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>