<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-29T01:43:15Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/Agents</title>
    <updated>2025-06-29T01:43:15Z</updated>
    <id>tag:github.com,2025-06-29:/microsoft/Agents</id>
    <link href="https://github.com/microsoft/Agents" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Microsoft 365 Agent SDK simplifies building full stack, multichannel, trusted agents for platforms including M365, Teams, Copilot Studio, and Webchat.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft 365 Agents SDK&lt;/h1&gt; &#xA;&lt;p&gt;With the Microsoft 365 Agents SDK, you can create agents deployable to channels of your choice, such as Microsoft 365 Copilot, Microsoft Teams, Web &amp;amp; Custom Apps and more, with scaffolding to handle the required communication. Developers can use the AI Services of their choice, and make the agents they build available using the channel management capabilities of the SDK.&lt;/p&gt; &#xA;&lt;p&gt;Developers need the flexibility to integrate agents from any provider or technology stack into their enterprise systems. The Agents SDK simplifies the implementation of agentic patterns using the AI of their choice, allowing them to select one or more services, models, or agents to meet their specific requirements.&lt;/p&gt; &#xA;&lt;p&gt;Use the Agents SDK to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quickly build an agent &#39;container&#39; with state, storage, and the ability to manage activities and events. Deploy this container across any channel, such as Microsoft 365 Copilot or Microsoft Teams.&lt;/li&gt; &#xA; &lt;li&gt;Implement agentic patterns without being restricted to a specific technology stack. The Agents SDK is agnostic regarding the AI you choose.&lt;/li&gt; &#xA; &lt;li&gt;Customize your agent to align with the specific behaviors of clients, such as Microsoft Teams.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related SDKs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Kernel&lt;/strong&gt;. &lt;a href=&#34;https://learn.microsoft.com/en-us/semantic-kernel/overview/&#34;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&#34;https://platform.openai.com/docs/introduction&#34;&gt;OpenAI&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/en-us/products/ai-services/openai-service&#34;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&#34;https://huggingface.co/&#34;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&#34;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&#34;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&#34;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&#34;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Azure AI Foundry&lt;/strong&gt;. Provides the core backend agent functionality, providing reasoning, retrieval augmentation, observability, among other core functions. Developers can leverage the Azure AI Agent Service or build their agent functionality with individual components from this SDK.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;SharePoint Embedded Copilot&lt;/strong&gt;. The SharePoint Embedded Copilot SDK provides a React component that allows you to add a copilot agent to your SharePoint Embedded React application. You can dynamically scope the knowledge for the copilot interaction to a single file, folder or a set of containers mapped to the application. The SDK also allows you to configure the agent text, starter prompts and copilot instructions. Click &lt;a href=&#34;https://github.com/microsoft/SharePoint-Embedded-Samples/raw/main/Copilot/README.md&#34;&gt;here&lt;/a&gt; to learn more.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The M365 Agents SDK brings together core components to allow for developers to create, manage and utilize AI Services and third-party SDKs to power orchestration and develop custom agent logic functionality.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;The source for the client libraries exists for the most part in repositories for each language. This repository is meant to be a jumping off point into those language specific repositories. Issues related to a specific language should be opened in the corresponding repository but cross cutting issues can be opened in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Language&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Repo&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Documentation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;General&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/Agents&#34;&gt;Agents Repository&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://aka.ms/M365-Agents-SDK-Docs&#34;&gt;Agents SDK Documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;C# /.NET&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/Agents-for-net&#34;&gt;Agents-for-net Repository&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Coming Soon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/Agents-for-js&#34;&gt;Agents-for-js Repository&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Coming Soon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Python&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/Agents-for-python&#34;&gt;Agents-for-python Repository&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Coming Soon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Using other services with the Agents SDK&lt;/h2&gt; &#xA;&lt;p&gt;Your use of other services in connection with the Microsoft 365 Agents SDK is governed by the respective agreements for those services, which may include codes of conduct and other restrictions&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Recommended VS Code Extensions&lt;/h2&gt; &#xA;&lt;p&gt;To ensure a consistent development environment, we recommend using the following VS Code extensions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Extension&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&#34;&gt;ESLint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrates &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; into VS Code. Allows you to find an fix problems in JavaScript code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat&#34;&gt;GitHub Copilot Chat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/copilot/overview&#34;&gt;GitHub Copilot&lt;/a&gt; is an AI peer programming tool that helps you write code faster and smarter.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; provides cloud-hosted development environments for any activity - whether it&#39;s a long-term project, or a short-term task like reviewing a pull request.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit&#34;&gt;C# Dev Kit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C# Dev Kit helps you manage your code with a solution explorer and test your code with integrated unit test discovery and execution, elevating your C# development experience wherever you like to develop (Windows, macOS, Linux, and even in a Codespace).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.vscode-adaptive-cards&#34;&gt;Adaptive Card Previewer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Microsoft Adaptive Card Previewer uses the latest rendering stack for Microsoft Teams to provide a more accurate preview of Adaptive Cards. You can open a side-by-side preview to view changes live, toggle between light, dark, and high-contrast themes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;These are listed in &lt;code&gt;.vscode/extensions.json&lt;/code&gt;, so VS Code should prompt you to install them when you open the project.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/AL-Go</title>
    <updated>2025-06-29T01:43:15Z</updated>
    <id>tag:github.com,2025-06-29:/microsoft/AL-Go</id>
    <link href="https://github.com/microsoft/AL-Go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The plug-and-play DevOps solution for Business Central app development on GitHub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AL-Go for GitHub&lt;/h1&gt; &#xA;&lt;p&gt;AL-Go for GitHub is a set of GitHub templates and actions, which can be used to setup and maintain professional DevOps processes for your Business Central AL projects.&lt;/p&gt; &#xA;&lt;p&gt;The goal is that people who have created their GitHub repositories based on the AL-Go templates, can maintain these repositories and stay current just by running a workflow, which updates their repositories. This includes necessary changes to scripts and workflows to cope with new features and functions in Business Central.&lt;/p&gt; &#xA;&lt;p&gt;The roadmap for AL-Go for GitHub can be found here: &lt;a href=&#34;https://aka.ms/ALGoRoadmap&#34;&gt;https://aka.ms/ALGoRoadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Release notes for all versions of AL-Go for GitHub can be found &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/RELEASENOTES.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Deprecations for all versions of AL-Go for GitHub can be found &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/DEPRECATIONS.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The template repositories to use as starting point are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/AL-Go-PTE&#34;&gt;https://github.com/microsoft/AL-Go-PTE&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/algopte&#34;&gt;https://aka.ms/algopte&lt;/a&gt; is the GitHub repository template for Per Tenant Extensions. When creating a Per Tenant Extensions, this is your starting point.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/AL-Go-AppSource&#34;&gt;https://github.com/microsoft/AL-Go-AppSource&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/algoappsource&#34;&gt;https://aka.ms/algoappsource&lt;/a&gt; is the GitHub repository template for AppSource apps. When creating an AppSource App, this is your starting point.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AL-Go Workshop&lt;/h2&gt; &#xA;&lt;p&gt;Try out the &lt;a href=&#34;https://aka.ms/algoworkshop&#34;&gt;AL-Go workshop&lt;/a&gt; for an in-depth workshop on AL-Go for GitHub functionality or examine the below usage scenarios, which explains how to get started and how to perform the most common tasks.&lt;/p&gt; &#xA;&lt;h2&gt;Usage scenarios&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/GetStarted.md&#34;&gt;Create a new per-tenant extension (like AL Go) and start developing in VS Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/AddATestApp.md&#34;&gt;Add a test app to an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/RegisterSandboxEnvironment.md&#34;&gt;Register a customer sandbox environment for Continuous Deployment using S2S&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/CreateRelease.md&#34;&gt;Create a release of your application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/RegisterProductionEnvironment.md&#34;&gt;Register a customer production environment for Manual Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/GhTokenWorkflow.md&#34;&gt;Create a GhTokenWorkflow secret&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/UpdateAlGoSystemFiles.md&#34;&gt;Update AL-Go system files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/UseAzureKeyVault.md&#34;&gt;Use Azure KeyVault for secrets with AL-Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/CreateOnlineDevEnv.md&#34;&gt;Create Online Development Environment from VS Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/CreateOnlineDevEnv2.md&#34;&gt;Create Online Development Environment from GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/SetupCiCdForExistingPTE.md&#34;&gt;Set up CI/CD for an existing per tenant extension (BingMaps)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/SetupCiCdForExistingAppSourceApp.md&#34;&gt;Set up CI/CD for an existing AppSource App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/EnableKeyVaultForAppSourceApp.md&#34;&gt;Enable KeyVault access for your AppSource App during development and/or tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/SelfHostedGitHubRunner.md&#34;&gt;Set up your own GitHub runner to increase build performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/AppDependencies.md&#34;&gt;Introducing a dependency to another GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/EnablingTelemetry.md&#34;&gt;Enabling Telemetry for AL-Go workflows and actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/AddAPerformanceTestApp.md&#34;&gt;Add a performance test app to an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/PublishToAppSource.md&#34;&gt;Publish your app to AppSource&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/SetupPowerPlatform.md&#34;&gt;Connect your GitHub repository to Power Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/SetupServicePrincipalForPowerPlatform.md&#34;&gt;How to set up Service Principal for Power Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/TryPowerPlatformSamples.md&#34;&gt;Try one of the Business Central and Power Platform samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/CustomizingALGoForGitHub.md&#34;&gt;Customizing AL-Go for GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Migration scenarios&lt;/h2&gt; &#xA;&lt;p&gt;A. &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/MigrateFromAzureDevOpsWithoutHistory.md&#34;&gt;Migrate a repository from Azure DevOps to AL-Go for GitHub without history&lt;/a&gt;&lt;br&gt; B. &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/MigrateFromAzureDevOpsWithHistory.md&#34;&gt;Migrate a repository from Azure DevOps to AL-Go for GitHub with history&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/settings.md&#34;&gt;this description&lt;/a&gt; to learn about the settings file and how you can modify default behaviors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;This project&lt;/h1&gt; &#xA;&lt;p&gt;This project in the main source repository for AL-Go for GitHub. This project is deployed on every release to a branch in the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/AL-Go-PTE&#34;&gt;https://github.com/microsoft/AL-Go-PTE&lt;/a&gt; is the GitHub repository template for Per Tenant Extenstions. For creating a Per Tenant Extensions, this is your starting point.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/AL-Go-AppSource&#34;&gt;https://github.com/microsoft/AL-Go-AppSource&lt;/a&gt; is the GitHub repository template for AppSource apps. For creating an AppSource App, this is your starting point.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/AL-Go-Actions&#34;&gt;https://github.com/microsoft/AL-Go-Actions&lt;/a&gt; is the GitHub repository containing the GitHub Actions used by the templates above.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AL-Go/main/Scenarios/Contribute.md&#34;&gt;this document&lt;/a&gt; to understand how to contribute to AL-Go for GitHub.&lt;/p&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2216858&amp;amp;clcid=0x409&#34;&gt;Developing Extensions in AL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/04/26/al-go-for-github/&#34;&gt;AL-Go for GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/04/27/migrating-to-al-go-for-github/&#34;&gt;Migrating to AL-Go for GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/04/28/structuring-your-github-repositories/&#34;&gt;Structuring your AL-Go for GitHub repositories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/05/02/al-go-for-github-preview-bits/&#34;&gt;Preview of future AL-Go for GitHub functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/05/03/branching-strategies-for-your-al-go-for-github-repo/&#34;&gt;Branching strategies for your AL-Go for GitHub repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/05/06/deployment-strategies-and-al-go-for-github/&#34;&gt;Deployment strategies and AL-Go for GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freddysblog.com/2022/05/14/secrets-in-al-go-for-github/&#34;&gt;Secrets in AL-Go for GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
</feed>