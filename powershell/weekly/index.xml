<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-16T02:01:41Z</updated>
  <subtitle>Weekly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amitxv/PC-Tuning</title>
    <updated>2023-07-16T02:01:41Z</updated>
    <id>tag:github.com,2023-07-16:/amitxv/PC-Tuning</id>
    <link href="https://github.com/amitxv/PC-Tuning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configure Windows based systems for real-time tasks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PC-Tuning&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/yrAnChXXZw&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/994887453599076422/widget.png?style=shield&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/amitxv&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Rationale&lt;/h2&gt; &#xA;&lt;p&gt;Windows is notorious for its ever-growing bloatware, third party telemetry, excessive context switching, interrupts and I/O. This repository was created in hope of standardizing systems for latency sensitive tasks and minimizing unwanted outgoing traffic. Note that the operating system related sections are not indented to be followed on existing installs. On the contrary, the mentioned sections will guide you to customize an ISO using DISM then reinstall Windows properly.&lt;/p&gt; &#xA;&lt;p&gt;This repository may contain information similar to those of the projects listed in the &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/#further-reading&#34;&gt;Further Reading&lt;/a&gt; section, however it is not my intention to directly copy from them.&lt;/p&gt; &#xA;&lt;p&gt;The guidance is currently updated and has been tested on client and server editions of Windows 7 through to Windows 11 (x64). See a full list of &lt;a href=&#34;https://github.com/amitxv/PC-Tuning/issues&#34;&gt;issues&lt;/a&gt;. Users are expected to follow the guidance in the order listed below starting with &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/#physical-setup&#34;&gt;Physical Setup&lt;/a&gt; through to &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/#post-install-instructions&#34;&gt;Post-Install Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;USB Storage Device (8&amp;nbsp;GB minimum)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ventoy/Ventoy/releases&#34;&gt;Ventoy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any live Linux distribution&lt;/li&gt; &#xA; &lt;li&gt;Familiarity with navigating directories in CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Physical Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/docs/physical-setup.md&#34;&gt;docs/physical-setup.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-Install Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/docs/pre-install.md&#34;&gt;docs/pre-install.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Post-Install Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/docs/post-install.md&#34;&gt;docs/post-install.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Research&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/amitxv/PC-Tuning/main/docs/research.md&#34;&gt;docs/research.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BoringBoredom/PC-Optimization-Hub&#34;&gt;BoringBoredom/PC-Optimization-Hub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1c2-lUJq74wuYK1WrA_bIvgb89dUN0sj8-hO3vqmrau4&#34;&gt;Calypto&#39;s Latency Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/djdallmann/GamingPCSetup&#34;&gt;djdallmann/GamingPCSetup&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/klasbo/GamePerfTesting&#34;&gt;klasbo/GamePerfTesting&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sieger/handbook&#34;&gt;sieger/handbook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows Internals, Part 1: System Architecture, Processes, Threads, Memory Management, and More&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows Internals, Part 2&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>raspberrypi/pico-setup-windows</title>
    <updated>2023-07-16T02:01:41Z</updated>
    <id>tag:github.com,2023-07-16:/raspberrypi/pico-setup-windows</id>
    <link href="https://github.com/raspberrypi/pico-setup-windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pico setup for Windows&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/raspberrypi/pico-setup-windows/releases/latest/download/pico-setup-windows-x64-standalone.exe&#34;&gt;Download the latest release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project aims to create an easy-to-use installer to get started on Windows (using the C/C++ SDK) with &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-pico/&#34;&gt;Raspberry Pi Pico&lt;/a&gt; and other RP2040-based boards. It is inspired by, and is roughly equivalent to, the &lt;a href=&#34;https://github.com/raspberrypi/pico-setup&#34;&gt;pico-setup&lt;/a&gt; project for Linux systems.&lt;/p&gt; &#xA;&lt;p&gt;The installer automates the prerequisite installation on Windows, as explained in the official &lt;a href=&#34;https://datasheets.raspberrypi.com/pico/getting-started-with-pico.pdf&#34;&gt;Getting started with Raspberry Pi Pico&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;The rest of this README document is about developing the installer itself. If you just want to install and use the compilers and toolchain, download the release linked to above. Further information for users is in the &lt;a href=&#34;https://raw.githubusercontent.com/raspberrypi/pico-setup-windows/master/docs/tutorial.md&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Included software&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads&#34;&gt;Arm GNU Toolchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ninja-build/ninja/releases&#34;&gt;Ninja&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/windows/&#34;&gt;Python 3.9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git for Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openocd-org/openocd/&#34;&gt;OpenOCD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;You will need PowerShell 7.2 or newer in order to run the build script. See &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows&#34;&gt;Installing PowerShell on Windows&lt;/a&gt; for download links and instructions. Note that this is needed only for building the installer itself, and not for end-user machines where the installer will be run.&lt;/p&gt; &#xA;&lt;p&gt;The installers are built with &lt;a href=&#34;https://nsis.sourceforge.io/Download&#34;&gt;NSIS 3&lt;/a&gt;. The NSIS script is generated by &lt;a href=&#34;https://raw.githubusercontent.com/raspberrypi/pico-setup-windows/master/build.ps1&#34;&gt;build.ps1&lt;/a&gt; when provided with a JSON configuration file. The build script automatically downloads a local copy of NSIS to use for the build.&lt;/p&gt; &#xA;&lt;p&gt;Only x86-64 builds are supported at this time.&lt;/p&gt; &#xA;&lt;p&gt;Compiling OpenOCD and other tools (picotool, pioasm, elf2uf2) requires an installation of &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt;. The build script automatically downloads and installs a local copy of MSYS2. You can specify a path to an existing copy of MSYS2 using the &lt;code&gt;-MSYS2Path&lt;/code&gt; option. The build script will install a copy of MSYS2 at this path if it doesn&#39;t find an existing copy.&lt;/p&gt; &#xA;&lt;p&gt;It is highly recommended to use a dedicated copy of MSYS2 for this build.&lt;/p&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\build.ps1 .\config\x64-standalone.json -MSYS2Path ~\Downloads\msys64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The built installers will be saved to the &lt;code&gt;bin&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h1&gt;Tests&lt;/h1&gt; &#xA;&lt;p&gt;There are tests for some parts of the build scripts. You can run them like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module Pester -Force&#xA;Import-Module Pester -PassThru # Check the version of the imported module -- we need v5 or greater&#xA;Invoke-Pester -Output Detailed&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>HoussemDellai/docker-kubernetes-course</title>
    <updated>2023-07-16T02:01:41Z</updated>
    <id>tag:github.com,2023-07-16:/HoussemDellai/docker-kubernetes-course</id>
    <link href="https://github.com/HoussemDellai/docker-kubernetes-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demoing Kubernetes/AKS features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-kubernetes-course&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HJ6F05Pm5mQ&amp;amp;list=PLpbcUe4chE79sB7Jg7B4z3HytqUUEwcNE&#34;&gt;https://www.youtube.com/watch?v=HJ6F05Pm5mQ&amp;amp;list=PLpbcUe4chE79sB7Jg7B4z3HytqUUEwcNE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=HJ6F05Pm5mQ&amp;amp;list=PLpbcUe4chE79sB7Jg7B4z3HytqUUEwcNE&#34;&gt; &lt;img src=&#34;https://github.com/HoussemDellai/docker-kubernetes-course/raw/main/videos.jpg?raw=true&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>