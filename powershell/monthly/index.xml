<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T02:07:37Z</updated>
  <subtitle>Monthly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>farag2/Sophia-Script-for-Windows</title>
    <updated>2024-02-01T02:07:37Z</updated>
    <id>tag:github.com,2024-02-01:/farag2/Sophia-Script-for-Windows</id>
    <link href="https://github.com/farag2/Sophia-Script-for-Windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡ The most powerful PowerShell module on GitHub for fine-tuning Windows 10 &amp; Windows 11&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;right&#34;&gt;&#xA;  This page also in: &#xA; &lt;a title=&#34;Українська&#34; href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/README_uk-ua.md&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/4/49/Flag_of_Ukraine.svg?sanitize=true&#34; height=&#34;11px&#34;&gt;&lt;/a&gt; &#xA; &lt;a title=&#34;Deutsch&#34; href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/README_de-de.md&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/ba/Flag_of_Germany.svg?sanitize=true&#34; height=&#34;11px&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Sophia Script for Windows&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/img/Sophia.png&#34; alt=&#34;Sophia Script&#34; width=&#34;350&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/0/05/Windows_10_Logo.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;   &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/e/e6/Windows_11_logo.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/farag2/Sophia-Script-for-Windows/Sophia.yml?label=GitHub%20Actions&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/PowerShell%205.1%20&amp;amp;%207.3-Ready-blue.svg?color=5391FE&amp;amp;style=flat&amp;amp;logo=powershell&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/farag2/Sophia-Script-for-Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/farag2/9852d6b9569a91bf69ceba8a94cc97f4/raw/SophiaScript.json&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/farag2/Sophia-Script-for-Windows/total?label=downloads%20%28since%20May%202020%29&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.chocolatey.org/packages/sophia&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/dt/sophia?color=blue&amp;amp;label=chocolatey%20package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/tea_head_&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Logo%20by-teahead-blue?style=flat&amp;amp;logo=Twitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Made%20with-149ce2.svg?color=149ce2&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/img/heart.svg?sanitize=true&#34; height=&#34;17px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/sophianews&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Sophia%20News-Telegram-blue?style=flat&amp;amp;logo=Telegram&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/sophia_chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Sophia%20Chat-Telegram-blue?style=flat&amp;amp;logo=Telegram&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/sSryhaEv79&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1006179075263561779/widget.png?style=shield&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img title=&#34;English&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/a/a5/Flag_of_the_United_Kingdom_(1-2).svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;中国人&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_the_People&#39;s_Republic_of_China.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Deutsch&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/ba/Flag_of_Germany.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Français&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c3/Flag_of_France.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Italiano&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/0/03/Flag_of_Italy.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Русский&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/f3/Flag_of_Russia.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Українська&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/4/49/Flag_of_Ukraine.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Türkçe&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/b4/Flag_of_Turkey.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Español&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/9/9a/Flag_of_Spain.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Português&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_Portugal.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Magyar&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c1/Flag_of_Hungary.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &amp;nbsp; &lt;img title=&#34;Polski&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/1/12/Flag_of_Poland.svg?sanitize=true&#34; height=&#34;20px&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/releases/latest&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/img/SSdownloadbutton.svg?sanitize=true&#34; width=&#34;220px&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#donations&#34;&gt;Donations&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#system-requirements&#34;&gt;System Requirements&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#videos&#34;&gt;Videos&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#key-features&#34;&gt;Key features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#how-to-translate&#34;&gt;How to translate&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#sophiapp-community-edition-c--wpf&#34;&gt;SophiApp&lt;/a&gt; • &lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/raw/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About Sophia Script&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://readme-typing-svg.herokuapp.com?font=Fira+Code&amp;amp;size30&amp;amp;pause=1000&amp;amp;width=435&amp;amp;lines=Made+with+%E2%9D%A4%EF%B8%8F+of+Windows%C2%AE&#34; alt=&#34;Typing SVG&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Sophia Script for Windows is the largest PowerShell module on &lt;code&gt;GitHub&lt;/code&gt; for &lt;code&gt;Windows 10&lt;/code&gt; &amp;amp; &lt;code&gt;Windows 11&lt;/code&gt; for fine-tuning and automating the routine tasks. It offers more than 150 unique tweaks, and shows how Windows can be configured without making any harm to it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Before running&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Due to the fact that the script includes more than &lt;strong&gt;150&lt;/strong&gt; functions with different arguments, you must read the entire &lt;strong&gt;Sophia.ps1&lt;/strong&gt; carefully and &lt;strong&gt;comment out/uncomment&lt;/strong&gt; those functions that you do/do not want to be executed (without need to edit the code), or use &lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows#benchtweakgaming-sophia-script-wrapper&#34;&gt;Wrapper&lt;/a&gt;. Every tweak in the preset file has its&#39; corresponding function to &lt;strong&gt;restore the default settings&lt;/strong&gt;. Running the script is best done on a fresh install because running it on &lt;strong&gt;wrong&lt;/strong&gt; tweaked system may result in errors occurring.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://yoomoney.ru/to/4100116615568835&#34;&gt;&lt;img src=&#34;https://yoomoney.ru/i/shop/iomoney_logo_color_example.png&#34; width=&#34;220px&#34; height=&#34;46px&#34; align=&#34;left&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://ko-fi.com/farag&#34;&gt;&lt;img src=&#34;https://www.ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; width=&#34;220px&#34; height=&#34;46px&#34; align=&#34;left&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/tether-168363?style=for-the-badge&amp;amp;logo=tether&amp;amp;logoColor=white&#34; alt=&#34;ko-fi&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;USDT (TRC20)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;TQtMjdocUWbKAeg1kLtB4ApjAVHt1v8Rtf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Marketing name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Editions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows 11 Insider Preview 24H2&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2024 Update&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22509+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Home/Pro/Enterprise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows 11 23H2&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2023 Update&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22631.2861+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Home/Pro/Enterprise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows 10 22H2 x64&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2022 Update&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19045.3803+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Home/Pro/Enterprise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows 10 x64 21H2 Enterprise LTSC 2021&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;October 2021 Update&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19044.3803+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Enterprise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows 10 x64 1809 Enterprise LTSC 2019&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;October 2018 Update&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17763.5206+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Enterprise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Warning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It&#39;s allowed to be logged in as one admin user only during application startup.&lt;/li&gt; &#xA; &lt;li&gt;🔥🔥🔥 &lt;code&gt;Sophia Script for Windows&lt;/code&gt; may not work on a homebrew Windows. Especially, if the homebrew image was created by OS makers being all thumbs who break Microsoft Defender and disable OS telemetry by purposely uprooting system components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up Privacy &amp;amp; Telemetry;&lt;/li&gt; &#xA; &lt;li&gt;Enable DNS-over-HTTPS for IPv4;&lt;/li&gt; &#xA; &lt;li&gt;Turn off diagnostics tracking scheduled tasks with pop-up form written in &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#screenshots&#34;&gt;WPF&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Set up UI &amp;amp; Personalization;&lt;/li&gt; &#xA; &lt;li&gt;Uninstall OneDrive &#34;correctly&#34;;&lt;/li&gt; &#xA; &lt;li&gt;Interactive &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#change-user-folders-location-programmatically-using-the-interactive-menu&#34;&gt;prompts&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;kbd&gt;TAB&lt;/kbd&gt; &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#the-tab-autocomplete-read-more-here&#34;&gt;completion&lt;/a&gt; for functions and their arguments (if using the Functions.ps1 file);&lt;/li&gt; &#xA; &lt;li&gt;Change %TEMP% environment variable path to %SystemDrive%\Temp;&lt;/li&gt; &#xA; &lt;li&gt;Change location of the user folders programmatically (without moving user files) within interactive menu using arrows to select a drive &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;Desktop&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Documents&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Downloads&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Music&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Pictures&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Videos&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install free (light and dark) &#34;Windows 11 Cursors Concept v2&#34; cursors from &lt;a href=&#34;https://www.deviantart.com/jepricreations/art/Windows-11-Cursors-Concept-v2-886489356&#34;&gt;Jepri Creations&lt;/a&gt; on-the-fly;&lt;/li&gt; &#xA; &lt;li&gt;Uninstall UWP apps displaying packages names; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Generate installed UWP apps list dynamically&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restore the default uninstalled UWP apps for current user displaying &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#localized-uwp-packages-names&#34;&gt;localized&lt;/a&gt; packages names;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;kbd&gt;TAB&lt;/kbd&gt; &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#the-tab-autocomplete-read-more-here&#34;&gt;autocompletion&lt;/a&gt; for function and its&#39; arguments by typing first letters;&lt;/li&gt; &#xA; &lt;li&gt;Disable Windows features displaying friendly packages names with pop-up form written in &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#screenshots&#34;&gt;WPF&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Uninstall Windows capabilities displaying friendly packages names with pop-up form written in &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#screenshots&#34;&gt;WPF&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Download and install the &lt;a href=&#34;https://apps.microsoft.com/detail/9N4WGH0Z6VHQ&#34;&gt;HEVC Video Extensions from Device Manufacturer&lt;/a&gt; to be able to open &lt;a href=&#34;https://en.wikipedia.org/wiki/H.265&#34;&gt;HEVC&lt;/a&gt; format;&lt;/li&gt; &#xA; &lt;li&gt;Register app, calculate hash, and set as default for specific extension without the &#34;How do you want to open this&#34; pop-up using special &lt;a href=&#34;https://github.com/DanysysTeam/PS-SFTA&#34;&gt;function&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Export all Windows associations. Associations will be exported as Application_Associations.json file in script root folder;&lt;/li&gt; &#xA; &lt;li&gt;Import exported JSON file after a clean installation. You have to install all apps according to an exported JSON file to restore all associations;&lt;/li&gt; &#xA; &lt;li&gt;Install any supported Linux distrobution for WSL displaying friendly distro names with pop-up form written in &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#screenshots&#34;&gt;WPF&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;Windows Cleanup&lt;/code&gt; and &lt;code&gt;Windows Cleanup Notification&lt;/code&gt; scheduled tasks for Windows cleaning up unused files and updates; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A native toast notification will be displayed where you can choose to snooze, run the cleanup task or &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#native-interactive-toasts-for-the-scheduled-tasks&#34;&gt;dismiss&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create tasks in the Task Scheduler to clear &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;%SystemRoot%\SoftwareDistribution\Download&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%TEMP%&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pin shortcuts to Start via pure PowerShell &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Three shortcuts are pre-configured to be pinned: Control Panel, &#34;old style&#34; Devices and Printers.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Unpin all Start menu tiles;&lt;/li&gt; &#xA; &lt;li&gt;Turn on Controlled folder access and add protected folders using dialog menu;&lt;/li&gt; &#xA; &lt;li&gt;Add exclusion folder from Microsoft Defender Antivirus scanning using dialog menu;&lt;/li&gt; &#xA; &lt;li&gt;Add exclusion file from Microsoft Defender Antivirus scanning using dialog menu;&lt;/li&gt; &#xA; &lt;li&gt;Refresh desktop icons, environment variables and taskbar without restarting File Explorer;&lt;/li&gt; &#xA; &lt;li&gt;Configure the Windows security;&lt;/li&gt; &#xA; &lt;li&gt;Display all policy registry keys (even manually created ones) in the Local Group Policy Editor snap-in (gpedit.msc);&lt;/li&gt; &#xA; &lt;li&gt;Many more File Explorer and context menu &#34;deep&#34; tweaks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;kbd&gt;TAB&lt;/kbd&gt; autocomplete. Read more &lt;a href=&#34;https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/#how-to-run-the-specific-functions&#34;&gt;here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/10544660/225270281-908abad1-d125-4cae-a19b-2cf80d5d2751.mp4&#34;&gt;https://user-images.githubusercontent.com/10544660/225270281-908abad1-d125-4cae-a19b-2cf80d5d2751.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Change user folders location programmatically using the interactive menu&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/10544660/253818031-b7ce6bf1-d968-41ea-a5c0-27f6845de402.mp4&#34;&gt;https://user-images.githubusercontent.com/10544660/253818031-b7ce6bf1-d968-41ea-a5c0-27f6845de402.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Localized UWP packages names&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/xeiBbes.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://i.imgur.com/0zj0h2S.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Localized Windows features names&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/xlMR2mz.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://i.imgur.com/yl9j9Vt.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Download and install any supported Linux distribution in automatic mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Xn5SqxE.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Native interactive toasts for the scheduled tasks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/farag2/Sophia-Script-for-Windows/raw/master/img/Toasts.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;@BenchTweakGaming Sophia Script Wrapper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/AiuCUvW.png&#34; alt=&#34;Wrapper&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=q_weQifFM58&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/q_weQifFM58/0.jpg&#34; alt=&#34;YT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/8E6OT_QcHaU?t=370&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/8E6OT_QcHaU/1.jpg&#34; alt=&#34;YT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/091SOihvx0k?t=490&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/091SOihvx0k/1.jpg&#34; alt=&#34;YT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choose the right script version for your &lt;code&gt;Windows&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows/releases/latest&#34;&gt;up-to-date version&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Expand the archive;&lt;/li&gt; &#xA; &lt;li&gt;Open folder with the expanded archive;&lt;/li&gt; &#xA; &lt;li&gt;Look through the &lt;code&gt;Sophia.ps1&lt;/code&gt; file to configure functions that you want to be run; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Place the &#34;#&#34; char before function if you don&#39;t want it to be run.&lt;/li&gt; &#xA;   &lt;li&gt;Remove the &#34;#&#34; char before function if you want it to be run.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Copy the whole path to &lt;code&gt;Sophia.ps1&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 10&lt;/code&gt; press and hold the &lt;kbd&gt;Shift&lt;/kbd&gt; key, right click on &lt;code&gt;Sophia.ps1&lt;/code&gt;, and click on &lt;code&gt;Copy as path&lt;/code&gt;;&lt;/li&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 11&lt;/code&gt; right click on &lt;code&gt;Sophia.ps1&lt;/code&gt; and click on &lt;code&gt;Copy as path&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Windows PowerShell&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 10&lt;/code&gt; click &lt;code&gt;File&lt;/code&gt; in the File Explorer, hover over &lt;code&gt;Open Windows PowerShell&lt;/code&gt;, and select &lt;code&gt;Open Windows PowerShell as Administrator&lt;/code&gt; &lt;a href=&#34;https://www.howtogeek.com/662611/9-ways-to-open-powershell-in-windows-10/&#34;&gt;(how-to with screenshots)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 11&lt;/code&gt; right-click on the &lt;kbd&gt;Windows&lt;/kbd&gt; icon and open &lt;code&gt;Windows Terminal (Admin)&lt;/code&gt;;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set execution policy to be able to run scripts only in the current PowerShell session;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;  Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;Sophia.ps1&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 10&lt;/code&gt; paste copied path to &lt;code&gt;Sophia.ps1&lt;/code&gt; from the previous step (with &lt;a href=&#34;https://en.wikipedia.org/wiki/Ampersand&#34;&gt;&amp;amp;&lt;/a&gt;);&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;&amp;amp; &amp;lt;path_from_buffer&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On &lt;code&gt;Windows 11&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\Sophia.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use Wrapper&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and expand the archive;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;SophiaScriptWrapper.exe&lt;/code&gt; and import &lt;code&gt;Sophia.ps1&lt;/code&gt;; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Sophia.ps1&lt;/code&gt; has to be in &lt;code&gt;Sophia Script&lt;/code&gt; folder;&lt;/li&gt; &#xA;   &lt;li&gt;The Wrapper has a real time UI rendering;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configure every function;&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;Console Output&lt;/code&gt; tab and press &lt;code&gt;Run PowerShell&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How to run the specific function(s)&lt;/h3&gt; &#xA;&lt;p&gt;To run the specific function(s) &lt;a href=&#34;https://docs.microsoft.com/ru-ru/powershell/module/microsoft.powershell.core/about/about_operators#dot-sourcing-operator&#34;&gt;dot source&lt;/a&gt; the &lt;code&gt;Functions.ps1&lt;/code&gt; file first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# With a dot at the beginning&#xA;. .\Functions.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now you can do like this (the quotation marks required)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Sophia -FunctionsTAB&#xA;Sophia -Functions temp&amp;lt;TAB&amp;gt;&#xA;Sophia -Functions unin&amp;lt;TAB&amp;gt;&#xA;Sophia -Functions uwp&amp;lt;TAB&amp;gt;&#xA;Sophia -Functions &#34;DiagTrackService -Disable&#34;, &#34;DiagnosticDataLevel -Minimal&#34;, UninstallUWPApps&#xA;&#xA;UninstallUWPApps, &#34;PinToStart -UnpinAll&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use an old-style format without the TAB functions autocomplete (the quotation marks required)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\Sophia.ps1 -Functions CreateRestorePoint, &#34;ScheduledTasks -Disable&#34;, &#34;WindowsCapabilities -Uninstall&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How to download Sophia Script via PowerShell&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the always latest Sophia Script archive by invoking (&lt;code&gt;not as administrator too&lt;/code&gt;) in PowerShell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;iwr script.sophia.team -useb | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The command will download and expand the latest Sophia Script archive (&lt;code&gt;without running&lt;/code&gt;) according which Windows and PowerShell versions it is run on. If you run it on, e.g., Windows 11 via PowerShell 5.1, it will download Sophia Script for &lt;code&gt;Windows 11 PowerShell 5.1&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to translate&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get your OS UI culture by invoking &lt;code&gt;$PSUICulture&lt;/code&gt; in PowerShell;&lt;/li&gt; &#xA; &lt;li&gt;Create a folder with the UI culture name;&lt;/li&gt; &#xA; &lt;li&gt;Place your localized Sophia.psd1 file into this folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/sSryhaEv79&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1006179075263561779/widget.png?style=shield&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sophia_chat&#34;&gt;Telegram discussion group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sophianews&#34;&gt;Telegram channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.ru-board.com/topic.cgi?forum=62&amp;amp;topic=30617#15&#34;&gt;Ru-Board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rutracker.org/forum/viewtopic.php?t=5996011&#34;&gt;rutracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.mydigitallife.net/threads/powershell-windows-10-sophia-script.81675/&#34;&gt;My Digital Life&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://4sysops.com/archives/windows-10-sophia-script-powershell-functions-for-windows-10-fine-tuning-and-automating-routine-configuration-tasks/&#34;&gt;4sysops&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ghacks.net/2020/09/27/windows-10-setup-script-has-a-new-name-and-is-now-easier-to-use/&#34;&gt;gHacks Technology News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.neowin.net/news/this-windows-10-setup-script-lets-you-fine-tune-around-150-functions-for-new-installs&#34;&gt;Neowin: Tech News, Reviews &amp;amp; Betas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.comss.ru/page.php?id=8019&#34;&gt;Comss.ru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://habr.com/company/skillfactory/blog/553800&#34;&gt;Habr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.deskmodder.de/blog/2021/08/07/sophia-script-for-windows-jetzt-fuer-windows-11-und-10/&#34;&gt;Deskmodder.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pcsoleil.fr/successeur-de-win10-initial-setup-script-sophia-script-comment-lutiliser/&#34;&gt;PCsoleil Informatique&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/PowerShell/comments/go2n5v/powershell_script_setup_windows_10/&#34;&gt;Reddit (archived)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PM &lt;a href=&#34;https://www.reddit.com/user/farag2/&#34;&gt;me&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SophiApp Community Edition (C# + WPF)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sophia-Community/SophiApp&#34;&gt;SophiApp&lt;/a&gt; is the full GUI version of &lt;code&gt;Sophia Script for Windows&lt;/code&gt; and ready for use. It is in ongoing improvements with version 2.0 in development 🚀&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Sophia-Community/SophiApp/raw/master/img/0.gif&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://github.com/Sophia-Community/SophiApp/raw/master/img/1.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>12Knocksinna/Office365itpros</title>
    <updated>2024-02-01T02:07:37Z</updated>
    <id>tag:github.com,2024-02-01:/12Knocksinna/Office365itpros</id>
    <link href="https://github.com/12Knocksinna/Office365itpros" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Office 365 for IT Pros PowerShell examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Office365itpros&lt;/h1&gt; &#xA;&lt;p&gt;Office 365 for IT Pros PowerShell examples&lt;/p&gt; &#xA;&lt;p&gt;We store PowerShell examples from the Office 365 for IT Pros ebook here. For more information about the book, see &lt;a href=&#34;https://office365foritpros.com&#34;&gt;https://office365foritpros.com&lt;/a&gt;. We document how we use the scripts at &lt;a href=&#34;https://office365itpros.com/office-365-github-repository/&#34;&gt;https://office365itpros.com/office-365-github-repository/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2</title>
    <updated>2024-02-01T02:07:37Z</updated>
    <id>tag:github.com,2024-02-01:/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2</id>
    <link href="https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An ASP.NET Core Web App which lets sign-in users (including in your org, many orgs, orgs + personal accounts, sovereign clouds) and call Web APIs (including Microsoft Graph)&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csharp&lt;/li&gt; &#xA; &lt;li&gt;powershell&lt;/li&gt; &#xA; &lt;li&gt;html page_type: sample description: &#34;Learn how to add sign-in users to your web app, and how to call web APIs, either from Microsoft or your own.&#34; products:&lt;/li&gt; &#xA; &lt;li&gt;azure&lt;/li&gt; &#xA; &lt;li&gt;microsoft-entra-id&lt;/li&gt; &#xA; &lt;li&gt;dotnet&lt;/li&gt; &#xA; &lt;li&gt;azure-storage&lt;/li&gt; &#xA; &lt;li&gt;aspnet&lt;/li&gt; &#xA; &lt;li&gt;ms-graph urlFragment: enable-webapp-signin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Tutorial - Enable your Web Apps to sign-in users and call APIs with the Microsoft identity platform for developers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/actions/workflows/dotnet.yml&#34;&gt;&lt;img src=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/actions/workflows/dotnet.yml/badge.svg?sanitize=true&#34; alt=&#34;.NET&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About this tutorial&lt;/h2&gt; &#xA;&lt;h3&gt;Scope of this tutorial&lt;/h3&gt; &#xA;&lt;p&gt;In this tutorial, you will learn, incrementally, how to add sign-in users to your Web App, and how to call Web APIs, both Microsoft APIs or your own APIs. Finally, you&#39;ll learn best practices and how to deploy your app to Azure&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/raw/master/ReadmeFiles/aspnetcore-webapp-tutorial-alt.svg?sanitize=true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/master/ReadmeFiles/aspnetcore-webapp-tutorial.svg?sanitize=true&#34; alt=&#34;Tutorial Overview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note&lt;/p&gt; &#xA; &lt;p&gt;We recommend that you right click on the picture above and open it in a new tab, or a new window. You&#39;ll see a clickable image:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;clicking on a metro/railway station will get you directly to the README.md for the corresponding part of the tutorial (some are still in progress)&lt;/li&gt; &#xA;  &lt;li&gt;clicking on some of the connectors between stations will get you to an incremental README.md showing how to get from one part of the tutorial to the next (that&#39;s for instance the case for the Sign-in ... stations)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Details of the chapters&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In the first chapter you learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/README.md&#34;&gt;add signing-in users to your Web App&lt;/a&gt; with the Microsoft identity platform for developers (formerly Microsoft Entra ID v2.0). You&#39;ll learn how to use the &lt;a href=&#34;https://aka.ms/microsoft-identity-web&#34;&gt;Microsoft.Identity.Web&lt;/a&gt; to secure your Web App with the Microsoft Identity Platform.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/master/ReadmeFiles/Web-app-signs-in-users.svg?sanitize=true&#34; alt=&#34;Web apps signs-in users&#34;&gt;&lt;/p&gt; &lt;p&gt;Depending on your business needs, the platform offers you flexibility in terms of what type of users (&lt;a href=&#34;https://aka.ms/signinaudience&#34;&gt;sign in audience&lt;/a&gt;) can sign-in to your application:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;If you are a Line of Business (LOB) developer, you&#39;d probably want to only &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-1-MyOrg/README.md&#34;&gt;sign-in users in your organization&lt;/a&gt; with their work or school accounts.&lt;/li&gt; &#xA;   &lt;li&gt;If you are an ISV building a software-as-a-service (SaaS) application, you&#39;d want to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-2-AnyOrg/README-1-1-to-1-2.md&#34;&gt;sign-in users in any Microsoft Entra tenant&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If you are an an ISV building a software-as-a-service (SaaS) application who wish to sign-in users from both Microsoft Entra tenants and Microsoft consumer Accounts (MSA) you&#39;ll want to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-3-AnyOrgOrPersonal/README-1-1-to-1-3.md&#34;&gt;sign-in users with their work and school accounts or Microsoft personal accounts&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If your application needs to sign-in users in Microsoft Entra tenants in &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-4-Sovereign/README.md&#34;&gt;national and sovereign clouds&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If your application wants to connect with your customers, or with small business partners, you can have your application &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-5-B2C/README.md&#34;&gt;sign-in users with their social identities&lt;/a&gt; using Microsoft Azure Active Directory B2C.&lt;/li&gt; &#xA;   &lt;li&gt;Finally, you&#39;ll want to let users &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/1-6-SignOut/README.md&#34;&gt;sign-out&lt;/a&gt; from your application, or globally from their browser session.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your Web app only needs to sign-in users, in that case you have all you need from the options provided above, but if your app needs to call APIs that you&#39;ve developed yourselves or popular Microsoft APIs like Microsoft Graph, then the following chapters will help extend your work so far to also call these Web APIs.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/master/ReadmeFiles/Web-app-calls-Microsoft-Graph.svg?sanitize=true&#34; alt=&#34;Web apps calls Microsoft Graph&#34;&gt;&lt;/p&gt; &lt;p&gt;Learn how to update your Web app to &lt;a href=&#34;https://graph.microsoft.com&#34;&gt;call Microsoft Graph&lt;/a&gt;:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;We&#39;d use the the &lt;a href=&#34;https://aka.ms/microsoft-identity-web&#34;&gt;Microsoft.Identity.Web&lt;/a&gt; library again to extend the web app to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/2-WebApp-graph-user/2-1-Call-MSGraph/README.md&#34;&gt;sign-in users and also call Microsoft Graph&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In this chapter we&#39;d explain the token cache and how &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/2-WebApp-graph-user/2-2-TokenCache/README-incremental-instructions.md&#34;&gt;customize the token cache serialization&lt;/a&gt; with different technologies depending on your needs (in-memory cache, Session token cache, SQL Server Cache, Redis Cache)&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/2-WebApp-graph-user/2-3-Multi-Tenant/README.md&#34;&gt;secure a multi-tenant SaaS application&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to call Microsoft Graph in &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/2-WebApp-graph-user/2-4-Sovereign-Call-MSGraph/README.md&#34;&gt;national and sovereign clouds&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/raw/master/2-WebApp-graph-user/2-5-HybridFlow/README.md&#34;&gt;authenticate users on both the frontend and backend side simultaneously&lt;/a&gt; using the &lt;strong&gt;Hybrid SPA code flow&lt;/strong&gt; and call Microsoft Graph.&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/raw/master/2-WebApp-graph-user/2-6-BFF-Proxy/README.md&#34;&gt;authenticate users on the backend side and share the authentication state with the frontend side&lt;/a&gt; using the &lt;strong&gt;Backend for Frontend proxy&lt;/strong&gt; architecture and call Microsoft Graph.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your Web App might also want to call other Web APIs than Microsoft Graph.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/master/ReadmeFiles/web-app-calls-microsoft-apis.svg?sanitize=true&#34; alt=&#34;Web apps calls Microsoft APIs&#34;&gt;&lt;/p&gt; &lt;p&gt;Learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/3-WebApp-multi-APIs/README.md&#34;&gt;call popular Azure APIs&lt;/a&gt;. This also explains how to handle conditional access, incremental consent and claims challenge:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://docs.microsoft.com/rest/api/storageservices/&#34;&gt;Azure Storage API&lt;/a&gt;. This is the opportunity to learn about incremental consent, and conditional access, and how to process them.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://azure.microsoft.com/blog/introducing-the-windows-azure-service-management-api/&#34;&gt;Azure Service Management API&lt;/a&gt;. This is the opportunity to learn about admin consent.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note that that chapter, as compared to the others, requires you to have an &lt;a href=&#34;https://azure.microsoft.com/free/&#34;&gt;Azure Subscription&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you wish to secure a Web API of your own, and call it from your clients (Web apps, desktop apps).&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/master/ReadmeFiles/web-app-calls-your-api.svg?sanitize=true&#34; alt=&#34;Web apps calls Microsoft APIs&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Learn how to secure your own Web API and update your Web App to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/4-WebApp-your-API/4-1-MyOrg/README-incremental-instructions.md&#34;&gt;call your own web API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to update your B2C Web App to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/4-WebApp-your-API/4-2-B2C/README.md&#34;&gt;call you own B2C web API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/4-WebApp-your-API/4-3-AnyOrg/Readme.md&#34;&gt;secure a multi-tenant SaaS application with its own Web API&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once you know how to sign-in users and call Web APIs from your Web App, you might want to restrict part of the application depending on the user having a role in the application or belonging to a group. So far you&#39;ve learnt how to add and process authentication. Now learn how to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/5-WebApp-AuthZ&#34;&gt;add authorization to your Web application&lt;/a&gt;, and driving business logic according to roles and group assignments.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/5-WebApp-AuthZ/5-1-Roles/README-incremental-instructions.md&#34;&gt;based on their application roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/5-WebApp-AuthZ/5-2-Groups/README-incremental-instructions.md&#34;&gt;based on their belonging to Microsoft Entra groups&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/6-Deploy-to-Azure/README.md&#34;&gt;deploy your complete app to Azure&lt;/a&gt;. Learn how to do that, along with best practices to ensure security:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Changing the app registration to add more ReplyUris.&lt;/li&gt; &#xA;   &lt;li&gt;Using certificates instead of client secrets.&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview&#34;&gt;Managed identities&lt;/a&gt; to get these certificates from KeyVault&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Daemon apps - Out of scope&lt;/h3&gt; &#xA;&lt;p&gt;This tutorial only covers the case the Web App calls a Web API on behalf of a user. If you are interested in Web Apps calling Web APIs with their own identity (daemon Web Apps), please see &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-dotnet-daemon-v2&#34;&gt;Build a daemon Web App with Microsoft Identity platform for developers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to run this sample&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-requisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install .NET Core for Windows by following the instructions at &lt;a href=&#34;https://dot.net/core&#34;&gt;dot.net/core&lt;/a&gt;, which will include &lt;a href=&#34;https://aka.ms/vsdownload&#34;&gt;Visual Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;a Microsoft Entra tenant. For more information on how to get a Microsoft Entra tenant, see &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/quickstart-create-new-tenant&#34;&gt;How to get a Microsoft Entra tenant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A user account in your Microsoft Entra tenant, or a Microsoft personal account&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: Clone or download this repository&lt;/h3&gt; &#xA;&lt;p&gt;From your shell or command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;git clone https://github.com/Azure-Samples/microsoft-identity-platform-aspnetcore-webapp-tutorial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Given that the name of the sample is quite long, and so are the names of the referenced packages, you might want to clone it in a folder close to the root of your hard drive, to avoid file size limitations on Windows.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend that you start from chapter &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/1-WebApp-OIDC/README.md&#34;&gt;1. WebApp signs-in users with Microsoft identity (OIDC)&lt;/a&gt; where you will learn how to sign-in users within your own organization&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s however possible to start at any chapter of the tutorial as the full code is provided in each folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Help and Support&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/msal&#34;&gt;Stack Overflow&lt;/a&gt; to get support from the community. Ask your questions on Stack Overflow first and browse existing issues to see if someone has asked your question before. Make sure that your questions or comments are tagged with [&lt;code&gt;msal&lt;/code&gt; &lt;code&gt;dotnet&lt;/code&gt;].&lt;/p&gt; &#xA;&lt;p&gt;If you find a bug in the sample, please raise the issue on &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To provide a recommendation, visit the following &lt;a href=&#34;https://feedback.azure.com/forums/169401-azure-active-directory&#34;&gt;User Voice page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://forms.office.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbRz0h_jLR5HNJlvkZAewyoWxUNEFCQ0FSMFlPQTJURkJZMTRZWVJRNkdRMC4u&#34;&gt;Consider taking a moment to share your experience with us.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to this sample, see &lt;a href=&#34;https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.MD&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Other samples and documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The documentation for the Microsoft identity platform is available from &lt;a href=&#34;https://aka.ms/aadv2&#34;&gt;https://aka.ms/aadv2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Other samples for the Microsoft identity platform are available from &lt;a href=&#34;https://aka.ms/aaddevsamplesv2&#34;&gt;https://aka.ms/aaddevsamplesv2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The conceptual documentation for MSAL.NET is available from &lt;a href=&#34;https://aka.ms/msalnet&#34;&gt;https://aka.ms/msalnet&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>