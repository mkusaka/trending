<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-01T02:10:56Z</updated>
  <subtitle>Monthly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mandiant/commando-vm</title>
    <updated>2023-08-01T02:10:56Z</updated>
    <id>tag:github.com,2023-08-01:/mandiant/commando-vm</id>
    <link href="https://github.com/mandiant/commando-vm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Complete Mandiant Offensive VM (Commando VM), a fully customizable Windows-based pentesting virtual machine distribution. commandovm@mandiant.com&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;      _________                                           .___      &#xA;      \_   ___ \  ____   _____   _____ _____    ____    __| _/____  &#xA;      /    \  \/ /  _ \ /     \ /     \\__  \  /    \  / __ |/  _ \ &#xA;      \     \___(  &amp;lt;_&amp;gt; )  Y Y  \  Y Y  \/ __ \|   |  \/ /_/ (  &amp;lt;_&amp;gt; )&#xA;       \______  /\____/|__|_|  /__|_|  (____  /___|  /\____ |\____/ &#xA;              \/             \/      \/     \/     \/      \/       &#xA;                    C O M P L E T E  M A N D I A N T                    &#xA;                         O F F E N S I V E   V M                        &#xA;                              Version 2021.2                                 &#xA;                          commandovm@fireeye.com&#xA;           _____________________________________________________          &#xA;&#xA;                                Created by                                &#xA;                         Jake Barteaux @day1player                              &#xA;                             Mandiant Red Team  &#xA;                      Blaine Stancill @MalwareMechanic                           &#xA;                                Nhan Huynh   &#xA;                 FireEye Labs Advanced Reverse Engineering                            &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/fireeye/commando-vm/raw/master/Commando.png?raw=true&#34; alt=&#34;Commando VM&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Welcome to CommandoVM - a fully customizable, Windows-based security distribution for penetration testing and red teaming.&lt;/p&gt; &#xA;&lt;p&gt;For detailed install instructions or more information please see our &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2019/08/commando-vm-customization-containers-kali.html&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation (Install Script)&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 1803, 1809, 1903, 1909, 2004, 20H2, or 21H1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Insider Preview editions of Windows are not supported&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;60 GB Hard Drive&lt;/li&gt; &#xA; &lt;li&gt;2 GB RAM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 21H1&lt;/li&gt; &#xA; &lt;li&gt;80+ GB Hard Drive&lt;/li&gt; &#xA; &lt;li&gt;4+ GB RAM&lt;/li&gt; &#xA; &lt;li&gt;2 network adapters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Instructions&lt;/h1&gt; &#xA;&lt;h2&gt;Pre-Install Procedures&lt;/h2&gt; &#xA;&lt;p&gt;You MUST disable Windows Defender for a smooth install. The best way to accomplish this is through Group Policy&lt;/p&gt; &#xA;&lt;p&gt;In Windows versions 1909 and higher, Tamper Protection was added. &lt;strong&gt;Tamper Protection must be disabled, otherwise Group Policy settings are ignored.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Windows Security (type &lt;code&gt;Windows Security&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Virus &amp;amp; threat protection &amp;gt; Virus &amp;amp; threat protection settings &amp;gt; Manage settings&lt;/li&gt; &#xA; &lt;li&gt;Switch &lt;code&gt;Tamper Protection&lt;/code&gt; to &lt;code&gt;Off&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is not necessary to change any other setting (&lt;code&gt;Real Time Protection&lt;/code&gt;, etc.)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important.&lt;/strong&gt; Tamper Protection must be disabled before changing Group Policy settings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To permanently disable Real Time Protection&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Local Group Policy Editor (type &lt;code&gt;gpedit&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Computer Configuration &amp;gt; Administrative Templates &amp;gt; Windows Components &amp;gt; Microsoft Defender Antivirus &amp;gt; Real-time Protection&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;Turn off real-time protection&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reboot&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to &lt;strong&gt;reboot&lt;/strong&gt; before making the next change&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To permanently disable Microsoft Defender:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Local Group Policy Editor (type &lt;code&gt;gpedit&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Computer Configuration &amp;gt; Administrative Templates &amp;gt; Windows Components &amp;gt; Microsoft Defender Antivirus&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;Turn off Microsoft Defender Antivirus&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reboot&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Standard install&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and configure a new Windows Virtual Machine&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ensure VM is updated completely. You may have to check for updates, reboot, and check again until no more remain&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Take a snapshot of your machine!&lt;/li&gt; &#xA; &lt;li&gt;Download and copy &lt;code&gt;install.ps1&lt;/code&gt; on your newly configured machine.&lt;/li&gt; &#xA; &lt;li&gt;Open PowerShell as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;Unblock the install file by running &lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable script execution by running &lt;code&gt;Set-ExecutionPolicy Unrestricted -f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finally, execute the installer script as follows:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can also pass your password as an argument: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The script will set up the Boxstarter environment and proceed to download and install the Commando VM environment. You will be prompted for the administrator password in order to automate host restarts during installation. If you do not have a password set, hitting enter when prompted will also work.&lt;/p&gt; &#xA;&lt;h2&gt;Custom install&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please see our &lt;a href=&#34;https://github.com/fireeye/commando-vm/tree/master/Profiles&#34;&gt;custom profiles&lt;/a&gt; for more custom install options or create your own following the instructions below.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the zip from &lt;a href=&#34;https://github.com/fireeye/commando-vm&#34;&gt;https://github.com/fireeye/commando-vm&lt;/a&gt; into your Downloads folder.&lt;/li&gt; &#xA; &lt;li&gt;Decompress the zip and edit the &lt;code&gt;${Env:UserProfile}\Downloads\commando-vm-master\commando-vm-master\profile.json&lt;/code&gt; file by removing tools or adding tools in the “packages” section. You can add any package listed in our &lt;a href=&#34;https://github.com/fireeye/commando-vm/raw/master/packages.csv&#34;&gt;package list&lt;/a&gt; or any package from the &lt;a href=&#34;https://chocolatey.org/packages&#34;&gt;chocolatey repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open an administrative PowerShell window and enable script execution. &lt;code&gt;Set-ExecutionPolicy Unrestricted -f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change to the unzipped project directory. &lt;code&gt;cd ${Env:UserProfile}\Downloads\commando-vm-master\commando-vm-master\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unblock the install file by running &lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a snapshot of your machine!&lt;/li&gt; &#xA; &lt;li&gt;Execute the install with the &lt;code&gt;-profile_file&lt;/code&gt; argument. &lt;code&gt;.\install.ps1 -profile_file .\profile.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more detailed instructions about custom installations, see our &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2019/08/commando-vm-customization-containers-kali.html&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing a new package&lt;/h1&gt; &#xA;&lt;p&gt;Commando VM uses the &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; Windows package manager. It is easy to install a new package. For example, enter the following command as Administrator to deploy Github Desktop on your system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cinst github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find packages to install from our &lt;a href=&#34;https://github.com/fireeye/commando-vm/raw/master/packages.csv&#34;&gt;package list&lt;/a&gt;, which hosts more than just pentesting tools, or from the &lt;a href=&#34;https://chocolatey.org/packages&#34;&gt;chocolatey repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Staying up to date&lt;/h1&gt; &#xA;&lt;p&gt;Type the following command to update all of the packages to the most recent version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cup all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Available Tools&lt;/h1&gt; &#xA;&lt;h3&gt;Active Directory Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remote Server Administration Tools (RSAT)&lt;/li&gt; &#xA; &lt;li&gt;SQL Server Command Line Utilities&lt;/li&gt; &#xA; &lt;li&gt;Sysinternals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Command &amp;amp; Control&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Covenant&lt;/li&gt; &#xA; &lt;li&gt;WMImplant&lt;/li&gt; &#xA; &lt;li&gt;WMIOps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dep&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA; &lt;li&gt;Java&lt;/li&gt; &#xA; &lt;li&gt;Python 2&lt;/li&gt; &#xA; &lt;li&gt;Python 3 (default)&lt;/li&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Ruby Devkit&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 2017 Build Tools (Windows 10)&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amass&lt;/li&gt; &#xA; &lt;li&gt;SpiderFoot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Evasion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CheckPlease&lt;/li&gt; &#xA; &lt;li&gt;Demiguise&lt;/li&gt; &#xA; &lt;li&gt;DefenderCheck&lt;/li&gt; &#xA; &lt;li&gt;DotNetToJScript&lt;/li&gt; &#xA; &lt;li&gt;Invoke-CradleCrafter&lt;/li&gt; &#xA; &lt;li&gt;Invoke-DOSfuscation&lt;/li&gt; &#xA; &lt;li&gt;Invoke-Obfuscation&lt;/li&gt; &#xA; &lt;li&gt;Invoke-Phant0m&lt;/li&gt; &#xA; &lt;li&gt;Not PowerShell (nps)&lt;/li&gt; &#xA; &lt;li&gt;PS&amp;gt;Attack&lt;/li&gt; &#xA; &lt;li&gt;PSAmsi&lt;/li&gt; &#xA; &lt;li&gt;Pafishmacro&lt;/li&gt; &#xA; &lt;li&gt;PowerLessShell&lt;/li&gt; &#xA; &lt;li&gt;PowerShdll&lt;/li&gt; &#xA; &lt;li&gt;StarFighters&lt;/li&gt; &#xA; &lt;li&gt;SysWhispers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exploitation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ADAPE-Script&lt;/li&gt; &#xA; &lt;li&gt;API Monitor&lt;/li&gt; &#xA; &lt;li&gt;CrackMapExec&lt;/li&gt; &#xA; &lt;li&gt;CrackMapExecWin&lt;/li&gt; &#xA; &lt;li&gt;DAMP&lt;/li&gt; &#xA; &lt;li&gt;Dumpert&lt;/li&gt; &#xA; &lt;li&gt;EvilClippy&lt;/li&gt; &#xA; &lt;li&gt;Exchange-AD-Privesc&lt;/li&gt; &#xA; &lt;li&gt;FuzzySec&#39;s PowerShell-Suite&lt;/li&gt; &#xA; &lt;li&gt;FuzzySec&#39;s Sharp-Suite&lt;/li&gt; &#xA; &lt;li&gt;GadgetToJScript&lt;/li&gt; &#xA; &lt;li&gt;Generate-Macro&lt;/li&gt; &#xA; &lt;li&gt;GhostPack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rubeus&lt;/li&gt; &#xA;   &lt;li&gt;SafetyKatz&lt;/li&gt; &#xA;   &lt;li&gt;Seatbelt&lt;/li&gt; &#xA;   &lt;li&gt;SharpDPAPI&lt;/li&gt; &#xA;   &lt;li&gt;SharpDump&lt;/li&gt; &#xA;   &lt;li&gt;SharpRoast&lt;/li&gt; &#xA;   &lt;li&gt;SharpUp&lt;/li&gt; &#xA;   &lt;li&gt;SharpWMI&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GoFetch&lt;/li&gt; &#xA; &lt;li&gt;Impacket&lt;/li&gt; &#xA; &lt;li&gt;Invoke-ACLPwn&lt;/li&gt; &#xA; &lt;li&gt;Invoke-DCOM&lt;/li&gt; &#xA; &lt;li&gt;Invoke-PSImage&lt;/li&gt; &#xA; &lt;li&gt;Invoke-PowerThIEf&lt;/li&gt; &#xA; &lt;li&gt;Juicy Potato&lt;/li&gt; &#xA; &lt;li&gt;Kali Binaries for Windows&lt;/li&gt; &#xA; &lt;li&gt;LuckyStrike&lt;/li&gt; &#xA; &lt;li&gt;MetaTwin&lt;/li&gt; &#xA; &lt;li&gt;Metasploit&lt;/li&gt; &#xA; &lt;li&gt;Mr. Unikod3r&#39;s RedTeamPowershellScripts&lt;/li&gt; &#xA; &lt;li&gt;NetshHelperBeacon&lt;/li&gt; &#xA; &lt;li&gt;Nishang&lt;/li&gt; &#xA; &lt;li&gt;Orca&lt;/li&gt; &#xA; &lt;li&gt;PSBits&lt;/li&gt; &#xA; &lt;li&gt;PSReflect&lt;/li&gt; &#xA; &lt;li&gt;PowerLurk&lt;/li&gt; &#xA; &lt;li&gt;PowerPriv&lt;/li&gt; &#xA; &lt;li&gt;PowerSploit&lt;/li&gt; &#xA; &lt;li&gt;PowerUpSQL&lt;/li&gt; &#xA; &lt;li&gt;PrivExchange&lt;/li&gt; &#xA; &lt;li&gt;RottenPotatoNG&lt;/li&gt; &#xA; &lt;li&gt;Ruler&lt;/li&gt; &#xA; &lt;li&gt;SharpClipHistory&lt;/li&gt; &#xA; &lt;li&gt;SharpExchangePriv&lt;/li&gt; &#xA; &lt;li&gt;SharpExec&lt;/li&gt; &#xA; &lt;li&gt;SpoolSample&lt;/li&gt; &#xA; &lt;li&gt;SharpSploit&lt;/li&gt; &#xA; &lt;li&gt;ThreadContinue&lt;/li&gt; &#xA; &lt;li&gt;TikiTorch&lt;/li&gt; &#xA; &lt;li&gt;UACME&lt;/li&gt; &#xA; &lt;li&gt;impacket-examples-windows&lt;/li&gt; &#xA; &lt;li&gt;vssown&lt;/li&gt; &#xA; &lt;li&gt;Vulcan&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Information Gathering&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ADACLScanner&lt;/li&gt; &#xA; &lt;li&gt;ADExplorer&lt;/li&gt; &#xA; &lt;li&gt;ADOffline&lt;/li&gt; &#xA; &lt;li&gt;ADRecon&lt;/li&gt; &#xA; &lt;li&gt;BeRoot&lt;/li&gt; &#xA; &lt;li&gt;BloodHound&lt;/li&gt; &#xA; &lt;li&gt;BloodHound-Custom-Queries (Hausec)&lt;/li&gt; &#xA; &lt;li&gt;dnsrecon&lt;/li&gt; &#xA; &lt;li&gt;FOCA&lt;/li&gt; &#xA; &lt;li&gt;Get-ReconInfo&lt;/li&gt; &#xA; &lt;li&gt;GoBuster&lt;/li&gt; &#xA; &lt;li&gt;GoWitness&lt;/li&gt; &#xA; &lt;li&gt;Net-GPPPassword&lt;/li&gt; &#xA; &lt;li&gt;NetRipper&lt;/li&gt; &#xA; &lt;li&gt;Nmap&lt;/li&gt; &#xA; &lt;li&gt;PowerView &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dev branch included&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Privesc (enjoiz)&lt;/li&gt; &#xA; &lt;li&gt;Recon-AD&lt;/li&gt; &#xA; &lt;li&gt;SharpHound&lt;/li&gt; &#xA; &lt;li&gt;SharpView&lt;/li&gt; &#xA; &lt;li&gt;SpoolerScanner&lt;/li&gt; &#xA; &lt;li&gt;Watson&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kali Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kali-linux-default&lt;/li&gt; &#xA; &lt;li&gt;kali-linux-xfce&lt;/li&gt; &#xA; &lt;li&gt;VcXsrv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Networking Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Citrix Receiver&lt;/li&gt; &#xA; &lt;li&gt;OpenVPN&lt;/li&gt; &#xA; &lt;li&gt;Powercat&lt;/li&gt; &#xA; &lt;li&gt;Proxycap&lt;/li&gt; &#xA; &lt;li&gt;PuTTY&lt;/li&gt; &#xA; &lt;li&gt;Telnet&lt;/li&gt; &#xA; &lt;li&gt;VMWare Horizon Client&lt;/li&gt; &#xA; &lt;li&gt;VMWare vSphere Client&lt;/li&gt; &#xA; &lt;li&gt;VNC-Viewer&lt;/li&gt; &#xA; &lt;li&gt;WinSCP&lt;/li&gt; &#xA; &lt;li&gt;Windump&lt;/li&gt; &#xA; &lt;li&gt;Wireshark&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Password Attacks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASREPRoast&lt;/li&gt; &#xA; &lt;li&gt;CredNinja&lt;/li&gt; &#xA; &lt;li&gt;DomainPasswordSpray&lt;/li&gt; &#xA; &lt;li&gt;DSInternals&lt;/li&gt; &#xA; &lt;li&gt;Get-LAPSPasswords&lt;/li&gt; &#xA; &lt;li&gt;Hashcat&lt;/li&gt; &#xA; &lt;li&gt;Internal-Monologue&lt;/li&gt; &#xA; &lt;li&gt;Inveigh&lt;/li&gt; &#xA; &lt;li&gt;Invoke-TheHash&lt;/li&gt; &#xA; &lt;li&gt;KeeFarce&lt;/li&gt; &#xA; &lt;li&gt;KeeThief&lt;/li&gt; &#xA; &lt;li&gt;LAPSToolkit&lt;/li&gt; &#xA; &lt;li&gt;MailSniper&lt;/li&gt; &#xA; &lt;li&gt;Mimikatz&lt;/li&gt; &#xA; &lt;li&gt;Mimikittenz&lt;/li&gt; &#xA; &lt;li&gt;RiskySPN&lt;/li&gt; &#xA; &lt;li&gt;SessionGopher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reverse Engineering&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DNSpy&lt;/li&gt; &#xA; &lt;li&gt;Flare-Floss&lt;/li&gt; &#xA; &lt;li&gt;ILSpy&lt;/li&gt; &#xA; &lt;li&gt;PEview&lt;/li&gt; &#xA; &lt;li&gt;Windbg&lt;/li&gt; &#xA; &lt;li&gt;x64dbg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Utilities&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7zip&lt;/li&gt; &#xA; &lt;li&gt;Adobe Reader&lt;/li&gt; &#xA; &lt;li&gt;AutoIT&lt;/li&gt; &#xA; &lt;li&gt;Cmder&lt;/li&gt; &#xA; &lt;li&gt;CyberChef&lt;/li&gt; &#xA; &lt;li&gt;Explorer Suite&lt;/li&gt; &#xA; &lt;li&gt;Gimp&lt;/li&gt; &#xA; &lt;li&gt;Greenshot&lt;/li&gt; &#xA; &lt;li&gt;Hashcheck&lt;/li&gt; &#xA; &lt;li&gt;HeidiSQL&lt;/li&gt; &#xA; &lt;li&gt;Hexchat&lt;/li&gt; &#xA; &lt;li&gt;HTTP File Server (hfs)&lt;/li&gt; &#xA; &lt;li&gt;HxD&lt;/li&gt; &#xA; &lt;li&gt;Keepass&lt;/li&gt; &#xA; &lt;li&gt;MobaXterm&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Thunderbird&lt;/li&gt; &#xA; &lt;li&gt;Neo4j Community Edition&lt;/li&gt; &#xA; &lt;li&gt;NirLauncher&lt;/li&gt; &#xA; &lt;li&gt;Notepad++&lt;/li&gt; &#xA; &lt;li&gt;Pidgin&lt;/li&gt; &#xA; &lt;li&gt;Process Hacker 2&lt;/li&gt; &#xA; &lt;li&gt;qBittorrent&lt;/li&gt; &#xA; &lt;li&gt;SQLite DB Browser&lt;/li&gt; &#xA; &lt;li&gt;Screentogif&lt;/li&gt; &#xA; &lt;li&gt;Shellcode Launcher&lt;/li&gt; &#xA; &lt;li&gt;SimpleDNSCrypt&lt;/li&gt; &#xA; &lt;li&gt;SQLite DB Browser&lt;/li&gt; &#xA; &lt;li&gt;Sublime Text 3&lt;/li&gt; &#xA; &lt;li&gt;Tor Browser&lt;/li&gt; &#xA; &lt;li&gt;TortoiseSVN&lt;/li&gt; &#xA; &lt;li&gt;VLC Media Player&lt;/li&gt; &#xA; &lt;li&gt;yEd Graph Tool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vulnerability Analysis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AD Control Paths&lt;/li&gt; &#xA; &lt;li&gt;Egress-Assess&lt;/li&gt; &#xA; &lt;li&gt;Grouper2&lt;/li&gt; &#xA; &lt;li&gt;NtdsAudit&lt;/li&gt; &#xA; &lt;li&gt;PwnedPasswordsNTLM&lt;/li&gt; &#xA; &lt;li&gt;zBang&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Applications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Burp Suite&lt;/li&gt; &#xA; &lt;li&gt;Fiddler&lt;/li&gt; &#xA; &lt;li&gt;Firefox&lt;/li&gt; &#xA; &lt;li&gt;OWASP Zap&lt;/li&gt; &#xA; &lt;li&gt;Subdomain-Bruteforce&lt;/li&gt; &#xA; &lt;li&gt;Wfuzz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wordlists&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FuzzDB&lt;/li&gt; &#xA; &lt;li&gt;PayloadsAllTheThings&lt;/li&gt; &#xA; &lt;li&gt;SecLists&lt;/li&gt; &#xA; &lt;li&gt;Probable-Wordlists&lt;/li&gt; &#xA; &lt;li&gt;RobotsDisallowed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Legal Notice&lt;/h1&gt; &#xA;&lt;pre&gt;This download configuration script is provided to assist penetration testers&#xA;in creating handy and versatile toolboxes for offensive engagements. It provides &#xA;a convenient interface for them to obtain a useful set of pentesting Tools directly &#xA;from their original sources. Installation and use of this script is subject to the &#xA;Apache 2.0 License.&#xA; &#xA;You as a user of this script must review, accept and comply with the license&#xA;terms of each downloaded/installed package listed below. By proceeding with the&#xA;installation, you are accepting the license terms of each package, and&#xA;acknowledging that your use of each package will be subject to its respective&#xA;license terms.&#xA;&#xA;Licenses for each package can be found in the packages.csv file for this repository.&#xA;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>PowerShellMafia/PowerSploit</title>
    <updated>2023-08-01T02:10:56Z</updated>
    <id>tag:github.com,2023-08-01:/PowerShellMafia/PowerSploit</id>
    <link href="https://github.com/PowerShellMafia/PowerSploit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerSploit - A PowerShell Post-Exploitation Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;This project is no longer supported&lt;/h2&gt; &#xA;&lt;h3&gt;PowerSploit is a collection of Microsoft PowerShell modules that can be used to aid penetration testers during all phases of an assessment. PowerSploit is comprised of the following modules and scripts:&lt;/h3&gt; &#xA;&lt;h2&gt;CodeExecution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Execute code on a target machine.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-DllInjection&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Injects a Dll into the process ID of your choosing.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-ReflectivePEInjection&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-Shellcode&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Injects shellcode into the process ID of your choosing or within PowerShell locally.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-WmiCommand&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel.&lt;/p&gt; &#xA;&lt;h2&gt;ScriptModification&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Modify and/or prepare scripts for execution on a compromised machine.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Out-EncodedCommand&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Out-CompressedDll&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Out-EncryptedScript&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Encrypts text files/scripts.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Remove-Comment&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Strips comments and extra whitespace from a script.&lt;/p&gt; &#xA;&lt;h2&gt;Persistence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Add persistence capabilities to a PowerShell script&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;New-UserPersistenceOption&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Configure user-level persistence options for the Add-Persistence function.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;New-ElevatedPersistenceOption&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Configure elevated persistence options for the Add-Persistence function.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Add-Persistence&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add persistence capabilities to a script.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Install-SSP&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Installs a security support provider (SSP) dll.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-SecurityPackages&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Enumerates all loaded security packages (SSPs).&lt;/p&gt; &#xA;&lt;h2&gt;AntivirusBypass&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;AV doesn&#39;t stand a chance against PowerShell!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Find-AVSignature&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Locates single Byte AV signatures utilizing the same method as DSplit from &#34;class101&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Exfiltration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;All your data belong to me!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-TokenManipulation&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-CredentialInjection&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon).&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-NinjaCopy&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-Mimikatz&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-Keystrokes&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Logs keys pressed, time and the active window.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-GPPPassword&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-GPPAutologon&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-TimedScreenshot&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A function that takes screenshots at a regular interval and saves them to a folder.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;New-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates a new volume shadow copy.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Lists the device paths of all local volume shadow copies.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Mount-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Mounts a volume shadow copy.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Remove-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Deletes a volume shadow copy.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-VaultCredential&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Displays Windows vault credential objects including cleartext web credentials.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Out-Minidump&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generates a full-memory minidump of a process.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-MicrophoneAudio&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Records audio from system microphone and saves to disk&lt;/p&gt; &#xA;&lt;h2&gt;Mayhem&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cause general mayhem with PowerShell.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Set-MasterBootRecord&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Proof of concept code that overwrites the master boot record with the message of your choice.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Set-CriticalProcess&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Causes your machine to blue screen upon exiting PowerShell.&lt;/p&gt; &#xA;&lt;h2&gt;Privesc&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tools to help with escalating privileges on a target.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;PowerUp&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Clearing house of common privilege escalation checks, along with some weaponization vectors.&lt;/p&gt; &#xA;&lt;h2&gt;Recon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tools to aid in the reconnaissance phase of a penetration test.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-Portscan&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Does a simple port scan using regular sockets, based (pretty) loosely on nmap.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Get-HttpStatus&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Invoke-ReverseDnsLookup&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Scans an IP address range for DNS PTR records.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;PowerView&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;PowerView is series of functions that performs network and Windows domain enumeration and exploitation.&lt;/p&gt; &#xA;&lt;h2&gt;Recon\Dictionaries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;A collection of dictionaries used to aid in the reconnaissance phase of a penetration test. Dictionaries were taken from the following sources.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;admin.txt - &lt;a href=&#34;http://cirt.net/nikto2/&#34;&gt;http://cirt.net/nikto2/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;generic.txt - &lt;a href=&#34;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&#34;&gt;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sharepoint.txt - &lt;a href=&#34;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&#34;&gt;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The PowerSploit project and all individual scripts are under the &lt;a href=&#34;https://raw.github.com/mattifestation/PowerSploit/master/LICENSE&#34;&gt;BSD 3-Clause license&lt;/a&gt; unless explicitly noted otherwise.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the comment-based help in each individual script for detailed usage information.&lt;/p&gt; &#xA;&lt;p&gt;To install this module, drop the entire PowerSploit folder into one of your module directories. The default PowerShell module paths are listed in the $Env:PSModulePath environment variable.&lt;/p&gt; &#xA;&lt;p&gt;The default per-user module path is: &#34;$Env:HomeDrive$Env:HOMEPATH\Documents\WindowsPowerShell\Modules&#34; The default computer-level module path is: &#34;$Env:windir\System32\WindowsPowerShell\v1.0\Modules&#34;&lt;/p&gt; &#xA;&lt;p&gt;To use the module, type &lt;code&gt;Import-Module PowerSploit&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see the commands imported, type &lt;code&gt;Get-Command -Module PowerSploit&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re running PowerShell v3 and you want to remove the annoying &#39;Do you really want to run scripts downloaded from the Internet&#39; warning, once you&#39;ve placed PowerSploit into your module path, run the following one-liner: &lt;code&gt;$Env:PSModulePath.Split(&#39;;&#39;) | % { if ( Test-Path (Join-Path $_ PowerSploit) ) {Get-ChildItem $_ -Recurse | Unblock-File} }&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For help on each individual command, Get-Help is your friend.&lt;/p&gt; &#xA;&lt;p&gt;Note: The tools contained within this module were all designed such that they can be run individually. Including them in a module simply lends itself to increased portability.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Rules&lt;/h2&gt; &#xA;&lt;p&gt;We need contributions! If you have a great idea for PowerSploit, we&#39;d love to add it. New additions will require the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The script must adhere to the style guide. Any exceptions to the guide line would need an explicit, valid reason.&lt;/li&gt; &#xA; &lt;li&gt;The module manifest needs to be updated to reflect the new function being added.&lt;/li&gt; &#xA; &lt;li&gt;A brief description of the function should be added to this README.md&lt;/li&gt; &#xA; &lt;li&gt;Pester tests must accompany all new functions. See the Tests folder for examples but we are looking for tests that at least cover the basics by testing for expected/unexpected input/output and that the function exhibits desired functionality. Make sure the function is passing all tests (preferably in mutiple OSes) prior to submitting a pull request. Thanks!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Script Style Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;For all contributors and future contributors to PowerSploit, I ask that you follow this style guide when writing your scripts/modules.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Avoid Write-Host &lt;strong&gt;at all costs&lt;/strong&gt;. PowerShell functions/cmdlets are not command-line utilities! Pull requests containing code that uses Write-Host will not be considered. You should output custom objects instead. For more information on creating custom objects, read these articles:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&#34;&gt;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://technet.microsoft.com/en-us/library/ff730946.aspx&#34;&gt;http://technet.microsoft.com/en-us/library/ff730946.aspx&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to display relevant debugging information to the screen, use Write-Verbose. The user can always just tack on &#39;-Verbose&#39;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Always provide descriptive, comment-based help for every script. Also, be sure to include your name and a BSD 3-Clause license (unless there are extenuating circumstances that prevent the application of the BSD license).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure all functions follow the proper PowerShell verb-noun agreement. Use Get-Verb to list the default verbs used by PowerShell. Exceptions to supported verbs will be considered on a case-by-case basis.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;I prefer that variable names be capitalized and be as descriptive as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide logical spacing in between your code. Indent your code to make it more readable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you find yourself repeating code, write a function.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Catch all anticipated errors and provide meaningful output. If you have an error that should stop execution of the script, use &#39;Throw&#39;. If you have an error that doesn&#39;t need to stop execution, use Write-Error.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are writing a script that interfaces with the Win32 API, try to avoid compiling C# inline with Add-Type. Try to use the PSReflect module, if possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do not use hardcoded paths. A script should be useable right out of the box. No one should have to modify the code unless they want to.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PowerShell v2 compatibility is highly desired.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use positional parameters and make parameters mandatory when it makes sense to do so. For example, I&#39;m looking for something like the following:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;[Parameter(Position = 0, Mandatory = $True)]&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t use any aliases unless it makes sense for receiving pipeline input. They make code more difficult to read for people who are unfamiliar with a particular alias.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try not to let commands run on for too long. For example, a pipeline is a natural place for a line break.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t go overboard with inline comments. Only use them when certain aspects of the code might be confusing to a reader.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rather than using Out-Null to suppress unwanted/irrelevant output, save the unwanted output to $null. Doing so provides a slight performance enhancement.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use default values for your parameters when it makes sense. Ideally, you want a script that will work without requiring any parameters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If a script creates complex custom objects, include a ps1xml file that will properly format the object&#39;s output.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jamesstringerparsec/Easy-GPU-PV</title>
    <updated>2023-08-01T02:10:56Z</updated>
    <id>tag:github.com,2023-08-01:/jamesstringerparsec/Easy-GPU-PV</id>
    <link href="https://github.com/jamesstringerparsec/Easy-GPU-PV" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Project dedicated to making GPU Partitioning on Windows easier!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Easy-GPU-PV&lt;/h1&gt; &#xA;&lt;p&gt;A work-in-progress project dedicated to making GPU Paravirtualization on Windows Hyper-V easier!&lt;/p&gt; &#xA;&lt;p&gt;GPU-PV allows you to partition your systems dedicated or integrated GPU and assign it to several Hyper-V VMs. It&#39;s the same technology that is used in WSL2, and Windows Sandbox.&lt;/p&gt; &#xA;&lt;p&gt;Easy-GPU-PV aims to make this easier by automating the steps required to get a GPU-PV VM up and running.&lt;br&gt; Easy-GPU-PV does the following...&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Creates a VM of your choosing&lt;/li&gt; &#xA; &lt;li&gt;Automatically Installs Windows to the VM&lt;/li&gt; &#xA; &lt;li&gt;Partitions your GPU of choice and copies the required driver files to the VM&lt;/li&gt; &#xA; &lt;li&gt;Installs &lt;a href=&#34;https://parsec.app&#34;&gt;Parsec&lt;/a&gt; to the VM, Parsec is an ultra low latency remote desktop app, use this to connect to the VM. You can use Parsec for free non commercially. To use Parsec commercially, sign up to a &lt;a href=&#34;https://parsec.app/teams&#34;&gt;Parsec For Teams&lt;/a&gt; account&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 20H1+ Pro, Enterprise or Education OR Windows 11 Pro, Enterprise or Education. Windows 11 on host and VM is preferred due to better compatibility.&lt;/li&gt; &#xA; &lt;li&gt;Matched Windows versions between the host and VM. Mismatches may cause compatibility issues, blue-screens, or other issues. (Win10 21H1 + Win10 21H1, or Win11 21H2 + Win11 21H2, for example)&lt;/li&gt; &#xA; &lt;li&gt;Desktop Computer with dedicated NVIDIA/AMD GPU or Integrated Intel GPU - Laptops with NVIDIA GPUs are not supported at this time, but Intel integrated GPUs work on laptops. GPU must support hardware video encoding (NVIDIA NVENC, Intel Quicksync or AMD AMF).&lt;/li&gt; &#xA; &lt;li&gt;Latest GPU driver from Intel.com or NVIDIA.com, don&#39;t rely on Device manager or Windows update.&lt;/li&gt; &#xA; &lt;li&gt;Latest Windows 10 ISO &lt;a href=&#34;https://www.microsoft.com/en-gb/software-download/windows10ISO&#34;&gt;downloaded from here&lt;/a&gt; / Windows 11 ISO &lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windows11&#34;&gt;downloaded from here.&lt;/a&gt; - Do not use Media Creation Tool, if no direct ISO link is available, follow &lt;a href=&#34;https://www.nextofwindows.com/downloading-windows-10-iso-images-using-rufus&#34;&gt;this guide.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Virtualisation enabled in the motherboard and &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&#34;&gt;Hyper-V fully enabled&lt;/a&gt; on the Windows 10/ 11 OS (requires reboot).&lt;/li&gt; &#xA; &lt;li&gt;Allow Powershell scripts to run on your system - typically by running &#34;Set-ExecutionPolicy unrestricted&#34; in Powershell running as Administrator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Instructions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure your system meets the prerequisites.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamesstringerparsec/Easy-GPU-PV/archive/refs/heads/main.zip&#34;&gt;Download the Repo and extract.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search your system for Powershell ISE and run as Administrator.&lt;/li&gt; &#xA; &lt;li&gt;In the extracted folder you downloaded, open PreChecks.ps1 in Powershell ISE. Run the files from within the extracted folder. Do not move them.&lt;/li&gt; &#xA; &lt;li&gt;Open and Run PreChecks.ps1 in Powershell ISE using the green play button and copy the GPU Listed (or the warnings that you need to fix).&lt;/li&gt; &#xA; &lt;li&gt;Open CopyFilesToVM.ps1 Powershell ISE and edit the params section at the top of the file, you need to be careful about how much ram, storage and hard drive you give it as your system needs to have that available. On Windows 10 the GPUName must be left as &#34;AUTO&#34;, In Windows 11 it can be either &#34;AUTO&#34; or the specific name of the GPU you want to partition exactly how it appears in PreChecks.ps1. Additionally, you need to provide the path to the Windows 10/11 ISO file you downloaded.&lt;/li&gt; &#xA; &lt;li&gt;Run CopyFilesToVM.ps1 with your changes to the params section - this may take 5-10 minutes.&lt;/li&gt; &#xA; &lt;li&gt;Open and sign into Parsec on the VM. You can use Parsec to connect to the VM up to 4K60FPS.&lt;/li&gt; &#xA; &lt;li&gt;You should be good to go!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Upgrading GPU Drivers when you update the host GPU Drivers&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s important to update the VM GPU Drivers after you have updated the Host GPUs drivers. You can do this by...&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Reboot the host after updating GPU Drivers.&lt;/li&gt; &#xA; &lt;li&gt;Open Powershell as administrator and change directory (CD) to the path that CopyFilesToVM.ps1 and Update-VMGpuPartitionDriver.ps1 are located.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;Update-VMGpuPartitionDriver.ps1 -VMName &#34;Name of your VM&#34; -GPUName &#34;Name of your GPU&#34;&lt;/code&gt; (Windows 10 GPU name must be &#34;AUTO&#34;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Values&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;VMName = &#34;GPUP&#34;&lt;/code&gt; - Name of VM in Hyper-V and the computername / hostname&lt;br&gt; &lt;code&gt;SourcePath = &#34;C:\Users\james\Downloads\Win11_English_x64.iso&#34;&lt;/code&gt; - path to Windows 10/ 11 ISO on your host&lt;br&gt; &lt;code&gt;Edition = 6&lt;/code&gt; - Leave as 6, this means Windows 10/11 Pro&lt;br&gt; &lt;code&gt;VhdFormat = &#34;VHDX&#34;&lt;/code&gt; - Leave this value alone&lt;br&gt; &lt;code&gt;DiskLayout = &#34;UEFI&#34;&lt;/code&gt; - Leave this value alone&lt;br&gt; &lt;code&gt;SizeBytes = 40gb&lt;/code&gt; - Disk size, in this case 40GB, the minimum is 20GB&lt;br&gt; &lt;code&gt;MemoryAmount = 8GB&lt;/code&gt; - Memory size, in this case 8GB&lt;br&gt; &lt;code&gt;CPUCores = 4&lt;/code&gt; - CPU Cores you want to give VM, in this case 4&lt;br&gt; &lt;code&gt;NetworkSwitch = &#34;Default Switch&#34;&lt;/code&gt; - Leave this alone unless you&#39;re not using the default Hyper-V Switch&lt;br&gt; &lt;code&gt;VHDPath = &#34;C:\Users\Public\Documents\Hyper-V\Virtual Hard Disks\&#34;&lt;/code&gt; - Path to the folder you want the VM Disk to be stored in, it must already exist&lt;br&gt; &lt;code&gt;UnattendPath = &#34;$PSScriptRoot&#34;+&#34;\autounattend.xml&#34;&lt;/code&gt; -Leave this value alone&lt;br&gt; &lt;code&gt;GPUName = &#34;AUTO&#34;&lt;/code&gt; - AUTO selects the first available GPU. On Windows 11 you may also use the exact name of the GPU you want to share with the VM in multi GPU situations (GPU selection is not available in Windows 10 and must be set to AUTO)&lt;br&gt; &lt;code&gt;GPUResourceAllocationPercentage = 50&lt;/code&gt; - Percentage of the GPU you want to share with the VM&lt;br&gt; &lt;code&gt;Team_ID = &#34;&#34;&lt;/code&gt; - The Parsec for Teams ID if you are a Parsec for Teams Subscriber&lt;br&gt; &lt;code&gt;Key = &#34;&#34;&lt;/code&gt; - The Parsec for Teams Secret Key if you are a Parsec for Teams Subscriber&lt;br&gt; &lt;code&gt;Username = &#34;GPUVM&#34;&lt;/code&gt; - The VM Windows Username, do not include special characters, and must be different from the &#34;VMName&#34; value you set&lt;br&gt; &lt;code&gt;Password = &#34;CoolestPassword!&#34;&lt;/code&gt; - The VM Windows Password, cannot be blank&lt;br&gt; &lt;code&gt;Autologon = &#34;true&#34;&lt;/code&gt;- If you want the VM to automatically login to the Windows Desktop&lt;/p&gt; &#xA;&lt;h3&gt;Thanks to:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tabs-not-spaces/Hyper-ConvertImage&#34;&gt;Hyper-ConvertImage&lt;/a&gt; for creating an updated version of &lt;a href=&#34;https://github.com/MicrosoftDocs/Virtualization-Documentation/tree/master/hyperv-tools/Convert-WindowsImage&#34;&gt;Convert-WindowsImage&lt;/a&gt; that is compatible with Windows 10 and 11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gawainXX&#34;&gt;gawainXX&lt;/a&gt; for help testing and pointing out bugs and feature improvements.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After you have signed into Parsec on the VM, always use Parsec to connect to the VM. Keep the Microsft Hyper-V Video adapter disabled. Using RDP and Hyper-V Enhanced Session mode will result in broken behaviour and black screens in Parsec. RDP and the Hyper-V video adapter only offer a maximum of 30FPS. Using Parsec will allow you to use up to 4k60 FPS.&lt;/li&gt; &#xA; &lt;li&gt;If you get &#34;ERROR : Cannot bind argument to parameter &#39;Path&#39; because it is null.&#34; this probably means you used Media Creation Tool to download the ISO. You unfortunately cannot use that, if you don&#39;t see a direct ISO download link at the Microsoft page, follow &lt;a href=&#34;https://www.nextofwindows.com/downloading-windows-10-iso-images-using-rufus&#34;&gt;this guide.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Your GPU on the host will have a Microsoft driver in device manager, rather than an nvidia/intel/amd driver. As long as it doesn&#39;t have a yellow triangle over top of the device in device manager, it&#39;s working correctly.&lt;/li&gt; &#xA; &lt;li&gt;A powered on display / HDMI dummy dongle must be plugged into the GPU to allow Parsec to capture the screen. You only need one of these per host machine regardless of number of VM&#39;s.&lt;/li&gt; &#xA; &lt;li&gt;If your computer is super fast it may get to the login screen before the audio driver (VB Cable) and Parsec display driver are installed, but fear not! They should soon install.&lt;/li&gt; &#xA; &lt;li&gt;The screen may go black for times up to 10 seconds in situations when UAC prompts appear, applications go in and out of fullscreen and when you switch between video codecs in Parsec - not really sure why this happens, it&#39;s unique to GPU-P machines and seems to recover faster at 1280x720.&lt;/li&gt; &#xA; &lt;li&gt;Vulkan renderer is unavailable and GL games may or may not work. &lt;a href=&#34;https://www.microsoft.com/en-us/p/opencl-and-opengl-compatibility-pack/9nqpsl29bfff?SilentAuth=1&amp;amp;wa=wsignin1.0#activetab=pivot:overviewtab&#34;&gt;This&lt;/a&gt; may help with some OpenGL apps.&lt;/li&gt; &#xA; &lt;li&gt;If you do not have administrator permissions on the machine it means you set the username and vmname to the same thing, these needs to be different.&lt;/li&gt; &#xA; &lt;li&gt;AMD Polaris GPUS like the RX 580 do not support hardware video encoding via GPU Paravirtualization at this time.&lt;/li&gt; &#xA; &lt;li&gt;To download Windows ISOs with Rufus, it must have &#34;Check for updates&#34; enabled.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>