<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-01T02:09:47Z</updated>
  <subtitle>Monthly Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/EntityFramework.Docs</title>
    <updated>2024-03-01T02:09:47Z</updated>
    <id>tag:github.com,2024-03-01:/dotnet/EntityFramework.Docs</id>
    <link href="https://github.com/dotnet/EntityFramework.Docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for Entity Framework Core and Entity Framework 6&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Entity Framework Docs&lt;/h1&gt; &#xA;&lt;p&gt;This project contains the source for EF Core and EF6 documentation published at &lt;a href=&#34;https://learn.microsoft.com/ef/&#34;&gt;Entity Framework documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation issues for both EF Core and EF6 should be filed in this repo. Product issues (bugs) should be filed in the &lt;a href=&#34;https://github.com/dotnet/efcore&#34;&gt;EF Core repo&lt;/a&gt; or the &lt;a href=&#34;https://github.com/dotnet/ef6&#34;&gt;EF6 repo&lt;/a&gt; as appropriate.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We accept pull requests!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Fixing typos/spelling/grammar/etc&lt;/h2&gt; &#xA;&lt;p&gt;Consider sending a pull request rather than filing an issue. This can be done entirely from the web:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;From upper right corner of the document, select the pen icon: &lt;img src=&#34;https://user-images.githubusercontent.com/3605364/93646907-e75ef680-f9a2-11ea-847a-c5c3839f3aa8.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;p&gt;Note: You might need to make the browser window wider to see the pen icon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on the edit button (✏️) to edit in your web browser&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1430078/64454321-85856480-d09f-11e9-85a6-1c93bc6611e2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When done, add a title and description, then use the &lt;strong&gt;Create a new branch and start a pull request.&lt;/strong&gt; option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1430078/64454455-dac17600-d09f-11e9-922b-0346117011f5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that you can also clone this repo and do a GitHub PR in the normal way.&lt;/p&gt; &#xA;&lt;h2&gt;Making more substantial changes&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests for more substantial changes are also encouraged. However, before submitting a pull request, please &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/EntityFramework.Docs/main/CONTRIBUTING.md&#34;&gt;read the CONTRIBUTING guidelines&lt;/a&gt;, which include information on how to build the docs locally, as well as style and organizational guidance.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/Microsoft365DSC</title>
    <updated>2024-03-01T02:09:47Z</updated>
    <id>tag:github.com,2024-03-01:/microsoft/Microsoft365DSC</id>
    <link href="https://github.com/microsoft/Microsoft365DSC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manages, configures, extracts and monitors Microsoft 365 tenant configurations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft365DSC&lt;/h1&gt; &#xA;&lt;p&gt;This module allows organizations to automate the deployment, configuration, reporting and monitoring of Microsoft 365 Tenants via PowerShell Desired State Configuration. The compiled configuration needs to be executed from an agent&#39;s Local Configuration Manager (LCM) (machine or container) which can communicate back remotely to Microsoft 365 via remote API calls (therefore requires internet connectivity)&lt;/p&gt; &#xA;&lt;p&gt;For information on how to get started, additional documentation or additional resources, please navigate to the official web site at &lt;a href=&#34;http://Microsoft365DSC.com&#34;&gt;Microsoft365DSC.com&lt;/a&gt; and check out the official YouTube channel &lt;a href=&#34;https://www.youtube.com/channel/UCveScabVT6pxzqYgGRu17iw&#34;&gt;Microsoft365DSC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap &amp;amp; Backlog&lt;/h2&gt; &#xA;&lt;p&gt;We are using Azure DevOps for project management. You can access our backlog and roadmap by clicking on the status badge below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/Microsoft365DSC/Backlog/_workitems/&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Microsoft365DSC/c730cd2b-2b5f-4af2-8bce-2b7b3ee6f69b/e58164ef-f760-40e9-bd67-893cf4938bef/_apis/work/boardbadge/84871665-8a0f-46de-8a93-c214ea36b371?columnOptions=1&#34; alt=&#34;Board Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;h3&gt;master&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/Microsoft/Microsoft365DSC&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Microsoft/Microsoft365DSC/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the branch containing the latest release. No contributions should be made directly to this branch.&lt;/p&gt; &#xA;&lt;h3&gt;dev&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/CodeCoverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/CodeCoverage.yml/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20EXO.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20EXO.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - EXO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20O365.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20O365.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - O365&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20OD.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20OD.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - OD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20PP.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20PP.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - PP&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SC.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SC.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - SC&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SPO.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SPO.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - SPO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20TEAMS.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20TEAMS.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Full-Circle - TEAMS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Integration.yml/badge.svg?sanitize=true&#34; alt=&#34;AzureCloud - Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Unit%20Tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Unit%20Tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributors are encouraged to propose their contributions as pull requests to this development branch. This branch will periodically be merged to the master branch, and be released to &lt;a href=&#34;https://www.powershellgallery.com/&#34;&gt;PowerShell Gallery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Install&lt;/h2&gt; &#xA;&lt;p&gt;To acquire the latest bits of the module from a machine that has internet connectivity, run the following PowerShell lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Install-Module -Name Microsoft365DSC -Force&#xA;Update-M365DSCModule&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Telemetry Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Microsoft365DSC captures Telemetry data about the names of the resources in which a configuration drift has been detected, along with the type of exceptions being thrown by errors in the various modules. While no sensitive data is ever captured, App Insights, which performs telemetry analytics, captures information about the city where the telemetry entries were captured by default. Users can opt-out to prevent telemetry from being sent back to the Microsoft365DSC team by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Set-M365DSCTelemetryOption -Enabled $False&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/ARI</title>
    <updated>2024-03-01T02:09:47Z</updated>
    <id>tag:github.com,2024-03-01:/microsoft/ARI</id>
    <link href="https://github.com/microsoft/ARI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure Resource Inventory - It&#39;s a Powerful tool to create EXCEL inventory from Azure Resources with low effort&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;ArtifactType: Excel spreadsheet with the full Azure environment Language: Powershell Platform: Windows / Linux / Mac Tags: Powershell, Azure, Inventory, Excel Report, Customer Engineer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/microsoft/ARI&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/microsoft/ARI&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/azure?icon=azure&amp;amp;label&#34; alt=&#34;Azure&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/microsoft/ARI&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/microsoft/ARI&#34; alt=&#34;GitHub top language&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Azure Resource Inventory&lt;/h1&gt; &#xA;&lt;p&gt;Azure Resource inventory (ARI) is a powerful script written in powershell that generates an Excel report of any Azure Environment you have read access.&lt;/p&gt; &#xA;&lt;p&gt;This project is intend to help Cloud Admins and anyone that might need an easy and fast way to build a full Excel Report of an Azure Environment.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;What&#39;s new ?&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Version 3 is alive!!&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/ARIv3-Overview.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Among the many improvements, those are the highlights of the new version:&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;1) Support for 6 extra resource types, including NetApp and VMWare Solution.&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Since the begining of the project, we wanted ARI to evolve and keep pace with the improvements on Azure Resources. Keeping that in mind we are adding extra modules for newer resources.&lt;/p&gt; &#xA;&lt;p&gt;We also reviewed and updated some of the old resources as well.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;2) Diagram was completely rebuild and now support environments with more than 30.000 resources&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Network Topology was cool but in large environments it had some problems (i.e.: freezing and never finishing), and even when it finished it might take forever.&lt;/p&gt; &#xA;&lt;p&gt;We added parallel processing to diagram, now during the execution of ARI, an extra folder (DiagramCache) will be created, that folder is used by the diagram to store temporary components of the diagrams, after all the parallel processing is done those files are merged in the main diagram.&lt;/p&gt; &#xA;&lt;p&gt;Now diagram will even finish way before the Excel file.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;3) Network Topology in the Diagram now identifies the Hub and Spokes Virtual Network&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/DrawioImage.png&#34; alt=&#34;Draw.IO&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Tab names were added in the diagram and now the Network Topology is the first tab.&lt;/p&gt; &#xA;&lt;p&gt;Also in the Network Topology, we are using color in the diagram to identify the different Virtual Network usages in HUB-Spoke topologies.&lt;/p&gt; &#xA;&lt;p&gt;Colors will also be used to indicate broken peers.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;4) Diagram now include &#34;Organizational View&#34; (Management Groups)&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/DrawioOrganization.png&#34; alt=&#34;Draw.IOOrg&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;We added extra tabs in the new diagram, the second tab is called &#34;Organization&#34; and will present the hierarquical view of subscriptions in the environment.&lt;/p&gt; &#xA;&lt;p&gt;The idea is to make easier to align your environment with the Microsoft&#39;s Landing Zone design (&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/landing-zone/&#34;&gt;What is an Azure landing zone&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;5) Diagram now include Resource Overview for every subscription in the environment&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/drawiosubs.png&#34; alt=&#34;Draw.IOOrg&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Since not everyone have really complex network environments, many people complain about diagram not really presenting much for their environments.&lt;/p&gt; &#xA;&lt;p&gt;This change now. Every single Subscription will be a tab in the diagram, those tabs will contain the Subscription, the resource groups and the sum of every type of resource in the resource groups. By now almost every type of draw.io stencil available will be identified, with more coming in the next months.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;6) ARI in Automation Account&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/Automation.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Some people were asking to run ARI in Azure Automation Account and since the old script for automation accounts was not working we managed to fix it for this version. But now is require to use Runtime 7.2 and add the modules: &#34;ImportExcel&#34;, &#34;Az.ResourceGraph&#34;, &#34;Az.Storage&#34;, &#34;Az.Account&#34; and &#34;ThreadJob&#34; in the Automation Account.&lt;/p&gt; &#xA;&lt;p&gt;The required steps are present in the: &lt;a href=&#34;https://github.com/microsoft/ARI/raw/main/Automation/README.md&#34;&gt;Automation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;&lt;em&gt;1) Excel Overview&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The dashboard shows an overall view and summary of resources in the environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/ARIv3-Overview.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The resource sheet present details and recommendations, security and costs reducing tips for the resources.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/ARIv3ExcelExample.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;&lt;em&gt;2) Azure Diagram Inventory!&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;By default everytime you run the Azure Resource Inventory the diagram will be created.&lt;/p&gt; &#xA;&lt;p&gt;If you do not wish to have the diagram created, you must use the &lt;strong&gt;-SkipDiagram&lt;/strong&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;Also, by default the Network Topology will not consider Virtual Networks that are not connected trough peering. If you wants to include those Virtual Networks in the diagram, you must use the parameter &lt;strong&gt;-DiagramFullEnvironment&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Diagram:&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/DrawioImage.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An extra detail is that if you hover the mouse cursor over any resource in the Network Topology you get the resource details:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/ARIv3DrawioHover.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This feature is available for any resource and even peering lines:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/ARIv3DrawioPeer.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;&lt;em&gt;3) Parameters&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TenantID&lt;/td&gt; &#xA;   &lt;td&gt;Specify the tenant ID you want to create a Resource Inventory.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-TenantID &amp;lt;ID&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppId&lt;/td&gt; &#xA;   &lt;td&gt;Service Principal Authentication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-AppId &amp;lt;Client ID&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Secret&lt;/td&gt; &#xA;   &lt;td&gt;Client secret of the Service Principal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Secret &amp;lt;Client secret&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SubscriptionID&lt;/td&gt; &#xA;   &lt;td&gt;Specifies Subscription(s) to be inventoried.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-SubscriptionID &amp;lt;ID&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ManagementGroup&lt;/td&gt; &#xA;   &lt;td&gt;Specifies the Management Group to be inventoried(all Subscriptions on it)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ManagementGroup &amp;lt;ID&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lite&lt;/td&gt; &#xA;   &lt;td&gt;Speficies to use only the Import-Excel module and don&#39;t create the charts (using Excel&#39;s API)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Lite&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecurityCenter&lt;/td&gt; &#xA;   &lt;td&gt;Include Security Center Data.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-SecurityCenter&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SkipAdvisory&lt;/td&gt; &#xA;   &lt;td&gt;Do not collect Azure Advisory.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-SkipAdvisory&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IncludeTags&lt;/td&gt; &#xA;   &lt;td&gt;Include Resource Tags.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-IncludeTags&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debug&lt;/td&gt; &#xA;   &lt;td&gt;Run in a Debug mode.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Debug&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DiagramFullEnvironment&lt;/td&gt; &#xA;   &lt;td&gt;Network Diagram of the entire environment&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-DiagramFullEnvironment&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Diagram&lt;/td&gt; &#xA;   &lt;td&gt;Create a Visio Diagram.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Diagram&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SkipDiagram&lt;/td&gt; &#xA;   &lt;td&gt;To skip the diagrams creation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-SkipDiagram&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DeviceLogin&lt;/td&gt; &#xA;   &lt;td&gt;Authenticating on Azure using the Device login approach&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-DeviceLogin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AzureEnvironment&lt;/td&gt; &#xA;   &lt;td&gt;Choose between Azure environments &lt;br&gt; &amp;gt; Registered Azure Clouds. Use &lt;code&gt;az cloud list&lt;/code&gt; to get the list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-AzureEnvironment &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReportName&lt;/td&gt; &#xA;   &lt;td&gt;Change the Default Name of the report. &lt;code&gt;Default name: AzureResourceInventory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ReportName &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReportDir&lt;/td&gt; &#xA;   &lt;td&gt;Change the Default path of the report.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ReportDir &#34;&amp;lt;Path&amp;gt;&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Online&lt;/td&gt; &#xA;   &lt;td&gt;Use Online Modules. Scan Modules diretly in GitHub ARI Repository&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Online&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ResourceGroup&lt;/td&gt; &#xA;   &lt;td&gt;Specifies one unique Resource Group to be inventoried, This parameter requires the -SubscriptionID to work.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ResourceGroup &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TagKey&lt;/td&gt; &#xA;   &lt;td&gt;Specifies the tag key to be inventoried, This parameter requires the &lt;code&gt;-SubscriptionID&lt;/code&gt; to work.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-TagKey &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TagValue&lt;/td&gt; &#xA;   &lt;td&gt;Specifies the tag value be inventoried, This parameter requires the &lt;code&gt;-SubscriptionID&lt;/code&gt; to work.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-TagValue &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QuotaUsage&lt;/td&gt; &#xA;   &lt;td&gt;Quota Usage&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-QuotaUsage&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For CloudShell: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Powershell Desktop: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you do not specify Resource Inventory will be performed on all subscriptions for the selected tenant. To perform the inventory in a specific Tenant and subscription use &lt;code&gt;-TenantID&lt;/code&gt; and &lt;code&gt;-SubscriptionID&lt;/code&gt; parameter&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  /&amp;gt;./AzureResourceInventory.ps1 -TenantID &amp;lt;Azure Tenant ID&amp;gt; -SubscriptionID &amp;lt;Subscription ID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Including Tags: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1 -TenantID &amp;lt;Azure Tenant ID&amp;gt; --IncludeTags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;By Default Azure Resource inventory do not include Resource Tags.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Collecting Security Center Data: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1 -TenantID &amp;lt;Azure Tenant ID&amp;gt; -SubscriptionID &amp;lt;Subscription ID&amp;gt; -SecurityCenter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;By Default Azure Resource inventory do not collect Security Center Data.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Skipping Azure Advisor: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1 -TenantID &amp;lt;Azure Tenant ID&amp;gt; -SubscriptionID &amp;lt;Subscription ID&amp;gt; -SkipAdvisory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;By Default Azure Resource inventory collects Azure Advisor Data.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Creating Network Diagram: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/&amp;gt;./AzureResourceInventory.ps1 -TenantID &amp;lt;Azure Tenant ID&amp;gt; -Diagram&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine or CloudShell.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Supportability&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Resource Provider&lt;/th&gt; &#xA;   &lt;th&gt;Results&lt;/th&gt; &#xA;   &lt;th&gt;Draw.io Diagram&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Fully successfully tested&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;   &lt;td&gt;Best Results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAC&lt;/td&gt; &#xA;   &lt;td&gt;Fully successfully tested&lt;/td&gt; &#xA;   &lt;td&gt;Not Supported&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Tested on Ubuntu Desktop&lt;/td&gt; &#xA;   &lt;td&gt;Not Supported&lt;/td&gt; &#xA;   &lt;td&gt;No Table auto-fit for columns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudShell&lt;/td&gt; &#xA;   &lt;td&gt;Tested on Azure CloudShell&lt;/td&gt; &#xA;   &lt;td&gt;Not Supported&lt;/td&gt; &#xA;   &lt;td&gt;No Table auto-fit for columns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Our Test Environment:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;11 22H2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Powershell&lt;/td&gt; &#xA;   &lt;td&gt;5.1.19041.1237&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ImportExcel&lt;/td&gt; &#xA;   &lt;td&gt;7.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;azure-cli&lt;/td&gt; &#xA;   &lt;td&gt;2.48.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AzCLI account&lt;/td&gt; &#xA;   &lt;td&gt;0.2.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AzCLI resource-graph&lt;/td&gt; &#xA;   &lt;td&gt;2.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;You can use Azure Resource Inventory in both in Cloudshell and Powershell Desktop.&lt;/p&gt; &#xA;&lt;p&gt;What things you need to run the script&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install-Module &lt;a href=&#34;https://github.com/dfinke/ImportExcel&#34;&gt;ImportExcel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://docs.microsoft.com/en-us/cli/azure/install-azure-cli&#34;&gt;Azure CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Azure CLI &lt;a href=&#34;https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-list&#34;&gt;Account&lt;/a&gt; Extension&lt;/li&gt; &#xA; &lt;li&gt;Install Azure CLI &lt;a href=&#34;https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-list&#34;&gt;Resource-Graph&lt;/a&gt; Extension&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By default Azure Resource Inventory will call to install the required Powershell modules and Azure CLI components but you must have administrator privileges during the script execution.&lt;/p&gt; &#xA;&lt;p&gt;Special Thanks for &lt;strong&gt;Doug Finke&lt;/strong&gt;, the Author of Powershell &lt;a href=&#34;https://github.com/dfinke/ImportExcel&#34;&gt;ImportExcel&lt;/a&gt; Module.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚠&lt;/span&gt; Warnings&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;Very Important:&lt;/strong&gt;&lt;/span&gt; Azure Resource Inventory will not upgrade the current version of the Powershell modules.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/span&gt; If you&#39;re running the script inside Azure CloudShell the final Excel will not have Auto-fit columns and you will see warnings during the script execution (but the results of your inventory will not be changed :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/cloudshell-warning-lib.png&#34; alt=&#34;CloudShell Warnings&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Running the script&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Its really simple to use Azure Resource Inventory, all that you need to do is to call this script in PowerShell.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &#34;AzureResourceInventory.ps1&#34;. In Azure CloudShell you&#39;re already authenticated. In PowerShell Desktop you will be redirected to Azure sign-in page.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/Execution.png&#34; alt=&#34;Tenants Menu&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have privileges in multiple tenants you can specify the desired one by using &#34;-TenantID&#34; parameter or Azure Resource will scan all your tenants ID and ask you to choose one.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/images/TenantsMenu.png&#34; alt=&#34;Tenants Menu&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;After properly authenticated and with the TENANT selected, the Azure Resource Inventory will perform all the work of extracting and creating the inventory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The duration will vary according to the number of subscriptions and resources. In our tests we managed to generate in 5 minutes the inventory of a Tenant with 15 subscriptions and about 12000 resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Azure ResourceInventory uses &#34;&lt;em&gt;C:\AzureResourceInventory&lt;/em&gt;&#34; as default folder for PowerShell Desktop in Windows and &#34;&lt;em&gt;$HOME/AzureResourceInventory&lt;/em&gt;&#34; for Azure CloudShell to save the final Excel file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This file will have the name &#34;&lt;em&gt;AzureResourceInventory_Report_yyyy-MM-dd_HH_mm.xlsx&lt;/em&gt;&#34; where &#34;&lt;em&gt;yyyy-MM-dd_HH_mm&lt;/em&gt;&#34; are the date and time that this inventory was created.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Versioning and changelog&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;http://semver.org/&#34;&gt;SemVer&lt;/a&gt; for versioning. For the versions available, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/link-to-tags-or-other-release-location&#34;&gt;tags on this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also keep the &lt;code&gt;CHANGELOG.md&lt;/code&gt; file in repository to Document version changes and updates.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;The main authors of this project are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Claudio Merola (&lt;a href=&#34;mailto:claudio.merola@microsoft.com&#34;&gt;claudio.merola@microsoft.com&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Renato Gregio&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/ARI/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; which outlines all of our policies, procedures, and requirements for contributing to this project.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;About the tool&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Copyright (c) 2018 Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks&#34;&gt;Microsoft’s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party’s policies.&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
</feed>