<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:50:49Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>I-Am-Jakoby/PowerShell-for-Hackers</title>
    <updated>2022-07-15T01:50:49Z</updated>
    <id>tag:github.com,2022-07-15:/I-Am-Jakoby/PowerShell-for-Hackers</id>
    <link href="https://github.com/I-Am-Jakoby/PowerShell-for-Hackers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is a collection of powershell functions every hacker should know&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;h3&gt;Currently ranked #1 for most contributed payloads&lt;/h3&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/I-Am-Jakoby/hak5-submissions/raw/main/Assets/hak5-sub.png&#34; alt=&#34;hak 5&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/I-Am-Jakoby/PowerShell-for-Hackers/main/#Description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/I-Am-Jakoby/PowerShell-for-Hackers/main/#The-Functions&#34;&gt;The Functions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/I-Am-Jakoby/PowerShell-for-Hackers/main/#Contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/I-Am-Jakoby/PowerShell-for-Hackers/main/#Acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;PowerShell Functions For Hackers ü§ìüíª&lt;/h1&gt; &#xA;&lt;p&gt;I am currently the #1 ranked payload contributor to Hak5. I decided to make this repository to share all of the functions I have come up with to develop my payloads. With the goal of building this repository with other like minded hackers.&lt;/p&gt; &#xA;&lt;p&gt;To submit your own function use this &lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Assets/template.md&#34;&gt;TEMPLATE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;File must be saved as a .md file and then submit a pull request for review.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Assets/Scripts/P-2-Ducky.ps1&#34;&gt;PowerShell to DuckyScript Converter&lt;/a&gt;&amp;lt;--- Use to format your PS scripts into ready to use DuckyScript Payload&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Assets/Ducky-Ex.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This is a collection of powershell functions that should be added to your arsenal. If you are looking to write your own payloads please feel free to reference this collection of functions we have gathered here&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìù There will be a description of the payloads intended purpose&lt;/li&gt; &#xA; &lt;li&gt;‚ôªÔ∏è The functions themselves will be provided in easy copy and paste format&lt;/li&gt; &#xA; &lt;li&gt;üî† Examples of payloads that have used these functions will also be available&lt;/li&gt; &#xA; &lt;li&gt;üìΩÔ∏è A video tutorial for each function is provided as well!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Functions&lt;/h2&gt; &#xA;&lt;p&gt;üß¨&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Functions&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Detect-Mouse-Movement.md&#34;&gt;Detect Mouse Movement&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to find out if target stepped away or came back to their PC.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Set-Volume.md&#34;&gt;Set-Volume&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to set the volume of the targets PC.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/PlaySound.md&#34;&gt;PlaySound&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to play a sound file from the console window.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Minimize-Apps.md&#34;&gt;Minimize-Apps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to minimize all the apps on your targets screen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Set-WallPaper.md&#34;&gt;Set-WallPaper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to change the targets desktop wallpaper.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Hide-Msg.md&#34;&gt;Hide-Msg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use steganography to hide a secret message in an image.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/MsgBox.md&#34;&gt;MsgBox&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use this function to make a generic pop up message box.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Speak.md&#34;&gt;Speak&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to turn text to speech and talk through your targets speakers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Clean-Exfil.md&#34;&gt;Clean-Exfil&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is to erase any trace of you after wreaking havok on your target.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/If-Admin.md&#34;&gt;If-Admin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is to test if your target is an Admin, If $True run a secondary function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Invoke-WebRequest.md&#34;&gt;Invoke-WebRequest&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is used to either download or upload files or data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/DropBox-Upload.md&#34;&gt;DropBox-Upload&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is used to upload &#34;aquired&#34; files to DropBox.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/PowerShell-2-Batch.md&#34;&gt;PowerShell-2-Batch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is used to convert PowerShell scripts to a .BAT file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/B64.md&#34;&gt;B64-text&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;These functions are used to either encode/decode scripts in Base64.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/B64-img.md&#34;&gt;B64-img&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;These functions are used to either encode/decode images in Base64.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/txt-img.md&#34;&gt;TXT-img&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This function is used to convert a word document to an image.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Abuse-CapsLock.md&#34;&gt;Abuse-CapsLock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use the capslock to act as an indicator for script progression.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Add-Network.md&#34;&gt;Add-Network&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use this function to add a network profile to your targets PC. Either SECURED or OPEN.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Wifi-Info.md&#34;&gt;Wifi-Pass&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use these functions to enumerate your targets wifi and get their wifi passwords.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/Get-GeoLocation.md&#34;&gt;Get-GeoLocation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use this function to get the Geo-Location of your target.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Bonus Function&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/I-Am-Jakoby/PowerShell-for-Hackers/raw/main/Functions/UAC-Bypass.md&#34;&gt;UAC-Bypass&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to run any command with Admin level privledges completely bypassing the UAC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;üì± My Socials üì±&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;96&#34;&gt; &lt;a href=&#34;https://youtube.com/c/IamJakoby?sub_confirmation=1&#34;&gt; &lt;img src=&#34;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/youtube-svgrepo-com.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;C#&#34;&gt; &lt;/a&gt; &lt;br&gt;YouTube &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;96&#34;&gt; &lt;a href=&#34;https://twitter.com/I_Am_Jakoby&#34;&gt; &lt;img src=&#34;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/twitter.png&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;Python&#34;&gt; &lt;/a&gt; &lt;br&gt;Twitter &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;96&#34;&gt; &lt;a href=&#34;https://www.instagram.com/i_am_jakoby/&#34;&gt; &lt;img src=&#34;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/insta.png&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;Golang&#34;&gt; &lt;/a&gt; &lt;br&gt;Instagram &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;96&#34;&gt; &lt;a href=&#34;https://discord.gg/MYYER2ZcJF&#34;&gt; &lt;img src=&#34;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/discord-v2-svgrepo-com.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;Jsonnet&#34;&gt; &lt;/a&gt; &lt;br&gt;Discord &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ACKNOWLEDGMENTS --&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hak5.org/&#34;&gt;Hak5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hak5darren&#34;&gt;Darren&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UberGuidoZ&#34;&gt;UberGuidoZ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/I-Am-Jakoby/PowerShell-for-Hackers/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/UberGuidoZ&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/57457139?s=64&amp;amp;v=4&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/johnverbiest&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/22546421?s=64&amp;amp;v=4&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>microsoftgraph/msgraph-sdk-powershell</title>
    <updated>2022-07-15T01:50:49Z</updated>
    <id>tag:github.com,2022-07-15:/microsoftgraph/msgraph-sdk-powershell</id>
    <link href="https://github.com/microsoftgraph/msgraph-sdk-powershell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powershell SDK for Microsoft Graph&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Graph PowerShell SDK&lt;/h1&gt; &#xA;&lt;p&gt;The Microsoft Graph PowerShell SDK is a collection of PowerShell modules that contain commands for calling Microsoft Graph service.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;The table below contains our Microsoft Graph rollup module. This module installs all the service modules as its dependencies.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Module Name&lt;/th&gt; &#xA;   &lt;th&gt;PowerShell Gallery Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft Graph&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Microsoft.Graph&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/Microsoft.Graph/&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/Microsoft.Graph.svg?style=flat-square&amp;amp;label=Microsoft.Graph&#34; alt=&#34;Mg&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a list of modules found in this repository, see the &lt;a href=&#34;https://github.com/microsoftgraph/msgraph-sdk-powershell/wiki/MS-Graph-PowerShell-Modules&#34;&gt;Microsoft Graph PowerShell modules&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;PowerShell Gallery&lt;/h3&gt; &#xA;&lt;p&gt;All the modules are published on &lt;a href=&#34;https://www.powershellgallery.com/packages/Microsoft.Graph&#34;&gt;PowerShell Gallery&lt;/a&gt;. Installing is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module Microsoft.Graph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are upgrading from our preview modules, run &lt;code&gt;Install-Module&lt;/code&gt; with AllowClobber and Force parameters to avoid command name conflicts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt; Install-Module Microsoft.Graph -AllowClobber -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a set of samples in the &lt;code&gt;samples&lt;/code&gt; folder to help in getting started with the library. If you have an older version of these modules installed, there are extra uninstall instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-powershell/dev/samples/0-InstallModule.ps1&#34;&gt;InstallModule&lt;/a&gt; script.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Authentication&lt;/p&gt; &lt;p&gt;The SDK supports two types of authentication: delegated access and app-only access.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Delegated access.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using interactive authentication.&#xA;Connect-MgGraph -Scopes &#34;User.Read.All&#34;, &#34;Group.ReadWrite.All&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using device code flow.&#xA;Connect-MgGraph -Scopes &#34;User.Read.All&#34;, &#34;Group.ReadWrite.All&#34; -UseDeviceAuthentication&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using your own access token.&#xA;Connect-MgGraph -AccessToken $AccessToken&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;App-only access via Client Credential with a certificate.&lt;/p&gt; &lt;p&gt;The certificate will be loaded from &lt;code&gt;Cert:\CurrentUser\My\&lt;/code&gt; store when &lt;code&gt;-CertificateThumbprint&lt;/code&gt; or &lt;code&gt;-CertificateName&lt;/code&gt; is specified. Ensure the certificate is present in the store before calling &lt;code&gt;Connect-MgGraph&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using -CertificateThumbprint&#xA;Connect-MgGraph -ClientId &#34;YOUR_APP_ID&#34; -TenantId &#34;YOUR_TENANT_ID&#34; -CertificateThumbprint &#34;YOUR_CERT_THUMBPRINT&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using -CertificateName&#xA;Connect-MgGraph -ClientId &#34;YOUR_APP_ID&#34; -TenantId &#34;YOUR_TENANT_ID&#34; -CertificateName &#34;YOUR_CERT_SUBJECT&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Using -Certificate&#xA;$Cert = Get-ChildItem Cert:\LocalMachine\My\$CertThumbprint&#xA;Connect-MgGraph -ClientId &#34;YOUR_APP_ID&#34; -TenantId &#34;YOUR_TENANT_ID&#34; -Certificate $Cert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List users in your tenant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-MgUser -Top 10 -Property Id, DisplayName, BusinessPhones | Format-Table Id, DisplayName, BusinessPhones&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Filter a user in your tenant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$user = Get-MgUser -Filter &#34;displayName eq &#39;Megan Bowen&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new app registration.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-MgApplication -DisplayName &#34;ScriptedGraphPSApp&#34; `&#xA;                  -SignInAudience &#34;AzureADMyOrg&#34; `&#xA;                  -Web @{ RedirectUris = &#34;https://localhost&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sign out of the current logged-in context i.e. app only or delegated access.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Disconnect-MgGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;API Version&lt;/h2&gt; &#xA;&lt;p&gt;By default, the SDK uses the Microsoft Graph REST API v1.0. You can change this by using the &lt;code&gt;Select-MgProfile&lt;/code&gt; command. This reloads all modules and only loads commands that call beta endpoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Select-MgProfile -Name &#34;beta&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting Permission Related Errors&lt;/h2&gt; &#xA;&lt;p&gt;When working with various operations in the Graph, you may encounter an error such as &#34;Insufficient privileges to complete the operation.&#34; For example, this particular error can occur when using the &lt;code&gt;New-MgApplication&lt;/code&gt; command if the appropriate permissions are not granted.&lt;/p&gt; &#xA;&lt;p&gt;If permission-related errors occur and the user you authenticated within the popup has the appropriate permissions to perform the operation try these steps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can try running &lt;code&gt;Disconnect-MgGraph&lt;/code&gt;, then &lt;code&gt;Connect-MgGraph&lt;/code&gt;. Then, run the code that encountered the permission issues to see if it works.&lt;/li&gt; &#xA; &lt;li&gt;You can try running &lt;code&gt;Connect-MgGraph -ForceRefresh&lt;/code&gt;. This will trigger a refresh of the access token in your cache. MSAL will only refresh the access token in your cache if it has expired (usually an hour), or if you explicitly refresh it via &lt;code&gt;-ForceRefresh&lt;/code&gt;. Then, run the code that encountered the permission issues to see if it works.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using &lt;code&gt;-Property {PropertyName}&lt;/code&gt; parameter will not select the property as the output of the command. All commands return CLR objects, and customers should pipe the command outputs to &lt;code&gt;Format-Table&lt;/code&gt; or &lt;code&gt;Select-Object&lt;/code&gt; to return individual properties.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Customers upgrading from previous versions of the SDK may encounter auth prompts on every command call. If this happens, one can use the following steps to reset their token cache:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;code&gt;Disconnect-MgGraph&lt;/code&gt; to sign out of the current session.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;Remove-Item &#34;$env:USERPROFILE\.graph&#34; -Recurse -Force&lt;/code&gt; to delete your token cache.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;Connect-MgGraph&lt;/code&gt; to reconstruct a clean token cache.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you find any bugs when using the Microsoft Graph PowerShell modules, please file an issue on our GitHub issues page.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT &lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-powershell/dev/LICENSE.txt&#34;&gt;license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- References --&gt; &#xA;&lt;!-- Shields --&gt; &#xA;&lt;!-- PS Gallery --&gt;</summary>
  </entry>
</feed>