<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-21T01:36:40Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jsecurity101/PowerParse</title>
    <updated>2023-12-21T01:36:40Z</updated>
    <id>tag:github.com,2023-12-21:/jsecurity101/PowerParse</id>
    <link href="https://github.com/jsecurity101/PowerParse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerShell PE Parser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PowerParse v0.01&lt;/h1&gt; &#xA;&lt;p&gt;PowerShell PE Parser designed to help and aid reverse engineers. Module allows initial triage of a PE by supporting modules that do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Obtain basic information about a PE.&lt;/li&gt; &#xA; &lt;li&gt;Identify if the PE in question has multiple embedded PEs within it. If there is, an option to export each PE is available.&lt;/li&gt; &#xA; &lt;li&gt;Ability to ship up a VT search.&lt;/li&gt; &#xA; &lt;li&gt;Ability to identify if certain behaviors (TTPs) are performed within the PE.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;To use this module, type: &lt;code&gt;Import-Module PowerParse.psd1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following functions are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Get-PEInfo&lt;/code&gt; - Obtains information about a PE (type, architectrue, etc), checks to see if multiple PEs are embedded within the binary. Has switches &lt;code&gt;-Export&lt;/code&gt; to export embedded PEs, &lt;code&gt;GetVTScore&lt;/code&gt; to get the score of the PE, and &lt;code&gt;GetTTPs&lt;/code&gt; to run analysis on what behaviors the PE executes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Get-MZHeaders&lt;/code&gt; - Identifies how many PEs are embedded within 1 file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Get-PESize&lt;/code&gt; - Obtains the size of a PE file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Export-PE&lt;/code&gt; - Helper function to export PEs. Used within Get-PEInfo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Get-VTScore&lt;/code&gt; - Obtains the positive results of a PE based off a file&#39;s hash. Future versions will allow for more dynamic queries. Need to supply VTAPI for query to work.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Get-TTPs&lt;/code&gt; - -Uses string matching to identify if certain behaviors are being performed within a PE.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Matt Graeber - PowerShell Arsenal was a huge inspiration for this module. Also thank you to Matt for reviewing this module and giving suggestions which will be added to future versions.&lt;/li&gt; &#xA; &lt;li&gt;Matt Hand - Talking to me about this module and giving me ideas to implement.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>