<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-08T01:37:53Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudhan/jax-windows-builder</title>
    <updated>2022-11-08T01:37:53Z</updated>
    <id>tag:github.com,2022-11-08:/cloudhan/jax-windows-builder</id>
    <link href="https://github.com/cloudhan/jax-windows-builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A community supported Windows build for jax.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JAX ‚ù§Ô∏è ü™ü&lt;/h1&gt; &#xA;&lt;p&gt;alpha state...&lt;/p&gt; &#xA;&lt;p&gt;A community supported Windows build for jax.&lt;/p&gt; &#xA;&lt;p&gt;Currently, only CPU and CUDA 11.1 are supported. For CUDA 11.x, please install the &lt;code&gt;cuda&lt;/code&gt;/&lt;code&gt;cuda11_cudnn82&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;h1&gt;Unstable builds&lt;/h1&gt; &#xA;&lt;p&gt;Each&lt;code&gt;jax&lt;/code&gt; build pinnes a concrete &lt;code&gt;jaxlib&lt;/code&gt; package version in its &lt;code&gt;setup.py&lt;/code&gt;. To install an unstable build, you must first ensure the required &lt;code&gt;jaxlib&lt;/code&gt; package exists in the pacakge index. Check it out at &lt;a href=&#34;https://whls.blob.core.windows.net/unstable/index.html&#34;&gt;https://whls.blob.core.windows.net/unstable/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can either install &lt;code&gt;jax&lt;/code&gt; via pip (CPU only or CUDA), install &lt;code&gt;jax&lt;/code&gt; from source or download the desired wheel manually.&lt;/p&gt; &#xA;&lt;h2&gt;Install CPU only version via &lt;code&gt;pip&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#34;jax[cpu]===0.3.14&#34; -f https://whls.blob.core.windows.net/unstable/index.html --use-deprecated legacy-resolver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install &lt;code&gt;cuda111&lt;/code&gt; version via &lt;code&gt;pip&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install jax[cuda111] -f https://whls.blob.core.windows.net/unstable/index.html --use-deprecated legacy-resolver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install from &lt;code&gt;jax&lt;/code&gt; source&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .[cuda111] -f https://whls.blob.core.windows.net/unstable/index.html --use-deprecated legacy-resolver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The manual solution&lt;/h2&gt; &#xA;&lt;p&gt;Select a version of &lt;code&gt;jaxlib&lt;/code&gt; that you want to install. Then install &lt;code&gt;jax&lt;/code&gt; manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# download jaxlib from https://whls.blob.core.windows.net/unstable/index.html&#xA;pip install &amp;lt;jaxlib_whl&amp;gt;&#xA;pip install jax&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Stable builds&lt;/h1&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;To be added&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;Check it out at &lt;a href=&#34;https://whls.blob.core.windows.net/releases/index.html&#34;&gt;https://whls.blob.core.windows.net/releases/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Additional notes&lt;/h1&gt; &#xA;&lt;p&gt;For &lt;code&gt;--use-deprecated legacy-resolver&lt;/code&gt;, refers to &lt;a href=&#34;https://github.com/pypa/pip/issues/9186&#34;&gt;pip #9186&lt;/a&gt; and &lt;a href=&#34;https://github.com/pypa/pip/issues/9203&#34;&gt;pip #9203&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kelleyma49/PSFzf</title>
    <updated>2022-11-08T01:37:53Z</updated>
    <id>tag:github.com,2022-11-08:/kelleyma49/PSFzf</id>
    <link href="https://github.com/kelleyma49/PSFzf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PowerShell wrapper around the fuzzy finder fzf&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PSFzf&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/PSFzf&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/PSFzf.svg?sanitize=true&#34; alt=&#34;PowerShell Gallery Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PSFzf&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/PSFzf?include_prereleases&#34; alt=&#34;PowerShell Gallery Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PSFzf&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/dt/PSFzf&#34; alt=&#34;PowerShell Gallery Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kelleyma49/PSFzf/actions&#34;&gt;&lt;img src=&#34;https://github.com/kelleyma49/PSFzf/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kelleyma49/PSFzf/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PSFzf is a PowerShell module that wraps &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;, a fuzzy file finder for the command line.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/kelleyma49/PSFzf/master/docs/PSFzfExample.gif&#34; alt=&#34;keyboard shortcut demonstration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To change to a user selected directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-ChildItem . -Recurse -Attributes Directory | Invoke-Fzf | Set-Location&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To edit a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-ChildItem . -Recurse -Attributes !Directory | Invoke-Fzf | % { notepad $_ }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For day-to-day usage, see the &lt;a href=&#34;https://github.com/kelleyma49/PSFzf#helper-functions&#34;&gt;helper functions included with this module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;PSReadline Integration&lt;/h2&gt; &#xA;&lt;h3&gt;Select Current Provider Path (default chord: &lt;kbd&gt;Ctrl+t&lt;/kbd&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;kbd&gt;Ctrl+t&lt;/kbd&gt; to start PSFzf to select provider paths. PSFzf will parse the current token and use that as the starting path to search from. If current token is empty, or the token isn&#39;t a valid path, PSFzf will search below the current working directory.&lt;/p&gt; &#xA;&lt;p&gt;Multiple items can be selected. If more than one is selected by the user, the results are returned as a comma separated list. Results are properly quoted if they contain whitespace.&lt;/p&gt; &#xA;&lt;h3&gt;Reverse Search Through PSReadline History (default chord: &lt;kbd&gt;Ctrl+r&lt;/kbd&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;kbd&gt;Ctrl+r&lt;/kbd&gt; to start PSFzf to select a command in the command history saved by PSReadline. PSFzf will insert the command into the current line, but it will not execute the command.&lt;/p&gt; &#xA;&lt;p&gt;PSFzf does not override &lt;kbd&gt;Ctrl+r&lt;/kbd&gt; by default. To confirm that you want to override PSReadline&#39;s chord binding, use the &lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Set-PsFzfOption.md&#34;&gt;&lt;code&gt;Set-PsFzfOption&lt;/code&gt;&lt;/a&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# replace &#39;Ctrl+t&#39; and &#39;Ctrl+r&#39; with your preferred bindings:&#xA;Set-PsFzfOption -PSReadlineChordProvider &#39;Ctrl+t&#39; -PSReadlineChordReverseHistory &#39;Ctrl+r&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set-Location Based on Selected Directory (default chord: &lt;kbd&gt;Alt+c&lt;/kbd&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;kbd&gt;Alt+c&lt;/kbd&gt; to start PSFzf to select a directory. By default, &lt;code&gt;Set-Location&lt;/code&gt; will be called with the selected directory. You can override the default command with the following code in our &lt;code&gt;$PROFILE&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# example command - use $Location with a different command:&#xA;$commandOverride = [ScriptBlock]{ param($Location) Write-Host $Location }&#xA;# pass your override to PSFzf:&#xA;Set-PsFzfOption -AltCCommand $commandOverride&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Search Through Command Line Arguments in PSReadline History (default chord: &lt;kbd&gt;Alt+a&lt;/kbd&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;kbd&gt;Alt+a&lt;/kbd&gt; to start PSFzf to select command line arguments used in PSReadline history. The picked argument will be inserted in the current line. The line that would result from the selection is shown in the preview window.&lt;/p&gt; &#xA;&lt;h2&gt;Tab Expansion&lt;/h2&gt; &#xA;&lt;p&gt;PSFzf can replace the standard tab completion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-PSReadLineKeyHandler -Key Tab -ScriptBlock { Invoke-FzfTabCompletion }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To activate continuous completion, press the directory separator character to complete the current selection and start tab completion for the next part of the container path.&lt;/p&gt; &#xA;&lt;p&gt;PSFzf supports specialized tab expansion with a small set of commands. After typing the default trigger command, which defaults to &#34;&lt;code&gt;**&lt;/code&gt;&#34;, and press &lt;kbd&gt;Tab&lt;/kbd&gt;, PsFzf tab expansion will provide selectable list of options.&lt;/p&gt; &#xA;&lt;p&gt;The following commands are supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;git&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses &lt;a href=&#34;https://github.com/dahlbyk/posh-git&#34;&gt;&lt;code&gt;posh-git&lt;/code&gt;&lt;/a&gt; for providing tab completion options. Requires at least version 1.0.0 Beta 4.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Get-Service&lt;/code&gt;, &lt;code&gt;Start-Service&lt;/code&gt;, &lt;code&gt;Stop-Service&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows the user to select between the installed services.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Get-Process&lt;/code&gt;, &lt;code&gt;Start-Process&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows the user to select between running processes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To override the trigger command, set &lt;code&gt;FZF_COMPLETION_TRIGGER&lt;/code&gt; to your preferred trigger sequence.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to enable tab expansion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-PsFzfOption -TabExpansion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using within a Pipeline&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-Fzf&lt;/code&gt; works with input from a pipeline. You can use it in the middle of a pipeline, or as part of an expression.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-Location (Get-ChildItem . -Recurse | ? { $_.PSIsContainer } | Invoke-Fzf) # This works as of version 2.2.8&#xA;Get-ChildItem . -Recurse | ? { $_.PSIsContainer } | Invoke-Fzf | Set-Location&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overriding Behavior&lt;/h2&gt; &#xA;&lt;p&gt;PsFzf supports overriding behavior by setting these fzf environment variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env Var Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;_PSFZF_FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this environment variable is set, then &lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt; is temporarily set with the contents. This allows the user to have different default options for PSFZF and fzf.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The command specified in this environment variable will override the default command when PSFZF detects that the current location is a file system provider.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The command specified in this environment variable will be used when &lt;kbd&gt;Ctrl+t&lt;/kbd&gt; is pressed by the user.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The command specified in this environment variable will be used when &lt;kbd&gt;Alt+c&lt;/kbd&gt; is pressed by the user.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PSFZF_EDITOR_OPTIONS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains options passed to the editor application used in the &lt;code&gt;Invoke-FuzzyEdit()&lt;/code&gt; function&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Helper Functions&lt;/h2&gt; &#xA;&lt;p&gt;In addition to its core function &lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-Fzf.md&#34;&gt;Invoke-Fzf&lt;/a&gt;, PSFzf includes a set of useful functions and aliases. The aliases are not installed by default. To enable aliases, use &lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Set-PsFzfOption.md&#34;&gt;&lt;code&gt;Set-PSFzfOption&lt;/code&gt;&lt;/a&gt;&#39;s &lt;code&gt;-EnableAlias&lt;/code&gt;* options.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;   &lt;th&gt;Alias&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyEdit.md&#34;&gt;&lt;code&gt;Invoke-FuzzyEdit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fe&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts an editor for the selected files in the fuzzy finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyFasd.md&#34;&gt;&lt;code&gt;Invoke-FuzzyFasd&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts fzf with input from the files saved in &lt;a href=&#34;https://github.com/clvv/fasd&#34;&gt;fasd&lt;/a&gt;(non-Windows) or &lt;a href=&#34;https://github.com/kelleyma49/fasdr&#34;&gt;fasdr&lt;/a&gt; (Windows) and sets the current location.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyZLocation.md&#34;&gt;&lt;code&gt;Invoke-FuzzyZLocation&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fz&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts fzf with input from the history of &lt;a href=&#34;https://github.com/vors/ZLocation&#34;&gt;ZLocation&lt;/a&gt; and sets the current location.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyGitStatus.md&#34;&gt;&lt;code&gt;Invoke-FuzzyGitStatus&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fgs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts fzf with input from output of the &lt;code&gt;git status&lt;/code&gt; function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyHistory.md&#34;&gt;&lt;code&gt;Invoke-FuzzyHistory&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rerun a previous command from history based on the user&#39;s selection in fzf.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyKillProcess.md&#34;&gt;&lt;code&gt;Invoke-FuzzyKillProcess&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fkill&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;code&gt;Stop-Process&lt;/code&gt; on processes selected by the user in fzf.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzySetLocation.md&#34;&gt;&lt;code&gt;Invoke-FuzzySetLocation&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the current location from the user&#39;s selection in fzf.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyScoop.md&#34;&gt;&lt;code&gt;Invoke-FuzzyScoop&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts fzf on &lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt; applications list.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-PsFzfRipgrep.md&#34;&gt;&lt;code&gt;Invoke-PsFzfRipgrep&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;Uses Ripgrep and Fzf to interactively search files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Set-LocationFuzzyEverything.md&#34;&gt;&lt;code&gt;Set-LocationFuzzyEverything&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cde&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the current location based on the &lt;a href=&#34;https://www.voidtools.com/&#34;&gt;Everything&lt;/a&gt; database.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://github.com/junegunn/fzf#installation&#34;&gt;installation instructions for fzf&lt;/a&gt; before installing PSFzf. PSFzf will run &lt;code&gt;Get-Command&lt;/code&gt; to find &lt;code&gt;fzf&lt;/code&gt; in your path.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;The latest version of &lt;code&gt;fzf&lt;/code&gt; is available via &lt;a href=&#34;https://chocolatey.org/packages/fzf&#34;&gt;Chocolatey&lt;/a&gt;, or you can download the &lt;code&gt;fzf&lt;/code&gt; binary and place it in your path. Run &lt;code&gt;Get-Command fzf*.exe&lt;/code&gt; to verify that PowerShell can find the executable.&lt;/p&gt; &#xA;&lt;p&gt;PSFzf has been tested under PowerShell 5.0, 6.0, and 7.0.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;Use Homebrew or download the binary and place it in your path. Run &lt;code&gt;Get-Command fzf*&lt;/code&gt; to verify that PowerShell can find the executable.&lt;/p&gt; &#xA;&lt;p&gt;PSFzf has been tested under PowerShell 6.0 and 7.0.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;PSFzf has been tested under PowerShell 6.0 and 7.0 in the Windows Subsystem for Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;PSFzf is available on the &lt;a href=&#34;https://www.powershellgallery.com/packages/PSFzf&#34;&gt;PowerShell Gallery&lt;/a&gt; and &lt;a href=&#34;https://github.com/ScoopInstaller/Extras/raw/master/bucket/psfzf.json&#34;&gt;Scoop&lt;/a&gt;. PSReadline should be imported before PSFzf as PSFzf registers PSReadline key handlers listed in the &lt;a href=&#34;https://github.com/kelleyma49/PSFzf#psreadline-integration&#34;&gt;PSReadline integration section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Helper Function Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyFasd.md&#34;&gt;&lt;code&gt;Invoke-FuzzyFasd&lt;/code&gt;&lt;/a&gt; requires &lt;a href=&#34;https://github.com/kelleyma49/fasdr&#34;&gt;Fasdr&lt;/a&gt; to be previously installed under Windows. Other platforms require &lt;a href=&#34;https://github.com/clvv/fasd&#34;&gt;Fasd&lt;/a&gt; to be installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyZLocation.md&#34;&gt;&lt;code&gt;Invoke-FuzzyZLocation&lt;/code&gt;&lt;/a&gt; requires &lt;a href=&#34;https://github.com/vors/ZLocation&#34;&gt;ZLocation&lt;/a&gt; and works only under Windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Set-LocationFuzzyEverything.md&#34;&gt;&lt;code&gt;Set-LocationFuzzyEverything&lt;/code&gt;&lt;/a&gt; works only under Windows and requires &lt;a href=&#34;https://www.powershellgallery.com/packages/PSEverything&#34;&gt;PSEverything&lt;/a&gt; to be previously installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyScoop.md&#34;&gt;&lt;code&gt;Invoke-FuzzyScoop&lt;/code&gt;&lt;/a&gt; works only under Windows and requires &lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt; to be previously installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-FuzzyGitStatus.md&#34;&gt;&lt;code&gt;Invoke-FuzzyGitStatus&lt;/code&gt;&lt;/a&gt; requires &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; to be installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kelleyma49/PSFzf/master/docs/Invoke-PsFzfRipgrep.md&#34;&gt;&lt;code&gt;Invoke-PsFzfRipgrep&lt;/code&gt;&lt;/a&gt; requires &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; and &lt;a href=&#34;https://github.com/sharkdp/bat&#34;&gt;bat&lt;/a&gt; to be installed.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>