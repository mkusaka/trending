<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-07T01:53:10Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mdowst/PSNotes</title>
    <updated>2022-06-07T01:53:10Z</updated>
    <id>tag:github.com,2022-06-07:/mdowst/PSNotes</id>
    <link href="https://github.com/mdowst/PSNotes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PSNotes allows you to save PowerShell snippets that you can later run, display, or copy to your clipboard using a keyword of your choosing.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PSNotes&lt;/h1&gt; &#xA;&lt;p&gt;PSNotes is a PowerShell module that allows you to create your own custom snippet library, that you can use to reference commands you run often. Or ones you don&#39;t run often and need a reminder on. Snippets can either be executed directly, copied to your clipboard, or simply output to the display for you to do whatever you want with them. When you create a note, you assign an alias to it, so you can have an easy to remember keyword that you can then use to recall it. Notes can also be classified with tags, so you can easily search for them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#key-features&#34;&gt;Key Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#install-instructions&#34;&gt;Install Instructions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#output-and-Run-Notes&#34;&gt;Output and Run Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#search-notes&#34;&gt;Search Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#Creating-Notes&#34;&gt;Creating Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#updating-notes&#34;&gt;Updating Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#sharing-notes&#34;&gt;Sharing Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Key Features&lt;/h1&gt; &#xA;&lt;h3&gt;Recall a command using a specific alias keyword&lt;/h3&gt; &#xA;&lt;p&gt;When you create a new note, you can define an alias that you can later use to display or run it. &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/UnixTime.gif&#34; alt=&#34;UnixTime Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Perfect for long commands you need to run often. &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/AzCon.gif&#34; alt=&#34;AzCon Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Easily search your notes&lt;/h3&gt; &#xA;&lt;p&gt;You can assign tags to your notes to make searching easier. &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/ADUserTag.gif&#34; alt=&#34;Get-PSNote Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quickly add your own notes&lt;/h3&gt; &#xA;&lt;p&gt;Add new snippets at any time &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/newnote.gif&#34; alt=&#34;New-PSNote Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add new snippets as string or by using a script block &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/ScriptBlock.gif&#34; alt=&#34;New-PSNote ScriptBlock Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Share your notes with others&lt;/h3&gt; &#xA;&lt;p&gt;The import and export functionality allows you to share notes between machines and people. &lt;img src=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/Documentation/media/ImportExport.gif&#34; alt=&#34;Export/Import Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Install Instructions&lt;/h2&gt; &#xA;&lt;p&gt;PowerShell v5+ and PowerShell Core v6+&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module PSNotes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: At of the time of publishing Set-Clipboard is not supported in PowerShell Core. To use the copy to clipboard functionality of this module, it is recommended that you also install the ClipboardText module.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module -Name ClipboardText&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output and Run Notes&lt;/h2&gt; &#xA;&lt;p&gt;When you create a note in the PSNotes module you assign an alias to it. You can use this alias at any time to output, copy, or run a note. Simply type the name of the alias and hit enter to output it to your PowerShell console. You can also add the &lt;code&gt;-copy&lt;/code&gt; switch to have the note copied to your clipboard or use the &lt;code&gt;-run&lt;/code&gt; to execute the note directly.&lt;/p&gt; &#xA;&lt;h6&gt;Example 1: Output the note to the console&lt;/h6&gt; &#xA;&lt;p&gt;This example gets the note/code snippet with the alias &#34;MyNote&#34; and outputs it to the console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;MyNote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 2: Output the note to the console&lt;/h6&gt; &#xA;&lt;p&gt;This example gets the note/code snippet with the alias &#34;MyNote&#34; and outputs it to the console and copies it to your local clipboard.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;MyNote -copy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 3: Execute the note directly&lt;/h6&gt; &#xA;&lt;p&gt;This example gets the note/code snippet with the alias &#34;MyNote&#34; and executes the command in your local session.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;MyNote -run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Search Notes&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t worry if you can&#39;t remember the alias you assigned to a note. You can use &lt;code&gt;Get-PSNote&lt;/code&gt; to search your notes by name, tags, and keywords.&lt;/p&gt; &#xA;&lt;h6&gt;Example 1: Get all notes&lt;/h6&gt; &#xA;&lt;p&gt;This example gets all the notes currently loaded in your profile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 2: Get notes with a name that begins with string&lt;/h6&gt; &#xA;&lt;p&gt;This example gets all the notes that start with cred.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote -Name &#39;cred*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 3: Get notes with a name that contains a string&lt;/h6&gt; &#xA;&lt;p&gt;This example gets all the notes that have a name with the word &#34;user&#34; in it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote -Name &#39;*user*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 4: Get notes by tag&lt;/h6&gt; &#xA;&lt;p&gt;This example gets all the notes that have the tag &#34;AD&#34; assigned to them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote -Tag &#39;AD&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 4: Get notes that includes a search string&lt;/h6&gt; &#xA;&lt;p&gt;This example gets all the notes with the word &#34;day&#34; in the name, details, snippet text, alias, or tags.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote -SearchString &#39;day&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Creating Notes&lt;/h2&gt; &#xA;&lt;p&gt;You can create your own notes at any time using &lt;code&gt;New-PSNote&lt;/code&gt;. Keep in mind that the snippet must be passed as string, so it is recommended to wrap them in single quotes and here-strings to prevent them from being executed when you are creating a note.&lt;/p&gt; &#xA;&lt;h6&gt;Example 1: Create a new note&lt;/h6&gt; &#xA;&lt;p&gt;This example creates a new note for the Get-ADUser cmdlet. Since the &lt;code&gt;-Alias&lt;/code&gt; parameter is not supplied the Note value will be assigned as the alias.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-PSNote -Note &#39;ADUser&#39; -Snippet &#39;Get-ADUser -Filter *&#39; -Details &#34;Use to return all AD users&#34; -Tags &#39;AD&#39;,&#39;Users&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 2: Create a new note with a custom alias&lt;/h6&gt; &#xA;&lt;p&gt;This example creates a new note with a custom alias.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$Snippet = &#39;(Get-Culture).DateTimeFormat.GetAbbreviatedDayName((Get-Date).DayOfWeek.value__)&#39;&#xA;New-PSNote -Note &#39;DayOfWeek&#39; -Snippet $Snippet -Details &#34;Use to name of the day of the week&#34; -Tags &#39;date&#39; -Alias &#39;today&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 3: Create a new note using script block&lt;/h6&gt; &#xA;&lt;p&gt;This example creates a new note for the Get-WmiObject using a script block instead of a string. This make multiple line scripts easier to enter and gives you the ability to use auto-complete when entering it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-PSNote -Note &#39;CpuUsage&#39; -Tags &#39;perf&#39; -Alias &#39;cpu&#39; -ScriptBlock {&#xA;    Get-WmiObject win32_processor | Measure-Object -property LoadPercentage -Average&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 4: Create a new note with both single and double quotes in it&lt;/h6&gt; &#xA;&lt;p&gt;This example shows one way you can create a new note for a snippet that contains both single and double quotes. Notice in the snippet itself the single quotes are doubled. This escapes them and tells PowerShell it is not the end of the string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-PSNote -Note &#39;SvcAccounts&#39; -Snippet &#39;Get-ADUser -Filter &#39;&#39;Name -like &#34;*SvcAccount&#34;&#39;&#39;&#39; -Details &#34;Use to return all AD Service Accounts&#34; -Tags &#39;AD&#39;,&#39;Users&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 5: Create multiple line note&lt;/h6&gt; &#xA;&lt;p&gt;When creating a note for a multiple line snippet, it is recommended that you use a here-string with single quotes to prevent expressions from being evaluated when you run the &lt;code&gt;New-PSNote&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$Snippet = @&#39;&#xA;$stringBuilder = New-Object System.Text.StringBuilder&#xA;for ($i = 0; $i -lt 10; $i++){&#xA;    $stringBuilder.Append(&#34;Line $i`r`n&#34;) | Out-Null&#xA;}&#xA;$stringBuilder.ToString()&#xA;&#39;@&#xA;New-PSNote -Note &#39;StringBuilder&#39; -Snippet $Snippet -Details &#34;Use StringBuilder to combine multiple strings&#34; -Tags &#39;string&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updating Notes&lt;/h2&gt; &#xA;&lt;p&gt;You can update a note at any time using &lt;code&gt;Set-PSNote&lt;/code&gt;. With &lt;code&gt;Set-PSNote&lt;/code&gt; you can update the Snippet, Details, Tags, or Alias of any note. In addition, notes can be deleted using &lt;code&gt;Remove-PSNote&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h6&gt;Example 1: Set new tags&lt;/h6&gt; &#xA;&lt;p&gt;This example shows how to add the tags &#34;AD&#34; and &#34;User&#34; to the note ADUser&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-PSNote -Note &#39;ADUser&#39; -Tags &#39;AD&#39;,&#39;Users&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 2: Update Snippet&lt;/h6&gt; &#xA;&lt;p&gt;This example shows how to update the snippet for the note DayOfWeek&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$Snippet = &#39;(Get-Culture).DateTimeFormat.GetAbbreviatedDayName((Get-Date).DayOfWeek.value__)&#39;&#xA;Set-PSNote -Note &#39;DayOfWeek&#39; -Snippet $Snippet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 3: Delete a note&lt;/h6&gt; &#xA;&lt;p&gt;This example shows how to delete a note named creds. This command does not accept wildcards, so the name of the note must match exactly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Remove-PSNote -Note &#39;creds&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sharing Notes&lt;/h2&gt; &#xA;&lt;p&gt;Not only does PSNotes allow you to create your own custom notes. It allows you to share them between computers and users. You can create a list of notes export them and share them with your team. Notes are stored in easy to read and edit JSON files in case you want to make manual edits.&lt;/p&gt; &#xA;&lt;p&gt;Note: PSNotes stores your notes in your local AppData folder using the path %appdata%\PSNotes. By default, it places them in the file PSNotes.json. When you run the &lt;code&gt;Import-PSNote&lt;/code&gt; cmdlet you can choose a catalog name. Doing so will cause the imported notes to be stored in a file with that catalogs name.&lt;/p&gt; &#xA;&lt;h6&gt;Example 1: Export all notes&lt;/h6&gt; &#xA;&lt;p&gt;This example exports all notes to a JSON file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Export-PSNote -All -Path C:\Export\MyPSNotes.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 2: Export a selection of notes&lt;/h6&gt; &#xA;&lt;p&gt;This example exports the notes with the tag AD to a JSON file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-PSNote -tag &#39;AD&#39; | Export-PSNote -Path C:\Export\SharedADNotes.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 3: Import to personal store&lt;/h6&gt; &#xA;&lt;p&gt;This example imports the contents of the file MyPSNotes.json and saves it to your personal PSNotes.json file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-PSNote -Path C:\Import\MyPSNotes.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Example 4: Import to custom catalog file&lt;/h6&gt; &#xA;&lt;p&gt;This example imports the contents of the file SharedADNotes.json and saves it to the file ADNotes.json in the folder %APPDATA%\PSNotes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-PSNote -Path C:\Export\SharedADNotes.json -Catalog &#39;ADNotes&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdowst/PSNotes/main/#psnotes&#34;&gt;top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MicrosoftDocs/Edge-Enterprise-pr.zh-tw</title>
    <updated>2022-06-07T01:53:10Z</updated>
    <id>tag:github.com,2022-06-07:/MicrosoftDocs/Edge-Enterprise-pr.zh-tw</id>
    <link href="https://github.com/MicrosoftDocs/Edge-Enterprise-pr.zh-tw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>govinss/shakrdp</title>
    <updated>2022-06-07T01:53:10Z</updated>
    <id>tag:github.com,2022-06-07:/govinss/shakrdp</id>
    <link href="https://github.com/govinss/shakrdp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WINRDP&lt;/h1&gt; &#xA;&lt;p&gt;How to use&lt;/p&gt; &#xA;&lt;p&gt;Just Fork this Repository, Go to Actions tab, Select the Windows-CRD workflow. Then select Run Workflow fill the following data in CRD Code and your Pin in the fields. After that, Press Start.&lt;/p&gt; &#xA;&lt;p&gt;Input the following code in the fields.&lt;/p&gt; &#xA;&lt;p&gt;Get the Windows (Powershell) command from here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://remotedesktop.google.com/headless&#34;&gt;https://remotedesktop.google.com/headless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter you Six digit Pin code to Login&lt;/p&gt; &#xA;&lt;p&gt;(Any Six digit Pin)&lt;/p&gt; &#xA;&lt;p&gt;Thats it... After 2-3 min of Initialize, Check your CRD Application or Account.&lt;/p&gt;</summary>
  </entry>
</feed>