<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-13T01:43:16Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>EvotecIT/PowerBGInfo</title>
    <updated>2023-01-13T01:43:16Z</updated>
    <id>tag:github.com,2023-01-13:/EvotecIT/PowerBGInfo</id>
    <link href="https://github.com/EvotecIT/PowerBGInfo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerBGInfo is a PowerShell module that is used to generate background information for Windows machines. It&#39;s a replacement for BGInfo that doesn&#39;t require installation and is much more flexible.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dev.azure.com/evotecpl/PowerBGInfo/_build/results?buildId=latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/evotecpl/39c74615-8f34-4af0-a835-68dc33f9214f/14?label=Azure%20Pipelines&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/vpre/PowerBGInfo.svg?label=powershell%20gallery%20preview&amp;amp;colorB=yellow&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/EvotecIT/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/EvotecIT/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/p/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/EvotecIT/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/evotecit/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/EvotecIT/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/evotecit/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/PowerBGInfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/dt/PowerBGInfo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/PrzemyslawKlys&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/PrzemyslawKlys.svg?label=Twitter%20%40PrzemyslawKlys&amp;amp;style=flat-square&amp;amp;logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://evotec.xyz/hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Blog-evotec.xyz-2A6496.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/pklys&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-pklys-0077B5.svg?logo=LinkedIn&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PowerBGInfo&lt;/strong&gt; is a PowerShell module that is used to generate background information for Windows machines. It&#39;s a replacement for &lt;a href=&#34;https://technet.microsoft.com/en-us/sysinternals/bginfo.aspx&#34;&gt;BGInfo&lt;/a&gt; that doesn&#39;t require installation and is much more flexible.&lt;/p&gt; &#xA;&lt;p&gt;You can read about this project on this &lt;a href=&#34;https://evotec.xyz/powerbginfo-powershell-alternative-to-sysinternals-bginfo/&#34;&gt;blog post&lt;/a&gt; that tells a little backstory and shows few things.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://www.powershellgallery.com/packages/PowerBGInfo&#34;&gt;PowerShell Gallery&lt;/a&gt; is as easy as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module PowerBGInfo -Force -Verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When there&#39;s an update you can update it using same command which will install new module version.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;This module will work fine for PowerShell 5.1 and PowerShell 7+. &lt;strong&gt;Currently the module has a problem when running in VSCode PowerShell extension when on PowerShell 5.1 (other versions work fine!)&lt;/strong&gt; It works fine when running in PowerShell 5.1 console, or ISE (shrug!).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a small taste of the code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-BGInfo -MonitorIndex 0 {&#xA;    # Lets add computer name, but lets use builtin values for that&#xA;    New-BGInfoValue -BuiltinValue HostName -Color Red -FontSize 20 -FontFamilyName &#39;Calibri&#39;&#xA;    New-BGInfoValue -BuiltinValue FullUserName&#xA;    New-BGInfoValue -BuiltinValue CpuName&#xA;    New-BGInfoValue -BuiltinValue CpuLogicalCores&#xA;    New-BGInfoValue -BuiltinValue RAMSize&#xA;    New-BGInfoValue -BuiltinValue RAMSpeed&#xA;&#xA;    # Lets add Label, but without any values, kinf of like section starting&#xA;    New-BGInfoLabel -Name &#34;Drives&#34; -Color LemonChiffon -FontSize 16 -FontFamilyName &#39;Calibri&#39;&#xA;&#xA;    # Lets get all drives and their labels&#xA;    foreach ($Disk in (Get-Disk)) {&#xA;        $Volumes = $Disk | Get-Partition | Get-Volume&#xA;        foreach ($V in $Volumes) {&#xA;            New-BGInfoValue -Name &#34;Drive $($V.DriveLetter)&#34; -Value $V.SizeRemaining&#xA;        }&#xA;    }&#xA;} -FilePath $PSScriptRoot\Samples\PrzemyslawKlysAndKulkozaurr.jpg -ConfigurationDirectory $PSScriptRoot\Output -PositionX 100 -PositionY 100 -WallpaperFit Center&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s how the wallpaper will look like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/EvotecIT/PowerBGInfo/master/Examples/Output/PrzemyslawKlysAndKulkozaurr.jpg&#34; alt=&#34;PowerBGInfo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use only builtin values&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-BGInfo -MonitorIndex 0 {&#xA;    # Lets add computer name, but lets use builtin values for that&#xA;    New-BGInfoValue -BuiltinValue HostName -Color Red -FontSize 20 -FontFamilyName &#39;Calibri&#39;&#xA;    New-BGInfoValue -BuiltinValue FullUserName -Color White&#xA;    New-BGInfoValue -BuiltinValue CpuName -Color White&#xA;    New-BGInfoValue -BuiltinValue CpuLogicalCores -Color White -ValueColor Red&#xA;    New-BGInfoValue -BuiltinValue RAMSize -Color White&#xA;    New-BGInfoValue -BuiltinValue RAMSpeed -Color White -ValueColor ([SixLabors.ImageSharp.Color]::Aquamarine)&#xA;    New-BGInfoValue -BuiltinValue RAMPartNumber -Color White&#xA;    New-BGInfoValue -BuiltinValue BiosVersion -Color White&#xA;    New-BGInfoValue -BuiltinValue BiosManufacturer -Color White&#xA;    New-BGInfoValue -BuiltinValue BiosReleaseDate -Color White&#xA;    New-BGInfoValue -BuiltinValue OSName -Color White -Name &#34;Operating System&#34;&#xA;    New-BGInfoValue -BuiltinValue OSVersion -Color White&#xA;    New-BGInfoValue -BuiltinValue OSArchitecture -Color White&#xA;    New-BGInfoValue -BuiltinValue OSBuild -Color White&#xA;    New-BGInfoValue -BuiltinValue OSInstallDate -Color White&#xA;    New-BGInfoValue -BuiltinValue OSLastBootUpTime -Color White&#xA;&#xA;} -FilePath &#34;C:\Support\GitHub\PowerBGInfo\Examples\Samples\TapN-Evotec-1600x900.jpg&#34; -ConfigurationDirectory $PSScriptRoot\Output -PositionX 75 -PositionY 75 -WallpaperFit Fit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s the output from command above&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/EvotecIT/PowerBGInfo/master/Examples/Output/TapN-Evotec-1600x900.jpg&#34; alt=&#34;PowerBGInfo&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>