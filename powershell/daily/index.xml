<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-01T01:43:14Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dafthack/MFASweep</title>
    <updated>2022-12-01T01:43:14Z</updated>
    <id>tag:github.com,2022-12-01:/dafthack/MFASweep</id>
    <link href="https://github.com/dafthack/MFASweep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for checking if MFA is enabled on multiple Microsoft Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MFASweep&lt;/h1&gt; &#xA;&lt;p&gt;MFASweep is a PowerShell script that attempts to log in to various Microsoft services using a provided set of credentials and will attempt to identify if MFA is enabled. Depending on how conditional access policies and other multi-factor authentication settings are configured some protocols may end up being left single factor. It also has an additional check for ADFS configurations and can attempt to log in to the on-prem ADFS server if detected.&lt;/p&gt; &#xA;&lt;p&gt;Currently MFASweep has the ability to login to the following services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Graph API&lt;/li&gt; &#xA; &lt;li&gt;Azure Service Management API&lt;/li&gt; &#xA; &lt;li&gt;Microsoft 365 Exchange Web Services&lt;/li&gt; &#xA; &lt;li&gt;Microsoft 365 Web Portal w/ 6 device types (Windows, Linux, MacOS, Android Phone, iPhone, Windows Phone)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft 365 Active Sync&lt;/li&gt; &#xA; &lt;li&gt;ADFS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING: This script attempts to login to the provided account TEN (10) different times (11 if you include ADFS). If you entered an incorrect password this may lock the account out.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information check out the blog post here: &lt;a href=&#34;https://www.blackhillsinfosec.com/exploiting-mfa-inconsistencies-on-microsoft-services/&#34;&gt;Exploiting MFA Inconsistencies on Microsoft Services&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dafthack/MFASweep/master/example.jpg?raw=true&#34; alt=&#34;MFASweep Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2296229/204374571-0b299177-a5ab-4e05-a313-d9fe5151d1d6.png&#34; alt=&#34;Single Factor Access Results Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This command will use the provided credentials and attempt to authenticate to the Microsoft Graph API, Azure Service Management API, Microsoft 365 Exchange Web Services, Microsoft 365 Web Portal with both a desktop browser and mobile, and Microsoft 365 Active Sync.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-MFASweep -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command runs with the default auth methods and checks for ADFS as well.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-MFASweep -Username targetuser@targetdomain.com -Password Winter2020 -Recon -IncludeADFS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Individual Modules&lt;/h2&gt; &#xA;&lt;p&gt;Each individual module can be run separately if needed as well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft Graph API&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-GraphAPIAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Azure Service Management API&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-AzureManagementAPIAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft 365 Exchange Web Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-EWSAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft 365 Web Portal&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-O365WebPortalAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft 365 Web Portal w/ Mobile User Agent&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-O365WebPortalAuthMobile -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft 365 Active Sync&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-O365ActiveSyncAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;ADFS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-ADFSAuth -Username targetuser@targetdomain.com -Password Winter2020 &#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>