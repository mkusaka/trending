<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-09T01:48:59Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>olafhartong/sysmon-modular</title>
    <updated>2022-06-09T01:48:59Z</updated>
    <id>tag:github.com,2022-06-09:/olafhartong/sysmon-modular</id>
    <link href="https://github.com/olafhartong/sysmon-modular" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of sysmon configuration modules&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sysmon-modular | A Sysmon configuration repository for everybody to customise&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/raw/master/license.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/olafhartong/sysmon-modular.svg?style=flat-square&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/maintenance/yes/2022.svg?style=flat-square&#34; alt=&#34;Maintenance&#34;&gt; &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/commit/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/olafhartong/sysmon-modular.svg?style=flat-square&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/olafhartong/sysmon-modular/workflows/Build%20Sysmon%20config%20with%20all%20modules/badge.svg?sanitize=true&#34; alt=&#34;Build Sysmon config with all modules&#34;&gt; &lt;a href=&#34;https://twitter.com/olafhartong&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/olafhartong.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/B5n6skNTwy&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/715302469751668787/widget.png?style=shield&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a Microsoft Sysinternals Sysmon &lt;a href=&#34;https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon&#34;&gt;download here&lt;/a&gt; configuration repository, set up modular for easier maintenance and generation of specific configs.&lt;/p&gt; &#xA;&lt;p&gt;The sysmonconfig.xml within the repo is automatically generated after a successful merge by the PowerShell script and a successful load by Sysmon in an Azure Pipeline run.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-Grenerated configurations&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Config&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olafhartong/sysmon-modular/master/sysmonconfig.xml&#34;&gt;default - sysmonconfig.xml&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is the balanced configuration, most used, more information &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/wiki/Configuration-options#generating-the-default-configuration&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olafhartong/sysmon-modular/master/sysmonconfig-excludes-only.xml&#34;&gt;verbose - sysmonconfig-excludes-only.xml&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is the very verbose configuration, all events are included, only the exclusion modules are applied. This should not be used in production without validation, will generate a significant amount of data and might impact performance. More information &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/wiki/Configuration-options#generating-custom-configs&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sysmon-mde-augmentation&lt;/td&gt; &#xA;   &lt;td&gt;A configuration to augment Defender for Endpoint, intended to augment the information and have as little overlap as possible. Coming soon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Do keep in mind that tuning per environment is &lt;em&gt;strongly&lt;/em&gt; recommended. More info on how to generate a custom config, incorporating your own modules &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/wiki/Configuration-options#generating-custom-configs&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;NOTICE; Sysmon below 13 will not completely be compatible with this configuration&lt;/h2&gt; &#xA;&lt;p&gt;Older versions are still available in the branches, but are not as complete as the current branch&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;V8.x &amp;gt;&amp;gt; &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/tree/version-8&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;V9.x &amp;gt;&amp;gt; &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/tree/version-9&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;V10.4 &amp;gt;&amp;gt; &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/tree/v10.4&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;V12.x &amp;gt;&amp;gt; &lt;a href=&#34;https://github.com/olafhartong/sysmon-modular/tree/version-12&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To understand added features in the latest version, have a look at my &lt;a href=&#34;https://medium.com/falconforce/sysmon-11-dns-improvements-and-filedelete-events-7a74f17ca842&#34;&gt;small blog post&lt;/a&gt; or watch my &lt;a href=&#34;http://www.irongeek.com/i.php?page=videos/derbycon9/stable-36-endpoint-detection-super-powers-on-the-cheap-with-sysmon-olaf-hartong&#34;&gt;DerbyCon talk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I do recommend using a minimal number of configurations within your environment for multiple obvious reasons, like; maintenance, output equality, manageability and so on. But do make tailored configurations for Domain Controllers, Servers and workstations.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Big credit goes out to SwiftOnSecurity for laying a great foundation and making this repo possible! &lt;strong&gt;&lt;a href=&#34;https://github.com/SwiftOnSecurity/sysmon-config/raw/master/sysmonconfig-export.xml&#34;&gt;sysmonconfig-export.xml&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Final thanks to &lt;strong&gt;&lt;a href=&#34;https://twitter.com/iisresetme&#34;&gt;Mathias Jessen&lt;/a&gt;&lt;/strong&gt; for his Merge script, without it, this project would not have worked as well.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests / issue tickets and new additions will be greatly appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;p&gt;I started a series of blog posts covering this repo;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@olafhartong/endpoint-detection-superpowers-on-the-cheap-part-1-e9c28201ac47&#34;&gt;Endpoint detection Superpowers on the cheap - part1 - MITRE ATT&amp;amp;CK, Sysmon and my modular configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@olafhartong/endpoint-detection-superpowers-on-the-cheap-part-2-deploy-and-maintain-d06580329fe8&#34;&gt;Endpoint detection Superpowers on the cheap — part 2 — Deploy and Maintain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@olafhartong/endpoint-detection-superpowers-on-the-cheap-part-3-sysmon-tampering-49c2dc9bf6d9&#34;&gt;Endpoint detection Superpowers on the cheap — part 3 — Sysmon Tampering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mitre ATT&amp;amp;CK&lt;/h2&gt; &#xA;&lt;p&gt;I strive to map all configurations to the ATT&amp;amp;CK framework whenever Sysmon is able to detect it. Please note this is a possible log entry that might lead to a detection, not in all cases is this the only telemetry for that technique. Additionally there might be more techniques releated to that rule, the one mapped is the one I deemed most likely.&lt;/p&gt; &#xA;&lt;h2&gt;Required actions&lt;/h2&gt; &#xA;&lt;p&gt;I highly recommend looking at the configs before implementing them in your production environment. This enables you to have as actionable logging as possible and as litte noise as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;You will need to install and observe the results of the configuration in your own environment before deploying it widely. For example, you will need to exclude actions of your antivirus, which will otherwise likely fill up your logs with useless information.&lt;/p&gt; &#xA;&lt;h3&gt;Generating a config&lt;/h3&gt; &#xA;&lt;h4&gt;PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$&amp;gt; git clone https://github.com/olafhartong/sysmon-modular.git&#xA;$&amp;gt; cd sysmon modular&#xA;$&amp;gt; . .\Merge-SysmonXml.ps1&#xA;$&amp;gt; Merge-AllSysmonXml -Path ( Get-ChildItem &#39;[0-9]*\*.xml&#39;) -AsString | Out-File sysmonconfig.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating custom configs&lt;/h3&gt; &#xA;&lt;p&gt;Below functions with great thanks to mbmy&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;New Function:&lt;/strong&gt; &lt;code&gt;Find-RulesInBasePath&lt;/code&gt; - takes a base path (i.e. C:\folder\sysmon-modular) and finds all candidate xml rule files based upon regex pattern&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PS C:\Users\sysmon\sysmon-modular&amp;gt; Find-RulesInBasePath -BasePath C:\users\sysmon\sysmon-modular\ -OutputRules | Out-File available_rules.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Merge-AllSysmonXml New Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-BasePath&lt;/code&gt; - finds all candidate xml rule files from a provided path based upon regex pattern and merges them&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PS C:\Users\sysmon\sysmon-modular&amp;gt; Merge-AllSysmonXml -AsString -BasePath C:\Users\sysmon\sysmon-modular\&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-ExcludeList&lt;/code&gt; - Combined with -BasePath, takes a list of rules and excludes them from found rules prior to merge&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PS C:\Users\sysmon\sysmon-modular&amp;gt; Merge-AllSysmonXml -AsString -BasePath C:\Users\sysmon\sysmon-modular\ -ExcludeList C:\users\sysmon\sysmon-modular\exclude_rules.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-IncludeList&lt;/code&gt; - Combined with -BasePath, finds all available rules from base path but only merges those defined in a list&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PS C:\Users\sysmon\sysmon-modular&amp;gt; Merge-AllSysmonXml -AsString -BasePath C:\Users\sysmon\sysmon-modular\ -IncludeList C:\users\sysmon\sysmon-modular\include_rules.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Include/Exclude List Format Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-1_process_creation\exclude_adobe_acrobat.xml&#34;&gt;3_network_connection_initiated\include_native_windows_tools.xml&#xA;12_13_14_registry_event\exclude_internet_explorer_settings.xml&#xA;12_13_14_registry_event\exclude_webroot.xml&#xA;17_18_pipe_event\include_winreg.xml&#xA;19_20_21_wmi_event\include_wmi_create.xml&#xA;2_file_create_time\exclude_chrome.xml&#xA;3_network_connection_initiated\include_native_windows_tools.xml&#xA;3_network_connection_initiated\include_ports_proxies.xml&#xA;8_create_remote_thread\include_general_commment.xml&#xA;8_create_remote_thread\include_psinject.xml&#xA;9_raw_access_read\include_general_commment.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building a config with all sysmon-modular rules for certain event IDs (include whole directory) and then disabling all event ids without imported rules&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# generate the config&#xA;$sysmonconfig =  Merge-AllSysmonXml  -BasePath . -IncludeList $workingFolder\include.txt -VerboseLogging -PreserveComments&#xA;&#xA;# flip off any rule groups where rules were not imported&#xA;foreach($rg in $sysmonconfig.SelectNodes(&#34;/Sysmon/EventFiltering/RuleGroup [*/@onmatch]&#34;))&#xA;{&#xA;    $ruleNodes = $rg.SelectNodes(&#34;./* [@onmatch]&#34;)&#xA;&#xA;    if(     $ruleNodes -eq $null `&#xA;        -or $ruleNodes.ChildNodes.count -gt 0)&#xA;    {&#xA;        # no rule nodes found (unlikely) or more than one rule found&#xA;        continue&#xA;    }&#xA;&#xA;    # RuleGroup with only one rule node&#xA;    $ruleNode = $ruleNodes[0]&#xA;&#xA;    if($ruleNode.onmatch -eq &#34;exclude&#34; -and $ruleNode.ChildNodes.count -eq 0 )&#xA;    {&#xA;        $message = &#34;{0} {1} has no matching conditions.  Toggled to &#39;include&#39; to limit output&#34; -f $ruleNode.Name,$rg.Name&#xA;        Write-Warning $message&#xA;&#xA;        $ruleNode.onmatch = &#34;include&#34;&#xA;        $comment = $sysmonconfig.CreateComment($message)&#xA;        $rg.AppendChild($comment) | Out-Null&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include/Exclude List Format Example (for entire rule/event families):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1_process_creation&#xA;5_process_ended&#xA;11_file_create&#xA;23_file_delete&#xA;7_image_load&#xA;17_18_pipe_event&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Run with administrator rights&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysmon.exe -accepteula -i sysmonconfig.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update existing configuration&lt;/h3&gt; &#xA;&lt;p&gt;Run with administrator rights&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysmon.exe -c sysmonconfig.xml&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>JulianHayward/Azure-MG-Sub-Governance-Reporting</title>
    <updated>2022-06-09T01:48:59Z</updated>
    <id>tag:github.com,2022-06-09:/JulianHayward/Azure-MG-Sub-Governance-Reporting</id>
    <link href="https://github.com/JulianHayward/Azure-MG-Sub-Governance-Reporting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AzGovViz (Azure Governance Visualizer) is a PowerShell script that captures Azure Governance related information such as Azure Policy, RBAC (a lot more) by polling Azure ARM and Microsoft Graph APIs. From the collected data AzGovViz provides visibility on your HierarchyMap, creates a TenantSummary, creates DefinitionInsights and builds granular …&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AzGovViz - Azure Governance Visualizer&lt;/h1&gt; &#xA;&lt;p&gt;Do you want to get granular insights on your technical Azure Governance implementation? - document it in CSV, HTML, Markdown and JSON?&lt;br&gt; AzGovViz is a PowerShell based script that iterates your Azure Tenant´s Management Group hierarchy down to Subscription level. It captures most relevant Azure governance capabilities such as Azure Policy, RBAC and Blueprints and a lot more. From the collected data AzGovViz provides visibility on your &lt;strong&gt;HierarchyMap&lt;/strong&gt;, creates a &lt;strong&gt;TenantSummary&lt;/strong&gt;, creates &lt;strong&gt;DefinitionInsights&lt;/strong&gt; and builds granular &lt;strong&gt;ScopeInsights&lt;/strong&gt; on Management Groups and Subscriptions. The technical requirements as well as the required permissions are minimal.&lt;/p&gt; &#xA;&lt;p&gt;You can run the script either for your Tenant Root Group or any other Management Group.&lt;/p&gt; &#xA;&lt;h2&gt;Mission&lt;/h2&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;Governance can be a complex thing&lt;/em&gt;..&#34;&lt;/p&gt; &#xA;&lt;p&gt;Challenges:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Holistic overview on governance implementation&lt;/li&gt; &#xA; &lt;li&gt;Connecting the dots&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;AzGovViz is intended to help you to get a holistic overview on your technical Azure Governance implementation by &lt;strong&gt;connecting the dots&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/AzGovVizConnectingDots_v4.2.png&#34; alt=&#34;ConnectingDot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AzGovViz @ Microsoft CAF &amp;amp; WAF&lt;/h2&gt; &#xA;&lt;h3&gt;Microsoft Cloud Adoption Framework (CAF)&lt;/h3&gt; &#xA;&lt;p&gt;Listed as &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/reference/tools-templates#govern&#34;&gt;tool&lt;/a&gt; for the Govern discipline in the Microsoft Cloud Adoption Framework&lt;/p&gt; &#xA;&lt;p&gt;Included in the Microsoft Cloud Adoption Framework´s &lt;a href=&#34;https://azuredevopsdemogenerator.azurewebsites.net/?name=strategyplan&#34;&gt;Strategy-Plan-Ready-Gov&lt;/a&gt; Azure DevOps Demo Generator template&lt;/p&gt; &#xA;&lt;h3&gt;Microsoft Well Architected Framework (WAF)&lt;/h3&gt; &#xA;&lt;p&gt;Listed as &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/framework/security/monitor-tools&#34;&gt;security monitoring tool&lt;/a&gt; in the Microsoft Well Architected Framework&lt;/p&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#release-history&#34;&gt;Release history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#demo&#34;&gt;Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#media&#34;&gt;Media&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#slideset&#34;&gt;Slideset&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#outputs&#34;&gt;Outputs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#azgovviz-setup-guide&#34;&gt;AzGovViz Setup Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#technical-documentation&#34;&gt;Technical documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#permissions-overview&#34;&gt;Permissions overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#required-permissions-in-azure&#34;&gt;Required permissions in Azure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#required-permissions-in-azure-active-directory&#34;&gt;Required permissions in Azure Active Directory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#powershell&#34;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#api-reference&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#integrate-with-azops&#34;&gt;Integrate with AzOps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#integrate-psrule-for-azure&#34;&gt;Integrate PSRule for Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#stats&#34;&gt;Stats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#facts&#34;&gt;Facts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#contributions&#34;&gt;Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#azadvertizer&#34;&gt;AzAdvertizer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#azadserviceprincipalinsights&#34;&gt;AzADServicePrincipalInsights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#closing-note&#34;&gt;Closing note&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release history&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Changes&lt;/strong&gt; (2022-Jun-03 / Major)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimize Policy Exemption output (HTML TenantSummary, CSV output)&lt;/li&gt; &#xA; &lt;li&gt;Update Azure DevOps variables YAML - add parameter &lt;code&gt;-DebugAzAPICall&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update PSRule CSV output sorting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Passed tests: Powershell Core 7.2.3 on Windows&lt;br&gt; Passed tests: Powershell Core 7.2.3 Azure DevOps hosted agent ubuntu-20.04&lt;br&gt; Passed tests: Powershell Core 7.2.3 Github Actions hosted agent ubuntu-latest&lt;br&gt; Passed tests: Powershell Core 7.2.3 GitHub Codespaces mcr.microsoft.com/powershell:latest&lt;br&gt; Passed tests: AzureCloud, AzureUSGovernment, AzureChinaCloud&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/history.md&#34;&gt;Full release history&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.azadvertizer.net/azgovvizv4/demo/AzGovViz_demo.html&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/demo4_66.png&#34; alt=&#34;Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.azadvertizer.net/azgovvizv4/demo/AzGovViz_demo.html&#34;&gt;Demo (v6_major_20220521_1)&lt;/a&gt;&lt;br&gt; Enterprise-Scale (&lt;a href=&#34;https://github.com/Azure/Enterprise-Scale/raw/main/docs/reference/wingtip/README.md&#34;&gt;WingTip&lt;/a&gt;) implementation&lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;https://github.com/JulianHayward/AzGovViz&#34;&gt;demo output&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Media&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Dev Radio (YouTube) &lt;a href=&#34;https://www.youtube.com/watch?v=hZXvF5oypLE&#34;&gt;Get visibility into your environment with AzGovViz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jack Tracey (Cloud Solution Architect Microsoft) &lt;a href=&#34;https://jacktracey.co.uk/azgovviz-with-azure-devops/&#34;&gt;AzGovViz With Azure DevOps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Slideset&lt;/h3&gt; &#xA;&lt;p&gt;Short presentation on AzGovViz [&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/slides/AzGovViz_intro.pdf&#34;&gt;download&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hierarchy of Management Groups&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Builds a visual hierarchy of your Management Group setup including counts on linked Subscriptions, Policy assignments, scoped Policy/Set definitions and Role assignments per Management Group&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Azure Policy&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom Policy definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Scope information&lt;/li&gt; &#xA;     &lt;li&gt;Policy effect&lt;/li&gt; &#xA;     &lt;li&gt;If Policy effect is DeployIfNotExists (DINE) will show the specified RBAC Role&lt;/li&gt; &#xA;     &lt;li&gt;List of assignments&lt;/li&gt; &#xA;     &lt;li&gt;Usage in custom PolicySet definitions&lt;/li&gt; &#xA;     &lt;li&gt;System metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39; (&#39;createdBy&#39;, &#39;updatedBy&#39; identity is fully resolved)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Orphaned custom Policy definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;List of custom Policy definitions that matches the following criteria: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Policy definition is not used in any custom PolicySet definition&lt;/li&gt; &#xA;       &lt;li&gt;No Policy assignment exists for the Policy definition&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Custom PolicySet definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Scope information&lt;/li&gt; &#xA;     &lt;li&gt;List unique assignments&lt;/li&gt; &#xA;     &lt;li&gt;List of Policy definitions used&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Orphaned custom PolicySet definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Criteria: no Policy assignment exists for the PolicySet definition&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Custom PolicySet definitions using deprecated built-in Policy definitions&lt;/li&gt; &#xA;   &lt;li&gt;Policy assignments of deprecated built-in Policy definition&lt;/li&gt; &#xA;   &lt;li&gt;Policy Exemptions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Lists all Exemptions (scopes: Management Groups, Subscriptions, ResourceGroups, Resources)&lt;/li&gt; &#xA;     &lt;li&gt;Enrich information on Exemption scope&lt;/li&gt; &#xA;     &lt;li&gt;Summary on expired Exemptions&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Policy assignments orphaned &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Policy assignments&#39;s Policy definition does not exist / likely Management Group scoped Policy defintion - Management Group deleted&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Policy assignments throughout the entirety of scopes (Management Groups, Subscriptions and Resource Groups) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Core information on Policy assignments &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;NonCompliance Message on Policy assignment for a PolicySet will only show the default non-compliance message&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Advanced/enriched information on Policy assignments &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Policy assignment scope (at scope/inheritance)&lt;/li&gt; &#xA;       &lt;li&gt;Indicates if scope is excluded from Policy assignment&lt;/li&gt; &#xA;       &lt;li&gt;Indicates if Exemption applies for scope&lt;/li&gt; &#xA;       &lt;li&gt;Policy/Resource Compliance (Policy: NonCompliant, Compliant; Resource: NonCompliant, Compliant, Conflicting)&lt;/li&gt; &#xA;       &lt;li&gt;Related RBAC Role assignments (if Policy effect is DeployIfNotExists (DINE) or Modify)&lt;/li&gt; &#xA;       &lt;li&gt;Resolved Managed Identity (if Policy effect is DeployIfNotExists (DINE) or Modify)&lt;/li&gt; &#xA;       &lt;li&gt;System metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39; (&#39;createdBy&#39;, &#39;updatedBy&#39; identity is fully resolved)&lt;/li&gt; &#xA;       &lt;li&gt;Parameters used&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom Role definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;List assignable scopes&lt;/li&gt; &#xA;     &lt;li&gt;System metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39; (&#39;createdBy&#39;, &#39;updatedBy&#39; identity is fully resolved)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Orphaned custom Role definitions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;List of custom Role definitions that matches the following criteria: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Role definition is not used in any Role assignment&lt;/li&gt; &#xA;       &lt;li&gt;Role is not used in a Policy definition´s rule (roleDefinitionIds)&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Orphaned Role assignments &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;List of Role assignments that matches the following criteria: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Role definition was deleted although and assignment existed&lt;/li&gt; &#xA;       &lt;li&gt;Role assignmet&#39;s target identity (User, Group, ServicePrincipal) was deleted&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Role assignments throughout the entirety of scopes (Management Groups, Subscriptions, Resource Groups and Resources) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Core information on Role assignments&lt;/li&gt; &#xA;     &lt;li&gt;Advanced information on Role assignments &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Role assignment scope (at scope / inheritance)&lt;/li&gt; &#xA;       &lt;li&gt;For Role Assignments on Groups the AAD Group members are fully resolved. With this capability AzGovViz can ultimately provide holistic insights on permissions granted&lt;/li&gt; &#xA;       &lt;li&gt;For Role Assignments on Groups the AAD Group members count (transitive) will be reported&lt;/li&gt; &#xA;       &lt;li&gt;For identity-type == &#39;ServicePrincipal&#39; the type (Application (internal/external) / ManagedIdentity (System assigned/User assigned)) will be revealed&lt;/li&gt; &#xA;       &lt;li&gt;For identity-type == &#39;User&#39; the userType (Member/Guest) will be revealed&lt;/li&gt; &#xA;       &lt;li&gt;Related Policy assignments (Policy assignment that leverages the DeployIfNotExists (DINE) or Modify effect)&lt;/li&gt; &#xA;       &lt;li&gt;System metadata &#39;createdOn, createdBy&#39; (&#39;createdBy&#39; identity is fully resolved)&lt;/li&gt; &#xA;       &lt;li&gt;Determine if the Role assignment is &#39;standing&#39; or PIM (Privileged Identity Management) managed&lt;/li&gt; &#xA;       &lt;li&gt;Determine if the Role assignmet&#39;s Role definition is capable to write Role assignments&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;Role assignments ClassicAdministrators&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Security &amp;amp; Best practice analysis &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Existence of custom Role definition that reflect &#39;Owner&#39; permissions&lt;/li&gt; &#xA;     &lt;li&gt;Report all Role definitions that are capable to write Role assignements, list all Role assignments for those Role definitions&lt;/li&gt; &#xA;     &lt;li&gt;Role assignments for &#39;Owner&#39; permissions on identity-type == &#39;ServicePrincipal&#39;&lt;/li&gt; &#xA;     &lt;li&gt;Role assignments for &#39;Owner&#39; permissions on identity-type != &#39;Group&#39;&lt;/li&gt; &#xA;     &lt;li&gt;Role assignments for &#39;User Access Administrator&#39; permissions on identity-type != &#39;Group&#39;&lt;/li&gt; &#xA;     &lt;li&gt;High priviledge Role assignments for &#39;Guest Users&#39; (Owner &amp;amp; User Access Administrator)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blueprints&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Blueprint scopes and assignments&lt;/li&gt; &#xA;   &lt;li&gt;Orphaned Blueprints&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Management Groups&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Group count, level/depth, MG children, Sub children&lt;/li&gt; &#xA;   &lt;li&gt;Hierarchy Settings | Default Management Group Id&lt;/li&gt; &#xA;   &lt;li&gt;Hierarchy Settings | Require authorization for Management Group creation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Subscriptions, Resources &amp;amp; Defender&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Subscription insights &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;QuotaId, State, Tags, Microsoft Defender for Cloud Secure Score, Cost, Management Group path, Role assignment limit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Tag Name usage &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Insights on usage of Tag Names on Subscriptions, ResourceGroups and Resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Resources &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Resource Types &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;ResourceType count per location&lt;/li&gt; &#xA;       &lt;li&gt;Resource Provider &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;Resource Provider state aggregation throughout all Subscriptions&lt;/li&gt; &#xA;         &lt;li&gt;Explicit Resource Provider state per Subscription&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;Resource Locks &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;Aggregated insights for Lock and respective Lock-type usage on Subscriptions, ResourceGroups and Resources&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Microsoft Defender for Cloud &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Summary of Microsoft Defender for Cloud coverage by plan (count of Subscription per plan/tier)&lt;/li&gt; &#xA;     &lt;li&gt;Summary of Microsoft Defender for Cloud plans coverage by Subscription (plan/tier)&lt;/li&gt; &#xA;     &lt;li&gt;Highlight the usage of deprecated Defender plans (e.g. Container Registry &amp;amp; Kubernetes)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;UserAssigned Managed Identities assigned to Resources / vice versa &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Summary of all UserAssigned Managed Identities assigned to Resources&lt;/li&gt; &#xA;     &lt;li&gt;Summary of Resources that have an UserAssigned Managed Identity assigned&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Diagnostics&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Groups Diagnostic settings report &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Management Group, Diagnostic setting name, target type (LA, SA, EH), target Id, Log Category status&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Subscriptions Diagnostic settings report &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Subscription, Diagnostic setting name, target type (LA, SA, EH), target Id, Log Category status&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Resources Diagnostic capabilty report (1st party Resource types only) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ResourceType capability for Resource Diagnostics including &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;ResourceType count and information if capable for logs including list of available og categories&lt;/li&gt; &#xA;       &lt;li&gt;ResourceType count and information if capable for metrics&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Lifecyle recommendations for existing Azure Policy definitions that configure Resource diagnostics of type=Log &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Check if Policy definitions hold the latest set of applicable log categories&lt;/li&gt; &#xA;     &lt;li&gt;Recommendation to create Policy definition for ResourceType if supported&lt;/li&gt; &#xA;     &lt;li&gt;Lists all PolicyDefinitions that deploy Resource diagnostics of type=log, lists Policy assignments and PolicySet assignments if the Policy defintion is used in a PolicySet definition&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Limits&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tenant approaching ARM limits: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Custom Role definitions&lt;/li&gt; &#xA;     &lt;li&gt;PolicySet definitions&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Management Groups approaching ARM limits: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Policy assignment limit&lt;/li&gt; &#xA;     &lt;li&gt;Policy / PolicySet definition scope limit&lt;/li&gt; &#xA;     &lt;li&gt;Role assignment limit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Subscriptions approaching ARM limits: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ResourceGroup limit&lt;/li&gt; &#xA;     &lt;li&gt;Subscription Tags limit&lt;/li&gt; &#xA;     &lt;li&gt;Policy assignment limit&lt;/li&gt; &#xA;     &lt;li&gt;Policy / PolicySet definition scope limit&lt;/li&gt; &#xA;     &lt;li&gt;Role assignment limit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Azure Active Directory (AAD)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Insights on those Service Principals where a Role assignment exists (scopes: Management Group, Subscription, ResourceGroup, Resource): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Type=ManagedIdentity &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Core information on the Service Principal such as related Ids, use case information and Role assignments&lt;/li&gt; &#xA;       &lt;li&gt;For UserManaged Identities the count of assignment to Resources is reported&lt;/li&gt; &#xA;       &lt;li&gt;Orphaned Managed Identity - Policy assignment related Managed Identities / the related Policy assignment does not exist&lt;/li&gt; &#xA;       &lt;li&gt;UserAssigned Managed Identity - count of Resources that it is assigned to&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Type=Application &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Secrets and Certificates expiry information &amp;amp; warning&lt;/li&gt; &#xA;       &lt;li&gt;Report on external Service Principals&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consumption&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Aggregated consumption insights throughout the entirety of scopes (Management Groups, Subscriptions)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change tracking&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Policy &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Created/Updated Policy and PolicySet definitions (system metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39;)&lt;/li&gt; &#xA;     &lt;li&gt;Created/Updated Policy assignments (system metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;RBAC &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Created/Updated Role definitions (system metadata &#39;createdOn, createdBy, updatedOn, updatedBy&#39;)&lt;/li&gt; &#xA;     &lt;li&gt;Created Role assignments (system metadata &#39;createdOn, createdBy)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Resources &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregated insights on Created/Changed Resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;HTML file&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;HierarchyMap&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/HierarchyMap.png&#34; alt=&#34;alt text&#34; title=&#34;HierarchyMap&#34;&gt;&lt;br&gt; &lt;strong&gt;TenantSummary&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/TenantSummary.png&#34; alt=&#34;alt text&#34; title=&#34;TenantSummary&#34;&gt;&lt;br&gt; &lt;strong&gt;DefinitionInsights&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/DefinitionInsights.png&#34; alt=&#34;alt text&#34; title=&#34;DefinitionInsights&#34;&gt; &lt;strong&gt;ScopeInsights&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/ScopeInsights.png&#34; alt=&#34;alt text&#34; title=&#34;ScopeInsights&#34;&gt;&lt;br&gt; *&lt;em&gt;IDs from screenshot are randomized&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;markdown in Azure DevOps Wiki as Code&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/AzDO_md_v4.png&#34; alt=&#34;alt text&#34; title=&#34;Azure DevOps Wiki as Code&#34;&gt; *&lt;em&gt;IDs from screenshot are randomized&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: there is some fixing ongoing at the mermaid project to optimize the graphical experience:&lt;br&gt; &lt;a href=&#34;https://github.com/mermaid-js/mermaid/issues/1177&#34;&gt;https://github.com/mermaid-js/mermaid/issues/1177&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Outputs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CSV file&lt;/li&gt; &#xA; &lt;li&gt;HTML file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the HTML file uses Java Script and CSS files which are hosted on various CDNs (Content Delivery Network). For details review the BuildHTML region in the PowerShell script file.&lt;/li&gt; &#xA;   &lt;li&gt;Browsers tested: Edge, new Edge and Chrome&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MD (Markdown) file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for use with Azure DevOps Wiki leveraging the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/devops/release-notes/2019/sprint-158-update#mermaid-diagram-support-in-wiki&#34;&gt;Mermaid&lt;/a&gt; plugin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;JSON folder (&lt;a href=&#34;https://github.com/JulianHayward/AzGovViz&#34;&gt;demo-output&lt;/a&gt;) containing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;all Policy and Role assignments (Scopes: Tenant, Management Groups and Subscriptions)&lt;/li&gt; &#xA;   &lt;li&gt;all BuiltIn and Custom Policy/Set definitions (Scopes: Management Groups and Subscriptions)&lt;/li&gt; &#xA;   &lt;li&gt;all BuiltIn and Custom Role definitions&lt;/li&gt; &#xA;   &lt;li&gt;JSON file of ManagementGroup Hierarchy including all Custom Policy/Set and RBAC definitions, Policy and Role assignments and some more relevant information&lt;/li&gt; &#xA;   &lt;li&gt;Tenant tree including all Policy and Role assignments AND all Custom Policy/Set and Role definitions&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/jsonfolderfull450.jpg&#34; alt=&#34;alt text&#34; title=&#34;JSONFolder&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AzGovViz Setup Guide&lt;/h2&gt; &#xA;&lt;p&gt;💡 Although 30 minutes of troubleshooting can save you 5 minutes reading the documentation :) ..&lt;br&gt; Check the detailed &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/setup.md&#34;&gt;Setup Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technical documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Permissions overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/permissions.png&#34; alt=&#34;alt text&#34; title=&#34;example output&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Required permissions in Azure&lt;/h3&gt; &#xA;&lt;p&gt;This permission is &lt;b&gt;mandatory&lt;/b&gt; in each and every scenario!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Scenario&lt;/th&gt; &#xA;   &lt;th&gt;Permissions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;ANY&lt;/b&gt;&lt;br&gt;Console / Azure DevOps / GitHub Actions ..&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Reader&lt;/b&gt; Role assignment on &lt;b&gt;Management Group&lt;/b&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Required permissions in Azure Active Directory&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Scenario&lt;/th&gt; &#xA;   &lt;th&gt;Permissions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;A&lt;/b&gt;&lt;br&gt;Console | Member user account&lt;/td&gt; &#xA;   &lt;td&gt;No AAD permissions required &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;B&lt;/b&gt;&lt;br&gt;Console | Guest user account&lt;/td&gt; &#xA;   &lt;td&gt;If the tenant is hardened (AAD External Identities / Guest user access = most restrictive) then Guest User must be assigned the AAD Role &#39;Directory readers&#39;&lt;br&gt; 💡 &lt;a href=&#34;https://github.com/MicrosoftDocs/azure-docs/raw/master/articles/active-directory/fundamentals/users-default-permissions.md#compare-member-and-guest-default-permissions&#34; target=&#34;_blank&#34;&gt;Compare member and guest default permissions&lt;/a&gt;&lt;br&gt; 💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/enterprise-users/users-restrict-guest-permissions&#34; target=&#34;_blank&#34;&gt;Restrict Guest permissions&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;C&lt;/b&gt;&lt;br&gt;Console | Service Principal | Managed Identity&lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;table&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Capability&lt;/th&gt; &#xA;       &lt;th&gt;API Permissions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;Users&lt;/td&gt; &#xA;       &lt;td&gt;Service Principal&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / User / User.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/user-get#permissions&#34; target=&#34;_blank&#34;&gt;Get user&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;Groups&lt;/td&gt; &#xA;       &lt;td&gt;Service Principal&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / Group / Group.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/group-get#permissions&#34; target=&#34;_blank&#34;&gt;Get group&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;SP/App&lt;/td&gt; &#xA;       &lt;td&gt;Service Principal&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / Application / Application.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/serviceprincipal-get#permissions&#34; target=&#34;_blank&#34;&gt;Get servicePrincipal&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/application-get#permissions&#34; target=&#34;_blank&#34;&gt;Get application&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; Optional: AAD Role &#39;Directory readers&#39; could be used instead of API permissions (more &#39;read&#39; than required) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;D&lt;/b&gt;&lt;br&gt;Azure DevOps / Github Actions | ServicePrincipal&lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;table&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Capability&lt;/th&gt; &#xA;       &lt;th&gt;API Permissions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;Users&lt;/td&gt; &#xA;       &lt;td&gt;Azure DevOps Service Connection&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / User / User.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/user-get#permissions&#34; target=&#34;_blank&#34;&gt;Get user&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;Groups&lt;/td&gt; &#xA;       &lt;td&gt;Azure DevOps Service Connection&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / Group / Group.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/group-get#permissions&#34; target=&#34;_blank&#34;&gt;Get group&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Get AAD&lt;br&gt;SP/App&lt;/td&gt; &#xA;       &lt;td&gt;Azure DevOps Service Connection&#39;s &lt;b&gt;App registration&lt;/b&gt;&lt;br&gt;grant with &lt;b&gt;Microsoft Graph&lt;/b&gt; permissions:&lt;br&gt;Application permissions / Application / Application.Read.All&lt;br&gt;💡 &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/serviceprincipal-get#permissions&#34; target=&#34;_blank&#34;&gt;Get servicePrincipal&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/en-us/graph/api/application-get#permissions&#34; target=&#34;_blank&#34;&gt;Get application&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; Optional: AAD Role &#39;Directory readers&#39; could be used instead of API permissions (more &#39;read&#39; than required) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Screenshot Azure Portal&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/aadpermissionsportal.jpg&#34; alt=&#34;alt text&#34; title=&#34;Permissions in Azure Active Directory&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PowerShell&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires PowerShell 7 (minimum supported version 7.0.3) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell#get-powershell&#34;&gt;Get PowerShell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows&#34;&gt;Installing PowerShell on Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-linux&#34;&gt;Installing PowerShell on Linux&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Requires PowerShell Az Modules &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Az.Accounts&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;Az.Resources&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;Az.ResourceGraph&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/azure/install-az-ps&#34;&gt;Install the Azure Az PowerShell module&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Requires PowerShell Module &#39;AzAPICall&#39;.&lt;br&gt; Running in Azure DevOps or GitHub Actions the AzAPICall PowerShell module will be installed automatically.&lt;br&gt; AzAPICall resources: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/AzAPICall&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/AzAPICall?include_prereleases&amp;amp;label=PowerShell%20Gallery&#34; alt=&#34;PowerShell Gallery Version (including pre-releases)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aka.ms/AzAPICall&#34;&gt;GitHub Repository&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Usage/command &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;.\AzGovVizParallel.ps1 -ManagementGroupId &amp;lt;your-Management-Group-Id&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-ManagementGroupId&lt;/code&gt; Management Group Id (Root Management Group Id equals your Tenant Id)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-CsvDelimiter&lt;/code&gt; - The world is split into two kinds of delimiters - comma and semicolon - choose yours (default is semicolon &#39;;&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-OutputPath&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-AzureDevOpsWikiAsCode&lt;/code&gt; - Use this parameter only when running AzGovViz in a Azure DevOps Pipeline&lt;/del&gt; Based on environment variables the script will detect the code run platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DoNotShowRoleAssignmentsUserData&lt;/code&gt; - Scrub personally identifiable information (PII)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-LimitCriticalPercentage&lt;/code&gt; - Limit warning level, default is 80%&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-HierarchyTreeOnly&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-HierarchyMapOnly&lt;/code&gt; - Output only the &lt;strong&gt;HierarchyMap&lt;/strong&gt; for Management Groups including linked Subscriptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-SubscriptionQuotaIdWhitelist&lt;/code&gt; - Process only Subscriptions with defined QuotaId(s). Example: .\AzGovVizParallel.ps1 &lt;code&gt;-SubscriptionQuotaIdWhitelist MSDN_,Enterprise_&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoResourceProvidersDetailed&lt;/code&gt; - Disables output for ResourceProvider states for all Subscriptions in the &lt;strong&gt;TenantSummary&lt;/strong&gt; section, in large Tenants this can become time consuming&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoMDfCSecureScore&lt;/code&gt; - Disables Microsoft Defender for Cloud Secure Score request for Subscriptions and Management Groups.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-DisablePolicyComplianceStates&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-NoPolicyComplianceStates&lt;/code&gt; - Will not query policy compliance states. You may want to use this parameter to accellerate script execution or when receiving error &#39;ResponseTooLarge&#39;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoResourceDiagnosticsPolicyLifecycle&lt;/code&gt; - Disables Resource Diagnostics Policy Lifecycle recommendations&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoAADGroupsResolveMembers&lt;/code&gt; - Disables resolving Azure Active Directory Group memberships&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-NoAADGuestUsers&lt;/code&gt; - Disables resolving Azure Active Directory User type (Guest or Member)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-NoServicePrincipalResolve&lt;/code&gt; &lt;code&gt;-NoAADServicePrincipalResolve&lt;/code&gt; - Disables resolving ServicePrincipals&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-ServicePrincipalExpiryWarningDays&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-AADServicePrincipalExpiryWarningDays&lt;/code&gt; - Define warning period for Service Principal secret and certificate expiry; default is 14 days&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-NoAzureConsumption&lt;/code&gt;&lt;/del&gt; - Azure Consumption data should not be collected/reported&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DoAzureConsumption&lt;/code&gt; - Azure Consumption data should be collected/reported&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-AzureConsumptionPeriod&lt;/code&gt; - Define for which time period Azure Consumption data should be gathered; default is 1 day&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoAzureConsumptionReportExportToCSV&lt;/code&gt; - Azure Consumption data should not be exported (CSV)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoScopeInsights&lt;/code&gt; - Q: Why would you want to do this? A: In larger tenants the ScopeInsights section blows up the html file (up to unusable due to html file size). Use &lt;code&gt;-LargeTenant&lt;/code&gt; to further reduce the output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-ThrottleLimit&lt;/code&gt; - leveraging PowerShell´s parallel capability you can define the ThrottleLimit (default=5)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DoTranscript&lt;/code&gt; - Log the console output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-SubscriptionId4AzContext&lt;/code&gt; - Define the Subscription Id to use for AzContext (default is to use a random Subscription Id)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-PolicyAtScopeOnly&lt;/code&gt; - Removing &#39;inherited&#39; lines in the HTML file for &#39;Policy Assignments&#39;; use this parameter if you run against a larger tenants. Note using parameter &lt;code&gt;-LargeTenant&lt;/code&gt; will set &lt;code&gt;-PolicyAtScopeOnly $true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-RBACAtScopeOnly&lt;/code&gt; - Removing &#39;inherited&#39; lines in the HTML file for &#39;Role Assignments&#39;; use this parameter if you run against a larger tenants. Note using parameter &lt;code&gt;-LargeTenant&lt;/code&gt; will set &lt;code&gt;-RBACAtScopeOnly $true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-CsvExport&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-NoCsvExport&lt;/code&gt; - Do not export enriched data for &#39;Role assignments&#39;, &#39;Policy assignments&#39; data and &#39;all Resources&#39; (subscriptionId, managementGroup path, resourceType, id, name, location, tags, createdTime, changedTime)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-PolicyIncludeResourceGroups&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-DoNotIncludeResourceGroupsOnPolicy&lt;/code&gt; - Do not include Policy assignments on ResourceGroups&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-RBACIncludeResourceGroupsAndResources&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-DoNotIncludeResourceGroupsAndResourcesOnRBAC&lt;/code&gt; - Do not include Role assignments on ResourceGroups and Resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-ChangeTrackingDays&lt;/code&gt; - Define the period for Change tracking on newly created and updated custom Policy, PolicySet and RBAC Role definitions and Policy/RBAC Role assignments (default is &#39;14&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-FileTimeStampFormat&lt;/code&gt;- Define the time format for the output files (default is &lt;code&gt;yyyyMMdd_HHmmss&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;code&gt;-JsonExport&lt;/code&gt;&lt;/del&gt; &lt;code&gt;-NoJsonExport&lt;/code&gt; - Do not enable export of ManagementGroup Hierarchy including all MG/Sub Policy/RBAC definitions, Policy/RBAC assignments and some more relevant information to JSON&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-JsonExportExcludeResourceGroups&lt;/code&gt; - JSON Export will not include ResourceGroups (Policy &amp;amp; Role assignments)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-JsonExportExcludeResources&lt;/code&gt;- JSON Export will not include Resources (Role assignments)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-LargeTenant&lt;/code&gt; - A large tenant is a tenant with more than ~500 Subscriptions - the HTML output for large tenants simply becomes too big. Using this parameter the following parameters will be set: -PolicyAtScopeOnly $true, -RBACAtScopeOnly $true, -NoResourceProvidersDetailed $true, -NoScopeInsights $true&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-HtmlTableRowsLimit&lt;/code&gt; - Although the parameter &lt;code&gt;-LargeTenant&lt;/code&gt; was introduced recently, still the html output may become too large to be processed properly. The new parameter defines the limit of rows - if for the html processing part the limit is reached then the html table will not be created (csv and json output will still be created). Default rows limit is 20.000&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-AADGroupMembersLimit&lt;/code&gt; - Defines the limit (default=500) of AAD Group members; For AAD Groups that have more members than the defined limit Group members will not be resolved&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoResources&lt;/code&gt; - Will speed up the processing time but information like Resource diagnostics capability, resource type stats, UserAssigned Identities assigned to Resources is excluded (featured for large tenants)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-StatsOptOut&lt;/code&gt; - Opt out sending &lt;a href=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/#stats&#34;&gt;stats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-NoSingleSubscriptionOutput&lt;/code&gt; - Single &lt;strong&gt;Scope Insights&lt;/strong&gt; output per Subscription should not be created&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-ManagementGroupsOnly&lt;/code&gt; - Collect data only for Management Groups (Subscription data such as e.g. Policy assignments etc. will not be collected)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-ShowMemoryUsage&lt;/code&gt; - Shows memory usage at memory intense sections of the scripts, this shall help you determine if the the worker is well sized for AzGovViz&lt;/li&gt; &#xA; &lt;li&gt;PSRule &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-DoPSRule&lt;/code&gt; - Execute &lt;a href=&#34;https://aka.ms/PSRule&#34;&gt;PSRule&lt;/a&gt;. Results are integrated in the HTML output, plus PSRule results are exported to CSV&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;-PSRuleVersion&lt;/code&gt; - Define the PSRule..Rules.Azure PowerShell module version, if undefined then &#39;latest&#39; will be used&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API reference&lt;/h3&gt; &#xA;&lt;p&gt;AzGovViz polls the following APIs&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Endpoint&lt;/th&gt; &#xA;   &lt;th&gt;API version&lt;/th&gt; &#xA;   &lt;th&gt;API name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;/groups/&lt;code&gt;aadGroupId&lt;/code&gt;/transitiveMembers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;v1.0&lt;/td&gt; &#xA;   &lt;td&gt;/applications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;v1.0&lt;/td&gt; &#xA;   &lt;td&gt;/directoryObjects/getByIds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;v1.0&lt;/td&gt; &#xA;   &lt;td&gt;/users&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;v1.0&lt;/td&gt; &#xA;   &lt;td&gt;/groups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS Graph&lt;/td&gt; &#xA;   &lt;td&gt;v1.0&lt;/td&gt; &#xA;   &lt;td&gt;/servicePrincipals&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-05-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;code&gt;resourceId&lt;/code&gt;/providers/Microsoft.Insights/diagnosticSettingsCategories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-11-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;code&gt;scopeId&lt;/code&gt;/providers/Microsoft.Blueprint/blueprints/&lt;code&gt;blueprintName&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Authorization/policyDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Authorization/policySetDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-07-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Authorization/roleDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-02-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/getEntities&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/policyAssignments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/policyDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-07-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/policyExemptions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/policySetDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2015-07-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/roleAssignments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-10-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/roleAssignmentScheduleInstances&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2015-07-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Authorization/roleDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-11-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.Blueprint/blueprints&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-11-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.CostManagement/query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-01-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/microsoft.insights/diagnosticSettings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-10-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;/providers/Microsoft.PolicyInsights/policyStates/latest/summarize&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-05-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;managementGroupId&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-02-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups/&lt;code&gt;tenantId&lt;/code&gt;/settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-05-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.Management/managementGroups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-03-01&lt;/td&gt; &#xA;   &lt;td&gt;/providers/Microsoft.ResourceGraph/resources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2016-09-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/locks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/policyAssignments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/policyDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-07-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/policyExemptions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/policySetDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2015-07-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/roleAssignments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-10-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/roleAssignmentScheduleInstances&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/roleAssignmentsUsageMetrics&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2015-07-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Authorization/roleDefinitions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-11-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Blueprint/blueprintAssignments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-11-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Blueprint/blueprints&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-11-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.CostManagement/query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-05-01-preview&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Insights/diagnosticSettings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-10-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.PolicyInsights/policyStates/latest/summarize&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Resources/tags/default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2018-06-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Security/pricings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-01-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers/Microsoft.Security/securescores&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2019-10-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/providers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-04-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/resourcegroups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2021-04-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions/&lt;code&gt;subscriptionId&lt;/code&gt;/resources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-01-01&lt;/td&gt; &#xA;   &lt;td&gt;/subscriptions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARM&lt;/td&gt; &#xA;   &lt;td&gt;2020-01-01&lt;/td&gt; &#xA;   &lt;td&gt;/tenants&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Integrate with AzOps&lt;/h2&gt; &#xA;&lt;p&gt;Did you know you can run AzOps from Azure DevOps? Check &lt;a href=&#34;https://github.com/Azure/AzOps-Accelerator&#34;&gt;AzOps Accellerator&lt;/a&gt;.&lt;br&gt; You can integrate AzGovViz (same project as AzOps).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  pipelines:&#xA;    - pipeline: &#39;Push&#39;&#xA;      source: &#39;AzOps - Push&#39;&#xA;      trigger:&#xA;        branches:&#xA;          include:&#xA;            - master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integrate PSRule for Azure&lt;/h2&gt; &#xA;&lt;p&gt;Let´s use &lt;a href=&#34;https://azure.github.io/PSRule.Rules.Azure&#34;&gt;PSRule for Azure&lt;/a&gt; and leverage over 260 pre-built rules to validate Azure resources based on the Microsoft Well-Architected Framework (WAF) principles.&lt;br&gt; PSRule for Azure is listed as &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/framework/security/monitor-tools&#34;&gt;security monitoring tool&lt;/a&gt; in the Microsoft Well-Architected Framework.&lt;/p&gt; &#xA;&lt;p&gt;Parameter: &lt;code&gt;-DoPSRule&lt;/code&gt; (e.g. &lt;code&gt;.\pwsh\AzGovVizParallel.ps1 -DoPSRule&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Outputs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTML (summarized) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;TenantSummary&lt;/li&gt; &#xA;   &lt;li&gt;ScopeInsights &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Management Group (all resources below that scope)&lt;/li&gt; &#xA;     &lt;li&gt;Subscription&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CSV (detailed, per resource)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TenantSummary HTML output example:&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/PSRuleForAzure_preview.png&#34; alt=&#34;alt text&#34; title=&#34;PSRule for Azure / AzGovViz TenantSummary&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stats&lt;/h2&gt; &#xA;&lt;p&gt;In order to better understand the AzGovViz usage and to optimize the product accordingly some stats will be ingested to Azure Application Insights. Results of stats analysis may be shared at a later stage.&lt;/p&gt; &#xA;&lt;h3&gt;How/What?&lt;/h3&gt; &#xA;&lt;p&gt;If the script is run in Azure DevOps then the Repository Id and executing principal´s object Id will be used to create an unique identifier.&lt;br&gt; If the script is not run in Azure DevOps then the Tenant Id and executing principal´s object Id will be used to create an unique identifier.&lt;/p&gt; &#xA;&lt;p&gt;SHA384/512 hashed combination of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;portion of the repositoryId/tenantId &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if repositoryId/tenantId startsWith a letter then use characters 3-8 (6 characters) of the first GUID´s block, combine them with the third GUID`s block of the principal´s objectId (4 characters), SHA512 hash them as identifier0&lt;/li&gt; &#xA;   &lt;li&gt;if repositoryId/tenantId startsWith a number then use characters 7-12 (6 characters) of the last GUID`s block, combine them with the second GUID´s block of the principal´s objectId (4 characters), SHA384 hash them as identifier0&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;portion of the executing principal´s objectId &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if objectId startsWith a letter then use characters 3-8 (6 characters) of the first GUID´ block, combine them with the third GUID´ block of the repositoryId/tenantId (4 characters), SHA512 hash them as identifier1&lt;/li&gt; &#xA;   &lt;li&gt;if objectId startsWith a number then use characters 7-12 (6 characters) of the last GUID´ block, combine them with the second GUID´ block of the repositoryId/tenantId (4 characters), SHA384 hash them as identifier1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Combine identifier0 and identifier1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if objectId startsWith a letter then combine identifiers -&amp;gt; &#39;identifier0 + identifier1&#39;, SHA512 hash them as final identifier and remove dashes (string of 128 characters)&lt;/li&gt; &#xA; &lt;li&gt;if objectId startsWith a number then combine identifiers -&amp;gt; &#39;identifier1 + identifier0&#39;, SHA512 hash them as final identifier and remove dashes (string of 128 characters)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To conclude the approach: taking 6 or 4 characters from tenantId/respositoryId and objectId of the executing principal to create a unique identifier, which may not be backward resolveable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/identifier.jpg&#34; alt=&#34;alt text&#34; title=&#34;identifier&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following data will be ingested to Azure Application Insights:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &#34;accType&#34;: &#34;ServicePrincipal / User (member) / User (Guest)&#34;,&#xA;    &#34;azCloud&#34;: &#34;Azure environment e.g. AzureCloud, ChinaCloud, etc.&#34;,&#xA;    &#34;identifier&#34;: &#34;8c62a7..53d08c0 (string of 128 characters)&#34;,&#xA;    &#34;platform&#34;: &#34;Console / AzureDevOps&#34;,&#xA;    &#34;productVersion&#34;: &#34;used AzGovViz version&#34;,&#xA;    &#34;psAzAccountsVersion&#34;: &#34;used Az.Accounts PS module version&#34;,&#xA;    &#34;psVersion&#34;: &#34;used PowerShell version&#34;,&#xA;    &#34;scopeUsage&#34;: &#34;childManagementGroup / rootManagementGroup&#34;,&#xA;    &#34;statsCountErrors&#34;: &#34;count of encountered errors&#34;,&#xA;    &#34;statsCountSubscriptions&#34;: &#34;less than 100 / more than 100 (no exact numbers)&#34;,&#xA;    &#34;statsParametersDoNotIncludeResourceGroupsAndResourcesOnRBAC&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersDoNotIncludeResourceGroupsOnPolicy&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersDoNotShowRoleAssignmentsUserData&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersHierarchyMapOnly&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersLargeTenant&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersNoASCSecureScore&#34; &#34;true / false&#34;,&#xA;    &#34;statsParametersNoAzureConsumption&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersNoJsonExport&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersNoPolicyComplianceStates&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersNoResourceProvidersDetailed&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersNoResources&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersPolicyAtScopeOnly&#34;: &#34;true / false&#34;,&#xA;    &#34;statsParametersRBACAtScopeOnly&#34;: &#34;true / false&#34;,&#xA;    &#34;statsTry&#34;: &#34;count of try sending to Application Insights&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Azure Application Insights data:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/stats.jpg&#34; alt=&#34;alt text&#34; title=&#34;Stats&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you do not want to contribute to stats for AzGovViz then you can use the parameter:&lt;br&gt; &lt;code&gt;-StatsOptOut&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have any concerns or see a risk sending stats please file an issue.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your support!&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;AzGovViz creates very detailed information about your Azure Governance setup. In your organization&#39;s best interest the &lt;strong&gt;outputs should be protected from not authorized access!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;p&gt;Working with Git and Windows cloning from your AzDO repository you may experience the following error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fatal: cannot create directory at &#39;output/JSON_...&#39;: Filename too long&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To work around that issue you may want to enable longpaths support.&lt;br&gt; &lt;strong&gt;Note the &lt;a href=&#34;https://github.com/desktop/desktop/issues/8023&#34;&gt;caveats&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git config --system core.longpaths true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Facts&lt;/h2&gt; &#xA;&lt;p&gt;Disabled Subscriptions and Subscriptions where Quota Id starts with with &#34;AAD_&#34; are being skipped, all others are queried. More information on Subscription Quota Id / Offer numbers: &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/understand-cost-mgt-data#supported-microsoft-azure-offers&#34;&gt;Supported Microsoft Azure offers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ARM Limits are not acquired programmatically, these are hardcoded. The links used to check related limits are commented in the param section of the script.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to contribute.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to so many supporters - testing, giving feedback, making suggestions, presenting use-case, posting/blogging articles, refactoring code - THANK YOU!&lt;/p&gt; &#xA;&lt;p&gt;Thanks Stefan Stranger (Microsoft) for providing me with his AzGovViz outputs executed on his implementation of EnterpriseScale. Make sure you read Stefan´s Blog Article: &lt;a href=&#34;https://stefanstranger.github.io/2020/08/28/EnterpriseScalePolicyDrivenGovernance&#34;&gt;Enterprise-Scale - Policy Driven Governance&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks Frank Oltmanns-Mack (Microsoft) for providing me with his AzGovViz outputs executed on his implementation of EnterpriseScale.&lt;/p&gt; &#xA;&lt;p&gt;Carlos Mendible (Microsoft) gracias por tu contribución on the project - run AzGovViz with GitHub Codespaces.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to Tim Wanierke, Brooks Vaughn and Friedrich Weinmann (Microsoft).&lt;/p&gt; &#xA;&lt;p&gt;And another big thanks to Wayne Meyer (Microsoft) for constant support and building bridges.&lt;/p&gt; &#xA;&lt;p&gt;Kudos to the &lt;a href=&#34;https://www.tablefilter.com&#34;&gt;TableFilter&lt;/a&gt; Project Team!&lt;/p&gt; &#xA;&lt;p&gt;Kudos to &lt;a href=&#34;https://github.com/LorDOniX/json-viewer&#34;&gt;LorDOniX&lt;/a&gt; for JSON-viewer!&lt;/p&gt; &#xA;&lt;p&gt;Kudos to Bernie White and &lt;a href=&#34;https://azure.github.io/PSRule.Rules.Azure&#34;&gt;PSRule for Azure&lt;/a&gt; team!&lt;/p&gt; &#xA;&lt;h2&gt;AzAdvertizer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/azadvertizer70.png&#34; alt=&#34;alt text&#34; title=&#34;example output&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also check &lt;a href=&#34;https://www.azadvertizer.net&#34;&gt;https://www.azadvertizer.net&lt;/a&gt; - AzAdvertizer helps you to keep up with the pace by providing overview and insights on new releases and changes/updates for Azure Governance capabilities such as Azure Policy&#39;s Policy definitions, initiatives (Set definitions), aliases and Azure RBAC&#39;s Role definitions and resource provider operations.&lt;/p&gt; &#xA;&lt;h2&gt;AzADServicePrincipalInsights&lt;/h2&gt; &#xA;&lt;p&gt;Also check &lt;a href=&#34;https://aka.ms/AzADServicePrincipalInsights&#34;&gt;https://aka.ms/AzADServicePrincipalInsights&lt;/a&gt; - What about your Azure Active Directory Service Principals? Get deep insights and track your Service Principals with AzADServicePrincipalInsights. Create a HTML overview, export to CSV and JSON and use it for further processing...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JulianHayward/Azure-MG-Sub-Governance-Reporting/master/img/azadserviceprincipalinsights_preview.png&#34; alt=&#34;alt text&#34; title=&#34;example output&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Closing Note&lt;/h2&gt; &#xA;&lt;p&gt;Please note that while being developed by a Microsoft employee, AzGovViz is not a Microsoft service or product. AzGovViz is a personal/community driven project, there are none implicit or explicit obligations related to this project, it is provided &#39;as is&#39; with no warranties and confer no rights.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OfficeDev/office-js-docs-pr</title>
    <updated>2022-06-09T01:48:59Z</updated>
    <id>tag:github.com,2022-06-09:/OfficeDev/office-js-docs-pr</id>
    <link href="https://github.com/OfficeDev/office-js-docs-pr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft Office Add-ins Documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Office Add-ins documentation&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the Office Add-ins documentation repo. In this repository, you can find the documentation source files for Office JavaScript API concepts, quick starts, tutorials, and how-to guides. For the best experience, we recommend you view this content on &lt;a href=&#34;https://docs.microsoft.com/office/dev/add-ins&#34;&gt;docs.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can find the Office JavaScript API reference documentation source files in the &lt;a href=&#34;https://github.com/OfficeDev/office-js-docs-reference&#34;&gt;office-js-docs-reference&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Give us your feedback&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the repo is to provide developer education on the platform&#39;s behavior. As such, issues should pertain to that educational content. Please &lt;a href=&#34;https://github.com/OfficeDev/office-js-docs-pr/issues&#34;&gt;submit an issue&lt;/a&gt; for the following scenarios.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Information needed to succeed in developing Office Add-ins is missing or incomplete.&lt;/li&gt; &#xA; &lt;li&gt;Information is inaccurate or obsolete.&lt;/li&gt; &#xA; &lt;li&gt;You find typos, grammatical mistakes, or other problems with the articles.&lt;/li&gt; &#xA; &lt;li&gt;Articles are organized in a confusing or unintuitive manner.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are seeing product behavior that differs from the documentation, please provide as much of the following information as is possible and relevant.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The version and build number of the client you are using.&lt;/li&gt; &#xA; &lt;li&gt;Steps to reproduce the issue.&lt;/li&gt; &#xA; &lt;li&gt;Console output and error messages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We also encourage you to fork, make the fix, and do a pull request of your proposed changes. For details, see &lt;a href=&#34;https://raw.githubusercontent.com/OfficeDev/office-js-docs-pr/main/Contributing.md&#34;&gt;Contribute to this documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your issue is not related to the Office Add-ins documentation, please post it to one of the following channels instead.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To ask a question about using the Office.js API, post your question to Stack Overflow and tag it with the &#34;office-js&#34; tag (&lt;a href=&#34;http://stackoverflow.com/questions/tagged/office-js&#34;&gt;http://stackoverflow.com/questions/tagged/office-js&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;To report an issue with the Office.js API or platform, create the issue in the OfficeDev/office-js repository (&lt;a href=&#34;https://github.com/OfficeDev/office-js&#34;&gt;https://github.com/OfficeDev/office-js&lt;/a&gt;), which members of the product team monitor for customer-reported issues.&lt;/li&gt; &#xA; &lt;li&gt;To submit a feature request for the Office.js API or platform, post your idea to the &lt;a href=&#34;https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform&#34;&gt;Microsoft 365 Developer Platform Tech Community&lt;/a&gt;, or if the feature request already exists there, add your vote for it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join the Microsoft 365 Developer Program&lt;/h2&gt; &#xA;&lt;p&gt;Get a free sandbox, tools, and other resources you need to build solutions for the Microsoft 365 platform.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/microsoft-365/dev-program#Subscription&#34;&gt;Free developer sandbox&lt;/a&gt; Get a free, renewable 90-day Microsoft 365 E5 developer subscription.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/microsoft-365/dev-program#Sample&#34;&gt;Sample data packs&lt;/a&gt; Automatically configure your sandbox by installing user data and content to help you build your solutions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/microsoft-365/dev-program#Experts&#34;&gt;Access to experts&lt;/a&gt; Access community events to learn from Microsoft 365 experts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/microsoft-365/dev-program#Recommendations&#34;&gt;Personalized recommendations&lt;/a&gt; Find developer resources quickly from your personalized dashboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2016 Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>