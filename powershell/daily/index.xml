<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-22T01:35:31Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SorenLundt/WinGet-Wrapper</title>
    <updated>2024-02-22T01:35:31Z</updated>
    <id>tag:github.com,2024-02-22:/SorenLundt/WinGet-Wrapper</id>
    <link href="https://github.com/SorenLundt/WinGet-Wrapper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerShell Scripts to bulk import WinGet packages to InTune including all package metadata.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WinGet-Wrapper&lt;/h1&gt; &#xA;&lt;p&gt;PowerShell Scripts to deploy and bulk import WinGet packages to InTune including metadata.&lt;br&gt; Automatically detect latest version using dynamic detection script. &lt;br&gt; Detection script checks local installed version against latest winget available version or a defined fixed target version.&lt;br&gt; Bulk import WinGet packages to InTune including WinGet package metadata using WinGet-WrapperImportGUI.exe &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamically finds the WinGet directory to be used under System Context.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kill selected process before WinGet command&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Allows running pre and post script before installation&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Detection script that dynamically finds latest package available trough WinGet&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Requirement script to allow creating packages for update purposes only&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Logs to $env:ProgramData\WinGet-WrapperLogs (Usually C:\ProgramData\WinGet-WrapperLogs)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dynamically detect if running in user or system context&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Performs automatic cleanup of log files older than 60 days.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Directly import and deploy WinGet packages to InTune including WinGet package metadata&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background / Why?&lt;/h2&gt; &#xA;&lt;p&gt;WinGet have a few limitations in terms of automation and is not integrated with common endpoints management products. &lt;br&gt; System Context is not possible by using &#34;winget&#34; as the .exe location must be found and this location is not static due to versioning in the directory name.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Windows 10 20H2 or newer&lt;br&gt; Powershell 5.1&lt;br&gt; Automatically installs/updates required modules &#34;IntuneWin32App&#34; and &#34;Microsoft.Graph.Intune&#34; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WinGet-WrapperImportGUI.exe&lt;/h2&gt; &#xA;&lt;p&gt;WinGet-WrapperImportGUI is a graphical interface designed to streamline the import of WinGet packages into InTune. &lt;br&gt; This tool complements WinGet-Wrapper, providing an intuitive way to upload WinGet packages to InTune, along with their metadata. &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Features:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search and Select:&lt;/strong&gt; Seamlessly search for WinGet packages and select the ones you need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;InTune Integration:&lt;/strong&gt; Import selected WinGet packages directly into InTune for deployment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CSV Support:&lt;/strong&gt; Export and import packages using CSV files, facilitating batch operations.&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/1b43c387-3adf-4eb7-90c3-99dcf07b9871&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Usage:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Open the GUI:&lt;/strong&gt; Run WinGet-WrapperImportGUI.exe to open the GUI&lt;br&gt; &lt;strong&gt;Search Packages:&lt;/strong&gt; Enter your search query and click &#34;Search&#34; to find WinGet packages.&lt;br&gt; &lt;strong&gt;Select Packages:&lt;/strong&gt; Select from search results, then click the center arrow to move them to the import list.&lt;br&gt; &lt;strong&gt;Import to InTune:&lt;/strong&gt; Enter your Tenant ID and click &#34;Import to InTune&#34; to import selected packages.&lt;br&gt; &lt;strong&gt;Additional Actions:&lt;/strong&gt; Use buttons for exporting CSV, deleting, or importing from CSV.&lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you get errors when using the ImportGUI, you may need to unblock winget-wrapper files from file properties.&lt;br&gt; WinGet-WrapperImportFromCSV.ps1, IntuneWinAppUtil.exe, WinGet-WrapperImportGUI.ps1, more.. &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/9dc24e0b-966b-4aee-bfbc-e28235d1bcfb&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WinGet-Wrapper.ps1&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/4220b44b-7f96-4fb1-84ec-ce416f6f622c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Usage:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Powershell.exe -NoLogo -NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File WinGet-Wrapper.ps1 -PackageName &#34;PackageName for log file&#34; -StopProcess &#34;kill process using Stop-Process (do not add .exe)&#34; -PreScript &#34;somefile.ps1&#34; -PostScript &#34;somefile.ps1&#34; -ArgumentList &#34;Arguments Passed to WinGet.exe&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;WinGet-WrapperDetection.ps1&lt;/h2&gt; &#xA;&lt;p&gt;Matches locally installed version with newest available version using WinGet or specified version using $TargetVersion&lt;br&gt; Can be setup to accept newer installed version locally $AcceptNewerVersion&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/631d6001-b813-4b79-a12f-3c1e06cb3aec&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WinGet-WrapperRequirements.ps1&lt;/h2&gt; &#xA;&lt;p&gt;Checks if application is detected locally. If not detected will not attempt update/install&lt;br&gt; To be used when only wanting to update if application is already installed. (Update Only)&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/b5af0ddd-6700-46cf-8907-33dbd0f8e930&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Outputs either &#34;Installed&#34; or &#34;Not Installed&#34;&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/b8cd24fd-da34-4e1c-aeb2-0627717e1244&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WinGet-WrapperImportFromCSV.ps1&lt;/h2&gt; &#xA;&lt;p&gt;Imports packages from WinGet to InTune (incuding available WinGet package metadata)&lt;br&gt; Package content is stored under Packages\Package.ID-Context-UpdateOnly-UserName-yyyy-mm-dd-hhssmm&lt;br&gt; Create deployment using csv columns: InstallIntent, Notification, GroupID&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/dde433b9-81e1-484b-8ee1-71ac02d68441&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage: Import from CSV (InTune)&lt;/h2&gt; &#xA;&lt;p&gt;Open the sample CSV file WinGet-WrapperImportFromCSV.csv and add any WinGet Package IDs to import (Case Sensitive)&lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Usage:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WinGet-WrapperImportFromCSV.ps1 -TenantID company.onmicrosoft.com -csvFile WinGet-WrapperImportFromCSV.csv -SkipConfirmation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Process:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/297ddb07-eeac-41c7-a9ec-9656727984f6&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Results:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/ca57c9d4-0ec7-4514-8694-7160f6356b5e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Columns:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PackageID = Exact PackageID (Required)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Context = Which context the Win32App is run under (Machine or User) (Required)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;AcceptNewerVersion = Allows newer installed version locally than specified (Set to 0 or 1)(Required)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;UpdateOnly = Update package only. Application will only update if application is already installed (Set to 0 or 1)(Required)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;TargetVersion = Specfic version of the application. If not set, the package will always be the latest version &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;StopProcessInstall = Kill a specific process (Stop-process) before installation (.exe should not be defined)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;StopProcessUninstall = Kill a specific process (Stop-process) before uninstallation (.exe should not be defined)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;PreScriptInstall = Run powershell script before installation&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;PostScript = Run powershell script after installation&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;PreScriptUninstall = Run powershell script before uninstallation&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;PostScriptUninstall = Run powershell script after uninstallation&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;CustomArgumentListInstall = Arguments passsed to WinGet (default: install --exact --id PackageID --silent --accept-package-agreements --accept-source-agreements --scope Context&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;CustomArgumentListUninstall = Arguments passsed to WinGet (default: uninstall --exact --id PackageID --silent --accept-source-agreements --scope Context&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;InstallIntent = Available or Required deployment &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Notification = Notification level on deployment - Valid values: showAll, showReboot, hideAll&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;GroupID = InTune GroupID to deploy package to&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage: Manual Import (InTune)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Application Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In InTune create an Windows app (Win32) and upload WinGet-Wrapper.InTuneWin as the package file. &lt;br&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt; Powershell.exe -NoLogo -NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File WinGet-Wrapper.ps1 -PackageName &#34;VideoLAN.VLC&#34; -StopProcess &#34;VLC&#34; -ArgumentList &#34;install --exact --id VideoLAN.VLC --silent --accept-package-agreements --accept-source-agreements --scope machine&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Uninstall:&lt;/strong&gt; Powershell.exe -NoLogo -NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File WinGet-Wrapper.ps1 -PackageName &#34;VideoLAN.VLC&#34; -StopProcess &#34;VLC&#34; -ArgumentList &#34;Uninstall --exact --id VideoLAN.VLC --silent --accept-source-agreements --scope machine&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Change the $id variable to match the package id in the detection script and upload it ($id = &#34;VideoLAN.VLC&#34;) &lt;br&gt; &lt;em&gt;If specific version is required change the $TargetVersion (Ex. $TargetVersion = &#34;1.0.0.0&#34;)&lt;/em&gt; &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/2aea611c-7733-4f93-9cbe-a44b4f66333d&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Application Update Only&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For creating application that will only update/install if application is already installed&lt;br&gt; Perform the same steps as in &#34;Application Installation&#34;.&lt;br&gt; Setup Requirement rule script with return string value of &#34;Installed&#34;&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/b2bdb617-c74a-4902-9c2c-b8defe1adc70&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SorenLundt/WinGet-Wrapper/assets/127216441/b8cd24fd-da34-4e1c-aeb2-0627717e1244&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>