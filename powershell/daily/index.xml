<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-14T01:40:47Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>canix1/PIMSCAN</title>
    <updated>2024-04-14T01:40:47Z</updated>
    <id>tag:github.com,2024-04-14:/canix1/PIMSCAN</id>
    <link href="https://github.com/canix1/PIMSCAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tool for creating reports on Entra ID Role Assignments&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;⚔ &lt;img src=&#34;https://github.com/canix1/PIMSCAN/raw/main/img/PIMSCAN.png&#34; width=&#34;70%&#34;&gt; ⚔&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;b&gt;A tool to create reports on Entra ID Role Assignments.&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/canix1/PIMSCAN/raw/main/img/Animation.gif&#34; width=&#34;80%&#34;&gt; &lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell Module: MSAL.PS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-module MSAL.PS -Scope CurrentUser -Force -Confirm:$False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minumum Permissions with limited data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the parameter &lt;strong&gt;-LimitedReadOnly&lt;/strong&gt;, .\PIMSCAN.ps1 -TenantId [Tenant ID] -Show -verbose &lt;strong&gt;-LimitedReadOnly&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Global Reader role&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consent for these:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AdministrativeUnit.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Directory.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Group.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureAD&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureResources&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAssignmentSchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedEligibilitySchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementAlert.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;User.Read&lt;/li&gt; &#xA;   &lt;li&gt;User.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;offline_access&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following grant command as a Global Admin to grant a specific user the read-only scopes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Module Microsoft.Graph -Scope CurrentUser&#xA;&#xA;connect-MgGraph -Scopes &#34;Directory.AccessAsUser.All&#34; -TenantId &#34;&amp;lt;Your Tenant ID&amp;gt;&#34;&#xA;&#xA;$scopesOnlyRead = &#34;AdministrativeUnit.Read.All Directory.Read.All Group.Read.All PrivilegedAccess.Read.AzureAD PrivilegedAccess.Read.AzureADGroup PrivilegedAccess.Read.AzureResources PrivilegedAssignmentSchedule.Read.AzureADGroup PrivilegedEligibilitySchedule.Read.AzureADGroup RoleAssignmentSchedule.Read.Directory RoleEligibilitySchedule.Read.Directory RoleManagement.Read.All RoleManagement.Read.Directory RoleManagementAlert.Read.Directory RoleManagementPolicy.Read.Directory RoleManagementPolicy.Read.AzureADGroup User.Read User.Read.All offline_access&#34;&#xA;$params = @{&#xA;     # Microsoft Graph Command Line Tools&#xA;     ClientId = &#34;4ad243ae-ea7f-4496-949e-4c64f1e96d71&#34;&#xA;     # Singe User Consent&#xA;     ConsentType = &#34;Principal&#34;&#xA;     # Prinicpal to allow consent for&#xA;     PrincipalId = &#34;&amp;lt;Prinicipal Object ID&amp;gt;&#34;&#xA;     # GraphAggregatorService&#xA;     ResourceId = &#34;4131d640-34dd-4690-ad11-45ddcd773304&#34;&#xA;     # List of scopes/permissions&#xA;     Scope =  $scopesOnlyRead&#xA;}&#xA;&#xA;New-MgOauth2PermissionGrant -BodyParameter $params&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will not be able to collect the data in the table below with Read-Only&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Object&lt;/th&gt; &#xA;   &lt;th&gt;Attribute&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required Permission&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;justification&lt;/td&gt; &#xA;   &lt;td&gt;Supplied justification&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;status&lt;/td&gt; &#xA;   &lt;td&gt;State of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleAssignmentScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;createdDateTime&lt;/td&gt; &#xA;   &lt;td&gt;Creation date of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;justification&lt;/td&gt; &#xA;   &lt;td&gt;Supplied justification&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;status&lt;/td&gt; &#xA;   &lt;td&gt;State of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;roleEligibilityScheduleRequests&lt;/td&gt; &#xA;   &lt;td&gt;createdDateTime&lt;/td&gt; &#xA;   &lt;td&gt;Creation date of the request&lt;/td&gt; &#xA;   &lt;td&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Full access with Write scopes for roleAssignmentScheduleRequests and roleEligibilityScheduleRequests.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You must have or be able to consent to the following scopes for the enterprise app &lt;strong&gt;Microsoft Graph Command Line Tools&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AdministrativeUnit.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Directory.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;Group.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureAD&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAccess.Read.AzureResources&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedAssignmentSchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;PrivilegedEligibilitySchedule.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleAssignmentSchedule.ReadWrite.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleEligibilitySchedule.ReadWrite.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagement.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementAlert.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.Directory&lt;/li&gt; &#xA;   &lt;li&gt;RoleManagementPolicy.Read.AzureADGroup&lt;/li&gt; &#xA;   &lt;li&gt;User.Read&lt;/li&gt; &#xA;   &lt;li&gt;User.Read.All&lt;/li&gt; &#xA;   &lt;li&gt;offline_access&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following grant command as a Global Admin to grant a specific user the read-only scopes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Module Microsoft.Graph -Scope CurrentUser&#xA;&#xA;connect-MgGraph -Scopes &#34;Directory.AccessAsUser.All&#34; -TenantId &#34;&amp;lt;Your Tenant ID&amp;gt;&#34;&#xA;&#xA;$scopesWrite = &#34;AdministrativeUnit.Read.All Directory.Read.All Group.Read.All PrivilegedAccess.Read.AzureAD PrivilegedAccess.Read.AzureADGroup PrivilegedAccess.Read.AzureResources PrivilegedAssignmentSchedule.Read.AzureADGroup PrivilegedEligibilitySchedule.Read.AzureADGroup RoleAssignmentSchedule.Read.Directory RoleAssignmentSchedule.ReadWrite.Directory RoleEligibilitySchedule.Read.Directory RoleEligibilitySchedule.ReadWrite.Directory RoleManagement.Read.All RoleManagement.Read.Directory RoleManagementAlert.Read.Directory RoleManagementPolicy.Read.Directory RoleManagementPolicy.Read.AzureADGroup User.Read User.Read.All offline_access&#34;&#xA;&#xA;$params = @{&#xA;     # Microsoft Graph Command Line Tools&#xA;     ClientId = &#34;4ad243ae-ea7f-4496-949e-4c64f1e96d71&#34;&#xA;     # Singe User Consent&#xA;     ConsentType = &#34;Principal&#34;&#xA;     # Prinicpal to allow consent for&#xA;     PrincipalId = &#34;&amp;lt;Prinicipal Object ID&amp;gt;&#34;&#xA;     # GraphAggregatorService&#xA;     ResourceId = &#34;4131d640-34dd-4690-ad11-45ddcd773304&#34;&#xA;     # List of scopes/permissions&#xA;     Scope =  $scopesWrite&#xA;}&#xA;&#xA;New-MgOauth2PermissionGrant -BodyParameter $params&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Read-Only Limited&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\PIMSCAN.ps1 -TenantId &amp;lt;TenantID&amp;gt; -Show -Verbose -LimitedReadOnly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get all data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\PIMSCAN.ps1 -TenantId &amp;lt;TenantID&amp;gt; -Show -Verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Results are saved in a HTML file.&lt;/p&gt; &#xA;&lt;p&gt;Open the Entra_ID_Role_Report_[TenantID].html if you did not used the &lt;strong&gt;-Show&lt;/strong&gt; parameter.&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>Azure/Copilot-For-Security</title>
    <updated>2024-04-14T01:40:47Z</updated>
    <id>tag:github.com,2024-04-14:/Azure/Copilot-For-Security</id>
    <link href="https://github.com/Azure/Copilot-For-Security" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft Copilot for Security is a generative AI-powered security solution that helps increase the efficiency and capabilities of defenders to improve security outcomes at machine speed and scale, while remaining compliant to responsible AI principles&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/ic_fluent_copilot_64_64%402x.png&#34; alt=&#34;Security CoPilot Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Microsoft Copilot For Security Community&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the Copilot for Security Repository!&lt;/p&gt; &#xA;&lt;p&gt;Microsoft Copilot for Security is a generative AI-powered assistant for daily operations in security and IT that empowers teams to protect at the speed and scale of AI.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/security-copilot/&#34;&gt;https://learn.microsoft.com/en-us/security-copilot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/security-copilot/get-started-security-copilot&#34;&gt;https://learn.microsoft.com/en-us/security-copilot/get-started-security-copilot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/security-copilot/plugin_overview&#34;&gt;https://learn.microsoft.com/en-us/security-copilot/plugin_overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/security-copilot/connectors-overview&#34;&gt;https://learn.microsoft.com/en-us/security-copilot/connectors-overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/copilotforsecurity&#34;&gt;https://aka.ms/copilotforsecurity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;p&gt;Here are the steps you can take to begin contributing to this project:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub account&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get a GitHub account – (&lt;a href=&#34;http://www.github.com&#34;&gt;www.github.com&lt;/a&gt; ) - Free account works fine.&lt;/li&gt; &#xA; &lt;li&gt;Login with your new account&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to the community page: &lt;a href=&#34;https://github.com/Azure/Copilot-For-Security&#34;&gt;https://github.com/Azure/Copilot-For-Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make sure you are on the master branch&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Fork&#34; -&amp;gt; &#34;Create a new fork&#34; &lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubfork.png&#34; alt=&#34;Github New Fork&#34;&gt; &lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubforkCreate.png&#34; alt=&#34;Create New Fork&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;This will create a copy of the Copilot for Security repository in your own GitHub account: &lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubforknew.png&#34; alt=&#34;View Your New Fork&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Clone the fork to your local machine:&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can install Gitbash from &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;https://git-scm.com/downloads&lt;/a&gt; if you dont already have it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a directory on your local machine where you will pull down the repository to and where you will be working from. Example: “C:\Users(username)\Documents\GitForks”&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Gitbash and move into the directory “C:\Users(username)\Documents\GitForks”&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run : Git init&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run : Git clone &#xA;   &lt;url of your fork&gt;&#xA;     example: Git clone “&#xA;    &lt;a href=&#34;https://github.com/(username)/&#34;&gt;https://github.com/(username)/&lt;/a&gt; Copilot-For-Security-Fork”&#xA;   &lt;/url&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cd into the new directory that is created ie cd Copilot-For-Security-Fork&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the upstream which is the original repo that you forked from ie the Copilot-For-Security community repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run : Git remote add upstream &lt;a href=&#34;https://github.com/Azure/Copilot-For-Security&#34;&gt;https://github.com/Azure/Copilot-For-Security&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run : Git remote -v&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/Clonethefork.png&#34; alt=&#34;Clone to Local Dir&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can do this using GitHub Desktop as well by downloading it from &lt;a href=&#34;https://desktop.github.com&#34;&gt;https://desktop.github.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create a branch&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can work with the local main branch, but it is recommended to work with a branch so if you have separate projects you are working on you can keep them isolated.&lt;/li&gt; &#xA; &lt;li&gt;First you want to sync your local repository to the upstream master (the Azure community itself – not your fork) Run : git pull upstream main&lt;/li&gt; &#xA; &lt;li&gt;You should see a list of updates that are processed or a message saying you are up to date&lt;/li&gt; &#xA; &lt;li&gt;Now that you are in sync create your new branch Run : Git checkout -b &#xA;  &lt;branch name&gt;&#xA;    example Git checkout -b Sojeshs_CFSContributions&#xA;  &lt;/branch&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/Createnewbranch.png&#34; alt=&#34;Create new Branch&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install VS Code:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;Download Visual Studio Code - Mac, Linux, Windows&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Open Branch in VS Code:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run VS Code and then File &amp;gt; Open Folder the local repository directory (Example: C:\Users\(username)\Documents\GitForks\Copilot-For-Security-Fork)&lt;/p&gt; &#xA;&lt;p&gt;You should see all the directories and files in the repository and at the bottom you can see which branch you are working on. Ensure you have the right branch selected before making any changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/VSCodeBranchConfirmation.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stage, Commit and Publish your changes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When you have created the content that you want in VS Code you will need to stage and commit your changes. This will commit them to the branch you have created locally on you machine. For example, I created a new folder by name &#34;SentinelDailyOperations&#34; and KQL Plugin called “KQL_SentinelDailyOperationsSample.yml” within the &#34;Community Based Plugins&#34; directory. You can also add any additional content needed to document and deploy this Plugin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubCreateNewContent.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now, when you are ready to commit your changes click on the Source Control icon on the left, enter a Message summarizing your changes and hit “+”. This stages the changes. Next click the checkmark to commit your changes. These are still local to your machine. &lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubCreateNewContentStageandCommit.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSGithubCreateNewContentCommitChanges.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can now publish this work off to your personal GitHub by clicking the icon next to the branch name (if it throws up a list up top of repositories pick yours &#xA; &lt;youraccount&gt;&#xA;  /Copilot-For-Security &#xA;  &lt;em&gt;NOT&lt;/em&gt; Azure/Copilot-For-Security). In this example case we are picking the main branch iteself to publish my changes with new plugin.&#xA; &lt;/youraccount&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSPushChangestoYourGithub.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can now review your commited changes in your GitHub going to the respective branch: &lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSSeeYourGithubCommittedChanges.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are done with all your work and ready to submit to the main repository, then you need to do a Pull Request. This request will kick off a set of automated checks and if those pass then it goes to a board of reviewers – one of whom has to check your work and accept the request and merge it to the master branch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSUpdateChangestoMainRepository.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The top portion of the &#34;Open a pull request&#34; page is critical. This shows from which repository and branch are you pulling from and to which repository are you pulling to. You should fill in the comments section with a meaningful name and a list of what you have done since the reviewer will be reading this. Then click “Create pull request”&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSSeeChangesandCommitMainRepository.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSCreaePullRequestFinal.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once the changes are merged to the main GitHub, you should be able to see changes committed to the main GitHub repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/Copilot-For-Security/raw/main/Images/CFSMergePullRequesttoMainGithub.png&#34; alt=&#34;Branch Selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Check your pull request status and sync from main repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;After your Pull Request has been merged, please check to make sure it got into the main repository. We recommend checking both in the GitHub website as well as by doing a sync to your local repo and verifying the changes are now in place.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Good Luck and Happy Contributing to Copilot for Security Community !!!!&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>