<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-10T01:43:14Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LaresLLC/SlinkyCat</title>
    <updated>2023-07-10T01:43:14Z</updated>
    <id>tag:github.com,2023-07-10:/LaresLLC/SlinkyCat</id>
    <link href="https://github.com/LaresLLC/SlinkyCat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slinky Cat attempts to give users an easy-to-navigate menu offering predefined Active Directory Service Interfaces (ADSI) and .NET queries which can be used to enumerate a Windows domain.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SlinkyCat&lt;/h1&gt; &#xA;&lt;h2&gt;v1.0 Release&lt;/h2&gt; &#xA;&lt;p&gt;Brought to you by &lt;a href=&#34;https://twitter.com/myexploit2600&#34;&gt;Neil Lines&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/ZephrFish&#34;&gt;Andy Gill&lt;/a&gt; at &lt;a href=&#34;https://labs.lares.com&#34;&gt;Lares Labs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/LaresLLC/SlinkyCat/assets/5783068/6a9b3a1c-90d0-40c6-9b00-740b2bf54818&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Funny name, right? We thought so, too; Neil&#39;s cat is called Slinky, and we love to have fun here!&lt;/p&gt; &#xA;&lt;h2&gt;What It Is&lt;/h2&gt; &#xA;&lt;p&gt;Slinky Cat has been developed to automate some of the methods introduced in living off the land and to supplement ScrapingKit. To help security and IT teams reduce their AD exposures and uncover quick wins and fixes designed for pen-testers and defenders alike.&lt;/p&gt; &#xA;&lt;p&gt;Slinky Cat attempts to give users an easy-to-navigate menu offering predefined Active Directory Service Interfaces (ADSI) and .NET System.DirectoryServices.AccountManagement namespace queries can be used to enumerate a Windows domain.&lt;/p&gt; &#xA;&lt;h2&gt;How to Setup/Use&lt;/h2&gt; &#xA;&lt;p&gt;Simply import the module, then execute it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ipmo .\SlinkyCat.ps1&#xA;Invoke-SlinkyCat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes &amp;amp; Known Errors&lt;/h2&gt; &#xA;&lt;p&gt;Each function can be run individually and has an added output option; therefore, if you want to run without the menu system, you can load Slinkycat, select option 3 from the menu, and run whatever function you want. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FindAdminAccessComputers -OutputPath AdminAccess.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will find where the local user has admin access OR where the C$ is shared, then echo the results back:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;*********************** WARNING ************************&#xA;This operation will be noisy and could&#xA;potentially compromise operational security (OPSEC).&#xA;&#xA;You are running as EA&#xA;&#xA;This will scan the whole network for where your current user has local admin access.&#xA;&#xA;Are you sure you want to continue? (Y/N): Y&#xA;&#xA;[*] User EA has local Admin access(OR C$ is shared to everyone) to: DC1&#xA;[*] User EA has local Admin access(OR C$ is shared to everyone) to: WS1&#xA;[*] User EA has local Admin access(OR C$ is shared to everyone) to: WS2&#xA;[*] User EA has local Admin access(OR C$ is shared to everyone) to: DC2&#xA;[*] User EA has local Admin access(OR C$ is shared to everyone) to: ADCS&#xA;&#xA;Press Enter to continue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Known Errors&lt;/h3&gt; &#xA;&lt;p&gt;If you select either option 1 or 2, then option A to run all functions, the script will run all functions and prompt you to hit return each time; at the end, it will error, but in the background, it has run all the functions as required. We are working on a fix for this, but the function works as intended; if anyone knows a fix, ping @ZephrFish.&lt;/p&gt; &#xA;&lt;h2&gt;Example Running&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\user1&amp;gt; Import-Module .\SlinkyCat.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will bring up the menu.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;=== Menu ===&#xA;1. ADSI Enumeration&#xA;2. Dot NET System.DirectoryServices.AccountManagement Namespace Enumeration&#xA;3. List Available Individual Functions&#xA;Q. Quit&#xA;Select an option:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Option 1 offers you pre-defined ADSI one-liners to help enumerate the domain. The result will echo to the console for those that donâ€™t want to save to disk, but you also get an option to save all the results you created to disk via option S on the initial menu and are also asked again when you quit.&lt;/p&gt; &#xA;&lt;p&gt;Select option 1 redirects you to the ADSI Enumeration option menu.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;=== ADSI Enumeration ===&#xA;ADSI Options Menu Please select an option:&#xA;1. Enumerate all domain hosts&#xA;2. Enumerate all domain controllers&#xA;3. Enumerate all domain users&#xA;4. List all users in the domain admins group&#xA;5. List all accounts with an SPN&#xA;6. List all domain groups&#xA;7. List all password set to never expire&#xA;8. List all users which do not require a password&#xA;9. List all users with password must change at next logon&#xA;10. List all computers that are not Domain Controllers and are Windows 7&#xA;11. List all computers that are not Domain Controllers and are Windows 10&#xA;12. List all computers that are not Domain Controllers and are Windows 11&#xA;13. List all servers&#xA;14. List all Server 2008&#xA;15. List all Server 2012&#xA;16. List all Server 2016&#xA;17. List all Server 2019&#xA;18. List all Server 2022&#xA;19. List domain groups which are a member of the local admin group&#xA;20. List all trusts established with a domain&#xA;21. List all Exchange servers&#xA;22. List all accounts that have never logged in&#xA;23. List all domain user accounts which have a completed AD description field&#xA;24. List all accounts that reference &#39;pass&#39; in their AD description field&#xA;25. List all users who have not changed their password in over 1 year&#xA;26. List all users&#39; last password change date and time&#xA;27. List all systems with WinRM Open (Not OPSEC SAFE!)&#xA;28. List all systems with RDP Open (Not OPSEC SAFE!)&#xA;29. Find all machines where the current user has local admin acess (Not OPSEC Safe, will list all computers then attempt to mount C$)&#xA;A. Run all functions and export to a HTML report&#xA;Q. Quit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select option 5 List all accounts with an SPN see the result below&lt;/p&gt; &#xA;&lt;p&gt;Select option: 5 Option: List all accounts with an SPN&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;krbtgt&#xA;svc_afds&#xA;svc_test&#xA;svc_mssql1&#xA;svc_mssql2&#xA;svc_lab&#xA;svc_admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reading the output after closing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\user1&amp;gt; type output/UsersLastPasswordChange.txt&#xA;&#xA;Option: Password last set&#xA;Username: krbtgt, Last Password Set: 05/04/2023 14:51:59&#xA;Username: svc_afds, Last Password Set: 05/04/2023 15:37:40&#xA;Username: svc_test, Last Password Set: 05/04/2023 15:37:41&#xA;Username: svc_mssql1, Last Password Set: 05/04/2023 15:37:41&#xA;Username: svc_mssql2, Last Password Set: 05/04/2023 15:37:42&#xA;Username: svc_lab, Last Password Set: 05/04/2023 15:37:42&#xA;Username: svc_admin, Last Password Set: 05/04/2023 15:37:43&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Future Plans&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add more enumeration and output formats&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tomwechsler/Microsoft_Endpoint_Manager</title>
    <updated>2023-07-10T01:43:14Z</updated>
    <id>tag:github.com,2023-07-10:/tomwechsler/Microsoft_Endpoint_Manager</id>
    <link href="https://github.com/tomwechsler/Microsoft_Endpoint_Manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is all about Microsoft Endpoint Manager (Intune)!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Endpoint Manager&lt;/h1&gt; &#xA;&lt;p&gt;This repo is all about Microsoft Endpoint Manager: Microsoft Endpoint Configuration Manager and Microsoft Intune!&lt;/p&gt;</summary>
  </entry>
</feed>