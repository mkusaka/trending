<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-15T01:49:59Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pbatard/Fido</title>
    <updated>2022-08-15T01:49:59Z</updated>
    <id>tag:github.com,2022-08-15:/pbatard/Fido</id>
    <link href="https://github.com/pbatard/Fido" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PowerShell script to download Windows ISOs or the UEFI Shell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fido: A PowerShell download script for Windows ISOs and UEFI Shell&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-blue.svg?style=flat-square&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pbatard/Fido/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/pbatard/Fido/total.svg?style=flat-square&#34; alt=&#34;Github stats&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Fido is a PowerShell script that is primarily designed to be used in &lt;a href=&#34;https://github.com/pbatard/rufus&#34;&gt;Rufus&lt;/a&gt;, but that can also be used in standalone fashion, and whose purpose is to automate access to the official Microsoft Windows retail ISO download links as well as provide convenient access to bootable UEFI Shell images.&lt;/p&gt; &#xA;&lt;p&gt;This script exists because, while Microsoft does make retail ISO download links freely and publicly available (at least for Windows 8 and Windows 10), it only does so after actively forcing users to jump through a lot of unwarranted hoops, that create an exceedingly counterproductive, if not downright unfriendly, consumer experience and that greatly detract from what people really want (direct access to ISO downloads).&lt;/p&gt; &#xA;&lt;p&gt;As to the reason one might want to download Windows &lt;strong&gt;retail&lt;/strong&gt; ISOs, as opposed to the ISOs that are generated by Microsoft&#39;s own Media Creation Tool (MCT), this is because using official retail ISOs is currently the only way to assert with absolute certainty that the OS content has not been altered. Indeed, because there only exists a single master for each of them, Microsoft retail ISOs are the only ones you can obtain an official SHA-1 for (from MSDN, if you have access to it, or from sites &lt;a href=&#34;https://msdn.rg-adguard.net/public.php&#34;&gt;such as this one&lt;/a&gt;) allowing you to be 100% sure that the image you are using has not been corrupted and is safe to use.&lt;/p&gt; &#xA;&lt;p&gt;This, in turn, offers assurance that the content &lt;strong&gt;YOU&lt;/strong&gt; are using to install your OS, which it is indeed critical to validate beforehand if you have the slightest concern about security, does match, bit for bit, the one that Microsoft released.&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, regardless of the manner in which Microsoft&#39;s Media Creation Tool produces its content, because no two MCT ISOs are ever the same (due to MCT always regenerating the ISO content on the fly) it is currently impossible to validate with absolute certainty whether any ISO that was generated by the MCT is safe to use. Especially, unlike what is the case for retail ISOs, it is impossible to tell whether an MCT ISO may have been corrupted after generation.&lt;/p&gt; &#xA;&lt;p&gt;Hence the need to provide users with a much easier and less restrictive way to access official retail ISOs...&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;GNU General Public License version 3.0&lt;/a&gt; or later.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The script basically performs the same operation as one might perform when visiting either of the following URLs (that is, provided that you have also changed your &lt;code&gt;User-Agent&lt;/code&gt; browser string, since, when they detect that you are using a version of Windows that is the same as the one you are trying to download, the Microsoft web servers at these addresses redirect you &lt;strong&gt;away&lt;/strong&gt; from the pages that allow you to download retail ISOs):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/software-download&#34;&gt;https://www.microsoft.com/en-us/software-download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After checking access to these URLs, to confirm that they are accessible, the script first queries the web API from the Microsoft servers, to request the language selection available for the version of Windows selected, and then requests the actual download links for all the architectures available for that language + version.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;PowerShell 3.0 or later is required. However the script should detect if you are using an older version and point you to the relevant PowerShell 3.0 download page if needed (which should only ever occur if you are running a vanilla version of Windows 7).&lt;/p&gt; &#xA;&lt;p&gt;Note that the current version of the script does not need Internet Explorer to be installed and should also work with PowerShell 7.&lt;/p&gt; &#xA;&lt;h2&gt;Commandline mode&lt;/h2&gt; &#xA;&lt;p&gt;Fido supports commandline mode whereas, whenever one of the following options is provided, a GUI is not instantiated and you can instead generate the ISO download from within a PowerShell console or script.&lt;/p&gt; &#xA;&lt;p&gt;The options are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Win&lt;/code&gt;: Specify Windows version (e.g. &lt;em&gt;&#34;Windows 10&#34;&lt;/em&gt;). Abbreviated version should work as well (e.g &lt;code&gt;-Win 10&lt;/code&gt;) as long as it is unique enough. If this option isn&#39;t specified, the most recent version of Windows is automatically selected.&lt;br&gt; You can obtain a list of supported versions by specifying &lt;code&gt;-Win List&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rel&lt;/code&gt;: Specify Windows release (e.g. &lt;em&gt;&#34;21H1&#34;&lt;/em&gt;). If this option isn&#39;t specified, the most recent release for the chosen version of Windows is automatically selected. You can also use &lt;code&gt;-Rel Latest&lt;/code&gt; to force the most recent to be used. You can obtain a list of supported versions by specifying &lt;code&gt;-Rel List&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ed&lt;/code&gt;: Specify Windows edition (e.g. &lt;em&gt;&#34;Pro/Home&#34;&lt;/em&gt;). Abbreviated editions should work as well (e.g &lt;code&gt;-Ed Pro&lt;/code&gt;) as long as it is unique enough. If this option isn&#39;t specified, the most recent version of Windows is automatically selected.&lt;br&gt; You can obtain a list of supported versions by specifying &lt;code&gt;-Ed List&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Lang&lt;/code&gt;: Specify Windows language (e.g. &lt;em&gt;&#34;Arabic&#34;&lt;/em&gt;). Abbreviated or part of a language (e.g. &lt;code&gt;-Lang Int&lt;/code&gt; for &lt;code&gt;English International&lt;/code&gt;) should work as long as it&#39;s unique enough. If this option isn&#39;t specified, the script attempts to select the same language as the system locale.&lt;br&gt; You can obtain a list of supported languages by specifying &lt;code&gt;-Lang List&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Arch&lt;/code&gt;: Specify Windows architecture (e.g. &lt;em&gt;&#34;x64&#34;&lt;/em&gt;). If this option isn&#39;t specified, the script attempts to use the same architecture as the one from the current system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetUrl&lt;/code&gt;: By default, the script attempts to automatically launch the download. But when using the &lt;code&gt;-GetUrl&lt;/code&gt; switch, the script only displays the download URL, which can then be piped into another command or into a file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples of a commandline download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Projects\Fido&amp;gt; .\Fido.ps1 -Win 10&#xA;No release specified (-Rel). Defaulting to &#39;21H1 (Build 19043.985 - 2021.05)&#39;.&#xA;No edition specified (-Ed). Defaulting to &#39;Windows 10 Home/Pro&#39;.&#xA;No language specified (-Lang). Defaulting to &#39;English International&#39;.&#xA;No architecture specified (-Arch). Defaulting to &#39;x64&#39;.&#xA;Selected: Windows 10 21H1 (Build 19043.985 - 2021.05), Home/Pro, English International, x64&#xA;Downloading &#39;Win10_21H1_EnglishInternational_x64.iso&#39; (5.0 GB)...&#xA;PS C:\Projects\Fido&amp;gt; .\Fido.ps1 -Win 10 -Rel List&#xA;Please select a Windows Release (-Rel) for Windows 10 (or use &#39;Latest&#39; for most recent):&#xA; - 21H1 (Build 19043.985 - 2021.05)&#xA; - 20H2 (Build 19042.631 - 2020.12)&#xA; - 20H2 (Build 19042.508 - 2020.10)&#xA; - 20H1 (Build 19041.264 - 2020.05)&#xA; - 19H2 (Build 18363.418 - 2019.11)&#xA; - 19H1 (Build 18362.356 - 2019.09)&#xA; - 19H1 (Build 18362.30 - 2019.05)&#xA; - 1809 R2 (Build 17763.107 - 2018.10)&#xA; - 1809 R1 (Build 17763.1 - 2018.09)&#xA; - 1803 (Build 17134.1 - 2018.04)&#xA; - 1709 (Build 16299.15 - 2017.09)&#xA; - 1703 [Redstone 2] (Build 15063.0 - 2017.03)&#xA; - 1607 [Redstone 1] (Build 14393.0 - 2016.07)&#xA; - 1511 R3 [Threshold 2] (Build 10586.164 - 2016.04)&#xA; - 1511 R2 [Threshold 2] (Build 10586.104 - 2016.02)&#xA; - 1511 R1 [Threshold 2] (Build 10586.0 - 2015.11)&#xA; - 1507 [Threshold 1] (Build 10240.16384 - 2015.07)&#xA;PS C:\Projects\Fido&amp;gt; .\Fido.ps1 -Win 10 -Rel 20H2 -Ed Edu -Lang Fre -Arch x86 -GetUrl&#xA;https://software-download.microsoft.com/db/Win10_Edu_20H2_v2_French_x32.iso?t=c48b32d3-4cf3-46f3-a8ad-6dd9568ff4eb&amp;amp;e=1629113408&amp;amp;h=659cdd60399584c5dc1d267957924fbd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional Notes&lt;/h2&gt; &#xA;&lt;p&gt;Because of its intended usage with Rufus, this script is not designed to cover every possible retail ISO downloads. Instead we mostly chose the ones that the general public is likely to request. For instance, we currently have no plan to add support for LTSB/LTSC Windows 10 ISOs downloads.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in such downloads, then you are kindly invited to visit the relevant download pages from Microsoft such as &lt;a href=&#34;https://www.microsoft.com/evalcenter/evaluate-windows-10-enterprise&#34;&gt;this one&lt;/a&gt; for LTSC versions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MicrosoftDocs/OfficeDocs-SkypeForBusiness-pr.ru-RU</title>
    <updated>2022-08-15T01:49:59Z</updated>
    <id>tag:github.com,2022-08-15:/MicrosoftDocs/OfficeDocs-SkypeForBusiness-pr.ru-RU</id>
    <link href="https://github.com/MicrosoftDocs/OfficeDocs-SkypeForBusiness-pr.ru-RU" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h1&gt;Legal Notices&lt;/h1&gt; &#xA;&lt;p&gt;Microsoft and any contributors grant you a license to the Microsoft documentation and other content in this repository under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/MicrosoftDocs/OfficeDocs-SkypeForBusiness-pr.ru-RU/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file, and grant you a license to any code in the repository under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/MicrosoftDocs/OfficeDocs-SkypeForBusiness-pr.ru-RU/main/LICENSE-CODE&#34;&gt;LICENSE-CODE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries. The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks. Microsoft&#39;s general trademark guidelines can be found at &lt;a href=&#34;http://go.microsoft.com/fwlink/?LinkID=254653&#34;&gt;http://go.microsoft.com/fwlink/?LinkID=254653&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Privacy information can be found at &lt;a href=&#34;https://privacy.microsoft.com/en-us/&#34;&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft and any contributors reserve all others rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.&lt;/p&gt;</summary>
  </entry>
</feed>