<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:39:33Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DemonKate-King/Rdp-Windows</title>
    <updated>2022-10-30T01:39:33Z</updated>
    <id>tag:github.com,2022-10-30:/DemonKate-King/Rdp-Windows</id>
    <link href="https://github.com/DemonKate-King/Rdp-Windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free Rdp Window 10&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://git.io/typing-svg&#34;&gt;&lt;img src=&#34;https://readme-typing-svg.herokuapp.com?font=Fira+Code&amp;amp;pause=1000&amp;amp;width=435&amp;amp;lines=Free+Rdp+Windows+10&#34; alt=&#34;Typing SVG&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://git.io/typing-svg&#34;&gt;&lt;img src=&#34;https://readme-typing-svg.herokuapp.com?font=Fira+Code&amp;amp;size=30&amp;amp;pause=1000&amp;amp;color=F71F1F&amp;amp;width=435&amp;amp;lines=How+to+use+&#34; alt=&#34;Typing SVG&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üåç &lt;a href=&#34;https://github.com/DemonKate-King&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üåç &lt;a href=&#34;https://remotedesktop.google.com/headless&#34;&gt;remotedesktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üåç &lt;a href=&#34;https://www.buymeacoffee.com/HoangDeveloper&#34;&gt;buymeacoffee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üåç &lt;a href=&#34;https://github.com/DemonKate-King/Rdp-Windows/actions/workflows/Windows-CRD.yml&#34;&gt;workflows&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Test Now~#:&lt;/h3&gt; &#xA;&lt;p&gt;Just Fork this Repository, Go to Actions tab, Select the Windows-CRD workflow. Then select Run Workflow fill the following data in CRD Code and your Pin in the fields. After that, Press Start.&lt;/p&gt; &#xA;&lt;p&gt;Input the following code in the fields.&lt;/p&gt; &#xA;&lt;p&gt;Get the Windows (Powershell) command from remotedesktop&lt;/p&gt; &#xA;&lt;p&gt;Enter you Six digit Pin code to Login&lt;/p&gt; &#xA;&lt;p&gt;(Any Six digit Pin)&lt;/p&gt; &#xA;&lt;p&gt;Thats it... After 2-3 min of Initialize, Check your CRD Application or Account.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Thanks @hoangdev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker-inbound-agent</title>
    <updated>2022-10-30T01:39:33Z</updated>
    <id>tag:github.com,2022-10-30:/jenkinsci/docker-inbound-agent</id>
    <link href="https://github.com/jenkinsci/docker-inbound-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image for a Jenkins agent which can connect to Jenkins using TCP or Websocket protocols&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker image for inbound Jenkins agents&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jenkinsci/docker-inbound-agent&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jenkinsci/docker-inbound-agent?label=GitHub%20stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/inbound-agent/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/inbound-agent.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jenkinsci/docker-inbound-agent/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/jenkinsci/docker-inbound-agent.svg?label=changelog&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ùó&lt;/span&gt; &lt;strong&gt;Warning!&lt;/strong&gt; This image used to be published as &lt;a href=&#34;https://hub.docker.com/r/jenkinsci/jnlp-slave/&#34;&gt;jenkinsci/jnlp-slave&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/jenkins/jnlp-slave/&#34;&gt;jenkins/jnlp-slave&lt;/a&gt;. These images are deprecated, use &lt;a href=&#34;https://hub.docker.com/r/jenkins/inbound-agent/&#34;&gt;jenkins/inbound-agent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is an image for &lt;a href=&#34;https://jenkins.io&#34;&gt;Jenkins&lt;/a&gt; agents using TCP or WebSockets to establish inbound connection to the Jenkins master. This agent is powered by the &lt;a href=&#34;https://github.com/jenkinsci/remoting&#34;&gt;Jenkins Remoting library&lt;/a&gt;, which version is being taken from the base &lt;a href=&#34;https://github.com/jenkinsci/docker-agent/&#34;&gt;Docker Agent&lt;/a&gt; image.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Distributed+builds&#34;&gt;Jenkins Distributed builds&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To run a Docker container&lt;/p&gt; &#xA;&lt;p&gt;Linux agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --init jenkins/inbound-agent -url http://jenkins-server:port &amp;lt;secret&amp;gt; &amp;lt;agent name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;--init&lt;/code&gt; is necessary for correct subprocesses handling (zombie reaping)&lt;/p&gt; &#xA;&lt;p&gt;Windows agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/inbound-agent:windowsservercore-ltsc2019 -Url http://jenkins-server:port -Secret &amp;lt;secret&amp;gt; -Name &amp;lt;agent name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a Docker container with &lt;a href=&#34;https://github.com/jenkinsci/remoting/raw/master/docs/workDir.md&#34;&gt;Work Directory&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --init jenkins/inbound-agent -url http://jenkins-server:port -workDir=/home/jenkins/agent &amp;lt;secret&amp;gt; &amp;lt;agent name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/inbound-agent:windowsservercore-ltsc2019 -Url http://jenkins-server:port -WorkDir=C:/Jenkins/agent -Secret &amp;lt;secret&amp;gt; -Name &amp;lt;agent name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_JAVA_BIN&lt;/code&gt;: Path to Java executable to use instead of the default in PATH or obtained from JAVA_HOME&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; : Java Options to use for the remoting process, otherwise obtained from JAVA_OPTS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_URL&lt;/code&gt;: url for the Jenkins server, can be used as a replacement to &lt;code&gt;-url&lt;/code&gt; option, or to set alternate jenkins URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_TUNNEL&lt;/code&gt;: (&lt;code&gt;HOST:PORT&lt;/code&gt;) connect to this agent host and port instead of Jenkins server, assuming this one do route TCP traffic to Jenkins master. Useful when when Jenkins runs behind a load balancer, reverse proxy, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_SECRET&lt;/code&gt;: agent secret, if not set as an argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_AGENT_NAME&lt;/code&gt;: agent name, if not set as an argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_AGENT_WORKDIR&lt;/code&gt;: agent work directory, if not set by optional parameter &lt;code&gt;-workDir&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_WEB_SOCKET&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; if the connection should be made via WebSocket rather than TCP&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_DIRECT_CONNECTION&lt;/code&gt;: (&lt;code&gt;HOST:PORT&lt;/code&gt;) Connect directly to this TCP agent port, skipping the HTTP(S) connection parameter download.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INSTANCE_IDENTITY&lt;/code&gt;: The base64 encoded InstanceIdentity byte array of the Jenkins master. When this is set, the agent skips connecting to an HTTP(S) port for connection info.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_PROTOCOLS&lt;/code&gt;: Specify the remoting protocols to attempt when &lt;code&gt;JENKINS_INSTANCE_IDENTITY&lt;/code&gt; is provided.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration specifics&lt;/h2&gt; &#xA;&lt;h3&gt;Enabled JNLP protocols&lt;/h3&gt; &#xA;&lt;p&gt;As of version 3.40-1 this image only supports the &lt;a href=&#34;https://github.com/jenkinsci/remoting/raw/master/docs/protocols.md#jnlp4-connect&#34;&gt;JNLP4-connect&lt;/a&gt; protocol. Earlier, long-unsupported protocols have been removed. As a result, Jenkins versions prior to 2.32 are no longer supported.&lt;/p&gt; &#xA;&lt;h3&gt;Amazon ECS&lt;/h3&gt; &#xA;&lt;p&gt;Make sure your ECS container agent is &lt;a href=&#34;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html&#34;&gt;updated&lt;/a&gt; before running. Older versions do not properly handle the entryPoint parameter. See the &lt;a href=&#34;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definitions&#34;&gt;entryPoint&lt;/a&gt; definition for more information.&lt;/p&gt;</summary>
  </entry>
</feed>