<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-01T01:34:55Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JetBrains/resharper-rider-plugin</title>
    <updated>2025-07-01T01:34:55Z</updated>
    <id>tag:github.com,2025-07-01:/JetBrains/resharper-rider-plugin</id>
    <link href="https://github.com/JetBrains/resharper-rider-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://www.jetbrains.com/help/resharper/sdk/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/incubator-flat-square.svg?sanitize=true&#34; alt=&#34;JetBrains incubator project&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Plugin Template for ReSharper and Rider&lt;/h1&gt; &#xA;&lt;p&gt;This repository defines a template for easy development of ReSharper and Rider plugins according to the official documentation for the &lt;a href=&#34;https://www.jetbrains.com/help/resharper/sdk&#34;&gt;ReSharper SDK&lt;/a&gt; and &lt;a href=&#34;http://www.jetbrains.org/intellij/sdk/docs/welcome.html&#34;&gt;IntelliJ SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;JetBrains.ReSharper.SamplePlugin.*.nupkg&lt;/code&gt; template package from the &lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/releases&#34;&gt;releases page&lt;/a&gt; and invoke from the download directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet new install JetBrains.ReSharper.SamplePlugin.*.nupkg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards, a new project can be created from the installed template. The &lt;code&gt;name&lt;/code&gt; identifier should be letters-only:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet new resharper-rider-plugin --name MyAwesomePlugin [--resharper-only] [--build-only]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; The template comes with its own solution file. Therefore, it MUST be used from the command-line as shown above.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This will create a new folder with all the structure ready to go and all identifiers, like namespaces, ids and file names, replaced with &lt;code&gt;MyAwesomePlugin&lt;/code&gt;. Passing &lt;code&gt;--resharper-only&lt;/code&gt; will exclude all Rider related files. With the &lt;code&gt;--build-only --force&lt;/code&gt;, all the build-relevant files can be updated (some reverts are most likely necessary). Metadata including project website, description, author and others should be entered in &lt;code&gt;Plugin.props&lt;/code&gt; and &lt;code&gt;plugins.xml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; The only place that currently needs to be updated manually is the &lt;code&gt;RIDER_PLUGIN_ID&lt;/code&gt; in &lt;code&gt;README.md&lt;/code&gt;, which you&#39;ll only get after uploading your Rider plugin the first time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains a few sample projects for various extension points:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/Actions&#34;&gt;Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/CodeInspections&#34;&gt;Code Inspections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/CodeVision&#34;&gt;Code Vision&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/InlayHints&#34;&gt;Inlay Hints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/Notifications&#34;&gt;Notifications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/OptionPages&#34;&gt;Option Pages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/PostfixTemplates&#34;&gt;Postfix Templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/RdProtocol&#34;&gt;Rd Protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/tree/fed252a46dd66ae2f3b012fac3db0d51049ea3fb/samples/SettingsProvider&#34;&gt;Settings Provider&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For general development, there are a couple of scripts/invocations worth knowing. Most importantly, to run and debug your plugin, invoke:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# For Rider&#xA;gradlew :runIde&#xA;&#xA;# For ReSharper (VisualStudio)&#xA;powershell .\runVisualStudio.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your Rider plugin requires a &lt;a href=&#34;https://www.jetbrains.com/help/resharper/sdk/Products/Rider.html&#34;&gt;model&lt;/a&gt; to share information between ReSharper backend and IntelliJ frontend, there is a sample protocol defined in &lt;code&gt;protocol&lt;/code&gt; directory. To generate the Kotlin and C# implementation, call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gradlew :rdgen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debbuging your plugin requires your debugger to be attached to the corresponding IDE process. You can find the correct process by searching for &lt;code&gt;Backend&lt;/code&gt; when running your extension in Rider, or &lt;code&gt;devenv&lt;/code&gt; for Visual Studio. Read more about attaching here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/help/rider/Attaching_to_Local_Process.html&#34;&gt;Attach to process in Rider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/visualstudio/debugger/attach-to-running-processes-with-the-visual-studio-debugger&#34;&gt;Attach to process in Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Opening the solution in Rider or IntelliJ IDEA will automatically provide the corresponding &lt;a href=&#34;https://www.jetbrains.com/help/rider/Creating_and_Editing_Run_Debug_Configurations.html&#34;&gt;run configurations&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/resharper-rider-plugin/master/images/run-configurations.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Version Relevant Code&lt;/h3&gt; &#xA;&lt;p&gt;There are a couple of version identifiers that should always be updated synchronously:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;ProductVersion&lt;/code&gt; variable in &lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/raw/master/content/gradle.properties#L17&#34;&gt;build.gradle&lt;/a&gt; is responsible for download a certain Rider frontend distribution&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;SdkVersion&lt;/code&gt; property in &lt;a href=&#34;https://github.com/JetBrains/resharper-rider-plugin/raw/master/content/src/dotnet/Plugin.props#L4&#34;&gt;Plugin.props&lt;/a&gt; will affect the referenced &lt;code&gt;JetBrains.ReSharper.SDK&lt;/code&gt; NuGet package and will also determine the &lt;code&gt;wave&lt;/code&gt; version that is required for the Extension Manager in ReSharper&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;runVisualStudio.ps1&lt;/code&gt; script will always download the latest available installer for ReSharper - this can be either a normal release or early-access-program (EAP) release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available versions are listed here for &lt;a href=&#34;https://www.nuget.org/packages/JetBrains.ReSharper.SDK&#34;&gt;ReSharper&lt;/a&gt; and &lt;a href=&#34;https://www.jetbrains.com/intellij-repository/snapshots&#34;&gt;Rider&lt;/a&gt; (under &lt;code&gt;com.jetbrains.intellij.rider&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio / ReSharper Relevant Directories&lt;/h3&gt; &#xA;&lt;p&gt;Installing ReSharper and the plugin into an experimental Visual Studio instance (hive) affects the following directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;%LOCALAPPDATA%/JetBrains/plugins&lt;/code&gt; contains a copy of the plugin package, similar to the global NuGet package cache&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%LOCALAPPDATA%/JetBrains/Installations&lt;/code&gt; contains settings directories per experimental instance, whereas &lt;code&gt;packages.config&lt;/code&gt; defines what plugins should be installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%APPDATA%/JetBrains/ReSharperPlatformVs[version]&lt;/code&gt; contains binary directories per experimental instance with all assemblies to run ReSharper and the plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://www.jetbrains.com/help/rider/Extending_Your_Solution.html#adding-external-files-and-folders&#34;&gt;attached folders&lt;/a&gt; can be of great help to track these directories while developing a ReSharper plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Both plugins can be published by calling:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# For Rider &amp;amp; ReSharper (Gradle)&#xA;gradlew :publishPlugin -PPluginVersion=&amp;lt;version&amp;gt; -PPublishToken=&amp;lt;token&amp;gt;&#xA;&#xA;# For ReSharper (PowerShell)&#xA;powershell ./publishPlugin.ps1 -Version &amp;lt;version&amp;gt; -ApiKey &amp;lt;ApiKey&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; The first deployment must be done through the &lt;a href=&#34;https://plugins.jetbrains.com/&#34;&gt;marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>