<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-31T01:38:02Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AzureAD/Azure-AD-Incident-Response-PowerShell-Module</title>
    <updated>2022-10-31T01:38:02Z</updated>
    <id>tag:github.com,2022-10-31:/AzureAD/Azure-AD-Incident-Response-PowerShell-Module</id>
    <link href="https://github.com/AzureAD/Azure-AD-Incident-Response-PowerShell-Module" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Azure Active Directory Incident Response PowerShell module provides a number of tools, developed by the Azure Active Directory Product Group in conjunction with the Microsoft Detection and Response Team (DART), to assist in compromise response.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure AD Incident Response PowerShell Module&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/AzureADIncidentResponse&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/AzureADIncidentResponse&#34; alt=&#34;PSGallery Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/AzureADIncidentResponse&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/dt/AzureADIncidentResponse&#34; alt=&#34;PSGallery Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Azure Active Directory Incident Response PowerShell module provides a number of tools, developed by the Azure Active Directory Product Group in conjunction with the Microsoft Detection and Response Team (DART), to assist in compromise response.&lt;/p&gt; &#xA;&lt;h2&gt;Why use the module?&lt;/h2&gt; &#xA;&lt;p&gt;The module meets these development goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide tooling that is quick and easy to install and use: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Complex configuration steps are not desirable in a compromise situation&lt;/li&gt; &#xA;   &lt;li&gt;Detailed help and examples are included as fundamentals&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provide cmdlets that robustly get you the data you need: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Combine IR specific data from a number of sources&lt;/li&gt; &#xA;   &lt;li&gt;Give inbuilt options for displaying or capturing results&lt;/li&gt; &#xA;   &lt;li&gt;Pagination and retry logic as default&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make the module a community project for ongoing improvement&lt;/li&gt; &#xA; &lt;li&gt;Help bridge the gap between on-premises and cloud environments and knowledge &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cmdlets to make connections and correlations&lt;/li&gt; &#xA;   &lt;li&gt;Provide familiarity for those unfamiliar with cloud automation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Security Operations Centre (SOC) friendly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How do I install the module?&lt;/h2&gt; &#xA;&lt;p&gt;The module can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/AzureADIncidentResponse&#34;&gt;https://www.powershellgallery.com/packages/AzureADIncidentResponse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please use the latest version. The module has a number of prerequisites that will be automatically installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSAL.ps PowerShell module&lt;/li&gt; &#xA; &lt;li&gt;AzureAD PowerShell module&lt;/li&gt; &#xA; &lt;li&gt;MSOnline PowerShell module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From within PowerShell you need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;  Install-Module -Name AzureADIncidentResponse -AcceptLicense&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Tip: you may need to trust the PowerShell gallery repository for this action to complete successfully.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you encounter an install issue with one of the dependent modules, MSAL.ps, see here for remediation steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AzureAD/MSAL.PS/raw/master/README.md#install-from-the-powershell-gallery&#34;&gt;https://github.com/AzureAD/MSAL.PS/blob/master/README.md#install-from-the-powershell-gallery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;NB - one of the cmdlets in the module, Get-AzureADIRPrivilegedUserOnPremCorrelation, makes use of the Windows Server Active Directory module. If you wish to use that cmdlet, then the AzureADIncidentResponse module will need to be installed on a domain joined Windows Server, with connectivity to the internet. The domain will typically be the one in which the Azure AD connect server is installed. The ActiveDirectory PowerShell module will also need to be installed on the target server.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>denoland/deno_install</title>
    <updated>2022-10-31T01:38:02Z</updated>
    <id>tag:github.com,2022-10-31:/denoland/deno_install</id>
    <link href="https://github.com/denoland/deno_install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deno Binary Installer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;deno_install&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;One-line commands to install Deno on your system.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/denoland/deno_install/actions&#34;&gt;&lt;img src=&#34;https://github.com/denoland/deno_install/workflows/ci/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install Latest Version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;With Shell:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://deno.land/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With PowerShell:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm https://deno.land/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install Specific Version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;With Shell:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://deno.land/install.sh | sh -s v1.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With PowerShell:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$v=&#34;1.0.0&#34;; irm https://deno.land/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install via Package Manager&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://github.com/ScoopInstaller/Main/raw/master/bucket/deno.json&#34;&gt;Scoop&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://formulae.brew.sh/formula/deno&#34;&gt;Homebrew&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://ports.macports.org/port/deno/summary&#34;&gt;Macports&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo port install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://chocolatey.org/packages/deno&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://snapcraft.io/deno&#34;&gt;Snap&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo snap install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://www.archlinux.org/pacman/&#34;&gt;Pacman&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -S deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://software.opensuse.org/package/deno&#34;&gt;Zypper&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zypper install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build and install from source using &lt;a href=&#34;https://lib.rs/crates/deno&#34;&gt;Cargo&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install and Manage Multiple Versions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://asdf-vm.com&#34;&gt;asdf&lt;/a&gt; and &lt;a href=&#34;https://github.com/asdf-community/asdf-deno&#34;&gt;asdf-deno&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;asdf plugin add deno&#xA;&#xA;# Get latest version of deno available&#xA;DENO_LATEST=$(asdf latest deno)&#xA;&#xA;asdf install deno $DENO_LATEST&#xA;&#xA;# Activate globally with:&#xA;asdf global deno $DENO_LATEST&#xA;&#xA;# Activate locally in the current folder with:&#xA;asdf local deno $DENO_LATEST&#xA;&#xA;#======================================================&#xA;# If you want to install specific version of deno then use that version instead&#xA;# of DENO_LATEST variable example&#xA;asdf install deno 1.0.0&#xA;&#xA;# Activate globally with:&#xA;asdf global deno 1.0.0&#xA;&#xA;# Activate locally in the current folder with:&#xA;asdf local deno 1.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;a href=&#34;https://github.com/lukesampson/scoop/wiki/Switching-Ruby-And-Python-Versions&#34;&gt;Scoop&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install a specific version of deno:&#xA;scoop install deno@1.0.0&#xA;&#xA;# Switch to v1.0.0&#xA;scoop reset deno@1.0.0&#xA;&#xA;# Switch to the latest version&#xA;scoop reset deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DENO_INSTALL&lt;/code&gt; - The directory in which to install Deno. This defaults to &lt;code&gt;$HOME/.deno&lt;/code&gt;. The executable is placed in &lt;code&gt;$DENO_INSTALL/bin&lt;/code&gt;. One application of this is a system-wide installation:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;With Shell (&lt;code&gt;/usr/local&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://deno.land/install.sh | sudo DENO_INSTALL=/usr/local sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;With PowerShell (&lt;code&gt;C:\Program Files\deno&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Run as administrator:&#xA;$env:DENO_INSTALL = &#34;C:\Program Files\deno&#34;&#xA;irm https://deno.land/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Shell installer can be used on Windows with &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/about&#34;&gt;Windows Subsystem for Linux&lt;/a&gt;, &lt;a href=&#34;https://www.msys2.org&#34;&gt;MSYS&lt;/a&gt; or equivalent set of tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;h3&gt;unzip is required&lt;/h3&gt; &#xA;&lt;p&gt;The program &lt;a href=&#34;https://linux.die.net/man/1/unzip&#34;&gt;&lt;code&gt;unzip&lt;/code&gt;&lt;/a&gt; is a requirement for the Shell installer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -fsSL https://deno.land/install.sh | sh&#xA;Error: unzip is required to install Deno (see: https://github.com/denoland/deno_install#unzip-is-required).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;When does this issue occur?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;During the &lt;code&gt;install.sh&lt;/code&gt; process, &lt;code&gt;unzip&lt;/code&gt; is used to extract the zip archive.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can this issue be fixed?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can install unzip via &lt;code&gt;brew install unzip&lt;/code&gt; on MacOS or &lt;code&gt;apt-get install unzip -y&lt;/code&gt; on Linux.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure-Samples/ms-identity-javascript-nodejs-desktop</title>
    <updated>2022-10-31T01:38:02Z</updated>
    <id>tag:github.com,2022-10-31:/Azure-Samples/ms-identity-javascript-nodejs-desktop</id>
    <link href="https://github.com/Azure-Samples/ms-identity-javascript-nodejs-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Electron desktop application authenticating users and calling Microsoft Graph API via OAuth 2.0 authorization code flow using MSAL Node&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;javascript products:&lt;/li&gt; &#xA; &lt;li&gt;nodejs&lt;/li&gt; &#xA; &lt;li&gt;electron&lt;/li&gt; &#xA; &lt;li&gt;ms-graph&lt;/li&gt; &#xA; &lt;li&gt;azure-active-directory description: &#34;Demonstrates how to use MSAL Node to sign-in users and acquire access tokens for a protected resource such as Microsoft Graph in an Electron desktop application using the OAuth 2.0 authorization code flow with PKCE.&#34; urlFragment: &#34;ms-identity-javascript-nodejs-desktop&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;An Electron desktop application using MSAL Node on Microsoft identity platform&lt;/h1&gt; &#xA;&lt;p&gt;This sample demonstrates how to use &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-node&#34;&gt;MSAL Node&lt;/a&gt; to sign-in a user and acquire an access token for a protected resource such as Microsoft Graph in an Electron desktop application using the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow&#34;&gt;authorization code grant with PKCE&lt;/a&gt; flow.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Looking for a TypeScript implementation? See: &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/ElectronTestApp&#34;&gt;ElectronTestApp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Looking for an Electron with React implementation? See: &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/ElectronReactTestApp&#34;&gt;ElectronReactTestApp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;This sample demonstrates the following &lt;strong&gt;MSAL Node&lt;/strong&gt; concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration&lt;/li&gt; &#xA; &lt;li&gt;Login and logout&lt;/li&gt; &#xA; &lt;li&gt;Acquiring an access token&lt;/li&gt; &#xA; &lt;li&gt;Calling a web API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File/folder&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AppCreationScripts/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains Powershell scripts for automating app registration.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/authProvider.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main authentication logic resides here.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/main.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Application main process.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/graph.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Instantiates Graph SDK client.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/renderer.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Renderer processes and UI methods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/constants.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Example user accounts in JSON .&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/preload.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Give the Renderer process controlled access to some Node API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;App/authConfig.js&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configuration objects to be passed to MSAL instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; must be installed to run this sample.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt; is recommended for running and editing this sample.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Register and Setup the application&lt;/h3&gt; &#xA;&lt;h4&gt;Step 1: Register the application&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to the &lt;a href=&#34;https://portal.azure.com&#34;&gt;Azure portal&lt;/a&gt; and select the &lt;strong&gt;Azure AD&lt;/strong&gt; service.&lt;/li&gt; &#xA; &lt;li&gt;Select the &lt;strong&gt;App Registrations&lt;/strong&gt; blade on the left, then select &lt;strong&gt;New registration&lt;/strong&gt;. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;In the &lt;strong&gt;Name&lt;/strong&gt; section, enter a meaningful application name that will be displayed to users of the app, for example &lt;code&gt;msal-node-desktop&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;In the &lt;strong&gt;Supported account types&lt;/strong&gt; section, select &lt;strong&gt;Accounts in this organizational directory only&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;Register&lt;/strong&gt; to create the application.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;In the list of pages for the app, select &lt;strong&gt;Authentication&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Add a platform&lt;/strong&gt;, select &lt;strong&gt;Mobile and desktop applications&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;strong&gt;Redirect URIs&lt;/strong&gt; section enter the following redirect URI &lt;code&gt;http://localhost&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Configure&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Configure Optional Claims&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Still on the same app registration, select the &lt;strong&gt;Token configuration&lt;/strong&gt; blade to the left.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Add optional claim&lt;/strong&gt;: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;optional claim type&lt;/strong&gt;, then choose &lt;strong&gt;ID&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Select the optional claim &lt;strong&gt;login_hint&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;An opaque, reliable login hint claim. This claim is the best value to use for the login_hint OAuth parameter in all flows to get SSO.See $&lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/active-directory-optional-claims&#34;&gt;optional claims&lt;/a&gt; for more details on this optional claim.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;Add&lt;/strong&gt; to save your changes.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Step 2: Clone the repository&lt;/h4&gt; &#xA;&lt;p&gt;Clone this repository &lt;code&gt;git clone https://github.com/Azure-Samples/ms-identity-javascript-nodejs-desktop.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Step 3: Configure the Electron sample project&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;a href=&#34;https://raw.githubusercontent.com/Azure-Samples/ms-identity-javascript-nodejs-desktop/main/App/authConfig.js&#34;&gt;.authConfig.js&lt;/a&gt; file and provide the required configuration values. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Replace the string &lt;code&gt;Enter_the_Application_Id_Here&lt;/code&gt; with your app/client ID on Azure AD portal.&lt;/li&gt; &#xA;   &lt;li&gt;Replace the string &lt;code&gt;Enter_the_Tenant_Info_Here&lt;/code&gt; with your tenant ID on Azure AD portal.&lt;/li&gt; &#xA;   &lt;li&gt;Replace the string &lt;code&gt;Enter_the_Cloud_Instance_Id_Here&lt;/code&gt; with &lt;code&gt;https://login.microsoftonline.com/&lt;/code&gt; (see &lt;strong&gt;note&lt;/strong&gt; below).&lt;/li&gt; &#xA;   &lt;li&gt;Replace the string &lt;code&gt;Enter_the_Graph_Endpoint_Here&lt;/code&gt;. with &lt;code&gt;https://graph.microsoft.com/&lt;/code&gt; (see &lt;strong&gt;note&lt;/strong&gt; below).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;em&gt;note&lt;/em&gt;: This is for multi-tenant applications located on the Global Azure cloud. For more information, see: &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/authentication-national-cloud&#34;&gt;Use MSAL in a national cloud environment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;em&gt;note&lt;/em&gt;: This is for MS Graph instance located on the Global Azure cloud. For more information, see: &lt;a href=&#34;https://docs.microsoft.com/graph/deployments&#34;&gt;Use Microsoft Graph in a national cloud environment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;step 4: Run the sample&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You&#39;ll need to install the dependencies of this sample once:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cd ms-identity-javascript-nodejs-desktop&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Then, run the application via command prompt or console:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to this sample, see &lt;a href=&#34;https://raw.githubusercontent.com/Azure-Samples/ms-identity-javascript-nodejs-desktop/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.MD&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>