<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-22T01:43:15Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dataplat/dbatools</title>
    <updated>2022-08-22T01:43:15Z</updated>
    <id>tag:github.com,2022-08-22:/dataplat/dbatools</id>
    <link href="https://github.com/dataplat/dbatools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄ SQL Server automation and instance migrations have never been safer, faster or freer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://open.vscode.dev/dataplat/dbatools&#34;&gt;Open in Visual Studio Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img align=&#34;left&#34; src=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/bin/dbatools.png&#34; alt=&#34;dbatools logo&#34;&gt; dbatools is PowerShell module that you may think of like a command-line SQL Server Management Studio. The project initially started out as just &lt;code&gt;Start-SqlMigration.ps1&lt;/code&gt;, but has now grown into a collection of &lt;a href=&#34;https://dbatools.io/commands&#34;&gt;over 500 commands&lt;/a&gt; that help automate SQL Server tasks and encourage best practices.&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute to the project? We&#39;d love to have you! Visit our &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/contributing.md&#34;&gt;contributing.md&lt;/a&gt; for a jump start.&lt;/p&gt; &#xA;&lt;p&gt;Want to say thanks? Click the star at the top of the page üåü&lt;/p&gt; &#xA;&lt;h2&gt;Key links for reference:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlcommunity.slack.com/messages/C1M2WEASG/&#34;&gt;dbatools Slack channel&lt;/a&gt; for general discussion on the module and asking questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlcommunity.slack.com/messages/C3EJ852JD/&#34;&gt;dbatools-dev Slack channel&lt;/a&gt; for discussion around contributing to the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dbatools.io&#34;&gt;dbatools documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Need an invite to the SQL Community Slack workspace? Check out the &lt;a href=&#34;https://dbatools.io/slack/&#34;&gt;self-invite page&lt;/a&gt;. Drop by if you&#39;d like to chat about dbatools or even &lt;a href=&#34;https://dbatools.io/team&#34;&gt;join the team&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installer&lt;/h2&gt; &#xA;&lt;p&gt;dbatools now works on PowerShell Core (aka PowerShell 6+). This means that you can run a large majority of our commands on &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;macOS &lt;/strong&gt;ü§©üëç&lt;/p&gt; &#xA;&lt;p&gt;Run the following to install dbatools from the PowerShell Gallery (to install on a server or for all users, remove the &lt;code&gt;-Scope&lt;/code&gt; parameter and run in an elevated session):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module dbatools -Scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have a version of PowerShell that supports the PowerShell Gallery, you can install it manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Invoke-Expression (Invoke-WebRequest https://dbatools.io/in)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: please only use &lt;code&gt;Invoke-Expression (Invoke-WebRequest..)&lt;/code&gt; from sources you trust, like us üëç&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage scenarios&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the simple things you can do in SSMS (e.g. starting a job, backing up a database), we&#39;ve also read a whole bunch of docs and came up with commands that do nifty things quickly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lost sysadmin access and need to regain entry to your SQL Server? Use &lt;a href=&#34;http://dbatools.io/Reset-DbaAdmin&#34;&gt;Reset-DbaAdmin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Need to easily test your backups? Use &lt;a href=&#34;http://dbatools.io/Test-DbaLastBackup&#34;&gt;Test-DbaLastBackup&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;SPN management got you down? Use &lt;a href=&#34;http://dbatools.io/schwifty&#34;&gt;our suite of SPN commands&lt;/a&gt; to find which SPNs are missing and easily add them.&lt;/li&gt; &#xA; &lt;li&gt;Got so many databases you can&#39;t keep track? Congrats on your big ol&#39; environment! Use &lt;a href=&#34;http://dbatools.io/Find-DbaDatabase&#34;&gt;Find-DbaDatabase&lt;/a&gt; to easily find your database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage examples&lt;/h2&gt; &#xA;&lt;p&gt;As previously mentioned, dbatools now offers &lt;a href=&#34;https://dbatools.io/commands&#34;&gt;over 500 commands&lt;/a&gt;! &lt;a href=&#34;https://gist.github.com/potatoqualitee/e8932b64aeb6ef404e252d656b6318a2&#34;&gt;Here are some of the ones we highlight at conferences&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;PowerShell v3 and above required. (See below for important information about alternative logins and specifying SQL Server ports).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Set some vars&#xA;$new = &#34;localhost\sql2016&#34;&#xA;$old = $instance = &#34;localhost&#34;&#xA;$allservers = $old, $new&#xA;&#xA;# Alternatively, use Registered Servers&#xA;$allservers = Get-DbaRegServer -SqlInstance $instance&#xA;&#xA;# Need to restore a database? It can be as simple as this:&#xA;Restore-DbaDatabase -SqlInstance $instance -Path &#34;C:\temp\AdventureWorks2012-Full Database Backup.bak&#34;&#xA;&#xA;# Use Ola Hallengren&#39;s backup script? We can restore an *ENTIRE INSTANCE* with just one line&#xA;Get-ChildItem -Directory \\workstation\backups\sql2012 | Restore-DbaDatabase -SqlInstance $new&#xA;&#xA;# What about if you need to make a backup? And you are logging in with alternative credentials?&#xA;Get-DbaDatabase -SqlInstance $new -SqlCredential sqladmin | Backup-DbaDatabase&#xA;&#xA;# Testing your backups is crazy easy!&#xA;Start-Process https://dbatools.io/Test-DbaLastBackup&#xA;Test-DbaLastBackup -SqlInstance $old | Out-GridView&#xA;&#xA;# But what if you want to test your backups on a different server?&#xA;Test-DbaLastBackup -SqlInstance $old -Destination $new | Out-GridView&#xA;&#xA;# Nowadays, we don&#39;t just backup databases. Now, we&#39;re backing up logins&#xA;Export-DbaLogin -SqlInstance $instance -Path C:\temp\logins.sql&#xA;Invoke-Item C:\temp\logins.sql&#xA;&#xA;# And Agent Jobs&#xA;Get-DbaAgentJob -SqlInstance $old | Export-DbaScript -Path C:\temp\jobs.sql&#xA;&#xA;# What if you just want to script out your restore?&#xA;Get-ChildItem -Directory \\workstation\backups\subset\ | Restore-DbaDatabase -SqlInstance $new -OutputScriptOnly -WithReplace | Out-File -Filepath c:\temp\restore.sql&#xA;Invoke-Item c:\temp\restore.sql&#xA;&#xA;# You&#39;ve probably heard about how easy migrations can be with dbatools. Here&#39;s an example&#xA;$startDbaMigrationSplat = @{&#xA;    Source = $old&#xA;    Destination = $new&#xA;    BackupRestore = $true&#xA;    SharedPath = &#39;C:\temp&#39;&#xA;    Exclude = &#39;BackupDevice&#39;,&#39;SysDbUserObjects&#39;,&#39;Credentials&#39;&#xA;}&#xA;&#xA;Start-DbaMigration @startDbaMigrationSplat -Force | Select-Object * | Out-GridView&#xA;&#xA;# Know how snapshots used to be a PITA? Now they&#39;re super easy&#xA;New-DbaDbSnapshot -SqlInstance $new -Database db1 -Name db1_snapshot&#xA;Get-DbaDbSnapshot -SqlInstance $new&#xA;Get-DbaProcess -SqlInstance $new -Database db1 | Stop-DbaProcess&#xA;Restore-DbaFromDatabaseSnapshot -SqlInstance $new -Database db1 -Snapshot db1_snapshot&#xA;Remove-DbaDbSnapshot -SqlInstance $new -Snapshot db1_snapshot # or -Database db1&#xA;&#xA;# Have you tested your last good DBCC CHECKDB? We&#39;ve got a command for that&#xA;$old | Get-DbaLastGoodCheckDb | Out-GridView&#xA;&#xA;# Here&#39;s how you can find your integrity jobs and easily start them. Then, you can watch them run, and finally check your newest DBCC CHECKDB results&#xA;$old | Get-DbaAgentJob | Where-Object Name -match integrity | Start-DbaAgentJob&#xA;$old | Get-DbaRunningJob&#xA;$old | Get-DbaLastGoodCheckDb | Out-GridView&#xA;&#xA;# Our new build website is super useful!&#xA;Start-Process https://dbatools.io/builds&#xA;&#xA;# You can use the same JSON the website uses to check the status of your own environment&#xA;$allservers | Get-DbaBuild&#xA;&#xA;# We evaluated 37,545 SQL Server stored procedures on 9 servers in 8.67 seconds!&#xA;$new | Find-DbaStoredProcedure -Pattern dbatools&#xA;&#xA;# Have an employee who is leaving? Find all of their objects.&#xA;$allservers | Find-DbaUserObject -Pattern ad\jdoe | Out-GridView&#xA;&#xA;# Find detached databases, by example&#xA;Detach-DbaDatabase -SqlInstance $instance -Database AdventureWorks2012&#xA;Find-DbaOrphanedFile -SqlInstance $instance | Out-GridView&#xA;&#xA;# Check out how complete our sp_configure command is&#xA;Get-DbaSpConfigure -SqlInstance $new | Out-GridView&#xA;&#xA;# Easily update configuration values&#xA;Set-DbaSpConfigure -SqlInstance $new -ConfigName XPCmdShellEnabled -Value $true&#xA;&#xA;# DB Cloning too!&#xA;Invoke-DbaDbClone -SqlInstance $new -Database db1 -CloneDatabase db1_clone | Out-GridView&#xA;&#xA;# Read and watch XEvents&#xA;Get-DbaXESession -SqlInstance $new -Session system_health | Read-DbaXEFile&#xA;Get-DbaXESession -SqlInstance $new -Session system_health | Read-DbaXEFile | Select-Object -ExpandProperty Fields | Out-GridView&#xA;&#xA;# Reset-DbaAdmin&#xA;Reset-DbaAdmin -SqlInstance $instance -Login sqladmin -Verbose&#xA;Get-DbaDatabase -SqlInstance $instance -SqlCredential sqladmin&#xA;&#xA;# sp_whoisactive&#xA;Install-DbaWhoIsActive -SqlInstance $instance -Database master&#xA;Invoke-DbaWhoIsActive -SqlInstance $instance -ShowOwnSpid -ShowSystemSpids&#xA;&#xA;# Diagnostic query!&#xA;$instance | Invoke-DbaDiagnosticQuery -UseSelectionHelper | Export-DbaDiagnosticQuery -Path $home&#xA;Invoke-Item $home&#xA;&#xA;# Ola, yall&#xA;$instance | Install-DbaMaintenanceSolution -ReplaceExisting -BackupLocation C:\temp -InstallJobs&#xA;&#xA;# Startup parameters&#xA;Get-DbaStartupParameter -SqlInstance $instance&#xA;Set-DbaStartupParameter -SqlInstance $instance -SingleUser -WhatIf&#xA;&#xA;# Database clone&#xA;Invoke-DbaDbClone -SqlInstance $new -Database dbwithsprocs -CloneDatabase dbwithsprocs_clone&#xA;&#xA;# Schema change and Pester tests&#xA;Get-DbaSchemaChangeHistory -SqlInstance $new -Database tempdb&#xA;&#xA;# Get Db Free Space AND write it to table&#xA;Get-DbaDbSpace -SqlInstance $instance | Out-GridView&#xA;Get-DbaDbSpace -SqlInstance $instance -IncludeSystemDB | ConvertTo-DbaDataTable | Write-DbaDataTable -SqlInstance $instance -Database tempdb -Table DiskSpaceExample -AutoCreateTable&#xA;Invoke-DbaQuery -SqlInstance $instance -Database tempdb -Query &#39;SELECT * FROM dbo.DiskSpaceExample&#39; | Out-GridView&#xA;&#xA;# History&#xA;Get-Command -Module dbatools *history*&#xA;&#xA;# Identity usage&#xA;Test-DbaIdentityUsage -SqlInstance $instance | Out-GridView&#xA;&#xA;# Test/Set SQL max memory&#xA;$allservers | Get-DbaMaxMemory&#xA;$allservers | Test-DbaMaxMemory | Format-Table&#xA;$allservers | Test-DbaMaxMemory | Where-Object { $_.SqlMaxMB -gt $_.TotalMB } | Set-DbaMaxMemory -WhatIf&#xA;Set-DbaMaxMemory -SqlInstance $instance -MaxMb 1023&#xA;&#xA;# Testing sql server linked server connections&#xA;Test-DbaLinkedServerConnection -SqlInstance $instance&#xA;&#xA;# See protocols&#xA;Get-DbaServerProtocol -ComputerName $instance | Out-GridView&#xA;&#xA;# Reads trace files - default trace by default&#xA;Read-DbaTraceFile -SqlInstance $instance | Out-GridView&#xA;&#xA;# don&#39;t have remoting access? Explore the filesystem. Uses master.sys.xp_dirtree&#xA;Get-DbaFile -SqlInstance $instance&#xA;&#xA;# Test your SPNs and see what&#39;d happen if you&#39;d set them&#xA;$servers | Test-DbaSpn | Out-GridView&#xA;$servers | Test-DbaSpn | Out-GridView -PassThru | Set-DbaSpn -WhatIf&#xA;&#xA;# Get Virtual Log File information&#xA;Get-DbaDbVirtualLogFile -SqlInstance $new -Database db1&#xA;Get-DbaDbVirtualLogFile -SqlInstance $new -Database db1 | Measure-Object&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important Note&lt;/h2&gt; &#xA;&lt;h4&gt;Alternative SQL Credentials&lt;/h4&gt; &#xA;&lt;p&gt;By default, all SQL-based commands will login to SQL Server using Trusted/Windows Authentication. To use alternative credentials, including SQL Logins or alternative Windows credentials, use the &lt;code&gt;-SqlCredential&lt;/code&gt;. This parameter accepts the results of &lt;code&gt;Get-Credential&lt;/code&gt; which generates a &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/get-credential?view=powershell-5.1&#34;&gt;PSCredential&lt;/a&gt; object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Get-DbaDatabase -SqlInstance sql2017 -SqlCredential sqladmin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dbatools.io/wp-content/uploads/2016/05/cred.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-6897&#34; src=&#34;https://dbatools.io/wp-content/uploads/2016/05/cred.jpg&#34; alt=&#34;&#34; width=&#34;322&#34; height=&#34;261&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A few (or maybe just one - &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/Restore-DbaDatabase&#34;&gt;Restore-DbaDatabase&lt;/a&gt;), you can also use &lt;code&gt;-AzureCredential&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Alternative Windows Credentials&lt;/h4&gt; &#xA;&lt;p&gt;For commands that access Windows such as &lt;a href=&#34;https://raw.githubusercontent.com/dataplat/dbatools/development/Get-DbaDiskSpace&#34;&gt;Get-DbaDiskSpace&lt;/a&gt;, you will pass the &lt;code&gt;-Credential&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$cred = Get-Credential ad\winadmin&#xA;Get-DbaDiskSpace -ComputerName sql2017 -Credential $cred&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To store credentials to disk, please read more at &lt;a href=&#34;https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/&#34;&gt;Jaap Brasser&#39;s blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Servers with custom ports&lt;/h4&gt; &#xA;&lt;p&gt;If you use non-default ports and SQL Browser is disabled, you can access servers using a semicolon (functionality we&#39;ve added) or a comma (the way Microsoft does it).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;-SqlInstance sql2017:55559&#xA;-SqlInstance &#39;sql2017,55559&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that PowerShell sees commas as arrays, so you must surround the host name with quotes.&lt;/p&gt; &#xA;&lt;h4&gt;Using Start-Transcript&lt;/h4&gt; &#xA;&lt;p&gt;Due to an &lt;a href=&#34;https://github.com/dataplat/dbatools/issues/2722&#34;&gt;issue&lt;/a&gt; in the way PowerShell 5.1 works you need to use &lt;code&gt;Import-Module dbatools&lt;/code&gt; before you run &lt;code&gt;Start-Transcript&lt;/code&gt;. If this isn&#39;t done then your transcript will stop when the module is imported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-Module dbatools&#xA;Start-Transcript&#xA;Get-DbaDatabase -SqlInstance sql2017&#xA;Stop-Transcript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;dbatools aims to support as many configurations as possible, including&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell v3 and above&lt;/li&gt; &#xA; &lt;li&gt;Windows, macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;SQL Server 2000 - Current&lt;/li&gt; &#xA; &lt;li&gt;Express - Datacenter Edition&lt;/li&gt; &#xA; &lt;li&gt;Clustered and stand-alone instances&lt;/li&gt; &#xA; &lt;li&gt;Windows and SQL authentication&lt;/li&gt; &#xA; &lt;li&gt;Default and named instances&lt;/li&gt; &#xA; &lt;li&gt;Multiple instances on one server&lt;/li&gt; &#xA; &lt;li&gt;Auto-populated parameters for command-line completion (think -Database and -Login)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more at our website at &lt;a href=&#34;https://dbatools.io&#34;&gt;dbatools.io&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>canix1/ADACLScanner</title>
    <updated>2022-08-22T01:43:15Z</updated>
    <id>tag:github.com,2022-08-22:/canix1/ADACLScanner</id>
    <link href="https://github.com/canix1/ADACLScanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repo for ADACLScan.ps1 - Your number one script for ACL&#39;s in Active Directory&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AD ACL Scanner&lt;/h1&gt; &#xA;&lt;h2&gt;Current version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version: 7.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;22 July, 2022&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SHA256:&lt;/strong&gt; 43EE6AFD2358BFE169B627B3336559FD6AC678F518501BB97305BFEAF3320D8C&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;New Features&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filter on permissions like &#34;GenericAll&#34; or multiple values like &#34;WriteProperty | ExtendedRight&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/ADACLScan7.0_Permission.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From the CLI you can select Target and select RiskyTemplates to scan published certificate templates with &#34;supply in request&#34;.&lt;/li&gt; &#xA; &lt;li&gt;The default output from CLI is structured and translated&lt;/li&gt; &#xA; &lt;li&gt;The default csv file output option is structured and translated and cannot be used for comparing.&lt;/li&gt; &#xA; &lt;li&gt;New output option for comparing that is called CSVTEMPLATE from CLI and &#34;CSV Template&#34; in GUI.&lt;/li&gt; &#xA; &lt;li&gt;Old CLI output format is produced by using the -RAW switch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/canix1/ADACLScanner/releases/tag/7.0&#34;&gt;Release&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Do you appreciate my work and want to buy me a beer? You can donate via PayPal: &lt;a href=&#34;https://www.paypal.me/canix1&#34;&gt;https://www.paypal.me/canix1&lt;/a&gt; or send Bitcoins to &lt;b&gt;bc1qte7vlwhvrju7msv9hzfytwy7jd9vlmnjfpm0366d62yx4ke89czsavk0hr&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/DonateBitCoin.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A tool completly written in PowerShell.&lt;/li&gt; &#xA; &lt;li&gt;A tool with GUI used to create reports of access control lists (DACLs) and system access control lists (SACLs) in Active Directory .&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Related blog posts&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.technet.microsoft.com/pfesweplat/2017/01/28/forensics-active-directory-acl-investigation&#34;&gt;Forensics - Active Directory ACL Investigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.technet.microsoft.com/pfesweplat/2013/05/13/take-control-over-ad-permissions-and-the-ad-acl-scanner-tool&#34;&gt;Take Control Over AD Permissions And The AD ACL Scanner Tool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;Features and fixes &lt;a href=&#34;https://github.com/canix1/ADACLScanner/wiki/History&#34;&gt;https://github.com/canix1/ADACLScanner/wiki/History&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run effective rights report from the command line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;parameter from command line to get modified date of security descriptor in report. &lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/effectiverights.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Save to excel file without excel installed. Both from UI and command line. Requires ImportExcel PowerShell Module. You can install ImportExcel directly from the Powershell Gallery. &lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/SaveToExcel.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Command line support. &lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/adaclscan_commandline.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom search filter for scanning objects.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support input from pipeline. You can call ADACLScan.ps1 by sending a distinguishedName via pipeline.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Added formated synopsis to the script.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/canix1/ADACLScanner/raw/master/src/ADACLScan6.0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature list&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scan linked Group Policy Objects&lt;/li&gt; &#xA; &lt;li&gt;View HTML reports of DACLs/SACLs and save it to disk.&lt;/li&gt; &#xA; &lt;li&gt;Export DACLs/SACLs on Active Directory objects in a CSV format.&lt;/li&gt; &#xA; &lt;li&gt;Export DACLs/SACLs on Active Directory objects in a Excel sheet.&lt;/li&gt; &#xA; &lt;li&gt;Connect and browse you default domain, schema , configuration or a naming context defined by distinguishedname.&lt;/li&gt; &#xA; &lt;li&gt;Browse naming context by clicking you way around, either by OUÔøΩs or all types of objects.&lt;/li&gt; &#xA; &lt;li&gt;Report only explicitly assigned DACLs/SACLs.&lt;/li&gt; &#xA; &lt;li&gt;Report on OUs , OUs and Container Objects or all object types.&lt;/li&gt; &#xA; &lt;li&gt;Filter DACLs/SACLs for a specific access type.. Where does ÔøΩDenyÔøΩ permission exists?&lt;/li&gt; &#xA; &lt;li&gt;Filter DACLs/SACLs for a specific identity. Where does &#34;Domain\Client Admins&#34; have explicit access? Or use wildcards like &#34;jdoe&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Filter DACLs/SACLs for permission on specific object. Where are permissions set on computer objects?&lt;/li&gt; &#xA; &lt;li&gt;Skip default permissions (defaultSecurityDescriptor) in report. Makes it easier to find custom permissions.&lt;/li&gt; &#xA; &lt;li&gt;Report owner of object.&lt;/li&gt; &#xA; &lt;li&gt;Compare previous results with the current configuration and see the differences by color scheme (Green=matching permissions, Yellow= new permissions, Red= missing permissions).&lt;/li&gt; &#xA; &lt;li&gt;Report when permissions were modified&lt;/li&gt; &#xA; &lt;li&gt;Can use AD replication metadata when comparing.&lt;/li&gt; &#xA; &lt;li&gt;Can convert a previously created CSV file to a HTML report.&lt;/li&gt; &#xA; &lt;li&gt;Effective rights, select a security principal and match it agains the permissions in AD.&lt;/li&gt; &#xA; &lt;li&gt;Color coded permissions based on criticality when using effective rights scan.&lt;/li&gt; &#xA; &lt;li&gt;List you domains and select one from the list.&lt;/li&gt; &#xA; &lt;li&gt;Get the size of the security descriptor (bytes).&lt;/li&gt; &#xA; &lt;li&gt;Rerporting on disabled inheritance .&lt;/li&gt; &#xA; &lt;li&gt;Get all inherited permissions in report.&lt;/li&gt; &#xA; &lt;li&gt;HTLM reports contain headers.&lt;/li&gt; &#xA; &lt;li&gt;Summary of criticality for all report types.&lt;/li&gt; &#xA; &lt;li&gt;Refresh Nodes by right-click container object.&lt;/li&gt; &#xA; &lt;li&gt;Exclude of objects from report by matching string to distinguishedName&lt;/li&gt; &#xA; &lt;li&gt;You can take a CSV file from one domain and use it for another. With replacing the old DN with the current domains you can resuse reports between domains. You can also replace the (Short domain name)Netbios name security principals.&lt;/li&gt; &#xA; &lt;li&gt;Reporting on modified default security descriptors in Schema.&lt;/li&gt; &#xA; &lt;li&gt;Verifying the format of the CSV files used in convert and compare functions.&lt;/li&gt; &#xA; &lt;li&gt;When compairing with CSV file Nodes missing in AD will be reported as &#34;Node does not exist in AD&#34;&lt;/li&gt; &#xA; &lt;li&gt;The progress bar can be disabled to gain speed in creating reports.&lt;/li&gt; &#xA; &lt;li&gt;If the fist node in the CSV file used for compairing can&#39;t be connected the scan will stop.&lt;/li&gt; &#xA; &lt;li&gt;Display group members in groups in the HTLM report.&lt;/li&gt; &#xA; &lt;li&gt;Present the value of the true SDDL in NTsecurityDescriptor, bypassing Object-Specific ACE merge done when a new instance of the ObjectSecurity class is initialized.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Powershell 3.0 or above&lt;/li&gt; &#xA; &lt;li&gt;PowerShell using a single-threaded apartment&lt;/li&gt; &#xA; &lt;li&gt;Some functions requires Microsoft .NET Framework version 4.0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mandiant/Mandiant-Azure-AD-Investigator</title>
    <updated>2022-08-22T01:43:15Z</updated>
    <id>tag:github.com,2022-08-22:/mandiant/Mandiant-Azure-AD-Investigator</id>
    <link href="https://github.com/mandiant/Mandiant-Azure-AD-Investigator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mandiant Azure AD Investigator&lt;/h1&gt; &#xA;&lt;h3&gt;Focusing on UNC2452 TTPs&lt;/h3&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains a PowerShell module for detecting artifacts that may be indicators of UNC2452 and other threat actor activity. Some indicators are &#34;high-fidelity&#34; indicators of compromise, while other artifacts are so called &#34;dual-use&#34; artifacts. Dual-use artifacts may be related to threat actor activity, but also may be related to legitimate functionality. Analysis and verification will be required for these. For a detailed description of the techniques used by UNC2452 see our blog.&lt;/p&gt; &#xA;&lt;p&gt;This tool is &lt;strong&gt;read-only&lt;/strong&gt;. It does not make any changes to the Microsoft 365 environment.&lt;/p&gt; &#xA;&lt;p&gt;In summary this module will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do a best effort job at identifying indicators of compromise that will require further verification and analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It will &lt;em&gt;not&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Identify a compromise 100% of the time, or&lt;/li&gt; &#xA; &lt;li&gt;Tell you if an artifact is legitimate admin activity or threat actor activity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With community feedback, the tool may become more thorough in its detection of IOCs. Please open an &lt;a href=&#34;https://github.com/mandiant/Mandiant-Azure-AD-Investigator/issues&#34;&gt;issue&lt;/a&gt;, &lt;a href=&#34;https://github.com/mandiant/Mandiant-Azure-AD-Investigator/pulls&#34;&gt;submit a PR&lt;/a&gt;, or contact the authors if you have problems, ideas, or feedback.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Federated Domains (Invoke-MandiantAuditAzureADDomains)&lt;/h3&gt; &#xA;&lt;p&gt;This module uses MS Online PowerShell to look for and audit federated domains in Azure AD. All federated domains will be output to the file &lt;code&gt;federated domains.csv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Signing Certificate Unusual Validity Period&lt;/strong&gt; - Alerts on a federated domain where the signing certificates have a validity period of &amp;gt; 1 year. AD FS managed certificates are valid for only one year. Validity periods that are longer than one year could be an indication that a threat actor has tampered with the domain federation settings. They may also be indicative of the use of a legitimate custom token-signing certificate. Have your administrators verify if this is the case.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Signing Certificate Mismatch&lt;/strong&gt; - Alerts on federated domains where the issuer or subject of the signing certificates do not match. In most cases the token-signing certificates will always be from the same issuer and have the same subject. If there is a mismatch, then it could be an indication that a threat actor has tampered with the domain federation settings. Have your administrators verify if the subject and issuer names are expected, and if not consider performing a forensic investigation to determine how the changes were made and to identify any other evidence of compromise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Azure AD Backdoor (any.sts)&lt;/strong&gt; - Alerts on federated domains configured with &lt;code&gt;any.sts&lt;/code&gt; as the Issuer URI. This is indicative of usage of the Azure AD Backdoor tool. Consider performing a forensic investigation to determine how the changes were made and to identify any other evidence of compromise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Federated Domains&lt;/strong&gt; - Lists all federated domains and the token issuer URI. Verify that the domain should be federated and that the issuer URI is expected.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unverified Domains&lt;/strong&gt; - Lists all unverified domains in Azure AD. Unverified domains should not be kept in Azure AD for long in an unverified state. Consider removing them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;!! Evidence of AAD backdoor found.&#xA;Consider performing a detailed forensic investigation&#xA;Domain name: foobar.com&#xA;Domain federation name:&#xA;Federation issuer URI: http://any.sts/16B45E3B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚Äº&lt;/span&gt; The script has identified a domain that has been federated with an issuer URI that is an indicator of an &lt;a href=&#34;https://github.com/Gerenios/AADInternals/raw/master/FederatedIdentityTools.ps1&#34;&gt;Azure AD Backdoor&lt;/a&gt;. The backdoor sets the issuer URI to hxxp://any.sts by default. Consider performing a forensic investigation to determine how the changes were made and identify any other evidence of compromise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;!! A token signing certificate has a validity period of more than 365 days. &#xA;This may be evidence of a signing certificate not generated by AD FS.&#xA;Domain name: foobar.com&#xA;Federation issuer uri: http://sts.foobar.com&#xA;Signing cert not valid before: 1/1/2020 00:00:00&#xA;Signing cert not valid after: 12/31/2025 23:59:59&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The script has identified a federated domain with a token-signing certificate that is valid for longer than the standard 365 days. Consult with your administrators to see if the token-signing certificate is manually managed and if it is expected to have the stated validity period. Consider performing a forensic investigation if this is not expected.&lt;/p&gt; &#xA;&lt;h3&gt;Service Principals (Invoke-MandiantAuditAzureADServicePrincipals)&lt;/h3&gt; &#xA;&lt;p&gt;This module uses Azure AD PowerShell to look for and audit Service Principals in Azure AD.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;First-party Service Principals with added credentials&lt;/strong&gt; - First-party (Microsoft published) Service Principals should not have added credentials except in rare circumstances. Environments that are or were previously in a hybrid-mode may have credentials added to Exchange Online, Skype for Business, and AAD Password Protection Proxy Service Principals. Verify that the Service Principal credential is part of a legitimate use case. Consider performing a forensic investigation if the credential is not legitimate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Service Principals with high level privileges and added credentials&lt;/strong&gt; - Identifies Service Principals that have high-risk API permissions assigned and added credentials. While the Service Principal and added permissions are likely legitimate, the added credentials may not be. Verify that the Service Principal credentials are part of a legitimate use case. Verify that the Service Principal needs the listed permissions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;!! Identified first-party (Microsoft published) Service Principals with added credentials.&#xA;Only in rare cases should a first-party Service Principal have an added credential.&#xA;Verify that the added credential has a legitimate use case and consider further investigation if not&#xA;*******************************************************************&#xA;Object ID           : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;App ID              : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;Display Name        : Office 365 Exchange Online&#xA;Key Credentials     :&#xA;&#xA;CustomKeyIdentifier :&#xA;EndDate             : 12/9/2017 2:10:29 AM&#xA;KeyId               : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;StartDate           : 12/9/2015 1:40:30 AM&#xA;Type                : AsymmetricX509Cert&#xA;Usage               : Verify&#xA;Value               :&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The script has identified a first-party (Microsoft) Service Principal with added credentials. First-party Service Principals should &lt;em&gt;not&lt;/em&gt; have added credentials except in rare cases. Environments that are or were previously in a hybrid-mode may have credentials added to Exchange Online, Skype for Business, and AAD Password Protection Proxy Service Principals. This may also be an artifact of UNC2452 activity in your environment. Consult with your administrators and search the audit logs to verify the credential is legitimate. You can also use the &#34;Service Principal Sign-Ins&#34; tab in the Azure AD Sign-Ins blade to search for authentications to your tenant using this Service Principal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;!! Identified Service Principals with high-risk API permissions and added credentials.&#xA;Verify that the added credential has a legitimate use case and consider further investigation if not&#xA;Object ID            : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;App ID               : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;Display Name         : TestingApp&#xA;Key Credentials      :&#xA;    CustomKeyIdentifier :&#xA;    EndDate             : 1/7/2025 12:00:00 AM&#xA;    KeyId               : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;    StartDate           : 1/7/2021 12:00:00 AM&#xA;    Type                : Symmetric&#xA;    Usage               : Verify&#xA;    Value               :&#xA;Password Credentials :&#xA;Risky Permissions    : Domain.ReadWrite.All&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The script has identified a Service Principal with high-risk API permissions and added credentials. This may be expected, as some third-party or custom-built applications require added credentials in order to function. This may also be an artifact of UNC2452 activity in your environment. Consult with your administrators and search the audit logs to verify the credential is legitimate. You can also use the &#34;Service Principal Sign-Ins&#34; tab in the Azure AD Sign-Ins blade to search for authentications to your tenant using this Service Principal.&lt;/p&gt; &#xA;&lt;h3&gt;Applications (Invoke-MandiantAuditAzureADApplications)&lt;/h3&gt; &#xA;&lt;p&gt;This module uses Azure AD PowerShell to look for and audit Applications in Azure AD.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Applications with high level privileges and added credentials&lt;/strong&gt; - Alerts on Applications that have high-risk API permissions and added credentials. While the Applications and added permissions are likely legitimate, the added credentials may not be. Verify that the Application credentials are part of a legitimate use case. Verify that the Applications needs the listed permissions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;!! High-privileged Application with credentials found.&#xA;Validate that the application needs these permissions.&#xA;Validate that the credentials added to the application are associated with a legitimate use case.&#xA;&#xA;ObjectID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;AppID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;DisplayName: Acme Test App&#xA;KeyCredentials:&#xA;PasswordCredentials:&#xA;&#xA;CustomKeyIdentifier :&#xA;EndDate             : 12/22/2021 4:01:52 PM&#xA;KeyId               : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;StartDate           : 12/22/2020 4:01:52 PM&#xA;Value               :&#xA;&#xA;CustomKeyIdentifier :&#xA;EndDate             : 12/21/2021 6:32:54 PM&#xA;KeyId               : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#xA;StartDate           : 12/21/2020 6:33:16 PM&#xA;Value               :&#xA;&#xA;Risky Permissions: &#xA;Mail.Read (Read mail in all mailboxes)&#xA;Directory.Read.All (Read all data in the organization directory)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The script has identified an Application with high-risk API permissions and added credentials. This may be expected, as some third-party or custom-built applications require added credentials in order to function. This may also be an artifact of UNC2452 activity in your environment. Consult with your administrators and search the audit logs to verify the credential is legitimate.&lt;/p&gt; &#xA;&lt;h3&gt;Cloud Solution Provider Program (Invoke-MandiantGetCSPInformation)&lt;/h3&gt; &#xA;&lt;p&gt;This module checks to see if the tenant is managed by a CSP, or partner, and if delegated administration is enabled. Delegated administration allows the CSP to access a customer tenant with the same privileges as a Global Administrator. Although the CSP program enforces strong security controls on the partner&#39;s tenant, a threat actor that compromises the CSP may be able to access customer environments. Organizations should verify if their partner needs delegated admin privileges and remove it if not. If the partner must maintain delegated admin access, consider implementing Conditional Access Policies to restrict their access.&lt;/p&gt; &#xA;&lt;p&gt;Organizations can check and manage partner relationships by navigating to the &lt;a href=&#34;https://admin.microsoft.com&#34;&gt;Admin Center&lt;/a&gt; and navigating to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Partner Relationships&lt;/code&gt; on the left-hand menu bar.&lt;/p&gt; &#xA;&lt;h3&gt;Mailbox Folder Permissions (Get-MandiantMailboxFolderPermissions)&lt;/h3&gt; &#xA;&lt;p&gt;This module audits all the mailboxes in the tenant for the existance of suspicious folder permissions. Specifically, this module will examine the &#34;Top of Information Store&#34; and &#34;Inbox&#34; folders in each mailbox and check the permissions assigned to the &#34;Default&#34; and &#34;Anonymous&#34; users. Any value other than &#34;None&#34; will result in the mailbox being flagged for analysis. In general the Default and Anonymous users should not have permissions on user inboxes as this will allow any user to read their contents. Some organizations may find shared mailboxes with this permission, but it is not recommended practice.&lt;/p&gt; &#xA;&lt;h3&gt;Application Impersonation (Get-MandiantApplicationImpersonationHolders)&lt;/h3&gt; &#xA;&lt;p&gt;This module outputs the list of users and groups that hold the ApplicationImpersonation role. Any user or member of a group in the output of this command can use impersonation to &#34;act as&#34; and access the mailbox of any other user in the tenant. Organizations should audit the output of this command to ensure that only expected users and groups are included, and where possible further restrict the scope.&lt;/p&gt; &#xA;&lt;h3&gt;Purview Audit (Formerly Advanced Audity) (Invoke-MandiantCheckAuditing)&lt;/h3&gt; &#xA;&lt;p&gt;This module will enumerate all licensed users in the tenant that are licensed for Purview Audit Mail Items Accessed. It will generate a CSV report documenting whether or not the feature has been enabled on an eligible mailbox. Organizations should filter on mailboxes that are eligible for Mail Items Accessed but have the feature disabled and verify that this is intentional.&lt;/p&gt; &#xA;&lt;h3&gt;Unified Audit Log (Get-MandiantUnc2452AuditLogs)&lt;/h3&gt; &#xA;&lt;p&gt;This module is a helper script to search the Unified Audit Log. Searching the Unified Audit Log has many technical caveats that can be easy to overlook. This module can help simplify the search process by implementing best practices for navigating these caveats and handling some common errors.&lt;/p&gt; &#xA;&lt;p&gt;By default, the module will search for log entries that can record UNC2452 techniques. The log records may also capture legitimate administrator activity, and will need to be verified.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update Application&lt;/strong&gt; - Records actions taken to update App Registrations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set Domain Auth&lt;/strong&gt; - Records when authentication settings for a domain are changed, including the creation of federation realm objects. These events should occur rarely in an environment and may indicate a threat actor configuring an AAD backdoor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set Federation Settings&lt;/strong&gt; - Records when the federation realm object for a domain is modified. These events should occur rarely in an environment and may indicate a threat actor preparing to execute a Golden SAML attack.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update Application Certificates and Secrets&lt;/strong&gt; - Records when a secret or certificate is added to an App Registration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PowerShell Mailbox Logins&lt;/strong&gt; - Records Mailbox Login operations where the client application was PowerShell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update Service Principal&lt;/strong&gt; - Records when updates are made to an existing Service Principal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add Service Principal Credentials&lt;/strong&gt; - Records when a secret or certificate is added to a Service Principal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add App Role Assignment&lt;/strong&gt; - Records when an App Role (Application Permission) is added.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;App Role Assignment for User&lt;/strong&gt; - Records when an App Role is assigned to a user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PowerShell Authentication&lt;/strong&gt; - Records when a user authenticates to Azure AD using a PowerShell client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New Management Role Assignments&lt;/strong&gt; - Records when new management role assignments are created. This can be useful to identify new ApplicationImpersonation grants.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Required Modules&lt;/h3&gt; &#xA;&lt;p&gt;The PowerShell module requires the installation of three Microsoft 365 PowerShell modules.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AzureAD&lt;/li&gt; &#xA; &lt;li&gt;MSOnline&lt;/li&gt; &#xA; &lt;li&gt;ExchangeOnlineManagement&lt;/li&gt; &#xA; &lt;li&gt;Microsoft.Graph&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install the modules:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a PowerShell window as a local administrator (right-click then select Run As Administrator)&lt;/li&gt; &#xA; &lt;li&gt;Run the command &lt;code&gt;Install-Module &amp;lt;MODULE NAME HERE&amp;gt;&lt;/code&gt; and follow the prompts&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Required User Permissions&lt;/h3&gt; &#xA;&lt;p&gt;The PowerShell module must be run with a Microsoft 365 account assigned specific privileges.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Global Administrator&lt;/code&gt; or &lt;code&gt;Global Reader&lt;/code&gt; role in the Azure AD portal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;View-Only Audit Logs&lt;/code&gt; in the Exchange Control Panel&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;User.Read.All&lt;/code&gt; and &lt;code&gt;Directory.Read.All&lt;/code&gt; scopes. &lt;code&gt;Global Reader&lt;/code&gt; role holders should have the ability to use these scopes automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To grant an account &lt;code&gt;View-Only Audit Logs&lt;/code&gt; in the Exchange Control Panel:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;a href=&#34;https://outlook.office365.com/ecp&#34;&gt;https://outlook.office365.com/ecp&lt;/a&gt; and login as a global admin or exchange admin (not the exact URL may differ if you are in an alternate cloud)&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;admin roles&lt;/code&gt; in the dashboard, or expand the &lt;code&gt;roles&lt;/code&gt; tab on the left and click &lt;code&gt;admin roles&lt;/code&gt; if you are in the new UI&lt;/li&gt; &#xA; &lt;li&gt;Create a new admin role by clicking the &lt;code&gt;+&lt;/code&gt; sign or clicking &lt;code&gt;add new role group&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Give your role a name and default write-scope&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;View-Only Audit Logs&lt;/code&gt; permission to the role&lt;/li&gt; &#xA; &lt;li&gt;Add the user to the role&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; it can take up to an hour for this role to apply&lt;/p&gt; &#xA;&lt;h3&gt;Running the tool&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download this tool as a ZIP and unzip it, or clone the repository to your system&lt;/li&gt; &#xA; &lt;li&gt;Open a PowerShell window&lt;/li&gt; &#xA; &lt;li&gt;Change directories to the location of this module &lt;code&gt;cd C:\path\to\the\module&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import this module &lt;code&gt;Import-Module .\MandiantAzureADInvestigator.psd1&lt;/code&gt; you should receive this output&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;      Mandiant Azure AD Investigator&#xA;    Focusing on UNC2452 Investigations&#xA;&#xA;PS C:\Users\admin\Desktop\mandiant&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Connect to Azure AD by running &lt;code&gt;Connect-MandiantAzureEnvironment -UserPrincipalName &amp;lt;your username here&amp;gt;&lt;/code&gt;. You should receive a login prompt and output to the PowerShell window indicating the connections have been established. &lt;strong&gt;Note&lt;/strong&gt;: If you run into issues you may need to change your execution policy by running &lt;code&gt;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned&lt;/code&gt;. This may require administrator privileges.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;----------------------------------------------------------------------------&#xA;The module allows access to all existing remote PowerShell (V1) cmdlets in addition to the 9 new, faster, and more reliable cmdlets.&#xA;&#xA;|--------------------------------------------------------------------------|&#xA;|    Old Cmdlets                    |    New/Reliable/Faster Cmdlets       |&#xA;|--------------------------------------------------------------------------|&#xA;|    Get-CASMailbox                 |    Get-EXOCASMailbox                 |&#xA;|    Get-Mailbox                    |    Get-EXOMailbox                    |&#xA;|    Get-MailboxFolderPermission    |    Get-EXOMailboxFolderPermission    |&#xA;|    Get-MailboxFolderStatistics    |    Get-EXOMailboxFolderStatistics    |&#xA;|    Get-MailboxPermission          |    Get-EXOMailboxPermission          |&#xA;|    Get-MailboxStatistics          |    Get-EXOMailboxStatistics          |&#xA;|    Get-MobileDeviceStatistics     |    Get-EXOMobileDeviceStatistics     |&#xA;|    Get-Recipient                  |    Get-EXORecipient                  |&#xA;|    Get-RecipientPermission        |    Get-EXORecipientPermission        |&#xA;|--------------------------------------------------------------------------|&#xA;&#xA;To get additional information, run: Get-Help Connect-ExchangeOnline or check https://aka.ms/exops-docs&#xA;&#xA;Send your product improvement suggestions and feedback to exocmdletpreview@service.microsoft.com. For issues related to the module, contact Microsoft support. Don&#39;t use the feedback alias for problems or support issues.&#xA;----------------------------------------------------------------------------&#xA;&#xA;Account                                              Environment TenantId                             TenantDomain&#xA;-------                                              ----------- --------                             ------------&#xA;doug@test.onmicrosoft.com AzureCloud  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx test.onm...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Run all checks &lt;code&gt;Invoke-MandiantAllChecks -OutputPath &amp;lt;path\to\output\files&amp;gt;&lt;/code&gt;. You can also run individual checks using the specific cmdlet.&lt;/li&gt; &#xA; &lt;li&gt;Review the output on the screen and the written CSV files.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;p&gt;For additional information from Mandiant regarding UNC2452, please see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mandiant.com/resources/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor&#34;&gt;Highly Evasive Attacker Leverages SolarWinds Supply chain to Compromise Multiple Global Victims with SUNBURST Backdoor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452&#34;&gt;Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The response to UNC2452 has been a significant effort across the security industry and these blogs heavily cite additional contributions that will be of value to users of this tool. We recommend reading the linked material from these posts to best understand activity in your environment. As always, the Mandiant team is available to answer follow-up questions or further assist on an investigation &lt;a href=&#34;https://www.mandiant.com/report-incident&#34;&gt;by contacting us here.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>