<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-15T01:38:49Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SPEED0U/Scefra</title>
    <updated>2024-01-15T01:38:49Z</updated>
    <id>tag:github.com,2024-01-15:/SPEED0U/Scefra</id>
    <link href="https://github.com/SPEED0U/Scefra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My StarCitizen french tanslation powered by the community!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scefra&lt;/h1&gt; &#xA;&lt;p&gt;Ceci est un repository où vous pouvez trouver la traduction Française pour Star Citizen. La base de la traduction (Anglais vers Français) a été générée par l&#39;API de Google Traduction et est corrigée par des contributeus.&lt;/p&gt; &#xA;&lt;p&gt;Lien de notre serveur Discord: &lt;a href=&#34;https://discord.gg/c3CSTa7SAF&#34;&gt;https://discord.gg/c3CSTa7SAF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table des matières :&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SPEED0U/Scefra/main/#installation-automatique-(avec-l&#39;app-SCFR)&#34;&gt;Installation automatique avec l&#39;app SCFR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SPEED0U/Scefra/main/#installation-automatique-(avec-Powershell)&#34;&gt;Installation automatique avec Powershell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SPEED0U/Scefra/main/#installation-manuelr&#34;&gt;Installation manuelle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installation automatique (avec l&#39;app SCFR)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Télécharger l&#39;installeur de l&#39;appli SCFR &lt;a href=&#34;https://github.com/Skullyfox/SCFR/releases&#34;&gt;ici&lt;/a&gt;, le fichier a télécharger est &lt;code&gt;SCFR.Setup.X.X.X.exe&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Executer &lt;code&gt;SCFR-Setup-1.0.1.exe&lt;/code&gt; pour l&#39;installer.&lt;/li&gt; &#xA;  &lt;li&gt;Une fois installé l&#39;appli va s&#39;ouvrir et vous pourrez la retrouver dans votre menu démarrer.&lt;/li&gt; &#xA;  &lt;li&gt;Suivez les instructions sur l&#39;appli (tutoriel vidéo &lt;a href=&#34;https://www.youtube.com/watch?v=BGkQTLGs9cw&#34;&gt;ici&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation automatique (avec PowerShell)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Télécharger le script Powershell &lt;a href=&#34;https://cdn.discordapp.com/attachments/954001140519944193/1164243159832870994/install_fr.ps1?ex=654280ef&amp;amp;is=65300bef&amp;amp;hm=d363981e3a164e0aa092f3db9adab6f9fd93d9a092bc8ca5a1f24dd37b0f1cb8&amp;amp;&#34;&gt;ici&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Placer le fichier &lt;code&gt;install_fr.ps1&lt;/code&gt; dans le dossier &lt;code&gt;C:\PATH\TO\GAME\Robert Space Industries\StarCitizen&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Exécuter le fichier &lt;code&gt;install_fr.ps1&lt;/code&gt; avec l&#39;application Windows &lt;code&gt;Powershell&lt;/code&gt; ou double-cliquez sur le fichier ou clique droit sur le fichier et sélectionnez &lt;code&gt;Exécuter avec Powershell&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Suivez les instructions sur l&#39;écran du Powershell.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; - &lt;strong&gt;Avec cette méthode, vous avez juste à ré-exécuter le fichier &lt;code&gt;install_fr.ps1&lt;/code&gt; afin de mettre à jour automatiquement le fichier de traduction.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation manuelle&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Télécharger les fichiers du répertoire avec le bouton vert &lt;code&gt;Code&lt;/code&gt; en haut à droite.&lt;/li&gt; &#xA;  &lt;li&gt;Extraire le language désiré dans le dossier &lt;code&gt;C:\PATH\TO\GAME\Robert Space Industries\StarCitizen\LIVE\data\Localization&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Créer un fichier &lt;code&gt;user.cfg&lt;/code&gt; (activé les extensions des fichiers dans les paramètres de Windows) dans le dossier &lt;code&gt;C:\PATH\TO\GAME\Robert Space Industries\StarCitizen\LIVE&lt;/code&gt; si vous en avez pas déjà un.&lt;/li&gt; &#xA;  &lt;li&gt;Dans le fichier &lt;code&gt;user.cfg&lt;/code&gt; ajouter une ligne &lt;code&gt;g_language=&lt;/code&gt; puis ajouter le language désiré après le &lt;code&gt;=&lt;/code&gt;, exemple : &lt;code&gt;g_language=french_(france)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Enregistrer le fichier puis vous pourrez démarrer le jeu.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; - &lt;strong&gt;Avec cette méthode il se peut que la traduction ne fonctionne pas, pour résoudre le soucis il faut réencoder le fichier &lt;code&gt;global.ini&lt;/code&gt; en &lt;code&gt;UTF8 with BOM&lt;/code&gt; avec un logiciel type Notepad++.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Problèmes connus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Les lettres avec des accents comme &lt;code&gt;é&lt;/code&gt;,&lt;code&gt;à&lt;/code&gt;,&lt;code&gt;ö&lt;/code&gt; etc. soit n&#39;apparaissent pas ou elles sont affichées en minuscule.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Un grand merci à &lt;a href=&#34;https://github.com/Skullyfox&#34;&gt;Onivoid&lt;/a&gt; pour son travail sur l&#39;appli &lt;a href=&#34;https://github.com/Skullyfox/SCFR&#34;&gt;SCFR&lt;/a&gt; !&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OfficeDev/office-dev-program-docs</title>
    <updated>2024-01-15T01:38:49Z</updated>
    <id>tag:github.com,2024-01-15:/OfficeDev/office-dev-program-docs</id>
    <link href="https://github.com/OfficeDev/office-dev-program-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For any additional questions or comments, contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Get a free sandbox, tools, and other resources you need to build solutions for the &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-365/dev-program&#34;&gt;Microsoft 365 devloper platform&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>splunk/ShellSweep</title>
    <updated>2024-01-15T01:38:49Z</updated>
    <id>tag:github.com,2024-01-15:/splunk/ShellSweep</id>
    <link href="https://github.com/splunk/ShellSweep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ShellSweeping the evil.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/splunk/ShellSweep/main/src/sweep.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;h1&gt;ShellSweep&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;ShellSweeping the evil&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why ShellSweep&lt;/h2&gt; &#xA;&lt;p&gt;&#34;ShellSweep&#34; is a PowerShell/Python/Lua tool designed to detect potential webshell files in a specified directory.&lt;/p&gt; &#xA;&lt;p&gt;ShellSheep and it&#39;s suite of tools calculate the entropy of file contents to estimate the likelihood of a file being a webshell. High entropy indicates more randomness, which is a characteristic of encrypted or obfuscated codes often found in webshells.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It only processes files with certain extensions (.asp, .aspx, .asph, .php, .jsp), which are commonly used in webshells.&lt;/li&gt; &#xA; &lt;li&gt;Certain directories can be excluded from scanning.&lt;/li&gt; &#xA; &lt;li&gt;Files with certain hashes can be ignored during the scan.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How does ShellSweep find the shells?&lt;/h3&gt; &#xA;&lt;p&gt;Entropy, in the context of information theory or data science, is a measure of the unpredictability, randomness, or disorder in a set of data. The concept was introduced by Claude Shannon in his 1948 paper &#34;&lt;a href=&#34;https://people.math.harvard.edu/~ctm/home/text/others/shannon/entropy/entropy.pdf&#34;&gt;A Mathematical Theory of Communication&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;When applied to a file or a string of text, entropy can help assess the randomness of the data. Here&#39;s how it works: If a file consists of completely random data (each byte is just as likely to be any value between 0 and 255), the entropy is high, close to 8 (since log2(256) = 8).&lt;/p&gt; &#xA;&lt;p&gt;If a file consists of highly structured data (for example, a text file where most bytes are ASCII characters), the entropy is lower. In the context of finding webshells or malicious files, entropy can be a useful indicator:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many obfuscated scripts or encrypted payloads can have high entropy because the obfuscation or encryption process makes the data look random.&lt;/li&gt; &#xA; &lt;li&gt;A normal text file or HTML file would generally have lower entropy because human-readable text has patterns and structure (certain letters are more common, words are usually separated by spaces, etc.). So, a file with unusually high entropy might be suspicious and worth further investigation. However, it&#39;s not a surefire indicator of maliciousness -- there are plenty of legitimate reasons a file might have high entropy, and plenty of ways malware might avoid causing high entropy. It&#39;s just one tool in a larger toolbox for detecting potential threats.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ShellSweep includes a Get-Entropy function that calculates the entropy of a file&#39;s contents by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Counting how often each character appears in the file.&lt;/li&gt; &#xA; &lt;li&gt;Using these frequencies to calculate the probability of each character.&lt;/li&gt; &#xA; &lt;li&gt;Summing -p*log2(p) for each character, where p is the character&#39;s probability. This is the formula for entropy in information theory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ShellScan&lt;/h2&gt; &#xA;&lt;p&gt;ShellScan provides the ability to scan multiple known bad webshell directories and output the average, median, minimum and maximum entropy values by file extension.&lt;/p&gt; &#xA;&lt;p&gt;Pass ShellScan.ps1 some directories of webshells, any size set. I used:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tennc/webshell&#34;&gt;https://github.com/tennc/webshell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlackArch/webshells&#34;&gt;https://github.com/BlackArch/webshells&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tarwich/jackal/raw/master/libraries/&#34;&gt;https://github.com/tarwich/jackal/blob/master/libraries/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This will give a decent training set to get entropy values.&lt;/p&gt; &#xA;&lt;p&gt;Output example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Statistics for .aspx files:&#xA;Average entropy: 4.94212121048115&#xA;Minimum entropy: 1.29348709979974&#xA;Maximum entropy: 6.09830238020383&#xA;Median entropy: 4.85437969842084&#xA;Statistics for .asp files:&#xA;Average entropy: 5.51268104400858&#xA;Minimum entropy: 0.732406213077191&#xA;Maximum entropy: 7.69241278153711&#xA;Median entropy: 5.57351177724806&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ShellCSV&lt;/h2&gt; &#xA;&lt;p&gt;First, let’s break down the usage of ShellCSV and how it assists with identifying entropy of the good files on disk. The idea is that defenders can run this on web servers to gather all files and entropy values to better understand what paths and extensions are most prominent in their working environment.&lt;/p&gt; &#xA;&lt;p&gt;See ShellCSV.csv as example output.&lt;/p&gt; &#xA;&lt;h2&gt;ShellSweep&lt;/h2&gt; &#xA;&lt;p&gt;First, choose your flavor: Python, PowerShell or Lua.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on results from ShellScan or ShellCSV, modify entropy values as needed.&lt;/li&gt; &#xA; &lt;li&gt;Modify file extensions as needed. No need to look for ASPX on a non-ASPX app.&lt;/li&gt; &#xA; &lt;li&gt;Modify paths. I don&#39;t recommend just scanning all the C:, lots to filter.&lt;/li&gt; &#xA; &lt;li&gt;Modify any filters needed.&lt;/li&gt; &#xA; &lt;li&gt;Run it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you made it here, this is the part where you iterate on tuning. Find new shell? Gather entropy and modify as needed.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open a Git issue.&lt;/p&gt; &#xA;&lt;h2&gt;Thank You&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoyed this project, be sure to star the project and share with your family and friends.&lt;/p&gt;</summary>
  </entry>
</feed>