<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-02T01:41:17Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>senzee1984/Amsi_Bypass_In_2023</title>
    <updated>2023-08-02T01:41:17Z</updated>
    <id>tag:github.com,2023-08-02:/senzee1984/Amsi_Bypass_In_2023</id>
    <link href="https://github.com/senzee1984/Amsi_Bypass_In_2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Amsi Bypass payload that works on Windwos 11&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amsi Bypass on Windows 11 In 2023&lt;/h1&gt; &#xA;&lt;p&gt;Technical details can be found in the article: &lt;a href=&#34;https://medium.com/@gustavshen/bypass-amsi-on-windows-11-75d231b2cac6&#34;&gt;https://medium.com/@gustavshen/bypass-amsi-on-windows-11-75d231b2cac6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Attack_AmsiOpenSession.ps1&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;HRESULT AmsiOpenSession(&#xA;[in] HAMSICONTEXT amsiContext,&#xA;[out] HAMSISESSION *amsiSession&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This powershell script can be used to bypass AMSI by patching AmsiOpenSession. According to the assemble codes, if &lt;strong&gt;any&lt;/strong&gt; of the following conditions are met, the function will exit with &lt;code&gt;E_INVALIDARG&lt;/code&gt; error.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;RCX is 0&lt;/li&gt; &#xA; &lt;li&gt;RDX is 0&lt;/li&gt; &#xA; &lt;li&gt;The 2nd QWORD of HAMSICONTEXT structure is 0&lt;/li&gt; &#xA; &lt;li&gt;The 3rd QWORD of HAMSICONTEXT structure is 0&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/senzee1984/Amsi_Bypass_In_2023/main/screenshot/amsiopensession.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This script patches AmsiOpenSession by setting RCX to 0.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/senzee1984/Amsi_Bypass_In_2023/main/screenshot/opensession_bypass.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Patching AmsiOpenSession cannot bypass AMSI for Assembly.Load()&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Attack_AmsiScanBuffer.ps1&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;HRESULT AmsiScanBuffer(&#xA;[in] HAMSICONTEXT amsiContext,&#xA;[in] PVOID buffer,&#xA;[in] ULONG length,&#xA;[in] LPCWSTR contentName,&#xA;[in, optional] HAMSISESSION amsiSession,&#xA;[out] AMSI_RESULT *result&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This powershell script can be used to bypass AMSI by patching AmsiScanBuffer. The script patches AmsiScanBuffer by setting RAX to the value of error &lt;code&gt;E_INVALIDARG&lt;/code&gt; and return immediately.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/senzee1984/Amsi_Bypass_In_2023/main/screenshot/scanbuffer_bypass.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Patching AmsiScanBuffer can bypass AMSI for Assembly.Load()&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/senzee1984/Amsi_Bypass_In_2023/main/screenshot/scanbuffer_dnet.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;one-liner-payload.md&lt;/h2&gt; &#xA;&lt;p&gt;This file contains one-liner payloads that can be used in the current powershell session and immediately bypass AMSI. However, it cannot bypass AMSI for &lt;code&gt;Assembly.Load()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Details can be found in this file.&lt;/p&gt;</summary>
  </entry>
</feed>