<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-06T01:46:15Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Falcosc/enable-loudness-equalisation</title>
    <updated>2023-06-06T01:46:15Z</updated>
    <id>tag:github.com,2023-06-06:/Falcosc/enable-loudness-equalisation</id>
    <link href="https://github.com/Falcosc/enable-loudness-equalisation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;automatically adds and enables loudness equalisation to any playback device&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Enable Loudness Equalisation&lt;/h1&gt; &#xA;&lt;p&gt;Automatically adds and enables loudness equalisation to any playback device.&lt;/p&gt; &#xA;&lt;p&gt;Only works if your selected driver supports enhancements for speakers, but didn&#39;t expose this support for any other output devices. This script will expose any existing support, but can not work if the driver doesn&#39;t ship any.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;before execution&lt;/th&gt; &#xA;   &lt;th&gt;after execution&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/EnhancementsMissing.png&#34; alt=&#34;Enhancements Missing&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/EnhancementsAdded.png&#34; alt=&#34;Enhancements Added&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you are looking for bass boost, you can use the more complex version of this script &lt;a href=&#34;https://github.com/Falcosc/enable-bass-boost&#34;&gt;https://github.com/Falcosc/enable-bass-boost&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to Download and Run&lt;/h1&gt; &#xA;&lt;p&gt;run in powershell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-WebRequest https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/EnableLoudness.ps1 -OutFile $env:HOMEPATH\EnableLoudness.ps1&#xA;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser&#xA;. $env:HOMEPATH\EnableLoudness.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;When is it needed?&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HDMI, Display Port, Digital Optical Output playback devices usually doesn&#39;t have it&lt;/li&gt; &#xA; &lt;li&gt;if you can not find an audio driver version which adds loudness equalisation to any of your playback devices&lt;/li&gt; &#xA; &lt;li&gt;you can&#39;t enable it globally in your driver&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Why does it need to be scripted?&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if you want to toggle it via hotkey&lt;/li&gt; &#xA; &lt;li&gt;updates are messing with your audio drivers&lt;/li&gt; &#xA; &lt;li&gt;some use cases lead into re-registration of HDMI or DisplayPort playback devices, which will purge your settings every time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What does it do?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;search for all active playback devices by name in registry&lt;/li&gt; &#xA; &lt;li&gt;imports audio enhancement settings and sets loudness equalisation flag&lt;/li&gt; &#xA; &lt;li&gt;restarts audio service to apply changed registry values&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Known Issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;all setting flags stored in &lt;code&gt;fc52a749-4be9-4510-896e-966ba6525980&lt;/code&gt; get overwritten, instead of just enabling loudness equalisation&lt;/li&gt; &#xA; &lt;li&gt;flags key are different across Windows versions &lt;code&gt;fc52a749-4be9-4510-896e-966ba6525980&lt;/code&gt; used in this script works for Windows 11, maybe 10 as well.&lt;/li&gt; &#xA; &lt;li&gt;If the playback device gets re-detected the audio service reboot maybe sets volume to default 100%&lt;/li&gt; &#xA; &lt;li&gt;Sound Settings UI shows 0% volume if it was open during restart (reopening fixes it)&lt;/li&gt; &#xA; &lt;li&gt;Restarting audio service after sleep does break the taskbar tray icon volume slider in some situations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;mediakeys and sound settings UI volume controll still works fine&lt;/li&gt; &#xA;   &lt;li&gt;tray icon slider gets fixed with full reboot&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;does not work if your driver doesn&#39;t have any enhancements, try a different one&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install as Task&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Task Scheduler&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Action -&amp;gt; Create Task...&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;General -&amp;gt; Run with highest privileges&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/TaskAdmin.png&#34; alt=&#34;Run with highest privileges&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Triggers -&amp;gt; New...&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/TaskTrigger.png&#34; alt=&#34;Additional Triggers&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Actions -&amp;gt; New...&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Action: Start a program&lt;/li&gt; &#xA;   &lt;li&gt;Program: powershell&lt;/li&gt; &#xA;   &lt;li&gt;Add arguments: &lt;code&gt;-WindowStyle hidden -f %HOMEPATH%\EnableLoudness.ps1 -playbackDeviceName BE279&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To test it you could use an invalid DeviceName like &#34;-playbackDeviceName XXX&#34; then you will see an error message pop-up after login&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Falcosc/enable-loudness-equalisation/main/ErrorTest.png&#34; alt=&#34;Test Error&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>csandker/Azure-AccessPermissions</title>
    <updated>2023-06-06T01:46:15Z</updated>
    <id>tag:github.com,2023-06-06:/csandker/Azure-AccessPermissions</id>
    <link href="https://github.com/csandker/Azure-AccessPermissions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure-AccessPermissions&lt;/h1&gt; &#xA;&lt;p&gt;Easy to use PowerShell script to enumerate access permissions in an Azure Active Directory environment.&lt;/p&gt; &#xA;&lt;p&gt;Background details can be found in the accompanied blog posts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://csandker.io/2022/10/19/Untangling-Azure-Permissions.html&#34;&gt;Untangling Azure Active Directory Principals &amp;amp; Access Permissions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://csandker.io/2022/11/10/Untangling-Azure-II-Privileged-Access.html&#34;&gt;Untangling Azure Active Directory Permissions II: Privileged Access&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To run this script you&#39;ll need these two PowerShell modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoftgraph/msgraph-sdk-powershell&#34;&gt;Microsoft.Graph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gerenios/AADInternals&#34;&gt;AADInternals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/azure/active-directory/install-adv2?view=azureadps-2.0&#34;&gt;AzureADPreview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of these can be installed directly within PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;PS:&amp;gt; Install-Module Microsoft.Graph&#xA;PS:&amp;gt; Install-Module AADInternals&#xA;PS:&amp;gt; Install-Module AzureADPreview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;First time use&lt;/h3&gt; &#xA;&lt;p&gt;The script uses a browser-based Login UI to connect to Azure. If you run the tool for the first time you might experience the following error&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-s&#34;&gt;[*] Connecting to Microsoft Graph...&#xA;WARNING: WebBrowser control emulation not set for PowerShell or PowerShell ISE!&#xA;Would you like set the emulation to IE 11? Otherwise the login form may not work! (Y/N): Y&#xA;Emulation set. Restart PowerShell/ISE!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/csandker/Azure-AccessPermissions/master/img/first-run-error.png&#34; alt=&#34;Error on first run&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To solve this simply allow PowerShell to emulate the browser and rerun your command.&lt;/p&gt; &#xA;&lt;h3&gt;Example use&lt;/h3&gt; &#xA;&lt;p&gt;Import and run, no argumentes needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: On your first run you will likely have to authenticate twice (once Microsoft Graph and once against Azure AD Graph). I might wrap this into a single login in the future...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;PS:&amp;gt; Import-Module .\Azure-AccessPermissions.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/csandker/Azure-AccessPermissions/master/img/sample_output1.png&#34; alt=&#34;SampleOutput&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/csandker/Azure-AccessPermissions/master/img/sample_output2.png&#34; alt=&#34;SampleOutput&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>