<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:53:59Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Sycnex/Windows10Debloater</title>
    <updated>2022-06-05T01:53:59Z</updated>
    <id>tag:github.com,2022-06-05:/Sycnex/Windows10Debloater</id>
    <link href="https://github.com/Sycnex/Windows10Debloater" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script to remove Windows 10 bloatware.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows10Debloater&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microsoft.com/PowerShell&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PowerShell-1f425f?logo=Powershell&#34; alt=&#34;made-with-powershell&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Script/Utility/Application to debloat Windows 10, to remove Windows pre-installed unnecessary applications, stop some telemetry functions, stop Cortana from being used as your Search Index, disable unnecessary scheduled tasks, and more...&lt;/p&gt; &#xA;&lt;h2&gt;Donate a cup of coffee&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/HZNh7w1Bm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Be sure to look at the Contributors&#39; GitHubs to see if they have GitHub sponsorships as well since they have contributed to this open-source project. (&lt;a href=&#34;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&#34;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; I do &lt;strong&gt;NOT&lt;/strong&gt; take responsibility for what may happen to your system! Run scripts at your own risk! Also, other variants of this repo are not technically &#34;new&#34; versions of this, but they are different in their own respective ways. There are some sites saying that other projects are &#34;new&#34; versions of this, but that is inaccurate.&lt;/p&gt; &#xA;&lt;h2&gt;How To Run the Windows10Debloater.ps1 and the Windows10DebloaterGUI.ps1 files&lt;/h2&gt; &#xA;&lt;p&gt;There are different methods of running the PowerShell script. The methods are as follows:&lt;/p&gt; &#xA;&lt;h3&gt;First Method&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; &#xA; &lt;li&gt;Once extracted, open &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&#34;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&#34;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;Enable PowerShell execution &lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Next, to run either script, enter in the following: &amp;nbsp; e.g. - &lt;code&gt;.\Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Second Method&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; &#xA; &lt;li&gt;Right-click the PowerShell file that you&#39;d like to run and click on &#34;Run With PowerShell&#34;&lt;/li&gt; &#xA; &lt;li&gt;This will allow the script to run without having to do the above steps but Powershell will ask if you&#39;re sure you want to run this script.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Remember this script &lt;strong&gt;NEEDS&lt;/strong&gt; to be run as admin in order to function properly.&lt;/p&gt; &#xA;&lt;h2&gt;How To Run the Windows10SysPrepDebloater.ps1 file&lt;/h2&gt; &#xA;&lt;p&gt;For the WindowsSysPrepDebloater.ps1 file, there are a couple of parameters that you can run so that you can specify which functions are used. The parameters are: &lt;code&gt;-SysPrep&lt;/code&gt;, &lt;code&gt;-Debloat&lt;/code&gt; and &lt;code&gt;-Privacy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run this with parameters, do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; &#xA; &lt;li&gt;Once extracted, open &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&#34;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&#34;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Next, to run either script, enter in the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;e.g. - &lt;code&gt;.\Windows10SysPrepDebloater.ps1 -Sysprep -Debloat -Privacy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sysprep, Interactive, and GUI Application&lt;/h2&gt; &#xA;&lt;p&gt;There are now 3 versions of &lt;strong&gt;Windows10Debloater&lt;/strong&gt; - There is an interactive version, a GUI app version, and a pure silent version.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; The silent version now utilizes the switch parameters: -Sysprep, -Debloat -Privacy. The silent version can be useful for deploying MDT Images/sysprepping or any other way you deploy Windows 10. This will work to remove the bloatware during the deployment process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10Debloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; This interactive version is what it implies - a Windows10Debloater script with interactive prompts. This one should not be used for deployments that require a silent script with optional parameters. This script gives you choices with prompts as it runs so that you can make the choices of what the script does.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; There is now a GUI Application named Windows10DebloaterGUI.ps1 with buttons to perform all of the functions that the scripts do. This is better for the average user who does not want to work with code, or if you&#39;d prefer to just see an application screen.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Switch Parameters&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 switch parameters in the &lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-SysPrep&lt;/code&gt;&lt;/strong&gt;, which runs the command within a function: get-appxpackage | remove-appxpackage. This is useful since some administrators need that command to run first in order for machines to be able to properly provision the apps for removal.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Debloat&lt;/code&gt;&lt;/strong&gt;, switch parameter which does as it suggests. It runs the following functions: Start-Debloat, Remove-Keys, and Protect-Privacy. Remove-Keys removes registry keys leftover that are associated with the bloatware apps listed above, but not removed during the Start-Debloat function.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Privacy&lt;/code&gt;&lt;/strong&gt;, adds and/or changes registry keys to stop some telemetry functions, stops Cortana from being used as your Search Index, disables &#34;unnecessary&#34; scheduled tasks, and more.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;This script will remove the bloatware from Windows 10 when using Remove-AppXPackage/Remove-AppXProvisionedPackage, and then delete specific registry keys that are were not removed beforehand. For best results, this script should be run before a user profile is configured, otherwise, you will likely see that apps that should have been removed will remain, and if they are removed you will find broken tiles on the start menu.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;These registry keys are&lt;/h2&gt; &#xA;&lt;p&gt;EclipseManager, ActiproSoftwareLLC, Microsoft.PPIProjection, Microsoft.XboxGameCallableUI&lt;/p&gt; &#xA;&lt;p&gt;You can choose to either &#39;Debloat&#39; or &#39;Revert&#39;. Depending on your choice, either one will run specific code to either debloat your Windows 10 machine.&lt;/p&gt; &#xA;&lt;h2&gt;The Debloat switch choice runs the following functions&lt;/h2&gt; &#xA;&lt;p&gt;Debloat, Remove-Keys, Protect-Privacy, Stop-EdgePDF (If chosen)&lt;/p&gt; &#xA;&lt;h2&gt;The Revert switch choice runs the following functions&lt;/h2&gt; &#xA;&lt;p&gt;Revert-Changes, Enable-EdgePDF&lt;/p&gt; &#xA;&lt;p&gt;The Revert option reinstalls the bloatware and changes your registry keys back to default.&lt;/p&gt; &#xA;&lt;h2&gt;The scheduled tasks that are disabled are&lt;/h2&gt; &#xA;&lt;p&gt;XblGameSaveTaskLogon, XblGameSaveTask, Consolidator, UsbCeip, DmClient&lt;/p&gt; &#xA;&lt;p&gt;These scheduled tasks that are disabled have absolutely no impact on the function of the OS.&lt;/p&gt; &#xA;&lt;h2&gt;Bloatware that is removed&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/p/3d-builder/9wzdncrfj3t6&#34;&gt;3DBuilder&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/actipro-universal-windows-controls/9wzdncrdlvzp&#34;&gt;ActiproSoftware&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/windows-alarms-clock/9wzdncrfj3pr?activetab=pivot:overviewtab&#34;&gt;Alarms&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/connector/9wzdncrdjmlj?activetab=pivot:overviewtab&#34;&gt;Appconnector&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/asphalt-8-racing-game-drive-drift-at-real-speed/9wzdncrfj26j?activetab=pivot:overviewtab&#34;&gt;Asphalt8&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/autodesk-sketchbook/9nblggh4vzw5&#34;&gt;Autodesk SketchBook&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/msn-money/9wzdncrfhv4v?activetab=pivot:overviewtab&#34;&gt;MSN Money&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/food-and-drink/9nblggh0jhqg&#34;&gt;Food And Drink&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/health-fitness-free/9wzdncrcwcdp&#34;&gt;Health And Fitness&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/microsoft-news/9wzdncrfhvfw#activetab=pivot:overviewtab&#34;&gt;Microsoft News&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/msn-sports/9wzdncrfhvh4?activetab=pivot:overviewtab&#34;&gt;MSN Sports&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/msn-travel/9wzdncrfj3ft?activetab=pivot:overviewtab&#34;&gt;MSN Travel&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/p/msn-weather/9wzdncrfj3q2?activetab=pivot:overviewtab&#34;&gt;MSN Weather&lt;/a&gt;, BioEnrollment, &lt;a href=&#34;https://www.microsoft.com/en-us/p/windows-camera/9wzdncrfjbbg#activetab=pivot:overviewtab&#34;&gt;Windows Camera&lt;/a&gt;, CandyCrush, CandyCrushSoda, Caesars Slots Free Casino, ContactSupport, CyberLink MediaSuite Essentials, DrawboardPDF, Duolingo, EclipseManager, Facebook, FarmVille 2 Country Escape, Flipboard, Fresh Paint, Get started, iHeartRadio, King apps, Maps, March of Empires, Messaging, Microsoft Office Hub, Microsoft Solitaire Collection, Microsoft Sticky Notes, Minecraft, Netflix, Network Speed Test, NYT Crossword, Office Sway, OneNote, OneConnect, Pandora, People, Phone, Phototastic Collage, PicsArt-PhotoStudio, PowerBI, Royal Revolt 2, Shazam, Skype for Desktop, SoundRecorder, TuneInRadio, Twitter, Windows communications apps, Windows Feedback, Windows Feedback Hub, Windows Reading List, XboxApp, Xbox Game CallableUI, Xbox Identity Provider, Zune Music, Zune Video.&lt;/p&gt; &#xA;&lt;h2&gt;Quick download link&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;iwr -useb https://git.io/debloat|iex&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Allowlist and Blocklist&lt;/h2&gt; &#xA;&lt;p&gt;There may be some confusion, but when using the Allowlist/Blocklist, the checkmark means it is on the blocklist, and that it will be removed.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to &lt;a href=&#34;https://github.com/a60wattfish&#34;&gt;a60wattfish&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Sycnex/Windows10Debloater/master/abulgatz&#34;&gt;abulgatz&lt;/a&gt;, &lt;a href=&#34;https://github.com/xsisbest&#34;&gt;xsisbest&lt;/a&gt;, &lt;a href=&#34;https://github.com/Damian&#34;&gt;Damian&lt;/a&gt;, &lt;a href=&#34;https://github.com/Vikingat-RAGE&#34;&gt;Vikingat-RAGE&lt;/a&gt;, Reddit user &lt;a href=&#34;https://github.com/GavinEke&#34;&gt;/u/GavinEke&lt;/a&gt;, and all of the contributors (&lt;a href=&#34;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&#34;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;) for the suggestions, code, changes, and fixes that you have all graciously worked hard on and shared! You all have done a fantastic job!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bhaipatel/sharkrdp</title>
    <updated>2022-06-05T01:53:59Z</updated>
    <id>tag:github.com,2022-06-05:/bhaipatel/sharkrdp</id>
    <link href="https://github.com/bhaipatel/sharkrdp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WINRDP&lt;/h1&gt; &#xA;&lt;p&gt;How to use&lt;/p&gt; &#xA;&lt;p&gt;Just Fork this Repository, Go to Actions tab, Select the Windows-CRD workflow. Then select Run Workflow fill the following data in CRD Code and your Pin in the fields. After that, Press Start.&lt;/p&gt; &#xA;&lt;p&gt;Input the following code in the fields.&lt;/p&gt; &#xA;&lt;p&gt;Get the Windows (Powershell) command from here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://remotedesktop.google.com/headless&#34;&gt;https://remotedesktop.google.com/headless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter you Six digit Pin code to Login&lt;/p&gt; &#xA;&lt;p&gt;(Any Six digit Pin)&lt;/p&gt; &#xA;&lt;p&gt;Thats it... After 2-3 min of Initialize, Check your CRD Application or Account.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ahmedkhlief/Ninja</title>
    <updated>2022-06-05T01:53:59Z</updated>
    <id>tag:github.com,2022-06-05:/ahmedkhlief/Ninja</id>
    <link href="https://github.com/ahmedkhlief/Ninja" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source C2 server created for stealth red team operations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quick Update to include Follina Exploitation ( 01/06/2022 ) - NinjaC2 will generate the document and serve the HTML payload .&lt;/h1&gt; &#xA;&lt;p&gt;More information : &lt;a href=&#34;https://www.linkedin.com/posts/ahmed-khlief-499321a7_i-just-pushed-a-quick-update-to-ninjac2-to-activity-6937661951007170560-Tmps&#34;&gt;https://www.linkedin.com/posts/ahmed-khlief-499321a7_i-just-pushed-a-quick-update-to-ninjac2-to-activity-6937661951007170560-Tmps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ninja V2.2 Released ( 27/03/2022 ) .&lt;/h1&gt; &#xA;&lt;p&gt;New feature including : check URL for more info on features and how to use AWS EC2 automation :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;new user interface for CnC script&lt;/li&gt; &#xA; &lt;li&gt;Now each campaign will include all the files related to the campaign and the configuration file.&lt;/li&gt; &#xA; &lt;li&gt;new script automate AWS instance creation with NinjaC2 configuration.&lt;/li&gt; &#xA; &lt;li&gt;Updated Invoke-Mimikatz powershell script to latest Mimikatz release.&lt;/li&gt; &#xA; &lt;li&gt;Bug Fixes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Ninja V2.1 Released ( 31/07/2021 ) .&lt;/h1&gt; &#xA;&lt;p&gt;check the new features here : &lt;a href=&#34;https://shells.systems/ninjac2-v2-1-new-webshell-agent-more-features-and-updated-av-bypass/&#34;&gt;https://shells.systems/ninjac2-v2-1-new-webshell-agent-more-features-and-updated-av-bypass/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ninja V2.0 Released ( 16/04/2021 ) .&lt;/h1&gt; &#xA;&lt;p&gt;Ninja V2.0 rebuilt to use python3 with new features :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Payload variable obfuscation each time the payload requested to bypass AV&lt;/li&gt; &#xA; &lt;li&gt;generate shellcodes using nasm and donut&lt;/li&gt; &#xA; &lt;li&gt;new (migrate) command to do process migration .&lt;/li&gt; &#xA; &lt;li&gt;new persistence command using scheduled tasks&lt;/li&gt; &#xA; &lt;li&gt;new pre-compiled mimkatz powershell version&lt;/li&gt; &#xA; &lt;li&gt;new payloads .&lt;/li&gt; &#xA; &lt;li&gt;updated AMSI bypass script .&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What is Ninja ?&lt;/h1&gt; &#xA;&lt;p&gt;Ninja C2 is an Open source C2 server created by Purple Team to do stealthy computer and Active directoty enumeration without being detected by SIEM and AVs , Ninja still in beta version and when the stable version released it will contains many more stealthy techinques and anti-forensic to create a real challenge for blue team to make sure all the defenses configured correctly and they can detect sophisticated attacks.&lt;/p&gt; &#xA;&lt;p&gt;Ninja use python to server the payload and control the agents . the agents are based on C# and powershell which can bypass leading AVs . Ninja comunicate with the agents in secure channel encrpyted with AES-256 and the key is not hard coded but randomly generated on the campaign start , every agent connect to the C2 get the key and if the C2 restarted a new key will be used by all old agents and the new. Ninja also randomize the callback URLs for every campaign to bypass static detection.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The main feature in Ninja is called DA ( Defense Analysis ), which will do the required enumeration to get below important information and do analysis on them to get score for system defenses and sandbox detection .&lt;/li&gt; &#xA; &lt;li&gt;Detect SIEM solutions : right now it detect SPlUNK , Log beat collector , sysmon.&lt;/li&gt; &#xA; &lt;li&gt;detect AV using two ways , using powershell command and using processes.&lt;/li&gt; &#xA; &lt;li&gt;check if the powershell logging enabled&lt;/li&gt; &#xA; &lt;li&gt;check if the user have admin privileges&lt;/li&gt; &#xA; &lt;li&gt;provide information about system : host name , OS , build number , local time , time zone , last boot and bios .&lt;/li&gt; &#xA; &lt;li&gt;provide information about the installed security updates.&lt;/li&gt; &#xA; &lt;li&gt;provide a System pwn hardness score based on multiple factors.&lt;/li&gt; &#xA; &lt;li&gt;provide a sandbox detection score based on ( privileges , bios manufacturer , joined to domain or not , existence of sysinternals processes ).&lt;/li&gt; &#xA; &lt;li&gt;show all domain users ( using powershell commands ).&lt;/li&gt; &#xA; &lt;li&gt;show all domain groups ( using powershell commands ) .&lt;/li&gt; &#xA; &lt;li&gt;show all domain computers ( using powerview.ps1 - taken from : &lt;a href=&#34;https://github.com/PowerShellEmpire/PowerTools/raw/master/PowerView/powerview.ps1&#34;&gt;https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1&lt;/a&gt; ).&lt;/li&gt; &#xA; &lt;li&gt;show available shares.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Ninja is designed to be easy to setup and to add more commands and do automation for boring tasks. you can find many short commands that a red teamer struggle to memorize and search for them. please check this article to know more about ninja : &lt;a href=&#34;https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/&#34;&gt;https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ninja key features&lt;/h1&gt; &#xA;&lt;p&gt;Ninja is packed with a number of features that allows you to gain an insight into your upcoming engagement before you actually need to deploy your full aresenal or tools and techniques, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Defense Analysis&lt;/li&gt; &#xA; &lt;li&gt;automation for kerberoast attack from generating the kerberos tickets to extracting the SPN hashes into hashcat format.&lt;/li&gt; &#xA; &lt;li&gt;automation for dc_sync to get hashes for a list of users or domain admin group.&lt;/li&gt; &#xA; &lt;li&gt;Undetected Automation to get groups the user belong to and the users member in a group.&lt;/li&gt; &#xA; &lt;li&gt;Automation for bloodhound AD data collection .&lt;/li&gt; &#xA; &lt;li&gt;customized c# payloads that encrypt strings to bypass static detection.&lt;/li&gt; &#xA; &lt;li&gt;encode any command you want to unicode base64 to be used in powershell encoded commands.&lt;/li&gt; &#xA; &lt;li&gt;full encryption of all communications between Agent and command and control to bypass AV and IPS detection.&lt;/li&gt; &#xA; &lt;li&gt;dynamic URLs for all function , just place your list of url names and the c2 will use it randomly to bypass any static detection.&lt;/li&gt; &#xA; &lt;li&gt;get random encryption key on the fly ( not hard coded ) every time the agent connect ( even reconnection needs a new key )&lt;/li&gt; &#xA; &lt;li&gt;take screenshots and send it encrypted to C2&lt;/li&gt; &#xA; &lt;li&gt;upload files from C2 to victim encrypted to bypass AV and IPS&lt;/li&gt; &#xA; &lt;li&gt;download files from the victim encrypted to bypass AV and IPS&lt;/li&gt; &#xA; &lt;li&gt;staged payloads to bypass detection ( base64 and base52 )&lt;/li&gt; &#xA; &lt;li&gt;bypasses AVs ( tested on kaspersky and trendmicro )&lt;/li&gt; &#xA; &lt;li&gt;Bypasses SIEM detection ( tested on splunk collecting usual event logs along with sysmon logs ) not tested on powershell v5 script block and module logging ( will be done in the next release ).&lt;/li&gt; &#xA; &lt;li&gt;set the beacon interval dynamically even after the agent connected and provide a starting beacon interval in the campaign start configurations&lt;/li&gt; &#xA; &lt;li&gt;logging for all commands and results in order to return to any data you missed in your operation.&lt;/li&gt; &#xA; &lt;li&gt;set the configuration one time when you start the campaign and enjoy.&lt;/li&gt; &#xA; &lt;li&gt;global kill switch to end campaigns.&lt;/li&gt; &#xA; &lt;li&gt;delete table entries.&lt;/li&gt; &#xA; &lt;li&gt;all the payload written to payloads folder for easy access and further customization.&lt;/li&gt; &#xA; &lt;li&gt;easy to add automation for any command you want.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirement&lt;/h1&gt; &#xA;&lt;p&gt;please note that compling C# depends on the &lt;code&gt;System.Management.Automation.dll&lt;/code&gt; assembly with SHA1 hash c669667bb4d7870bc8bb65365d30071eb7fb86fe.&lt;/p&gt; &#xA;&lt;p&gt;Some Ninja Commands require below modules ( already exist in modules ) which you need to get updates from their repo :&lt;/p&gt; &#xA;&lt;p&gt;Invoke-Kerberoast : &lt;a href=&#34;https://raw.githubusercontent.com/xan7r/kerberoast/master/autokerberoast.ps1&#34;&gt;https://raw.githubusercontent.com/xan7r/kerberoast/master/autokerberoast.ps1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Invoke-Mimikatz : &lt;a href=&#34;https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1&#34;&gt;https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-Mimikatz.ps1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sharphound : &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound/raw/master/Ingestors/SharpHound.ps1&#34;&gt;https://github.com/BloodHoundAD/BloodHound/blob/master/Ingestors/SharpHound.ps1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PowerView : &lt;a href=&#34;https://github.com/PowerShellEmpire/PowerTools/raw/master/PowerView/powerview.ps1&#34;&gt;https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;First of all make sure to download the latest version of Ninja using the following command :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone https://github.com/ahmedkhlief/Ninja/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You need to setup Ninja by running install.sh script :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;chmod +x ./install.sh&lt;/code&gt; &lt;code&gt;sudo ./install.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;After that you need to initialize the campagin :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 start_campaign.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now you can start the Ninja server :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 Ninja.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will by greeted with the following once you run it :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&#xA;&#xA;            88             88             &#xA;            &#34;&#34;             &#34;&#34;                           &#xA;                                              88888      8888&#xA;8b,dPPYba,  88 8b,dPPYba,  88 ,adPPYYba,    88        88    88&#xA;88P&#39;   `&#34;8a 88 88P&#39;   `&#34;8a 88 &#34;&#34;     `Y8    88              88&#xA;88       88 88 88       88 88 ,adPPPPP88    88              88&#xA;88       88 88 88       88 88 88,    ,88    88            88&#xA;88       88 88 88       88 88 `&#34;8bbdP&#34;Y8    88          88  &#xA;                          ,88                 88888      888888&#xA;                        888P&#34; &#x9;&#x9;      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    V2.0&#xA;&#xA;&#xA; Ninja C2 | Stealthy Pwn like a Ninja&#xA;&#xA;+------------------------------------------------------------+&#xA; Command        Description                                                                        &#xA; -------        -----------                                                                        &#xA; exit           Exit the console , or kill the agent                                               &#xA; list           List all agents                                                                    &#xA; help           Help menu                                                                          &#xA; show           Show Command and Controler variables                                               &#xA; use            Interact with AGENT                                                                &#xA; back           Back to the main                                                                   &#xA; payload        Show Payloads                                                                      &#xA; load           load modules                                                                       &#xA; kill_all       kill all agents                                                                    &#xA; delete         delete agent from the list                                                         &#xA; delete_all     delete all agents in the list                                                      &#xA; set-beacon     set the beacon interval live for agent                                             &#xA; download       download file from the vicitm                                                      &#xA; downloads      list downloaded files                                                              &#xA; upload         upload files to the victim                                                         &#xA; modules        list all the Available modules in Modules directory                                &#xA; encode64       encode any command to base64 encoded UTF-8 command ( can be decoded in powershell)&#xA; screenshot     take screenshot form  the victim                                                   &#xA; DA             Run defense Analysis Module                                                        &#xA; kerb           do kerberoast attack  and dump  service accounts hashes                            &#xA; dcsync_admins  do dcsync attack agains domain admins group                                        &#xA; dcsync_list    do dcsync attack agains custom user list                                           &#xA; get_groups     get all the groups user is member of                                               &#xA; get_users      get all the users member in group                                                  &#xA; bloodhound     run bloodhound to collect all the information about the AD                 &#xA;+------------------------------------------------------------+&#xA;&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Please check this article about Ninja and how to use it : &lt;a href=&#34;https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/&#34;&gt;https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enhance DA module and add more SIEM , AV and sandbox detection along with more important eenumeration data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; more focus on stealth to load agent parts only when needed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add more shortend commands for popular modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add more customizations and ideas for phishing using C# payloads and macros&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; integration with curveball exploit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; integration with new exchange RCE&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Undetectable Persistence&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; create a wipe command to securly remove files on hard disk without being detected and analyzed by blue team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; make the agent blocks changes randomly to bypass any static detection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add obfuscation for the agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; integrate cobalt strike payloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;Main Screen &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/main.png&#34; alt=&#34;Ninja main screen&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Payloads &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/payload.png&#34; alt=&#34;Ninja Payloads&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Agent List &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/list.png&#34; alt=&#34;Ninja Agent list&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;DA &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/da.png&#34; alt=&#34;Ninja DA&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;DA &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/groups.png&#34; alt=&#34;Ninja DA-groups&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;DA &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/pc.png&#34; alt=&#34;Ninja DA-computers&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;DA&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/shares.png&#34; alt=&#34;Ninja DA-Shares&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Upload file&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/upload.png&#34; alt=&#34;Ninja Upload&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Download File &lt;img src=&#34;https://raw.githubusercontent.com/ahmedkhlief/Ninja/master/screenshots/download.png&#34; alt=&#34;Ninja Download&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the GPL-3.0 License - see the LICENSE file for details&lt;/p&gt;</summary>
  </entry>
</feed>