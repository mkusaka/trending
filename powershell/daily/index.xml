<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:35:38Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>YosfanEilay/AuthLogParser</title>
    <updated>2023-12-26T01:35:38Z</updated>
    <id>tag:github.com,2023-12-26:/YosfanEilay/AuthLogParser</id>
    <link href="https://github.com/YosfanEilay/AuthLogParser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AuthLogParser is a powerful DFIR tool designed specifically for analyzing Linux authentication logs, commonly known as auth.log&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AuthLogParser v1.0&lt;/h1&gt; &#xA;&lt;h4&gt;Stop wasting time, let AuthLogParser do the work!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/YosfanEilay/AuthLogParser/assets/132997318/2121356e-d6e3-4ee8-9ebc-b54b895c0020&#34; alt=&#34;Untitled design&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is AuthLogParser ?&lt;/h2&gt; &#xA;&lt;p&gt;AuthLogParser is a powerful Digital Forensics and Incident Response tool designed specifically for analyzing Linux authentication logs, commonly known as auth.log. This tool serves as an invaluable asset for Incident Responders, streamlining the process of investigating security incidents on Linux systems. AuthLogParser meticulously scans the auth.log log file, extracting key information such as SSH logins, user creations, event names, IP addresses, and more. The generated summary provides a clear and concise overview of the activities recorded in the authentication logs, presenting the data in an easily readable format. By enhancing efficiency and accessibility, AuthLogParser significantly contributes to the effectiveness of incident response efforts, enabling practitioners to quickly and comprehensively assess security events on Linux platforms. While it proves indispensable for Incident Responders, its utility extends beyond DFIR teams, making it a valuable asset for the entire InfoSec and IT community.&lt;/p&gt; &#xA;&lt;h2&gt;What The Tool Can Do ?&lt;/h2&gt; &#xA;&lt;p&gt;Below is a comprehensive list of features that AuthLogParser can analyze:&lt;/p&gt; &#xA;&lt;h4&gt;Summary Report features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hostname&lt;/li&gt; &#xA; &lt;li&gt;Log Size&lt;/li&gt; &#xA; &lt;li&gt;Start Time&lt;/li&gt; &#xA; &lt;li&gt;End Time&lt;/li&gt; &#xA; &lt;li&gt;Duration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Statistics Table&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Event Names Table&lt;/li&gt; &#xA; &lt;li&gt;IP Addresses Table&lt;/li&gt; &#xA; &lt;li&gt;Failed SSH Table&lt;/li&gt; &#xA; &lt;li&gt;Not Found Elements Table&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Raw Event Categorizing&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Successful SSH Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Successful SSH Public key Authentication&lt;/li&gt; &#xA; &lt;li&gt;New User Creation Activity&lt;/li&gt; &#xA; &lt;li&gt;User Deletion Activity&lt;/li&gt; &#xA; &lt;li&gt;User Password Change Activity&lt;/li&gt; &#xA; &lt;li&gt;New Group Creation Activity&lt;/li&gt; &#xA; &lt;li&gt;Group Deletion Activity&lt;/li&gt; &#xA; &lt;li&gt;User Added To A Group Activity&lt;/li&gt; &#xA; &lt;li&gt;User Removed From A Group Activity&lt;/li&gt; &#xA; &lt;li&gt;Session Opened For User root&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Feature Requests:&lt;/h4&gt; &#xA;&lt;p&gt;If you wish to propose the addition of a new feature, kindly submit your request by creating an issue here: &lt;a href=&#34;https://github.com/YosfanEilay/AuthLogParser/issues/new&#34;&gt;https://github.com/YosfanEilay/AuthLogParser/issues/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How To Use ?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/YosfanEilay/AuthLogParser/assets/132997318/2d663c04-88a3-412b-aa5c-99ad48d45ba1&#34; alt=&#34;howto use&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How To Use - Text Guide&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;From this GitHub repository press on &#34;&amp;lt;&amp;gt; Code&#34; and then press on &#34;Download ZIP&#34;.&lt;/li&gt; &#xA; &lt;li&gt;From &#34;AuthLogParser-main.zip&#34; export the folder &#34;AuthLogParser-main&#34; to you Desktop.&lt;/li&gt; &#xA; &lt;li&gt;Open a PowerSehll terminal and navigate to the &#34;AuthLogParser-main&#34; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# How to navigate to &#34;AuthLogParser-main&#34; folder from the PS terminal&#xA;PS C:\&amp;gt; cd &#34;C:\Users\{UserName}\Desktop\AuthLogParser-main\&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;From the &#34;AuthLogParser-main&#34; path, execute the tool on your Auth.Log file like this:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Example&#xA;PS C:\Users\{UserName}\Desktop\AuthLogParser-main&amp;gt; .\AuthLogParser.ps1 &#34;PATH\TO\YOUR\AUTH.LOG&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Thats it, enjoy the tool!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How To Use - Video Guide&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YosfanEilay/AuthLogParser/assets/132997318/43649759-8f47-40c6-a340-69c74c8af536&#34;&gt;https://github.com/YosfanEilay/AuthLogParser/assets/132997318/43649759-8f47-40c6-a340-69c74c8af536&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/go-images</title>
    <updated>2023-12-26T01:35:38Z</updated>
    <id>tag:github.com,2023-12-26:/microsoft/go-images</id>
    <link href="https://github.com/microsoft/go-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image packaging and publishing for the Microsoft build of Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker images containing the Microsoft build of Go&lt;/h1&gt; &#xA;&lt;p&gt;This repository creates Docker images that contain the Microsoft build of Go produced by the &lt;a href=&#34;https://github.com/microsoft/go&#34;&gt;microsoft/go&lt;/a&gt; repository. The tags are published on the Microsoft Artifact Registry (MAR), formerly Microsoft Container Registry (MCR), in the &lt;code&gt;oss/go/microsoft/golang&lt;/code&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;The images produced by this repository are for general use within Microsoft and to produce FIPS-compliant Go apps. For other purposes, we recommend using the &lt;a href=&#34;https://hub.docker.com/_/golang&#34;&gt;Docker Hub golang official images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information about building FIPS-compatible Go apps with the Microsoft Go tools, visit the &lt;a href=&#34;https://github.com/microsoft/go/tree/microsoft/main/eng/doc/fips&#34;&gt;FIPS readme&lt;/a&gt; and &lt;a href=&#34;https://github.com/microsoft/go/raw/microsoft/main/eng/doc/fips/UserGuide.md&#34;&gt;user guide&lt;/a&gt; in the microsoft/go repository.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;GitHub issues for microsoft/go-images are maintained in the &lt;a href=&#34;https://github.com/microsoft/go&#34;&gt;microsoft/go&lt;/a&gt; project. For help and questions about the Microsoft Go images, please &lt;a href=&#34;https://github.com/microsoft/go/issues/new/choose&#34;&gt;file an issue in microsoft/go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Recommended tags&lt;/h2&gt; &#xA;&lt;p&gt;In general, the microsoft/go-images tag names match those available for the official images. To switch from the official image to one on MCR, it may be possible to simply prepend &lt;code&gt;mcr.microsoft.com/oss/go/microsoft/&lt;/code&gt; to the official image you would normally use.&lt;/p&gt; &#xA;&lt;p&gt;This tag is recommended for general build scenarios:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mcr.microsoft.com/oss/go/microsoft/golang:1.20-bullseye&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to build a FIPS-compliant app, use a &lt;code&gt;fips&lt;/code&gt; tag, such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mcr.microsoft.com/oss/go/microsoft/golang:1.20-fips-cbl-mariner2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When building a containerized FIPS-compliant app, in general we recommend using a &lt;a href=&#34;https://docs.docker.com/develop/develop-images/multistage-build/&#34;&gt;multi-stage Dockerfile&lt;/a&gt; that uses our &lt;code&gt;fips&lt;/code&gt; tag in the builder stage and copies the built Go app into a minimal CBL-Mariner container to produce the final image.&lt;/p&gt; &#xA;&lt;p&gt;To view the full list of available Go tags in MAR:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://mcr.microsoft.com/en-us/product/oss/go/microsoft/golang/about&#34;&gt;&lt;code&gt;golang&lt;/code&gt; on the MAR Discovery Portal&lt;/a&gt; (&lt;em&gt;Microsoft internal auth required&lt;/em&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You must be currently signed into the MAR discovery portal with Microsoft internal auth to see the golang image. If you see a &#34;not found&#34; page, make sure you are signed in at the top-right corner of the MAR page, &lt;strong&gt;then close the tab and click the &lt;a href=&#34;https://mcr.microsoft.com/en-us/product/oss/go/microsoft/golang/about&#34;&gt;&lt;code&gt;golang&lt;/code&gt;&lt;/a&gt; link again&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Go to the &lt;code&gt;Tags&lt;/code&gt; tab to find a filterable list of tags and expand one to see the command to use to pull it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://mcr.microsoft.com/v2/oss/go/microsoft/golang/tags/list&#34;&gt;Microsoft Artifact Registry API&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The full tag URL is &lt;code&gt;mcr.microsoft.com/{name}:{tag}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/go-images/microsoft/main/docs/tags.md&#34;&gt;Tags of microsoft/go-images&lt;/a&gt; for more information about tag support, more tag names, and the purpose of each image.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We don&#39;t build any Alpine images. See &lt;a href=&#34;https://github.com/microsoft/go/issues/446&#34;&gt;microsoft/go#446&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Is this repository a fork?&lt;/h2&gt; &#xA;&lt;p&gt;We think it&#39;s accurate to call this repository a fork of the official Golang image repository, &lt;a href=&#34;https://github.com/docker-library/golang&#34;&gt;docker-library/golang&lt;/a&gt;. The branches here do not share Git ancestry with docker-library/golang. However, the repository serves the same purpose as a Git fork: maintaining a modified version of the Go source code over time.&lt;/p&gt; &#xA;&lt;p&gt;The submodule named &lt;code&gt;go&lt;/code&gt; contains the official image source code. The templates in &lt;code&gt;go&lt;/code&gt; are used to create the Dockerfiles in this repo, at &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/go-images/microsoft/main/src/microsoft&#34;&gt;&lt;code&gt;src/microsoft&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/go-images/microsoft/main/eng&#34;&gt;eng README file&lt;/a&gt; for more information about this repository&#39;s infrastructure.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rithinskaria/kodekloud-az104-v1</title>
    <updated>2023-12-26T01:35:38Z</updated>
    <id>tag:github.com,2023-12-26:/rithinskaria/kodekloud-az104-v1</id>
    <link href="https://github.com/rithinskaria/kodekloud-az104-v1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kodekloud-azure&lt;/h1&gt; &#xA;&lt;p&gt;Azure scripts&lt;/p&gt;</summary>
  </entry>
</feed>