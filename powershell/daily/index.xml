<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-16T01:35:27Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Marshall-Hallenbeck/red_team_attack_lab</title>
    <updated>2023-12-16T01:35:27Z</updated>
    <id>tag:github.com,2023-12-16:/Marshall-Hallenbeck/red_team_attack_lab</id>
    <link href="https://github.com/Marshall-Hallenbeck/red_team_attack_lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Red Team Attack Lab for TTP testing &amp; research&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Red Team Attack Lab&lt;/h1&gt; &#xA;&lt;p&gt;Disclaimer: right now this is in a development state. This is also my first time really using Vagrant &amp;amp; Ansible.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;A virtual environment with various realistic operating system and vulnerabilities for red teamers to play with&lt;/p&gt; &#xA;&lt;h3&gt;Impetus&lt;/h3&gt; &#xA;&lt;p&gt;Every lab environment that I have come across (Splunk Attack Range, DetectionLab, etc) has been heavily focused on blue team controls and/or only runs in cloud environments.&lt;/p&gt; &#xA;&lt;p&gt;As someone who doesn&#39;t want to pay extra money to host environments in AWS or Azure, this was quite annoying, so I decided to hack together something that runs locally.&lt;/p&gt; &#xA;&lt;p&gt;My main focus is on setting up a red teamable environment either for testing the development of tools, discovering new techniques, testing older TTPs, or staying up to date with the newest emerging threats.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update &#xA;sudo apt-get install -y linux-headers-generic vagrant virtualbox virtualbox-dkms&#xA;sudo apt install ansible&#xA;sudo gem install winrm-elevated&#xA;sudo gem install winrm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;ansible-galaxy collection install community.windows chocolatey.chocolatey&#xA;vagrant plugin install vagrant-hostmanager vagrant-vbguest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Marshall-Hallenbeck/red_team_attack_lab/main/docs/windows_setup.md&#34;&gt;Windows Setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Run&lt;/h2&gt; &#xA;&lt;h3&gt;Full Build (may take ~2 hours!)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a host fails to connect via WinRM after spinning up (intermittent issue), just re-run the provisioning via &lt;code&gt;vagrant provision $host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Specific Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;vagrant up dc01 win10-1 win10-dev kali&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For full list of hosts see &lt;a href=&#34;https://raw.githubusercontent.com/Marshall-Hallenbeck/red_team_attack_lab/main/docs/hosts.md&#34;&gt;hosts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;TODO: create architecture document...&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Marshall-Hallenbeck/red_team_attack_lab/main/docs/hosts.md&#34;&gt;hosts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Marshall-Hallenbeck/red_team_attack_lab/main/docs/vulnerabilities.md&#34;&gt;Vulnerabilities&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tuc-tac/SpotifyGeoFreedom</title>
    <updated>2023-12-16T01:35:27Z</updated>
    <id>tag:github.com,2023-12-16:/Tuc-tac/SpotifyGeoFreedom</id>
    <link href="https://github.com/Tuc-tac/SpotifyGeoFreedom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bypassing regional restrictions for a free Spotify account&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SpotifyGeoFreedom&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bypassing Regional Restrictions for a Free Spotify Account&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This solution is designed for users residing in countries where Spotify is not officially available and they are forced to register through other countries and also confirm their fake location every 14 days using a VPN.&lt;/p&gt; &#xA;&lt;h2&gt;Method Overview&lt;/h2&gt; &#xA;&lt;p&gt;This method employs GitHub Actions to run a runner with a USA location one day a week. It logs into the desktop Spotify client using your username and password, allowing you to access Spotify as if you were in the USA.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Before getting started, make sure you have the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GitHub account&lt;/li&gt; &#xA; &lt;li&gt;A free Spotify account&lt;/li&gt; &#xA; &lt;li&gt;Your Spotify account must have the USA selected as the country ( if you have another country specified, then you can change it yourself to Usa, use Vpn )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Text tutorial&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;Follow these steps to set up and use this method:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fork this &lt;a href=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom&#34;&gt;Repository&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Repository Settings&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;In your fork&#39;s &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;navigate to &lt;code&gt;Secrets and Variables&lt;/code&gt; =&amp;gt; &lt;code&gt;Actions&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Repository Secrets&lt;/strong&gt;:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Click on &lt;code&gt;New Repository Secret&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;In the &lt;code&gt;Name&lt;/code&gt; field, enter &lt;code&gt;LOGIN&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;In the &lt;code&gt;Secret&lt;/code&gt; field, enter your Spotify account login. Click &lt;code&gt;Add Secret&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Password Secret&lt;/strong&gt;:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Repeat the same process for your password&lt;/li&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;New Repository Secret&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Enter &lt;code&gt;PASS&lt;/code&gt; in the &lt;code&gt;Name&lt;/code&gt; field&lt;/li&gt; &#xA;    &lt;li&gt;Enter your Spotify account password in the &lt;code&gt;Secret&lt;/code&gt; field. (Remember to update it here if you change your password)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Activate the Runner&lt;/strong&gt;:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to the &lt;code&gt;Actions&lt;/code&gt; tab in your forked repository&lt;/li&gt; &#xA;    &lt;li&gt;Confirm the activation of the runner&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Video tutorial&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/GriSDB4gIbU&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-red?style=for-the-badge&amp;amp;logo=youtube&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;How can I check the runner&#39;s operation after the initial setup?&lt;/h3&gt; &#xA;&lt;p&gt;If the time trigger has not yet activated, and you want to check if your runner is working successfully, manual launch is provided. Follow these steps:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;small&gt;Steps&lt;/small&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;While on the main page of your fork, go to the tab &lt;img src=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom/assets/143889047/f26ca153-978e-4aed-8290-6267987635da&#34; alt=&#34;2023-09-11 080820&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;In the left sidebar, click the &#34;Run SpotifyGeoFreedom Script&#34; button&lt;/p&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;&lt;small&gt;screenshot&lt;/small&gt;&lt;/summary&gt;&#xA;    &lt;p&gt; &lt;/p&gt;&#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom/assets/143889047/d83e565c-bc62-4244-8506-cc611f5aad47&#34; alt=&#34;Снимок экрана 2023-09-11 081017&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;On the right side, a dropdown menu &#34;Run workflow&#34; will appear, inside of which there will be a green &#34;Run workflow&#34; button. Click on it to start the runner&lt;/p&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;&lt;small&gt;screenshot&lt;/small&gt;&lt;/summary&gt;&#xA;    &lt;p&gt; &lt;/p&gt;&#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom/assets/143889047/940f4558-b7c3-486a-8141-de5635742411&#34; alt=&#34;Снимок экрана 2023-09-11 085001&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Wait for a couple of minutes until the script completes, and its icon turns green&lt;/p&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;&lt;small&gt;screenshot&lt;/small&gt;&lt;/summary&gt;&#xA;    &lt;p&gt; &lt;/p&gt;&#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom/assets/143889047/22aa5bf0-6b46-4a4a-a003-bbd857f46130&#34; alt=&#34;Снимок экрана 2023-09-11 082025&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Go to the runner actions &#34;Run SpotifyGeoFreedom Script&#34; =&amp;gt; &#34;run-powershell&#34;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Expand the &#34;Сlient download and login&#34; action&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;If the script outputs &#34;Client response: Successful authentication,&#34; then everything is fine; your runner has successfully opened the Spotify client using your login and password&lt;/p&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;&lt;small&gt;screenshot&lt;/small&gt;&lt;/summary&gt;&#xA;    &lt;p&gt; &lt;/p&gt;&#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/Tuc-tac/SpotifyGeoFreedom/assets/143889047/e99f089e-fe42-4d04-98d0-1a712cf7354b&#34; alt=&#34;Снимок экрана 2023-09-11 082132&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;If you see the message &#34;Client response: Failed authenticating: login5_invalid_credentials,&#34; then most likely you did not correctly set your login and password in the secret variables. Try doing it again. If you are sure that your login and password were set correctly, then in 99% of cases, Spotify has reset your password. Check your email; there should be a password reset form. You need to reset it and set the new password in the secret variable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;At what time does the runner trigger?&lt;/h3&gt; &#xA;&lt;p&gt;The launch occurs every Thursday at 2:37 UTC&lt;/p&gt; &#xA;&lt;h3&gt;Why is a login and password necessary? Is it considered secure?&lt;/h3&gt; &#xA;&lt;p&gt;Login and password are required to access your account from an Usa IP address, thus resetting the 14-day regional restriction counter. While setting up the method, you input your login and password into actions secrets, they are stored there in encrypted form, and only you have access to them. This is absolutely secure&lt;/p&gt; &#xA;&lt;h3&gt;Why can&#39;t I log into my Spotify account?&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s relatively rare, but Spotify can detect false suspicious activities. If this happens, you will receive an email with instructions to reset your password. After creating a new password, don&#39;t forget to update the PASS secret in your fork&#39;s settings.&lt;/p&gt; &#xA;&lt;h3&gt;Does it really work?&lt;/h3&gt; &#xA;&lt;p&gt;I have no idea🤣 as long as it&#39;s just being tested&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;You are using this method at your own risk; the developer is not responsible for any potential issues.&lt;/p&gt;</summary>
  </entry>
</feed>