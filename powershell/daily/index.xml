<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-17T01:34:06Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>merill/microsoft-info</title>
    <updated>2023-08-17T01:34:06Z</updated>
    <id>tag:github.com,2023-08-17:/merill/microsoft-info</id>
    <link href="https://github.com/merill/microsoft-info" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository hosting a list of Microsoft First party apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft First Party App Names&lt;/h1&gt; &#xA;&lt;h2&gt;üí° Overview&lt;/h2&gt; &#xA;&lt;p&gt;Looking up the names of Microsoft first party applications can be quite tricky. Microsoft publishes a static list of the common app names in the &lt;a href=&#34;https://learn.microsoft.com/troubleshoot/azure/active-directory/verify-first-party-apps-sign-in&#34;&gt;Verify first-party Microsoft applications in sign-in reports&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;p&gt;There are a few problems with this.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is in markdown and is not easily consumable by scripts and KQL queries that need to perform lookups.&lt;/li&gt; &#xA; &lt;li&gt;It does not list all of the Microsoft apps that can be found through Microsoft Graph API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üñ•Ô∏è The solution&lt;/h2&gt; &#xA;&lt;p&gt;This repository provides an up-to-date list of Microsoft first party apps that can be easily consumed by scripts.&lt;/p&gt; &#xA;&lt;p&gt;Use the following urls to consume this data in your scripts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üí†&lt;/span&gt; JSON ‚Üí &lt;a href=&#34;https://raw.githubusercontent.com/merill/microsoft-info/main/_info/MicrosoftApps.json&#34;&gt;https://raw.githubusercontent.com/merill/microsoft-info/main/_info/MicrosoftApps.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìã&lt;/span&gt; CSV ‚Üí &lt;a href=&#34;https://raw.githubusercontent.com/merill/microsoft-info/main/_info/MicrosoftApps.csv&#34;&gt;https://raw.githubusercontent.com/merill/microsoft-info/main/_info/MicrosoftApps.csv&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìò Data source&lt;/h2&gt; &#xA;&lt;p&gt;This repository runs a daily automation to generate the latest list of Microsoft first party application. The source of the data includes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microsoft Graph&lt;/strong&gt; ‚Üí &lt;code&gt;$filter = appOwnerOrganizationId eq [MicrosoftTenant]&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run a query against a demo Microsoft 365 tenant and get a list of all the apps that belong to Microsoft.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microsoft Learn&lt;/strong&gt; ‚Üí &lt;a href=&#34;https://learn.microsoft.com/troubleshoot/azure/active-directory/verify-first-party-apps-sign-in&#34;&gt;Verify first-party Microsoft applications in sign-in reports&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Parse the markdown from the tables in &lt;a href=&#34;https://learn.microsoft.com/troubleshoot/azure/active-directory/verify-first-party-apps-sign-in&#34;&gt;this Microsoft Learn doc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community contributed app names&lt;/strong&gt; ‚Üí &lt;a href=&#34;https://raw.githubusercontent.com/merill/microsoft-info/main/customdata/OtherMicrosoftApps.csv&#34;&gt;./customdata/OtherMicrosoftApps.csv&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App names contributed by the community to this repository. Submit a PR to add entries to this file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If an app id exists in more than one list the order of precedence for the app name is ‚Üí Graph, Learn and then GitHub&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/merill/microsoft-info/main/assets/overview.png&#34; alt=&#34;Image with a funnel illustrating the three data sources and the two output files.&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ãî Forking this repo&lt;/h2&gt; &#xA;&lt;p&gt;Follow the steps below if you need to set up this automation in your own repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this repo&lt;/li&gt; &#xA; &lt;li&gt;Create an app in your tenant with the Application.Read.All app permission following the instructions on this page to configure &lt;a href=&#34;https://github.com/marketplace/actions/azure-ad-workload-identity-federation&#34;&gt;Workload ID federation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoftgraph/microsoft-graph-docs-contrib</title>
    <updated>2023-08-17T01:34:06Z</updated>
    <id>tag:github.com,2023-08-17:/microsoftgraph/microsoft-graph-docs-contrib</id>
    <link href="https://github.com/microsoftgraph/microsoft-graph-docs-contrib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for the Microsoft Graph REST API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Graph documentation&lt;/h1&gt; &#xA;&lt;p&gt;Thank you for your interest in Microsoft Graph documentation! For the best experience, we recommend you view this content on the &lt;a href=&#34;https://learn.microsoft.com/graph&#34;&gt;Microsoft Graph Developer Portal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Give us your feedback&lt;/h2&gt; &#xA;&lt;p&gt;Your feedback is important to us.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To let us know about any questions or issues you find in the documentation, &lt;a href=&#34;https://github.com/microsoftgraph/microsoft-graph-docs/issues&#34;&gt;submit an issue&lt;/a&gt; in this repository.&lt;/li&gt; &#xA; &lt;li&gt;We also encourage you to fork, make the fix, and do a pull request of your proposed changes. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/microsoft-graph-docs-contrib/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for contributing guidelines.&lt;/li&gt; &#xA; &lt;li&gt;To let us know about your programming experience, what you would like to see in future versions, code samples, and so on, enter your suggestions and ideas at &lt;a href=&#34;https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform/label-name/Microsoft%20Graph&#34;&gt;Microsoft 365 Developer Platform Tech Community&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Leo4j/Invoke-SessionHunter</title>
    <updated>2023-08-17T01:34:06Z</updated>
    <id>tag:github.com,2023-08-17:/Leo4j/Invoke-SessionHunter</id>
    <link href="https://github.com/Leo4j/Invoke-SessionHunter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Retrieve and display information about active user sessions on remote computers. No admin privileges required.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Invoke-SessionHunter&lt;/h1&gt; &#xA;&lt;p&gt;Retrieve and display information about active user sessions on remote computers. No admin privileges required.&lt;/p&gt; &#xA;&lt;p&gt;In pentests and red team exercises, one of the critical objectives is to identify potential points of compromise within the network. Identifying systems with active user sessions becomes invaluable for executing targeted attacks, bolstering the potential for lateral movement, privilege escalation, and domain compromise.&lt;/p&gt; &#xA;&lt;p&gt;The tool leverages the remote registry service to query the HKEY_USERS registry hive on the remote computers. It identifies and extracts Security Identifiers (SIDs) associated with active user sessions, and translates these into corresponding usernames, offering insights into who is currently logged in.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s important to note that the remote registry service needs to be running on the remote computer for the tool to work effectively. In my tests, if the service is stopped but its Startup type is configured to &#34;Automatic&#34; or &#34;Manual&#34;, the service will start automatically on the target computer once queried (this is native behavior), and sessions information will be retrieved. If set to &#34;Disabled&#34; no session information can be retrieved from the target.&lt;/p&gt; &#xA;&lt;h3&gt;Run as follows:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;iex(new-object net.webclient).downloadstring(&#39;https://raw.githubusercontent.com/Leo4j/Invoke-SessionHunter/main/Invoke-SessionHunter.ps1&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If run without parameters or switches it will retrieve active sessions for all computers in the current domain&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Leo4j/Invoke-SessionHunter/assets/61951374/ade5b58f-83fa-45b8-ad27-c7e3b20867c8&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Specify the target domain&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Domain contoso.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify a comma-separated list of targets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Targets &#34;DC01,Workstation01.contoso.local&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the full path to a file containing a list of targets - one per line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -TargetsFile c:\Users\Public\Documents\targets.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve and display information about active user sessions on servers only&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Servers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve and display information about active user sessions on workstations only&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Workstations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show active session for the specified user only&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Hunt &#34;Administrator&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exclude localhost from the sessions retrieval&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -ExcludeLocalHost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Return custom PSObjects instead of table-formatted results&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -RawResults&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show hostnames that returned connection errors&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -ConnectionErrors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Timeout for the initial network scan (default: 50ms)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -Timeout 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Do not run a port scan to enumerate for alive hosts before trying to retrieve sessions&lt;/h3&gt; &#xA;&lt;p&gt;Note: if a host is not reachable it will hang for a while&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-SessionHunter -NoPortScan&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>