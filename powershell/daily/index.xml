<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-21T01:35:56Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/EntraExporter</title>
    <updated>2023-08-21T01:35:56Z</updated>
    <id>tag:github.com,2023-08-21:/microsoft/EntraExporter</id>
    <link href="https://github.com/microsoft/EntraExporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerShell module to export a local copy of an Entra (Azure AD) tenant configuration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Entra Exporter&lt;/h1&gt; &#xA;&lt;p&gt;The Entra Exporter is a PowerShell module that allows you to export your Entra and Azure AD B2C configuration settings to local .json files.&lt;/p&gt; &#xA;&lt;p&gt;This module can be run as a nightly scheduled task or a DevOps component (Azure DevOps, GitHub, Jenkins) and the exported files can be version controlled in Git or SharePoint.&lt;/p&gt; &#xA;&lt;p&gt;This will provide tenant administrators with a historical view of all the settings in the tenant including the change history over the years.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] The AzureADExporter module in the PowerShell Gallery is now deprecated. Please install the new &lt;strong&gt;EntraExporter&lt;/strong&gt; module.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installing the module&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;    Install-Module EntraExporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using the module&lt;/h2&gt; &#xA;&lt;h3&gt;Connecting and exporting your config&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;    Connect-EntraExporter&#xA;    Export-Entra -Path &#39;C:\EntraBackup\&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While Connect-EntraExporter is available for convenience you can alternatively use Connect-MgGraph with the following scopes to authenticate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Connect-MgGraph -Scopes &#39;Directory.Read.All&#39;, &#39;Policy.Read.All&#39;, &#39;IdentityProvider.Read.All&#39;, &#39;Organization.Read.All&#39;, &#39;User.Read.All&#39;, &#39;EntitlementManagement.Read.All&#39;, &#39;UserAuthenticationMethod.Read.All&#39;, &#39;IdentityUserFlow.Read.All&#39;, &#39;APIConnectors.Read.All&#39;, &#39;AccessReview.Read.All&#39;, &#39;Agreement.Read.All&#39;, &#39;Policy.Read.PermissionGrant&#39;, &#39;PrivilegedAccess.Read.AzureResources&#39;, &#39;PrivilegedAccess.Read.AzureAD&#39;, &#39;Application.Read.All&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Export options&lt;/h3&gt; &#xA;&lt;p&gt;To export object and settings use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;    Export-Entra -Path &#39;C:\EntraBackup\&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This default method exports the most common set of objects and settings.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] We recommend using PowerShell 7+ to create a consistent output. While PowerShell 5.1 can be used the output generated is not optimal.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The following objects and settings are not exported by default:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;B2C, B2B, Static Groups and group memberships, Applications, ServicePrincipals, Users, Privileged Identity Management (built in roles, default roles settings, non permanent role assignements)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the -All parameter to perform a full export:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;    Export-Entra -Path &#39;C:\EntraBackup\&#39; -All&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;-Type&lt;/code&gt; parameter can be used to select specific objects and settings to export. The default type is &#34;Config&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;    # export default all users as well as default objects and settings&#xA;    Export-Entra -Path &#39;C:\EntraBackup\&#39; -Type &#34;Config&#34;,&#34;Users&#34;&#xA;&#xA;    # export applications only&#xA;    Export-Entra -Path &#39;C:\EntraBackup\&#39; -Type &#34;Applications&#34;&#xA;&#xA;    # export B2C specific properties only&#xA;    Export-Entra -Path &#39;C:\EntraBackup\&#39; -Type &#34;B2C&#34;&#xA;&#xA;    # export B2B properties along with AD properties&#xA;    Export-Entra -Path &#39;C:\EntraBackup\&#39; -Type &#34;B2B&#34;,&#34;Config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The currently valid types are: All (all elements), Config (default configuration), AccessReviews, ConditionalAccess, Users, Groups, Applications, ServicePrincipals, B2C, B2B, PIM, PIMAzure, PIMAAD, AppProxy, Organization, Domains, EntitlementManagement, Policies, AdministrativeUnits, SKUs, Identity, Roles, Governance&lt;/p&gt; &#xA;&lt;p&gt;This list can also be retrieved via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;(Get-Command Export-Entra | Select-Object -Expand Parameters)[&#39;Type&#39;].Attributes.ValidValues&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional filters can be applied:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To exclude on-prem synced users from the export&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Export-Entra -Path &#39;C:\EntraBackup\&#39; -All -CloudUsersAndGroupsOnly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This module exports all settings that are available through the Microsoft Graph API. Entra settings and objects that are not yet available in the Graph API are not included.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Exported configuration includes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Users&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Groups&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dynamic and Assigned groups (incl. Members and Owners)&lt;/li&gt; &#xA;   &lt;li&gt;Group Settings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;External Identities&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization Policy&lt;/li&gt; &#xA;   &lt;li&gt;API Connectors&lt;/li&gt; &#xA;   &lt;li&gt;User Flows&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Roles and Administrators&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Administrative Units&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Applications&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enterprise Applications&lt;/li&gt; &#xA;   &lt;li&gt;App Registrations&lt;/li&gt; &#xA;   &lt;li&gt;Claims Mapping Policy&lt;/li&gt; &#xA;   &lt;li&gt;Extension Properties&lt;/li&gt; &#xA;   &lt;li&gt;Admin Consent Request Policy&lt;/li&gt; &#xA;   &lt;li&gt;Permission Grant Policies&lt;/li&gt; &#xA;   &lt;li&gt;Token Issuance Policies&lt;/li&gt; &#xA;   &lt;li&gt;Token Lifetime Policies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Identity Governance&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Entitlement Management &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Access Packages&lt;/li&gt; &#xA;     &lt;li&gt;Catalogs&lt;/li&gt; &#xA;     &lt;li&gt;Connected Organizations&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Access Reviews&lt;/li&gt; &#xA;   &lt;li&gt;Privileged Identity Management &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Entra Roles&lt;/li&gt; &#xA;     &lt;li&gt;Azure Resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Terms of Use&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Application Proxy&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Connectors and Connect Groups&lt;/li&gt; &#xA;   &lt;li&gt;Agents and Agent Groups&lt;/li&gt; &#xA;   &lt;li&gt;Published Resources&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Licenses&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom domain names&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Company branding&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Profile Card Properties&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User settings&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tenant Properties&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Technical contacts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Security&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Conditional Access Policies&lt;/li&gt; &#xA;   &lt;li&gt;Named Locations&lt;/li&gt; &#xA;   &lt;li&gt;Authentication Methods Policies&lt;/li&gt; &#xA;   &lt;li&gt;Identity Security Defaults Enforcement Policy&lt;/li&gt; &#xA;   &lt;li&gt;Permission Grant Policies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tenant Policies and Settings&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Feature Rollout Policies&lt;/li&gt; &#xA;   &lt;li&gt;Cross-tenant Access&lt;/li&gt; &#xA;   &lt;li&gt;Activity Based Timeout Policies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hybrid Authentication&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Identity Providers&lt;/li&gt; &#xA;   &lt;li&gt;Home Realm Discovery Policies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;B2C Settings&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;B2C User Flows &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Identity Providers&lt;/li&gt; &#xA;     &lt;li&gt;User Attribute Assignments&lt;/li&gt; &#xA;     &lt;li&gt;API Connector Configuration&lt;/li&gt; &#xA;     &lt;li&gt;Languages&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrate to Azure DevOps Pipeline&lt;/h2&gt; &#xA;&lt;p&gt;Exporting Entra settings to json files makes them useful to integrate with DevOps pipelines.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Delegated authentication will require a dedicated agent where the authentication has been pre-configured.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Below is an sample of exporting in two steps&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Export Entra to local json files&lt;/li&gt; &#xA; &lt;li&gt;Update a git repository with the files&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To export the configuration (replace variables with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; with the values suited to your situation):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$tenantPath = &#39;./&amp;lt;tenant export path&amp;gt;&#39;&#xA;$tenantId = &#39;&amp;lt;tenant id&amp;gt;&#39;&#xA;Write-Host &#39;git checkout main...&#39;&#xA;git config --global core.longpaths true #needed for Windows&#xA;git checkout main&#xA;&#xA;Write-Host &#39;Clean git folder...&#39;&#xA;Remove-Item $tenantPath -Force -Recurse&#xA;&#xA;Write-Host &#39;Installing modules...&#39;&#xA;Install-Module Microsoft.Graph.Authentication -Scope CurrentUser -Force&#xA;Install-Module EntraExporter -Scope CurrentUser -Force&#xA;&#xA;Write-Host &#39;Connecting...&#39;&#xA;Connect-EntraExporter -TenantId $tenantId&#xA;&#xA;Write-Host &#39;Starting backup...&#39;&#xA;Export-Entra $tenantPath -All&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update the git repository with the generated files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Write-Host &#39;Updating repo...&#39;&#xA;git config user.email &#34;&amp;lt;email&amp;gt;&#34;&#xA;git config user.name &#34;&amp;lt;name&amp;gt;&#34;&#xA;git add -u&#xA;git add -A&#xA;git commit -m &#34;ADO Update&#34;&#xA;git push origin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;h3&gt;Error &#39;Could not find a part of the path&#39; when exported JSON file paths are longer than 260 characters&lt;/h3&gt; &#xA;&lt;p&gt;A workaround to this is to enable long paths via the Windows registry or a GPO setting. Run the following from an elevated PowerShell session and then close PowerShell before trying your export again:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-ItemProperty `&#xA;    -Path &#34;HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem&#34; `&#xA;    -Name &#34;LongPathsEnabled&#34; `&#xA;    -Value 1 `&#xA;    -PropertyType DWORD `&#xA;    -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Credit: @shaunluttin via &lt;a href=&#34;https://bigfont.ca/enable-long-paths-in-windows-with-powershell/&#34;&gt;https://bigfont.ca/enable-long-paths-in-windows-with-powershell/&lt;/a&gt; and &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=powershell&#34;&gt;https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=powershell&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
</feed>