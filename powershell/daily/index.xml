<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:33:51Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/winget-command-not-found</title>
    <updated>2024-05-29T01:33:51Z</updated>
    <id>tag:github.com,2024-05-29:/microsoft/winget-command-not-found</id>
    <link href="https://github.com/microsoft/winget-command-not-found" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WinGet Command Not Found is a PowerShell 7 module to help you install missing packages. With this module, you will be recommended relevant WinGet packages whenever an unrecognized command is entered.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft.WinGet.CommandNotFound&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;Microsoft.WinGet.CommandNotFound&lt;/code&gt; module is a feedback provider plugin for PowerShell. This feedback provider leverages the Windows Package Manager to provide suggestions for packages to install when a native command cannot be found.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/scripting/learn/shell/using-predictors&#34;&gt;command-line predictor&lt;/a&gt; feature in PowerShell enables this module to display these WinGet packages as predictive suggestions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/winget-command-not-found/main/images/demo.png&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Microsoft.WinGet.CommandNotFound&lt;/code&gt; PowerShell Module is built on the &lt;code&gt;IFeedbackProvider&lt;/code&gt; interface, which is available with PowerShell &lt;code&gt;7.4.0-preview.2&lt;/code&gt; or above. To display prediction suggestions, you need &lt;a href=&#34;https://www.powershellgallery.com/packages/PSReadLine/2.2.6&#34;&gt;PSReadLine 2.2.6&lt;/a&gt; or above.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell &lt;code&gt;7.4.0-preview.2&lt;/code&gt; or above&lt;/li&gt; &#xA; &lt;li&gt;PSReadLine &lt;code&gt;2.2.6&lt;/code&gt; or above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following experimental features must be enabled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PSFeedbackProvider&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PSCommandNotFoundSuggestion&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;They can be enabled by running the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Enable-ExperimentalFeature PSFeedbackProvider&#xA;Enable-ExperimentalFeature PSCommandNotFoundSuggestion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;PowerShell feedback providers and predictors are written in C# and registered with the PowerShell &lt;a href=&#34;https://docs.microsoft.com/powershell/scripting/learn/experimental-features#pssubsystempluginmodel&#34;&gt;Subsystem Plugin Model&lt;/a&gt;. To learn more, see &#34;How to create a feedback provider&#34; and &lt;a href=&#34;https://docs.microsoft.com/powershell/scripting/dev-cross-plat/create-cmdline-predictor&#34;&gt;&#34;How to create a command-line predictor&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
</feed>