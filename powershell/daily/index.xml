<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-16T01:50:19Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mandiant/commando-vm</title>
    <updated>2022-06-16T01:50:19Z</updated>
    <id>tag:github.com,2022-06-16:/mandiant/commando-vm</id>
    <link href="https://github.com/mandiant/commando-vm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Complete Mandiant Offensive VM (Commando VM), a fully customizable Windows-based pentesting virtual machine distribution. commandovm@fireeye.com&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;      _________                                           .___      &#xA;      \_   ___ \  ____   _____   _____ _____    ____    __| _/____  &#xA;      /    \  \/ /  _ \ /     \ /     \\__  \  /    \  / __ |/  _ \ &#xA;      \     \___(  &amp;lt;_&amp;gt; )  Y Y  \  Y Y  \/ __ \|   |  \/ /_/ (  &amp;lt;_&amp;gt; )&#xA;       \______  /\____/|__|_|  /__|_|  (____  /___|  /\____ |\____/ &#xA;              \/             \/      \/     \/     \/      \/       &#xA;                    C O M P L E T E  M A N D I A N T                    &#xA;                         O F F E N S I V E   V M                        &#xA;                              Version 2021.2                                 &#xA;                          commandovm@fireeye.com&#xA;           _____________________________________________________          &#xA;&#xA;                                Created by                                &#xA;                         Jake Barteaux @day1player                              &#xA;                             Mandiant Red Team  &#xA;                      Blaine Stancill @MalwareMechanic                           &#xA;                                Nhan Huynh   &#xA;                 FireEye Labs Advanced Reverse Engineering                            &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/fireeye/commando-vm/raw/master/Commando.png?raw=true&#34; alt=&#34;Commando VM&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Welcome to CommandoVM - a fully customizable, Windows-based security distribution for penetration testing and red teaming.&lt;/p&gt; &#xA;&lt;p&gt;For detailed install instructions or more information please see our &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2019/08/commando-vm-customization-containers-kali.html&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation (Install Script)&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 1803, 1809, 1903, 1909, 2004, 20H2, or 21H1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Insider Preview editions of Windows are not supported&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;60 GB Hard Drive&lt;/li&gt; &#xA; &lt;li&gt;2 GB RAM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 21H1&lt;/li&gt; &#xA; &lt;li&gt;80+ GB Hard Drive&lt;/li&gt; &#xA; &lt;li&gt;4+ GB RAM&lt;/li&gt; &#xA; &lt;li&gt;2 network adapters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Instructions&lt;/h1&gt; &#xA;&lt;h2&gt;Pre-Install Procedures&lt;/h2&gt; &#xA;&lt;p&gt;You MUST disable Windows Defender for a smooth install. The best way to accomplish this is through Group Policy&lt;/p&gt; &#xA;&lt;p&gt;In Windows versions 1909 and higher, Tamper Protection was added. &lt;strong&gt;Tamper Protection must be disabled, otherwise Group Policy settings are ignored.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Windows Security (type &lt;code&gt;Windows Security&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Virus &amp;amp; threat protection &amp;gt; Virus &amp;amp; threat protection settings &amp;gt; Manage settings&lt;/li&gt; &#xA; &lt;li&gt;Switch &lt;code&gt;Tamper Protection&lt;/code&gt; to &lt;code&gt;Off&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is not necessary to change any other setting (&lt;code&gt;Real Time Protection&lt;/code&gt;, etc.)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important.&lt;/strong&gt; Tamper Protection must be disabled before changing Group Policy settings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To permanently disable Real Time Protection&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Local Group Policy Editor (type &lt;code&gt;gpedit&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Computer Configuration &amp;gt; Administrative Templates &amp;gt; Windows Components &amp;gt; Microsoft Defender Antivirus &amp;gt; Real-time Protection&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;Turn off real-time protection&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reboot&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to &lt;strong&gt;reboot&lt;/strong&gt; before making the next change&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To permanently disable Microsoft Defender:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Local Group Policy Editor (type &lt;code&gt;gpedit&lt;/code&gt; in the search box)&lt;/li&gt; &#xA; &lt;li&gt;Computer Configuration &amp;gt; Administrative Templates &amp;gt; Windows Components &amp;gt; Microsoft Defender Antivirus&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;Turn off Microsoft Defender Antivirus&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reboot&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Standard install&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and configure a new Windows Virtual Machine&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ensure VM is updated completely. You may have to check for updates, reboot, and check again until no more remain&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Take a snapshot of your machine!&lt;/li&gt; &#xA; &lt;li&gt;Download and copy &lt;code&gt;install.ps1&lt;/code&gt; on your newly configured machine.&lt;/li&gt; &#xA; &lt;li&gt;Open PowerShell as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;Unblock the install file by running &lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable script execution by running &lt;code&gt;Set-ExecutionPolicy Unrestricted -f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finally, execute the installer script as follows:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can also pass your password as an argument: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The script will set up the Boxstarter environment and proceed to download and install the Commando VM environment. You will be prompted for the administrator password in order to automate host restarts during installation. If you do not have a password set, hitting enter when prompted will also work.&lt;/p&gt; &#xA;&lt;h2&gt;Custom install&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please see our &lt;a href=&#34;https://github.com/fireeye/commando-vm/tree/master/Profiles&#34;&gt;custom profiles&lt;/a&gt; for more custom install options or create your own following the instructions below.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the zip from &lt;a href=&#34;https://github.com/fireeye/commando-vm&#34;&gt;https://github.com/fireeye/commando-vm&lt;/a&gt; into your Downloads folder.&lt;/li&gt; &#xA; &lt;li&gt;Decompress the zip and edit the &lt;code&gt;${Env:UserProfile}\Downloads\commando-vm-master\commando-vm-master\profile.json&lt;/code&gt; file by removing tools or adding tools in the “packages” section. You can add any package listed in our &lt;a href=&#34;https://github.com/fireeye/commando-vm/raw/master/packages.csv&#34;&gt;package list&lt;/a&gt; or any package from the &lt;a href=&#34;https://chocolatey.org/packages&#34;&gt;chocolatey repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open an administrative PowerShell window and enable script execution. &lt;code&gt;Set-ExecutionPolicy Unrestricted -f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change to the unzipped project directory. &lt;code&gt;cd ${Env:UserProfile}\Downloads\commando-vm-master\commando-vm-master\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unblock the install file by running &lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a snapshot of your machine!&lt;/li&gt; &#xA; &lt;li&gt;Execute the install with the &lt;code&gt;-profile_file&lt;/code&gt; argument. &lt;code&gt;.\install.ps1 -profile_file .\profile.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more detailed instructions about custom installations, see our &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2019/08/commando-vm-customization-containers-kali.html&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing a new package&lt;/h1&gt; &#xA;&lt;p&gt;Commando VM uses the &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; Windows package manager. It is easy to install a new package. For example, enter the following command as Administrator to deploy Github Desktop on your system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cinst github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find packages to install from our &lt;a href=&#34;https://github.com/fireeye/commando-vm/raw/master/packages.csv&#34;&gt;package list&lt;/a&gt;, which hosts more than just pentesting tools, or from the &lt;a href=&#34;https://chocolatey.org/packages&#34;&gt;chocolatey repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Staying up to date&lt;/h1&gt; &#xA;&lt;p&gt;Type the following command to update all of the packages to the most recent version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cup all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Available Tools&lt;/h1&gt; &#xA;&lt;h3&gt;Active Directory Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remote Server Administration Tools (RSAT)&lt;/li&gt; &#xA; &lt;li&gt;SQL Server Command Line Utilities&lt;/li&gt; &#xA; &lt;li&gt;Sysinternals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Command &amp;amp; Control&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Covenant&lt;/li&gt; &#xA; &lt;li&gt;WMImplant&lt;/li&gt; &#xA; &lt;li&gt;WMIOps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dep&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA; &lt;li&gt;Java&lt;/li&gt; &#xA; &lt;li&gt;Python 2&lt;/li&gt; &#xA; &lt;li&gt;Python 3 (default)&lt;/li&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Ruby Devkit&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 2017 Build Tools (Windows 10)&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amass&lt;/li&gt; &#xA; &lt;li&gt;SpiderFoot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Evasion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CheckPlease&lt;/li&gt; &#xA; &lt;li&gt;Demiguise&lt;/li&gt; &#xA; &lt;li&gt;DefenderCheck&lt;/li&gt; &#xA; &lt;li&gt;DotNetToJScript&lt;/li&gt; &#xA; &lt;li&gt;Invoke-CradleCrafter&lt;/li&gt; &#xA; &lt;li&gt;Invoke-DOSfuscation&lt;/li&gt; &#xA; &lt;li&gt;Invoke-Obfuscation&lt;/li&gt; &#xA; &lt;li&gt;Invoke-Phant0m&lt;/li&gt; &#xA; &lt;li&gt;Not PowerShell (nps)&lt;/li&gt; &#xA; &lt;li&gt;PS&amp;gt;Attack&lt;/li&gt; &#xA; &lt;li&gt;PSAmsi&lt;/li&gt; &#xA; &lt;li&gt;Pafishmacro&lt;/li&gt; &#xA; &lt;li&gt;PowerLessShell&lt;/li&gt; &#xA; &lt;li&gt;PowerShdll&lt;/li&gt; &#xA; &lt;li&gt;StarFighters&lt;/li&gt; &#xA; &lt;li&gt;SysWhispers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exploitation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ADAPE-Script&lt;/li&gt; &#xA; &lt;li&gt;API Monitor&lt;/li&gt; &#xA; &lt;li&gt;CrackMapExec&lt;/li&gt; &#xA; &lt;li&gt;CrackMapExecWin&lt;/li&gt; &#xA; &lt;li&gt;DAMP&lt;/li&gt; &#xA; &lt;li&gt;Dumpert&lt;/li&gt; &#xA; &lt;li&gt;EvilClippy&lt;/li&gt; &#xA; &lt;li&gt;Exchange-AD-Privesc&lt;/li&gt; &#xA; &lt;li&gt;FuzzySec&#39;s PowerShell-Suite&lt;/li&gt; &#xA; &lt;li&gt;FuzzySec&#39;s Sharp-Suite&lt;/li&gt; &#xA; &lt;li&gt;GadgetToJScript&lt;/li&gt; &#xA; &lt;li&gt;Generate-Macro&lt;/li&gt; &#xA; &lt;li&gt;GhostPack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rubeus&lt;/li&gt; &#xA;   &lt;li&gt;SafetyKatz&lt;/li&gt; &#xA;   &lt;li&gt;Seatbelt&lt;/li&gt; &#xA;   &lt;li&gt;SharpDPAPI&lt;/li&gt; &#xA;   &lt;li&gt;SharpDump&lt;/li&gt; &#xA;   &lt;li&gt;SharpRoast&lt;/li&gt; &#xA;   &lt;li&gt;SharpUp&lt;/li&gt; &#xA;   &lt;li&gt;SharpWMI&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GoFetch&lt;/li&gt; &#xA; &lt;li&gt;Impacket&lt;/li&gt; &#xA; &lt;li&gt;Invoke-ACLPwn&lt;/li&gt; &#xA; &lt;li&gt;Invoke-DCOM&lt;/li&gt; &#xA; &lt;li&gt;Invoke-PSImage&lt;/li&gt; &#xA; &lt;li&gt;Invoke-PowerThIEf&lt;/li&gt; &#xA; &lt;li&gt;Juicy Potato&lt;/li&gt; &#xA; &lt;li&gt;Kali Binaries for Windows&lt;/li&gt; &#xA; &lt;li&gt;LuckyStrike&lt;/li&gt; &#xA; &lt;li&gt;MetaTwin&lt;/li&gt; &#xA; &lt;li&gt;Metasploit&lt;/li&gt; &#xA; &lt;li&gt;Mr. Unikod3r&#39;s RedTeamPowershellScripts&lt;/li&gt; &#xA; &lt;li&gt;NetshHelperBeacon&lt;/li&gt; &#xA; &lt;li&gt;Nishang&lt;/li&gt; &#xA; &lt;li&gt;Orca&lt;/li&gt; &#xA; &lt;li&gt;PSBits&lt;/li&gt; &#xA; &lt;li&gt;PSReflect&lt;/li&gt; &#xA; &lt;li&gt;PowerLurk&lt;/li&gt; &#xA; &lt;li&gt;PowerPriv&lt;/li&gt; &#xA; &lt;li&gt;PowerSploit&lt;/li&gt; &#xA; &lt;li&gt;PowerUpSQL&lt;/li&gt; &#xA; &lt;li&gt;PrivExchange&lt;/li&gt; &#xA; &lt;li&gt;RottenPotatoNG&lt;/li&gt; &#xA; &lt;li&gt;Ruler&lt;/li&gt; &#xA; &lt;li&gt;SharpClipHistory&lt;/li&gt; &#xA; &lt;li&gt;SharpExchangePriv&lt;/li&gt; &#xA; &lt;li&gt;SharpExec&lt;/li&gt; &#xA; &lt;li&gt;SpoolSample&lt;/li&gt; &#xA; &lt;li&gt;SharpSploit&lt;/li&gt; &#xA; &lt;li&gt;ThreadContinue&lt;/li&gt; &#xA; &lt;li&gt;TikiTorch&lt;/li&gt; &#xA; &lt;li&gt;UACME&lt;/li&gt; &#xA; &lt;li&gt;impacket-examples-windows&lt;/li&gt; &#xA; &lt;li&gt;vssown&lt;/li&gt; &#xA; &lt;li&gt;Vulcan&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Information Gathering&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ADACLScanner&lt;/li&gt; &#xA; &lt;li&gt;ADExplorer&lt;/li&gt; &#xA; &lt;li&gt;ADOffline&lt;/li&gt; &#xA; &lt;li&gt;ADRecon&lt;/li&gt; &#xA; &lt;li&gt;BeRoot&lt;/li&gt; &#xA; &lt;li&gt;BloodHound&lt;/li&gt; &#xA; &lt;li&gt;BloodHound-Custom-Queries (Hausec)&lt;/li&gt; &#xA; &lt;li&gt;dnsrecon&lt;/li&gt; &#xA; &lt;li&gt;FOCA&lt;/li&gt; &#xA; &lt;li&gt;Get-ReconInfo&lt;/li&gt; &#xA; &lt;li&gt;GoBuster&lt;/li&gt; &#xA; &lt;li&gt;GoWitness&lt;/li&gt; &#xA; &lt;li&gt;Net-GPPPassword&lt;/li&gt; &#xA; &lt;li&gt;NetRipper&lt;/li&gt; &#xA; &lt;li&gt;Nmap&lt;/li&gt; &#xA; &lt;li&gt;PowerView &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dev branch included&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Privesc (enjoiz)&lt;/li&gt; &#xA; &lt;li&gt;Recon-AD&lt;/li&gt; &#xA; &lt;li&gt;SharpHound&lt;/li&gt; &#xA; &lt;li&gt;SharpView&lt;/li&gt; &#xA; &lt;li&gt;SpoolerScanner&lt;/li&gt; &#xA; &lt;li&gt;Watson&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kali Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kali-linux-default&lt;/li&gt; &#xA; &lt;li&gt;kali-linux-xfce&lt;/li&gt; &#xA; &lt;li&gt;VcXsrv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Networking Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Citrix Receiver&lt;/li&gt; &#xA; &lt;li&gt;OpenVPN&lt;/li&gt; &#xA; &lt;li&gt;Powercat&lt;/li&gt; &#xA; &lt;li&gt;Proxycap&lt;/li&gt; &#xA; &lt;li&gt;PuTTY&lt;/li&gt; &#xA; &lt;li&gt;Telnet&lt;/li&gt; &#xA; &lt;li&gt;VMWare Horizon Client&lt;/li&gt; &#xA; &lt;li&gt;VMWare vSphere Client&lt;/li&gt; &#xA; &lt;li&gt;VNC-Viewer&lt;/li&gt; &#xA; &lt;li&gt;WinSCP&lt;/li&gt; &#xA; &lt;li&gt;Windump&lt;/li&gt; &#xA; &lt;li&gt;Wireshark&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Password Attacks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASREPRoast&lt;/li&gt; &#xA; &lt;li&gt;CredNinja&lt;/li&gt; &#xA; &lt;li&gt;DomainPasswordSpray&lt;/li&gt; &#xA; &lt;li&gt;DSInternals&lt;/li&gt; &#xA; &lt;li&gt;Get-LAPSPasswords&lt;/li&gt; &#xA; &lt;li&gt;Hashcat&lt;/li&gt; &#xA; &lt;li&gt;Internal-Monologue&lt;/li&gt; &#xA; &lt;li&gt;Inveigh&lt;/li&gt; &#xA; &lt;li&gt;Invoke-TheHash&lt;/li&gt; &#xA; &lt;li&gt;KeeFarce&lt;/li&gt; &#xA; &lt;li&gt;KeeThief&lt;/li&gt; &#xA; &lt;li&gt;LAPSToolkit&lt;/li&gt; &#xA; &lt;li&gt;MailSniper&lt;/li&gt; &#xA; &lt;li&gt;Mimikatz&lt;/li&gt; &#xA; &lt;li&gt;Mimikittenz&lt;/li&gt; &#xA; &lt;li&gt;RiskySPN&lt;/li&gt; &#xA; &lt;li&gt;SessionGopher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reverse Engineering&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DNSpy&lt;/li&gt; &#xA; &lt;li&gt;Flare-Floss&lt;/li&gt; &#xA; &lt;li&gt;ILSpy&lt;/li&gt; &#xA; &lt;li&gt;PEview&lt;/li&gt; &#xA; &lt;li&gt;Windbg&lt;/li&gt; &#xA; &lt;li&gt;x64dbg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Utilities&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7zip&lt;/li&gt; &#xA; &lt;li&gt;Adobe Reader&lt;/li&gt; &#xA; &lt;li&gt;AutoIT&lt;/li&gt; &#xA; &lt;li&gt;Cmder&lt;/li&gt; &#xA; &lt;li&gt;CyberChef&lt;/li&gt; &#xA; &lt;li&gt;Explorer Suite&lt;/li&gt; &#xA; &lt;li&gt;Gimp&lt;/li&gt; &#xA; &lt;li&gt;Greenshot&lt;/li&gt; &#xA; &lt;li&gt;Hashcheck&lt;/li&gt; &#xA; &lt;li&gt;HeidiSQL&lt;/li&gt; &#xA; &lt;li&gt;Hexchat&lt;/li&gt; &#xA; &lt;li&gt;HTTP File Server (hfs)&lt;/li&gt; &#xA; &lt;li&gt;HxD&lt;/li&gt; &#xA; &lt;li&gt;Keepass&lt;/li&gt; &#xA; &lt;li&gt;MobaXterm&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Thunderbird&lt;/li&gt; &#xA; &lt;li&gt;Neo4j Community Edition&lt;/li&gt; &#xA; &lt;li&gt;NirLauncher&lt;/li&gt; &#xA; &lt;li&gt;Notepad++&lt;/li&gt; &#xA; &lt;li&gt;Pidgin&lt;/li&gt; &#xA; &lt;li&gt;Process Hacker 2&lt;/li&gt; &#xA; &lt;li&gt;qBittorrent&lt;/li&gt; &#xA; &lt;li&gt;SQLite DB Browser&lt;/li&gt; &#xA; &lt;li&gt;Screentogif&lt;/li&gt; &#xA; &lt;li&gt;Shellcode Launcher&lt;/li&gt; &#xA; &lt;li&gt;SimpleDNSCrypt&lt;/li&gt; &#xA; &lt;li&gt;SQLite DB Browser&lt;/li&gt; &#xA; &lt;li&gt;Sublime Text 3&lt;/li&gt; &#xA; &lt;li&gt;Tor Browser&lt;/li&gt; &#xA; &lt;li&gt;TortoiseSVN&lt;/li&gt; &#xA; &lt;li&gt;VLC Media Player&lt;/li&gt; &#xA; &lt;li&gt;yEd Graph Tool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vulnerability Analysis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AD Control Paths&lt;/li&gt; &#xA; &lt;li&gt;Egress-Assess&lt;/li&gt; &#xA; &lt;li&gt;Grouper2&lt;/li&gt; &#xA; &lt;li&gt;NtdsAudit&lt;/li&gt; &#xA; &lt;li&gt;PwnedPasswordsNTLM&lt;/li&gt; &#xA; &lt;li&gt;zBang&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Applications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Burp Suite&lt;/li&gt; &#xA; &lt;li&gt;Fiddler&lt;/li&gt; &#xA; &lt;li&gt;Firefox&lt;/li&gt; &#xA; &lt;li&gt;OWASP Zap&lt;/li&gt; &#xA; &lt;li&gt;Subdomain-Bruteforce&lt;/li&gt; &#xA; &lt;li&gt;Wfuzz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wordlists&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FuzzDB&lt;/li&gt; &#xA; &lt;li&gt;PayloadsAllTheThings&lt;/li&gt; &#xA; &lt;li&gt;SecLists&lt;/li&gt; &#xA; &lt;li&gt;Probable-Wordlists&lt;/li&gt; &#xA; &lt;li&gt;RobotsDisallowed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Legal Notice&lt;/h1&gt; &#xA;&lt;pre&gt;This download configuration script is provided to assist penetration testers&#xA;in creating handy and versatile toolboxes for offensive engagements. It provides &#xA;a convenient interface for them to obtain a useful set of pentesting Tools directly &#xA;from their original sources. Installation and use of this script is subject to the &#xA;Apache 2.0 License.&#xA; &#xA;You as a user of this script must review, accept and comply with the license&#xA;terms of each downloaded/installed package listed below. By proceeding with the&#xA;installation, you are accepting the license terms of each package, and&#xA;acknowledging that your use of each package will be subject to its respective&#xA;license terms.&#xA;&#xA;Licenses for each package can be found in the packages.csv file for this repository.&#xA;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>mantvydasb/RedTeaming-Tactics-and-Techniques</title>
    <updated>2022-06-16T01:50:19Z</updated>
    <id>tag:github.com,2022-06-16:/mantvydasb/RedTeaming-Tactics-and-Techniques</id>
    <link href="https://github.com/mantvydasb/RedTeaming-Tactics-and-Techniques" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Red Teaming Tactics and Techniques&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;description: My notes about all things red teaming experiments and more.&lt;/h2&gt; &#xA;&lt;h1&gt;What is ired.team?&lt;/h1&gt; &#xA;&lt;p&gt;This is publicly accessible personal notes at &lt;a href=&#34;https://ired.team&#34;&gt;https://ired.team&lt;/a&gt; and &lt;a href=&#34;https://github.com/mantvydasb/RedTeam-Tactics-and-Techniques&#34;&gt;https://github.com/mantvydasb/RedTeam-Tactics-and-Techniques&lt;/a&gt; about my pentesting / red teaming experiments in a controlled environment that involve playing with various tools and techniques used by penetration testers, red teams and actual adversaries.&lt;/p&gt; &#xA;&lt;p&gt;This is my way of learning things - by doing, following, tinkering, exploring, repeating and taking notes.&lt;/p&gt; &#xA;&lt;p&gt;At ired.team, I will explore some of the common offensive security techniques involving gaining code execution, code injection, defense evasion, lateral movement, persistence and more.&lt;/p&gt; &#xA;&lt;p&gt;Most of these techniques are discovered by other security researchers and I do not claim their ownership. I try to reference the sources I use the best I can, but if you think I&#39;ve missed something, please get in touch and I will fix it immediately.&lt;/p&gt; &#xA;&lt;p&gt;{% hint style=&#34;warning&#34; %}&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not take everything or anything in these notes for &lt;strong&gt;granted.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not expect the notes to be exhaustive or covering the techniques or the artifacts they produce in full.&lt;/li&gt; &#xA; &lt;li&gt;Expect mistakes in the notes.&lt;/li&gt; &#xA; &lt;li&gt;Always consult additional resources. {% endhint %}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;{% hint style=&#34;danger&#34; %} &lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; ****&lt;a href=&#34;https://ired.team&#34;&gt;ired.team&lt;/a&gt; Red Teaming Experiments GitBook is created by &lt;a href=&#34;https://twitter.com/spotheplanet&#34;&gt;@spotheplanet&lt;/a&gt;. &lt;br&gt; Cloning it and presenting it as your own is illegal and strictly forbidden, don&#39;t do it. {% endhint %}&lt;/p&gt; &#xA;&lt;p&gt;{% hint style=&#34;success&#34; %} &lt;strong&gt;Support and Donations&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you appreciate ired.team and would like to show support, you can do it via my:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://patreon.com/iredteam&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;paypal &lt;a href=&#34;mailto:mantvydo@gmail.com&#34;&gt;mantvydo@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BTC address &lt;code&gt;3Bi5xgtwUU9BfMejW7PQwhoMFA19x8Q7yp&lt;/code&gt; &lt;/li&gt; &#xA; &lt;li&gt;ETH address &lt;code&gt;0x03789987ca76812234d3F4839169Fb9988760fa1&lt;/code&gt; {% endhint %}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Goal&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is simple - read other researchers work, execute some common/uncommon attacking techniques in a lab environment, do my own reasearch and:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;understand how various cyber attacks and techniques can be executed and how they work&lt;/li&gt; &#xA; &lt;li&gt;learn about how malware is written&lt;/li&gt; &#xA; &lt;li&gt;write code to further understand the tools and techniques used by attackers and malware authors&lt;/li&gt; &#xA; &lt;li&gt;learn more about C++, Windows internals and Windows APIs&lt;/li&gt; &#xA; &lt;li&gt;see what artifacts the techniques and tools leave behind on the endpoint&lt;/li&gt; &#xA; &lt;li&gt;try out various industry tools for pentesting, coding, debugging, reverse engineering, malware analysis, and become more profficient in using them&lt;/li&gt; &#xA; &lt;li&gt;take notes for future reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Social&lt;/h2&gt; &#xA;&lt;p&gt;Follow me on twitter:&lt;/p&gt; &#xA;&lt;p&gt;{% embed url=&#34;&lt;a href=&#34;https://twitter.com/spotheplanet&#34;&gt;https://twitter.com/spotheplanet&lt;/a&gt;&#34; %}&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lintstar/LSTAR</title>
    <updated>2022-06-16T01:50:19Z</updated>
    <id>tag:github.com,2022-06-16:/lintstar/LSTAR</id>
    <link href="https://github.com/lintstar/LSTAR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LSTAR - CobaltStrike 综合后渗透插件&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LSTAR - Aggressor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;一个插件从上线到域控 实现内网漫游&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;本着简化 CS 右键和方便自己集成的目的，参考大量后渗透插件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;重构和丰富了主机相关凭据获取、多级内网穿透、隐蔽计划任务、免杀的 Mimikatz 和克隆添加用户等功能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能特性：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;通过配合 CobaltStrike 的 TCP、SMB、Proxy 等不出网主机上线方式，穿透复杂网络环境&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;针对 RDP 相关、AddUser、LsassDump 等功能提供多种免杀执行方式，应对冷门环境&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;集成多个使用 WinAPI 或 Assembly 内存加载方式运行的影子用户、隐蔽计划任务等免杀功能&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;主要包含以下功能模块：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115184528161.png&#34; alt=&#34;image-20220115184528161&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;每个模块均在运行前添加了绿色分割线，方便定位回显信息，提高协作效率&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211016170807973.png&#34; alt=&#34;image-20211016170807973&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;CobaltStrike 主机上线微信通知插件：&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;如果想使用免费且支持微信模板消息推送的方式可以移步：&lt;a href=&#34;https://github.com/lintstar/CS-PushPlus&#34;&gt;https://github.com/lintstar/CS-PushPlus&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;如果有订阅 ServerChan 的企业微信推送通道可以移步：&lt;a href=&#34;https://github.com/lintstar/CS-ServerChan&#34;&gt;https://github.com/lintstar/CS-ServerChan&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;免责申明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;本项目仅适用于安全研究及合法的企业安全建设行为 一切后果及责任均由使用者本人承担&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2022.1.15 更新&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;添加免杀的克隆用户、添加用户、计划任务功能&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;获取最新版向日葵识别码和验证码&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;集成 Ladon 9.1.1 版本多协议存活探测等功能&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;将功能进行分类 简化插件的二级菜单&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;InfoCollect&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;将常用命令按照场景进行了分类&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220114101130300.png&#34; alt=&#34;image-20220114101130300&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SharpGetInfo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;集成了 Ladon 公开最新的 9.1.1 版本&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229102143317.png&#34; alt=&#34;image-20211229102143317&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AntiVirusCheck&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;杀软信息本地回显 Beacon 状态栏&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;实现原理：&lt;a href=&#34;https://blog.csdn.net/weixin_42282189/article/details/121090055&#34;&gt;https://blog.csdn.net/weixin_42282189/article/details/121090055&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220112150926351.png&#34; alt=&#34;image-20220112150926351&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;IntrScan&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了 Ladon 的多协议存活探测（SMB、WMI、SNMP、HTTP、DNS、MAC、MSSQL）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;在一定程度上可以探测到防火墙后的内网资产：&lt;/strong&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/fwnCwL6qWaVvI_J8DAIBFA&#34;&gt;利用MAC绕过防火墙探测存活主机&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229171305053.png&#34; alt=&#34;image-20211229171305053&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;存活 IP 探测&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229171224738.png&#34; alt=&#34;image-20211229171224738&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AuthPromote&lt;/h2&gt; &#xA;&lt;h3&gt;BadPotato (BeichenDream)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;修复了只能执行 whoami 的 bug，可以通过参数运行上线 System 权限了&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220113165021408.png&#34; alt=&#34;image-20220113165021408&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220113165229359.png&#34; alt=&#34;image-20220113165229359&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Badpotato (Ladon)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了 Ladon 的 Badpotato&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229104134559.png&#34; alt=&#34;image-20211229104134559&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SweetPatato (Ladon)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229104432695.png&#34; alt=&#34;image-20211229104432695&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意：测试发现上述两种权限提升行为会被数字杀软拦截查杀&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211229103727123.png&#34; alt=&#34;image-20211229103727123&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AuthMaintain&lt;/h2&gt; &#xA;&lt;h3&gt;SharpSchTask&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;【谨慎使用】利用 Windows API，工具化创建隐藏的计划任务，同时绕过安全软件的阻断，达到持久控制。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/0x727/SchTask_0x727&#34;&gt;https://github.com/0x727/SchTask_0x727&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220114100528645.png&#34; alt=&#34;image-20220114100528645&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SharpShadowUser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;【谨慎使用】Bypass 远程内存加载克隆 隐蔽影子用户&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/An0nySec/ShadowUser&#34;&gt;https://github.com/An0nySec/ShadowUser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115175808998.png&#34; alt=&#34;image-20220115175808998&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;EasyPersistent&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;修复 PE 文件路径问题 可以正常使用 API 方式删除添加的用户&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115182612757.png&#34; alt=&#34;image-20220115182612757&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PassCapture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;对功能按照场景进行分类&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115172016468.png&#34; alt=&#34;image-20220115172016468&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SunFlower&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;获取最新版向日葵识别码和验证码&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;最新版向日葵的 base_encry_pwd 参数从 config.ini 更改到了注册表中&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115173453909.png&#34; alt=&#34;image-20220115173453909&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RemoteLogin&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;简化了二级菜单&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220115183414339.png&#34; alt=&#34;image-20220115183414339&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;BypassCXK&lt;/h2&gt; &#xA;&lt;h3&gt;SharpAddUser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bypass AV 利用 DirectoryService 命名空间将用户添加到管理员与远程桌面组&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/An0nySec/UserAdd&#34;&gt;https://github.com/An0nySec/UserAdd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220113152442668.png&#34; alt=&#34;image-20220113152442668&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CloneX&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;在命令行下进行添加用户、克隆用户操作的安全检测工具&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/0x727/CloneX_0x727&#34;&gt;https://github.com/0x727/CloneX_0x727&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20220113155017688.png&#34; alt=&#34;image-20220113155017688&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2021.10.18 更新&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;对整体功能模块进行了重新整合以及优化完善&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;横向移动模块新增 ZeroLogon 漏洞的BOF 实现&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;增加了一些 Assembly 方式运行无文件落地的功能&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;InfoCollect&lt;/h2&gt; &#xA;&lt;h3&gt;SharpGetInfo（一键收集主机信息）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用 Ladon 进行一键收集包括主机基础信息、网络信息、用户信息、进程信息、是否在域内等等&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211018111745511.png&#34; alt=&#34;image-20211018111745511&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SharpListRDP（RDP记录查询）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;收集 RDP 内连和外连记录，方便定位运维机以及横向移动&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211016174456005.png&#34; alt=&#34;image-20211016174456005&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;IntrScan&lt;/h2&gt; &#xA;&lt;h3&gt;Cube（模块化探测）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增 Cube 来代替旧版本的爆破，同时支持内网信息收集和 MSSQL 命令执行，详细用法参考运行说明&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015174007171.png&#34; alt=&#34;image-20211015174007171&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Allin（辅助灵活扫描）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增 Allin 来辅助灵活扫描，以远程获取网卡 IP 为例：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015173332706.png&#34; alt=&#34;image-20211015173332706&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SharpOXID-Find (OXID 探测)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;或者不想落地 EXE 时，可以使用 Assembly 方式进行 OXID 的快速探测&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211018112045735.png&#34; alt=&#34;image-20211018112045735&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;IntrAgent&lt;/h2&gt; &#xA;&lt;h3&gt;Stowaway （穿透多级内网）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;上传 agent 后运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211012100041529.png&#34; alt=&#34;image-20211012100041529&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;admin 端收到连接即可构建 Socks5 隧道&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211011203216542.png&#34; alt=&#34;image-20211011203216542&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;删除 agent&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211012094116014.png&#34; alt=&#34;image-20211012094116014&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PassCapture&lt;/h2&gt; &#xA;&lt;h3&gt;LsassDump（WinAPI）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;修改了 LsassDump 的运行方式 删除 LsassDump 的同时会一起删除转储的 C:\Windows\Temp\1.dmp&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211016174730994.png&#34; alt=&#34;image-20211016174730994&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mimidump（远程读取.dmp）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增配合 LsassDump（WinAPI）功能，远程读取目标机器转储的 C:\Windows\Temp\1.tmp（.net 4.5）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015094927257.png&#34; alt=&#34;image-20211015094927257&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RemoteLogin&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了使用 Powershell 开启 关闭以及查询 RDP 相关信息的方法&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211018113058495.png&#34; alt=&#34;image-20211018113058495&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PS 脚本来源于 Reference 中的黑魔鬼插件 RDP 模块&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;查询 RDP 状态&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015150247382.png&#34; alt=&#34;image-20211015150247382&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;开启 RDP 服务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015150320880.png&#34; alt=&#34;image-20211015150320880&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;获取 RDP 端口&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015150713858.png&#34; alt=&#34;image-20211015150713858&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;查看 RDP 历史登录凭据&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015150429336.png&#34; alt=&#34;image-20211015150429336&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;获取 RDP 历史登录凭据&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015150502487.png&#34; alt=&#34;image-20211015150502487&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LateMovement&lt;/h2&gt; &#xA;&lt;h3&gt;IPC 连接&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211018105021131.png&#34; alt=&#34;image-20211018105021131&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;票据传递&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211016173510988.png&#34; alt=&#34;image-20211016173510988&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ZeroLogonBOF&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了 ZeroLogon 漏洞的BOF 实现&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;参考：&lt;a href=&#34;https://github.com/rsmudge/ZeroLogon-BOF&#34;&gt;https://github.com/rsmudge/ZeroLogon-BOF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211014143141276.png&#34; alt=&#34;image-20211014143141276&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2021.09.05 更新&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;针对部分功能进行了 x86 架构机器的适配&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;增加了一些使用 WindowsAPI 的免杀小工具&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;内网扫描模块在运行对应功能时添加了参数提示输出&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IntrScan&lt;/h2&gt; &#xA;&lt;h3&gt;Fscan&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增根据目标机器架构上传对应 EXE 文件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905154601537.png&#34; alt=&#34;image-20210905154601537&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;添加了参数提示输出 方便针对性指定运行单个模块&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905161338995.png&#34; alt=&#34;image-20210905161338995&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Crack&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增 Crack 内网爆破工具&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905161656828.png&#34; alt=&#34;image-20210905161656828&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TailorScan&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增根据目标机器架构上传对应 EXE 文件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905160326319.png&#34; alt=&#34;image-20210905160326319&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PassCapture&lt;/h2&gt; &#xA;&lt;h3&gt;LaZagne&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;修复了V1.2 版本中由于网络问题导致的 LaZagne 还未运行结束&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;就被杀掉进程且删除落地文件的 BUG 改用手动方式运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210904175955070.png&#34; alt=&#34;image-20210904175955070&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LsassDump&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了使用 WindowsAPI 进行内存转储的 LsassDump 且支持 x86 和 x64机器&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210904180546301.png&#34; alt=&#34;image-20210904180546301&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;转储成功后生成的 &lt;code&gt; 1.dmp&lt;/code&gt; 会保存在 &lt;code&gt;C:\Windows\Temp\&lt;/code&gt; 目录&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20211015093809697.png&#34; alt=&#34;image-20211015093809697&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;直接本地读取即可：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210904183721654.png&#34; alt=&#34;image-20210904183721654&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LateMovement&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增了 RDP 相关功能：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905215527815.png&#34; alt=&#34;image-20210905215527815&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用 WindowsAPI 开启 RDP 服务&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210905215709267.png&#34; alt=&#34;image-20210905215709267&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2021.08.12 更新&lt;/h1&gt; &#xA;&lt;h2&gt;InfoCollect&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增 CheckVM 检测目标是否为虚拟机&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210808221427.png&#34; alt=&#34;20210808_2213&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AVSearch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;由于之前的脚本有一定概率失败：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210808222325403.png&#34; alt=&#34;image-20210808222325403&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;更新了新的检测杀软方式&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210808221945.png&#34; alt=&#34;image-20210808221945724&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AuthPromote&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;修复了之前提权模块的 BUG&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811105401.png&#34; alt=&#34;image-20210811105401723&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AuthMaintain&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;EasyPersistent：&lt;a href=&#34;https://github.com/yanghaoi/CobaltStrike_CNA&#34;&gt;https://github.com/yanghaoi/CobaltStrike_CNA&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;新增一个用于 Windows 系统上权限维持的 Cobalt Strike CNA 脚本&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用反射 DLL 模块通过 API 对系统服务、计划任务等常见权限维持方法进行可视化操作，非 常 好 用。（作者原话）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210812170907.png&#34; alt=&#34;image-20210812170907609&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;说明文档：&lt;a href=&#34;https://github.com/yanghaoi/CobaltStrike_CNA/raw/main/EasyCNA/README.md&#34;&gt;https://github.com/yanghaoi/CobaltStrike_CNA/blob/main/EasyCNA/README.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210812170946.png&#34; alt=&#34;image-20210812170946202&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PassCapture&lt;/h2&gt; &#xA;&lt;h3&gt;Mimikatz 相关&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811104834.png&#34; alt=&#34;image-20210811104834675&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lazagne&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;实战测试比较好用的检索主机密码工具 （上传运行后会自动删除 exe 文件）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811102145.png&#34; alt=&#34;image-20210811102145547&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;浏览器密码&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811105159.png&#34; alt=&#34;image-20210811105159479&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Navicat Xshell 等本机软件&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811105105.png&#34; alt=&#34;image-20210811105105056&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FakeTheScreen&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;优化了针对 Windows10和 Windows7不同的钓鱼密码窃取&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811095234.png&#34; alt=&#34;image-20210811095234252&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;由于伪造页面效果一言难尽，只建议在准备鱼死网破时使用：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/20210811094621.png&#34; alt=&#34;image-20210811094621414&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Reference&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pandasec888/taowu-cobalt-strike&#34;&gt;&lt;strong&gt;梼杌 - taowu-cobalt-strike&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/z1un/Z1-AggressorScripts&#34;&gt;&lt;strong&gt;Z1-AggressorScripts&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/422926799/csplugin&#34;&gt;&lt;strong&gt;九世自开-csplugin&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yanghaoi/CobaltStrike_CNA/raw/main/EasyCNA/README.md&#34;&gt;EasyPersistent Windows 权限维持&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SeaOf0/CSplugins&#34;&gt;&lt;strong&gt;黑魔鬼-CSplugins&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;InfoCollect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;添加了 Netview 和 Powerview 功能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707112534352.png&#34; alt=&#34;image-20210707112534352&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AvSearch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;通过 Wmic 进行进程查询&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707114047098.png&#34; alt=&#34;image-20210707114047098&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210706105117525.png&#34; alt=&#34;image-20210706105117525&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;IntrScan&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;包含各类内网大保健&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707112718120.png&#34; alt=&#34;image-20210707112718120&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;自定义指令运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210706110153336.png&#34; alt=&#34;image-20210706110153336&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;fscan 默认上传至 &lt;code&gt;C:\\Windows\\Temp\\&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210706110110475.png&#34; alt=&#34;image-20210706110110475&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;控制台返回&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210706110008931.png&#34; alt=&#34;image-20210706110008931&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;删除 fscan 及结果文本&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210706110809988.png&#34; alt=&#34;image-20210706110809988&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;IntrAgent&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;比较好用的内网穿透工具 且均无配置文件落地 降低被溯源风险&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707112750687.png&#34; alt=&#34;image-20210707112750687&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AuthMaintain&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;在梼杌的基础上 添加了白银票据和黄金票据&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707112856320.png&#34; alt=&#34;image-20210707112856320&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;LateMovement&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;包含 基于135端口的sharpwmi 等横向移动套件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707113642982.png&#34; alt=&#34;image-20210707113642982&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TraceClean&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;缝合九世的痕迹清理 待完善&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707113717904.png&#34; alt=&#34;image-20210707113717904&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BypassCxk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;cxk 限时免杀版 adduser 和 mimikatz&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707113737475.png&#34; alt=&#34;image-20210707113737475&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;HavingFun&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;搞站的日子里图一乐&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lintstar/LSTAR/master/image/image-20210707113749756.png&#34; alt=&#34;image-20210707113749756&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>