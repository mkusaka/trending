<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-03T01:51:23Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bluecapesecurity/PWF</title>
    <updated>2022-07-03T01:51:23Z</updated>
    <id>tag:github.com,2022-07-03:/bluecapesecurity/PWF</id>
    <link href="https://github.com/bluecapesecurity/PWF" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practical Windows Forensics Training&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Practical Windows Forensics&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Provided by Blue Cape Security, LLC&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/bluecapesecurity/bluecapesecurity/raw/main/BCS_banner.png&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;A quick DIY approach for performing a digital forensic analysis on a Windows 10 system&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;Links:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Early-bird registration for the full &lt;a href=&#34;https://bluecapesecurity.com/courses/practical-windows-forensics/&#34;&gt;11-hour Practical Windows Forensics (PWF) course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://discord.gg/94r5j9Vp&#34;&gt;Discord Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps TLDR:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare a Windows target VM&lt;/li&gt; &#xA; &lt;li&gt;Execute attack script (based on the AtomicRedTeam framework) on target VM&lt;/li&gt; &#xA; &lt;li&gt;Acquire memory and disk images&lt;/li&gt; &#xA; &lt;li&gt;Setup a Windows forensic VM&lt;/li&gt; &#xA; &lt;li&gt;Get started with your Windows forensic analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bluecapesecurity.com/build-your-lab/virtualization/&#34;&gt;VirtualBox or VMWare hypervisor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Host system requirements: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;4GB+ RAM for running Windows VMs (There are two VMs, but they do not have to run at the same time)&lt;/li&gt; &#xA;   &lt;li&gt;Disk storage for 2 x Windows VMs using about 20GB and 40GB, respectively. Additionally, you&#39;ll need around 30 GB for handling disk and memory images as well as additional files.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluecapesecurity/PWF/main/Investigation-roadmap.png&#34; alt=&#34;Investigation Roadmap&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Attack Scenario&lt;/h2&gt; &#xA;&lt;p&gt;The attack simulation script in this repo can be used to create a realistic compromise scenario on a Windows system. It leverages selected Atomic Red Team tests that simulate commonly observed techniques in real world attacks. The script &lt;code&gt;PWF/AtomicRedTeam/ART-attack.ps1&lt;/code&gt; first installs &lt;a href=&#34;https://github.com/redcanaryco/invoke-atomicredteam&#34;&gt;Invoke-AtomicRedTeam&lt;/a&gt; and then executes a number of techniques. The techniques executed in this script are highlited the MITRE ATT&amp;amp;CK framwork below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluecapesecurity/PWF/main/AtomicRedTeam/PWF_Analysis-MITRE.png&#34; alt=&#34;Attack Script&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preparation&lt;/h2&gt; &#xA;&lt;h3&gt;1 Prepare Target System&lt;/h3&gt; &#xA;&lt;p&gt;1.1) Download, import and configure the free Windows 10 test VM from the Microsoft developer site&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download: &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&#34;&gt;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import into VirtualBox and &lt;strong&gt;take a snapshot before the first start&lt;/strong&gt;. This allows rolling back after the attack or the VM expired.&lt;/li&gt; &#xA; &lt;li&gt;Start and log in to the VM. Credentials: &#34;IEUser&#34; and &#34;Passw0rd!&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pause Windows Updates&lt;/strong&gt; to avoid additional noise: Go to Settings -&amp;gt; Windows Update -&amp;gt; Advanced Options -&amp;gt; Pause updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Sysmon&lt;/strong&gt; for detailed event logging. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download the script in &lt;code&gt;PWF/Install-Sysmon/Install-Sysmon.ps1&lt;/code&gt; onto the system&lt;/li&gt; &#xA;   &lt;li&gt;Run PowerShell &lt;strong&gt;as administrator&lt;/strong&gt;, navigate to the script and execute it &lt;code&gt;.\Install-Sysmon.ps1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disable all Defender settings&lt;/strong&gt;: Before executing the attack, go to &#34;Virus &amp;amp; threat protection settings&#34; -&amp;gt; Manage settings -&amp;gt; Disable all the features shown. &lt;em&gt;Note that this is only a temporary solution and real-time protection will turn itself on automatically after a while&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;1.2) Execute the attack script on the target system&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the script in &lt;code&gt;PWF/AtomicRedTeam/ART-attack.ps1&lt;/code&gt; onto the system&lt;/li&gt; &#xA; &lt;li&gt;Run PowerShell &lt;strong&gt;as administrator!&lt;/strong&gt;, navigate to the script and &lt;span&gt;🔥&lt;/span&gt; &lt;em&gt;execute it&lt;/em&gt; &lt;span&gt;🔥&lt;/span&gt; &lt;code&gt;.\ART-attack.ps1&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ensure that the target VM has internet access as it will download the Invoke-AtomicRedTeam Framework. Furthermore, press [Y] Yes if PowerShell asks for installing additional features.&lt;/li&gt; &#xA;   &lt;li&gt;Verify that the powershell logs show successful executions of atomics. (If unsuccessful shut down the VM, revert to the previous snapshot and implement fixes before running the script again.)&lt;/li&gt; &#xA;   &lt;li&gt;Do &lt;strong&gt;not close any windows or processes&lt;/strong&gt; and proceed to the next step!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2 Disk and Memory - Data Acquisition&lt;/h3&gt; &#xA;&lt;p&gt;2.1) Pause the VM and take a snapshot&lt;/p&gt; &#xA;&lt;p&gt;2.2) Take an image of the VM memory&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create an &#34;evidence&#34; folder on the host system to store the following disk and memory images.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;VMWare memory acquisition&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;.vmwarevm&lt;/em&gt; directory of the VM in a terminal&lt;/li&gt; &#xA; &lt;li&gt;Copy the .vmem file your evidence folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;VirtualBox memory acquisition&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your terminal (Mac/Linux) or cmd (Windows) to run &lt;em&gt;vboxmanage&lt;/em&gt; (in Windows it is located under C:\Program Files\Oracle\VirtualBox)&lt;/li&gt; &#xA; &lt;li&gt;Identify the VM&#39;s UUID: &lt;code&gt;vboxmanage list vms&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a snapshot of the VM&#39;s memory: &lt;code&gt;vboxmanage debugvm &amp;lt;VM_UUID&amp;gt; dumpvmcore --filename win10-mem.raw&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2.3) Take an image of the VM disk&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upause and shut down the VM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;VMWare disk image acquisition&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Locate the VMDK split files in the VM&#39;s directory. These are all files ending with &lt;em&gt;.vmdk&lt;/em&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Depending on the number of snapshots there could be several versions of VMDK file sequences. In that case the sequence with the highest number in the name will be the one with the latest status e.g. as in &#34;Virtual Disk-XXX.vmdk&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export the vmdk image. There are two options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy all the split files of the latest sequence &#34;Virtual Disk-xxx.vmdk&#34; to &#34;Virtual Disk-xxx-s0016.vmdk&#34; into your evidence folder.&lt;/li&gt; &#xA;   &lt;li&gt;Alternatively, create a single VMDK from split files: &lt;code&gt;C:\Program Files (x86)\VMware\VMware Player\vmware-vdiskmanager.exe» -r «d:\VMLinux\vmdkname.vmdk» -t 0 MyNewImage.vmdk&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;VirtualBox disk image acquisition&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open terminal or cmd&lt;/li&gt; &#xA; &lt;li&gt;Identify the VM&#39;s UUID: &lt;code&gt;vboxmanage list vms&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Identify the VM&#39;s disk UUID: &lt;code&gt;vboxmanage showvminfo &amp;lt;VM_UUID&amp;gt;&lt;/code&gt; Note the UUID of the disk in row &lt;em&gt;IDE Controller&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Export the disk using the disk UUID into RAW format: &lt;code&gt;vboxmanage clonemedium disk &amp;lt;disk_UUID&amp;gt; --format raw win10-disk.raw&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2.4) Validate integrity of memory and disk images by creating SHA1 hashes and saving them in a text file along with the images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;: Open PowerShell and navigate to the folder. Obtain hashes by executing: &lt;code&gt;Get-FileHash -Algorithm SHA1 &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Mac/Linux&lt;/em&gt;: Open terminal and navigate to the folder. Obtain hashes by executing: &lt;code&gt;shasum &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Forensic Analysis&lt;/h2&gt; &#xA;&lt;h3&gt;3 Set up Your Forensic Workstation&lt;/h3&gt; &#xA;&lt;p&gt;3.1) Set up a forensic VM as outlined in the following link: &lt;a href=&#34;https://bluecapesecurity.com/build-your-forensic-workstation/&#34;&gt;https://bluecapesecurity.com/build-your-forensic-workstation/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is recommended to install a Windows 2019 Server VM from the Microsoft Evaluation Center. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a new VM in Virtualbox. Assign at least &lt;strong&gt;4 GB of RAM and 100 GB of disk storage with the dynamically allocated option&lt;/strong&gt; selected. This means the disk will start small (e.g. basic size of Windows 10-20 GB in size) and grows as we add more data.&lt;/li&gt; &#xA;   &lt;li&gt;Install VirtualBox Guest Additions and enable shared clipboard and file sharing with the evidence folder on the host system.&lt;/li&gt; &#xA;   &lt;li&gt;When the Windows system is installed, follow the instructions in the section &#34;Configure the Windows Environment – DFIR Best Practices&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;When the setup is complete, install the following tools: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Kali Linux subsystem, Volatility&lt;/li&gt; &#xA;   &lt;li&gt;Arsenal Image Mounter, FTK Imager, Eric Zimmerman Tools, KAPE, RegRipper, EventLog Explorer, Notepad++&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Take a snapshot once the setup is complete.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4 Forensic memory and disk analysis&lt;/h3&gt; &#xA;&lt;p&gt;With the forensic workstation installed and the evidence acquired, we can now beginn with the analysis of the memory and disk images. Some of the forensic artifacts that we want to investigate are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User accounts&lt;/li&gt; &#xA; &lt;li&gt;Program execution artifacts&lt;/li&gt; &#xA; &lt;li&gt;Persistence (run keys, scheduled tasks, startup scripts, Windows services)&lt;/li&gt; &#xA; &lt;li&gt;File creation and deletion (NTFS artifacts)&lt;/li&gt; &#xA; &lt;li&gt;PowerShell executions&lt;/li&gt; &#xA; &lt;li&gt;DLL process injection&lt;/li&gt; &#xA; &lt;li&gt;Office document analysis&lt;/li&gt; &#xA; &lt;li&gt;Timeline analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Happy forensicating!&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2022 &lt;a href=&#34;https://www.bluecapesecurity.com&#34;&gt;BlueCapeSecurity&lt;/a&gt; &lt;em&gt;Cyber Security Skills Training &amp;amp; Career Coaching&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer: The material is for educational purposes only! I do not assume and hereby disclaim any liability to any party for any errors, disruptions, damages, or other negative consequences resulting from applying the information that I share.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LeDragoX/Win-Debloat-Tools</title>
    <updated>2022-07-03T01:51:23Z</updated>
    <id>tag:github.com,2022-07-03:/LeDragoX/Win-Debloat-Tools</id>
    <link href="https://github.com/LeDragoX/Win-Debloat-Tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;These scripts will Customize, Debloat and Improve Privacy/Performance and System Responsiveness on Windows 10+.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;30px&#34; src=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/windows-11-logo.png&#34; style=&#34;vertical-align: bottom&#34;&gt; Win Debloat Tools (10+) &lt;img width=&#34;30px&#34; src=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/powershell-icon.png&#34; style=&#34;vertical-align: bottom&#34;&gt; &lt;/h1&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;i&gt;This Project was adapted from &lt;a href=&#34;https://github.com/W4RH4WK/Debloat-Windows-10&#34;&gt;W4RH4WK&#39;s Project&lt;/a&gt;&lt;/i&gt;&lt;/h2&gt; &#xA;&lt;p&gt;These scripts will Customize, Debloat and Improve Privacy/Performance and System Responsiveness on Windows 10+.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Use on a fresh windows install to note the differences.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;Disclaimer:&lt;/strong&gt; You&#39;re doing this at your own risk, I am not responsible for any data loss or damage that may occur.&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell-linter.yml&#34;&gt;&lt;img src=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell-linter.yml/badge.svg?style=flat&#34; alt=&#34;PSScriptAnalyzer&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/issues/LeDragoX/Win-Debloat-Tools?label=Issues&#34; alt=&#34;GitHub issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/LeDragoX/Win-Debloat-Tools?color=blue&amp;amp;label=License&#34; alt=&#34;GitHub&#34;&gt; &lt;a href=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/LeDragoX/Win-Debloat-Tools?label=Commits&#34; alt=&#34;Commit rate&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/LeDragoX/Win-Debloat-Tools/main?label=Last%20commit&#34; alt=&#34;GitHub last commit (branch)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/LeDragoX/Win-Debloat-Tools?label=Code%20size&#34; alt=&#34;GitHub code size in bytes&#34;&gt;&lt;/p&gt; &lt;/h1&gt; &#xA;&lt;h2&gt;🚀 Download Latest Version&lt;/h2&gt; &#xA;&lt;p&gt;Code located in the &lt;code&gt;main&lt;/code&gt; branch is considered stable, the &lt;code&gt;develop&lt;/code&gt; branch is the most recent version.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead align=&#34;center&#34;&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Download&lt;/th&gt; &#xA;    &lt;th&gt;Version(s) Supported&lt;/th&gt; &#xA;    &lt;th&gt;Edition(s)&lt;/th&gt; &#xA;    &lt;th&gt;PowerShell Version&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody align=&#34;center&#34;&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt; &lt;h4&gt;&lt;a href=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/archive/main.zip&#34;&gt;⬇️ Main - Stable&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;21H2 or Older&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Home / Pro&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;img width=&#34;20px&#34; src=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/powershell-icon.png&#34; style=&#34;vertical-align: bottom&#34;&gt; v5.1+&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt; &lt;h5&gt;&lt;a href=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/archive/develop.zip&#34;&gt;⬇️ Develop - Newer&lt;/a&gt;&lt;/h5&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔄️ Roll-Back&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If something breaks you can rely on:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A restoration point;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/repair-windows.ps1&#34;&gt;&lt;code&gt;repair-windows.ps1&lt;/code&gt;&lt;/a&gt; file or button on &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/Win10ScriptGUI.ps1&#34;&gt;&lt;code&gt;Win10ScriptGUI.ps1&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;If you want (almost) everything to it&#39;s original state, use the &lt;code&gt;Undo Tweaks&lt;/code&gt; button on &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/Win10ScriptGUI.ps1&#34;&gt;&lt;code&gt;Win10ScriptGUI.ps1&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;❗ Usage Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Win10Script(CLI/GUI).ps1&lt;/code&gt; do not make everything automatically, follow these steps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extract the &lt;code&gt;.zip&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;OpenTerminalHere.cmd&lt;/code&gt; (For beginners) or the Powershell as admin on it&#39;s folder.&lt;/li&gt; &#xA; &lt;li&gt;Enable execution of PowerShell scripts and Unblock PowerShell scripts and modules within this directory (Down below).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;GUI Version&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy and Paste this entire line below on &lt;strong&gt;Powershell&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&#34;Win10ScriptGUI.ps1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/script-gui.gif&#34; alt=&#34;Script GUI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The &lt;code&gt;Apply Tweaks&lt;/code&gt; button is the main one for debloating.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;CLI Version&lt;/strong&gt; (Minimal, good for automation)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy and Paste this entire line below on &lt;strong&gt;Powershell&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&#34;Win10ScriptCLI.ps1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts&#34;&gt;Scripts&lt;/a&gt; can be run individually, pick what you need.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✅ GUI Script Features&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;h3&gt;System Tweaks&lt;/h3&gt; &#xA; &lt;h4&gt;System Debloat Tools&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;Apply Tweaks&lt;/code&gt;: Run every Common Tweak scripts;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Undo Tweaks&lt;/code&gt;: Re-apply some tweaks and [Revert] all possible ones, covering the &lt;code&gt;Scheduled Tasks&lt;/code&gt;, &lt;code&gt;Services&lt;/code&gt;, &lt;code&gt;Privacy and Performance&lt;/code&gt;, &lt;code&gt;Personal&lt;/code&gt; and &lt;code&gt;Optional Features&lt;/code&gt; tweaks, then try to &lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Remove Xbox&lt;/code&gt;: Wipe Xbox Apps, disable Services related to Xbox and GameBar/GameDVR; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/remove-xbox.ps1&#34;&gt;&lt;code&gt;remove-xbox.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Install OneDrive&lt;/code&gt;: Tries to re-install the built-in OneDrive; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/install-onedrive.ps1&#34;&gt;&lt;code&gt;install-onedrive.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;: Rebloat Windows with all the Pre-Installed Apps; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/reinstall-pre-installed-apps.ps1&#34;&gt;&lt;code&gt;reinstall-pre-installed-apps.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Repair Windows&lt;/code&gt;: Try to Completely fix the Windows worst problems via Command Line; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/backup-system.ps1&#34;&gt;&lt;code&gt;backup-system.ps1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/repair-windows.ps1&#34;&gt;&lt;code&gt;repair-windows.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Show Debloat Info&lt;/code&gt;: Make an overall check-up from disabled and enabled Windows Components (Compare before and after applying tweaks, it&#39;s a great difference); (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/show-debloat-info.ps1&#34;&gt;&lt;code&gt;show-debloat-info.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Customize System Features&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;Dark Theme &amp;amp; Light Theme&lt;/code&gt;: Apply &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/use-dark-theme.reg&#34;&gt;Dark Theme&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/use-light-theme.reg&#34;&gt;Light Theme&lt;/a&gt; on Windows;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Activity History&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-activity-history.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-activity-history.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Activity History&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Background Apps&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-bg-apps.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-bg-apps.reg&#34;&gt;Disables&lt;/a&gt; &lt;em&gt;ALL&lt;/em&gt; the &lt;strong&gt;Background Apps&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Cortana&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-cortana.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-cortana.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Cortana&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Clipboard History&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-clipboard-history.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-clipboard-history.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Clipboard History&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Old Volume Control&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-old-volume-control.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-old-volume-control.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Old Volume Control (Win 7/8.1)&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Photo Viewer&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-photo-viewer.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-photo-viewer.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Photo Viewer (Win 7/8.1)&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable WSearch Service&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-wsearch-service.ps1&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-wsearch-service.ps1&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Windows Search Service&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Telemetry&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-telemetry.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-telemetry.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Windows Telemetry&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Xbox GameBar/DVR&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-game-bar-dvr.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-game-bar-dvr.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Xbox GameBar/DVR (In-Game)&lt;/strong&gt;;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Miscellaneous Features&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;Get H.265 video codec&lt;/code&gt;: Get the missing HEVC support to run H.265 videos through MS Store, it&#39;s a must have and not stock feature (Free and DIY).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable God Mode&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-god-mode.ps1&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-god-mode.ps1&#34;&gt;Disables&lt;/a&gt; the hidden Desktop folder &lt;strong&gt;God Mode&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Take Ownership menu&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-take-ownership-context-menu.reg&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-take-ownership-context-menu.reg&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Take Ownership context menu&lt;/strong&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enable/Disable Shutdown PC shortcut&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-shutdown-pc-shortcut.ps1&#34;&gt;Enables&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-shutdown-pc-shortcut.ps1&#34;&gt;Disables&lt;/a&gt; the &lt;strong&gt;Shutdown Computer desktop shortcut&lt;/strong&gt;;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Software Install&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;Upgrade All Packages&lt;/code&gt;: Upgrades all Softwares installed on your machine installed through &lt;em&gt;Winget&lt;/em&gt;, &lt;em&gt;Chocolatey&lt;/em&gt; (WSL will only update itself, not the distros installed)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Install Selected&lt;/code&gt;: Install the selected apps by marking the checkbox(es);&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Uninstall Mode&lt;/code&gt;: Default as OFF, clicking this will switch the &lt;code&gt;Install Selected&lt;/code&gt; button to &lt;code&gt;Uninstall Selected&lt;/code&gt; and uninstall every selected apps (&lt;strong&gt;Advice&lt;/strong&gt;: Blue colored buttons may not be able to uninstall completely and WSL UWP Apps, but WSL Distros will be unregistered);&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;☑️ Common Script Features&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Import all necessary Modules before Executing everything; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/&#34;&gt;lib folder&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Logs both script versions on &lt;code&gt;C:\Users\Username\AppData\Local\Temp\Win10-SDT-Logs&lt;/code&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;Make a Restore Point and Backup the Hosts file; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/backup-system.ps1&#34;&gt;&lt;code&gt;backup-system.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Install &lt;em&gt;Winget/Chocolatey&lt;/em&gt; by default; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/install-package-managers.ps1&#34;&gt;&lt;code&gt;install-package-managers.ps1&lt;/code&gt;&lt;/a&gt;) &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Auto-Update every available software via &lt;code&gt;Winget&lt;/code&gt; (12:00/day) and &lt;code&gt;Chocolatey&lt;/code&gt; (13:00/day);&lt;/li&gt; &#xA;    &lt;li&gt;Find the Scheduled Job on &lt;code&gt;Task Scheduler &amp;gt; &#34;Microsoft\Windows\PowerShell\ScheduledJobs\Chocolatey/Winget Daily Upgrade&#34;&lt;/code&gt;;&lt;/li&gt; &#xA;    &lt;li&gt;Register daily upgrade logs on &lt;code&gt;C:\Users\Username\AppData\Local\Temp\Win10-SDT-Logs&lt;/code&gt; and remove old log files;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Download AdwCleaner and Run the latest version of for Virus/Adware scan; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/silent-debloat-softwares.ps1&#34;&gt;&lt;code&gt;silent-debloat-softwares.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Download OOShutUp10 and import all Recommended settings;&lt;/li&gt; &#xA;  &lt;li&gt;Disable Telemetry from Scheduled Tasks and Optimize it; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-task-scheduler.ps1&#34;&gt;&lt;code&gt;optimize-task-scheduler.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Disable heavy Services, but enable some on SSDs for optimum performance; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-services.ps1&#34;&gt;&lt;code&gt;optimize-services.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Remove Bloatware UWP Apps that comes with Windows 10+, except from my choice; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/remove-bloatware-apps.ps1&#34;&gt;&lt;code&gt;remove-bloatware-apps.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Optimize Privacy by disabling more telemetry stuff and changing GPOs; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-privacy.ps1&#34;&gt;&lt;code&gt;optimize-privacy.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Optimize Performance by changing away from stock configurations that slowdowns the system; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-performance.ps1&#34;&gt;&lt;code&gt;optimize-performance.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Apply General Personalization tweaks via Registry and Powershell commands; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/personal-tweaks.ps1&#34;&gt;&lt;code&gt;personal-tweaks.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Help improve the Security of Windows while maintaining performance; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-security.ps1&#34;&gt;&lt;code&gt;optimize-security.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Remove OneDrive completely from the System, re-install is possible via Win Store; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/remove-onedrive.ps1&#34;&gt;&lt;code&gt;remove-onedrive.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Disable/Enable Windows Features specially for Gaming/Productivity; (&lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/optimize-windows-features.ps1&#34;&gt;&lt;code&gt;optimize-windows-features.ps1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⚡ Troubleshooting Known Issues&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For each issue, expand the issue you&#39;re looking for, and Open PowerShell as admin to copy + paste it&#39;s content:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Bring back Taskbar &lt;code&gt;Widgets&lt;/code&gt; (Windows 11) - See &lt;a href=&#34;https://github.com/LeDragoX/Win-Debloat-Tools/issues/7&#34;&gt;#7&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Press &lt;code&gt;Win + R&lt;/code&gt; then paste this protocol: &lt;code&gt;ms-windows-store://pdp/?ProductId=9MSSGKG348SP&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Then click &lt;code&gt;Get&lt;/code&gt;/&lt;code&gt;Install&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;After this, open the &lt;code&gt;Taskbar Settings&lt;/code&gt; and enable the &lt;code&gt;Widgets&lt;/code&gt; button again&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix &lt;code&gt;NVIDIA Control Panel&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Only this time (Recommended - Consumes less RAM after boot)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;Get-Service &#34;NVDisplay.ContainerLocalSystem&#34; | Set-Service -StartupType Manual -PassThru | Start-Service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Permanently (Keeps the service running along with the system)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;Get-Service &#34;NVDisplay.ContainerLocalSystem&#34; | Set-Service -StartupType Automatic -PassThru | Start-Service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sysprep will hang (Not Tested).&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;em&gt;No solution yet, do a Google search&lt;/em&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🏅 More Debloat Scripts (Community)&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;p&gt;The scripts are designed to run With/Without (GUI/CLI) any user interaction. Modify them beforehand. If you want a more interactive approach check out:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ChrisTitusTech/win10script&#34;&gt;win10script&lt;/a&gt; and &lt;a href=&#34;https://github.com/ChrisTitusTech/winutil&#34;&gt;winutil&lt;/a&gt; (Recommended) from &lt;a href=&#34;https://github.com/ChrisTitusTech&#34;&gt;ChrisTitusTech&lt;/a&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Sycnex/Windows10Debloater&#34;&gt;Windows10Debloater&lt;/a&gt; from &lt;a href=&#34;https://github.com/Sycnex&#34;&gt;Sycnex&lt;/a&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/farag2/Sophia-Script-for-Windows&#34;&gt;Sophia-Script-for-Windows&lt;/a&gt; from &lt;a href=&#34;https://github.com/farag2&#34;&gt;farag2&lt;/a&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/simeononsecurity/Windows-Optimize-Harden-Debloat&#34;&gt;Windows-Optimize-Harden-Debloat&lt;/a&gt; and &lt;a href=&#34;https://github.com/simeononsecurity/Windows-Optimize-Debloat&#34;&gt;Windows-Optimize-Debloat&lt;/a&gt; from &lt;a href=&#34;https://github.com/simeononsecurity&#34;&gt;SimeonOnSecurity&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🔧 Tweak Testers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All of &lt;em&gt;my friends and people&lt;/em&gt; who trusted on me to run the script;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yCr-shiddy&#34;&gt;yCr-shiddy&lt;/a&gt; - Helped giving more ideas and fixes;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤍 Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks to the &lt;a href=&#34;https://youtu.be/IU5F01oOzQQ?t=324&#34;&gt;LowSpecGamer&lt;/a&gt;, he is the reason i&#39;ve adapted this script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/W4RH4WK&#34;&gt;W4RH4WK&lt;/a&gt; (For his project ^^);&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📚 Used code references&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCjidjWX76LR1g5yx18NSrLA&#34;&gt;Adamx&#39;s&lt;/a&gt; - by &lt;a href=&#34;https://youtu.be/hQSkPmZRCjc&#34;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script);&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/baboo&#34;&gt;Baboo&#39;s&lt;/a&gt; - by &lt;a href=&#34;https://youtu.be/qWESrvP_uU8&#34;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and commands);&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCg6gPGh8HU2U01vaFCAsvmQ&#34;&gt;ChrisTitusTech&lt;/a&gt; - by having taught how to mess with PowerShell in &lt;a href=&#34;https://youtu.be/ER27pGt5wH0&#34;&gt;this Stream&lt;/a&gt; (and his &lt;em&gt;open-source&lt;/em&gt; debloat script);&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA&#34;&gt;Daniel Persson&lt;/a&gt; - by &lt;a href=&#34;https://youtu.be/EfrT_Bvgles&#34;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script explanation);&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/matthewjberger&#34;&gt;matthewjberger&lt;/a&gt; - by &lt;a href=&#34;https://gist.github.com/matthewjberger/2f4295887d6cb5738fa34e597f457b7f&#34;&gt;&lt;em&gt;this script&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MalwareBytes AdwCleaner&lt;/strong&gt; and &lt;strong&gt;O&amp;amp;O ShutUp10++&lt;/strong&gt; have their own licenses.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lawndoc/RanSim</title>
    <updated>2022-07-03T01:51:23Z</updated>
    <id>tag:github.com,2022-07-03:/lawndoc/RanSim</id>
    <link href="https://github.com/lawndoc/RanSim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ransomware simulation script written in PowerShell. The same script and key is used for decryption.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lawndoc/RanSim/main/RanSim.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;RanSim is a ransomware simulation script written in PowerShell. It recurisively encrypts files in the target directory using 256-bit AES encryption.&lt;/p&gt; &#xA;&lt;p&gt;You can use RanSim to test your defenses and backups against real ransomware-like activity in a controlled setting. The same script can be used to decrypt the files if needed.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Encrypt&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;.\RanSim.ps1 -Mode encrypt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Decrypt&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;.\RanSim.ps1 -Mode decrypt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Parameters and Defaults&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;-TargetPath&lt;/code&gt; -&amp;gt; C:\RanSim&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-Extension&lt;/code&gt; -&amp;gt; .encrypted&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-Key&lt;/code&gt; -&amp;gt; Q5KyUru6wn82hlY9k8xUjJOPIC9da41jgRkpt21jo2L=&lt;/p&gt; &#xA;&lt;h3&gt;Other Global Variables&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;TargetFiles&lt;/code&gt; -&amp;gt; .pdf .xls* .ppt* .doc* .accd* .rtf .txt .csv .jpg .jpeg .png .gif .avi .midi .mov mp3 .mp4 .mpeg .mpeg2 .mpeg3 .mpg .ogg&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The author of the &lt;a href=&#34;https://raw.githubusercontent.com/lawndoc/RanSim/main/FileCryptography.psm1&#34;&gt;FileCryptography.psm1&lt;/a&gt; is Tyler Siegrist, and he is also credited in the module&#39;s docstring.&lt;/p&gt;</summary>
  </entry>
</feed>