<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-08T01:49:28Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ly4k/BloodHound</title>
    <updated>2022-08-08T01:49:28Z</updated>
    <id>tag:github.com,2022-08-08:/ly4k/BloodHound</id>
    <link href="https://github.com/ly4k/BloodHound" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fork of BloodHound with PKI nodes and edges for Certipy along with some minor personal improvements&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a fork of &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound&#34;&gt;BloodHound&lt;/a&gt; with PKI nodes and edges for Certipy along with some minor personal improvements.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started with BloodHound&lt;/h1&gt; &#xA;&lt;p&gt;To get started with BloodHound, check out the &lt;a href=&#34;https://bloodhound.readthedocs.io/en/latest/index.html&#34;&gt;BloodHound docs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;About BloodHound&lt;/h1&gt; &#xA;&lt;p&gt;BloodHound is a single page Javascript web application, built on top of &lt;a href=&#34;http://linkurio.us/&#34;&gt;Linkurious&lt;/a&gt;, compiled with &lt;a href=&#34;http://electron.atom.io/&#34;&gt;Electron&lt;/a&gt;, with a &lt;a href=&#34;https://neo4j.com/&#34;&gt;Neo4j&lt;/a&gt; database fed by a C# data collector.&lt;/p&gt; &#xA;&lt;p&gt;BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory or Azure environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. Defenders can use BloodHound to identify and eliminate those same attack paths. Both blue and red teams can use BloodHound to easily gain a deeper understanding of privilege relationships in an Active Directory or Azure environment.&lt;/p&gt; &#xA;&lt;p&gt;BloodHound was created by &lt;a href=&#34;https://www.twitter.com/_wald0&#34;&gt;@_wald0&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/CptJesus&#34;&gt;@CptJesus&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;@harmj0y&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;BloodHound is maintained by the &lt;a href=&#34;https://bloodhoundenterprise.io/&#34;&gt;BloodHound Enterprise&lt;/a&gt; team.&lt;/p&gt; &#xA;&lt;h1&gt;About BloodHound Enterprise&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bloodhoundenterprise.io/&#34;&gt;BloodHound Enterprise&lt;/a&gt; is an Attack Path Management solution that continuously maps and quantifies Active Directory Attack Paths. You can remove millions, even billions of Attack Paths within your existing architecture and eliminate the attacker’s easiest, most reliable, and most attractive techniques.&lt;/p&gt; &#xA;&lt;h1&gt;Downloading BloodHound Binaries&lt;/h1&gt; &#xA;&lt;p&gt;Pre-Compiled BloodHound binaries can be found &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The rolling release will always be updated to the most recent source. Tagged releases are considered &#34;stable&#34; but will likely not have new features or fixes.&lt;/p&gt; &#xA;&lt;h1&gt;Creating example data&lt;/h1&gt; &#xA;&lt;p&gt;A sample database generator can be found &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound-Tools/tree/master/DBCreator&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create your own example Active Directory environment using &lt;a href=&#34;https://github.com/davidprowe/BadBlood&#34;&gt;BadBlood&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;BloodHound uses graph theory to reveal hidden relationships and attack paths in an Active Directory environment. Copyright (C) 2016-2019 Andrew Robbins, Rohan Vazarkar, Will Schroeder&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RomaissaAdjailia/Get-AppLockerEventlog</title>
    <updated>2022-08-08T01:49:28Z</updated>
    <id>tag:github.com,2022-08-08:/RomaissaAdjailia/Get-AppLockerEventlog</id>
    <link href="https://github.com/RomaissaAdjailia/Get-AppLockerEventlog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a repo for fetching Applocker event log by parsing the win-event log&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get-AppLockerEventlog&lt;/h1&gt; &#xA;&lt;h2&gt;DESCRIPTION&lt;/h2&gt; &#xA;&lt;p&gt;This script will parse all the channels of events from the win-event log to extract all the log relatives to AppLocker. The script will gather all the important pieces of information relative to the events for forensic or threat-hunting purposes, or even in order to troubleshoot. Here are the logs we fetch from win-event:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;EXE and DLL,&lt;/li&gt; &#xA; &lt;li&gt;MSI and Script,&lt;/li&gt; &#xA; &lt;li&gt;Packaged app-Deployment,&lt;/li&gt; &#xA; &lt;li&gt;Packaged app-Execution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The output:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The result will be displayed on the screen&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/RomaissaAdjailia/Get-AppLockerEventlog/main/Images/All-1.png&#34; alt=&#34;all&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And, The result will be saved to a csv file: &lt;strong&gt;AppLocker-log.csv&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RomaissaAdjailia/Get-AppLockerEventlog/main/Images/csv.png&#34; alt=&#34;csv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The juicy and useful information you will get with this script are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FileType,&lt;/li&gt; &#xA; &lt;li&gt;EventID,&lt;/li&gt; &#xA; &lt;li&gt;Message,&lt;/li&gt; &#xA; &lt;li&gt;User,&lt;/li&gt; &#xA; &lt;li&gt;Computer,&lt;/li&gt; &#xA; &lt;li&gt;EventTime,&lt;/li&gt; &#xA; &lt;li&gt;FilePath,&lt;/li&gt; &#xA; &lt;li&gt;Publisher,&lt;/li&gt; &#xA; &lt;li&gt;FileHash,&lt;/li&gt; &#xA; &lt;li&gt;Package&lt;/li&gt; &#xA; &lt;li&gt;RuleName,&lt;/li&gt; &#xA; &lt;li&gt;LogName,&lt;/li&gt; &#xA; &lt;li&gt;TargetUser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;PARAMETERS&lt;/h2&gt; &#xA;&lt;h3&gt;HunType&lt;/h3&gt; &#xA;&lt;p&gt;This parameter specifies the type of events you are interested in, there are 04 values for this parameter:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. All&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gets all the events of AppLocker that are interesting for threat-hunting, forensic or even troubleshooting. This is the default value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\Get-AppLockerEventlog.ps1 -HunType All&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RomaissaAdjailia/Get-AppLockerEventlog/main/Images/All-2.png&#34; alt=&#34;all&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Block&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gets all the events that are triggered by the action of blocking an application by AppLocker, this type is critical for threat-hunting or forensics, and comes with high priority, since it indicates malicious attempts, or could be a good indicator of prior malicious activity in order to evade defensive mechanisms.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\Get-AppLockerEventlog.ps1 -HunType Block |Format-Table -AutoSize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RomaissaAdjailia/Get-AppLockerEventlog/main/Images/Block-1.png&#34; alt=&#34;Block&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Allow&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gets all the events that are triggered by the action of Allowing an application by AppLocker. For threat-hunting or forensics, even the allowed applications should be monitored, in order to detect any possible bypass or configuration mistakes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\Get-AppLockerEventlog.ps1 -HunType Allow | Format-Table -AutoSize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RomaissaAdjailia/Get-AppLockerEventlog/main/Images/Allow-1.png&#34; alt=&#34;Allow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Audit&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gets all the events generated when AppLocker would block the application if the enforcement mode were enabled (Audit mode). For threat-hunting or forensics, this could indicate any configuration mistake, neglect from the admin to switch the mode, or even a malicious action that happened in the audit phase (tuning phase).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; .\Get-AppLockerEventlog.ps1 -HunType Audit&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resource&lt;/h2&gt; &#xA;&lt;p&gt;To better understand AppLocker :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@elromaissa2/diving-in-applocker-for-blue-team-57a7328ce5c0&#34;&gt;Diving in AppLocker for Blue Team — Part 1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/using-event-viewer-with-applocker&#34;&gt;https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/using-event-viewer-with-applocker&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skyfunkman2/sharkrdp</title>
    <updated>2022-08-08T01:49:28Z</updated>
    <id>tag:github.com,2022-08-08:/skyfunkman2/sharkrdp</id>
    <link href="https://github.com/skyfunkman2/sharkrdp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WINRDP&lt;/h1&gt; &#xA;&lt;p&gt;How to use&lt;/p&gt; &#xA;&lt;p&gt;Just Fork this Repository, Go to Actions tab, Select the Windows-CRD workflow. Then select Run Workflow fill the following data in CRD Code and your Pin in the fields. After that, Press Start.&lt;/p&gt; &#xA;&lt;p&gt;Input the following code in the fields.&lt;/p&gt; &#xA;&lt;p&gt;Get the Windows (Powershell) command from here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://remotedesktop.google.com/headless&#34;&gt;https://remotedesktop.google.com/headless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter you Six digit Pin code to Login&lt;/p&gt; &#xA;&lt;p&gt;(Any Six digit Pin)&lt;/p&gt; &#xA;&lt;p&gt;Thats it... After 2-3 min of Initialize, Check your CRD Application or Account.&lt;/p&gt;</summary>
  </entry>
</feed>