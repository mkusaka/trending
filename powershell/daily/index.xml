<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-10T01:37:07Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>milagrofrost/LED-Speed-Display</title>
    <updated>2022-11-10T01:37:07Z</updated>
    <id>tag:github.com,2022-11-10:/milagrofrost/LED-Speed-Display</id>
    <link href="https://github.com/milagrofrost/LED-Speed-Display" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LED Speed Display with TURBO!&lt;/h1&gt; &#xA;&lt;h2&gt;Powered by Powershell and C++&lt;/h2&gt; &#xA;&lt;h1&gt;What&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/milagrofrost/LED-Speed-Display/main/pics/The%20product.jpg&#34; alt=&#34;Faceplate&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/milagrofrost/LED-Speed-Display/main/pics/IRL-wiring.jpg&#34; width=&#34;290&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/milagrofrost/LED-Speed-Display/main/pics/systray.png&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LzP6FxHc00o&#34;&gt;https://www.youtube.com/watch?v=LzP6FxHc00o&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is replicating the gimmicky TURBO button and CPU and displays of the old 486-ish machines of yesteryear. But this is build is for those who&#39;d like to have the same retro feel and gimmicks for their modern machine!&lt;/p&gt; &#xA;&lt;p&gt;There are two main components of this build. An Arduino or ESP32/ESP8266 or similar microcontroller and then your Windows PC. These two components communicate with each other over serial to gather PC info and displaying it onto a 3 digit 7-segment display.&lt;/p&gt; &#xA;&lt;p&gt;Unlike those retro LED displays, this modern display shows 4 PC stats in real-ish time.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU clock speed&lt;/li&gt; &#xA; &lt;li&gt;GPU utilization (%)&lt;/li&gt; &#xA; &lt;li&gt;Network usage in Mbps&lt;/li&gt; &#xA; &lt;li&gt;Memory utilization (%)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of that, we can set our PC to TURBO MODE. Kind of. Using the latching button on the left, we can switch Power Plans on the Windows machine. From Balanced power plan to the TURBO power plan. You&#39;ll need to make the TURBO power plan yourself. Recommended to copy the High Performance power plan and just name it &#39;TURBO&#39;.&lt;/p&gt; &#xA;&lt;p&gt;And one more thing, The locking mechanism, in this code, will turn your network on and off. You first must speicfy which network adapter should be disabled/enabled by using the systray icon included in this install and selecting &#39;Network Adapter&#39; option.&lt;/p&gt; &#xA;&lt;p&gt;This program is powered by some powershell scripts. The Windows powershell scripts will run in a couple ways. One script that handles the microcontroller communication runs as a SYSTEM level service (as admin for power plan management and network disable/enable capabilities). The windows System service will be managed by the NSSM program (&lt;a href=&#34;https://nssm.cc/&#34;&gt;https://nssm.cc/&lt;/a&gt;). The other powershell script is installed as a Scheduled Task that will run when you log in. This script is a System Tray icon. It helps you manage a few configuration settings.&lt;/p&gt; &#xA;&lt;h1&gt;Why&lt;/h1&gt; &#xA;&lt;p&gt;Why not?&lt;/p&gt; &#xA;&lt;h1&gt;Where&lt;/h1&gt; &#xA;&lt;p&gt;The components needed to replicate my build are as such&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Evercool BOX-MK-SL (or BOX-MK-SL) Internal Storage Box 5.25&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microcenter.com/product/298576/evercool-box-mk-sl-internal-storage-box-525-drive-bay-insert-silver&#34;&gt;https://www.microcenter.com/product/298576/evercool-box-mk-sl-internal-storage-box-525-drive-bay-insert-silver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP32 D1 Mini ESP-WROOM-32&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/eGtrExP&#34;&gt;https://a.co/d/eGtrExP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MAX7219 0.56″ 3 or 4-Digit 7-Segment Display Board&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://protosupplies.com/product/max7219-0-56-3-or-4-digit-7-segment-display-board/&#34;&gt;https://protosupplies.com/product/max7219-0-56-3-or-4-digit-7-segment-display-board/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LED 7-Segment 0.56″ CC 3-Digit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://protosupplies.com/product/led-7-segment-0-56-cc-3-digit/?attribute_color=Green&#34;&gt;https://protosupplies.com/product/led-7-segment-0-56-cc-3-digit/?attribute_color=Green&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Metal Pushbutton - Momentary (16mm, Green)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sparkfun.com/products/11968&#34;&gt;https://www.sparkfun.com/products/11968&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Metal Pushbutton - Latching (16mm, Green)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sparkfun.com/products/11973&#34;&gt;https://www.sparkfun.com/products/11973&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Philmore 5/8&#34; On/Off Key Switch Lock&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/fJIEtMo&#34;&gt;https://a.co/d/fJIEtMo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;10k and 300 Ohm resistors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/4EwxWpH&#34;&gt;https://a.co/d/4EwxWpH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some jumper wires&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/0lW7d1C&#34;&gt;https://a.co/d/0lW7d1C&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A couple headers for the LED display board&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/fkqCiV5&#34;&gt;https://a.co/d/fkqCiV5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Heat Shrink tubing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/5dCLtir&#34;&gt;https://a.co/d/5dCLtir&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Internal USB header adapters so you can plug-in USB inside your machine for your microcontroller&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/4qWnlwN&#34;&gt;https://a.co/d/4qWnlwN&lt;/a&gt; (USB 3.0)&lt;/li&gt; &#xA; &lt;li&gt;or&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://a.co/d/0eBvKCO&#34;&gt;https://a.co/d/0eBvKCO&lt;/a&gt; (USB 2.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3D printed faceplate to replace the one for the Evercool box.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:5575163/files&#34;&gt;https://www.thingiverse.com/thing:5575163/files&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How?&lt;/h1&gt; &#xA;&lt;p&gt;Oh boy. Where to start?&lt;/p&gt; &#xA;&lt;p&gt;How about hardware?&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;p&gt;Grab the components listed above and a soldering iron and a lighter (to light it on fire if it gets to be too much and/or for the heat shrink tubing).&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve included a wiring diagram for this project in the git repo. As well as the diagram file that can be opened with Cirkit Designer if you really need to blow stuff up. In the diagram I&#39;m showing a different ESP32 than what I recommended in the parts list, but the GPIO pin numbers are the same between the two.&lt;/p&gt; &#xA;&lt;p&gt;Please don&#39;t negelct the resistors. The 10k Ohm resistors for the switches keeps the board from shorting out and the 300 Ohm resistors for the LED wires helps prolong the life of the LED by reducing power to it. Don&#39;t worry, they&#39;ll still be bright!&lt;/p&gt; &#xA;&lt;p&gt;Also don&#39;t neglect the heat shrink tubing. Cover all solder connections and exposed wires with the tubing. Shorting the board sucks. I did once and only once.&lt;/p&gt; &#xA;&lt;p&gt;I soldered short pin headers onto the MAX7219 0.56″ 3 or 4-Digit 7-Segment Display Board and used male to female wire jumpers to connect the board to the display.&lt;/p&gt; &#xA;&lt;p&gt;Green wires are not used on the two buttons.&lt;/p&gt; &#xA;&lt;p&gt;Jumper wires can be loose and not make good connections.&lt;/p&gt; &#xA;&lt;h2&gt;Software&lt;/h2&gt; &#xA;&lt;p&gt;Download/git this repo and extract/save it to anywhere on your machine. Downloads folder is fine.&lt;/p&gt; &#xA;&lt;h3&gt;Microcontroller&lt;/h3&gt; &#xA;&lt;p&gt;This is fairly easy. In this guide I&#39;m using the Arduino program to flash the code.&lt;/p&gt; &#xA;&lt;p&gt;Open the ino file in the &#34;3-digit-7-seg.c&#34; folder. Download the &#39;LEDControl&#39; library (NOT &#39;LedController&#39;). If you are using an ESP microcontroller, you need to edit the LEDControl library file in order for it to work with the ESP. Arduinos, you&#39;re good to go skip this step.&lt;/p&gt; &#xA;&lt;p&gt;Open this file on your Windows machine: YOUR MY DOCUMENTS FOLDER\Arduino\libraries\LedControl\src\LeDControl.h&lt;/p&gt; &#xA;&lt;p&gt;Replace the line &#34;#include &amp;lt;avr/pgmspace.h&amp;gt;&#34;&lt;/p&gt; &#xA;&lt;p&gt;with&lt;/p&gt; &#xA;&lt;p&gt;#if defined(AVR) #include &amp;lt;avr/pgmspace.h&amp;gt; #else //defined(AVR) #include &amp;lt;pgmspace.h&amp;gt; #endif //defined(AVR)&lt;/p&gt; &#xA;&lt;p&gt;Save that and now you can upload the microcontroller code to your ESP32.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;I think and hope and pray that I&#39;ve made a decent install script for you. It&#39;s worked for me on a couple blank-slate Windows machines.&lt;/p&gt; &#xA;&lt;p&gt;Before you run the install file, please make sure your ESP/microcontroller is connected to your computer. You&#39;ll be prompted to specify which Serial Device is the Microcontroller that is running the LED Speed Display code.&lt;/p&gt; &#xA;&lt;p&gt;You need to open Powershell AS ADMIN in order for the install script to run successfully. To run Powershell as admin, search for powershell in your Start menu, RIGHT CLICK on it and select &#39;Run as Adminstrator&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Next in the Admin Powershell console, navigate/cd to the folder of the install.ps1 file and run this command.&lt;/p&gt; &#xA;&lt;p&gt;Powershell.exe -executionpolicy bypass -file .\install.ps1&lt;/p&gt; &#xA;&lt;p&gt;INFO: This script will install a packagae manager called Chocolatey/Choco. This is soley used to install NSSM. Choco is pretty nice I recommend using it for installed all your programs.&lt;/p&gt; &#xA;&lt;p&gt;The only thing this script needs from you is to input a number that correlates with the device name of your Microcontreoller.&lt;/p&gt; &#xA;&lt;p&gt;After the install script finishes, you&#39;ll need to restart.&lt;/p&gt; &#xA;&lt;p&gt;And after the restart, the SYSTEM service should be running even before you login and then the system tray icon should be loaded when you login.&lt;/p&gt; &#xA;&lt;p&gt;If you want to Utilize the TURBO function you need to make a TURBO power plan, in your energy/power settings.&lt;/p&gt; &#xA;&lt;p&gt;If you want to utilize the Network locking/disabling function you need to specify which NEtwork adapter should be disbaled/enabled by right clicking on the LED Speed Display system tray icon and selecting NEtwork Adapter. There it will have a drop down of adapters that you can choose from. Choose the one that you use to connect to the internet.&lt;/p&gt; &#xA;&lt;h1&gt;Who&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m just a guy who dabbles in powershell and C++. Don&#39;t hurt me for making bad code. I&#39;m trying my best here!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pester/Pester</title>
    <updated>2022-11-10T01:37:07Z</updated>
    <id>tag:github.com,2022-11-10:/pester/Pester</id>
    <link href="https://github.com/pester/Pester" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pester is the ubiquitous test and mock framework for PowerShell.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pester&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💵 I am spending most of my weekends making this happen. These release notes for example took multiple days to write and update. Consider sponsoring &lt;a href=&#34;https://github.com/sponsors/nohwnd&#34;&gt;me&lt;/a&gt; or sponsoring &lt;a href=&#34;https://opencollective.com/pester&#34;&gt;Pester&lt;/a&gt;, please.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🌵 Documentation is available at &lt;a href=&#34;https://pester.dev/docs/quick-start&#34;&gt;https://pester.dev/docs/quick-start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📦🔐 Pester is now signed. &lt;code&gt;-SkipPublisherCheck&lt;/code&gt; should no longer be used to install from PowerShell Gallery on Windows 10.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👩👨 We are looking for contributors! All issues labeled &lt;a href=&#34;https://github.com/pester/Pester/labels/help%20wanted&#34;&gt;help wanted&lt;/a&gt; are up for grabs. They further split up into &lt;a href=&#34;https://github.com/pester/Pester/labels/good%20first%20issue&#34;&gt;good first issue&lt;/a&gt; that are issues I hope are easy to solve. &lt;a href=&#34;https://github.com/pester/Pester/labels/bad%20first%20issue&#34;&gt;Bad first issue&lt;/a&gt; where I expect the implementation to be problematic or needs to be proposed and discussed beforehand. And the rest which is somewhere in the middle. If you decide to pick up an issue please comment in the issue thread so others don&#39;t waste their time working on the same issue as you. There is also &lt;a href=&#34;https://pester.dev/docs/contributing/introduction&#34;&gt;contributor&#39;s guide&lt;/a&gt; that will hopefully help you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Pester is the ubiquitous test and mock framework for PowerShell.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;BeforeAll {&#xA;    # your function&#xA;    function Get-Planet ([string]$Name=&#39;*&#39;)&#xA;    {&#xA;        $planets = @(&#xA;            @{ Name = &#39;Mercury&#39; }&#xA;            @{ Name = &#39;Venus&#39;   }&#xA;            @{ Name = &#39;Earth&#39;   }&#xA;            @{ Name = &#39;Mars&#39;    }&#xA;            @{ Name = &#39;Jupiter&#39; }&#xA;            @{ Name = &#39;Saturn&#39;  }&#xA;            @{ Name = &#39;Uranus&#39;  }&#xA;            @{ Name = &#39;Neptune&#39; }&#xA;        ) | foreach { [PSCustomObject]$_ }&#xA;&#xA;        $planets | where { $_.Name -like $Name }&#xA;    }&#xA;}&#xA;&#xA;# Pester tests&#xA;Describe &#39;Get-Planet&#39; {&#xA;  It &#34;Given no parameters, it lists all 8 planets&#34; {&#xA;    $allPlanets = Get-Planet&#xA;    $allPlanets.Count | Should -Be 8&#xA;  }&#xA;&#xA;  Context &#34;Filtering by Name&#34; {&#xA;    It &#34;Given valid -Name &#39;&amp;lt;Filter&amp;gt;&#39;, it returns &#39;&amp;lt;Expected&amp;gt;&#39;&#34; -TestCases @(&#xA;      @{ Filter = &#39;Earth&#39;; Expected = &#39;Earth&#39; }&#xA;      @{ Filter = &#39;ne*&#39;  ; Expected = &#39;Neptune&#39; }&#xA;      @{ Filter = &#39;ur*&#39;  ; Expected = &#39;Uranus&#39; }&#xA;      @{ Filter = &#39;m*&#39;   ; Expected = &#39;Mercury&#39;, &#39;Mars&#39; }&#xA;    ) {&#xA;      param ($Filter, $Expected)&#xA;&#xA;      $planets = Get-Planet -Name $Filter&#xA;      $planets.Name | Should -Be $Expected&#xA;    }&#xA;&#xA;    It &#34;Given invalid parameter -Name &#39;Alpha Centauri&#39;, it returns `$null&#34; {&#xA;      $planets = Get-Planet -Name &#39;Alpha Centauri&#39;&#xA;      $planets | Should -Be $null&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Save this code example in a file named &lt;code&gt;Get-Planet.Tests.ps1&lt;/code&gt;, and run &lt;code&gt;Invoke-Pester Get-Planet.Tests.ps1&lt;/code&gt;, or just press &lt;code&gt;F5&lt;/code&gt; in VSCode.&lt;/p&gt; &#xA;&lt;p&gt;Learn how to &lt;a href=&#34;https://pester.dev/docs/quick-start&#34;&gt;start quick with Pester&lt;/a&gt; in our docs.&lt;/p&gt; &#xA;&lt;p&gt;The example above also has an &lt;a href=&#34;https://raw.githubusercontent.com/pester/Pester/main/docs/Examples/Planets&#34;&gt;annotated and production ready version here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Pester runs on Windows, Linux, MacOS and anywhere else thanks to PowerShell. It is compatible with Windows PowerShell 3, 4, 5, 6 and 7.&lt;/p&gt; &#xA;&lt;p&gt;Pester 3 comes pre-installed with Windows 10, but we recommend updating, by running this PowerShell command &lt;em&gt;as administrator&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module -Name Pester -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Not running Windows 10 or facing problems? See the &lt;a href=&#34;https://pester.dev/docs/introduction/installation&#34;&gt;full installation and update guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Test runner&lt;/h3&gt; &#xA;&lt;p&gt;Pester runs your tests and prints a nicely formatted output to the screen.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/output.PNG&#34; alt=&#34;test run output&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command line output is not the only output option, Pester also integrates with Visual Studio Code, Visual Studio, and any tool that can consume nUnit XML output.&lt;/p&gt; &#xA;&lt;h3&gt;Assertions&lt;/h3&gt; &#xA;&lt;p&gt;Pester comes with a suite of assertions that cover a lot of common use cases. Pester assertions range from very versatile, like &lt;code&gt;Should -Be&lt;/code&gt;, to specialized like &lt;code&gt;Should -Exists&lt;/code&gt;. Here is how you ensure that a file exists:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Describe &#39;Notepad&#39; {&#xA;    It &#39;Exists in Windows folder&#39; {&#xA;        &#39;C:\Windows\notepad.exe&#39; | Should -Exist&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more about assertions in &lt;a href=&#34;https://pester.dev/docs/assertions/should-command&#34;&gt;our documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mocking&lt;/h3&gt; &#xA;&lt;p&gt;Pester has mocking built-in. Using mocks you can easily replace functions with empty implementation to avoid changing the real environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;function Remove-Cache {&#xA;    Remove-Item &#34;$env:TEMP\cache.txt&#34;&#xA;}&#xA;&#xA;Describe &#39;Remove-Cache&#39; {&#xA;    It &#39;Removes cached results from temp\cache.text&#39; {&#xA;        Mock -CommandName Remove-Item -MockWith {}&#xA;&#xA;        Remove-Cache&#xA;&#xA;        Should -Invoke -CommandName Remove-Item -Times 1 -Exactly&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more &lt;a href=&#34;https://pester.dev/docs/usage/mocking&#34;&gt;about Mocking here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code coverage&lt;/h3&gt; &#xA;&lt;p&gt;Pester can measure how much of your code is covered by tests and export it to JaCoCo format that is easily understood by build servers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/jacoco.PNG&#34; alt=&#34;JaCoCo code coverage report&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learn more about &lt;a href=&#34;https://pester.dev/docs/usage/code-coverage&#34;&gt;code coverage here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build server integration&lt;/h3&gt; &#xA;&lt;p&gt;Pester integrates nicely with TFS, AppVeyor, TeamCity, Jenkins and other CI servers.&lt;/p&gt; &#xA;&lt;p&gt;Testing your scripts, and all pull requests on AppVeyor is extremely simple. Just commit this &lt;code&gt;appveyor.yml&lt;/code&gt; file to your repository, and select your repository on the AppVeyor website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: 1.0.{build}&#xA;image:&#xA;  - Visual Studio 2017&#xA;  - Ubuntu&#xA;install:&#xA;  - ps: Install-Module Pester -Force -Scope CurrentUser&#xA;build: off&#xA;test_script:&#xA;  - ps: Invoke-Pester -EnableExit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See it &lt;a href=&#34;https://ci.appveyor.com/project/nohwnd/planets&#34;&gt;in action here!&lt;/a&gt; If you do not need to test your scripts against PowerShell Core, just simply remove the entire line mentioning Ubuntu.&lt;/p&gt; &#xA;&lt;p&gt;Pester itself is built on AzureDevOps, and distributed mainly via PowerShell gallery.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nohwnd.visualstudio.com/Pester/_build/latest?definitionId=6&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://nohwnd.visualstudio.com/Pester/_apis/build/status/Pester%20PR?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/Pester&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/Pester.svg?label=latest+version&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/Pester&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/dt/Pester.svg?label=downloads&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Further reading&lt;/h2&gt; &#xA;&lt;p&gt;Do you like what you see? Learn how to use Pester with our &lt;a href=&#34;https://pester.dev/docs/quick-start&#34;&gt;quick start guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Got questions?&lt;/h2&gt; &#xA;&lt;p&gt;Got questions or you just want to get in touch? Use our issues page or one of these channels:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/PSPester&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/twitter-64.PNG&#34; alt=&#34;Pester Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pester&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/stack-overflow-64.PNG&#34; alt=&#34;Pester on StackOverflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://powershell.slack.com/messages/C03QKTUCS&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/slack-64.PNG&#34; alt=&#34;Testing channel on Powershell Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/powershell&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pester/Pester/main/images/readme/discord-64.PNG&#34; alt=&#34;Testing channel on Powershell Discord&#34;&gt;&lt;/a&gt; or try github discussions &lt;a href=&#34;https://github.com/pester/Pester/discussions&#34;&gt;&lt;img src=&#34;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&#34; alt=&#34;GitHub discussions&#34; height=&#34;64&#34;&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;p&gt;Pester is sponsored by &lt;a href=&#34;https://octopus.com&#34;&gt;Octopus Deploy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://octopus.com&#34;&gt;&lt;img src=&#34;https://octopus.com/images/company/OctopusDeploy-logo-RGB.svg?sanitize=true&#34; alt=&#34;Octopus deploy&#34; height=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As well as all the great folks on &lt;a href=&#34;https://opencollective.com/pester&#34;&gt;OpenCollective&lt;/a&gt; and &lt;a href=&#34;https://github.com/users/nohwnd/sponsorship#sponsors&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://raw.githubusercontent.com/pester/Pester/main/CONTRIBUTING.md&#34;&gt;Contribute code&lt;/a&gt;. &lt;a href=&#34;https://github.com/pester/Pester/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors on Open Collective&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. &lt;a href=&#34;https://opencollective.com/Pester/contribute&#34;&gt;Contribute to Pester Open Collective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/Pester&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. &lt;a href=&#34;https://opencollective.com/Pester/contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/Pester/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Pester/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/Pester/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>