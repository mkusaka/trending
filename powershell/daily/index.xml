<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-09T01:41:27Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PrateekKumarSingh/AzViz</title>
    <updated>2023-04-09T01:41:27Z</updated>
    <id>tag:github.com,2023-04-09:/PrateekKumarSingh/AzViz</id>
    <link href="https://github.com/PrateekKumarSingh/AzViz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ö° ‚òÅ Azure Visualizer aka &#39;AzViz&#39; : A #powershell module to automatically generate Azure resource topology diagrams by just typing a PowerShell cmdlet and passing the name of one or more Azure Resource groups&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ö° Azure Visualizer, aka &#39;AzViz&#39;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/AzViz&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/AzViz.svg?sanitize=true&#34; alt=&#34;PowerShell Gallery&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/AzViz&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/dt/AzViz.svg?sanitize=true&#34; alt=&#34;PowerShell Gallery&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/PrateekKumarSingh/AzViz.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://AzViz.readthedocs.io/en/latest/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/azviz/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.powershellgallery.com/packages/AzViz&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PrateekKumarSingh/AzViz.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Azure Visualizer aka &#39;AzViz&#39; - PowerShell module to automatically generate Azure resource topology diagrams by just typing a PowerShell cmdlet and passing the name of one or more Azure Resource Group(s).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Cloud admins are not anymore doomed to manually document a cloud environment! The pain of inheriting an undocumented cloud landscape to support is gone üòéüòâ so please share this project with your colleagues and friends.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/prateeksingh&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is capable of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Finding Resources in a Azure Resource Group and identifying their dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Plot nodes and edges to represent Azure Resources and their dependencies on a graph.&lt;/li&gt; &#xA; &lt;li&gt;Insert appropriate Azure Icons on basis of resource category/sub-category.&lt;/li&gt; &#xA; &lt;li&gt;Label each resource with information like Name, Category, Type etc.&lt;/li&gt; &#xA; &lt;li&gt;Generate visualization in formats like: .png and .svg&lt;/li&gt; &#xA; &lt;li&gt;Output image can be in &#39;light&#39;, &#39;dark&#39; or &#39;neon&#39; theme.&lt;/li&gt; &#xA; &lt;li&gt;Can target more than one resource group at once.&lt;/li&gt; &#xA; &lt;li&gt;Change direction in which resource groups are plotted, i.e, left-to-right or top-to-bottom.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/raw/master/img/themeneon.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks and shoutouts&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Special thanks &amp;amp; shoutout to &lt;a href=&#34;https://twitter.com/KevinMarquette&#34;&gt;&lt;code&gt;Kevin Marquette&lt;/code&gt;&lt;/a&gt; and his &lt;a href=&#34;https://www.powershellgallery.com/packages/PSGraph/2.1.38.27&#34;&gt;&lt;code&gt;PSGraph&lt;/code&gt;&lt;/a&gt; module which seeded the idea for programmatical approach to Azure Visualization while I was working with Kevin&#39;s module. And without which &#39;AzViz&#39; module won&#39;t be possible! ‚ô•üëç&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Demo Video - Youtube&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7rsNGJ-QmEA&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/7rsNGJ-QmEA/0.jpg&#34; alt=&#34;Demo Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisite&lt;/h2&gt; &#xA;&lt;p&gt;We need to install GraphViz on our system before we can proceed with using the &#39;AzViz&#39; PowerShell module. Depending upon the operating system you are using please follow the below mentioned steps:&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ubuntu&#xA;$ sudo apt install graphviz&#xA;&#xA;# Fedora&#xA;$ sudo yum install graphviz&#xA;&#xA;# Debian&#xA;$ sudo apt install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# chocolatey packages Graphviz for Windows&#xA;choco install graphviz&#xA;&#xA;# alternatively using windows package manager&#xA;winget install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;brew install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;From PowerShell Gallery&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# install from powershell gallery&#xA;Install-Module -Name AzViz -Scope CurrentUser -Repository PSGallery -Force&#xA;&#xA;# import the module&#xA;Import-Module AzViz&#xA;&#xA;# login to azure, this is required for module to work&#xA;Connect-AzAccount&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clone the project from GitHub&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# optionally clone the project from github&#xA;git clone https://github.com/PrateekKumarSingh/AzViz.git&#xA;Set-Location .\AzViz\AzViz&#xA;   &#xA;# import the powershell module&#xA;Import-Module .\AzViz.psm1 -Verbose&#xA;&#xA;# login to azure, this is required for module to work&#xA;Connect-AzAccount&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use?&lt;/h2&gt; &#xA;&lt;h3&gt;Target Single Resource Group&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# target single resource group&#xA;Export-AzViz -ResourceGroup demo-2 -Theme light -OutputFormat png -Show&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/raw/master/img/SingleResourceGroup.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Target Single Resource Group with more sub-categories&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# target single resource group with more sub-categories&#xA;Export-AzViz -ResourceGroup demo-2 -Theme light -OutputFormat png -Show -CategoryDepth 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/raw/master/img/SingleResourceGroupSubCategories.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Target Multiple Resource Groups&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# target multiple resource groups&#xA;Export-AzViz -ResourceGroup demo-2, demo-3 -LabelVerbosity 1 -CategoryDepth 1 -Theme light -Show -OutputFormat png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/raw/master/img/MultipleResourceGroups.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add Verbosity to Resource Label&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# adding more information in resource label like: Name, type, Provider etc&#xA;Export-AzViz -ResourceGroup demo-2 -Theme light -OutputFormat png -Show -LabelVerbosity 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PrateekKumarSingh/AzViz/raw/master/img/LabelVerbosity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Change Log&lt;/h2&gt; &#xA;&lt;h3&gt;v1.2.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed casing for &lt;code&gt;loadbalancer.png&lt;/code&gt; in &lt;code&gt;AzViz/src/private/Images.ps1&lt;/code&gt; to match the filename for &lt;code&gt;AzViz/icons/LoadBalancers.png&lt;/code&gt; as AzViz could not find the icon when run from pwsh on a Linux VM. &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/pull/59&#34;&gt;pull-request&lt;/a&gt; by &lt;a href=&#34;https://github.com/madsaune&#34;&gt;@madsaune&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handled condition to skip resources out of resource group, this should fix &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues/37&#34;&gt;issue#37&lt;/a&gt; and &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues/39&#34;&gt;issue#39&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Handled period in resource group name, this should fix &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues/41&#34;&gt;issue#41&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If there are no edges between the nodes, then graph legends are not plotted, this should fix &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues/38&#34;&gt;issue#38&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Empty resource groups skips, resource visualization for all later targets, this should fix &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/issues/50&#34;&gt;issue#50&lt;/a&gt;. Thanks &lt;a href=&#34;https://github.com/madsaune&#34;&gt;@madsaune&lt;/a&gt; finding the bug and creating the issue.&lt;/li&gt; &#xA; &lt;li&gt;Add Vnet-only resource groups to graph visualization. Special thanks to &lt;a href=&#34;https://github.com/madsaune&#34;&gt;@madsaune&lt;/a&gt; for the &lt;a href=&#34;https://github.com/PrateekKumarSingh/AzViz/pull/52&#34;&gt;pull-request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.1.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Network infra and the associated resources are represented in much better way&lt;/li&gt; &#xA; &lt;li&gt;Improve network diagrams with Virtual Networks containing Subnets and resources&lt;/li&gt; &#xA; &lt;li&gt;Azure Icons with labels showing informarion on Subscriptions, RGs, VNet, Subnets&lt;/li&gt; &#xA; &lt;li&gt;Excluding Azure resource types/providers&lt;/li&gt; &#xA; &lt;li&gt;Supports empty virtual networks&lt;/li&gt; &#xA; &lt;li&gt;Improved dark and neon themes&lt;/li&gt; &#xA; &lt;li&gt;Supports diagram legends&lt;/li&gt; &#xA; &lt;li&gt;Bug Fixes&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mps256/vicuna.ps1</title>
    <updated>2023-04-09T01:41:27Z</updated>
    <id>tag:github.com,2023-04-09:/mps256/vicuna.ps1</id>
    <link href="https://github.com/mps256/vicuna.ps1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a PowerShell script that automates the process of setting up and running VICUNA on a CPU (without a graphics card) using the llama.cpp library and a pre-trained ggml-vicuna-13b-4bit.bin model. The script downloads and extracts the required files, creates a batch file to run VICUNA, and creates a desktop shortcut to launch the batch file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://aeiljuispo.cloudimg.io/v7/https://s3.amazonaws.com/moonup/production/uploads/62d35f3ceaf3858ce253ab7a/uZ2jFNAjXfdBo6c6Yojmg.jpeg?w=200&amp;amp;h=200&amp;amp;f=face&#34; alt=&#34;VICUNA CPU Script&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Automatic installation script for Vicuna (CPU-only)&lt;/h1&gt; &#xA;&lt;p&gt;Vicuna-13B is a free chatbot trained on user-shared conversations from ShareGPT, fine-tuned from the LLaMA model. It outperformed other models like OpenAI ChatGPT, Google Bard, LLaMA, and Stanford Alpaca in more than 90% of cases.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is a PowerShell script that automates the process of setting up and running VICUNA on a CPU (without a graphics card) using the llama.cpp library and a pre-trained GGML Vicuna model. The script downloads and extracts the required files, creates a batch file to run VICUNA, and creates a desktop shortcut to launch the batch file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux and macOS scripts are currently being developed and will be available in the near future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows operating system&lt;/li&gt; &#xA; &lt;li&gt;PowerShell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The script requires a minimum of 6GB of RAM (slow / 7b model), and 32GB+ (medium to fast speeds / 13b model) is recommended.&lt;/p&gt; &#xA;&lt;h2&gt;Automatic installation (Recommended)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To automatically install the program, follow these steps (Right-Click your mouse to paste the commands):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Press &lt;code&gt;Windows&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;, type &lt;code&gt;powershell&lt;/code&gt;, and hit enter.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;Set-ExecutionPolicy RemoteSigned -Scope CurrentUser&lt;/code&gt;, press Y, and hit enter.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;irm bit.ly/vicuna_ps1 | iex&lt;/code&gt; and hit enter.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Manual installation (Optional)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;vicuna.ps1&lt;/code&gt; script to your computer.&lt;/li&gt; &#xA; &lt;li&gt;Open PowerShell and navigate to the directory where the script is saved.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;Set-ExecutionPolicy RemoteSigned -Scope CurrentUser&lt;/code&gt; to allow remote scripts.&lt;/li&gt; &#xA; &lt;li&gt;Run the script using the command &lt;code&gt;.\vicuna-cpu.ps1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow the on-screen instructions to complete the setup process.&lt;/li&gt; &#xA; &lt;li&gt;Once setup is complete, double-click the &#34;VICUNA&#34; shortcut on your desktop to run VICUNA.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;speed = 2 * log2(ram_gb / 10) + 1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        |       Speed&#xA;        |   Slow   Medium    Fast &#xA;     -----------------------------&#xA;        |         &#xA;    3   |          &#xA;        |          &#xA;    2   |        * &#xA;        |    *     &#xA;    1   | *        &#xA;        |_____________________________&#xA;             10GB      32GB+       RAM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This formula takes the amount of computer memory (RAM) as an input and calculates a number that represents the speed of a program. The more RAM you have, the faster the program will run.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ChatGPT 4 note below: &lt;img src=&#34;https://i.imgur.com/DEmSt3g.png&#34; alt=&#34;GPT4 Response&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Planned Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for macOS and Linux operating systems&lt;/li&gt; &#xA; &lt;li&gt;Automated setup for required dependencies and libraries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issues while running the script, please check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure that your computer meets the minimum RAM requirements.&lt;/li&gt; &#xA; &lt;li&gt;Check that PowerShell is running as an administrator.&lt;/li&gt; &#xA; &lt;li&gt;Ensure that your internet connection is stable and not blocking any downloads.&lt;/li&gt; &#xA; &lt;li&gt;Check that your antivirus software is not blocking any downloads or scripts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you continue to experience issues, please contact the developer for assistance.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;This is a joint effort with collaborators from multiple institutions, including UC Berkeley, CMU, Stanford, UC San Diego, and MBZUAI.&lt;/p&gt; &#xA;&lt;p&gt;Students (alphabetical order): Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang&lt;/p&gt; &#xA;&lt;p&gt;Advisors (alphabetical order): Joseph E. Gonzalez, Ion Stoica, Eric P. Xing &lt;a href=&#34;https://vicuna.lmsys.org/&#34;&gt;LMSYS&lt;/a&gt; Special thanks to eachadea (Chad Ea-Nasir II) for their 4-bit quantized model and &lt;a href=&#34;https://www.youtube.com/@SpreadSheetWarrior&#34;&gt;SpreadSheetWarrior&lt;/a&gt; for their tutorial on running VICUNA on CPU.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;We would like to thank Xinyang Geng, Hao Liu, and Eric Wallace from BAIR; Xuecheng Li, and Tianyi Zhang from Stanford Alpaca team for their insightful discussion and feedback. BAIR will have another blog post soon for a concurrent effort on their chatbot, Koala.&lt;/p&gt;</summary>
  </entry>
</feed>