<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PowerShell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-22T01:36:59Z</updated>
  <subtitle>Daily Trending of PowerShell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ScoopInstaller/Install</title>
    <updated>2022-11-22T01:36:59Z</updated>
    <id>tag:github.com,2022-11-22:/ScoopInstaller/Install</id>
    <link href="https://github.com/ScoopInstaller/Install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“¥ Next-generation Scoop (un)installer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scoop (un)installer&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/powershell&#34;&gt;PowerShell&lt;/a&gt; latest version or &lt;a href=&#34;https://aka.ms/wmf5download&#34;&gt;Windows PowerShell 5.1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PowerShell execution policy is required to be one of: &lt;code&gt;Unrestricted&lt;/code&gt;, &lt;code&gt;RemoteSigned&lt;/code&gt; or &lt;code&gt;ByPass&lt;/code&gt; to execute the installer. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Typical Installation&lt;/h3&gt; &#xA;&lt;p&gt;Run this command from a &lt;strong&gt;non-admin&lt;/strong&gt; PowerShell to install scoop with default configuration, scoop will be install to &lt;code&gt;C:\Users\&amp;lt;YOUR USERNAME&amp;gt;\scoop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm get.scoop.sh | iex&#xA;# You can use proxies if you have network trouble in accessing GitHub, e.g.&#xA;irm get.scoop.sh -Proxy &#39;http://&amp;lt;ip:port&amp;gt;&#39; | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you want to have an advanced installation. You can download the installer and manually execute it with parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm get.scoop.sh -outfile &#39;install.ps1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see all configurable parameters of the installer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\install.ps1 -?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, install scoop to a custom directory, configure scoop to install global programs to a custom directory, and bypass system proxy while installation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\install.ps1 -ScoopDir &#39;D:\Applications\Scoop&#39; -ScoopGlobalDir &#39;F:\GlobalScoopApps&#39; -NoProxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use the legacy method to configure custom directory by setting Environment Variables. (&lt;strong&gt;Not Recommended&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$env:SCOOP=&#39;D:\Applications\Scoop&#39;&#xA;$env:SCOOP_GLOBAL=&#39;F:\GlobalScoopApps&#39;&#xA;[Environment]::SetEnvironmentVariable(&#39;SCOOP_GLOBAL&#39;, $env:SCOOP_GLOBAL, &#39;Machine&#39;)&#xA;irm get.scoop.sh | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Admin&lt;/h4&gt; &#xA;&lt;p&gt;Installation under the administrator console has been disabled by default for security considerations. If you know what you are doing and want to install Scoop as administrator. Please download the installer and manually execute it with the &lt;code&gt;-RunAsAdmin&lt;/code&gt; parameter in an elevated console. Here is the example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm get.scoop.sh -outfile &#39;install.ps1&#39;&#xA;.\install.ps1 -RunAsAdmin [-OtherParameters ...]&#xA;# I don&#39;t care about other parameters and want a one-line command&#xA;iex &#34;&amp;amp; {$(irm get.scoop.sh)} -RunAsAdmin&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Silent Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can redirect all outputs to Out-Null or a log file to silence the installer. And you can use &lt;code&gt;$LASTEXITCODE&lt;/code&gt; to check the installation result, it will be &lt;code&gt;0&lt;/code&gt; when the installation success.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Omit outputs&#xA;.\install.ps1 [-Parameters ...] | Out-Null&#xA;# Or collect logs&#xA;.\install.ps1 [-Parameters ...] &amp;gt; install.log&#xA;# Get result&#xA;$LASTEXITCODE&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>