<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-14T02:02:50Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>velocyto-team/velocyto.R</title>
    <updated>2023-05-14T02:02:50Z</updated>
    <id>tag:github.com,2023-05-14:/velocyto-team/velocyto.R</id>
    <link href="https://github.com/velocyto-team/velocyto.R" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RNA velocity estimation in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;velocyto.R&lt;/h1&gt; &#xA;&lt;p&gt;RNA velocity estimation in R&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;p&gt;velocyto.R can be installed on unix-flavored systems, and requires the following key elements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++11&lt;/li&gt; &#xA; &lt;li&gt;Open MP support&lt;/li&gt; &#xA; &lt;li&gt;boost libaries&lt;/li&gt; &#xA; &lt;li&gt;igraph library&lt;/li&gt; &#xA; &lt;li&gt;hdf5c++ library (as required by the h5 R package to support loom files)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install velocyto.R is using devtools::install_github() from R:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(devtools)&#xA;install_github(&#34;velocyto-team/velocyto.R&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to have boost (e.g. &lt;code&gt;sudo apt-get install libboost-dev&lt;/code&gt;) and openmp libraries installed. You can see detailed installation commands in the dockers/debian9/Dockerfile.&lt;/p&gt; &#xA;&lt;h3&gt;Dockers&lt;/h3&gt; &#xA;&lt;p&gt;If you are having trouble installing the package on your system, you can build a docker instance that can be used on a wide range of systems and cloud environments. To install docker framework on your system see &lt;a href=&#34;https://github.com/wsargent/docker-cheat-sheet#installation&#34;&gt;installation instruction&lt;/a&gt;. After installing the docker system, use the following commands to build a velocyto.R docker instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd velocyto.R/dockers/debian9&#xA;docker build -t velocyto .&#xA;docker run --name velocyto -it velocyto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://pklab.med.harvard.edu/velocyto/notebooks/R/chromaffin2.nb.html&#34;&gt;Chromaffin / SMART-seq2&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The example shows how to annotate SMART-seq2 reads from bam file and estimate RNA velocity.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://pklab.med.harvard.edu/velocyto/notebooks/R/DG1.nb.html&#34;&gt;Dentate Gyrus / loom&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The example shows how to load spliced/unspliced matrices from loom files prepared by &lt;a href=&#34;http://velocyto.org/velocyto.py/tutorial/index.html#running-the-cli&#34;&gt;velocyto.py CLI&lt;/a&gt;, use &lt;a href=&#34;https://github.com/hms-dbmi/pagoda2&#34;&gt;pagoda2&lt;/a&gt; to cluster/embed cells, and then visualize RNA velocity on that embedding.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://pklab.med.harvard.edu/velocyto/notebooks/R/SCG71.nb.html&#34;&gt;Mouse BM / dropEst&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This example shows how to start analysis using dropEst count matrices, which can calculated from inDrop or 10x bam files using &lt;a href=&#34;https://github.com/hms-dbmi/dropEst/&#34;&gt;dropEst pipeline&lt;/a&gt;. It then uses &lt;a href=&#34;https://github.com/hms-dbmi/pagoda2&#34;&gt;pagoda2&lt;/a&gt; to cluster/embed cells, and then visualize RNA velocity on that embedding.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ices-taf-dev/ices_cat_3_template</title>
    <updated>2023-05-14T02:02:50Z</updated>
    <id>tag:github.com,2023-05-14:/ices-taf-dev/ices_cat_3_template</id>
    <link href="https://github.com/ices-taf-dev/ices_cat_3_template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;2022_ple.27.7e_assessment&lt;/h1&gt; &#xA;&lt;h2&gt;Plaice (&lt;em&gt;Pleuronectes platessa&lt;/em&gt;) in Division 7.e (western English Channel) - WGCSE 2022 (not 2023).&lt;/h2&gt; &#xA;&lt;p&gt;This repository recreates the stock assessment for plaice (&lt;em&gt;Pleuronectes platessa&lt;/em&gt;) in Division 7.e (western English Channel) in &lt;code&gt;R&lt;/code&gt; from WGCSE 2022 - not yet updated for 2023.&lt;/p&gt; &#xA;&lt;h2&gt;R packages&lt;/h2&gt; &#xA;&lt;p&gt;The following R packages from CRAN are required to run the assessment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;TAF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;They can be installed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;### list with required packages&#xA;req_pkgs &amp;lt;- c(&#34;TAF&#34;)&#xA;### install/update packages&#xA;install.packages(req_pkgs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore, the following packages from GitHub are required:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cat3advice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For exact reproducibility, it is recommended to use exactly the same package version as used in the assessment. These package are automatically installed into a local library when running the TAF assessment (see below) or by calling&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;taf.boot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, they can be manually installed from GitHub with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;TAF::taf.libPaths() # install packages into local TAF library&#xA;remotes::install_github(&#34;shfischer/cat3advice&#34;, ref = &#34;ad220eb&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the assessment&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to run the assessment is to clone or download this repository, navigate into the repository with R and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;### load the icesTAF package&#xA;library(TAF)&#xA;### load data and install R packages&#xA;taf.boot()&#xA;### run all scripts&#xA;sourceAll()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code snippet runs the data compilation and assessment and creates the tables and figures presented in the WG report.&lt;/p&gt;</summary>
  </entry>
</feed>