<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:59:41Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MatthewBJane/theme_park</title>
    <updated>2023-08-06T01:59:41Z</updated>
    <id>tag:github.com,2023-08-06:/MatthewBJane/theme_park</id>
    <link href="https://github.com/MatthewBJane/theme_park" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fun ggplot themes for popular culture&lt;/p&gt;&lt;hr&gt;&lt;figure&gt; &#xA; &lt;img src=&#34;https://github.com/MatthewBJane/theme_park/assets/52077481/4c2e2885-d879-46e6-b61d-b253d8382597&#34; alt=&#34;theme_park_banner&#34;&gt; &#xA; &lt;figcaption aria-hidden=&#34;true&#34;&gt;&#xA;  theme_park_banner&#xA; &lt;/figcaption&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h1&gt;ThemePark&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h1&gt;Welcome to the Theme Park&lt;/h1&gt; &#xA;&lt;p&gt;Theme Park is a package for fun ggplot themes related to popular culture (movies, TV shows, video-games, etc.). I don’t have much time to expand this further so please consider submitting a theme!&lt;/p&gt; &#xA;&lt;h2&gt;Submit a Theme&lt;/h2&gt; &#xA;&lt;p&gt;Please help grow this package by submitting your own custom ggplot theme for a movie, show, or videogame. To submit, edit the &lt;a href=&#34;https://raw.githubusercontent.com/MatthewBJane/theme_park/main/inst/theme_template.R&#34;&gt;&lt;code&gt;theme_template.R&lt;/code&gt;&lt;/a&gt; script file or run &lt;code&gt;ThemePark:::new_theme_park_theme()&lt;/code&gt; and send the edited script to &lt;a href=&#34;mailto:matthew.jane@uconn.edu&#34;&gt;matthew.jane@uconn.edu&lt;/a&gt; or submit a pull request. I will review it and add it or respond with suggested edits. Have fun with it!&lt;/p&gt; &#xA;&lt;h2&gt;Themes contributed&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Theme&lt;/th&gt; &#xA;   &lt;th&gt;Creator(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Barbie&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_barbie()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matthew B. Jané&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Oppenheimer&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_oppenheimer()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matthew B. Jané &amp;amp; Toki Liam&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Star Wars&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_starwars()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matthew B. Jané&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Zelda&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_zelda()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alex Slavenko&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terminator&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_terminator()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alex Slavenko&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Spiderman&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_spiderman()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Velu P.K. Immonen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Avatar&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_avatar()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Velu P.K. Immonen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Gryffindor&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_gryffindor()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begum Ozemek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Hufflepuff&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_hufflepuff()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begum Ozemek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ravenclaw&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_ravenclaw()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begum Ozemek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Slytherin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_slytherin()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begum Ozemek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Futurama&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_futurama()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tylor J. Harlow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Simpsons&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_simpsons()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tylor J. Harlow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Lord of the Rings&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_lordoftherings()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ethan Milne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Game of Thrones&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_gameofthrones()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Brennan Antone&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Godfather&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_godfather()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Francisco Garre-Frutos&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Finding Nemo&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_nemo()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Christopher T. Kenny&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Friends&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_friends()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alexis van STRAATEN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Alien&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_alien()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Luke Pilling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of &lt;code&gt;ThemePark&lt;/code&gt; from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;MatthewBJane/theme_park&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;There are many theme options, listed above. You can see the list within your R session using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ThemePark)&#xA;head(themepark_themes)&#xA;#&amp;gt;         theme                     creator&#xA;#&amp;gt; 1      barbie             Matthew B. Jané&#xA;#&amp;gt; 2 oppenheimer Matthew B. Jané &amp;amp; Toki Liam&#xA;#&amp;gt; 3    starwars             Matthew B. Jané&#xA;#&amp;gt; 4       zelda               Alex Slavenko&#xA;#&amp;gt; 5  terminator               Alex Slavenko&#xA;#&amp;gt; 6   spiderman           Velu P.K. Immonen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below is an example of using the Game of Thrones theme.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;`X variable` &amp;lt;- rnorm(50, 0, 1)&#xA;`Y variable` &amp;lt;- rnorm(50, 0, 1)&#xA;&#xA;# see suggested colours in the palette&#xA;gameofthrones_theme_colors&#xA;#&amp;gt; background       text      panel     border    lighter      light     medium &#xA;#&amp;gt;  &#34;#1f0700&#34;  &#34;#D7B257&#34;  &#34;#F2F3B8&#34;  &#34;#BD6D33&#34;  &#34;#F2F3B8&#34;  &#34;#DFCB69&#34;  &#34;#BD6D33&#34; &#xA;#&amp;gt;       dark &#xA;#&amp;gt;  &#34;#8C4522&#34;&#xA;&#xA;ggplot(data = NULL, aes(x = `X variable`, y = `Y variable`)) +&#xA;  theme_gameofthrones(gameofthrones_font = TRUE) +&#xA;  geom_smooth(method = &#34;lm&#34;,&#xA;              color = gameofthrones_theme_colors[&#34;dark&#34;],&#xA;              fill = gameofthrones_theme_colors[&#34;light&#34;]) +&#xA;  geom_point(color = gameofthrones_theme_colors[&#34;medium&#34;]) +&#xA;  ggtitle(&#34;Game of Thrones Scatter Plot&#34;)&#xA;#&amp;gt; `geom_smooth()` using formula = &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/MatthewBJane/theme_park/main/man/figures/README-example-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;We can mix this with colors from the Barbie theme.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;g &amp;lt;- ggplot(mpg, aes(cty))&#xA;g + geom_density(aes(fill = factor(cyl)), alpha = 0.8) +&#xA;  labs(&#xA;    title = &#34;Density plot&#34;,&#xA;    subtitle = &#34;City Mileage Grouped by Number of cylinders&#34;,&#xA;    caption = &#34;Source: mpg&#34;,&#xA;    x = &#34;City Mileage&#34;,&#xA;    fill = &#34;# Cylinders&#34;&#xA;  ) +&#xA;  theme_gameofthrones() +&#xA;  scale_color_barbie()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/MatthewBJane/theme_park/main/man/figures/README-cars-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = NULL, aes(x = `X variable`, y = `Y variable`)) +&#xA;  theme_avatar(avatar_font = TRUE) +&#xA;  geom_smooth(method = &#34;lm&#34;, color = avatar_theme_colors[&#34;dark&#34;], fill = avatar_theme_colors[&#34;light&#34;]) +&#xA;  geom_point(color = avatar_theme_colors[&#34;medium&#34;]) +&#xA;  ggtitle(&#34;Avatar Scatter Plot&#34;)&#xA;#&amp;gt; `geom_smooth()` using formula = &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/MatthewBJane/theme_park/main/man/figures/README-unnamed-chunk-3-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data.frame(x = rnorm(100), y = rnorm(100)), aes(x, y)) +&#xA;  geom_smooth(method = &#34;lm&#34;, color = godfather_theme_colors[&#34;dark&#34;], fill = godfather_theme_colors[&#34;light&#34;]) +&#xA;  geom_point(color = godfather_theme_colors[&#34;medium&#34;]) +&#xA;  labs(title = &#34;The Godfather theme&#34;, x = &#34;Variable x&#34;, y = &#34;Variable y&#34;) +&#xA;  theme_godfather(godfather_font = TRUE)&#xA;#&amp;gt; `geom_smooth()` using formula = &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/MatthewBJane/theme_park/main/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;h3&gt;BibTeX:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{JaneBarbie2023,&#xA;  author = {Jané, Matthew B},&#xA;  month = {6},&#xA;  title = {theme_park: popular culture ggplot themes},&#xA;  url = {https://github.com/MatthewBJane/theme_park},&#xA;  version = {1.0.0},&#xA;  year = {2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;APA:&lt;/h3&gt; &#xA;&lt;p&gt;Jané, M.B. (2023). theme_park: popular culture ggplot themes (Version 0.0.1) [Source Code]. &lt;a href=&#34;https://github.com/MatthewBJane/theme_park&#34;&gt;https://github.com/MatthewBJane/theme_park&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zhanghao-njmu/SCP</title>
    <updated>2023-08-06T01:59:41Z</updated>
    <id>tag:github.com,2023-08-06:/zhanghao-njmu/SCP</id>
    <link href="https://github.com/zhanghao-njmu/SCP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SCP provides a comprehensive set of tools for single cell data processing and downstream analysis.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SCP: Single-Cell Pipeline&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhanghao-njmu/SCP&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/r-package/v/zhanghao-njmu/SCP&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhanghao-njmu/SCP&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/zhanghao-njmu/SCP.svg?sanitize=true&#34; alt=&#34;codesize&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhanghao-njmu/SCP&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/zhanghao-njmu/SCP&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;SCP provides a comprehensive set of tools for single-cell data processing and downstream analysis.&lt;/p&gt; &#xA;&lt;p&gt;The package includes the following facilities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrated single-cell quality control methods.&lt;/li&gt; &#xA; &lt;li&gt;Pipelines embedded with multiple methods for normalization, feature reduction, and cell population identification (standard Seurat workflow).&lt;/li&gt; &#xA; &lt;li&gt;Pipelines embedded with multiple integration methods for scRNA-seq or scATAC-seq data, including Uncorrected, &lt;a href=&#34;https://github.com/satijalab/seurat&#34;&gt;Seurat&lt;/a&gt;, &lt;a href=&#34;https://github.com/scverse/scvi-tools&#34;&gt;scVI&lt;/a&gt;, &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/batchelor.html&#34;&gt;MNN&lt;/a&gt;, &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/batchelor.html&#34;&gt;fastMNN&lt;/a&gt;, &lt;a href=&#34;https://github.com/immunogenomics/harmony&#34;&gt;Harmony&lt;/a&gt;, &lt;a href=&#34;https://github.com/brianhie/scanorama&#34;&gt;Scanorama&lt;/a&gt;, &lt;a href=&#34;https://github.com/Teichlab/bbknn&#34;&gt;BBKNN&lt;/a&gt;, &lt;a href=&#34;https://github.com/quadbiolab/simspec&#34;&gt;CSS&lt;/a&gt;, &lt;a href=&#34;https://github.com/welch-lab/liger&#34;&gt;LIGER&lt;/a&gt;, &lt;a href=&#34;https://github.com/kharchenkolab/conos&#34;&gt;Conos&lt;/a&gt;, &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/sva.html&#34;&gt;ComBat&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Multiple single-cell downstream analyses such as identification of differential features, enrichment analysis, GSEA analysis, identification of dynamic features, &lt;a href=&#34;https://github.com/theislab/paga&#34;&gt;PAGA&lt;/a&gt;, &lt;a href=&#34;https://github.com/theislab/scvelo&#34;&gt;RNA velocity&lt;/a&gt;, &lt;a href=&#34;https://github.com/dpeerlab/Palantir&#34;&gt;Palantir&lt;/a&gt;, &lt;a href=&#34;http://cole-trapnell-lab.github.io/monocle-release&#34;&gt;Monocle2&lt;/a&gt;, &lt;a href=&#34;https://cole-trapnell-lab.github.io/monocle3&#34;&gt;Monocle3&lt;/a&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;Multiple methods for automatic annotation of single-cell data and methods for projection between single-cell datasets.&lt;/li&gt; &#xA; &lt;li&gt;High-quality data visualization methods.&lt;/li&gt; &#xA; &lt;li&gt;Fast deployment of single-cell data into SCExplorer, a &lt;a href=&#34;https://shiny.rstudio.com/&#34;&gt;shiny app&lt;/a&gt; that provides an interactive visualization interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The functions in the SCP package are all developed around the &lt;a href=&#34;https://github.com/mojaveazure/seurat-object&#34;&gt;Seurat object&lt;/a&gt; and are compatible with other Seurat functions.&lt;/p&gt; &#xA;&lt;h2&gt;R version requirement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R &amp;gt;= 4.1.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation in the global R environment&lt;/h2&gt; &#xA;&lt;p&gt;You can install the latest version of SCP from &lt;a href=&#34;https://github.com/zhanghao-njmu/SCP&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!require(&#34;devtools&#34;, quietly = TRUE)) {&#xA;  install.packages(&#34;devtools&#34;)&#xA;}&#xA;devtools::install_github(&#34;zhanghao-njmu/SCP&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create SCP python environment&lt;/h4&gt; &#xA;&lt;p&gt;To run functions such as &lt;code&gt;RunPAGA&lt;/code&gt; or &lt;code&gt;RunSCVELO&lt;/code&gt;, SCP requires &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;conda&lt;/a&gt; to create a separate python environment. The default environment name is &lt;code&gt;&#34;SCP_env&#34;&lt;/code&gt;. You can specify the environment name for SCP by setting &lt;code&gt;options(SCP_env_name=&#34;new_name&#34;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now, you can run &lt;code&gt;PrepareEnv()&lt;/code&gt; to create the python environment for SCP. If the conda binary is not found, it will automatically download and install miniconda.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;SCP::PrepareEnv()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To force SCP to use a specific conda binary, it is recommended to set &lt;code&gt;reticulate.conda_binary&lt;/code&gt; R option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;options(reticulate.conda_binary = &#34;/path/to/conda&#34;)&#xA;SCP::PrepareEnv()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the download of miniconda or pip packages is slow, you can specify the miniconda repo and PyPI mirror according to your network region.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;SCP::PrepareEnv(&#xA;  miniconda_repo = &#34;https://mirrors.bfsu.edu.cn/anaconda/miniconda&#34;,&#xA;  pip_options = &#34;-i https://pypi.tuna.tsinghua.edu.cn/simple&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available miniconda repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://repo.anaconda.com/miniconda&#34;&gt;https://repo.anaconda.com/miniconda&lt;/a&gt; (default)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mirrors.aliyun.com/anaconda/miniconda&#34;&gt;http://mirrors.aliyun.com/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.bfsu.edu.cn/anaconda/miniconda&#34;&gt;https://mirrors.bfsu.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.pku.edu.cn/anaconda/miniconda&#34;&gt;https://mirrors.pku.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirror.nju.edu.cn/anaconda/miniconda&#34;&gt;https://mirror.nju.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.sustech.edu.cn/anaconda/miniconda&#34;&gt;https://mirrors.sustech.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.xjtu.edu.cn/anaconda/miniconda&#34;&gt;https://mirrors.xjtu.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.hit.edu.cn/anaconda/miniconda&#34;&gt;https://mirrors.hit.edu.cn/anaconda/miniconda&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available PyPI mirrors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.python.org/simple&#34;&gt;https://pypi.python.org/simple&lt;/a&gt; (default)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.aliyun.com/pypi/simple&#34;&gt;https://mirrors.aliyun.com/pypi/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.tuna.tsinghua.edu.cn/simple&#34;&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.pku.edu.cn/pypi/simple&#34;&gt;https://mirrors.pku.edu.cn/pypi/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirror.nju.edu.cn/pypi/web/simple&#34;&gt;https://mirror.nju.edu.cn/pypi/web/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.sustech.edu.cn/pypi/simple&#34;&gt;https://mirrors.sustech.edu.cn/pypi/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.xjtu.edu.cn/pypi/simple&#34;&gt;https://mirrors.xjtu.edu.cn/pypi/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mirrors.hit.edu.cn/pypi/web/simple&#34;&gt;https://mirrors.hit.edu.cn/pypi/web/simple&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation in an isolated R environment using renv&lt;/h2&gt; &#xA;&lt;p&gt;If you do not want to change your current R environment or require reproducibility, you can use the &lt;a href=&#34;https://rstudio.github.io/renv/&#34;&gt;renv&lt;/a&gt; package to install SCP into an isolated R environment.&lt;/p&gt; &#xA;&lt;h4&gt;Create an isolated R environment&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!require(&#34;renv&#34;, quietly = TRUE)) {&#xA;  install.packages(&#34;renv&#34;)&#xA;}&#xA;dir.create(&#34;~/SCP_env&#34;, recursive = TRUE) # It cannot be the home directory &#34;~&#34; !&#xA;renv::init(project = &#34;~/SCP_env&#34;, bare = TRUE, restart = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Option 1: Install SCP from GitHub and create SCP python environment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;renv::activate(project = &#34;~/SCP_env&#34;)&#xA;renv::install(&#34;BiocManager&#34;)&#xA;renv::install(&#34;zhanghao-njmu/SCP&#34;, repos = BiocManager::repositories())&#xA;SCP::PrepareEnv()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Option 2: If SCP is already installed in the global environment, copy SCP from the local library&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;renv::activate(project = &#34;~/SCP_env&#34;)&#xA;renv::hydrate(&#34;SCP&#34;)&#xA;SCP::PrepareEnv()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Activate SCP environment first before use&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;renv::activate(project = &#34;~/SCP_env&#34;)&#xA;&#xA;library(SCP)&#xA;data(&#34;pancreas_sub&#34;)&#xA;pancreas_sub &amp;lt;- RunPAGA(srt = pancreas_sub, group_by = &#34;SubCellType&#34;, linear_reduction = &#34;PCA&#34;, nonlinear_reduction = &#34;UMAP&#34;)&#xA;CellDimPlot(pancreas_sub, group.by = &#34;SubCellType&#34;, reduction = &#34;draw_graph_fr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Save and restore the state of SCP environment&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;renv::snapshot(project = &#34;~/SCP_env&#34;)&#xA;renv::restore(project = &#34;~/SCP_env&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#data-exploration&#34;&gt;Data exploration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#cellqc&#34;&gt;CellQC&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#standard-pipeline&#34;&gt;Standard pipeline&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#integration-pipeline&#34;&gt;Integration pipeline&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#cell-projection-between-single-cell-datasets&#34;&gt;Cell projection between single-cell datasets&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#cell-annotation-using-bulk-rna-seq-datasets&#34;&gt;Cell annotation using bulk RNA-seq datasets&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#cell-annotation-using-single-cell-datasets&#34;&gt;Cell annotation using single-cell datasets&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#paga-analysis&#34;&gt;PAGA analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#velocity-analysis&#34;&gt;Velocity analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#differential-expression-analysis&#34;&gt;Differential expression analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#enrichment-analysisover-representation&#34;&gt;Enrichment analysis(over-representation)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#enrichment-analysisgsea&#34;&gt;Enrichment analysis(GSEA)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#trajectory-inference&#34;&gt;Trajectory inference&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#dynamic-features&#34;&gt;Dynamic features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#interactive-data-visualization-with-scexplorer&#34;&gt;Interactive data visualization with SCExplorer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/#other-visualization-examples&#34;&gt;Other visualization examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Data exploration&lt;/h3&gt; &#xA;&lt;p&gt;The analysis is based on a subsetted version of &lt;a href=&#34;https://doi.org/10.1242/dev.173849&#34;&gt;mouse pancreas data&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(SCP)&#xA;data(&#34;pancreas_sub&#34;)&#xA;print(pancreas_sub)&#xA;#&amp;gt; An object of class Seurat &#xA;#&amp;gt; 47874 features across 1000 samples within 3 assays &#xA;#&amp;gt; Active assay: RNA (15958 features, 3467 variable features)&#xA;#&amp;gt;  2 other assays present: spliced, unspliced&#xA;#&amp;gt;  2 dimensional reductions calculated: PCA, UMAP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellDimPlot(&#xA;  srt = pancreas_sub, group.by = c(&#34;CellType&#34;, &#34;SubCellType&#34;),&#xA;  reduction = &#34;UMAP&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-EDA-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellDimPlot(&#xA;  srt = pancreas_sub, group.by = &#34;SubCellType&#34;, stat.by = &#34;Phase&#34;,&#xA;  reduction = &#34;UMAP&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-EDA-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;FeatureDimPlot(&#xA;  srt = pancreas_sub, features = c(&#34;Sox9&#34;, &#34;Neurog3&#34;, &#34;Fev&#34;, &#34;Rbp4&#34;),&#xA;  reduction = &#34;UMAP&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-EDA-3.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;FeatureDimPlot(&#xA;  srt = pancreas_sub, features = c(&#34;Ins1&#34;, &#34;Gcg&#34;, &#34;Sst&#34;, &#34;Ghrl&#34;),&#xA;  compare_features = TRUE, label = TRUE, label_insitu = TRUE,&#xA;  reduction = &#34;UMAP&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-EDA-4.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ht &amp;lt;- GroupHeatmap(&#xA;  srt = pancreas_sub,&#xA;  features = c(&#xA;    &#34;Sox9&#34;, &#34;Anxa2&#34;, # Ductal&#xA;    &#34;Neurog3&#34;, &#34;Hes6&#34;, # EPs&#xA;    &#34;Fev&#34;, &#34;Neurod1&#34;, # Pre-endocrine&#xA;    &#34;Rbp4&#34;, &#34;Pyy&#34;, # Endocrine&#xA;    &#34;Ins1&#34;, &#34;Gcg&#34;, &#34;Sst&#34;, &#34;Ghrl&#34; # Beta, Alpha, Delta, Epsilon&#xA;  ),&#xA;  group.by = c(&#34;CellType&#34;, &#34;SubCellType&#34;),&#xA;  heatmap_palette = &#34;YlOrRd&#34;,&#xA;  cell_annotation = c(&#34;Phase&#34;, &#34;G2M_score&#34;, &#34;Cdh2&#34;),&#xA;  cell_annotation_palette = c(&#34;Dark2&#34;, &#34;Paired&#34;, &#34;Paired&#34;),&#xA;  show_row_names = TRUE, row_names_side = &#34;left&#34;,&#xA;  add_dot = TRUE, add_reticle = TRUE&#xA;)&#xA;print(ht$plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-EDA-5.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;CellQC&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunCellQC(srt = pancreas_sub)&#xA;CellDimPlot(srt = pancreas_sub, group.by = &#34;CellQC&#34;, reduction = &#34;UMAP&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunCellQC-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellStatPlot(srt = pancreas_sub, stat.by = &#34;CellQC&#34;, group.by = &#34;CellType&#34;, label = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunCellQC-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellStatPlot(&#xA;  srt = pancreas_sub,&#xA;  stat.by = c(&#xA;    &#34;db_qc&#34;, &#34;outlier_qc&#34;, &#34;umi_qc&#34;, &#34;gene_qc&#34;,&#xA;    &#34;mito_qc&#34;, &#34;ribo_qc&#34;, &#34;ribo_mito_ratio_qc&#34;, &#34;species_qc&#34;&#xA;  ),&#xA;  plot_type = &#34;upset&#34;, stat_level = &#34;Fail&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunCellQC-3.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Standard pipeline&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- Standard_SCP(srt = pancreas_sub)&#xA;CellDimPlot(&#xA;  srt = pancreas_sub, group.by = c(&#34;CellType&#34;, &#34;SubCellType&#34;),&#xA;  reduction = &#34;StandardUMAP2D&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Standard_SCP-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellDimPlot3D(srt = pancreas_sub, group.by = &#34;SubCellType&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-CellDimPlot3D-1.png&#34; alt=&#34;CellDimPlot3D&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;FeatureDimPlot3D(srt = pancreas_sub, features = c(&#34;Sox9&#34;, &#34;Neurog3&#34;, &#34;Fev&#34;, &#34;Rbp4&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-FeatureDimPlot3D-1.png&#34; alt=&#34;FeatureDimPlot3D&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Integration pipeline&lt;/h3&gt; &#xA;&lt;p&gt;Example data for integration is a subsetted version of &lt;a href=&#34;https://github.com/satijalab/seurat-data&#34;&gt;panc8(eight human pancreas datasets)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data(&#34;panc8_sub&#34;)&#xA;panc8_sub &amp;lt;- Integration_SCP(srtMerge = panc8_sub, batch = &#34;tech&#34;, integration_method = &#34;Seurat&#34;)&#xA;CellDimPlot(&#xA;  srt = panc8_sub, group.by = c(&#34;celltype&#34;, &#34;tech&#34;), reduction = &#34;SeuratUMAP2D&#34;,&#xA;  title = &#34;Seurat&#34;, theme_use = &#34;theme_blank&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Integration_SCP-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;UMAP embeddings based on different integration methods in SCP:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Integration-all.png&#34; alt=&#34;Integration-all&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cell projection between single-cell datasets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;panc8_rename &amp;lt;- RenameFeatures(srt = panc8_sub, newnames = make.unique(capitalize(rownames(panc8_sub), force_tolower = TRUE)), assays = &#34;RNA&#34;)&#xA;srt_query &amp;lt;- RunKNNMap(srt_query = pancreas_sub, srt_ref = panc8_rename, ref_umap = &#34;SeuratUMAP2D&#34;)&#xA;ProjectionPlot(&#xA;  srt_query = srt_query, srt_ref = panc8_rename,&#xA;  query_group = &#34;SubCellType&#34;, ref_group = &#34;celltype&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunKNNMap-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Cell annotation using bulk RNA-seq datasets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data(&#34;ref_scMCA&#34;)&#xA;pancreas_sub &amp;lt;- RunKNNPredict(srt_query = pancreas_sub, bulk_ref = ref_scMCA, filter_lowfreq = 20)&#xA;CellDimPlot(srt = pancreas_sub, group.by = &#34;KNNPredict_classification&#34;, reduction = &#34;UMAP&#34;, label = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunKNNPredict-bulk-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Cell annotation using single-cell datasets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunKNNPredict(&#xA;  srt_query = pancreas_sub, srt_ref = panc8_rename,&#xA;  ref_group = &#34;celltype&#34;, filter_lowfreq = 20&#xA;)&#xA;CellDimPlot(srt = pancreas_sub, group.by = &#34;KNNPredict_classification&#34;, reduction = &#34;UMAP&#34;, label = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunKNNPredict-scrna-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;pancreas_sub &amp;lt;- RunKNNPredict(&#xA;  srt_query = pancreas_sub, srt_ref = panc8_rename,&#xA;  query_group = &#34;SubCellType&#34;, ref_group = &#34;celltype&#34;,&#xA;  return_full_distance_matrix = TRUE&#xA;)&#xA;CellDimPlot(srt = pancreas_sub, group.by = &#34;KNNPredict_classification&#34;, reduction = &#34;UMAP&#34;, label = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunKNNPredict-scrna-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ht &amp;lt;- CellCorHeatmap(&#xA;  srt_query = pancreas_sub, srt_ref = panc8_rename,&#xA;  query_group = &#34;SubCellType&#34;, ref_group = &#34;celltype&#34;,&#xA;  nlabel = 3, label_by = &#34;row&#34;,&#xA;  show_row_names = TRUE, show_column_names = TRUE&#xA;)&#xA;print(ht$plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunKNNPredict-scrna-3.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;PAGA analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunPAGA(&#xA;  srt = pancreas_sub, group_by = &#34;SubCellType&#34;,&#xA;  linear_reduction = &#34;PCA&#34;, nonlinear_reduction = &#34;UMAP&#34;&#xA;)&#xA;PAGAPlot(srt = pancreas_sub, reduction = &#34;UMAP&#34;, label = TRUE, label_insitu = TRUE, label_repel = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunPAGA-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Velocity analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunSCVELO(&#xA;  srt = pancreas_sub, group_by = &#34;SubCellType&#34;,&#xA;  linear_reduction = &#34;PCA&#34;, nonlinear_reduction = &#34;UMAP&#34;&#xA;)&#xA;VelocityPlot(srt = pancreas_sub, reduction = &#34;UMAP&#34;, group_by = &#34;SubCellType&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunSCVELO-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;VelocityPlot(srt = pancreas_sub, reduction = &#34;UMAP&#34;, plot_type = &#34;stream&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunSCVELO-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Differential expression analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunDEtest(srt = pancreas_sub, group_by = &#34;CellType&#34;, fc.threshold = 1, only.pos = FALSE)&#xA;VolcanoPlot(srt = pancreas_sub, group_by = &#34;CellType&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunDEtest-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DEGs &amp;lt;- pancreas_sub@tools$DEtest_CellType$AllMarkers_wilcox&#xA;DEGs &amp;lt;- DEGs[with(DEGs, avg_log2FC &amp;gt; 1 &amp;amp; p_val_adj &amp;lt; 0.05), ]&#xA;# Annotate features with transcription factors and surface proteins&#xA;pancreas_sub &amp;lt;- AnnotateFeatures(pancreas_sub, species = &#34;Mus_musculus&#34;, db = c(&#34;TF&#34;, &#34;SP&#34;))&#xA;ht &amp;lt;- FeatureHeatmap(&#xA;  srt = pancreas_sub, group.by = &#34;CellType&#34;, features = DEGs$gene, feature_split = DEGs$group1,&#xA;  species = &#34;Mus_musculus&#34;, db = c(&#34;GO_BP&#34;, &#34;KEGG&#34;, &#34;WikiPathway&#34;), anno_terms = TRUE,&#xA;  feature_annotation = c(&#34;TF&#34;, &#34;SP&#34;), feature_annotation_palcolor = list(c(&#34;gold&#34;, &#34;steelblue&#34;), c(&#34;forestgreen&#34;)),&#xA;  height = 5, width = 4&#xA;)&#xA;print(ht$plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-FeatureHeatmap-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Enrichment analysis(over-representation)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunEnrichment(&#xA;  srt = pancreas_sub, group_by = &#34;CellType&#34;, db = &#34;GO_BP&#34;, species = &#34;Mus_musculus&#34;,&#xA;  DE_threshold = &#34;avg_log2FC &amp;gt; 1 &amp;amp; p_val_adj &amp;lt; 0.05&#34;&#xA;)&#xA;EnrichmentPlot(&#xA;  srt = pancreas_sub, group_by = &#34;CellType&#34;, group_use = c(&#34;Ductal&#34;, &#34;Endocrine&#34;),&#xA;  plot_type = &#34;bar&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunEnrichment-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;EnrichmentPlot(&#xA;  srt = pancreas_sub, group_by = &#34;CellType&#34;, group_use = c(&#34;Ductal&#34;, &#34;Endocrine&#34;),&#xA;  plot_type = &#34;wordcloud&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunEnrichment-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;EnrichmentPlot(&#xA;  srt = pancreas_sub, group_by = &#34;CellType&#34;, group_use = c(&#34;Ductal&#34;, &#34;Endocrine&#34;),&#xA;  plot_type = &#34;wordcloud&#34;, word_type = &#34;feature&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunEnrichment-3.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;EnrichmentPlot(srt = pancreas_sub, group_by = &#34;CellType&#34;, plot_type = &#34;comparison&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Enrichment_comparison-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Enrichment analysis(GSEA)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunGSEA(&#xA;  srt = pancreas_sub, group_by = &#34;CellType&#34;, db = &#34;GO_BP&#34;, species = &#34;Mus_musculus&#34;,&#xA;  DE_threshold = &#34;p_val_adj &amp;lt; 0.05&#34;&#xA;)&#xA;GSEAPlot(srt = pancreas_sub, group_by = &#34;CellType&#34;, group_use = &#34;Endocrine&#34;, geneSetID = &#34;GO:0007186&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunGSEA-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;GSEAPlot(srt = pancreas_sub, group_by = &#34;CellType&#34;, plot_type = &#34;comparison&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-GSEA_comparison-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Trajectory inference&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunSlingshot(srt = pancreas_sub, group.by = &#34;SubCellType&#34;, reduction = &#34;UMAP&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunSlingshot-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;FeatureDimPlot(pancreas_sub, features = paste0(&#34;Lineage&#34;, 1:3), reduction = &#34;UMAP&#34;, theme_use = &#34;theme_blank&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunSlingshot-2.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CellDimPlot(pancreas_sub, group.by = &#34;SubCellType&#34;, reduction = &#34;UMAP&#34;, lineages = paste0(&#34;Lineage&#34;, 1:3), lineages_span = 0.1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-RunSlingshot-3.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Dynamic features&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pancreas_sub &amp;lt;- RunDynamicFeatures(srt = pancreas_sub, lineages = c(&#34;Lineage1&#34;, &#34;Lineage2&#34;), n_candidates = 200)&#xA;ht &amp;lt;- DynamicHeatmap(&#xA;  srt = pancreas_sub, lineages = c(&#34;Lineage1&#34;, &#34;Lineage2&#34;),&#xA;  use_fitted = TRUE, n_split = 6, reverse_ht = &#34;Lineage1&#34;,&#xA;  species = &#34;Mus_musculus&#34;, db = &#34;GO_BP&#34;, anno_terms = TRUE, anno_keys = TRUE, anno_features = TRUE,&#xA;  heatmap_palette = &#34;viridis&#34;, cell_annotation = &#34;SubCellType&#34;,&#xA;  separate_annotation = list(&#34;SubCellType&#34;, c(&#34;Nnat&#34;, &#34;Irx1&#34;)), separate_annotation_palette = c(&#34;Paired&#34;, &#34;Set1&#34;),&#xA;  feature_annotation = c(&#34;TF&#34;, &#34;SP&#34;), feature_annotation_palcolor = list(c(&#34;gold&#34;, &#34;steelblue&#34;), c(&#34;forestgreen&#34;)),&#xA;  pseudotime_label = 25, pseudotime_label_color = &#34;red&#34;,&#xA;  height = 5, width = 2&#xA;)&#xA;print(ht$plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-DynamicHeatmap-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DynamicPlot(&#xA;  srt = pancreas_sub, lineages = c(&#34;Lineage1&#34;, &#34;Lineage2&#34;), group.by = &#34;SubCellType&#34;,&#xA;  features = c(&#34;Plk1&#34;, &#34;Hes1&#34;, &#34;Neurod2&#34;, &#34;Ghrl&#34;, &#34;Gcg&#34;, &#34;Ins2&#34;),&#xA;  compare_lineages = TRUE, compare_features = FALSE&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-DynamicPlot-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;FeatureStatPlot(&#xA;  srt = pancreas_sub, group.by = &#34;SubCellType&#34;, bg.by = &#34;CellType&#34;,&#xA;  stat.by = c(&#34;Sox9&#34;, &#34;Neurod2&#34;, &#34;Isl1&#34;, &#34;Rbp4&#34;), add_box = TRUE,&#xA;  comparisons = list(&#xA;    c(&#34;Ductal&#34;, &#34;Ngn3 low EP&#34;),&#xA;    c(&#34;Ngn3 high EP&#34;, &#34;Pre-endocrine&#34;),&#xA;    c(&#34;Alpha&#34;, &#34;Beta&#34;)&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-FeatureStatPlot-1.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Interactive data visualization with SCExplorer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;PrepareSCExplorer(list(mouse_pancreas = pancreas_sub, human_pancreas = panc8_sub), base_dir = &#34;./SCExplorer&#34;)&#xA;app &amp;lt;- RunSCExplorer(base_dir = &#34;./SCExplorer&#34;)&#xA;list.files(&#34;./SCExplorer&#34;) # This directory can be used as site directory for Shiny Server.&#xA;&#xA;if (interactive()) {&#xA;  shiny::runApp(app)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-SCExplorer-1.png&#34; alt=&#34;SCExplorer1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-SCExplorer-2.png&#34; alt=&#34;SCExplorer2&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other visualization examples&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/CellDimPlot.html&#34;&gt;&lt;strong&gt;CellDimPlot&lt;/strong&gt;&lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Example-1.jpg&#34; alt=&#34;Example1&#34;&gt; &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/CellStatPlot.html&#34;&gt;&lt;strong&gt;CellStatPlot&lt;/strong&gt;&lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Example-2.jpg&#34; alt=&#34;Example2&#34;&gt; &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/FeatureStatPlot.html&#34;&gt;&lt;strong&gt;FeatureStatPlot&lt;/strong&gt;&lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Example-3.jpg&#34; alt=&#34;Example3&#34;&gt; &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/GroupHeatmap.html&#34;&gt;&lt;strong&gt;GroupHeatmap&lt;/strong&gt;&lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhanghao-njmu/SCP/main/README/README-Example-4.jpg&#34; alt=&#34;Example3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also find more examples in the documentation of the function: &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/Integration_SCP.html&#34;&gt;Integration_SCP&lt;/a&gt;, &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/RunKNNMap.html&#34;&gt;RunKNNMap&lt;/a&gt;, &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/RunMonocle3.html&#34;&gt;RunMonocle3&lt;/a&gt;, &lt;a href=&#34;https://zhanghao-njmu.github.io/SCP/reference/RunPalantir.html&#34;&gt;RunPalantir&lt;/a&gt;, etc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>weiyi-bitw/BCCModels</title>
    <updated>2023-08-06T01:59:41Z</updated>
    <id>tag:github.com,2023-08-06:/weiyi-bitw/BCCModels</id>
    <link href="https://github.com/weiyi-bitw/BCCModels" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source files for DREAM7 BCC models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BCCModels&lt;/h1&gt; &#xA;&lt;p&gt;Source files for DREAM7 BCC models&lt;/p&gt;</summary>
  </entry>
</feed>