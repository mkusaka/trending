<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-29T01:43:33Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ropensci-review-tools/pkgcheck</title>
    <updated>2025-06-29T01:43:33Z</updated>
    <id>tag:github.com,2025-06-29:/ropensci-review-tools/pkgcheck</id>
    <link href="https://github.com/ropensci-review-tools/pkgcheck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Check whether a package is ready for submission to rOpenSci&#39;s peer-review system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pkgcheck&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/actions?query=workflow%3AR-CMD-check&#34;&gt;&lt;img src=&#34;https://github.com/ropensci-review-tools/pkgcheck/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ropensci-review-tools/pkgcheck&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ropensci-review-tools/pkgcheck/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Check whether a package is ready for submission to &lt;a href=&#34;https://ropensci.org&#34;&gt;rOpenSci&lt;/a&gt;’s peer review system. The primary function collates the output of &lt;a href=&#34;https://github.com/ropensci-review-tools/goodpractice&#34;&gt;&lt;code&gt;goodpractice&lt;/code&gt;&lt;/a&gt;, including &lt;code&gt;R CMD check&lt;/code&gt; results, a number of statistics via the &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgstats&#34;&gt;&lt;code&gt;pkgstats&lt;/code&gt; package&lt;/a&gt;, and checks for package structure expected for rOpenSci submissions. The output of this function immediately indicates whether or not a package is “Ready to Submit”.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install this package is via the &lt;a href=&#34;https://ropensci-review-tools.r-universe.dev/ui#builds&#34;&gt;associated &lt;code&gt;r-universe&lt;/code&gt;&lt;/a&gt;. As shown there, simply enable the universe with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;options (repos = c (&#xA;    ropenscireviewtools = &#34;https://ropensci-review-tools.r-universe.dev&#34;,&#xA;    CRAN = &#34;https://cloud.r-project.org&#34;&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then install the usual way with,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages (&#34;pkgcheck&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, the package can be installed by first installing either the &lt;a href=&#34;https://remotes.r-lib.org&#34;&gt;remotes&lt;/a&gt; or &lt;a href=&#34;https://pak.r-lib.org/&#34;&gt;pak&lt;/a&gt; packages and running one of the following lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github (&#34;ropensci-review-tools/pkgcheck&#34;)&#xA;pak::pkg_install (&#34;ropensci-review-tools/pkgcheck&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The package can then loaded for use with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library (pkgcheck)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgstats&#34;&gt;&lt;code&gt;pkgstats&lt;/code&gt; package&lt;/a&gt; also requires the system libraries &lt;a href=&#34;https://ctags.io&#34;&gt;&lt;code&gt;ctags&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://www.gnu.org/software/global/&#34;&gt;GNU &lt;code&gt;global&lt;/code&gt;&lt;/a&gt; to be installed. Procedures to install these libraries on various operating systems are described in a &lt;a href=&#34;https://docs.ropensci.org/pkgstats/articles/installation.html&#34;&gt;&lt;code&gt;pkgstats&lt;/code&gt; vignette&lt;/a&gt;. This package also uses the &lt;a href=&#34;https://developer.github.com/v4&#34;&gt;GitHub GraphQL API&lt;/a&gt; which requires a local GitHub token to be stored with an unambiguous name including &lt;code&gt;GITHUB&lt;/code&gt;, such as &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; (recommended), or &lt;code&gt;GITHUB_PAT&lt;/code&gt; (for Personal Authorization Token). This can be obtained from GitHub (via your user settings), and stored using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Sys.setenv (&#34;GITHUB_TOKEN&#34; = &#34;&amp;lt;my_token&amp;gt;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can also be set permanently by putting this line in your &lt;code&gt;~/.Renviron&lt;/code&gt; file (or creating this if it does not yet exist). Once &lt;code&gt;pkgstats&lt;/code&gt; has been successfully installed, the &lt;code&gt;pkgcheck&lt;/code&gt; package can then be loaded via a &lt;code&gt;library&lt;/code&gt; call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library (pkgcheck)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The package primarily has one function, &lt;code&gt;pkgcheck&lt;/code&gt;, which accepts the single argument, &lt;code&gt;path&lt;/code&gt;, specifying the local location of a git repository to be analysed. The following code generates a reproducible report by first downloading a local clone of a repository called &lt;a href=&#34;https://github.com/mpadge/srr-demo&#34;&gt;&lt;code&gt;srr-demo&lt;/code&gt;&lt;/a&gt;, which contains the skeleton of an &lt;a href=&#34;https://github.com/ropensci-review-tools/srr&#34;&gt;&lt;code&gt;srr&lt;/code&gt; (Software Review Roclets) package&lt;/a&gt;, generated with the &lt;a href=&#34;https://docs.ropensci.org/srr/reference/srr_stats_pkg_skeleton.html&#34;&gt;&lt;code&gt;srr_stats_pkg_skeleton()&lt;/code&gt; function&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mydir &amp;lt;- file.path (tempdir (), &#34;srr-demo&#34;)&#xA;gert::git_clone (&#34;https://github.com/mpadge/srr-demo&#34;, path = mydir)&#xA;devtools::document (mydir, quiet = TRUE) # Generate documentation entries in &#34;/man&#34; directory&#xA;x &amp;lt;- pkgcheck (mydir)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That object has default &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;summary&lt;/code&gt; methods. The latter can be used to simply check whether a package is ready for submission:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary (x)&#xA;## &#xA;## ── demo 0.0.0.9000 ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────&#xA;## &#xA;## ✔ Package name is available&#xA;## ✖ does not have a &#39;codemeta.json&#39; file.&#xA;## ✖ does not have a &#39;contributing&#39; file.&#xA;## ✖ The following function has no documented return value: [test_fn]&#xA;## ✔ uses &#39;roxygen2&#39;.&#xA;## ✔ &#39;DESCRIPTION&#39; has a URL field.&#xA;## ✖ &#39;DESCRIPTION&#39; does not have a BugReports field.&#xA;## ✖ Package has no HTML vignettes&#xA;## ✖ These functions do not have examples: [test_fn].&#xA;## ✖ Package has no continuous integration checks.&#xA;## ✖ Package coverage failed&#xA;## ✖ Statistical standards should be documented in most package files, yet are mostly only documented in one file.&#xA;## ✔ R CMD check found no errors.&#xA;## ✔ R CMD check found no warnings.&#xA;## &#xA;## ℹ Current status:&#xA;## ✖ This package is not ready to be submitted.&#xA;## &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A package may only be submitted when the summary contains all ticks and no cross symbols. (These symbols are colour-coded with green ticks and red crosses when generated in a terminal; GitHub markdown only renders them in black-and-white.) The object returned from the &lt;code&gt;pkgcheck&lt;/code&gt; function is a complex nested list with around a dozen primary components. Full information can be obtained by simply calling the default &lt;code&gt;print&lt;/code&gt; method by typing the object name (&lt;code&gt;x&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;The &lt;code&gt;pkgcheck&lt;/code&gt; GitHub action&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;pkgcheck&lt;/code&gt; package also has an associated GitHub action in &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck-action&#34;&gt;the &lt;code&gt;pkgcheck-action&lt;/code&gt; repository&lt;/a&gt;. You can use this action to run &lt;code&gt;pkgcheck&lt;/code&gt; every time you push commits to GitHub, just like the &lt;code&gt;rcmdcheck()&lt;/code&gt; checks which can be installed and run via &lt;a href=&#34;https://usethis.r-lib.org/reference/github_actions.html&#34;&gt;the &lt;code&gt;usethis::use_github_action_check_standard()&lt;/code&gt; function&lt;/a&gt;. &lt;code&gt;pkgcheck&lt;/code&gt; includes an analogous function, &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/use_github_action_pkgcheck.html&#34;&gt;&lt;code&gt;use_github_action_pkgcheck()&lt;/code&gt;&lt;/a&gt;, which will download the workflow file defining the action into your local &lt;code&gt;.github/workflows&lt;/code&gt; folder. See &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck-action&#34;&gt;the &lt;code&gt;pkgcheck-action&lt;/code&gt; repository&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;You can also add a &lt;code&gt;pkgcheck&lt;/code&gt; badge, just like that &lt;code&gt;rcmdcheck&lt;/code&gt; badge, that will always reflect the current state of your repository’s &lt;code&gt;pkgcheck&lt;/code&gt; results. To add a badge, copy the following line to your README file, filling in details of the GitHub organization and repository name (&lt;code&gt;&amp;lt;org&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;repo&amp;gt;&lt;/code&gt;, respectively):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![pkgcheck](https://github.com/&amp;lt;org&amp;gt;/&amp;lt;repo&amp;gt;/workflows/pkgcheck/badge.svg)](https://github.com/&amp;lt;org&amp;gt;/&amp;lt;repo&amp;gt;/actions?query=workflow%3Apkgcheck)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is checked?&lt;/h2&gt; &#xA;&lt;p&gt;All current checks are listed in &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/articles/list-checks.html&#34;&gt;a separate vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Summary of Check Results&lt;/h3&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;summary()&lt;/code&gt; on the object returned by the &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt; function&lt;/a&gt; will generate a checklist like that shown above. This checklist will also be automatically generated when a package is first submitted to rOpenSci, and is used by the editors to assess whether to process a submission. Authors must ensure prior to submission that there are no red crosses in the resultant list. (In the unlikely circumstances that a package is unable to pass particular checks, explanations should be given upon submission about why those checks fail, and why review may proceed in spite of such failures.)&lt;/p&gt; &#xA;&lt;h3&gt;Detailed Check Results&lt;/h3&gt; &#xA;&lt;p&gt;Full details of check results can be seen by &lt;code&gt;print&lt;/code&gt;-ing the object returned by the &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt; function&lt;/a&gt; (or just by typing the name of this object in the console.)&lt;/p&gt; &#xA;&lt;p&gt;The package includes an additional function, &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/checks_to_markdown.html&#34;&gt;&lt;code&gt;checks_to_markdown()&lt;/code&gt;&lt;/a&gt;, with a parameter, &lt;code&gt;render&lt;/code&gt;, which can be set to &lt;code&gt;TRUE&lt;/code&gt; to automatically render a HTML-formatted representation of the check results, and open it in a browser. The formatting differs only slightly from the terminal output, mostly through the components of &lt;a href=&#34;http://docs.ropensci.org/goodpractice/&#34;&gt;&lt;code&gt;goodpractice&lt;/code&gt;&lt;/a&gt; being divided into distinct headings, with explicit statements in cases where components pass all checks (the default screen output inherits directly from that package, and only reports components which &lt;em&gt;do not&lt;/em&gt; pass all checks).&lt;/p&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/checks_to_markdown.html&#34;&gt;&lt;code&gt;checks_to_markdown()&lt;/code&gt;&lt;/a&gt; function returns the report in markdown format, suitable for pasting directly into a GitHub issue, or other markdown-compatible place. (The &lt;a href=&#34;https://github.com/mdlincoln/clipr&#34;&gt;&lt;code&gt;clipr&lt;/code&gt; package&lt;/a&gt; can be used to copy this directly to your local clipboard with &lt;code&gt;write_clip(md)&lt;/code&gt;, where &lt;code&gt;md&lt;/code&gt; is the output of &lt;code&gt;checks_to_markdown()&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Caching and running &lt;code&gt;pkgcheck&lt;/code&gt; in the background&lt;/h2&gt; &#xA;&lt;p&gt;Running the &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck&lt;/code&gt; function&lt;/a&gt; can be time-consuming, primarily because the &lt;a href=&#34;https://docs.ropensci.org/goodpractice&#34;&gt;&lt;code&gt;goodpractice&lt;/code&gt;&lt;/a&gt; component runs both a full &lt;code&gt;R CMD check&lt;/code&gt;, and calculates code coverage of all tests. To avoid re-generating these results each time, the package saves previous reports to a local cache directory defined in &lt;code&gt;Sys.getenv(&#34;PKGCHECK_CACHE_DIR&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You may manually erase the contents of this &lt;code&gt;pkgcheck&lt;/code&gt; subdirectory at any time at no risk beyond additional time required to re-generate contents. By default checks presume packages use &lt;code&gt;git&lt;/code&gt; for version control, with checks updated only when code is updated via &lt;code&gt;git commit&lt;/code&gt;. Checks for packages that do not use &lt;code&gt;git&lt;/code&gt; are updated when any files are modified.&lt;/p&gt; &#xA;&lt;p&gt;The first time &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt;&lt;/a&gt; is applied to a package, the checks will be stored in the cache directory. Calling that function a second time will then load the cached results, and so enable checks to be returned much faster. For code which is frequently updated, such as for packages working on the final stages prior to submission, it may still be necessary to repeatedly call &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt;&lt;/a&gt; after each modification, a step which may still be inconveniently time-consuming. To facilitate frequent re-checking, the package also has a &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck_bg.html&#34;&gt;&lt;code&gt;pkgcheck_bg()&lt;/code&gt; function&lt;/a&gt; which is effectively identical to the main &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt; function&lt;/a&gt;, except it runs in the background, enabling you to continue coding while checks are running.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck_bg.html&#34;&gt;&lt;code&gt;pkgcheck_bg()&lt;/code&gt; function&lt;/a&gt; returns a handle to the &lt;a href=&#34;https://callr.r-lib.org/reference/r_bg.html&#34;&gt;&lt;code&gt;callr::r_bg()&lt;/code&gt; process&lt;/a&gt; in which the checks are running. Typing the name of the returned object will immediately indicate whether the checks are still running, or whether they have finished. That handle is itself an &lt;a href=&#34;http://r6.r-lib.org/&#34;&gt;&lt;code&gt;R6&lt;/code&gt; object&lt;/a&gt; with a number of methods, notably including &lt;a href=&#34;https://callr.r-lib.org/reference/get_result.html&#34;&gt;&lt;code&gt;get_result()&lt;/code&gt;&lt;/a&gt; which can be used to access the checks once the process has finished. Alternatively, as soon as the background process, the normal (foreground) &lt;a href=&#34;https://docs.ropensci.org/pkgcheck/reference/pkgcheck.html&#34;&gt;&lt;code&gt;pkgcheck()&lt;/code&gt; function&lt;/a&gt; may be called to quickly re-load the cached results.&lt;/p&gt; &#xA;&lt;h2&gt;Prior Work&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/inbo/checklist&#34;&gt;The &lt;code&gt;checklist&lt;/code&gt; package&lt;/a&gt; for “checking packages and R code”.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this package is released with a &lt;a href=&#34;https://ropensci.org/code-of-conduct/&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;p&gt;All contributions to this project are gratefully acknowledged using the &lt;a href=&#34;https://github.com/ropensci/allcontributors&#34;&gt;&lt;code&gt;allcontributors&lt;/code&gt; package&lt;/a&gt; following the &lt;a href=&#34;https://allcontributors.org&#34;&gt;allcontributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mpadge&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/6697851?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/commits?author=mpadge&#34;&gt;mpadge&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/maelle&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/8360597?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/commits?author=maelle&#34;&gt;maelle&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/assignUser&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/16141871?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/commits?author=assignUser&#34;&gt;assignUser&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/n-kall&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/33577035?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/commits?author=n-kall&#34;&gt;n-kall&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/annakrystalli&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/5583057?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/commits?author=annakrystalli&#34;&gt;annakrystalli&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Issue Authors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/piyalkarum&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/48254643?u=370433a2ace6a030f2551575bc08fa53664fbd8f&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Apiyalkarum&#34;&gt;piyalkarum&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/noamross&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/571752?u=49b086850e1716aa25615cea39250c51e085a5d8&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Anoamross&#34;&gt;noamross&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/christophsax&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1390827?u=ce6363f6da758d1bb85987d021cacc34a81c8837&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Achristophsax&#34;&gt;christophsax&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/steffilazerte&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/14676081?u=579dde6328e94bc3787c99a42f7668a71884cd13&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Asteffilazerte&#34;&gt;steffilazerte&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/phuongquan&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/38658964?u=5761c2835f0a4853c9d7fb844061056a23d29564&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Aphuongquan&#34;&gt;phuongquan&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/s3alfisc&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/19531450?u=26be80705a31079d973246c98bf3b26d9131e7d3&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3As3alfisc&#34;&gt;s3alfisc&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Bisaloo&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/10783929?u=38e3754466eaa200e20f0609709467b6331cdfbe&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3ABisaloo&#34;&gt;Bisaloo&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Robinlovelace&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1825120?u=4b78d134ed1814b0677455f45d932b3b4a6ba3a5&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3ARobinlovelace&#34;&gt;Robinlovelace&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/schneiderpy&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/77991319?u=4242d4c5942fced6368dd5c68221e6618092cbf8&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Aschneiderpy&#34;&gt;schneiderpy&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/eliocamp&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/8617595?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Aeliocamp&#34;&gt;eliocamp&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/osorensen&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/21175639?u=086f58ad19c3fa56899f53a57567902e6f716074&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Aosorensen&#34;&gt;osorensen&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/KlausVigo&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/3372431?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3AKlausVigo&#34;&gt;KlausVigo&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sjentsch&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/37706914?u=e75071cb33e1bafdb16a60d7b713975b6722e9d9&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Asjentsch&#34;&gt;sjentsch&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/willgearty&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/7232514?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Awillgearty&#34;&gt;willgearty&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rmgpanw&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/54263156?u=0f76378ba42285080fb6752b8db126809a8be8a9&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+author%3Armgpanw&#34;&gt;rmgpanw&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Issue Contributors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/dgkf&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/18220321?u=bef717254e5b877159fa712e2b8ad6952c816064&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Adgkf&#34;&gt;dgkf&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cboettig&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/222586?u=dfbe54d3b4d538dc2a8c276bb5545fdf4684752f&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Acboettig&#34;&gt;cboettig&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jhollist&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/5438539?u=815aa29d708acd16180967c0ffaf81fc64a08bf4&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Ajhollist&#34;&gt;jhollist&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/santikka&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/8639149?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Asantikka&#34;&gt;santikka&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/bnicenboim&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/5982330?u=ec5543c6d11255fd330fc03f5880a1d7bdefadd7&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Abnicenboim&#34;&gt;bnicenboim&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/b-rodrigues&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/2998834?u=dc234ff00bbf1f391ea043ef1f2052d7d74892fc&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Ab-rodrigues&#34;&gt;b-rodrigues&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/philipp-baumann&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/21625034?u=f1fc41ef9e936f3bc8c6d38a78349890654310b8&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropensci-review-tools/pkgcheck/issues?q=is%3Aissue+commenter%3Aphilipp-baumann&#34;&gt;philipp-baumann&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
  <entry>
    <title>posit-dev/acquaint</title>
    <updated>2025-06-29T01:43:33Z</updated>
    <id>tag:github.com,2025-06-29:/posit-dev/acquaint</id>
    <link href="https://github.com/posit-dev/acquaint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Model Context Protocol Server For Your R Sessions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;acquaint &lt;a href=&#34;https://simonpcouch.github.io/acquaint/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/posit-dev/acquaint/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;240&#34; alt=&#34;A hexagonal logo showing a sparse, forested path opening up into a well-trodden meadow path.&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=acquaint&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/acquaint&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simonpcouch/acquaint/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/simonpcouch/acquaint/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;acquaint implements the [Model Context Protocol] in R. There are two sides to acquaint:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;R as an MCP server&lt;/strong&gt;: When configured with acquaint, MCP-enabled tools like Claude Desktop, Claude Code, and VS Code GitHub Copilot can run R code &lt;em&gt;in the sessions you have running&lt;/em&gt; to answer your questions. While the package supports configuring arbitrary R functions, acquaint provides a default set of tools &lt;a href=&#34;https://posit-dev.github.io/btw/&#34;&gt;from btw&lt;/a&gt; to peruse the documentation of packages you have installed, check out the objects in your global environment, and retrieve metadata about your session and platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;R as an MCP client&lt;/strong&gt;: Register third-party MCP servers with ellmer chats to integrate additional context into e.g.&amp;nbsp;&lt;a href=&#34;https://github.com/posit-dev/shinychat&#34;&gt;shinychat&lt;/a&gt; and &lt;a href=&#34;https://posit-dev.github.io/querychat/&#34;&gt;querychat&lt;/a&gt; apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;IMPORTANT: This package is highly experimental and its interface may change rapidly!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of acquaint like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pak::pak(&#34;posit-dev/acquaint&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;R as an MCP server&lt;/h3&gt; &#xA;&lt;p&gt;acquaint can be hooked up to any application that supports MCP. For example, to use with Claude Desktop, you might paste the following in your Claude Desktop configuration (on macOS, at &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;r-acquaint&#34;: {&#xA;      &#34;command&#34;: &#34;Rscript&#34;,&#xA;      &#34;args&#34;: [&#34;-e&#34;, &#34;acquaint::mcp_server()&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, to use with Claude Code, you might type in a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;claude mcp add -s &#34;user&#34; r-acquaint -- Rscript -e &#34;acquaint::mcp_server()&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, if you’d like models to access variables in specific R sessions, call &lt;code&gt;acquaint::mcp_session()&lt;/code&gt; in those sessions. (You might include a call to this function in your .Rprofile, perhaps using &lt;code&gt;usethis::edit_r_profile()&lt;/code&gt;, to automatically register every session you start up.)&lt;/p&gt; &#xA;&lt;h3&gt;R as an MCP client&lt;/h3&gt; &#xA;&lt;p&gt;acquaint uses the Claude Desktop configuration file format to register third-party MCP servers, as most MCP servers provide setup instructions for Claude Desktop in their documentation. For example, here’s what the &lt;a href=&#34;https://github.com/github/github-mcp-server&#34;&gt;official GitHub MCP server&lt;/a&gt; configuration would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;github&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-e&#34;,&#xA;        &#34;GITHUB_PERSONAL_ACCESS_TOKEN&#34;,&#xA;        &#34;ghcr.io/github/github-mcp-server&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;GITHUB_PERSONAL_ACCESS_TOKEN&#34;: &#34;&amp;lt;YOUR_TOKEN&amp;gt;&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the configuration file has been created (by default, acquaint will look to &lt;code&gt;file.path(&#34;~&#34;, &#34;.config&#34;, &#34;acquaint&#34;, &#34;config.json&#34;)&lt;/code&gt;), &lt;code&gt;mcp_tools()&lt;/code&gt; will return a list of ellmer tools which you can pass directly to the &lt;code&gt;$set_tools()&lt;/code&gt; method from ellmer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ch &amp;lt;- ellmer::chat_anthropic()&#xA;ch$set_tools(mcp_tools())&#xA;&#xA;ch$chat(&#34;What issues are open on posit-dev/acquaint?&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;In Claude Desktop, I’ll write the following:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using the R packages I have installed, write code to download data on flights in/out of Chicago airports in 2024.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In a typical chat interface, I’d be wary of two failure points here:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The model doesn’t know which packages I have installed.&lt;/li&gt; &#xA; &lt;li&gt;If the model correctly guesses which packages I have installed, there may not be enough information about how to &lt;em&gt;use&lt;/em&gt; the packages baked into its weights to write correct code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://github.com/user-attachments/assets/821ea3d6-4e30-46d6-ab9b-301276af2c35&#34; alt=&#34;A screencast of a chat with Claude. I ask &#39;Using the R packages I have installed, write code to download data on flights in/out of Chicago airports in 2024.&#39; and, after searching through the documentation of my currently installed R packages, Claude writes R code to do so.&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;Through first searching through my installed packages, Claude can locate the anyflights package, which seems like a reasonable solution. The model then discovers the package’s &lt;code&gt;anyflights()&lt;/code&gt; function and reads its documentation, and can pattern-match from there to write the correct code.&lt;/p&gt;</summary>
  </entry>
</feed>