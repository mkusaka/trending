<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:46:24Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hotneim/ban400-lectures</title>
    <updated>2022-11-20T01:46:24Z</updated>
    <id>tag:github.com,2022-11-20:/hotneim/ban400-lectures</id>
    <link href="https://github.com/hotneim/ban400-lectures" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for the material connected to the git/github-session in ban400&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ban400-git&lt;/h1&gt; &#xA;&lt;p&gt;Repository for the material connected to the lectures and workshops in ban400.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jtr13/cc22tt</title>
    <updated>2022-11-20T01:46:24Z</updated>
    <id>tag:github.com,2022-11-20:/jtr13/cc22tt</id>
    <link href="https://github.com/jtr13/cc22tt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source files for community contribution repo for EDAV Fall 2022 Tues/Thurs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cc22tt&lt;/h1&gt; &#xA;&lt;p&gt;Community contributions for STAT GR 5702 (EDAV) Fall 2022 Tues/Thurs&lt;/p&gt; &#xA;&lt;p&gt;The class projects will be collected as &lt;code&gt;.Rmd&lt;/code&gt; files and rendered into a bookdown book: &lt;a href=&#34;https://jtr13.github.io/cc22tt/&#34;&gt;https://jtr13.github.io/cc22tt/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributors, see: &lt;a href=&#34;https://jtr13.github.io/cc22tt/github-submission-instructions.html&#34;&gt;Submission Instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Collaborators, see: &lt;a href=&#34;https://jtr13.github.io/cc22tt/tutorial-for-pull-request-mergers.html&#34;&gt;Tutorial for Pull Request Mergers&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-lib/remotes</title>
    <updated>2022-11-20T01:46:24Z</updated>
    <id>tag:github.com,2022-11-20:/r-lib/remotes</id>
    <link href="https://github.com/r-lib/remotes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Install R packages from GitHub, GitLab, Bitbucket, git, svn repositories, URLs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;remotes&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Install R Packages from remote or local repositories, including GitHub, GitLab, Bitbucket, and Bioconductor&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/remotes/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/r-lib/remotes/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/r-lib/remotes?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-lib/remotes/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.r-pkg.org/pkg/remotes&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/remotes&#34; alt=&#34;CRAN RStudio mirror downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.r-pkg.org/pkg/remotes&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/remotes&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Download and install R packages stored in GitHub, GitLab, Bitbucket, Bioconductor, or plain subversion or git repositories. This package is a lightweight replacement of the &lt;code&gt;install_*&lt;/code&gt; functions in &lt;a href=&#34;https://github.com/r-lib/devtools&#34;&gt;&lt;code&gt;devtools&lt;/code&gt;&lt;/a&gt;. Indeed most of the code was copied over from &lt;code&gt;devtools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install packages with their dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Install from GitHub, GitLab, Bitbucket.&lt;/li&gt; &#xA;   &lt;li&gt;Install from git and subversion repositories.&lt;/li&gt; &#xA;   &lt;li&gt;Install from local files or URLs.&lt;/li&gt; &#xA;   &lt;li&gt;Install the dependencies of a local package tree.&lt;/li&gt; &#xA;   &lt;li&gt;Install specific package versions from CRAN.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://bioconductor.org/&#34;&gt;Bioconductor&lt;/a&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;code&gt;Remotes&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;. See more in the &lt;a href=&#34;https://github.com/r-lib/remotes/raw/HEAD/vignettes/dependencies.Rmd&#34;&gt;dependencies&lt;/a&gt; vignette.&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;code&gt;Additional_repositories&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Can install itself from GitHub (see below).&lt;/li&gt; &#xA; &lt;li&gt;Does not depend on other R packages.&lt;/li&gt; &#xA; &lt;li&gt;Does not contain compiled code, so no compiler is needed.&lt;/li&gt; &#xA; &lt;li&gt;Does not need any external software (for most of the functionality at least).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the released version of remotes from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;remotes&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Note that most of the examples here use GitHub. See below for other supported repository types.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest version of a package in the default branch from GitHub, you can use the &lt;code&gt;user/repo&lt;/code&gt; form. Note that &lt;code&gt;user&lt;/code&gt; can also be an organization:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;r-lib/conflicted&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the R package is inside a subdirectory of the root directory, then give this subdirectory as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# build = FALSE because of some specificities of XGBoost package&#xA;install_github(&#34;dmlc/xgboost/R-package&#34;, build = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a certain branch or commit or tag, append it to the repo name, after an &lt;code&gt;@&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;gaborcsardi/pkgconfig@v2.0.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the latest release, append &lt;code&gt;@*release&lt;/code&gt; to the repo name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;gaborcsardi/pkgconfig@*release&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a pull request, append &lt;code&gt;#&lt;/code&gt; and the id (an integer number) of the pull request to the repo name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;r-lib/pkgconfig#7&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Dependencies are automatically installed from CRAN. By default, outdated dependencies are automatically upgraded. In interactive sessions you can select a subset of the dependencies to upgrade.&lt;/p&gt; &#xA;&lt;h4&gt;Dependencies on GitHub&lt;/h4&gt; &#xA;&lt;p&gt;It is also possible to install dependencies from GitHub or other supported repositories. For this you need to add a &lt;code&gt;Remotes&lt;/code&gt; field to the &lt;code&gt;DESCRIPTION&lt;/code&gt; file. Its format is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Remotes: [remote::]repo_spec, [remote::]repo_spec, ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;repo_spec&lt;/code&gt; is any repository specification the corresponding &lt;code&gt;install_()&lt;/code&gt; function can handle. If &lt;code&gt;remote::&lt;/code&gt; is missing, &lt;code&gt;github::&lt;/code&gt; is assumed. Other possible values: &lt;code&gt;gitlab::&lt;/code&gt;,&lt;code&gt;bitbucket::&lt;/code&gt;, &lt;code&gt;git::&lt;/code&gt;, &lt;code&gt;local::&lt;/code&gt;, &lt;code&gt;svn::&lt;/code&gt;, &lt;code&gt;url::&lt;/code&gt;, &lt;code&gt;version::&lt;/code&gt;, &lt;code&gt;cran::&lt;/code&gt;, &lt;code&gt;bioc::&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See more about the &lt;code&gt;Remotes&lt;/code&gt; field in this &lt;a href=&#34;https://remotes.r-lib.org/articles/dependencies.html&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Additional repositories&lt;/h4&gt; &#xA;&lt;p&gt;remotes supports the &lt;code&gt;Additional_repositories&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;. This is a way to specify dependencies from non-CRAN package repositories. See the &lt;a href=&#34;https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-Dependencies&#34;&gt;Writing R extensions&lt;/a&gt; manual for details.&lt;/p&gt; &#xA;&lt;h4&gt;Bioconductor packages&lt;/h4&gt; &#xA;&lt;p&gt;Bioconductor packages are automatically detected and their dependencies are installed from Bioconductor.&lt;/p&gt; &#xA;&lt;h4&gt;Currently supported remote types&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub repositories via &lt;code&gt;install_github&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bitbucket repositories via &lt;code&gt;install_bitbucket&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generic git repositories via &lt;code&gt;install_git&lt;/code&gt;. They need either a system git installation, or the &lt;a href=&#34;https://github.com/ropensci/git2r&#34;&gt;git2r&lt;/a&gt; R package.&lt;/li&gt; &#xA; &lt;li&gt;Local directories or package archive files via &lt;code&gt;install_local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Remote package archive files via &lt;code&gt;install_url&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Packages in subversion repositories via &lt;code&gt;install_svn&lt;/code&gt;. They need a system subversion installation.&lt;/li&gt; &#xA; &lt;li&gt;Specific package versions from CRAN or other CRAN-like repositories via &lt;code&gt;install_version&lt;/code&gt;. This includes outdated and archived packages as well.&lt;/li&gt; &#xA; &lt;li&gt;All dependencies of a package in a local directory via &lt;code&gt;install_deps&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For R older than 3.2, the curl package is required as remotes falls back to &lt;code&gt;curl::curl_download&lt;/code&gt; in that case&lt;/li&gt; &#xA; &lt;li&gt;For R newer than 3.3, default &lt;code&gt;download.file()&lt;/code&gt; method is used. (&lt;code&gt;method = &#34;auto&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;For in between versions, &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;method = &#34;wininet&#34;&lt;/code&gt; is used on windows OS&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;method = &#34;libcurl&#34;&lt;/code&gt; is used on other OS, if available.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;code&gt;help(&#34;download.file&#34;)&lt;/code&gt; for informations on these methods and for setting proxies if needed.&lt;/p&gt; &#xA;&lt;h3&gt;Standalone mode&lt;/h3&gt; &#xA;&lt;p&gt;remotes will use the curl, git2r and pkgbuild packages if they are installed to provide faster implementations for some aspects of the install process. However if you are using remotes to install or update these packages (or their reverse dependencies) using them during installation may fail (particularly on Windows).&lt;/p&gt; &#xA;&lt;p&gt;If you set the environment variable &lt;code&gt;R_REMOTES_STANDALONE=&#34;true&#34;&lt;/code&gt; (e.g. in R &lt;code&gt;Sys.setenv(R_REMOTES_STANDALONE=&#34;true&#34;)&lt;/code&gt;) you can force remotes to operate in standalone mode and use only its internal R implementations. This will allow successful installation of these packages.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;remotes uses the following standard R options, see &lt;code&gt;?options&lt;/code&gt; for their details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;download.file.method&lt;/code&gt; for the default download method. See &lt;code&gt;?download.file&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;pkgType&lt;/code&gt; for the package type (source or binary, see manual) to install, download or look up dependencies for.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;repos&lt;/code&gt; for the locations of the user&#39;s standard CRAN(-like) repositories.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It also uses some remotes specific options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BioC_git&lt;/code&gt; for the URL of the default Bioconductor git mirror.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BioC_mirror&lt;/code&gt; for the URL of the Bioconductor mirror.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;unzip&lt;/code&gt; for the path of the external &lt;code&gt;unzip&lt;/code&gt; program.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;BITBUCKET_USER&lt;/code&gt; and &lt;code&gt;BITBUCKET_PASSWORD&lt;/code&gt; environment variables are used for the default Bitbucket user name and password, in &lt;code&gt;install_bitbucket()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;GITHUB_PAT&lt;/code&gt; environment variable is used as the default GitHub personal access token for all GitHub API queries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_BIOC_MIRROR&lt;/code&gt; environment variable can be used to specify an alternative Bioconductor mirror. (The &lt;code&gt;BioC_mirror&lt;/code&gt; option takes precedence over this.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_BIOC_VERSION&lt;/code&gt; environment variable can be used to force a Bioconductor version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_REMOTES_UPGRADE&lt;/code&gt; environment variable can be used to set a default preferred value for the &lt;code&gt;upgrade =&lt;/code&gt; argument accepted by the various &lt;code&gt;install_*()&lt;/code&gt; functions. For example, you can set &lt;code&gt;R_REMOTES_UPGRADE=&#34;always&#34;&lt;/code&gt; to upgrade dependent packages without asking the user.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting &lt;code&gt;R_REMOTES_STANDALONE=&#34;true&#34;&lt;/code&gt; forces remotes to work in standalone mode and avoid loading its optional dependencies (curl, git2 and pkgbuild currently. See &#34;Standalone mode&#34; above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting &lt;code&gt;R_REMOTES_NO_ERRORS_FROM_WARNINGS=&#34;false&#34;&lt;/code&gt; will cause warning messages during calls to &lt;code&gt;install.packages()&lt;/code&gt; to become errors. Often warning messages are caused by dependencies failing to install.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL (&amp;gt;= 2) © Mango Solutions, RStudio&lt;/p&gt;</summary>
  </entry>
</feed>