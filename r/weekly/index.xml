<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-07T02:03:16Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JannaRap/Good-Judgment-Project</title>
    <updated>2023-05-07T02:03:16Z</updated>
    <id>tag:github.com,2023-05-07:/JannaRap/Good-Judgment-Project</id>
    <link href="https://github.com/JannaRap/Good-Judgment-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UPenn folder for the project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Good-Judgment-Project&lt;/h1&gt; &#xA;&lt;p&gt;UPenn folder for the project&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>haozhu233/kableExtra</title>
    <updated>2023-05-07T02:03:16Z</updated>
    <id>tag:github.com,2023-05-07:/haozhu233/kableExtra</id>
    <link href="https://github.com/haozhu233/kableExtra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Construct Complex Table with knitr::kable() + pipe.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kableExtra &lt;img src=&#34;https://haozhu233.github.io/kableExtra/kableExtra.svg?sanitize=true&#34; align=&#34;right&#34; alt=&#34;logo&#34; width=&#34;120&#34; height=&#34;139&#34; style=&#34;border: none; float: right;&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=kableExtra&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/kableExtra&#34; alt=&#34;CRAN_version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=kableExtra&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/kableExtra&#34; alt=&#34;CRAN_download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=kableExtra&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/kableExtra&#34; alt=&#34;CRAN_download_total&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.1035917&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.1035917.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;When we are talking about table generators in R, &lt;a href=&#34;https://yihui.org/knitr/&#34;&gt;knitr&lt;/a&gt;&#39;s &lt;code&gt;kable()&lt;/code&gt; function is usually a popular choice because of its ultimate simplicity. Unlike those powerful table rendering engines such as &lt;a href=&#34;https://CRAN.R-project.org/package=xtable&#34;&gt;&lt;code&gt;xtable&lt;/code&gt;&lt;/a&gt;, the philosophy behind &lt;a href=&#34;https://rdrr.io/cran/knitr/man/kable.html&#34;&gt;&lt;code&gt;knitr::kable()&lt;/code&gt;&lt;/a&gt; is to make it easy for programmers to use. Just as it claimed in its function description,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a very simple table generator. It is simple by design. It is not intended to replace any other R packages for making tables. - Yihui&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;However, the ultimate simplicity of &lt;code&gt;kable()&lt;/code&gt; also brought troubles to some of us, especially for new R users, who may not have a lot of experience on generating tables in R. It is not rare to see people including experienced users asking questions like how to center/left-align a table on Stack Overflow. Also, for me personally, I found myself repeatedly parsing CSS into &lt;code&gt;kable()&lt;/code&gt; for some very simple features like striped lines. For LaTeX, it&#39;s even worse since I&#39;m almost Stack Overflow dependent for LaTeX... That&#39;s why this package &lt;code&gt;kableExtra&lt;/code&gt; was created.&lt;/p&gt; &#xA;&lt;p&gt;I hope with &lt;code&gt;kableExtra&lt;/code&gt;, you can&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use default base &lt;code&gt;kable()&lt;/code&gt; (Or a good alternative for markdown tables is &lt;code&gt;pander::pander()&lt;/code&gt;) for all simple tables&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;kable()&lt;/code&gt; with &lt;code&gt;kableExtra&lt;/code&gt; to generate 90 % of complex/advanced/self-customized/beautiful tables in either HTML or LaTeX&lt;/li&gt; &#xA; &lt;li&gt;Only have to mess with raw HTML/LaTeX in the last 10% cases where &lt;code&gt;kableExtra&lt;/code&gt; cannot solve the problem&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This package can load required LaTeX package automatically in vanilla rmarkdown. For customized rmarkdown templates, it is recommended to load related LaTeX packages manually.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Pipable syntax&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;kableExtra&lt;/code&gt; is NOT a table generating package. It is a package that can &lt;strong&gt;&#34;add features&#34;&lt;/strong&gt; to a &lt;code&gt;kable()&lt;/code&gt; output using a syntax that every useR loves - the &lt;a href=&#34;https://r4ds.had.co.nz/pipes.html&#34;&gt;pipes &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/a&gt;. We see similar approaches to deal with plots in packages like &lt;code&gt;ggvis&lt;/code&gt; and &lt;code&gt;plotly&lt;/code&gt;. There is no reason why we cannot use it with tables.&lt;/p&gt; &#xA;&lt;h3&gt;Unified functions for both HTML and PDF&lt;/h3&gt; &#xA;&lt;p&gt;Most functionalities in &lt;code&gt;kableExtra&lt;/code&gt; can work in both HTML and PDF. In fact, as long as you specifies format in &lt;code&gt;kable()&lt;/code&gt; (which can be set globally through option &lt;code&gt;knitr.table.format&lt;/code&gt;), functions in this package will pick the right way to manipulate the table be themselves. As a result, if users want to left align the table, &lt;code&gt;kable(...) %&amp;gt;% kable_styling(position = &#34;left&#34;)&lt;/code&gt; will work in both HTML and PDF. Recently, we also introduced a new &lt;code&gt;kbl()&lt;/code&gt; function acting as an alternative to &lt;code&gt;kable&lt;/code&gt; but provides better documentation and format detection.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;kableExtra&#34;)&#xA;&#xA;# For dev version&#xA;devtools::install_github(&#34;haozhu233/kableExtra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(kableExtra)&#xA;dt &amp;lt;- mtcars[1:5, 1:4]&#xA;&#xA;# HTML table&#xA;kbl(dt, caption = &#34;Demo Table&#34;) %&amp;gt;%&#xA;  kable_styling(bootstrap_options = &#34;striped&#34;,&#xA;                full_width = F) %&amp;gt;%&#xA;  add_header_above(c(&#34; &#34;, &#34;Group 1&#34; = 2, &#34;Group 2[note]&#34; = 2)) %&amp;gt;%&#xA;  footnote(c(&#34;table footnote&#34;))&#xA;&#xA;# LaTeX Table&#xA;kbl(dt, booktabs = T, caption = &#34;Demo Table&#34;) %&amp;gt;%&#xA;  kable_styling(latex_options = c(&#34;striped&#34;, &#34;hold_position&#34;),&#xA;                full_width = F) %&amp;gt;%&#xA;  add_header_above(c(&#34; &#34;, &#34;Group 1&#34; = 2, &#34;Group 2[note]&#34; = 2)) %&amp;gt;%&#xA;  footnote(c(&#34;table footnote&#34;))&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Results&lt;/h3&gt; &#xA;&lt;img src=&#34;http://i.imgur.com/0e2b4P3.png&#34; height=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;http://i.imgur.com/q46hzORm.png&#34; height=&#34;200&#34;&gt; &#xA;&lt;h2&gt;More Information&lt;/h2&gt; &#xA;&lt;p&gt;For more information, please check the package vignette.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://haozhu233.github.io/kableExtra/awesome_table_in_html.html&#34;&gt;Create Awesome HTML Table with &lt;code&gt;knitr::kable()&lt;/code&gt; and kableExtra&lt;/a&gt; (&lt;a href=&#34;http://haozhu233.github.io/kableExtra/awesome_table_in_html_cn.html&#34;&gt;中文&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://haozhu233.github.io/kableExtra/awesome_table_in_pdf.pdf&#34;&gt;Create Awesome LaTeX Table with &lt;code&gt;knitr::kable()&lt;/code&gt; and kableExtra&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank colleagues at Hebrew SeniorLife &lt;a href=&#34;https://www.marcusinstituteforaging.org/&#34;&gt;Marcus Institute for Aging Research&lt;/a&gt; and the &lt;a href=&#34;https://pepper.bwh.harvard.edu/&#34;&gt;Boston Pepper Center&lt;/a&gt; for their input. I also would like to appreciate the mentorship from Tom Travison (&lt;a href=&#34;https://twitter.com/tgt75&#34;&gt;@tgt75&lt;/a&gt;) and all the efforts from the open source community, which help this package keep getting better.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hughjonesd/ggmagnify</title>
    <updated>2023-05-07T02:03:16Z</updated>
    <id>tag:github.com,2023-05-07:/hughjonesd/ggmagnify</id>
    <link href="https://github.com/hughjonesd/ggmagnify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create a magnified inset of part of a ggplot object&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggmagnify&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hughjonesd/ggmagnify/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/hughjonesd/ggmagnify/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;ggmagnify creates a magnified inset of part of a &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;ggplot&lt;/a&gt; object. Borders can be drawn around the target area and the inset, along with projection lines from one to the other. The inset can have a drop shadow. The magnified area can be a rectangle or an ellipse.&lt;/p&gt; &#xA;&lt;p&gt;You can install the development version of ggmagnify from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;hughjonesd/ggmagnify&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic inset&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;library(ggmagnify)&#xA;&#xA;ggp &amp;lt;- ggplot(dv, aes(Position, NegLogP, color = cut)) + &#xA;  geom_point(color = &#34;darkblue&#34;, alpha = 0.8, size = 0.8) +&#xA;  labs(title = &#34;GWAS p-values for cognitive function&#34;,&#xA;       subtitle = &#34;Davies et al. (2018).&#34;, y = &#34;-log(p)&#34;)&#xA;&#xA;# x0, y0, x1, y1 of target:&#xA;from &amp;lt;- c(9.75e7, 16, 9.95e7, 28)&#xA;# x0, y0, x1, y1 of inset:&#xA;to &amp;lt;- c(2e08 - 2e7, 10, 2e08 + 2e7,26)&#xA;ggp + geom_magnify(from = from, to = to)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-basic-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Colours and lines&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggp + &#xA;  geom_magnify(from = from, to = to,&#xA;               colour = &#34;red&#34;, linewidth = 0.5, proj.linetype = 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-colours-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Axes&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggp + &#xA;  scale_x_continuous(labels = NULL) + &#xA;  geom_magnify(from = from, to = to, &#xA;               axes = &#34;xy&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-axes-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Inset with shadow&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;loadNamespace(&#34;ggfx&#34;)&#xA;#&amp;gt; &amp;lt;environment: namespace:ggfx&amp;gt;&#xA;&#xA;ggp + &#xA;  geom_magnify(from = from, to = to, &#xA;               shadow = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-shadow-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Ellipse&lt;/h2&gt; &#xA;&lt;p&gt;This requires R &amp;gt;= 4.2.0 and an appropriate graphics device.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;loadNamespace(&#34;ggforce&#34;)&#xA;#&amp;gt; &amp;lt;environment: namespace:ggforce&amp;gt;&#xA;&#xA;ggp + &#xA;  geom_magnify(from = from, to = to, &#xA;               shape = &#34;ellipse&#34;, shadow = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-ellipse-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Faceting (experimental)&lt;/h2&gt; &#xA;&lt;p&gt;Faceting involves dark magic with ggplot2 internals. Use at your own risk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;iris$median_sw &amp;lt;- ave(iris$Sepal.Width, iris$Species, FUN = median)&#xA;iris$median_sl &amp;lt;- ave(iris$Sepal.Length, iris$Species, FUN = median)&#xA;&#xA;ggpi &amp;lt;- ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +&#xA;              geom_point() + xlim(c(2, 6))&#xA;&#xA;# geom_magnify_tile uses x, y, width and height&#xA;ggpi +&#xA;  facet_wrap(vars(Species)) +&#xA;  geom_magnify_tile(aes(x = median_sw, y = median_sl), &#xA;                    width = 1, height = 1,&#xA;                    to_x = 5, to_y = 5, to_width = 1.5, to_height = 1.5,&#xA;                    shadow = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-faceting-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Maps (experimental)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;nc &amp;lt;- sf::st_read(system.file(&#34;shape/nc.shp&#34;, package = &#34;sf&#34;), quiet = TRUE)&#xA;ggpm &amp;lt;- ggplot(nc) +&#xA;          geom_sf(aes(fill = AREA)) +&#xA;          coord_sf(default_crs = sf::st_crs(4326))&#xA;&#xA;ggpm + geom_magnify(from = c(-79, 35, -77, 35.5),&#xA;                    to = c(-84, 34, -80, 35), &#xA;                    colour = &#34;orange&#34;, linewidth = 1, shadow = TRUE, &#xA;                    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-map-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Tips and tricks&lt;/h2&gt; &#xA;&lt;h3&gt;Adding layers to the inset&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;geom_magnify()&lt;/code&gt; stores the plot when it is added to it. So, order matters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggpi &amp;lt;- ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +&#xA;              geom_point() + xlim(2, 6)&#xA;ggpi + &#xA;  geom_smooth() + &#xA;  geom_magnify(from = c(2.5, 6, 3.5, 7), to = c(4.7, 4.3, 6.1, 5.7))&#xA;#&amp;gt; `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39;&#xA;#&amp;gt; `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-order-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Print the inset without the smooth:&#xA;ggpi +&#xA;  geom_magnify(from = c(2.5, 6, 3.5, 7), to = c(4.7, 4.3, 6.1, 5.7)) +&#xA;  geom_smooth()&#xA;#&amp;gt; `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-order-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;For complex modifications to the inset, set &lt;code&gt;plot&lt;/code&gt; explicitly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;booms &amp;lt;- ggplot(faithfuld, aes(waiting, eruptions)) +&#xA;         geom_contour_filled(aes(z = density)) +&#xA;         scale_fill_viridis_d(option = &#34;B&#34;)&#xA;&#xA;booms_inset &amp;lt;- booms + &#xA;  geom_point(data = faithful, color = &#34;red&#34;, fill = &#34;white&#34;, alpha = 0.7, &#xA;             size = 2, shape = &#34;circle filled&#34;) + &#xA;  coord_cartesian(expand = FALSE)&#xA;&#xA;shadow.args &amp;lt;- list(&#xA;  colour = alpha(&#34;grey80&#34;, 0.8),&#xA;  x_offset = 0,&#xA;  y_offset = 0,&#xA;  sigma = 10&#xA;)&#xA;&#xA;booms + geom_magnify(from = c(78, 4.0, 90, 4.8), to = c(70, 1.7, 90, 3.3),&#xA;                     colour = &#34;white&#34;, shape = &#34;ellipse&#34;,&#xA;                     shadow = TRUE, shadow.args = shadow.args,&#xA;                     plot = booms_inset)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-advanced-2-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Draw an inset outside the plot region&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggp + &#xA;  coord_cartesian(clip = &#34;off&#34;) + &#xA;  theme(plot.margin = ggplot2::margin(10, 60, 10, 10)) +&#xA;  geom_magnify(from = from, to = to + c(0.5e8, 0, 0.5e8, 0), &#xA;               shadow = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-noclip-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Keep grid lines the same&lt;/h3&gt; &#xA;&lt;p&gt;To make sure the inset uses the same grid lines as the main graph, set &lt;code&gt;breaks&lt;/code&gt; in &lt;code&gt;scale_x&lt;/code&gt; and &lt;code&gt;scale_y&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggp2 &amp;lt;- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) + &#xA;        geom_point() +&#xA;        theme_classic() + &#xA;        theme(panel.grid.major = element_line(&#34;grey80&#34;),&#xA;              panel.grid.minor = element_line(&#34;grey90&#34;))&#xA;&#xA;# different grid lines:&#xA;ggp2 + &#xA;  geom_magnify(from = c(2.45, 5.9, 3.05, 6.6), to = c(3.4, 5.5 , 4.4, 6.6),&#xA;               shadow = TRUE) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-gridlines-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# fix the grid lines:&#xA;ggp2 +&#xA;  scale_x_continuous(breaks = seq(2, 5, 0.5)) + &#xA;  scale_y_continuous(breaks = seq(5, 8, 0.5)) + &#xA;  geom_magnify(from = c(2.45, 5.9, 3.05, 6.6), to = c(3.4, 5.5 , 4.4, 6.6),&#xA;               shadow = TRUE) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-gridlines-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Recomputing data&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;recompute&lt;/code&gt; if you want to recompute smoothers, densities, etc. in the inset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; &#xA;df &amp;lt;- data.frame(x = seq(-5, 5, length = 500), y = 0)&#xA;df$y[abs(df$x) &amp;lt; 1] &amp;lt;- sin(df$x[abs(df$x) &amp;lt; 1])&#xA;df$y &amp;lt;- df$y + rnorm(500, mean = 0, sd = 0.25)&#xA;&#xA;ggp2 &amp;lt;- ggplot(df, aes(x, y)) + &#xA;  geom_point() + &#xA;  geom_smooth(method = &#34;loess&#34;, formula = y ~ x) + &#xA;  ylim(-5, 5)&#xA;&#xA;# The default:&#xA;ggp2 + geom_magnify(from = c(-1.25, -1, 1.25, 1),&#xA;                    to = c(2, 1, 5, 5))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-recompute-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# Recomputing recalculates the smooth for the inset:&#xA;ggp2 + geom_magnify(from = c(-1.25, -1, 1.25, 1),&#xA;                    to = c(2, 1, 5, 5),&#xA;                    recompute = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-recompute-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Magnify within a magnify&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(&#xA;  data.frame(x=runif(3000, 2,4.5),y= runif(3000, 4, 8)), &#xA;  aes(x=x,y=y)) +&#xA;  coord_cartesian(expand = FALSE) +&#xA;  geom_density2d_filled(bins = 50, linewidth = 0) +&#xA;  geom_point(color=&#39;white&#39;, alpha = .5, size = .5) + &#xA;  theme(legend.position = &#34;none&#34;) +&#xA;  geom_magnify(from = c(2.1, 4.1, 2.4, 4.4), to = c(2.5, 4.5, 3.4, 5.4), &#xA;               colour = &#34;white&#34;, proj.linetype = 1, linewidth = 0.6) +&#xA;  geom_magnify(from = c(2.8, 4.8, 3.1, 5.1), to = c(3,5.5,4.4,6.9), &#xA;               expand = FALSE, colour =&#34;white&#34;, proj.linetype = 1, &#xA;               linewidth = 0.6)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-magnify-twice-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;An inset &lt;em&gt;within&lt;/em&gt; an inset is a bit more complex, but also doable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggp &amp;lt;- data.frame(x = rnorm(1e5), y = rnorm(1e5), &#xA;                  colour = sample(8L, 1e5, replace = TRUE)) |&amp;gt; &#xA;  ggplot(aes(x = x, y = y, colour = factor(colour))) + &#xA;  scale_color_brewer(type = &#34;qual&#34;, palette = 2) +&#xA;  geom_point(alpha = 0.12, size = 0.7) + &#xA;  lims(x = c(-3,3), y = c(-3,3)) +&#xA;  theme_classic() + theme(panel.grid = element_blank(), &#xA;                          axis.line = element_blank(), &#xA;                          plot.background = element_rect(fill = &#34;black&#34;),&#xA;                          panel.background = element_rect(fill = &#34;black&#34;),&#xA;                          legend.position = &#34;none&#34;)&#xA;&#xA;ggpm &amp;lt;- ggp + &#xA;  lims(x = c(-0.3, 0.3), y = c(-0.3, 0.3)) + &#xA;  geom_magnify(from = c(-0.03, -0.03, 0.03, 0.03),&#xA;               to = c(-0.3, -0.3, -0.1, -0.1),&#xA;               expand = FALSE, colour = &#34;white&#34;)&#xA;#&amp;gt; Scale for x is already present.&#xA;#&amp;gt; Adding another scale for x, which will replace the existing scale.&#xA;#&amp;gt; Scale for y is already present.&#xA;#&amp;gt; Adding another scale for y, which will replace the existing scale.&#xA;&#xA;ggp + &#xA;  geom_magnify(plot = ggpm, &#xA;               from = c(-0.3, -0.3, 0.3, 0.3),&#xA;               to = c(-3, -3, -1, -1),&#xA;               expand = FALSE, colour = &#34;white&#34;) +&#xA;  labs(title = &#34;Normal data&#34;, &#xA;       subtitle = &#34;The distribution gets more uniform as you zoom in&#34;)&#xA;#&amp;gt; Warning: Removed 566 rows containing missing values (`geom_point()`).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hughjonesd/ggmagnify/master/man/figures/README-example-and-so-ad-infinitum-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;Davies et al.&amp;nbsp;(2018) ‘Study of 300,486 individuals identifies 148 independent genetic loci influencing general cognitive function.’ Nature Communications&lt;/p&gt; &#xA;&lt;p&gt;Data was trimmed to remove overlapping points.&lt;/p&gt;</summary>
  </entry>
</feed>