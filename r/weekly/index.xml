<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-31T02:22:36Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>broadinstitute/infercnv</title>
    <updated>2022-07-31T02:22:36Z</updated>
    <id>tag:github.com,2022-07-31:/broadinstitute/infercnv</id>
    <link href="https://github.com/broadinstitute/infercnv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Inferring CNV from Single-Cell RNA-Seq&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Visit project &lt;a href=&#34;https://github.com/broadinstitute/inferCNV/wiki&#34;&gt;wiki&lt;/a&gt; for InferCNV documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-lib/pkgdown</title>
    <updated>2022-07-31T02:22:36Z</updated>
    <id>tag:github.com,2022-07-31:/r-lib/pkgdown</id>
    <link href="https://github.com/r-lib/pkgdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate static html documentation for an R package&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pkgdown &lt;img src=&#34;https://raw.githubusercontent.com/r-lib/pkgdown/main/man/figures/logo.png&#34; align=&#34;right&#34; alt=&#34;&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=pkgdown&#34; class=&#34;pkgdown-release&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/pkgdown&#34; alt=&#34;CRAN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r-lib/pkgdown/actions&#34; class=&#34;pkgdown-devel&#34;&gt;&lt;img src=&#34;https://github.com/r-lib/pkgdown/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/r-lib/pkgdown?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-lib/pkgdown/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;pkgdown is designed to make it quick and easy to build a website for your package. You can see pkgdown in action at &lt;a href=&#34;https://pkgdown.r-lib.org&#34;&gt;https://pkgdown.r-lib.org&lt;/a&gt;: this is the output of pkgdown applied to the latest version of pkgdown. Learn more in &lt;code&gt;vignette(&#34;pkgdown&#34;)&lt;/code&gt; or &lt;code&gt;?build_site&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;div class=&#34;.pkgdown-release&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install released version from CRAN&#xA;install.packages(&#34;pkgdown&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;.pkgdown-devel&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install development version from GitHub&#xA;devtools::install_github(&#34;r-lib/pkgdown&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Get started with &lt;a href=&#34;https://usethis.r-lib.org/&#34;&gt;usethis&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Run once to configure your package to use pkgdown&#xA;usethis::use_pkgdown()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use pkgdown to build your website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pkgdown::build_site()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This generates a &lt;code&gt;docs/&lt;/code&gt; directory containing a website. Your &lt;code&gt;README.md&lt;/code&gt; becomes the homepage, documentation in &lt;code&gt;man/&lt;/code&gt; generates a function reference, and vignettes will be rendered into &lt;code&gt;articles/&lt;/code&gt;. Read &lt;code&gt;vignette(&#34;pkgdown&#34;)&lt;/code&gt; for more details, and to learn how to deploy your site to GitHub pages.&lt;/p&gt; &#xA;&lt;h3&gt;pkgdown 2.0.0 and Bootstrap 5&lt;/h3&gt; &#xA;&lt;p&gt;pkgdown 2.0.0 includes an upgrade from Bootstrap 3 to Bootstrap 5, which is accompanied by a whole bunch of minor UI improvements. If you’ve heavily customised your site, there’s a small chance that this will break your site, so everyone needs to explicitly opt-in to the upgrade by adding the following to &lt;code&gt;_pkgdown.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;template:&#xA;  bootstrap: 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then learn about the many new ways to customise your site in &lt;code&gt;vignette(&#34;customise&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;In the wild&lt;/h2&gt; &#xA;&lt;p&gt;At last count, pkgdown is used &lt;a href=&#34;https://github.com/search?q=filename%3Apkgdown.yml+path%3A%2F&amp;amp;type=Code&#34;&gt;by over 6,000 packages&lt;/a&gt;. Here are a few examples created by contributors to pkgdown:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mc-stan.org/bayesplot/index.html&#34;&gt;bayesplot&lt;/a&gt; (&lt;a href=&#34;https://github.com/stan-dev/bayesplot/tree/gh-pages&#34;&gt;source&lt;/a&gt;): plotting functions for posterior analysis, model checking, and MCMC diagnostics.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://rnabioco.github.io/valr/&#34;&gt;valr&lt;/a&gt; (&lt;a href=&#34;https://github.com/rnabioco/valr&#34;&gt;source&lt;/a&gt;): read and manipulate genome intervals and signals.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkgdown.jrwb.de/mkin/&#34;&gt;mkin&lt;/a&gt; (&lt;a href=&#34;https://github.com/jranke/mkin&#34;&gt;source&lt;/a&gt;): calculation routines based on the FOCUS Kinetics Report&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://renozao.github.io/NMF/master/index.html&#34;&gt;NMF&lt;/a&gt; (&lt;a href=&#34;https://github.com/renozao/NMF&#34;&gt;source&lt;/a&gt;): a framework to perform non-negative matrix factorization (NMF).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Comparing the source and output of these sites is a great way to learn new pkgdown techniques.&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://pkgdown.r-lib.org/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-lib/devtools</title>
    <updated>2022-07-31T02:22:36Z</updated>
    <id>tag:github.com,2022-07-31:/r-lib/devtools</id>
    <link href="https://github.com/r-lib/devtools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tools to make an R developer&#39;s life easier&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;devtools &lt;img src=&#34;https://raw.githubusercontent.com/r-lib/devtools/main/man/figures/logo.svg?sanitize=true&#34; align=&#34;right&#34; height=&#34;150/&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/devtools/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/r-lib/devtools/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/r-lib/devtools?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-lib/devtools/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=devtools&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/devtools&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The aim of devtools is to make package development easier by providing R functions that simplify and expedite common tasks. &lt;a href=&#34;https://r-pkgs.org/&#34;&gt;R Packages&lt;/a&gt; is a book based around this workflow.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install devtools from CRAN&#xA;install.packages(&#34;devtools&#34;)&#xA;&#xA;# Or the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;r-lib/devtools&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/main/package-development.pdf&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/cheatsheets/raw/main/pngs/thumbnails/package-development-thumbs.png&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;All devtools functions accept a path as an argument, e.g. &lt;code&gt;load_all(&#34;path/to/mypkg&#34;)&lt;/code&gt;. If you don&#39;t specify a path, devtools will look in the current working directory - this is a recommended practice.&lt;/p&gt; &#xA;&lt;h3&gt;Frequent development tasks:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;load_all()&lt;/code&gt; simulates installing and reloading your package, loading R code in &lt;code&gt;R/&lt;/code&gt;, compiled shared objects in &lt;code&gt;src/&lt;/code&gt; and data files in &lt;code&gt;data/&lt;/code&gt;. During development you would usually want to access all functions (even un-exported internal ones) so &lt;code&gt;load_all()&lt;/code&gt; works as if all functions were exported in the package &lt;code&gt;NAMESPACE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;document()&lt;/code&gt; updates generated documentation in &lt;code&gt;man/&lt;/code&gt;, file collation and &lt;code&gt;NAMESPACE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test()&lt;/code&gt; reloads your code with &lt;code&gt;load_all()&lt;/code&gt;, then runs all &lt;code&gt;testthat&lt;/code&gt; tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test_coverage()&lt;/code&gt; runs test coverage on your package with &lt;a href=&#34;https://github.com/r-lib/covr&#34;&gt;covr&lt;/a&gt;. This makes it easy to see what parts of your package could use more tests!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building and installing:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;install()&lt;/code&gt; reinstalls the package, detaches the currently loaded version then reloads the new version with &lt;code&gt;library()&lt;/code&gt;. Reloading a package is not guaranteed to work: see the documentation for &lt;code&gt;unload()&lt;/code&gt; for caveats.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;build()&lt;/code&gt; builds a package file from package sources. You can use it to build a binary version of your package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;install_*&lt;/code&gt; functions install an R package:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_github()&lt;/code&gt; from GitHub&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_gitlab()&lt;/code&gt; from GitLab&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_bitbucket()&lt;/code&gt; from Bitbucket&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_url()&lt;/code&gt; from an arbitrary url&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_git()&lt;/code&gt; and &lt;code&gt;install_svn()&lt;/code&gt; from an arbitrary git or SVN repository&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_local()&lt;/code&gt; from a local file on disk&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_version()&lt;/code&gt; from a specific version on CRAN&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;update_packages()&lt;/code&gt; updates a package to the latest version. This works both on packages installed from CRAN as well as those installed from any of the &lt;code&gt;install_*&lt;/code&gt; functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Check and release:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;check()&lt;/code&gt; updates the documentation, then builds and checks the package locally. &lt;code&gt;check_win()&lt;/code&gt; checks a package using &lt;a href=&#34;https://win-builder.r-project.org/&#34;&gt;win-builder&lt;/a&gt;, and &lt;code&gt;check_rhub()&lt;/code&gt; checks a package using &lt;a href=&#34;https://log.r-hub.io/&#34;&gt;r-hub&lt;/a&gt;. This allows you to easily check your package on all systems CRAN uses before submission.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;release()&lt;/code&gt; makes sure everything is ok with your package (including asking you a number of questions), then builds and uploads to CRAN.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learning more&lt;/h2&gt; &#xA;&lt;p&gt;R package development can be intimidating, however there are now a number of valuable resources to help!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://r-pkgs.org&#34;&gt;&lt;img src=&#34;http://r-pkgs.org/images/cover.png&#34; height=&#34;252&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;R Packages is a book that gives a comprehensive treatment of all common parts of package development and uses devtools throughout.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The first edition is available at &lt;a href=&#34;https://r-pkgs.org/&#34;&gt;https://r-pkgs.org/&lt;/a&gt;, but note that it has grown somewhat out of sync with the current version of devtools.&lt;/li&gt; &#xA;   &lt;li&gt;A second edition is under development and is evolving to reflect the current state of devtools. It is available at &lt;a href=&#34;https://r-pkgs.org&#34;&gt;https://r-pkgs.org&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://r-pkgs.org/whole-game.html&#34;&gt;Whole Game&lt;/a&gt; and &lt;a href=&#34;https://r-pkgs.org/package-structure-state.html&#34;&gt;Package structure&lt;/a&gt; chapters make great places to start.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.rstudio.com/c/package-development/11&#34;&gt;RStudio community - package development&lt;/a&gt; is a great place to ask specific questions related to package development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://devguide.ropensci.org/&#34;&gt;rOpenSci packages&lt;/a&gt; has extensive documentation on best practices for R packages looking to be contributed to rOpenSci, but also very useful general recommendations for package authors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There are a number of fantastic blog posts on writing your first package, including&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&#34;&gt;Writing an R package from scratch - Hilary Parker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://masalmon.eu/2017/12/11/goodrpackages/&#34;&gt;How to develop good R packages - Maëlle Salmon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tinyheero.github.io/jekyll/update/2015/07/26/making-your-first-R-package.html&#34;&gt;Making your first R package - Fong Chun Chan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://r-mageddon.netlify.app/post/writing-an-r-package-from-scratch/&#34;&gt;Writing an R package from scratch - Tomas Westlake&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/doc/manuals/r-release/R-exts.html&#34;&gt;Writing R Extensions&lt;/a&gt; is the exhaustive, canonical reference for writing R packages, maintained by the R core developers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Conscious uncoupling&lt;/h2&gt; &#xA;&lt;p&gt;devtools started off as a lean-and-mean package to facilitate local package development, but over the years it accumulated more and more functionality. devtools has undergone a &lt;a href=&#34;https://web.archive.org/web/20140326060230/https://www.goop.com/journal/be/conscious-uncoupling&#34;&gt;conscious uncoupling&lt;/a&gt; to split out functionality into smaller, more tightly focussed packages. This includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/testthat&#34;&gt;testthat&lt;/a&gt;: Writing and running tests (i.e. &lt;code&gt;test()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/roxygen2&#34;&gt;roxygen2&lt;/a&gt;: Function and package documentation (i.e. &lt;code&gt;document()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/remotes&#34;&gt;remotes&lt;/a&gt;: Installing packages (i.e. &lt;code&gt;install_github()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/pkgbuild&#34;&gt;pkgbuild&lt;/a&gt;: Building binary packages (including checking if build tools are available) (i.e. &lt;code&gt;build()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/pkgload&#34;&gt;pkgload&lt;/a&gt;: Simulating package loading (i.e. &lt;code&gt;load_all()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/rcmdcheck&#34;&gt;rcmdcheck&lt;/a&gt;: Running R CMD check and reporting the results (i.e. &lt;code&gt;check()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/revdepcheck&#34;&gt;revdepcheck&lt;/a&gt;: Running R CMD check on all reverse dependencies, and figuring out what&#39;s changed since the last CRAN release (i.e. &lt;code&gt;revdep_check()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;: R session info (i.e. &lt;code&gt;session_info()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/usethis&#34;&gt;usethis&lt;/a&gt;: Automating package setup (i.e. &lt;code&gt;use_test()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generally, you would not need to worry about these different packages, because devtools installs all of them automatically. You will need to care, however, if you&#39;re filing a bug because reporting it at the correct place will lead to a speedier resolution.&lt;/p&gt; &#xA;&lt;p&gt;You may also need to care if you are trying to use some devtools functionality in your own package or deployed application. Generally in these cases it is better to depend on the particular package directly rather than depend on devtools, e.g. use &lt;code&gt;sessioninfo::session_info()&lt;/code&gt; rather than &lt;code&gt;devtools::session_info()&lt;/code&gt;, or &lt;code&gt;remotes::install_github()&lt;/code&gt; vs &lt;code&gt;devtools::install_github()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However for day to day development we recommend you continue to use &lt;code&gt;library(devtools)&lt;/code&gt; to quickly load all needed development tools, just like &lt;code&gt;library(tidyverse)&lt;/code&gt; quickly loads all the tools necessary for data exploration and visualization.&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the devtools project is released with a &lt;a href=&#34;https://github.com/r-lib/devtools/raw/main/.github/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
</feed>