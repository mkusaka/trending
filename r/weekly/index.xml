<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:34:22Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yhat/yhatr</title>
    <updated>2024-04-21T03:34:22Z</updated>
    <id>tag:github.com,2024-04-21:/yhat/yhatr</id>
    <link href="https://github.com/yhat/yhatr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;wrapper for the yhat API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yhatr&lt;/h1&gt; &#xA;&lt;p&gt;For documentation see: &lt;a href=&#34;http://docs.yhathq.com/r/&#34;&gt;http://docs.yhathq.com/r/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>R-ArcGIS/arcgisgeocode</title>
    <updated>2024-04-21T03:34:22Z</updated>
    <id>tag:github.com,2024-04-21:/R-ArcGIS/arcgisgeocode</id>
    <link href="https://github.com/R-ArcGIS/arcgisgeocode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilize public or private ArcGIS Geocoder Services from R. Provides reverse geocoding, candidate search, single address, and batch geocoding.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;arcgisgeocode&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=arcgisgeocode&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/arcgisgeocode&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/R-ArcGIS/arcgisgeocode/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/R-ArcGIS/arcgisgeocode/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of arcgisgeocode is to provide access to ArcGIS geocoding services from R. Enables address candidate identification, batch geocoding, reverse geocoding, and autocomplete suggestions.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install a binary for Mac, Windows, or Ubuntu from r-universe like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install from R-universe&#xA;install.packages(&#34;arcgisgeocode&#34;, repos = c(&#34;https://r-arcgis.r-universe.dev&#34;, &#34;https://cran.r-project.org&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development version&lt;/h3&gt; &#xA;&lt;p&gt;arcgisgeocode uses &lt;a href=&#34;https://extendr.github.io/&#34;&gt;&lt;code&gt;extendr&lt;/code&gt;&lt;/a&gt; and requires Rust to be available to install the development version of arcgisgeocode. Follow the &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup instructions&lt;/a&gt; to install Rust and verify your installation is compatible using &lt;a href=&#34;https://extendr.github.io/rextendr/dev/#sitrep&#34;&gt;&lt;code&gt;rextendr::rust_sitrep()&lt;/code&gt;&lt;/a&gt;. Then install the development version from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install pak if not available&#xA;if (!requireNamespace(&#34;pak&#34;)) install.packages(&#34;pak&#34;)&#xA;&#xA;# install development version of {arcgisgeocode}&#xA;pak::pak(&#34;r-arcgis/arcgisgeocode&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;By default, the &lt;a href=&#34;https://www.esri.com/en-us/arcgis/products/arcgis-world-geocoder&#34;&gt;ArcGIS World Geocoder&lt;/a&gt; will be used. This geocoding server provides public access to the &lt;code&gt;/findAddressCandidates&lt;/code&gt;, &lt;code&gt;/reverseGeocode&lt;/code&gt;, and &lt;code&gt;/suggest&lt;/code&gt; endpoints made available via the &lt;code&gt;find_address_candidates()&lt;/code&gt;, &lt;code&gt;reverse_geocode()&lt;/code&gt;, and &lt;code&gt;suggest_places()&lt;/code&gt; functions respectively.&lt;/p&gt; &#xA;&lt;p&gt;The batch geocoding endpoint &lt;code&gt;/geocodeAddresses&lt;/code&gt; is available via &lt;code&gt;geocode_addresses()&lt;/code&gt;. However, this requires the use of an authorization token and may consume credits.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the ArcGIS World Geocoder &lt;a href=&#34;https://developers.arcgis.com/rest/geocode/api-reference/overview-world-geocoding-service.htm&#34;&gt;official documentation&lt;/a&gt; for additional information on use restrictions and licensing. For example, a valid token is required to &lt;a href=&#34;https://raw.githubusercontent.com/R-ArcGIS/arcgisgeocode/main/#important-storing-results&#34;&gt;store the results&lt;/a&gt; of geocoding transactions.&lt;/p&gt; &#xA;&lt;h3&gt;Reverse geocoding&lt;/h3&gt; &#xA;&lt;p&gt;Reverse geocoding takes a location and finds the associated address.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(arcgisgeocode)&#xA;&#xA;# create a point&#xA;x &amp;lt;- sf::st_sfc(sf::st_point(c(-117.172, 34.052)), crs = 4326)&#xA;&#xA;# Find addresses from locations&#xA;reverse_geocode(x)&#xA;#&amp;gt; ! `for_storage` is set to `FALSE`, results cannot be persisted.&#xA;#&amp;gt; • See the official documentation&#xA;#&amp;gt;   (&amp;lt;https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm#ESRI_SECTION3_BBCB5704B46B4CDF8377749B873B1A7F&amp;gt;)&#xA;#&amp;gt;   for legal obligations or the `?storage()` help page.&#xA;#&amp;gt; ℹ suppress this message by setting `options(&#34;arcgisgeocode.storage&#34; = &#34;never&#34;)`&#xA;#&amp;gt; This message is displayed once per session.&#xA;#&amp;gt; Simple feature collection with 1 feature and 22 fields&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: -117.172 ymin: 34.05204 xmax: -117.172 ymax: 34.05204&#xA;#&amp;gt; Geodetic CRS:  WGS 84&#xA;#&amp;gt;                                     match_addr&#xA;#&amp;gt; 1 600-620 Home Pl, Redlands, California, 92374&#xA;#&amp;gt;                                  long_label     short_label     addr_type&#xA;#&amp;gt; 1 600-620 Home Pl, Redlands, CA, 92374, USA 600-620 Home Pl StreetAddress&#xA;#&amp;gt;   type_field place_name add_num     address block sector   neighborhood&#xA;#&amp;gt; 1                           608 608 Home Pl              South Redlands&#xA;#&amp;gt;   district     city metro_area             subregion     region region_abbr&#xA;#&amp;gt; 1          Redlands            San Bernardino County California          CA&#xA;#&amp;gt;   territory postal postal_ext  country_name country_code&#xA;#&amp;gt; 1            92374            United States          USA&#xA;#&amp;gt;                    geometry&#xA;#&amp;gt; 1 POINT (-117.172 34.05204)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Address search&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;find_address_candidates()&lt;/code&gt; function returns geocoding candidate results. The function is vectorized over the input and will perform multiple requests in parallel. Each request geocodes one location at a time.&lt;/p&gt; &#xA;&lt;p&gt;One or more candidates are returned from the endpoint. You can limit the number of candidates using the &lt;code&gt;max_locations&lt;/code&gt; argument (with a maximum of 50).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Find addresses from address search&#xA;candidates &amp;lt;- find_address_candidates(&#xA;  address = &#34;esri&#34;,&#xA;  address2 = &#34;380 new york street&#34;,&#xA;  city = &#34;redlands&#34;,&#xA;  country_code = &#34;usa&#34;,&#xA;  max_locations = 2&#xA;)&#xA;&#xA;dplyr::glimpse(candidates[,1:10])&#xA;#&amp;gt; Rows: 2&#xA;#&amp;gt; Columns: 11&#xA;#&amp;gt; $ input_id    &amp;lt;int&amp;gt; 1, 1&#xA;#&amp;gt; $ loc_name    &amp;lt;chr&amp;gt; &#34;World&#34;, &#34;World&#34;&#xA;#&amp;gt; $ status      &amp;lt;chr&amp;gt; &#34;M&#34;, &#34;M&#34;&#xA;#&amp;gt; $ score       &amp;lt;dbl&amp;gt; 100.00, 98.57&#xA;#&amp;gt; $ match_addr  &amp;lt;chr&amp;gt; &#34;Esri&#34;, &#34;380 New York St, Redlands, California, 92373&#34;&#xA;#&amp;gt; $ long_label  &amp;lt;chr&amp;gt; &#34;Esri, 380 New York St, Redlands, CA, 92373, USA&#34;, &#34;380 Ne…&#xA;#&amp;gt; $ short_label &amp;lt;chr&amp;gt; &#34;Esri&#34;, &#34;380 New York St&#34;&#xA;#&amp;gt; $ addr_type   &amp;lt;chr&amp;gt; &#34;POI&#34;, &#34;PointAddress&#34;&#xA;#&amp;gt; $ type_field  &amp;lt;chr&amp;gt; &#34;Business Facility&#34;, NA&#xA;#&amp;gt; $ place_name  &amp;lt;chr&amp;gt; &#34;Esri&#34;, NA&#xA;#&amp;gt; $ geometry    &amp;lt;POINT [°]&amp;gt; POINT (-117.1957 34.05609), POINT (-117.1948 34.05726)…&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Suggest locations&lt;/h3&gt; &#xA;&lt;p&gt;Geocoding services can also provide a location suggestion based on a search term and, optionally, a location or extent. The &lt;code&gt;suggest_places()&lt;/code&gt; function (&lt;code&gt;/suggest&lt;/code&gt; endpoint) is intended to be used as part of a client-facing application that provides autocomplete suggestions.&lt;/p&gt; &#xA;&lt;p&gt;In this example we create a search extent around a single point and find suggestions based on the search term &lt;code&gt;&#34;bellwood&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# identify a search point as a simple feature column&#xA;location &amp;lt;- sf::st_sfc(&#xA;  sf::st_point(c(-84.34, 33.74)),&#xA;   crs = 4326&#xA;)&#xA;&#xA;# buffer and create a bbox object &#xA;search_extent &amp;lt;- sf::st_bbox(&#xA;  sf::st_buffer(location, 10)&#xA;)&#xA;&#xA;# find suggestions within the bounding box&#xA;suggestions &amp;lt;- suggest_places(&#xA;  &#34;bellwood&#34;,&#xA;  location,&#xA;  search_extent = search_extent&#xA;)&#xA;&#xA;suggestions&#xA;#&amp;gt; # A data frame: 5 × 3&#xA;#&amp;gt;   text                                                   magic_key is_collection&#xA;#&amp;gt; * &amp;lt;chr&amp;gt;                                                  &amp;lt;chr&amp;gt;     &amp;lt;lgl&amp;gt;        &#xA;#&amp;gt; 1 Bellwood Coffee, 1366 Glenwood Ave SE, Atlanta, GA, 3… dHA9MCN0… FALSE        &#xA;#&amp;gt; 2 Bellwood, Atlanta, GA, USA                             dHA9MCN0… FALSE        &#xA;#&amp;gt; 3 Bellwood Church, Atlanta, GA, USA                      dHA9MCN0… FALSE        &#xA;#&amp;gt; 4 Bellwood Yard, Atlanta, GA, USA                        dHA9MCN0… FALSE        &#xA;#&amp;gt; 5 Bellwood, IL, USA                                      dHA9NCN0… FALSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result is intended to be provided to &lt;code&gt;find_address_candidates()&lt;/code&gt; to complete the geocoding process. The column &lt;code&gt;text&lt;/code&gt; contains the address to geocode. The column &lt;code&gt;magic_key&lt;/code&gt; is a special identifier that makes it much faster to fetch results. Pass this into the argument &lt;code&gt;magic_key&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# get address candidate information&#xA;# using the text and the magic key&#xA;find_address_candidates(&#xA;  suggestions$text,&#xA;  magic_key = suggestions$magic_key&#xA;)&#xA;#&amp;gt; Simple feature collection with 7 features and 60 fields&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: -87.88312 ymin: 33.74034 xmax: -84.34273 ymax: 41.88325&#xA;#&amp;gt; Geodetic CRS:  WGS 84&#xA;#&amp;gt;   input_id loc_name status score                 match_addr&#xA;#&amp;gt; 1        1     &amp;lt;NA&amp;gt;      M   100            Bellwood Coffee&#xA;#&amp;gt; 2        2     &amp;lt;NA&amp;gt;      M   100 Bellwood, Atlanta, Georgia&#xA;#&amp;gt; 3        3     &amp;lt;NA&amp;gt;      M   100            Bellwood Church&#xA;#&amp;gt; 4        4     &amp;lt;NA&amp;gt;      M   100              Bellwood Yard&#xA;#&amp;gt; 5        5     &amp;lt;NA&amp;gt;      T   100         Bellwood, Illinois&#xA;#&amp;gt; 6        5     &amp;lt;NA&amp;gt;      T   100         Bellwood, Illinois&#xA;#&amp;gt; 7        5     &amp;lt;NA&amp;gt;      T   100         Bellwood, Illinois&#xA;#&amp;gt;                                                       long_label&#xA;#&amp;gt; 1 Bellwood Coffee, 1366 Glenwood Ave SE, Atlanta, GA, 30316, USA&#xA;#&amp;gt; 2                                     Bellwood, Atlanta, GA, USA&#xA;#&amp;gt; 3                              Bellwood Church, Atlanta, GA, USA&#xA;#&amp;gt; 4                                Bellwood Yard, Atlanta, GA, USA&#xA;#&amp;gt; 5                                              Bellwood, IL, USA&#xA;#&amp;gt; 6                                              Bellwood, IL, USA&#xA;#&amp;gt; 7                                              Bellwood, IL, USA&#xA;#&amp;gt;       short_label addr_type type_field      place_name&#xA;#&amp;gt; 1 Bellwood Coffee       POI     Snacks Bellwood Coffee&#xA;#&amp;gt; 2        Bellwood  Locality       City        Bellwood&#xA;#&amp;gt; 3 Bellwood Church       POI     Church Bellwood Church&#xA;#&amp;gt; 4   Bellwood Yard       POI   Building   Bellwood Yard&#xA;#&amp;gt; 5        Bellwood  Locality       City        Bellwood&#xA;#&amp;gt; 6        Bellwood  Locality       City        Bellwood&#xA;#&amp;gt; 7        Bellwood  Locality       City        Bellwood&#xA;#&amp;gt;                                      place_addr phone  url  rank add_bldg&#xA;#&amp;gt; 1 1366 Glenwood Ave SE, Atlanta, Georgia, 30316  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 19.00     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2                              Atlanta, Georgia  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 20.00     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 3                              Atlanta, Georgia  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 24.00     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4                              Atlanta, Georgia  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 24.00     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5                            Bellwood, Illinois  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 10.50     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6                            Bellwood, Illinois  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 16.04     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7                 Village of Bellwood, Illinois  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; 21.00     &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   add_num add_num_from add_num_to add_range side st_pre_dir st_pre_type&#xA;#&amp;gt; 1    1366         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 3    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7    &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;&#xA;#&amp;gt;    st_name st_type st_dir bldg_type bldg_name level_type level_name unit_type&#xA;#&amp;gt; 1 Glenwood     Ave     SE      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 3     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   unit_name sub_addr              st_addr block sector nbrhd district&#xA;#&amp;gt; 1      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt; 1366 Glenwood Ave SE  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt; Bellwood&#xA;#&amp;gt; 3      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;                 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt;                  city metro_area     subregion   region region_abbr territory&#xA;#&amp;gt; 1             Atlanta       &amp;lt;NA&amp;gt; DeKalb County  Georgia          GA      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2             Atlanta       &amp;lt;NA&amp;gt; Fulton County  Georgia          GA      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 3             Atlanta       &amp;lt;NA&amp;gt; Fulton County  Georgia          GA      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4             Atlanta       &amp;lt;NA&amp;gt; Fulton County  Georgia          GA      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5            Bellwood       &amp;lt;NA&amp;gt;   Cook County Illinois          IL      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6            Bellwood       &amp;lt;NA&amp;gt;   Cook County Illinois          IL      &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7 Village of Bellwood       &amp;lt;NA&amp;gt;   Cook County Illinois          IL      &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   zone postal postal_ext country    cntry_name lang_code distance         x&#xA;#&amp;gt; 1 &amp;lt;NA&amp;gt;  30316       &amp;lt;NA&amp;gt;     USA United States       ENG      0.0 -84.34273&#xA;#&amp;gt; 2 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG      0.0 -84.41243&#xA;#&amp;gt; 3 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG      0.0 -84.41521&#xA;#&amp;gt; 4 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG      0.0 -84.41798&#xA;#&amp;gt; 5 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG 956972.0 -87.87345&#xA;#&amp;gt; 6 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG 957055.1 -87.88312&#xA;#&amp;gt; 7 &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;     USA United States       ENG 957012.3 -87.87617&#xA;#&amp;gt;          y display_x display_y      xmin      xmax     ymin     ymax ex_info&#xA;#&amp;gt; 1 33.74034 -84.34273  33.74034 -84.34373 -84.34173 33.73934 33.74134    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2 33.77455 -84.41243  33.77455 -84.42343 -84.40143 33.76355 33.78555    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 3 33.77288 -84.41521  33.77288 -84.42021 -84.41021 33.76788 33.77788    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 4 33.77927 -84.41798  33.77927 -84.42298 -84.41298 33.77427 33.78427    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 5 41.88325 -87.87345  41.88325 -87.88945 -87.85745 41.86725 41.89925    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 6 41.88142 -87.88312  41.88142 -87.90012 -87.86612 41.86442 41.89842    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 7 41.88290 -87.87617  41.88290 -87.89317 -87.85917 41.86590 41.89990    &amp;lt;NA&amp;gt;&#xA;#&amp;gt;                                    extents                   geometry&#xA;#&amp;gt; 1 -84.34373, 33.73934, -84.34173, 33.74134 POINT (-84.34273 33.74034)&#xA;#&amp;gt; 2 -84.42343, 33.76355, -84.40143, 33.78555 POINT (-84.41243 33.77455)&#xA;#&amp;gt; 3 -84.42021, 33.76788, -84.41021, 33.77788 POINT (-84.41521 33.77288)&#xA;#&amp;gt; 4 -84.42298, 33.77427, -84.41298, 33.78427 POINT (-84.41798 33.77927)&#xA;#&amp;gt; 5 -87.88945, 41.86725, -87.85745, 41.89925 POINT (-87.87345 41.88325)&#xA;#&amp;gt; 6 -87.90012, 41.86442, -87.86612, 41.89842 POINT (-87.88312 41.88142)&#xA;#&amp;gt; 7 -87.89317, 41.86590, -87.85917, 41.89990  POINT (-87.87617 41.8829)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;Important&lt;/em&gt;: Storing results&lt;/h2&gt; &#xA;&lt;p&gt;By default, the argument &lt;code&gt;for_storage = FALSE&lt;/code&gt; meaning that the results of the geocoding operation cannot be persisted. If you intend to persist the results of the geocoding operation, you must set &lt;code&gt;for_storage = TRUE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about free and paid geocoding operations refer to the &lt;a href=&#34;https://developers.arcgis.com/documentation/mapping-apis-and-services/geocoding/services/geocoding-service/#storage-parameter&#34;&gt;storage parameter documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Batch geocoding&lt;/h2&gt; &#xA;&lt;p&gt;Many addresses can be geocoded very quickly using the &lt;code&gt;geocode_addresses()&lt;/code&gt; function which calls the &lt;code&gt;/geocodeAddresses&lt;/code&gt; endpoint. Note that this function requires an authorization token. &lt;code&gt;geocode_addresses()&lt;/code&gt; sends the input addresses in chunks as parallel requests.&lt;/p&gt; &#xA;&lt;p&gt;Batch geocoding requires a signed in user. Load the &lt;a href=&#34;https://github.com/r-arcgis/arcgisutils&#34;&gt;&lt;code&gt;{arcgisutils}&lt;/code&gt;&lt;/a&gt; to authorize and set your token. This example uses the &lt;a href=&#34;https://raw.githubusercontent.com/R-ArcGIS/arcgisgeocode/main/#%20https://datacatalog.urban.org/node/6158/revisions/14192/view&#34;&gt;Geocoding Test Dataset&lt;/a&gt; from the &lt;a href=&#34;https://www.urban.org/&#34;&gt;Urban Institute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(arcgisutils)&#xA;library(arcgisgeocode)&#xA;set_arc_token(auth_user())&#xA;&#xA;# Example dataset from the Urban Institute &#xA;fp &amp;lt;- &#34;https://urban-data-catalog.s3.amazonaws.com/drupal-root-live/2020/02/25/geocoding_test_data.csv&#34;&#xA;&#xA;to_geocode &amp;lt;- readr::read_csv(fp)&#xA;#&amp;gt; Rows: 120 Columns: 8&#xA;#&amp;gt; ── Column specification ────────────────────────────────────────────────────────&#xA;#&amp;gt; Delimiter: &#34;,&#34;&#xA;#&amp;gt; chr (5): full_address, address, city, state, zip&#xA;#&amp;gt; dbl (3): lat_true, lon_true, diff_level&#xA;#&amp;gt; &#xA;#&amp;gt; ℹ Use `spec()` to retrieve the full column specification for this data.&#xA;#&amp;gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.&#xA;&#xA;geocoded &amp;lt;- to_geocode |&amp;gt;&#xA;  dplyr::reframe(&#xA;    geocode_addresses(&#xA;      address = address,&#xA;      city = city,&#xA;      region = state,&#xA;      postal = zip&#xA;    )&#xA;  )&#xA;&#xA;geocoded&#xA;#&amp;gt; # A tibble: 120 × 59&#xA;#&amp;gt;    loc_name status score match_addr  long_label short_label addr_type type_field&#xA;#&amp;gt;    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &#xA;#&amp;gt;  1 World    M      100   500 L&#39;Enfa… 500 L&#39;Enf… 500 L&#39;Enfa… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  2 World    M      100   200 K St N… 200 K St … 200 K St NE PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  3 World    M      100   500 L&#39;Enfa… 500 L&#39;Enf… 500 L&#39;Enfa… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  4 World    M      100   200 K St N… 200 K St … 200 K St NE PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  5 World    M      100   2197 Pluml… 2197 Plum… 2197 Pluml… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  6 World    U        0   &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  7 World    M       97.9 2197 Pluml… 2197 Plum… 2197 Pluml… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  8 World    M       97.0 5034 Curti… 5034 Curt… 5034 Curti… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt;  9 World    M       97.0 5034 Curti… 5034 Curt… 5034 Curti… PointAdd… &amp;lt;NA&amp;gt;      &#xA;#&amp;gt; 10 World    U        0   &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &#xA;#&amp;gt; # ℹ 110 more rows&#xA;#&amp;gt; # ℹ 51 more variables: place_name &amp;lt;chr&amp;gt;, place_addr &amp;lt;chr&amp;gt;, phone &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   url &amp;lt;chr&amp;gt;, rank &amp;lt;dbl&amp;gt;, add_bldg &amp;lt;chr&amp;gt;, add_num &amp;lt;chr&amp;gt;, add_num_from &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   add_num_to &amp;lt;chr&amp;gt;, add_range &amp;lt;chr&amp;gt;, side &amp;lt;chr&amp;gt;, st_pre_dir &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   st_pre_type &amp;lt;chr&amp;gt;, st_name &amp;lt;chr&amp;gt;, st_type &amp;lt;chr&amp;gt;, st_dir &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   bldg_type &amp;lt;chr&amp;gt;, bldg_name &amp;lt;chr&amp;gt;, level_type &amp;lt;chr&amp;gt;, level_name &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   unit_type &amp;lt;chr&amp;gt;, unit_name &amp;lt;chr&amp;gt;, sub_addr &amp;lt;chr&amp;gt;, st_addr &amp;lt;chr&amp;gt;, …&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using other locators&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;{arcgisgeocode}&lt;/code&gt; can be used with other geocoding services, including custom locators hosted on ArcGIS Online or Enterprise. For example, we can use the &lt;a href=&#34;https://www.nconemap.gov/pages/addresses&#34;&gt;AddressNC&lt;/a&gt; geocoding service &lt;a href=&#34;https://www.arcgis.com/home/item.html?id=247dfe30ec42476a96926ad9e35f725f&#34;&gt;available on ArcGIS Online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Create a new &lt;code&gt;GeocodeServer&lt;/code&gt; object using &lt;code&gt;geocode_server()&lt;/code&gt;. This geocoder can be passed into the &lt;code&gt;geocoder&lt;/code&gt; argument to any of the geocoding functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;address_nc &amp;lt;- geocode_server(&#xA;  &#34;https://services.nconemap.gov/secure/rest/services/AddressNC/AddressNC_geocoder/GeocodeServer&#34;,&#xA;  token = NULL&#xA;)&#xA;&#xA;find_address_candidates(&#xA;  address = &#34;rowan coffee&#34;,&#xA;  city = &#34;asheville&#34;,&#xA;  geocoder = address_nc,&#xA;  token = NULL&#xA;)&#xA;#&amp;gt; Simple feature collection with 2 features and 60 fields&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: 943428.1 ymin: 631973.4 xmax: 948500.3 ymax: 681596.4&#xA;#&amp;gt; Projected CRS: NAD_1983_StatePlane_North_Carolina_FIPS_3200_Feet&#xA;#&amp;gt;   input_id loc_name status score match_addr long_label short_label addr_type&#xA;#&amp;gt; 1        1     &amp;lt;NA&amp;gt;      T    78  ASHEVILLE  ASHEVILLE   ASHEVILLE  Locality&#xA;#&amp;gt; 2        1     &amp;lt;NA&amp;gt;      T    78  ASHEVILLE  ASHEVILLE   ASHEVILLE  Locality&#xA;#&amp;gt;   type_field place_name place_addr phone  url rank add_bldg add_num&#xA;#&amp;gt; 1       City  ASHEVILLE  ASHEVILLE  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   20     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2       City  ASHEVILLE  ASHEVILLE  &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   20     &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   add_num_from add_num_to add_range side st_pre_dir st_pre_type st_name st_type&#xA;#&amp;gt; 1         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2         &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   st_dir bldg_type bldg_name level_type level_name unit_type unit_name sub_addr&#xA;#&amp;gt; 1   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   st_addr block sector nbrhd district      city metro_area subregion region&#xA;#&amp;gt; 1    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt; ASHEVILLE       &amp;lt;NA&amp;gt;  BUNCOMBE   &amp;lt;NA&amp;gt;&#xA;#&amp;gt; 2    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt; ASHEVILLE       &amp;lt;NA&amp;gt; HENDERSON   &amp;lt;NA&amp;gt;&#xA;#&amp;gt;   region_abbr territory zone postal postal_ext country cntry_name lang_code&#xA;#&amp;gt; 1        &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;        USA       ENG&#xA;#&amp;gt; 2        &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;        USA       ENG&#xA;#&amp;gt;   distance        x        y display_x display_y       xmin      xmax&#xA;#&amp;gt; 1        0 943428.1 681596.4  943428.1  681596.4 -8530023.7 6181070.0&#xA;#&amp;gt; 2        0 948500.3 631973.4  948500.3  631973.4   908369.6  988510.8&#xA;#&amp;gt;         ymin       ymax      ex_info                                extents&#xA;#&amp;gt; 1 -6814694.2 10142730.7 ROWAN COFFEE  -8530024, -6814694, 6181070, 10142731&#xA;#&amp;gt; 2   586446.6   677555.8 ROWAN COFFEE 908369.6, 586446.6, 988510.8, 677555.8&#xA;#&amp;gt;                    geometry&#xA;#&amp;gt; 1 POINT (943428.1 681596.4)&#xA;#&amp;gt; 2 POINT (948500.3 631973.4)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>