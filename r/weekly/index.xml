<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-25T01:44:46Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SurajGupta/r-source</title>
    <updated>2022-09-25T01:44:46Z</updated>
    <id>tag:github.com,2022-09-25:/SurajGupta/r-source</id>
    <link href="https://github.com/SurajGupta/r-source" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Source Code&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;THE BASIC R README&#xA;&#xA;&#xA;   (See &#34;doc/FAQ&#34; and &#34;doc/RESOURCES&#34; for more detailed information&#xA;&#x9;&#x9;&#x9;      - these files are only in the tarballs)&#xA;   (See &#34;INSTALL&#34;             for help on installation)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;INTRODUCTION&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This directory contains the source code tree for R, which is a language which is not entirely unlike (versions 3 and 4 of) the S language developed at AT&amp;amp;T Bell Laboratories by Rick Becker, John Chambers and Allan Wilks.&lt;/p&gt; &#xA;&lt;p&gt;R is free software distributed under a GNU-style copyleft.&lt;/p&gt; &#xA;&lt;p&gt;The core of R is an interpreted computer language with a syntax superficially similar to C, but which is actually a &#34;functional programming language&#34; with capabilities similar to Scheme. The language allows branching and looping as well as modular programming using functions. Most of the user-visible functions in R are written in R, calling upon a smaller set of internal primitives. It is possible for the user to interface to procedures written in C or Fortran languages for efficiency, and also to write additional primitives.&lt;/p&gt; &#xA;&lt;p&gt;The R distribution contains functionality for a large number of statistical procedures. Among these are: linear and generalized linear models, nonlinear regression models, time series analysis, classical parametric and nonparametric tests, clustering and smoothing. There is also a large set of functions which provide a flexible graphical environment for creating various kinds of data presentations.&lt;/p&gt; &#xA;&lt;p&gt;A package specification allows the production of loadable modules for specific purposes, and several thousand contributed packages are made available through the CRAN sites (see &lt;a href=&#34;http://CRAN.R-project.org/mirrors.html&#34;&gt;http://CRAN.R-project.org/mirrors.html&lt;/a&gt; for the current members).&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;HISTORY&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;R was initially written by Robert Gentleman and Ross Ihaka of the Statistics Department of the University of Auckland. In addition, a large group of individuals has contributed to R by sending code and bug reports.&lt;/p&gt; &#xA;&lt;p&gt;Since mid-1997 there has been a core group who can modify the R source code archive, listed in file doc/AUTHORS.&lt;/p&gt; &#xA;&lt;p&gt;R 1.0.0 was released on 29 February 2000 and 2.0.0 on 4 October 2004. R 3.0.0 came out on 3 April 2013.&lt;/p&gt; &#xA;&lt;p&gt;This file has been minimally revised since the release of R 1.0.0.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;PRESENT STATUS&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The present version implements most of the functionality in the 1988 book &#34;The New S Language&#34; (the &#34;Blue Book&#34;) and many of the applications. In addition, we have implemented a large part of the functionality from the 1992 book &#34;Statistical Models in S&#34; (the &#34;White Book&#34;) and the 1998 book &#34;Programming with Data&#34; (the &#34;Green Book&#34;).&lt;/p&gt; &#xA;&lt;p&gt;All the R functions have been documented in the form of help pages in an &#34;output independent&#34; form which can be used to create versions for HTML, PDF, text etc. A 1900+ page Reference Index (a collection of most of the help pages: there is also a 3300+ page version with all the help pages, including recommended packages) can be obtained in PDF. The manual &lt;code&gt;An Introduction to R&#39; provides a more user-friendly starting point, and there is an FAQ, a draft &lt;/code&gt;R Language Definition&#39; manual and more specialized manuals on admininstration, data import/export and extending R. See INSTALL for instructions on how to generate these documents.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;GOALS&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Our aim at the start of this project was to demonstrate that it was possible to produce an S-like environment which did not suffer from the memory-demands and performance problems which S has. Somewhat later, we started to turn R into a &#34;real&#34; system, but unfortunately we lost a large part of the efficiency advantage in the process, so have revised the memory management mechanism and implemented delayed loading of R objects. A lot of performance tuning has been done, including the ability to use tuned linear-algebra libraries.&lt;/p&gt; &#xA;&lt;p&gt;Longer-term goals include to explore new ideas: e.g. virtual objects and component-based programming, and expanding the scope of existing ones like formula-based interfaces. Further, we wish to get a handle on a general approach to graphical user interfaces (preferably with cross-platform portability), and to develop better 3-D and dynamic graphics.&lt;/p&gt; &#xA;&lt;p&gt;Sincerely, The R Core Team.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plotly/plotly.R</title>
    <updated>2022-09-25T01:44:46Z</updated>
    <id>tag:github.com,2022-09-25:/plotly/plotly.R</id>
    <link href="https://github.com/plotly/plotly.R" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interactive graphing library for R&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/plotly.R/master/man/figures/plotly.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.R/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci/plotly/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=plotly&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/plotly&#34; alt=&#34;CRAN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rpackages.io/package/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/plotly&#34; alt=&#34;CRAN Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rpackages.io/package/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/plotly&#34; alt=&#34;monthly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;An R package for creating interactive web graphics via the open source JavaScript graphing library &lt;a href=&#34;https://github.com/plotly/plotly.js&#34;&gt;plotly.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the latest development version (on GitHub) via &lt;code&gt;{remotes}&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;plotly/plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Web-based ggplot2 graphics&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;ggplot2&lt;/a&gt;, &lt;code&gt;ggplotly()&lt;/code&gt; converts your static plots to an interactive web-based version!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(plotly)&#xA;g &amp;lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) +&#xA;  stat_density_2d(aes(fill = ..level..), geom = &#34;polygon&#34;) + &#xA;  xlim(1, 6) + ylim(40, 100)&#xA;ggplotly(g)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/G1rSArP.gif&#34; alt=&#34;https://i.imgur.com/G1rSArP.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;ggplotly()&lt;/code&gt; tries to replicate the static ggplot2 version exactly (before any interaction occurs), but sometimes you need greater control over the interactive behavior. The &lt;code&gt;ggplotly()&lt;/code&gt; function itself has some convenient “high-level” arguments, such as &lt;code&gt;dynamicTicks&lt;/code&gt;, which tells plotly.js to dynamically recompute axes, when appropriate. The &lt;code&gt;style()&lt;/code&gt; function also comes in handy for &lt;em&gt;modifying&lt;/em&gt; the underlying trace attributes (e.g. &lt;a href=&#34;https://plotly.com/r/reference/#scatter-hoveron&#34;&gt;hoveron&lt;/a&gt;) used to generate the plot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg &amp;lt;- ggplotly(g, dynamicTicks = &#34;y&#34;)&#xA;style(gg, hoveron = &#34;points&#34;, hoverinfo = &#34;x+y+text&#34;, hoverlabel = list(bgcolor = &#34;white&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imgur.com/qRvLgea.gif&#34; alt=&#34;https://i.imgur.com/qRvLgea.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Moreover, since &lt;code&gt;ggplotly()&lt;/code&gt; returns a plotly object, you can apply essentially any function from the R package on that object. Some useful ones include &lt;code&gt;layout()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#modifying-layout&#34;&gt;customizing the layout&lt;/a&gt;), &lt;code&gt;add_traces()&lt;/code&gt; (and its higher-level &lt;code&gt;add_*()&lt;/code&gt; siblings, for example &lt;code&gt;add_polygons()&lt;/code&gt;, for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#leveraging-statistical-output&#34;&gt;adding new traces/data&lt;/a&gt;), &lt;code&gt;subplot()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/arranging-views.html#arranging-plotly-objects&#34;&gt;combining multiple plotly objects&lt;/a&gt;), and &lt;code&gt;plotly_json()&lt;/code&gt; (for inspecting the underlying JSON sent to plotly.js).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;ggplotly()&lt;/code&gt; function will also respect some “unofficial” &lt;strong&gt;ggplot2&lt;/strong&gt; aesthetics, namely &lt;code&gt;text&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/controlling-tooltips.html#tooltip-text-ggplotly&#34;&gt;customizing the tooltip&lt;/a&gt;), &lt;code&gt;frame&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/animating-views.html&#34;&gt;creating animations&lt;/a&gt;), and &lt;code&gt;ids&lt;/code&gt; (for ensuring sensible smooth transitions).&lt;/p&gt; &#xA;&lt;h3&gt;Using plotly without ggplot2&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;plot_ly()&lt;/code&gt; function provides a more direct interface to plotly.js so you can leverage more specialized chart types (e.g., &lt;a href=&#34;https://plotly.com/r/parallel-coordinates-plot/&#34;&gt;parallel coordinates&lt;/a&gt; or &lt;a href=&#34;https://plotly.com/r/maps/&#34;&gt;maps&lt;/a&gt;) or even some visualization that the ggplot2 API won’t ever support (e.g., surface, &lt;a href=&#34;https://plotly.com/r/3d-mesh/&#34;&gt;mesh&lt;/a&gt;, &lt;a href=&#34;https://plotly.com/r/trisurf/&#34;&gt;trisurf&lt;/a&gt;, etc).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_ly(z = ~volcano, type = &#34;surface&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://plot.ly/~brnvg/1134.png&#34; alt=&#34;https://plot.ly/~brnvg/1134&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about special features that the plotly R package provides (e.g., &lt;a href=&#34;https://plotly-r.com/client-side-linking.html&#34;&gt;client-side linking&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/linking-views-with-shiny.html&#34;&gt;&lt;strong&gt;shiny&lt;/strong&gt; integration&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/publish.html&#34;&gt;editing and generating static images&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/javascript.html&#34;&gt;custom events in JavaScript&lt;/a&gt;, and more), see &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt;. You may already be familiar with existing plotly documentation (e.g., &lt;a href=&#34;https://plotly.com/r/&#34;&gt;https://plotly.com/r/&lt;/a&gt;), which is essentially a language-agnostic how-to guide for learning plotly.js, whereas &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt; is meant to be more wholistic tutorial written by and for the R user. The package itself ships with a number of demos (list them by running &lt;code&gt;demo(package = &#34;plotly&#34;)&lt;/code&gt;) and shiny/rmarkdown examples (list them by running &lt;code&gt;plotly_example(&#34;shiny&#34;)&lt;/code&gt; or &lt;code&gt;plotly_example(&#34;rmd&#34;)&lt;/code&gt;). &lt;a href=&#34;https://cpsievert.me&#34;&gt;Carson&lt;/a&gt; also keeps numerous &lt;a href=&#34;https://talks.cpsievert.me&#34;&gt;slide decks&lt;/a&gt; with useful examples and concepts.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://github.com/plotly/plotly.R/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, asking questions, contributing changes to plotly, and our code of conduct.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.ropensci.org/public_images/github_footer.png&#34; alt=&#34;https://ropensci.org&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/shiny</title>
    <updated>2022-09-25T01:44:46Z</updated>
    <id>tag:github.com,2022-09-25:/rstudio/shiny</id>
    <link href="https://github.com/rstudio/shiny" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy interactive web applications with R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shiny &lt;img src=&#34;https://raw.githubusercontent.com/rstudio/shiny/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34; height=&#34;139&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=shiny&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/shiny&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rstudio/shiny/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/shiny/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.rstudio.com/new-topic?category=shiny&amp;amp;tags=shiny&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/community-shiny-blue?style=social&amp;amp;logo=rstudio&amp;amp;logoColor=75AADB&#34; alt=&#34;RStudio community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Easily build rich and productive interactive web apps in R — no HTML/CSS/JavaScript required.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An intuitive and extensible &lt;a href=&#34;https://en.wikipedia.org/wiki/Reactive_programming&#34;&gt;reactive programming&lt;/a&gt; model which makes it easy to transform existing R code into a &#34;live app&#34; where outputs automatically react to new user input. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compared to event-based programming, reactivity allows Shiny to do the minimum amount of work when input(s) change, and allows humans to more easily reason about complex &lt;a href=&#34;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&#34;&gt;MVC logic&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A prebuilt set of highly sophisticated, customizable, and easy-to-use widgets (e.g., plots, tables, sliders, dropdowns, date pickers, and more).&lt;/li&gt; &#xA; &lt;li&gt;An attractive default look based on &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; which can also be easily customized with the &lt;a href=&#34;https://github.com/rstudio/bslib&#34;&gt;bslib&lt;/a&gt; package or avoided entirely with more direct R bindings to HTML/CSS/JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;Seamless integration with &lt;a href=&#34;https://shiny.rstudio.com/articles/interactive-docs.html&#34;&gt;R Markdown&lt;/a&gt;, making it easy to embed numerous applications natively within a larger dynamic document.&lt;/li&gt; &#xA; &lt;li&gt;Tools for improving and monitoring performance, including native support for &lt;a href=&#34;https://www.rstudio.com/blog/shiny-1-1-0/&#34;&gt;async programming&lt;/a&gt;, &lt;a href=&#34;https://talks.cpsievert.me/20201117&#34;&gt;caching&lt;/a&gt;, &lt;a href=&#34;https://rstudio.github.io/shinyloadtest/&#34;&gt;load testing&lt;/a&gt;, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Modules&lt;/a&gt;: a framework for reducing code duplication and complexity.&lt;/li&gt; &#xA; &lt;li&gt;An ability to &lt;a href=&#34;https://shiny.rstudio.com/articles/bookmarking-state.html&#34;&gt;bookmark application state&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/rstudio/shinymeta&#34;&gt;generate code to reproduce output(s)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A rich ecosystem of extension packages for more &lt;a href=&#34;http://www.htmlwidgets.org/&#34;&gt;custom widgets&lt;/a&gt;, &lt;a href=&#34;https://github.com/rstudio/shinyvalidate&#34;&gt;input validation&lt;/a&gt;, &lt;a href=&#34;https://github.com/rstudio/shinytest&#34;&gt;unit testing&lt;/a&gt;, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the stable version from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;shiny&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, load the library and run an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(shiny)&#xA;# Launches an app, with the app&#39;s source code included&#xA;runExample(&#34;06_tabsets&#34;)&#xA;# Lists more prepackaged examples&#xA;runExample()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples and inspiration, check out the &lt;a href=&#34;https://shiny.rstudio.com/gallery/&#34;&gt;Shiny User Gallery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For help with learning fundamental Shiny programming concepts, check out the &lt;a href=&#34;https://mastering-shiny.org/&#34;&gt;Mastering Shiny&lt;/a&gt; book and the &lt;a href=&#34;https://shiny.rstudio.com/tutorial/&#34;&gt;Shiny Tutorial&lt;/a&gt;. The former is currently more up-to-date with modern Shiny features, whereas the latter takes a deeper, more visual, dive into fundamental concepts.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;To ask a question about Shiny, please use the &lt;a href=&#34;https://community.rstudio.com/new-topic?category=shiny&amp;amp;tags=shiny&#34;&gt;RStudio Community website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For bug reports, please use the &lt;a href=&#34;https://github.com/rstudio/shiny/issues&#34;&gt;issue tracker&lt;/a&gt; and also keep in mind that by &lt;a href=&#34;https://github.com/rstudio/shiny/wiki/Writing-Good-Bug-Reports&#34;&gt;writing a good bug report&lt;/a&gt;, you&#39;re more likely to get help with your problem.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the &lt;strong&gt;shiny&lt;/strong&gt; package. Please see our &lt;a href=&#34;https://github.com/rstudio/shiny/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for detailed guidelines of how to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The shiny package as a whole is licensed under the GPLv3. See the &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/shiny/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h2&gt;R version support&lt;/h2&gt; &#xA;&lt;p&gt;Shiny is supported on the latest release version of R, as well as the previous four minor release versions of R. For example, if the latest release R version is 4.1, then that version is supported, as well as 4.0, 3.6, 3.5, and 3.4.&lt;/p&gt;</summary>
  </entry>
</feed>