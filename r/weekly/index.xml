<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T02:01:20Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HaobinZhou/Get_MR</title>
    <updated>2023-04-23T02:01:20Z</updated>
    <id>tag:github.com,2023-04-23:/HaobinZhou/Get_MR</id>
    <link href="https://github.com/HaobinZhou/Get_MR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A package for running MR In batches and in parallel quickly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get_MR&lt;/h1&gt; &#xA;&lt;p&gt;A package for running MR In batches and in parallel quickly&lt;/p&gt; &#xA;&lt;h2&gt;使用声明：&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;禁止一切倒卖我们代码的行为。我们承诺已开源代码永久性免费开源，公开可得&lt;/li&gt; &#xA; &lt;li&gt;使用代码前，务必确认代码无误。我们没有利用这个R包发表文献，也没有进行倒卖，或授课。&lt;strong&gt;因此，我们无法确保我们的代码每一环，完全的，彻底的，100%的，没有错误&lt;/strong&gt;。我们的代码本质上是分享经验，我们并没有因为这些代码获得任何利益，也没有利用它来当成文章发表，虽然我们会尽力，但我们无法保证彻底的完美。&lt;strong&gt;我们对所有因代码可能存在的错误导致的纠纷不负有任何责任。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;我们不会参与任何商业行为和组织，我们没有与任何组织进行合作。任何倒卖行为都是侵权行为，非倒卖的利用行为属于第三方的行为，与我们无关，由第三方对本身内容负责。因代码错误导致的纠纷参考第2条声明。&lt;/li&gt; &#xA; &lt;li&gt;我们分批开源不是利益因素导致的，我们没有将更新的版本的Get_MR进行售卖！我们本意是为了保护内部小伙伴的努力成果，优先使用我们最新开发的前沿功能，万望大家理解！&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Get_MR1.0&lt;/h1&gt; &#xA;&lt;h2&gt;近期更改与提示：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.22&lt;/strong&gt;：&lt;strong&gt;（重要）&lt;/strong&gt; 修复PRESSO的bug，请使用PRESSO时务必更新代码！！&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.19&lt;/strong&gt;：注意TwoSampleMR包有一列是mr_keep。请在运行我们get_mr包的所有分析函数前，如果需要使用TwoSampleMR包格式的数据，请将mr_keep状态为false的删掉（如果是没有harmonise之前，列名为mr_keep.exposure/mr_keep.outcome）。因为带有未通过质控的SNP，可能会带来未知的错误！可以参考以下代码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;  &#xA;  dat&amp;lt;-harmonise_data(exposure,outcome)  &#xA;  &#xA;  ## 在运行完harmonise_data后可能会产生mr_keep状态为false的，不能用于MR分析的SNP，我们把他删掉：&#xA;  &#xA;  dat&amp;lt;-subset(dat,mr_keep==T)&#xA;  &#xA;  &#xA;  ## 然后再继续使用各种功能&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;1. 写在前面：&lt;/h2&gt; &#xA;&lt;h3&gt;1.1 项目地址&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;github：&lt;/strong&gt;&lt;a href=&#34;https://github.com/HaobinZhou/Get_MR&#34;&gt;HaobinZhou/Get_MR: A package for running MR In batches and in parallel quickly (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果觉得好用，可以点一下github项目上的小星星吗，这是我们继续开源的最大动力，谢谢！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1.2 R包使用方法：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;R包以R脚本的形式提供，打开R包，全选运行，即得到所有function&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入github&lt;a href=&#34;https://github.com/HaobinZhou/Get_MR&#34;&gt;HaobinZhou/Get_MR: A package for running MR In batches and in parallel quickly (github.com)&lt;/a&gt;，下载代码zip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;source(&#34;./Get_MR1.0.r&#34;) ## 填文件所在地址&#xA;&#xA;## 或者直接打开R文件，全选代码运行也可以！&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;1.3 常见问题：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;本地clump，1000G处理好的MAF文件，MRlap依赖文件如何获取&lt;/strong&gt;： GetScience公众号可免费获取已处理好文件，回复&#34;依赖文件&#34;即得链接。源文件请查看本文相应function介绍处&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;输入clump文件路径后总是报错&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;#尤其注意这个文件名的书写，因为他们是二进制文件，不需要写后缀！只需要选取对应的人种即可，比如欧洲人：&#xA;LD_file=&#34;S:/GWAS数据/本地LD依赖文件/EUR&#34;&#xA;&#xA;## 这个问题我回答好多遍啦！&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;第一次使用如何安装关联R包：&lt;/strong&gt;&lt;a href=&#34;https://github.com/HaobinZhou/Get_MR/tree/main/1.0&#34;&gt;Get_MR/1.0 at main · HaobinZhou/Get_MR (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;如果不需要使用&lt;code&gt;MungeSumstats&lt;/code&gt;包（相关函数包括：&lt;code&gt;format_Mun&lt;/code&gt;，&lt;code&gt;get_chr_pos&lt;/code&gt;，&lt;code&gt;format_getmr&lt;/code&gt;中&lt;code&gt;source=&#34;ukb_nosnp&#34;&lt;/code&gt;) ，则只需要运行&lt;a href=&#34;https://github.com/HaobinZhou/Get_MR/raw/main/1.0/Get_MR1.0dependence.R&#34;&gt;Get_MR1.0dependence.R&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;如果需要使用&lt;code&gt;MungeSumstats&lt;/code&gt;包，则还需运行&lt;a href=&#34;https://github.com/HaobinZhou/Get_MR/raw/main/1.0/Install_Reference_Genome.r&#34;&gt;Install_Reference_Genome.r&lt;/a&gt; 这个包括了hg19和hg38的基因组参考文件，总大小达到了5G！&lt;strong&gt;如果直接安装失败，在GetScience公众号回复&#34;基因组参考&#34;可得下载链接，并本地安装&lt;/strong&gt;（推荐）&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bug反馈&lt;/strong&gt;：代码仅由两人编写，难免出现错误。欢迎提交bug到GetScience公众号后台！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;感谢所有Get_MR使用的R包作者&lt;/strong&gt;，是因为他们我们才得以轻松实现这么多复杂的功能。他们都是开源的，因此我们承诺Get_MR将&lt;strong&gt;永久免费开源&lt;/strong&gt;。这意味着使用者可以随意地修改，分发代码，但前提是遵守：&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1.本代码不得用于任何商业或盈利目的&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;2.未经代码作者的同意，本代码不得用于任何形式的销售或商业交易&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;3.本代码可以在非商业性的科研、学术研究和个人使用的情况下免费使用&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;4.在使用本代码并重新打包并向公众发放时，请引用我们的公众号原文&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2. 帮助文档目录&lt;/h2&gt; &#xA;&lt;h1&gt;进阶MR分析&lt;/h1&gt; &#xA;&lt;h2&gt;LDSC_rg&lt;/h2&gt; &#xA;&lt;p&gt;用于计算两个数据框中SNP之间的遗传相关性（rg）。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;LDSC_rg(expo, outcome, an, sample_prev = NA, population_prev = NA,&#xA;        ld, wld, chr_filter = c(1:22), n_blocks = 200)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;expo&lt;/code&gt;: 一个数据框，其中包含一个遗传暴露指标的多个SNP和它们与结果变量的rg。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;outcome&lt;/code&gt;: 一个数据框，其中包含一个结果变量的多个SNP和它们与遗传暴露指标的rg。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;an&lt;/code&gt;: 它是一个字符串,目前还没有作用（因为我们提供的依赖文件只有eur的，其他人种还没更新）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sample_prev&lt;/code&gt;: 遗传暴露指标的样本流行病学先验患病率。默认为 &lt;code&gt;NA&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;population_prev&lt;/code&gt;: 遗传暴露指标的人群流行病学先验患病率。默认为 &lt;code&gt;NA&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ld&lt;/code&gt;: 本地LD依赖文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wld&lt;/code&gt;: 本地weighted LD 依赖文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chr_filter&lt;/code&gt;: 一个整数向量，用于指定要使用的染色体。默认为包含1-22的整数向量。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;n_blocks&lt;/code&gt;: 用于计算加权LD矩阵的块数。默认为200。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;一个具有以下元素的列表：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rg&lt;/code&gt;: 两个数据框中SNP之间的遗传相关性（rg）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pval&lt;/code&gt;: &lt;code&gt;rg&lt;/code&gt; 的双侧P值。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;N_snps&lt;/code&gt;: 参与计算rg的SNP数量。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;示例&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;具体用法参照：mr_lap和LDSC_rg示例.r&lt;/strong&gt; 可通过公众号GetScience回复示例获取文件&lt;/p&gt; &#xA;&lt;h2&gt;mr_lap&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;mrlap是一种矫正样本重叠后的双样本MR方法。可用于怀疑有样本重叠的数据中。&lt;/p&gt; &#xA;&lt;p&gt;R包官网：&lt;a href=&#34;https://github.com/n-mounier/MRlap&#34;&gt;n-mounier/MRlap: R package to perform two-sample Mendelian Randomisation (MR) analyses using (potentially) overlapping samples (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;语法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_lap(expo, outcome, ld, hm3, pval, r2, kb, MR_reverse = 1e-03, save_logfiles = F)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;expo&lt;/code&gt;: 数据框，为TwoSampleMR包格式的数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;outcome&lt;/code&gt;: 数据框，为TwoSampleMR包格式的数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ld&lt;/code&gt;: 数据框，本地LD文件路径&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hm3&lt;/code&gt;: 数据框，本地HapMap3文件路径&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pval&lt;/code&gt;: 数值，MR 工具变量阈值。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;r2&lt;/code&gt;: 数值，clump阈值&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kb&lt;/code&gt;: 数值，clump阈值&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MR_reverse&lt;/code&gt;: 数值，MR 的方向翻转阈值。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;save_logfiles&lt;/code&gt;: 逻辑值，是否保存日志文件。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;res: mrlap 结果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;具体用法参照：mr_lap和LDSC_rg示例.r&lt;/strong&gt; 可通过公众号GetScience回复示例获取文件&lt;/p&gt; &#xA;&lt;h2&gt;cause_getmr函数&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;一键式执行cause。可批量化执行多暴露对一结局或一暴露对多结局&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;## 不并行化运行&#xA;cause_getmr(expo, outcome, LD_file, r2 = 0.001, kb = 10000, pval = 1e-05)&#xA;&#xA;## 并行化运行&#xA;cl&amp;lt;-makeCluster(2) ## 填你想要的并行化的核数，核数越多，需要的运行内存越大&#xA;cause_getmr(expo, outcome, LD_file, r2 = 0.001, kb = 10000, pval = 1e-05,cl=cl)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;expo&lt;/code&gt;: TwoSampleMR的暴露格式的数据。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;outcome&lt;/code&gt;: TwoSampleMR的暴露格式的数据。&lt;/li&gt; &#xA; &lt;li&gt;注意！expo和outcome，可以是data.frame的形式，也可以是一个list（如list[[1:n]]里都包含数据的data.frame)。但不能outcome和expo同时都是list。当expo或outcome，其中一个为list的情况下，是批量运行一对一的cause。比如我读取了10个暴露和1个结局，将10个暴露lapply读取进来就会是一个list。这时候&lt;code&gt;cause_cyclemr&lt;/code&gt; 自动运行每个暴露对结局的cause，也就是批量化执行.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;## 比如我这里读取3个暴露文件和1和结局文件&#xA;id&amp;lt;-c(&#39;a.gz&#39;,&#39;b.gz&#39;,&#39;c.gz&#39;)&#xA;expo&amp;lt;-lapply(id,FUN=fread)&#xA;outcome&amp;lt;-fread(&#34;outcome.gz&#34;)&#xA;cl=makeCluster(4)## 内存不够的也可以不并行化运行&#xA;res&amp;lt;-cause_getmr(expo, outcome, LD_file, r2 = 0.001, kb = 10000, pval = 1e-05,cl=cl)&#xA;stopCluster(cl)&#xA;## 这样返回的结果就是3个暴露分别对一个结局的cause结果。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LD_file&lt;/code&gt;: 包含LD信息的PLINK文件名。因为需要大批量地clump，在线clump很容易报错，因此我们采用本地clump。需要本地参考文件。下载地址： &lt;a href=&#34;http://fileserve.mrcieu.ac.uk/ld/1kg.v3.tgz&#34;&gt;http://fileserve.mrcieu.ac.uk/ld/1kg.v3.tgz&lt;/a&gt; 。 或关注公众号GetScience直接获取。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;#尤其注意这个文件名的书写，因为他们是二进制文件，不需要写后缀！只需要选取对应的人种即可，比如欧洲人：&#xA;LD_file=&#34;S:/GWAS数据/本地LD依赖文件/EUR&#34;&#xA;&#xA;## 这个问题我回答好多遍啦！&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;r2&lt;/code&gt;: LD的R平方阈值。默认值为0.001。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kb&lt;/code&gt;: LD的距离阈值（以kb为单位）。默认值为10000。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pval&lt;/code&gt;: 用于LD clumping的p值阈值。默认值为1e-05。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cl&lt;/code&gt;: 并行计算的cluster对象。默认值为NULL。在外部使用cl=makeCluster(n),n为你想并行化的核数。注意核数太多不要爆内存了。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cause_cyclemr&lt;/code&gt;函数返回cause结果&lt;/p&gt; &#xA;&lt;h2&gt;RAPS_getmr&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;RAPS_getmr&lt;/code&gt;函数执行基于RAPS的MR并返回结果,并画图&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;expo&amp;lt;-fread(&#39;a.gz&#39;)&#xA;outcome&amp;lt;-fread(&#39;b.gz&#39;)&#xA;expo&amp;lt;-format_data(...)&#xA;outcome&amp;lt;-format_data(...)  ## format_data是TwoSampleMR包的函数，格式化。&#xA;expo&amp;lt;-pblapply(expo,pval=1,kb=10000,r2=0.001,LD_file=LD_file,FUN=clean_expo) ## 数据很大，建议本地clump，在线很容易报错&#xA;dat&amp;lt;-harmonise(expo,outcome)&#xA;res&amp;lt;-RAPS_getmr(dat, dir_figure)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;: TwoSampleMR包 harmonise_data后输出的数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dir_figure&lt;/code&gt;: 保存结果图形的目录。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;RAPS_getmr&lt;/code&gt;函数返回一个包含基于RAPS的MR结果的数据框。&lt;/p&gt; &#xA;&lt;h2&gt;mr_Presso&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;执行MR-PRESSO&lt;/p&gt; &#xA;&lt;h3&gt;语法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_Presso(dat, num = 10000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;: 数据框，包含基因表达和疾病风险关联分析的数据。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;num&lt;/code&gt;: 整数，模拟数量。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mr_presso_res&lt;/code&gt;: MR-PRESSO 结果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;dat&amp;lt;-harmonise_data(exposure,outcome) ## TwoSampleMR包的harmonise_data函数输出的结果&#xA;mr_presso_res &amp;lt;- mr_Presso(dat, num = 10000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;mr_presso_pval函数&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;提取 MR-PRESSO 结果中的主要结果&lt;/p&gt; &#xA;&lt;h3&gt;语法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_presso_pval(mr_presso_res)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mr_presso_res&lt;/code&gt;: MR-PRESSO 结果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mr_presso_main: MR-PRESSO 主要结果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_presso_main &amp;lt;- mr_presso_pval(mr_presso_res) ##mr_Presso输出的结果&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;mr_presso_snp函数&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;根据 MR-PRESSO 分析结果，将离群值剔除，返回剔除离群值后的dat(我一般称为dat_aj， 也就是 adjusted_data)， 可用于后续的IVW等分析。&lt;/p&gt; &#xA;&lt;h3&gt;语法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_presso_snp(mr_presso_res, mr_presso_main, dat, type = &#34;list&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mr_presso_res&lt;/code&gt;: MR-PRESSO 结果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mr_presso_main&lt;/code&gt;: MR-PRESSO 主要结果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;: 数据框或数据框列表，包含基因表达和疾病风险关联分析的数据。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: 字符串，输入数据类型。可选值为 &#34;list&#34; 或 &#34;data&#34;。如果是列表形式的（批量化运行后的结果），就是&lt;code&gt;list&lt;/code&gt;，如果是普通数据框就是data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;p&gt;过滤后的数据框或数据框列表。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;dat&amp;lt;-harmonise_data(exposure,outcome) ## TwoSampleMR包的harmonise_data函数输出的结果&#xA;mr_presso_res &amp;lt;- mr_Presso(dat, num = 10000)&#xA;mr_presso_main &amp;lt;- mr_presso_pval(mr_presso_res)&#xA;data_aj &amp;lt;- mr_presso_snp(mr_presso_res, mr_presso_main, dat, type = &#34;data&#34;)&#xA;&#xA;## 用矫正的data可以用于后续的分析，例如重新计算mr&#xA;res_aj&amp;lt;-mr(data_aj)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;快捷预处理及质控工具&lt;/h1&gt; &#xA;&lt;h2&gt;format_Mun&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;运用MungeSumstats包标准化GWAS 摘要统计数据（包括hg19和hg38转换）。该函数可以将来自Finngen R8和其他来源的 GWAS 摘要统计数据文件清洗为标准的GWAS文件，并可将基因组位置从 &lt;code&gt;ref_genome&lt;/code&gt; 转换到 &lt;code&gt;convert_ref_genome&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;format_Mun(file, source = &#34;finn_r8&#34;, save_path = NULL, lift = F, ref_genome = &#34;hg38&#34;, convert_ref_genome = &#34;hg19&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;file&lt;/code&gt;：字符向量或数据框，表示要格式化的 GWAS 摘要统计数据文件或数据框。如果输入的是字符向量，则表示文件的路径。如果输入的是数据框，则表示要格式化的数据框。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;source&lt;/code&gt;：字符向量，表示输入文件的来源。默认为 &lt;code&gt;&#34;finn_r8&#34;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;save_path&lt;/code&gt;：字符向量，表示格式化文件要保存的路径。默认为 &lt;code&gt;NULL&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lift&lt;/code&gt;：逻辑值，表示是否将基因组位置从 &lt;code&gt;ref_genome&lt;/code&gt; 转换到 &lt;code&gt;convert_ref_genome&lt;/code&gt;。默认为 &lt;code&gt;F&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ref_genome&lt;/code&gt;：字符向量，表示 GWAS 摘要统计数据文件使用的参考基因组。默认为 &lt;code&gt;&#34;hg38&#34;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;convert_ref_genome&lt;/code&gt;：字符向量，表示要将基因组位置转换到的参考基因组。默认为 &lt;code&gt;&#34;hg19&#34;&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# 从文件中格式化数据&#xA;format_Mun(&#34;my_sumstats.txt&#34;, save_path = &#34;~/formatted_sumstats&#34;, lift = F, ref_genome = &#34;hg38&#34;)&#xA;&#xA;# 从数据框中格式化数据&#xA;my_sumstats_df &amp;lt;- read.csv(&#34;my_sumstats.csv&#34;)&#xA;format_Mun(my_sumstats_df, save_path = &#34;~/formatted_sumstats&#34;, lift = F, ref_genome = &#34;hg38&#34;)&#xA;&#xA;#格式化数据并升降版本&#xA;format_Mun(my_sumstats_df, save_path = &#34;~/formatted_sumstats&#34;, lift = T, ref_genome = &#34;hg38&#34;, convert_ref_genome = &#34;hg19&#34;) ## 从hg38转为hg19&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;该函数返回格式化的数据框并将其写入磁盘文件。&lt;code&gt;save_path&lt;/code&gt;指定保存的位置&lt;/p&gt; &#xA;&lt;h2&gt;format_getmr&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;预设的快捷格式化 GWAS 摘要统计数据，这个函数用于将来自多个数据来源的 GWAS 摘要统计数据转换为TwoSampleMR 包所需的格式。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;format_getmr(data, type = &#34;exposure&#34;, source = &#34;finn_r8&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;data&lt;/code&gt;：数据框，表示要格式化的 GWAS 摘要统计数据。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;：字符向量，表示数据类型，可以是 &#34;exposure&#34; 或 &#34;outcome&#34;。默认为 &#34;exposure&#34;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;source&lt;/code&gt;：字符向量，表示数据来源。默认为 &#34;finn_r8&#34;。目前支持的来源有： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;finn_r8&#34;: &lt;a href=&#34;https://finngen.gitbook.io/documentation/data-download&#34;&gt;Data download - FinnGen Documentation (gitbook.io)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;ukb_nosnp&#34;: 尼尔数据库（UKB），因为没有rsid，因此需要匹配（已一键完成）。&lt;a href=&#34;http://www.nealelab.is/uk-biobank&#34;&gt;www.nealelab.is/uk-biobank&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Mun&#34;： 来自MungeSumstats包格式化后的数据&lt;/li&gt; &#xA;   &lt;li&gt;&#34;covid&#34;： &lt;a href=&#34;https://www.covid19hg.org/results/r7/&#34;&gt;COVID19-hg GWAS meta-analyses round 7 (covid19hg.org)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;outcome&#34; ： 已经格式化为TwoSampleMR包的“outcome”格式&lt;/li&gt; &#xA;   &lt;li&gt;&#34;exposure&#34;：已经格式化为TwoSampleMR包的“exposure”格式&lt;/li&gt; &#xA;   &lt;li&gt;&#34;fast_ukb&#34;: &lt;a href=&#34;https://yanglab.westlake.edu.cn/data/ukb_fastgwa/imp_binary/&#34;&gt;fastGWA | Yang Lab (westlake.edu.cn)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;bac&#34;: 2021年肠菌原文数据 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8515199/&#34;&gt;Large-scale association analyses identify host factors influencing human gut microbiome composition - PMC (nih.gov)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;my_data &amp;lt;- fread(&#34;my_data.gz&#34;)&#xA;format_getmr(my_data, type = &#34;finn_r8&#34;, source = &#34;Mun&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;该函数返回格式化的数据框。&lt;/p&gt; &#xA;&lt;h2&gt;format_trait&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;这个函数用于格式化 GWAS 摘要统计数据中的表型信息，使其符合命名规范，易于保存为文件（例如批量保存计算R2和F值后的文件）。&lt;/p&gt; &#xA;&lt;p&gt;主要是为了解决，在Windows系统下，保存文件的名称中不能包含特殊字符，例如&lt;code&gt;:&lt;/code&gt;,&lt;code&gt;|&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;format_trait(list, short = FALSE, short_num = &#34;40&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;list&lt;/code&gt;：列表，表示要格式化的 GWAS 摘要统计数据列表。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;short&lt;/code&gt;：逻辑值，表示是否要将表型名称缩短。默认为 FALSE。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;short_num&lt;/code&gt;：字符向量，表示缩短表型名称的长度。默认为 &#34;40&#34;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;my_list &amp;lt;- list(data1, data2, data3)&#xA;format_trait(my_list, short = TRUE, short_num = &#34;20&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;该函数返回格式化后的 GWAS 摘要统计数据列表。&lt;/p&gt; &#xA;&lt;h2&gt;read_vcf_getmr&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;这个函数用于从 VCF 文件中读取摘要统计数据。并保存为压缩文件。默认是.gz为后缀的压缩文件。方便下次读取以及节省空间。&lt;/p&gt; &#xA;&lt;p&gt;这是因为读取VCF文件将消耗大量电脑资源。我们建议批量读取VCF文件后储存为易于读取的压缩包形式。下次读取方便快捷。因此本函数不会直接返回数据框，而是保存为文件&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;read_vcf_getmr(file_name, nThread = 8, type = &#34;.gz&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;file_name&lt;/code&gt;：字符向量，表示要读取的 VCF 文件名。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nThread&lt;/code&gt;：整数，表示要使用的线程数。默认为 8。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;：字符向量，表示输出文件类型。默认为 &#34;.gz&#34;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;my_file &amp;lt;- &#34;my_file.vcf&#34;&#xA;read_vcf_getmr(my_file, nThread = 4, type = &#34;.gz&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;该函数没有返回值，而是将读取的数据写入文件。&lt;/p&gt; &#xA;&lt;h2&gt;read_easy&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;这个函数用于从文件中读取 GWAS 摘要统计数据。并返回经过P值筛选的文件。一般用于批量读取大量文件时。比如我要批量读取100个暴露数据，每个数据占用运行内存2G。如果100个，则200G，不是一般电脑可以承受。因此每次读取将直接筛选p值，压缩大小&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;read_easy(file_name, pval = 5e-08)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;file_name&lt;/code&gt;：字符向量，表示要读取的文件名。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pval&lt;/code&gt;：数字，表示筛选摘要统计数据的显著性水平。默认为 5e-08。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;my_file &amp;lt;- &#34;my_file.csv&#34;&#xA;read_easy(my_file, pval = 1e-06)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;该函数返回摘要统计数据的数据框。&lt;/p&gt; &#xA;&lt;h2&gt;get_eaf_from_1000G&lt;/h2&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;从1000G的MAF文件中提取EAF并将其与输入数据匹配。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;get_eaf_from_1000G(dat, path, type = &#34;exposure&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;：一个数据框，为TwoSampleMR包格式的数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt;：一个字符串，表示包含1000G MAF文件&lt;code&gt;fileFrequency.frq&lt;/code&gt;的目录路径。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;：一个字符串，表示数据是“exposure”（暴露因素）还是“outcome”（结果），默认为“exposure”。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;p&gt;一个数据框，其中包含输入数据的EAF和类型信息（原始、修正或错误）。&lt;/p&gt; &#xA;&lt;h3&gt;详细说明&lt;/h3&gt; &#xA;&lt;p&gt;该函数将读取1000G MAF文件，然后将其与输入数据进行匹配。对于每个SNP，该函数将检查输入数据中的效应等位基因与1000G中的效应等位基因是否匹配。&lt;/p&gt; &#xA;&lt;p&gt;如果不匹配，则将EAF设置为NA并将其类型设置为“error”。对于匹配的SNP，EAF将设置为1000G MAF中的值（如果输入数据的效应等位基因是minor allele），或1-MAF（如果输入数据的效应等位基因是major allele），并将其类型设置为“raw”或“corrected”。&lt;/p&gt; &#xA;&lt;p&gt;如果&lt;code&gt;type&lt;/code&gt;参数设置为“outcome”，则函数将使用输入数据中的结果等位基因来查找EAF。&lt;/p&gt; &#xA;&lt;p&gt;在处理完所有SNP后，该函数将输出一些有关匹配成功、失败以及NA的信息，以及类型信息的说明。&lt;/p&gt; &#xA;&lt;h3&gt;示例&lt;/h3&gt; &#xA;&lt;p&gt;以下是使用该函数的示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;dat &amp;lt;- get_eaf_from_1000G(dat, &#34;S:/GWAS数据/本地LD依赖文件&#34;, type = &#34;exposure&#34;)&#xA;&#xA;# 检查输出&#xA;head(dat)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;fileFrequency.frq&lt;/code&gt;为PLINK1.9输出的，根据1000G数据提取的MAF数据&lt;/p&gt; &#xA;&lt;p&gt;1000G参考文件下载地址：&lt;a href=&#34;http://fileserve.mrcieu.ac.uk/ld/1kg.v3.tgz&#34;&gt;http://fileserve.mrcieu.ac.uk/ld/1kg.v3.tgz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;可自行提取MAF数据。或从&lt;code&gt;GetScience&lt;/code&gt;公众号中获取已经提取好的&lt;code&gt;fileFrequency.frq&lt;/code&gt;文件&lt;/p&gt; &#xA;&lt;h2&gt;get_chr_pos&lt;/h2&gt; &#xA;&lt;p&gt;该函数利用MungeSumstats包匹配rsid的染色体位置。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;get_chr_pos(dat, type = &#34;exposure&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;：一个数据框，TwoSampleMR格式&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;：一个字符串，表示要获取SNP染色体位置和参考序列的SNP类型。可选值为&#34;exposure&#34;或&#34;outcome&#34;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;一个数据框，其中包含输入数据框的信息，以及新列&lt;code&gt;chr.exposure&lt;/code&gt;或&lt;code&gt;chr.outcome&lt;/code&gt;，表示每个SNP的染色体编号。新列&lt;code&gt;pos.exposure&lt;/code&gt;或&lt;code&gt;pos.outcome&lt;/code&gt;表示每个SNP在染色体上的位置。&lt;/p&gt; &#xA;&lt;h3&gt;函数说明&lt;/h3&gt; &#xA;&lt;p&gt;该函数使用&lt;code&gt;format_sumstats&lt;/code&gt;和&lt;code&gt;format_data&lt;/code&gt;函数从1000G项目中获取SNP的染色体位置和参考序列信息。&lt;/p&gt; &#xA;&lt;h3&gt;示例&lt;/h3&gt; &#xA;&lt;p&gt;以下示例演示如何使用&lt;code&gt;get_chr_pos&lt;/code&gt;函数：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# 获取曝露变量SNP的染色体位置和参考序列&#xA;exposure_chr_pos &amp;lt;- get_chr_pos(dat, type = &#34;exposure&#34;)&#xA;&#xA;# 获取结果变量SNP的染色体位置和参考序列&#xA;outcome_chr_pos &amp;lt;- get_chr_pos(dat, type = &#34;outcome&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;get_f函数&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;get_f&lt;/code&gt;函数计算样本的F统计量并返回F值大于指定阈值的样本数据。返回的数据包括每个SNP的R2和F值&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;get_f(dat, F_value = 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;: TwoSampleMR格式，一定要包含&lt;code&gt;eaf.exposure&lt;/code&gt;, &lt;code&gt;beta.exposure&lt;/code&gt;, &lt;code&gt;se.exposure&lt;/code&gt;, 和&lt;code&gt;samplesize.exposure&lt;/code&gt;的数据框。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;F_value&lt;/code&gt;: 指定的F统计量的阈值，F值大于该阈值的样本将被返回。默认值为10。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;注，本计算公式为&lt;/p&gt; &#xA;&lt;p&gt;F值：&lt;img src=&#34;A:%5COneDrive%5CGET%5Cassets%5Cclip_image002.gif&#34; alt=&#34;img&#34;&gt; R2值：&lt;img src=&#34;A:%5COneDrive%5CGET%5Cassets%5Cimage-20230327151305186.png&#34; alt=&#34;image-20230327151305186&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;公式参考文献：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4405269/&#34;&gt;A Multivariate Genome-Wide Association Analysis of 10 LDL Subfractions, and Their Response to Statin Treatment, in 1868 Caucasians - PMC (nih.gov)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8515199/&#34;&gt;Large-scale association analyses identify host factors influencing human gut microbiome composition - PMC (nih.gov)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;mr_dircreate_base&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;mr_dircreate_base&lt;/code&gt;函数创建基本的目录结构以保存MR分析结果和图形。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;mr_dircreate_base(root_dir, project_name, date = NULL)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;root_dir&lt;/code&gt;: 保存结果文件夹的根目录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: 项目名称，用于在根目录下创建一个以此命名的子目录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt;: 日期（可选），用于在子目录名称中添加日期以区分不同日期的结果文件夹。默认为&lt;code&gt;NULL&lt;/code&gt;，表示不添加日期。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;值&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;mr_dircreate_base&lt;/code&gt;函数返回一个包含结果文件夹路径的列表。&lt;/p&gt; &#xA;&lt;h3&gt;示例&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# 创建结果文件夹&#xA;res_dir &amp;lt;- mr_dircreate_base(&#34;path/to/root/dir&#34;, &#34;project_name&#34;, date = &#34;20220327&#34;)&#xA;&#xA;# 打印结果文件夹路径&#xA;print(res_dir)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;注意事项&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;root_dir&lt;/code&gt;参数指定保存结果文件夹的根目录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;参数指定项目名称，用于在根目录下创建一个以此命名的子目录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt;参数（可选）用于在子目录名称中添加日期以区分不同日期的结果文件夹。默认为&lt;code&gt;NULL&lt;/code&gt;，表示不添加日期。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mr_dircreate_base&lt;/code&gt;函数将在根目录下创建一个名为&lt;code&gt;project_name&lt;/code&gt;的子目录，并在该子目录下创建4个子目录，分别命名为&lt;code&gt;1.figure&lt;/code&gt;、&lt;code&gt;2.table&lt;/code&gt;、&lt;code&gt;3.figure of sig res&lt;/code&gt;和&lt;code&gt;4.snp with Fval&lt;/code&gt;。函数返回一个包含结果文件夹路径的列表。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;clean_expo&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;用于快捷筛选工具变量的函数，可执行P值筛选，EAF值筛选，clump。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;## 完整可选参数&#xA;clean_expo(expo, pval, low_af = 0.5, high_af = 0.5, clump = TRUE, kb = 10000, r2 = 0.001, LD_file = NULL, af_filter = FALSE)&#xA;&#xA;##不提供LD_file则自动在线clump&#xA;clean_expo(expo, pval, clump = TRUE, kb = 10000, r2 = 0.001)&#xA;##提供则本地clump&#xA;clean_expo(expo, pval, clump = TRUE, kb = 10000, r2 = 0.001，LD_file=LD_file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;expo&lt;/code&gt;: 一个数据框，其中包含遗传暴露指标的SNP名称、beta值、标准误、p值和频率。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pval&lt;/code&gt;: 用于筛选遗传暴露指标的p值阈值。p值小于此阈值的SNP将被保留。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;low_af&lt;/code&gt;: 频率过滤的下限值。默认为0.5。如果&lt;code&gt;af_filter&lt;/code&gt;为TRUE，则只有遗传暴露指标的频率低于此值或高于&lt;code&gt;high_af&lt;/code&gt;时，才会被保留。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;high_af&lt;/code&gt;: 频率过滤的上限值。默认为0.5。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;clump&lt;/code&gt;: 一个逻辑值，指示是否使用PLINK进行SNP聚类。默认为TRUE。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kb&lt;/code&gt;: 聚类的窗口大小（以kb为单位）。默认为10000。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;r2&lt;/code&gt;: LD阈值。默认为0.001。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LD_file&lt;/code&gt;: PLINK二进制文件的路径。如果未提供，则默认在线clump。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;af_filter&lt;/code&gt;: 一个逻辑值，指示是否启用频率过滤。默认为FALSE。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;clean_list&lt;/h2&gt; &#xA;&lt;h3&gt;描述&lt;/h3&gt; &#xA;&lt;p&gt;用于清理列表中元素行数的R包。常用于批量化质量控制。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;clean_list(list, nrow = 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;list&lt;/code&gt;: 一个列表，其中包含多个元素。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nrow&lt;/code&gt;: 用于筛选元素的行数阈值。如果元素的行数小于此阈值，则该元素将被删除。默认为10。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;一个列表，其中仅包含行数大于 &lt;code&gt;nrow&lt;/code&gt; 的元素。&lt;/p&gt; &#xA;&lt;h3&gt;例子&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 创建一个包含5个数据框的列表，每个数据框包含1-5行&#xA;set.seed(123)&#xA;lst &amp;lt;- list(data.frame(a = rnorm(1), b = rnorm(1)),&#xA;            data.frame(a = rnorm(2), b = rnorm(2)),&#xA;            data.frame(a = rnorm(3), b = rnorm(3)),&#xA;            data.frame(a = rnorm(4), b = rnorm(4)),&#xA;            data.frame(a = rnorm(5), b = rnorm(5)))&#xA;&#xA;# 运行 clean_list 函数，将阈值设置为2&#xA;cleaned_lst &amp;lt;- clean_list(lst, nrow = 3)&#xA;&#xA;# 查看清理后的列表&#xA;cleaned_lst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;clean_IV_from_outsig&lt;/h2&gt; &#xA;&lt;p&gt;用于从一个数据框中清理具有显著的MR反向因果效应P值的IV。&lt;/p&gt; &#xA;&lt;h3&gt;用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;clean_IV_from_outsig(dat, MR_reverse = 1e-03)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dat&lt;/code&gt;: 一个数据框，其中包含每个IV和其与结果变量之间的MR反向因果效应的P值。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MR_reverse&lt;/code&gt;: 用于筛选IV的MR反向因果效应P值阈值。具有P值小于此阈值的IV将被保留。默认为1e-03。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;返回值&lt;/h3&gt; &#xA;&lt;p&gt;一个数据框，其中包含P值大于 &lt;code&gt;MR_reverse&lt;/code&gt; 值的IV（也就是反向不显著的IVs）。&lt;/p&gt; &#xA;&lt;h2&gt;作者信息&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;代码作者：广州医科大学 第一临床学院 周浩彬 第二临床学院 谢治鑫&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;帮助文档作者： 周浩彬&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;时间：2023/3/27&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;适配版本: Get_MR1.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开源许可证：GPL3.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;公众号： GetScience&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;致谢：感谢广州医科大学 第六临床学院 黄覃耀和 南山学院 林子凯在孟德尔随机化概念，代码思路等提供的重要的建设性建议。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>UCSB-Library-Research-Data-Services/bren-meds213-class-data</title>
    <updated>2023-04-23T02:01:20Z</updated>
    <id>tag:github.com,2023-04-23:/UCSB-Library-Research-Data-Services/bren-meds213-class-data</id>
    <link href="https://github.com/UCSB-Library-Research-Data-Services/bren-meds213-class-data" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data and files for Bren MEDS 213&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>RSGInc/RSGHB</title>
    <updated>2023-04-23T02:01:20Z</updated>
    <id>tag:github.com,2023-04-23:/RSGInc/RSGHB</id>
    <link href="https://github.com/RSGInc/RSGHB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Functions for Hierarchical Bayesian Estimation: A Flexible Approach&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;This Site Has Changed!&lt;/h1&gt; &#xA;&lt;p&gt;The RSGHB model examples have moved to their own GitHub site: &lt;a href=&#34;https://github.com/RSGInc/RSGHB_Examples&#34;&gt;https://github.com/RSGInc/RSGHB_Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The 2014 ART Forum poster code has moved to its own GitHub site: &lt;a href=&#34;https://github.com/RSGInc/ART2014_RSGHB&#34;&gt;https://github.com/RSGInc/ART2014_RSGHB&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The RSGHB Package&lt;/h1&gt; &#xA;&lt;p&gt;This package can be used to estimate models using a hierarchical Bayesian framework. The flexibility comes in allowing the user to specify the likelihood function directly instead of assuming predetermined model structures. Types of models that can be estimated with this code include the family of discrete choice models (Multinomial Logit, Mixed Logit, Nested Logit, Error Components Logit and Latent Class) as well ordered response models like ordered probit and ordered logit. In addition, the package allows for flexibility in specifying parameters as either fixed (non-varying across individuals) or random with continuous distributions. Parameter distributions supported include normal, positive log-normal, negative log-normal, positive truncated normal and the Johnson SB distribution.&lt;/p&gt; &#xA;&lt;p&gt;Kenneth Train&#39;s Matlab and Gauss code for doing hierarchical Bayesian estimation has served as the basis for a few of the functions included in this package. These Matlab/Gauss functions have been rewritten to be optimized within R. Considerable code has been added to increase the flexibility and usability of the code base.&lt;/p&gt; &#xA;&lt;p&gt;Train&#39;s original Gauss and Matlab code can be found here: &lt;a href=&#34;http://elsa.berkeley.edu/Software/abstracts/train1006mxlhb.html&#34;&gt;http://elsa.berkeley.edu/Software/abstracts/train1006mxlhb.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See Train&#39;s chapter on HB in Discrete Choice with Simulation here: &lt;a href=&#34;http://elsa.berkeley.edu/books/choice2.html&#34;&gt;http://elsa.berkeley.edu/books/choice2.html&lt;/a&gt;;&lt;/p&gt; &#xA;&lt;p&gt;and his paper on using HB with non-normal distributions here: &lt;a href=&#34;http://elsa.berkeley.edu/~train/trainsonnier.pdf&#34;&gt;http://elsa.berkeley.edu/~train/trainsonnier.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RSGHB and all its example files are covered by the GPL 3 license.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/jeffdumont/RSGHB/raw/master/LICENSE&#34;&gt;https://github.com/jeffdumont/RSGHB/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The authors would also like to thank the invaluable contributions of Stephane Hess and the Choice Modelling Centre: &lt;a href=&#34;https://cmc.leeds.ac.uk/&#34;&gt;https://cmc.leeds.ac.uk/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;RSGHB and its examples are covered by the GPL-3 license. See &lt;a href=&#34;https://github.com/RSGInc/RSGHB/raw/master/LICENSE&#34;&gt;https://github.com/RSGInc/RSGHB/blob/master/LICENSE&lt;/a&gt; for more detail.&lt;/p&gt;</summary>
  </entry>
</feed>