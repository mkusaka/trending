<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T02:06:18Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kassambara/survminer</title>
    <updated>2022-08-21T02:06:18Z</updated>
    <id>tag:github.com,2022-08-21:/kassambara/survminer</id>
    <link href="https://github.com/kassambara/survminer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Survival Analysis and Visualization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kassambara/survminer/actions&#34;&gt;&lt;img src=&#34;https://github.com/kassambara/survminer/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/survminer&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/survminer&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/survminer?color=orange&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#survminer-survival-analysis-and-visualization&#34;&gt;survminer: Survival Analysis and Visualization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#installation-and-loading&#34;&gt;Installation and loading&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#ggsurvplot-drawing-survival-curves&#34;&gt;ggsurvplot: Drawing survival curves&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#fitting-survival-curves&#34;&gt;Fitting survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#basic-plots&#34;&gt;Basic plots&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#computing-and-passin-p-values&#34;&gt;Computing and passing p-values&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#customized-survival-curves&#34;&gt;Customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#more-customized-survival-curves&#34;&gt;More customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-customized-survival-curves&#34;&gt;Uber customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-platinum-customized-survival-curves&#34;&gt;Uber platinum customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-platinum-premium-customized-survival-curves&#34;&gt;Uber platinum premium customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#blog-posts&#34;&gt;Blog posts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;survminer: Survival Analysis and Visualization&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;survminer&lt;/strong&gt; R package provides functions for facilitating &lt;strong&gt;survival analysis&lt;/strong&gt; and &lt;strong&gt;visualization&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The main functions, in the package, are organized in different categories as follow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Survival Curves&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggsurvplot&lt;/strong&gt;(): Draws survival curves with the ‘number at risk’ table, the cumulative number of events table and the cumulative number of censored subjects table.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;arrange_ggsurvplots&lt;/strong&gt;(): Arranges multiple ggsurvplots on the same page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggsurvevents&lt;/strong&gt;(): Plots the distribution of event’s times.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;surv_summary&lt;/strong&gt;(): Summary of a survival curve. Compared to the default summary() function, surv_summary() creates a data frame containing a nice summary from survfit results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;surv_cutpoint&lt;/strong&gt;(): Determines the optimal cutpoint for one or multiple continuous variables at once. Provides a value of a cutpoint that correspond to the most significant relation with survival.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pairwise_survdiff&lt;/strong&gt;(): Multiple comparisons of survival curves. Calculate pairwise comparisons between group levels with corrections for multiple testing.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Diagnostics of Cox Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxzph&lt;/strong&gt;(): Graphical test of proportional hazards. Displays a graph of the scaled Schoenfeld residuals, along with a smooth curve using ggplot2. Wrapper around plot.cox.zph().&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxdiagnostics&lt;/strong&gt;(): Displays diagnostics graphs presenting goodness of Cox Proportional Hazards Model fit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxfunctional&lt;/strong&gt;(): Displays graphs of continuous explanatory variable against martingale residuals of null cox proportional hazards model. It helps to properly choose the functional form of continuous variable in cox model.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Summary of Cox Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggforest&lt;/strong&gt;(): Draws forest plot for CoxPH model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxadjustedcurves&lt;/strong&gt;(): Plots adjusted survival curves for coxph model.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Competing Risks&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ggcompetingrisks&lt;/strong&gt;(): Plots cumulative incidence curves for competing risks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Find out more at &lt;a href=&#34;https://rpkgs.datanovia.com/survminer/&#34; class=&#34;uri&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://rpkgs.datanovia.com/survminer/&#34;&gt;https://rpkgs.datanovia.com/survminer/&lt;/a&gt;, and check out the documentation and usage examples of each of the functions in survminer package.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation and loading&lt;/h2&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;CRAN&lt;/a&gt; as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;survminer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, install the latest version from &lt;a href=&#34;https://github.com/kassambara/survminer&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(devtools)) install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;kassambara/survminer&#34;, build_vignettes = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load survminer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#34;survminer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ggsurvplot: Drawing survival curves&lt;/h2&gt; &#xA;&lt;h3&gt;Fitting survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(&#34;survival&#34;)&#xA;fit &amp;lt;- survfit(Surv(time, status) ~ sex, data = lung)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic plots&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(fit, data = lung)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-basic-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Censor shape can be changed as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(fit, data = lung, censor.shape=&#34;|&#34;, censor.size = 4)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customized survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(&#xA;  fit, &#xA;  data = lung, &#xA;  size = 1,                 # change line size&#xA;  palette = &#xA;    c(&#34;#E7B800&#34;, &#34;#2E9FDF&#34;),# custom color palettes&#xA;  conf.int = TRUE,          # Add confidence interval&#xA;  pval = TRUE,              # Add p-value&#xA;  risk.table = TRUE,        # Add risk table&#xA;  risk.table.col = &#34;strata&#34;,# Risk table color by groups&#xA;  legend.labs = &#xA;    c(&#34;Male&#34;, &#34;Female&#34;),    # Change legend labels&#xA;  risk.table.height = 0.25, # Useful to change when you have multiple groups&#xA;  ggtheme = theme_bw()      # Change ggplot2 theme&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that, additional arguments are available to customize the main title, axis labels, the font style, axis limits, legends and the number at risk table.&lt;/p&gt; &#xA;&lt;h3&gt;More customized survival curves&lt;/h3&gt; &#xA;&lt;p&gt;Focus on &lt;code&gt;xlim&lt;/code&gt; and &lt;code&gt;break.time.by&lt;/code&gt; parameters which do not change the calculations of estimates of survival surves. Also note &lt;code&gt;risk.table.y.text.col = TRUE&lt;/code&gt; and &lt;code&gt;risk.table.y.text = FALSE&lt;/code&gt; that provide bars instead of names in text annotations of the legend of risk table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(&#xA;   fit,                     # survfit object with calculated statistics.&#xA;   data = lung,             # data used to fit survival curves.&#xA;   risk.table = TRUE,       # show risk table.&#xA;   pval = TRUE,             # show p-value of log-rank test.&#xA;   conf.int = TRUE,         # show confidence intervals for &#xA;                            # point estimates of survival curves.&#xA;   xlim = c(0,500),         # present narrower X axis, but not affect&#xA;                            # survival estimates.&#xA;   xlab = &#34;Time in days&#34;,   # customize X axis label.&#xA;   break.time.by = 100,     # break X axis in time intervals by 500.&#xA;   ggtheme = theme_light(), # customize plot and risk table with a theme.&#xA; risk.table.y.text.col = T, # colour risk table text annotations.&#xA;  risk.table.y.text = FALSE # show bars instead of names in text annotations&#xA;                            # in legend of risk table&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-more-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Uber customized survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurv &amp;lt;- ggsurvplot(&#xA;           fit,                     # survfit object with calculated statistics.&#xA;           data = lung,             # data used to fit survival curves.&#xA;           risk.table = TRUE,       # show risk table.&#xA;           pval = TRUE,             # show p-value of log-rank test.&#xA;           conf.int = TRUE,         # show confidence intervals for &#xA;                                    # point estimates of survival curves.&#xA;           palette = c(&#34;#E7B800&#34;, &#34;#2E9FDF&#34;),&#xA;           xlim = c(0,500),         # present narrower X axis, but not affect&#xA;                                    # survival estimates.&#xA;           xlab = &#34;Time in days&#34;,   # customize X axis label.&#xA;           break.time.by = 100,     # break X axis in time intervals by 500.&#xA;           ggtheme = theme_light(), # customize plot and risk table with a theme.&#xA;          risk.table.y.text.col = T,# colour risk table text annotations.&#xA;          risk.table.height = 0.25, # the height of the risk table&#xA;          risk.table.y.text = FALSE,# show bars instead of names in text annotations&#xA;                                    # in legend of risk table.&#xA;          ncensor.plot = TRUE,      # plot the number of censored subjects at time t&#xA;          ncensor.plot.height = 0.25,&#xA;          conf.int.style = &#34;step&#34;,  # customize style of confidence intervals&#xA;          surv.median.line = &#34;hv&#34;,  # add the median survival pointer.&#xA;          legend.labs = &#xA;            c(&#34;Male&#34;, &#34;Female&#34;)    # change legend labels.&#xA;        )&#xA;ggsurv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Uber platinum customized survival curves&lt;/h3&gt; &#xA;&lt;p&gt;Helper function to customize plot labels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;customize_labels &amp;lt;- function (p, font.title = NULL,&#xA;                              font.subtitle = NULL, font.caption = NULL,&#xA;                              font.x = NULL, font.y = NULL, font.xtickslab = NULL, font.ytickslab = NULL)&#xA;{&#xA;  original.p &amp;lt;- p&#xA;  if(is.ggplot(original.p)) list.plots &amp;lt;- list(original.p)&#xA;  else if(is.list(original.p)) list.plots &amp;lt;- original.p&#xA;  else stop(&#34;Can&#39;t handle an object of class &#34;, class (original.p))&#xA;  .set_font &amp;lt;- function(font){&#xA;    font &amp;lt;- ggpubr:::.parse_font(font)&#xA;    ggtext::element_markdown (size = font$size, face = font$face, colour = font$color)&#xA;  }&#xA;  for(i in 1:length(list.plots)){&#xA;    p &amp;lt;- list.plots[[i]]&#xA;    if(is.ggplot(p)){&#xA;      if (!is.null(font.title)) p &amp;lt;- p + theme(plot.title = .set_font(font.title))&#xA;      if (!is.null(font.subtitle)) p &amp;lt;- p + theme(plot.subtitle = .set_font(font.subtitle))&#xA;      if (!is.null(font.caption)) p &amp;lt;- p + theme(plot.caption = .set_font(font.caption))&#xA;      if (!is.null(font.x)) p &amp;lt;- p + theme(axis.title.x = .set_font(font.x))&#xA;      if (!is.null(font.y)) p &amp;lt;- p + theme(axis.title.y = .set_font(font.y))&#xA;      if (!is.null(font.xtickslab)) p &amp;lt;- p + theme(axis.text.x = .set_font(font.xtickslab))&#xA;      if (!is.null(font.ytickslab)) p &amp;lt;- p + theme(axis.text.y = .set_font(font.ytickslab))&#xA;      list.plots[[i]] &amp;lt;- p&#xA;    }&#xA;  }&#xA;  if(is.ggplot(original.p)) list.plots[[1]]&#xA;  else list.plots&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customized plot labels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Changing Labels&#xA;# %%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Labels for Survival Curves (plot)&#xA;ggsurv$plot &amp;lt;- ggsurv$plot + labs(&#xA;  title    = &#34;Survival curves&#34;,                     &#xA;  subtitle = &#34;Based on Kaplan-Meier estimates&#34;,  &#xA;  caption  = &#34;created with survminer&#34;             &#xA;  )&#xA;&#xA;# Labels for Risk Table &#xA;ggsurv$table &amp;lt;- ggsurv$table + labs(&#xA;  title    = &#34;Note the risk set sizes&#34;,          &#xA;  subtitle = &#34;and remember about censoring.&#34;, &#xA;  caption  = &#34;source code: website.com&#34;        &#xA;  )&#xA;&#xA;# Labels for ncensor plot &#xA;ggsurv$ncensor.plot &amp;lt;- ggsurv$ncensor.plot + labs( &#xA;  title    = &#34;Number of censorings&#34;, &#xA;  subtitle = &#34;over the time.&#34;,&#xA;  caption  = &#34;source code: website.com&#34;&#xA;  )&#xA;&#xA;# Changing the font size, style and color&#xA;# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Applying the same font style to all the components of ggsurv:&#xA;# survival curves, risk table and censor part&#xA;&#xA;ggsurv &amp;lt;- customize_labels(&#xA;  ggsurv,&#xA;  font.title    = c(16, &#34;bold&#34;, &#34;darkblue&#34;),         &#xA;  font.subtitle = c(15, &#34;bold.italic&#34;, &#34;purple&#34;), &#xA;  font.caption  = c(14, &#34;plain&#34;, &#34;orange&#34;),        &#xA;  font.x        = c(14, &#34;bold.italic&#34;, &#34;red&#34;),          &#xA;  font.y        = c(14, &#34;bold.italic&#34;, &#34;darkred&#34;),      &#xA;  font.xtickslab = c(12, &#34;plain&#34;, &#34;darkgreen&#34;)&#xA;)&#xA;&#xA;ggsurv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-platinium-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Uber platinum premium customized survival curves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Using specific fonts for risk table and ncensor plots&#xA;#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Font for Risk Table&#xA;ggsurv$table &amp;lt;- customize_labels(&#xA;  ggsurv$table,&#xA;  font.title    = c(13, &#34;bold.italic&#34;, &#34;green&#34;),&#xA;  font.subtitle = c(15, &#34;bold&#34;, &#34;pink&#34;),&#xA;  font.caption  = c(11, &#34;plain&#34;, &#34;darkgreen&#34;),&#xA;  font.x        = c(8, &#34;bold.italic&#34;, &#34;orange&#34;),&#xA;  font.y        = c(11, &#34;bold.italic&#34;, &#34;darkgreen&#34;),&#xA;  font.xtickslab = c(9, &#34;bold&#34;, &#34;red&#34;)&#xA;)&#xA;&#xA;&#xA;# Font for ncensor plot&#xA;ggsurv$ncensor.plot &amp;lt;- customize_labels(&#xA;  ggsurv$ncensor.plot,&#xA;  font.title    = c(13, &#34;bold.italic&#34;, &#34;green&#34;),&#xA;  font.subtitle = c(15, &#34;bold&#34;, &#34;pink&#34;),&#xA;  font.caption  = c(11, &#34;plain&#34;, &#34;darkgreen&#34;),&#xA;  font.x        = c(8, &#34;bold.italic&#34;, &#34;orange&#34;),&#xA;  font.y        = c(11, &#34;bold.italic&#34;, &#34;darkgreen&#34;),&#xA;  font.xtickslab = c(9, &#34;bold&#34;, &#34;red&#34;)&#xA;)&#xA;&#xA;print(ggsurv)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-platinium-premium-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blog posts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT January 2017. &lt;a href=&#34;http://r-addict.com/2017/02/09/Fancy-Survival-Plots.html&#34;&gt;Comparing (Fancy) Survival Curves with Weighted Log-rank Tests&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT January 2017. &lt;a href=&#34;http://r-addict.com/2017/01/15/Too-Far-With-Survival-Plots.html&#34;&gt;When You Went too Far with Survival Plots During the survminer 1st Anniversary&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/survival-analysis-basics&#34;&gt;Survival Analysis Basics: Curves and Logrank Tests&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/cox-proportional-hazards-model&#34;&gt;Cox Proportional Hazards Model&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/cox-model-assumptions&#34;&gt;Cox Model Assumptions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT November 2016. &lt;a href=&#34;http://r-addict.com/2016/11/21/Optimal-Cutpoint-maxstat.html&#34;&gt;Determine optimal cutpoints for numerical variables in survival plots&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT May 2016. &lt;a href=&#34;http://r-addict.com/2016/05/23/Informative-Survival-Plots.html&#34;&gt;Survival plots have never been so informative&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA January 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/survminer-r-package-survival-data-analysis-and-visualization&#34;&gt;survminer R package: Survival Data Analysis and Visualization&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>immunogenomics/harmony</title>
    <updated>2022-08-21T02:06:18Z</updated>
    <id>tag:github.com,2022-08-21:/immunogenomics/harmony</id>
    <link href="https://github.com/immunogenomics/harmony" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, sensitive and accurate integration of single-cell data with Harmony&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Harmony &lt;img src=&#34;https://raw.githubusercontent.com/immunogenomics/harmony/master/man/figures/logo.png&#34; width=&#34;181px&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/immunogenomics/harmony&#34;&gt;&lt;img src=&#34;https://travis-ci.org/immunogenomics/harmony.svg?branch=master&#34; alt=&#34;Travis-CI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/immunogenomics/harmony&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/immunogenomics/harmony?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.1038/s41592-019-0619-0&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/doi/10.1038/s41592-019-0619-0.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Fast, sensitive and accurate integration of single-cell data with Harmony&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the manuscript in Nature Methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nature.com/articles/s41592-019-0619-0&#34;&gt;nature website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nature.com/articles/s41592-019-0619-0.epdf?shared_access_token=rDg_Rd07lrFXExt_ySj7V9RgN0jAjWel9jnR3ZoTv0NfDJkKCfDV_X9Mq3lweQmKiXEXxhrebQRjJEZdc-xNv6-7ZN1XotlD_mo5TSS4Z4eWn-kUo6mBwA5dEAKlTfR8OT6E10MZY_E-906ajbzvgg%3D%3D&#34;&gt;read link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For Python users, check out the &lt;a href=&#34;https://github.com/slowkow/harmonypy&#34;&gt;harmonypy package&lt;/a&gt; by Kamil Slowikowski.&lt;/p&gt; &#xA;&lt;h1&gt;System requirements&lt;/h1&gt; &#xA;&lt;p&gt;Harmony has been tested on R versions &amp;gt;= 3.4. Please consult the DESCRIPTION file for more details on required R packages. Harmony has been tested on Linux, OS X, and Windows platforms.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;To run Harmony, open R and install harmony from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;harmony&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like the latest development version, install from this github directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(devtools)&#xA;install_github(&#34;immunogenomics/harmony&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage/Demos&lt;/h1&gt; &#xA;&lt;p&gt;We made it easy to run Harmony in most common R analysis pipelines.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://github.com/immunogenomics/harmony/raw/master/vignettes/quickstart.Rmd&#34;&gt;vignette&lt;/a&gt; for a quick start tutorial.&lt;/p&gt; &#xA;&lt;h2&gt;PCA matrix&lt;/h2&gt; &#xA;&lt;p&gt;The Harmony algorithm iteratively corrects PCA embeddings. To input your own low dimensional embeddings directly, set &lt;code&gt;do_pca=FALSE&lt;/code&gt;. Harmony is packaged with a small dataset&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(harmony)&#xA;my_harmony_embeddings &amp;lt;- HarmonyMatrix(my_pca_embeddings, meta_data, &#34;dataset&#34;, do_pca=FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Normalized gene matrix&lt;/h2&gt; &#xA;&lt;p&gt;You can also run Harmony on a sparse matrix of library size normalized expression counts. Harmony will scale these counts, run PCA, and finally perform integration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(harmony)&#xA;my_harmony_embeddings &amp;lt;- HarmonyMatrix(normalized_counts, meta_data, &#34;dataset&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Seurat&lt;/h2&gt; &#xA;&lt;p&gt;You can run Harmony within your Seurat workflow. You&#39;ll only need to make two changes to your code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run Harmony with the &lt;code&gt;RunHarmony()&lt;/code&gt; function&lt;/li&gt; &#xA; &lt;li&gt;In downstream analyses, use the Harmony embeddings instead of PCA.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For example, run Harmony and then UMAP in two lines.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;seuratObj &amp;lt;- RunHarmony(seuratObj, &#34;dataset&#34;)&#xA;seuratObj &amp;lt;- RunUMAP(seuratObj, reduction = &#34;harmony&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For details, check out these vignettes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/raw/master/docs/SeuratV2.html&#34;&gt;Seurat V2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/raw/master/docs/SeuratV3.html&#34;&gt;Seurat V3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MUDAN&lt;/h2&gt; &#xA;&lt;p&gt;You can run Harmony with functions from the &lt;a href=&#34;https://github.com/jefworks/mudan&#34;&gt;MUDAN package&lt;/a&gt;. For more, details, check out this &lt;a href=&#34;http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/raw/master/docs/mudan.html&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Harmony with two or more covariates&lt;/h2&gt; &#xA;&lt;p&gt;Harmony can integrate over multiple covariates. To do this, specify a vector covariates to integrate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_harmony_embeddings &amp;lt;- HarmonyMatrix(&#xA;  my_pca_embeddings, meta_data, c(&#34;dataset&#34;, &#34;donor&#34;, &#34;batch_id&#34;),&#xA;  do_pca = FALSE&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Do the same with your Seurat object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;seuratObject &amp;lt;- RunHarmony(seuratObject, c(&#34;dataset&#34;, &#34;donor&#34;, &#34;batch_id&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;p&gt;The examples above all return integrated PCA embeddings. We created a more &lt;a href=&#34;http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/raw/master/docs/advanced.html&#34;&gt;advanced tutorial&lt;/a&gt; that explores the internal data structures used in the Harmony algorithm.&lt;/p&gt; &#xA;&lt;h1&gt;Reproducing results from manuscript&lt;/h1&gt; &#xA;&lt;p&gt;Code to reproduce Harmony results from the Korsunsky et al 2019 manuscript will be made available on github.com/immunogenomics/harmony2019.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-tmap/tmap</title>
    <updated>2022-08-21T02:06:18Z</updated>
    <id>tag:github.com,2022-08-21:/r-tmap/tmap</id>
    <link href="https://github.com/r-tmap/tmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package for thematic maps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tmap: thematic maps in R&lt;/h1&gt; &#xA;&lt;!--[![Build Status](https://travis-ci.org/mtennekes/tmap.png?branch=master)](https://travis-ci.org/mtennekes/tmap)--&gt; &#xA;&lt;!--[![Coverage Status](https://img.shields.io/codecov/c/github/mtennekes/tmap/master.svg)](https://codecov.io/github/mtennekes/tmap?branch=master)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/mtennekes/tmap&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/mtennekes/tmap?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3-brightgreen.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=tmap&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/tmap&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_tmap.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/tmap&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.r-pkg.org/pkg/tmap&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/tmap?color=brightgreen&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/package=tmap&#34;&gt;&lt;code&gt;tmap&lt;/code&gt;&lt;/a&gt; is an actively maintained open-source &lt;a href=&#34;http://stackoverflow.com/tags/r/info&#34;&gt;R&lt;/a&gt;-library for drawing thematic maps. The API is based on &lt;a href=&#34;http://vita.had.co.nz/papers/layered-grammar.pdf&#34;&gt;&lt;em&gt;A Layered Grammar of Graphics&lt;/em&gt;&lt;/a&gt; and resembles the syntax of &lt;a href=&#34;http://cran.r-project.org/package=ggplot2&#34;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;, a popular R-library for drawing charts.&lt;/p&gt; &#xA;&lt;span&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/classic.png&#34; alt=&#34;Classic World Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/bubble.png&#34; alt=&#34;Bubble Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/view_metro4.jpg&#34; alt=&#34;Bubble Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/world_facets2.png&#34; alt=&#34;World facets&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/USchoro.png&#34; alt=&#34;US Choropleth&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/US_PR.jpg&#34; alt=&#34;US Choropleth&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes3b.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes4.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes5.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/view_crimes2.JPG&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;/span&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/r-tmap/tmap/#reference&#34;&gt;below&lt;/a&gt; the source code for these images.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;tmap&lt;/code&gt; is available on &lt;a href=&#34;https://cran.r-project.org/package=tmap&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/tmap&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt;. Installation is straightforward:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;tmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Linux and macOS users who are new to working with spatial data in R, this may fail since additional (non-R) libraries are required (which are automatically installed for Windows users).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; No additional installation required.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux (Ubuntu)&lt;/strong&gt; See &lt;a href=&#34;https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/&#34;&gt;https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/&lt;/a&gt;. Please address installation issues in this &lt;a href=&#34;https://github.com/r-tmap/tmap/issues/150&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt; See &lt;a href=&#34;http://www.kyngchaos.com&#34;&gt;http://www.kyngchaos.com&lt;/a&gt;. Please address installation issues in this &lt;a href=&#34;https://github.com/r-tmap/tmap/issues/149&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;The latest development version can be installed using &lt;code&gt;devtools&lt;/code&gt;. In order to use the development version of &lt;code&gt;tmap&lt;/code&gt;, it is recommended to use the development version of &lt;a href=&#34;http://github.com/r-tmap/tmaptools&#34;&gt;tmaptools&lt;/a&gt; as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(remotes)&#xA;install_github(&#34;r-tmap/tmaptools&#34;)&#xA;install_github(&#34;r-tmap/tmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/r-tmap/tmap/raw/master/NEWS&#34;&gt;NEWS&lt;/a&gt; for the latest features and improvements and the &lt;a href=&#34;https://github.com/r-tmap/tmap/issues&#34;&gt;issue list&lt;/a&gt; for discussions of enhancements and bugs.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to help with the development of the package? Please let us know! Any feedback, requests, tips, or bug reports are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tmap)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Book&lt;/h2&gt; &#xA;&lt;p&gt;Tennekes, M., Nowosad, J., Elegant and informative maps with tmap. Draft version, &lt;a href=&#34;https://r-tmap.github.io/&#34;&gt;https://r-tmap.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.18637/jss.v084.i06&#34;&gt;Tennekes, M., 2018, tmap: Thematic Maps in R, Journal of Statistical Software, 84(6), 1-39&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This paper has been written for &lt;code&gt;tmap&lt;/code&gt; 1.11-2. See the &lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-JSS-code.html&#34;&gt;reproducible code&lt;/a&gt; using &lt;code&gt;tmap&lt;/code&gt; 2.x and 3.x.&lt;/p&gt; &#xA;&lt;h2&gt;Vignettes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-getstarted.html&#34;&gt;tmap: get started!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-changes.html&#34;&gt;tmap: what is changed in recent versions?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mtennekes.github.io/tmap4/index.html&#34;&gt;tmap v4: a sneak peak&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-tmap/tmap/raw/master/demo/tutorials/rmarkdown_tmap.Rmd&#34;&gt;tmap in RMarkdown&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Presentations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_opengeo_muenster.pdf&#34;&gt;Creating thematic maps in R&lt;/a&gt; (OpenGeoHUB Summer School 2019)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mtennekes/tmap-workshop&#34;&gt;Plotting spatial data with R&lt;/a&gt; (eRum 2018)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_user2017.pdf&#34;&gt;Exploring and presenting maps with tmap&lt;/a&gt; (useR!2017)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_user2015.pdf&#34;&gt;tmap: creating thematic maps in a flexible way&lt;/a&gt; (useR!2015)]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://geocompr.robinlovelace.net/adv-map.html&#34;&gt;Geocomputation with R; Making maps with R, Robin Lovelace, Jakub Nowosad, Jannes Muenchow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wgFVmzSbaQc#t=3m20s&#34;&gt;R tip: Create maps in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gotellilab.github.io/Bio381/StudentPresentations/SpatialDataTutorial.html&#34;&gt;Working with Spatial Data and using tmap, Samantha A. Alger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.computerworld.com/article/3175623/data-analytics/mapping-in-r-just-got-a-whole-lot-easier.html&#34;&gt;Computer World: Mapping in R just got a whole lot easier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sesync-ci.github.io/maps-in-R-lesson/&#34;&gt;National Socio-Environmental Synthesis Center: Maps in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/doc/contrib/intro-spatial-rl.pdf&#34;&gt;Introduction to visualising spatial data in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://spatcontrol.net/SpatialControl/2015/11/06/tmap-r-package/&#34;&gt;Blog post StatialControl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twiav.nl/en/blog0002en.php&#34;&gt;Blog post TWIAV&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cwrld.us/Rmaps10&#34;&gt;Computer World: Create maps in R in 10 (fairly) easy steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.computerworld.com/article/2921176/business-intelligence/great-r-packages-for-data-import-wrangling-visualization.html&#34;&gt;Computer World: Great R packages for data import, wrangling and visualization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Robinlovelace/Creating-maps-in-R/raw/master/vignettes/vspd-base-shiny.Rmd&#34;&gt;Tutorial Visualising spatial data: from base to shiny - workshop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/tmap&#34;&gt;Stack Overflow questions (#tmap)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help with &lt;code&gt;tmap&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/tags/tmap&#34;&gt;stackoverflow&lt;/a&gt; is a great source of answers to common tmap questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem. Please tag your questions with &lt;em&gt;tmap&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have a request or if think your problem is caused by a bug, please open an &lt;a href=&#34;https://github.com/mtennekes/tmap/issues&#34;&gt;issue&lt;/a&gt;, preferably with a reproducible example.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>