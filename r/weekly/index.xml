<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-07T02:19:26Z</updated>
  <subtitle>Weekly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coolbutuseless/anotherworld</title>
    <updated>2022-08-07T02:19:26Z</updated>
    <id>tag:github.com,2022-08-07:/coolbutuseless/anotherworld</id>
    <link href="https://github.com/coolbutuseless/anotherworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AnotherWorld ported to R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;AnotherWorld&lt;/code&gt; playable game in R&lt;/h1&gt; &#xA;&lt;p&gt;This is the full code for a playable R version of the 16-bit game &lt;a href=&#34;https://en.wikipedia.org/wiki/Another_World_(video_game)&#34;&gt;&lt;code&gt;AnotherWorld&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The game plays in realtime using 2 key packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/nara&#34;&gt;&lt;code&gt;{nara}&lt;/code&gt;&lt;/a&gt; for manipulation of &lt;em&gt;nativeRaster&lt;/em&gt; images as a fast in-memory drawing canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/eventloop&#34;&gt;&lt;code&gt;{eventloop}&lt;/code&gt;&lt;/a&gt; for event-driven interaction - allowing for keyboard feedback while rendering the game with sound.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;You can play this game &lt;em&gt;today&lt;/em&gt; in R!!&lt;/h3&gt; &#xA;&lt;p&gt;However, there are still some graphics bugs etc to work out.&lt;/p&gt; &#xA;&lt;p&gt;Please file an issue on github if you think something is definitely wrong!&lt;/p&gt; &#xA;&lt;h2&gt;Gameplay in R&lt;/h2&gt; &#xA;&lt;p&gt;A live capture of playing the game in R&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/anotherworld.gif&#34; width=&#34;70%&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/nara&#34;&gt;&lt;code&gt;{nara}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/eventloop&#34;&gt;&lt;code&gt;{eventloop}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Retrieve the anotherworld game code from &lt;a href=&#34;https://github.com/coolbutuseless/anotherworld&#34;&gt;github&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that this is &lt;em&gt;not&lt;/em&gt; a package, but just a collection of R scripts and code. This should make it easier to hack on, extend and adapt.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(remotes)&#xA;&#xA;# Install dependencies&#xA;remotes::install_github(&#39;coolbutuseless/eventloop&#39;)&#xA;remotes::install_github(&#39;coolbutuseless/nara&#39;)&#xA;&#xA;# Install packages&#xA;install.packages(&#39;audio&#39;)&#xA;install.packages(&#39;beepr&#39;)&#xA;&#xA;# Grab a copy of the code (this is not distributed as a package)&#xA;system(&#34;git clone https://github.com/coolbutuseless/anotherworld&#34;)&#xA;setwd(&#39;anotherworld&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Controls&lt;/h2&gt; &#xA;&lt;p&gt;After your experiment on Earth goes awry, you are transported to &lt;em&gt;another world&lt;/em&gt; where you must survive and, hopefully, escape!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run game with &lt;code&gt;source(&#39;game.R&#39;)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;PART&lt;/code&gt; variable first to the section you want to play.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Control game with arrow keys and space bar (for action)&lt;/li&gt; &#xA; &lt;li&gt;Press &#39;p&#39; to pause&lt;/li&gt; &#xA; &lt;li&gt;Press &#39;ESC&#39; to quit&lt;/li&gt; &#xA; &lt;li&gt;When you finish a section the game does not automatically advance to the next section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Play the game&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;16001&lt;/strong&gt; &#34;Introduction&#34;: cinematic introduction. No user interactivity&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16002&lt;/strong&gt; &#34;Water&#34;: If you want to get to playing the game, this is the section to run. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hint: Press &#34;Up&#34; at the start when it looks like you&#39;re underwater.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16003&lt;/strong&gt; &#34;Jail&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16004&lt;/strong&gt; &#34;City&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16005&lt;/strong&gt; &#34;Arena&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16006&lt;/strong&gt; &#34;Luxe&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16007&lt;/strong&gt; &#34;Final&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;PART &amp;lt;- 16001  # &amp;lt;------- select the part of the game to play&#xA;source(&#39;game.R&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GamePlay&lt;/h2&gt; &#xA;&lt;h4&gt;Game walkthrough on the Amiga&lt;/h4&gt; &#xA;&lt;p&gt;This looks pretty similar to the R version as it&#39;s running on the same in-game virtual machine.&lt;/p&gt; &#xA;&lt;p&gt;Click the image below to watch it on youtube.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=utrxk5_PeEY&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/utrxk5_PeEY/0.jpg&#34; alt=&#34;AnotherWorld gameplay&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Screenshots of the R version&lt;/h4&gt; &#xA;&lt;div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/01.png&#34;&gt;&#xA; &lt;/div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/02.png&#34;&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/03.png&#34;&gt;&#xA; &lt;/div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/04.png&#34;&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;ToDo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Audio not yet working on Unix. Help needed. What&#39;s a good command line audio playback utility that everyone can install easily?&lt;/li&gt; &#xA; &lt;li&gt;Controls still feel a bit &#34;sticky&#34;. This feels like a bug in my code.&lt;/li&gt; &#xA; &lt;li&gt;Incorporate display of pre-rendered bitmaps which are part of the in-game data &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You&#39;ll notice some scenes are a little blank because these bitmaps aren&#39;t drawn yet.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Still some rendering anomalies&lt;/li&gt; &#xA; &lt;li&gt;See if I can get sound playback with &lt;code&gt;{audio}&lt;/code&gt; package working correctly&lt;/li&gt; &#xA; &lt;li&gt;While there are sound effects in the R version, there is currently no music.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running this on macOS requires &lt;a href=&#34;https://www.xquartz.org/&#34;&gt;XQuartz&lt;/a&gt; to have been installed in order to support the &lt;code&gt;x11()&lt;/code&gt; device.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;R needs to have been compiled with &lt;code&gt;x11()&lt;/code&gt; and Cairo support.&lt;/p&gt; &#xA;&lt;h2&gt;Limitation - WindowsOS&lt;/h2&gt; &#xA;&lt;p&gt;The WindowsOS version of R does not currently have support for the &lt;code&gt;onIdle&lt;/code&gt; callback and therefore does not support event-driven interactive graphics as implemented in the &lt;code&gt;{eventloop}&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are a windows developer capable of adding support for an &lt;code&gt;onIdle&lt;/code&gt; callback to R itself, please get in touch!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Limitation - Flickering Cursor&lt;/h2&gt; &#xA;&lt;p&gt;The cursor icon in an &lt;code&gt;{eventloop}&lt;/code&gt; window will flicker because of some hard-coded behaviour in R&#39;s double-buffered &lt;code&gt;x11()&lt;/code&gt; graphics device.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{eventloop}&lt;/code&gt; makes use of the &lt;code&gt;x11()&lt;/code&gt; graphics device with a double-buffered backend based on Cairo (&lt;code&gt;x11(type = &#39;dbcairo&#39;)&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The double-buffering within the graphics device is coordinated through use of &lt;code&gt;dev.hold()&lt;/code&gt; and &lt;code&gt;dev.flush()&lt;/code&gt; calls.&lt;/p&gt; &#xA;&lt;p&gt;Whenever &lt;code&gt;dev.hold()&lt;/code&gt; is called, the cursor will be set to the busy cursor (usually a stopwatch on macOS), and when &lt;code&gt;dev.flush()&lt;/code&gt; is called the cursor reverts to a normal pointer arrow.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;code&gt;dev.hold()&lt;/code&gt; and &lt;code&gt;dev.flush()&lt;/code&gt; are called when drawing every single frame, the cursor will flicker between these two images.&lt;/p&gt; &#xA;&lt;p&gt;The interim solution is to not have the cursor over the window when interacting with the app. This only really works when the app solely relies on keyboard feedback (like this game of AnotherWorld).&lt;/p&gt; &#xA;&lt;p&gt;The more complicated solution will involve crafting a patch to R itself to make the cursor change behaviour user-configurable rather than hard-coded.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are are an R developer capable of crafting such a patch to R , please get in touch with me!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference Source Code&lt;/h2&gt; &#xA;&lt;p&gt;The reference code for this port was the JavaScript code from &lt;a href=&#34;https://github.com/cyxx/another_js&#34;&gt;github/cyxx/another_js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Further details have been extracted from the C code from &lt;a href=&#34;https://github.com/fabiensanglard/Another-World-Bytecode-Interpreter&#34;&gt;Fabien&#39;s C++ Interpreter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Challenges&lt;/h2&gt; &#xA;&lt;h3&gt;0-based vs 1-based indexing&lt;/h3&gt; &#xA;&lt;p&gt;Javascript and C code used for reference both use 0-based indexing, whereas R uses 1-based indexing.&lt;/p&gt; &#xA;&lt;p&gt;To try and avoid editing all references to array indexint to &lt;code&gt;+1&lt;/code&gt;, I created a new class &lt;code&gt;cindex&lt;/code&gt; which has 1-based indexing in R.&lt;/p&gt; &#xA;&lt;p&gt;There still a lot of refacoring to do, and many structures are still indexed by a character string representation of the hexadecimal version of the index or address i.e. ugly.&lt;/p&gt; &#xA;&lt;h3&gt;bitwise operations&lt;/h3&gt; &#xA;&lt;p&gt;JS and C both use &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; for bitwise operations, whereas R uses them for logical operations.&lt;/p&gt; &#xA;&lt;p&gt;I created a set of infix operators (&lt;code&gt;%|%&lt;/code&gt; etc) to mimic the bitwise operators in C.&lt;/p&gt; &#xA;&lt;h3&gt;&#39;Bytekiller&#39; compression&lt;/h3&gt; &#xA;&lt;p&gt;Data in the original game is compressed with &#39;bytekiller&#39; which is a very very old skool data compression algorithm.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/connectwidgets</title>
    <updated>2022-08-07T02:19:26Z</updated>
    <id>tag:github.com,2022-08-07:/rstudio/connectwidgets</id>
    <link href="https://github.com/rstudio/connectwidgets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The {connectwidgets} package allows you to curate your content on RStudio Connect, helping to create organized groups of content within an RMarkdown document or Shiny app.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;connectwidgets &lt;a href=&#34;https://rstudio.github.io/connectwidgets/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/connectwidgets/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;138&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Curate your content on RStudio Connect&lt;/p&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=connectwidgets&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/connectwidgets&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-green&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rstudio/connectwidgets/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/connectwidgets/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rstudio/connectwidgets/actions/workflows/lint.yaml&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/connectwidgets/actions/workflows/lint.yaml/badge.svg?sanitize=true&#34; alt=&#34;lint&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;code&gt;connectwidgets&lt;/code&gt; is an R package that can be used to query an RStudio Connect server for a subset of your existing content items, then organize them within &lt;code&gt;htmlwidget&lt;/code&gt; components in an R Markdown document or Shiny application.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;connectwidgets&lt;/code&gt; to create a content hub or knowledge repository, a customized summary page for a particular group of stakeholders, or a presentation layer for any group of related content.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;connectwidgets&lt;/code&gt; from CRAN using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;connectwidgets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can install the development version from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;rstudio/connectwidgets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Use the template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rmarkdown::draft(&#34;example-page.Rmd&#34;, template = &#34;connectwidgets&#34;, package = &#34;connectwidgets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also copy and knit the following example, or read on for more details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---&#xA;title: an example page&#xA;output: html_document&#xA;---&#xA;&#xA;```{r setup, include=FALSE}&#xA;library(connectwidgets)&#xA;library(dplyr)&#xA;&#xA;knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)&#xA;&#xA;client &amp;lt;- connect(&#xA;  # server  = Sys.getenv(&#34;CONNECT_SERVER&#34;),&#xA;  # api_key = Sys.getenv(&#34;CONNECT_API_KEY&#34;)&#xA;  )&#xA;&#xA;all_content &amp;lt;- client %&amp;gt;%&#xA;  content()&#xA;&#xA;sample_content &amp;lt;- all_content %&amp;gt;%&#xA;  arrange(desc(updated_time)) %&amp;gt;%&#xA;  slice_head(n = 50)&#xA;```&#xA;&#xA;![](https://source.unsplash.com/1920x1080/?forest &#34;A random forest.&#34;)&#xA;&#xA;## Components&#xA;&#xA;### card&#xA;&#xA;```{r card}&#xA;sample_content %&amp;gt;%&#xA;  slice(1) %&amp;gt;%&#xA;  rsc_card()&#xA;```&#xA;&#xA;### grid&#xA;&#xA;```{r grid}&#xA;sample_content %&amp;gt;%&#xA;  rsc_grid()&#xA;```&#xA;&#xA;### table&#xA;&#xA;```{r table}&#xA;sample_content %&amp;gt;%&#xA;  rsc_table()&#xA;```&#xA;&#xA;### search &amp;amp; filter&#xA;&#xA;```{r search-and-filter}&#xA;rsc_cols(rsc_search(all_content), rsc_filter(all_content), widths = c(2, 2))&#xA;rsc_table(all_content)&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;The client object:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Validates your API key with the RStudio Connect server&lt;/li&gt; &#xA; &lt;li&gt;Ensures you are running a recent enough version of Connect&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use an &lt;code&gt;.Renviron&lt;/code&gt; file to set the &lt;code&gt;CONNECT_SERVER&lt;/code&gt; and &lt;code&gt;CONNECT_API_KEY&lt;/code&gt; environment variables. If you’re not familiar with setting environment variables, check out the &lt;a href=&#34;https://rstats.wtf/r-startup.html#renviron&#34;&gt;R Startup chapter&lt;/a&gt; of What They Forgot to Teach You About R. RStudio Connect will &lt;a href=&#34;https://docs.rstudio.com/connect/user/content-settings/#content-vars&#34;&gt;automatically apply&lt;/a&gt; values for these at document run time, so there is no need to include them in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(connectwidgets)&#xA;library(dplyr, warn.conflicts = FALSE)&#xA;&#xA;knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)&#xA;&#xA;client &amp;lt;- connect(&#xA;  # server  = Sys.getenv(&#34;CONNECT_SERVER&#34;),&#xA;  # api_key = Sys.getenv(&#34;CONNECT_API_KEY&#34;)&#xA;  )&#xA;&#xA;all_content &amp;lt;- client %&amp;gt;%&#xA;  content()&#xA;&#xA;glimpse(all_content)&#xA;#&amp;gt; Rows: 1,213&#xA;#&amp;gt; Columns: 15&#xA;#&amp;gt; $ id               &amp;lt;int&amp;gt; 3979, 4603, 4602, 5061, 5015, 5054, 5055, 5052, 5030,…&#xA;#&amp;gt; $ guid             &amp;lt;chr&amp;gt; &#34;ca22a1f6-bab5-4fc0-8f38-ed8021be41f5&#34;, &#34;e7c26684-ec4…&#xA;#&amp;gt; $ name             &amp;lt;chr&amp;gt; &#34;github-issues-connect&#34;, &#34;group-info&#34;, &#34;user-info&#34;, &#34;…&#xA;#&amp;gt; $ title            &amp;lt;chr&amp;gt; NA, &#34;group-info&#34;, &#34;user-info&#34;, &#34;plumbertabeau&#34;, &#34;RSC+…&#xA;#&amp;gt; $ description      &amp;lt;chr&amp;gt; &#34;A table pin with 19718 rows and 10 columns.&#34;, &#34;Resul…&#xA;#&amp;gt; $ app_mode         &amp;lt;chr&amp;gt; &#34;static&#34;, &#34;static&#34;, &#34;static&#34;, &#34;api&#34;, &#34;static&#34;, &#34;api&#34;,…&#xA;#&amp;gt; $ content_category &amp;lt;chr&amp;gt; &#34;pin&#34;, &#34;pin&#34;, &#34;pin&#34;, &#34;api&#34;, &#34;site&#34;, &#34;api&#34;, &#34;&#34;, &#34;&#34;, &#34;s…&#xA;#&amp;gt; $ url              &amp;lt;chr&amp;gt; &#34;https://rsc.radixu.com/content/ca22a1f6-bab5-4fc0-8f…&#xA;#&amp;gt; $ owner_guid       &amp;lt;chr&amp;gt; &#34;1d6cc041-eb11-411e-810e-718508cde25b&#34;, &#34;0fc96747-ec9…&#xA;#&amp;gt; $ owner_username   &amp;lt;chr&amp;gt; &#34;brian&#34;, &#34;kelly.obriant&#34;, &#34;kelly.obriant&#34;, &#34;david&#34;, &#34;…&#xA;#&amp;gt; $ owner_first_name &amp;lt;chr&amp;gt; &#34;Brian&#34;, &#34;Kelly&#34;, &#34;Kelly&#34;, &#34;E. David&#34;, &#34;Aron&#34;, &#34;Toph&#34;…&#xA;#&amp;gt; $ owner_last_name  &amp;lt;chr&amp;gt; &#34;Smith&#34;, &#34;@RStudio&#34;, &#34;@RStudio&#34;, &#34;Aja&#34;, &#34;Atkins&#34;, &#34;Al…&#xA;#&amp;gt; $ tags             &amp;lt;list&amp;gt; [&amp;lt;data.frame[2 x 5]&amp;gt;], [&amp;lt;data.frame[1 x 5]&amp;gt;], [&amp;lt;data…&#xA;#&amp;gt; $ created_time     &amp;lt;dttm&amp;gt; 2020-04-03 17:54:27, 2020-12-05 02:37:30, 2020-12-05…&#xA;#&amp;gt; $ updated_time     &amp;lt;dttm&amp;gt; 2021-07-28 07:03:10, 2021-07-28 07:00:41, 2021-07-28…&#xA;&#xA;sample_content &amp;lt;- all_content %&amp;gt;%&#xA;  arrange(desc(updated_time)) %&amp;gt;%&#xA;  slice_head(n = 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;content()&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;content()&lt;/code&gt; returns a data frame with the following columns:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt; - Auto-incrementing identifier for each content item (legacy)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;guid&lt;/code&gt; - Unique identifier for each content item (preferred)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;app_mode&lt;/code&gt; - The type of the content item (examples: &lt;code&gt;shiny&lt;/code&gt;, &lt;code&gt;rmd-static&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;python-dash&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;content_category&lt;/code&gt; - For &lt;code&gt;static&lt;/code&gt; app modes, the specific category of content (examples: &lt;code&gt;site&lt;/code&gt;, &lt;code&gt;plot&lt;/code&gt;, &lt;code&gt;pin&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt; - The name of the content item as set at initial publishing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; - The user-provided title of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; - The user-provided description of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; - The URL to the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;owner_guid&lt;/code&gt; - Unique identifier of the owner of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;owner_username&lt;/code&gt; - Username of the owner of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;owner_first_name&lt;/code&gt; - First name of the owner of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;owner_last_name&lt;/code&gt; - Last name of the owner of the content item&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tags&lt;/code&gt; - A data frame of the tags associated with the content item, with the following columns: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;parent_id&lt;/code&gt;, &lt;code&gt;created_time&lt;/code&gt;, &lt;code&gt;updated_time&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;created_time&lt;/code&gt; - The timestamp at which the content item was created&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;updated_time&lt;/code&gt; - The timestamp at which the content item was last updated&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The data frame contains one row for each item visible to the requesting user. For users in an “administrator” role, that will be all content items.&lt;/p&gt; &#xA;&lt;h4&gt;Filtering Content&lt;/h4&gt; &#xA;&lt;p&gt;We provide helper functions to filter by both owners and tags.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;by_tags()&lt;/code&gt; - Filters the data frame to only include content that has been tagged with the specified tag name(s). You can pass a single tag name or a vector of tag names. &lt;code&gt;by_tag&lt;/code&gt; is provided as an alias for readability when using a single tag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;by_owners()&lt;/code&gt; - Filters the data frame to only include content with the specified owner(s) by username. You can pass a single username or a vector of usernames. &lt;code&gt;by_owner&lt;/code&gt; is provided as an alias for readability when using a single username.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;all_content %&amp;gt;% &#xA;  by_tag(&#34;Audit Reports&#34;)&#xA;#&amp;gt; # A tibble: 6 x 15&#xA;#&amp;gt;      id guid  name  title description app_mode content_category url   owner_guid&#xA;#&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;     &#xA;#&amp;gt; 1  4875 7cbd… Audi… Audi… Using the … rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; 2  4619 b191… tag-… Tag … List all t… rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; 3  4618 4348… acl-… Cont… Generate a… rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; 4  4597 6a8f… cont… Basi… List all c… rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; 5  4596 3f7a… vani… Vani… List all d… rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; 6  4595 5687… envi… R an… R and Pyth… rmd-sta… &#34;&#34;               http… 0fc96747-…&#xA;#&amp;gt; # … with 6 more variables: owner_username &amp;lt;chr&amp;gt;, owner_first_name &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   owner_last_name &amp;lt;chr&amp;gt;, tags &amp;lt;list&amp;gt;, created_time &amp;lt;dttm&amp;gt;,&#xA;#&amp;gt; #   updated_time &amp;lt;dttm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since &lt;code&gt;all_content&lt;/code&gt; is a &lt;code&gt;tibble()&lt;/code&gt;, you can also manipulate it with dplyr:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;all_content %&amp;gt;% &#xA;  filter(updated_time &amp;gt;= &#34;2021-01-01&#34;) %&amp;gt;% &#xA;  arrange(created_time)&#xA;#&amp;gt; # A tibble: 77 x 15&#xA;#&amp;gt;       id guid    name    title  description    app_mode content_category url    &#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;  &#xA;#&amp;gt;  1  1440 d7bf0e… cs_rep… cs_re… &#34;&#34;             rmd-sta… &#34;&#34;               https:…&#xA;#&amp;gt;  2  1890 be63ca… rmd     rmd4   &#34;This rmd is … rmd-sta… &#34;&#34;               https:…&#xA;#&amp;gt;  3  3724 b5e57e… team-d… Team-… &#34;&#34;             static   &#34;&#34;               https:…&#xA;#&amp;gt;  4  3979 ca22a1… github… &amp;lt;NA&amp;gt;   &#34;A table pin … static   &#34;pin&#34;            https:…&#xA;#&amp;gt;  5  4364 9ffbbd… shiny-… shiny… &#34;&#34;             shiny    &#34;&#34;               https:…&#xA;#&amp;gt;  6  4602 e21598… user-i… user-… &#34;Results pull… static   &#34;pin&#34;            https:…&#xA;#&amp;gt;  7  4603 e7c266… group-… group… &#34;Results pull… static   &#34;pin&#34;            https:…&#xA;#&amp;gt;  8  4630 f12eb8… top-5-… top-5… &#34;&#34;             python-… &#34;&#34;               https:…&#xA;#&amp;gt;  9  4631 68c9b2… top-5-… top-5… &#34;&#34;             python-… &#34;&#34;               https:…&#xA;#&amp;gt; 10  4650 ebdea3… reticu… retic… &#34;&#34;             static   &#34;&#34;               https:…&#xA;#&amp;gt; # … with 67 more rows, and 7 more variables: owner_guid &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   owner_username &amp;lt;chr&amp;gt;, owner_first_name &amp;lt;chr&amp;gt;, owner_last_name &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   tags &amp;lt;list&amp;gt;, created_time &amp;lt;dttm&amp;gt;, updated_time &amp;lt;dttm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Components&lt;/h3&gt; &#xA;&lt;p&gt;Once your content data are filtered, &lt;code&gt;connectwidgets&lt;/code&gt; provides components for displaying information about them. The title, description, and preview image can be set &lt;a href=&#34;https://docs.rstudio.com/connect/user/content-settings/#content-metadata&#34;&gt;from the RStudio Connect dashboard.&lt;/a&gt; For content deployed to Connect where no image has been supplied, a default image will be used.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; In many cases, you will only see default images until your content is deployed.&lt;/p&gt; &#xA;&lt;h4&gt;card&lt;/h4&gt; &#xA;&lt;p&gt;Use a card to highlight an individual piece of content:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/connectwidgets/main/man/figures/README-card-1.png&#34; alt=&#34;a sample card&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;grid&lt;/h4&gt; &#xA;&lt;p&gt;Display multiple content items via a grid:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/connectwidgets/main/man/figures/README-grid-1.png&#34; alt=&#34;a sample grid&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;table&lt;/h4&gt; &#xA;&lt;p&gt;Provide a more detailed view with a table:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/connectwidgets/main/man/figures/README-table-1.png&#34; alt=&#34;a sample table&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;search &amp;amp; filter&lt;/h4&gt; &#xA;&lt;p&gt;The search and filter components help viewers find the content they are most interested in. You must pass the same content data frame to &lt;code&gt;rsc_search()&lt;/code&gt;, &lt;code&gt;rsc_filter()&lt;/code&gt;, and &lt;code&gt;rsc_table()&lt;/code&gt; or &lt;code&gt;rsc_grid()&lt;/code&gt; in order for filter and search to work. You can also create your own &lt;code&gt;crosstalk::SharedData()&lt;/code&gt; object to pass to the components if you want more control over searching and filtering. Read more at &lt;code&gt;vignette(&#34;using-crosstalk&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/connectwidgets/main/man/figures/README-search-filter-2.png&#34; alt=&#34;search and filter widgets&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Theming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;connectwidgets&lt;/code&gt; components support styling in &lt;code&gt;rmarkdown::html_document&lt;/code&gt; via the &lt;a href=&#34;https://rstudio.github.io/bslib/&#34;&gt;&lt;code&gt;bslib&lt;/code&gt;&lt;/a&gt; package. You can supply a &lt;a href=&#34;https://bootswatch.com/4/&#34;&gt;Bootswatch theme&lt;/a&gt; in the yaml header, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;output:&#xA;  html_document:&#xA;    theme:&#xA;      bootswatch: minty&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or pass a custom theme consistent with your organization’s style:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml:&#34;&gt;---&#xA;output:&#xA;  html_document:&#xA;    theme:&#xA;      bg: &#34;#FFF&#34;&#xA;      fg: &#34;#22333B&#34; &#xA;      primary: &#34;#4F772D&#34;&#xA;      dark: &#34;#252525&#34;&#xA;      light: &#34;#DCE6D3&#34;&#xA;      base_font: &#34;Lato, sans-serif&#34;&#xA;      heading_font: &#34;Lato, sans-serif&#34;&#xA;      border-color: &#34;#E9F5DB&#34;&#xA;      gray-100: &#34;#F7FCF0&#34;&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you’re happy with the look of your page, Publish it to RStudio Connect. Read more at &lt;code&gt;vignette(&#34;publishing&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;A more customized example:&lt;/h2&gt; &#xA;&lt;p&gt;Putting it all together, the example API portal page below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;uses CSS to create a full-width image with inset text&lt;/li&gt; &#xA; &lt;li&gt;uses a Bootswatch theme&lt;/li&gt; &#xA; &lt;li&gt;overrides the &lt;code&gt;description&lt;/code&gt; text for a couple of cards&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If no APIs are deployed on your RStudio Connect server, try filtering for static documents or Shiny apps instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---&#xA;output:&#xA;  html_document:&#xA;    theme:&#xA;      bootswatch: lumen&#xA;---&#xA;&#xA;```{css, echo=FALSE}&#xA;.main-container {&#xA;    width: 100%;&#xA;    max-width: unset;&#xA;}&#xA;&#xA;.main {&#xA;    max-width: 940px;&#xA;    margin-left: auto;&#xA;    margin-right: auto;&#xA;}&#xA;&#xA;/* https://codepen.io/eversionsystems/pen/YOmqdj */&#xA;.jumbotron {&#xA;  color: white;&#xA;  background-image: url(&#34;https://source.unsplash.com/d30sszrW7Vw/1920x1080&#34;);&#xA;  background-position: center;&#xA;  background-repeat: no-repeat;&#xA;  background-size: cover;&#xA;  height: 50vh;&#xA;}&#xA;```&#xA;&#xA;```{r, include=FALSE}&#xA;library(connectwidgets)&#xA;library(dplyr)&#xA;library(htmltools)&#xA;&#xA;knitr::opts_chunk$set(&#xA;  comment = &#34;&#34;,&#xA;  echo = FALSE, warning = FALSE, message = FALSE&#xA;)&#xA;&#xA;rsc_content &amp;lt;-&#xA;  connect() %&amp;gt;%&#xA;  content()&#xA;&#xA;apis &amp;lt;- rsc_content %&amp;gt;%&#xA;  filter(app_mode %in% c(&#34;api&#34;, &#34;python-api&#34;))&#xA;```&#xA;&#xA;```{r}&#xA;div(&#xA;  class = &#34;jumbotron jumbotron-fluid&#34;,&#xA;  div(&#xA;    class = &#34;container&#34;,&#xA;    h1(&#34;Connect API Portal&#34;, class = &#34;display-4&#34;),&#xA;    p(&#34;Model APIs maintained by the data science team&#34;)&#xA;  )&#xA;)&#xA;```&#xA;&#xA;```{r}&#xA;div(&#xA;  class = &#34;main&#34;,&#xA;  h3(&#34;Featured APIs&#34;, class = &#34;text-center&#34;),&#xA;  {&#xA;    model_copy &amp;lt;- c(&#xA;      &#34;Our most important model: Distillery retro taiyaki fashion axe.&#xA;      Art party cray intelligentsia flexitarian.&#34;,&#xA;      &#34;Our second most important model: Pug af twee portland pitchfork brunch&#xA;      kogi gochujang organic migas shaman four dollar toast 90&#39;s slow-carb.&#34;&#xA;      )&#xA;&#xA;    apis %&amp;gt;%&#xA;      slice_head(n = 2) %&amp;gt;%&#xA;      mutate(&#xA;      description = model_copy&#xA;      ) %&amp;gt;%&#xA;      rsc_card()&#xA;  },&#xA;  h3(&#34;All APIs&#34;, class = &#34;text-center&#34;),&#xA;  p(&#34;that thing George Box said one time. You know what thing.&#34;),&#xA;  {&#xA;    tagList(&#xA;      rsc_cols(rsc_search(apis), rsc_filter(apis)),&#xA;      rsc_grid(apis)&#xA;    )&#xA;  }&#xA;)&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>rmaia/pavo</title>
    <updated>2022-08-07T02:19:26Z</updated>
    <id>tag:github.com,2022-08-07:/rmaia/pavo</id>
    <link href="https://github.com/rmaia/pavo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tools for the analysis of color data in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;pavo&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=pavo/&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version-ago/pavo&#34; alt=&#34;cran version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=pavo/&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/pavo&#34; alt=&#34;cran downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rmaia/pavo/actions&#34;&gt;&lt;img src=&#34;https://github.com/rmaia/pavo/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cranchecks.info/pkgs/pavo&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/pavo&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;An &lt;code&gt;R&lt;/code&gt; package for the spectral and spatial analysis of color patterns&lt;/h2&gt; &#xA;&lt;h3&gt;Currently maintained by &lt;a href=&#34;https://github.com/thomased&#34;&gt;Thomas White&lt;/a&gt; and &lt;a href=&#34;https://github.com/bisaloo&#34;&gt;Hugo Gruson&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pavo&lt;/code&gt; is an R package developed with the goal of establishing a flexible and integrated workflow for working with spectral and spatial colour data. It includes functions that take advantage of new data classes to work seamlessly from importing raw spectra and images, to visualisation and analysis. It provides flexible ways to input spectral data from a variety of equipment manufacturers, process these data, extract variables, and produce publication-quality figures.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pavo&lt;/code&gt; was written with the following workflow in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Organise&lt;/strong&gt; data by importing and processing spectra and images (e.g., to remove noise, negative values, smooth curves, etc.).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Analyse&lt;/strong&gt; the resulting files, using spectral analyses of shape (hue, saturation, brightness), visual models based on perceptual data, and/or spatial adjacency and boundary strength analyses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visualise&lt;/strong&gt; the output, with multiple options provided for exploration, presentation, and analysis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Need more information, or help with the package?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://book.colrverse.com&#34;&gt;package documentation&lt;/a&gt; for detailed examples and discussion.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;http://pavo.colrverse.com/news/index.html&#34;&gt;latest news&lt;/a&gt; for changes and updates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need help or advice and can&#39;t find what you&#39;re looking for?&lt;/strong&gt; Head over to the &lt;a href=&#34;https://github.com/colrverse/colRverse/discussions&#34;&gt;colRverse discussion board&lt;/a&gt; and feel free to post a message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If all else fails&lt;/strong&gt; (or you don&#39;t have a GitHub account), &lt;a href=&#34;mailto:thomas.white@sydney.edu.au&#34;&gt;email Tom&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citing pavo&lt;/h2&gt; &#xA;&lt;p&gt;The manuscript describing the current iteration of the package has been published and is free to access:&lt;/p&gt; &#xA;&lt;p&gt;Maia R., Gruson H., Endler J.A., and White T.E. 2019 &lt;a href=&#34;https://doi.org/10.1111/2041-210X.13174&#34;&gt;pavo 2: New tools for the spectral and spatial analysis of colour in R&lt;/a&gt;. &lt;em&gt;Methods in Ecology and Evolution&lt;/em&gt;, 10(7):1097‑1107.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;This is the development page for &lt;code&gt;pavo&lt;/code&gt;. The stable release is available from CRAN. Simply use &lt;code&gt;install.packages(&#34;pavo&#34;)&lt;/code&gt; to install.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install the bleeding edge version of &lt;code&gt;pavo&lt;/code&gt;, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use the &lt;a href=&#34;https://github.com/r-lib/remotes&#34;&gt;&lt;code&gt;remotes&lt;/code&gt;&lt;/a&gt; package:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;rmaia/pavo&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;download files from GitHub and install using &lt;code&gt;$R CMD INSTALL&lt;/code&gt; or, from within R:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(path, type = &#34;source&#34;, repos = NULL)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>