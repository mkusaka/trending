<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-09T01:39:21Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KlugerLab/GeneTrajectory</title>
    <updated>2024-04-09T01:39:21Z</updated>
    <id>tag:github.com,2024-04-09:/KlugerLab/GeneTrajectory</id>
    <link href="https://github.com/KlugerLab/GeneTrajectory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R implementation of GeneTrajectory&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gene Trajectory Inference&lt;/h1&gt; &#xA;&lt;p&gt;GeneTrajectory is a method for inferring gene trajectories in scRNA-seq data, which facilitates understanding of gene dynamics underlying biological processes. The major workflow of GeneTrajectory comprises the following four main steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1. Build a cell-cell kNN graph in which each cell is connected to its k-nearest neighbors. Find the shortest path connecting each pair of cells in the graph and denote its length as the graph distance between cells.&lt;/li&gt; &#xA; &lt;li&gt;Step 2. Compute pairwise graph-based Wasserstein distance between gene distributions, which quantifies the minimum cost of transporting the distribution of a given gene into the distribution of another gene in the cell graph.&lt;/li&gt; &#xA; &lt;li&gt;Step 3. Generate a low-dimensional representation of genes (using Diffusion Map by default) based on the gene-gene Wasserstein distance matrix. Identify gene trajectories in a sequential manner.&lt;/li&gt; &#xA; &lt;li&gt;Step 4. Determine the order of genes along each gene trajectory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KlugerLab/GeneTrajectory/main/vignettes/GT_workflow.png&#34; alt=&#34;Workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;GeneTrajectory can be installed in R as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;KlugerLab/GeneTrajectory&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Python implementation is available at &lt;a href=&#34;https://github.com/KlugerLab/GeneTrajectory-python&#34;&gt;https://github.com/KlugerLab/GeneTrajectory-python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example tutorial&lt;/h2&gt; &#xA;&lt;p&gt;Please check GeneTrajectory &lt;a href=&#34;https://klugerlab.github.io/GeneTrajectory/articles/GeneTrajectory.html&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;References of GeneTrajectory functions can be found &lt;a href=&#34;https://klugerlab.github.io/GeneTrajectory/reference/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Data used in the tutorial can be downloaded from &lt;a href=&#34;https://figshare.com/articles/dataset/Processed_Seurat_objects_for_GeneTrajectory_inference_Gene_Trajectory_Inference_for_Single-cell_Data_by_Optimal_Transport_Metrics_/25243225&#34;&gt;Figshare&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install &lt;a href=&#34;https://github.com/KlugerLab/GeneTrajectory-python/tree/main&#34;&gt;GeneTrajectory-python&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way is to create a virtualenv for gene_trajectory using &lt;a href=&#34;https://rstudio.github.io/reticulate/index.html&#34;&gt;reticulate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!reticulate::virtualenv_exists(&#39;gene_trajectory&#39;)){&#xA;  reticulate::virtualenv_create(&#39;gene_trajectory&#39;, packages=c(&#39;gene_trajectory&#39;))&#xA;}&#xA;reticulate::use_virtualenv(&#39;gene_trajectory&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or to add to an existing virtualenv using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;reticulate::py_install(&#34;gene-trajectory&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In general (especially in a conda environment) it can be installed with pip as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;system(sprintf(&#39;%s -m pip install gene-trajectory&#39;, reticulate::py_exe()))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The development version can be installed as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;system(sprintf(&#39;%s -m pip install git+https://github.com/Klugerlab/GeneTrajectory-python.git&#39;, reticulate::py_exe()))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This works both on virtualenv and conda.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>markmo/ProjectTemplateTest</title>
    <updated>2024-04-09T01:39:21Z</updated>
    <id>tag:github.com,2024-04-09:/markmo/ProjectTemplateTest</id>
    <link href="https://github.com/markmo/ProjectTemplateTest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Welcome to ProjectTemplate!&lt;/p&gt; &#xA;&lt;p&gt;This file introduces you to ProjectTemplate, but you should eventually replace the contents of this file with an introduction to your project. People who work with your data in the future will thank you for it, including your future self.&lt;/p&gt; &#xA;&lt;p&gt;ProjectTemplate is an R package that helps you organize your statistical analysis projects. Since you&#39;re reading this file, we&#39;ll assume that you&#39;ve already called &lt;code&gt;create.project()&lt;/code&gt; to set up this project and all of its contents.&lt;/p&gt; &#xA;&lt;p&gt;To load your new project, you&#39;ll first need to &lt;code&gt;setwd()&lt;/code&gt; into the directory where this README file is located. Then you need to run the following two lines of R code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(&#39;ProjectTemplate&#39;)&#xA;load.project()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you enter the second line of code, you&#39;ll see a series of automated messages as ProjectTemplate goes about doing its work. This work involves:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading in the global configuration file contained in &lt;code&gt;config&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Loading any R packages you listed in he configuration file.&lt;/li&gt; &#xA; &lt;li&gt;Reading in any datasets stored in &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;cache&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Preprocessing your data using the files in the &lt;code&gt;munge&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once that&#39;s done, you can execute any code you&#39;d like. For every analysis you create, we&#39;d recommend putting a separate file in the &lt;code&gt;src&lt;/code&gt; directory. If the files start with the two lines mentioned above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(&#39;ProjectTemplate&#39;)&#xA;load.project()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll have access to all of your data, already fully preprocessed, and all of the libraries you want to use.&lt;/p&gt; &#xA;&lt;p&gt;For more details about ProjectTemplate, see &lt;a href=&#34;http://projecttemplate.net&#34;&gt;http://projecttemplate.net&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>