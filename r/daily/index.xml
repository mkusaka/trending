<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-28T01:34:03Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ljchueca/BeeWiseCode</title>
    <updated>2024-03-28T01:34:03Z</updated>
    <id>tag:github.com,2024-03-28:/ljchueca/BeeWiseCode</id>
    <link href="https://github.com/ljchueca/BeeWiseCode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;trainning repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BeeWiseCode&lt;/h1&gt; &#xA;&lt;p&gt;trainning repo&lt;/p&gt; &#xA;&lt;h1&gt;My first repo&lt;/h1&gt; &#xA;&lt;p&gt;odee&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jongheepark/poll-MBC</title>
    <updated>2024-03-28T01:34:03Z</updated>
    <id>tag:github.com,2024-03-28:/jongheepark/poll-MBC</id>
    <link href="https://github.com/jongheepark/poll-MBC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MBC 20대 대선 여론조사를 조사하다&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Poll-MBC&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jongheepark/poll-MBC/main/poll2.png&#34; alt=&#34;20대 대선 주자별 선호도&#34;&gt; 이 깃허브는 MBC 여론조사를 조사하다(&lt;a href=&#34;http://poll-mbc.co.kr/&#34;&gt;http://poll-mbc.co.kr/&lt;/a&gt;) 에서 사용된 코드를 설명하고 공개하는 것을 목적으로 합니다. 이 코드를 돌리기 위해서는 jags(Just Another Gibbs Sampler, &lt;a href=&#34;https://mcmc-jags.sourceforge.io&#34;&gt;https://mcmc-jags.sourceforge.io&lt;/a&gt;) 가 설치되어 있어야 합니다.&lt;/p&gt; &#xA;&lt;h2&gt;Load packages&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(rjags)&#xA;#&amp;gt; Loading required package: rjags&#xA;#&amp;gt; Loading required package: coda&#xA;#&amp;gt; Linked to JAGS 4.3.0&#xA;#&amp;gt; Loaded modules: basemod,bugs&#xA;require(rlist)&#xA;#&amp;gt; Loading required package: rlist&#xA;require(jsonlite)&#xA;#&amp;gt; Loading required package: jsonlite&#xA;require(haven) ## for as_factor&#xA;#&amp;gt; Loading required package: haven&#xA;require(forcats) ## for fct_reorder&#xA;#&amp;gt; Loading required package: forcats&#xA;require(tidyquant)&#xA;#&amp;gt; Loading required package: tidyquant&#xA;#&amp;gt; Loading required package: lubridate&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;lubridate&#39;&#xA;#&amp;gt; The following objects are masked from &#39;package:base&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     date, intersect, setdiff, union&#xA;#&amp;gt; Loading required package: PerformanceAnalytics&#xA;#&amp;gt; Loading required package: xts&#xA;#&amp;gt; Loading required package: zoo&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;zoo&#39;&#xA;#&amp;gt; The following objects are masked from &#39;package:base&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     as.Date, as.Date.numeric&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;PerformanceAnalytics&#39;&#xA;#&amp;gt; The following object is masked from &#39;package:graphics&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     legend&#xA;#&amp;gt; Loading required package: quantmod&#xA;#&amp;gt; Loading required package: TTR&#xA;#&amp;gt; Registered S3 method overwritten by &#39;quantmod&#39;:&#xA;#&amp;gt;   method            from&#xA;#&amp;gt;   as.zoo.data.frame zoo&#xA;#&amp;gt; Version 0.4-0 included new data defaults. See ?getSymbols.&#xA;#&amp;gt; ══ Need to Learn tidyquant? ════════════════════════════════════════════════════&#xA;#&amp;gt; Business Science offers a 1-hour course - Learning Lab #9: Performance Analysis &amp;amp; Portfolio Optimization with tidyquant!&#xA;#&amp;gt; &amp;lt;/&amp;gt; Learn more at: https://university.business-science.io/p/learning-labs-pro &amp;lt;/&amp;gt;&#xA;require(ggplot2)&#xA;require(dplyr)&#xA;#&amp;gt; Loading required package: dplyr&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;dplyr&#39;&#xA;#&amp;gt; The following objects are masked from &#39;package:xts&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     first, last&#xA;#&amp;gt; The following objects are masked from &#39;package:stats&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     filter, lag&#xA;#&amp;gt; The following objects are masked from &#39;package:base&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     intersect, setdiff, setequal, union&#xA;require(ggthemes)&#xA;#&amp;gt; Loading required package: ggthemes&#xA;require(readxl)&#xA;#&amp;gt; Loading required package: readxl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Load data&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_excel(&#34;president.xlsx&#34;)&#xA;#&amp;gt; New names:&#xA;#&amp;gt; * `` -&amp;gt; ...1&#xA;df&#xA;#&amp;gt; # A tibble: 4,076 × 67&#xA;#&amp;gt;    ...1  index day                 house house_new    GG    BH  Soso Great  Good&#xA;#&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dttm&amp;gt;              &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt;  1 1     3765  2017-05-15 00:00:00 리얼… 리얼미터   NA    NA    NA    53.4  28.9&#xA;#&amp;gt;  2 2     3765  2017-05-16 00:00:00 리얼… 리얼미터   NA    NA    NA    53.4  28.9&#xA;#&amp;gt;  3 3     3765  2017-05-17 00:00:00 리얼… 리얼미터   NA    NA    NA    53.4  28.9&#xA;#&amp;gt;  4 4     3765  2017-05-18 00:00:00 리얼… 리얼미터   NA    NA    NA    53.4  28.9&#xA;#&amp;gt;  5 5     3765  2017-05-19 00:00:00 리얼… 리얼미터   NA    NA    NA    53.4  28.9&#xA;#&amp;gt;  6 6     3768  2017-05-20 00:00:00 리서… 리서치뷰   NA    NA    NA    67.4  19.6&#xA;#&amp;gt;  7 7     3768  2017-05-21 00:00:00 리서… 리서치뷰   NA    NA    NA    67.4  19.6&#xA;#&amp;gt;  8 8     3768  2017-05-22 00:00:00 리서… 리서치뷰   NA    NA    NA    67.4  19.6&#xA;#&amp;gt;  9 9     3770  2017-05-20 00:00:00 조원… 조원씨앤…  81.3   8.8   7.5  NA    NA  &#xA;#&amp;gt; 10 10    3770  2017-05-21 00:00:00 조원… 조원씨앤…  81.3   8.8   7.5  NA    NA  &#xA;#&amp;gt; # … with 4,066 more rows, and 57 more variables: Bad &amp;lt;dbl&amp;gt;, Horrible &amp;lt;dbl&amp;gt;,&#xA;#&amp;gt; #   DK &amp;lt;dbl&amp;gt;, total &amp;lt;dbl&amp;gt;, election &amp;lt;chr&amp;gt;, region1 &amp;lt;chr&amp;gt;, election_name &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   client &amp;lt;chr&amp;gt;, house.detail &amp;lt;chr&amp;gt;, region2 &amp;lt;chr&amp;gt;, date &amp;lt;dttm&amp;gt;, hours &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   subject &amp;lt;chr&amp;gt;, weight_method &amp;lt;chr&amp;gt;, weight_application &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   a_weight_method &amp;lt;chr&amp;gt;, a_weight_application &amp;lt;chr&amp;gt;, intertval &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   media_type &amp;lt;chr&amp;gt;, media &amp;lt;chr&amp;gt;, release_date &amp;lt;chr&amp;gt;, rejection &amp;lt;dbl&amp;gt;,&#xA;#&amp;gt; #   response &amp;lt;dbl&amp;gt;, reach &amp;lt;dbl&amp;gt;, whole_reach_rate &amp;lt;lgl&amp;gt;, …&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;type of approval data&lt;/h2&gt; &#xA;&lt;p&gt;여기서 우리는 순긍정평가(candidate = 4)만 분석할 것이다.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;candidate.list &amp;lt;- c(&#34;y1&#34;, &#34;y2&#34;, &#34;y3&#34;, &#34;y4&#34;)&#xA;n.candidate &amp;lt;- length(candidate.list)&#xA;candidate.names &amp;lt;- c(&#34;good&#34;, &#34;bad&#34;, &#34;dk&#34;, &#34;net_good&#34;)&#xA;candidate.korea &amp;lt;- c(&#34;긍정평가&#34;, &#34;부정평가&#34;, &#34;모름&#34;, &#34;순긍정평가&#34;)&#xA;candidate &amp;lt;- 4&#xA;tune &amp;lt;- 1 ## tuning parameter &#xA;sigma.tune &amp;lt;- 1 ## tuning parameter for sigma&#xA;sigma.low = 0&#xA;sigma.high = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;model fitting input check&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;model.name &amp;lt;- paste0(&#34;president_approve_&#34;, candidate.korea[candidate])&#xA;subdata &amp;lt;- df[!is.na(unlist(df[, candidate.list[candidate]])), ]&#xA;&#xA;## house rename&#xA;subdata$house.new &amp;lt;- subdata$house_new&#xA;subdata$house.new &amp;lt;- sapply(subdata$house.new,&#xA;                                function(x){as.factor(toString(x))})&#xA;n.house &amp;lt;- length(unique(subdata$house.new))&#xA;house.name &amp;lt;- unique(subdata$house.new)&#xA;house.id &amp;lt;- as.numeric(subdata$house.new)&#xA;house.freq &amp;lt;- table(subdata$house.new) %&amp;gt;% &#xA;        as.data.frame() %&amp;gt;% &#xA;        arrange(house.name)&#xA;        &#xA;## report &#xA;cat(&#34;\t&#34;, model.name, &#34; House number is &#34;, n.house, &#34;\n&#34;)&#xA;#&amp;gt;   president_approve_순긍정평가  House number is  44&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;조사기관 빈도 체크&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;options(repr.plot.width=8, repr.plot.height=3)&#xA;subdata %&amp;gt;% group_by(house.new) %&amp;gt;% summarise(n = n()) %&amp;gt;% &#xA;  mutate(house.new = fct_reorder(house.new, desc(n))) %&amp;gt;%&#xA;  ggplot(aes(x = house.new , y = n, main=&#34;조사기관&#34;)) +&#xA;         geom_bar(stat = &#34;identity&#34;, fill=&#34;#f68060&#34;, alpha=.8, width=.8) +&#xA;         coord_flip() + &#xA;  scale_y_continuous(name=&#34;조사횟수&#34;) +&#xA;  scale_x_discrete(name=&#34;조사기관&#34;) +&#xA;  theme(axis.text.x = &#xA;        element_text(face=&#34;bold&#34;, color=&#34;#008000&#34;,&#xA;                   size=8, angle=0),&#xA;        axis.text.y = element_text(face=&#34;bold&#34;, color=&#34;#008000&#34;,&#xA;                   size=8, angle=0)) + &#xA;  labs(title = &#34;대통령 국정지지도 조사기관별 조사횟수&#34;, &#xA;       caption = &#34;Source: 서울대학교 국제정치데이터센터&#34;)+&#xA;  theme_jhp()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jongheepark/poll-MBC/main/man/figures/README-unnamed-chunk-5-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;model fitting (5 chains and 1000 mcmc runs)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;subdata$y &amp;lt;- as.numeric(unlist(subdata[, candidate.list[candidate]]))&#xA;subdata$date &amp;lt;- as.Date(as.character(subdata$start.date))&#xA;Date &amp;lt;- sort(unique(subdata$date))&#xA;numeric.date &amp;lt;- as.numeric(as.factor(as.numeric(subdata$date) -&#xA;                                     sort(as.numeric(subdata$date))[1] + 1))&#xA;n.period &amp;lt;- length(Date)&#xA;N.obs &amp;lt;- length(subdata$y)&#xA;df.jags &amp;lt;- data.frame(y = subdata$y, date = subdata$date,&#xA;                      size = subdata$response)&#xA;df.jags$Date &amp;lt;- numeric.date&#xA;df.jags &amp;lt;- df.jags[order(df.jags$Date),]&#xA;df.jags$sd &amp;lt;- sd(df.jags$y)&#xA;df.jags$var &amp;lt;- var(df.jags$y)&#xA;df.jags$lo &amp;lt;- df.jags$y - 1.96*df.jags$sd[1]&#xA;df.jags$up &amp;lt;- df.jags$y + 1.96*df.jags$sd[1]&#xA;mean.y &amp;lt;- sapply(1:n.period, function(i){mean(df.jags$y[df.jags$Date == i])})&#xA;survey.count &amp;lt;- sapply(1:n.period, function(i){length(df.jags$y[df.jags$Date == i])})&#xA;var.y.raw &amp;lt;- (df.jags$y^2)/df.jags$size&#xA;var.y &amp;lt;- sapply(1:n.period, function(j){mean(var.y.raw[df.jags$Date == j], na.rm=TRUE)})&#xA;var.y &amp;lt;-  ifelse(is.na(var.y)|var.y==0, mean(var.y, na.rm=TRUE), var.y)&#xA;sigma.upper &amp;lt;- sd(df.jags$y)/sigma.tune&#xA;&#xA;a01 &amp;lt;- mean.y[1] - tune*1.96*df.jags$sd[1]&#xA;a02 &amp;lt;- min(100, mean.y[1] + tune*1.96*df.jags$sd[1])&#xA;&#xA;jags.data &amp;lt;- list(y=df.jags$y, prec=1/var.y, numeric.date=numeric.date,&#xA;            house.id=house.id, N.obs = N.obs, n.period=n.period, n.house=n.house,&#xA;            sigma.low = sigma.low, sigma.high = sigma.high, a01 = a01, a02 = a02,&#xA;            alpha= rep(NA, n.period), new.alpha = NA)&#xA;cat(&#34;\t&#34;, model.name, &#34; model is ready to run!\n&#34;)&#xA;#&amp;gt;   president_approve_순긍정평가  model is ready to run!&#xA;model &amp;lt;- jags.model(&#34;mbc_house.bug&#34;,&#xA;                  data = jags.data, n.chains = 5, n.adapt=1000)&#xA;#&amp;gt; Compiling model graph&#xA;#&amp;gt;    Resolving undeclared variables&#xA;#&amp;gt;    Allocating nodes&#xA;#&amp;gt; Graph information:&#xA;#&amp;gt;    Observed stochastic nodes: 4072&#xA;#&amp;gt;    Unobserved stochastic nodes: 915&#xA;#&amp;gt;    Total graph size: 15385&#xA;#&amp;gt; &#xA;#&amp;gt; Initializing model&#xA;output1 &amp;lt;- coda.samples(model=model,&#xA;                      variable.names=c(&#34;alpha&#34;,&#34;house&#34;,&#34;sigma&#34;, &#34;new.alpha&#34;),&#xA;                      n.iter=1000, thin=5)&#xA;output &amp;lt;- list.rbind(output1)&#xA;coef.names &amp;lt;- colnames(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;See the results&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    cat(model.name, &#34; visualization and save !\n&#34;)&#xA;#&amp;gt; president_approve_순긍정평가  visualization and save !&#xA;    &#xA;    alphaFirst &amp;lt;- output[,grep(&#34;alpha\\[&#34;, coef.names)]&#xA;    new.alphaFirst  &amp;lt;- output[,grep(&#34;new.alpha&#34;, coef.names)]&#xA;    &#xA;    sigmaFirst &amp;lt;- output[,grep(&#34;sigma&#34;, coef.names)]&#xA;    houseFirst &amp;lt;- output[,grep(&#34;house&#34;, coef.names)]&#xA;    alpha.bar &amp;lt;- apply(alphaFirst,2,mean)&#xA;    alpha.ci &amp;lt;- apply(alphaFirst, 2, quantile,c(.025,.975))&#xA;    new.alphaFirst.bar &amp;lt;- mean(new.alphaFirst)&#xA;    new.alphaFirst.ci &amp;lt;- quantile(new.alphaFirst, probs=c(.025,.975))&#xA;    houseEffects &amp;lt;- apply(houseFirst,2,mean)&#xA;&#xA;    df.gg &amp;lt;- data.frame(date = Date,&#xA;                        mean = ifelse(alpha.bar&amp;lt;0, 0, alpha.bar),&#xA;                        lower = ifelse(alpha.ci[1,]&amp;lt;0, 0, alpha.ci[1,]),&#xA;                        upper = ifelse(alpha.ci[2,]&amp;lt;0, 0, alpha.ci[2,]))&#xA;    df_obs &amp;lt;- data.frame(date = Date, y = alpha.bar)&#xA;    df_obs_low &amp;lt;- data.frame(date = Date, y = alpha.ci[1,])&#xA;    df_obs_high &amp;lt;- data.frame(date = Date, y = alpha.ci[2,])&#xA;    df_month &amp;lt;-  aggregate(df_obs$y, list(format(df_obs$date, &#34;%Y-%m-01&#34;)), mean)&#xA;    colnames(df_month) &amp;lt;- c(&#34;date&#34;, &#34;mean&#34;)&#xA;    df_month$date &amp;lt;- as.Date(df_month$date)&#xA;    df_month$low &amp;lt;- aggregate(df_obs_low$y, list(format(df_obs$date, &#34;%Y-%m-01&#34;)), mean)$x&#xA;    df_month$upper &amp;lt;- aggregate(df_obs_high$y, list(format(df_obs$date, &#34;%Y-%m-01&#34;)), mean)$x&#xA;&#xA;    good.news.prob &amp;lt;- mean(new.alphaFirst &amp;gt; 50)&#xA;    good.news.ci &amp;lt;- quantile(new.alphaFirst , probs=c(0.05, 0.95))&#xA;&#xA;    G &amp;lt;- 100&#xA;    df.pred &amp;lt;- data.frame(date = as.Date(rep(df.gg$date[nrow(df.gg)]+1, 100)),&#xA;                          mean = new.alphaFirst[sample(1:nrow(alphaFirst), size=100)])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;trend line&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg.df &amp;lt;- df.gg %&amp;gt;% ggplot(aes(x = date, y = mean)) +&#xA;        geom_ribbon(data = df_month, aes(ymin=low,ymax=upper),alpha=0.3) +&#xA;        geom_point(data = df_month, &#xA;                   col = &#34;#b2182b&#34;, alpha=0.7, size = 4) +&#xA;        ## geom_point(alpha = .65, size = 2) +&#xA;        geom_point(data =df.pred , &#xA;                   col = &#34;black&#34;, alpha=0.2, size = 4) +&#xA;        geom_line(data = df_month, &#xA;                  col = &#34;#b2182b&#34;, alpha=0.2, size = 1) + &#xA;        theme(panel.grid.minor = element_blank(), legend.position=&#34;bottom&#34;, &#xA;              plot.subtitle = element_text(size = 20)) + &#xA;        labs(title= paste0(&#34;대통령 &#34;, candidate.korea[candidate]),&#xA;             caption = &#34;Source: 서울대학교 국제정치데이터센터&#34;,&#xA;             subtitle = paste0(&#34;(예측 평균: &#34;, &#xA;                               round(mean(new.alphaFirst), 2), &#34;, 90% 확률구간: &#34;,&#xA;                               round(good.news.ci, 2)[1], &#34;, &#34;, &#xA;                               round(good.news.ci, 2)[2], &#34;)&#34;),&#xA;             y = &#34;지지율&#34;, x=&#34;조사시점&#34;) + theme_jhp()&#xA;gg.df&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jongheepark/poll-MBC/main/man/figures/README-unnamed-chunk-8-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;house effects plot&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;   houseEffects &amp;lt;- apply(houseFirst,2,mean)&#xA;    houseci &amp;lt;- apply(houseFirst,2,quantile,c(.025,.975))&#xA;    lower= round(houseci[1,], 2)&#xA;    upper= round(houseci[2,], 2)&#xA;    names(houseEffects) &amp;lt;- house.name&#xA;    houseName &amp;lt;- house.name&#xA;    names(houseEffects) &amp;lt;- sort(houseName)&#xA;    df.house &amp;lt;- data.frame(name = sub(&#34;\\..*&#34;, &#34;&#34;, house.name),&#xA;                           bias = round(houseEffects, 2),&#xA;                           lower= round(houseci[1,], 2),&#xA;                           upper= round(houseci[2,], 2),&#xA;                           sign = ifelse(houseEffects&amp;gt;0&amp;amp;lower&amp;gt;0&amp;amp;upper&amp;gt;0,&#xA;                                         &#34;positive&#34;,&#xA;                                  ifelse(houseEffects&amp;lt;0&amp;amp;lower&amp;lt;0&amp;amp;upper&amp;lt;0, &#34;negative&#34;, &#34;mixed&#34;)))&#xA;    &#xA;    df.house &amp;lt;- df.house %&amp;gt;% arrange(bias) &#xA;    g1 &amp;lt;- df.house %&amp;gt;% ## filter(sign == &#34;positive&#34;)%&amp;gt;%&#xA;        mutate(function_name = as_factor(name) %&amp;gt;% fct_reorder(bias)) %&amp;gt;%&#xA;        arrange(desc(function_name)) %&amp;gt;%&#xA;        ggplot(aes(x = bias, y = function_name, color = function_name)) +&#xA;        geom_segment(aes(xend = 0, yend = function_name), size = 2) +&#xA;        geom_point(size = 4) +&#xA;        geom_label(aes(label = round(bias, 2)), &#xA;                   hjust = &#34;inward&#34;, size = 3.5) +&#xA;        expand_limits(x = 0) +&#xA;        labs(&#xA;            title = paste0(&#34;개별 조사기관의 조사결과가 평균으로부터 많이 다른가?&#34;),&#xA;            subtitle = paste0(candidate.korea[candidate], &#34;:&#34;,&#xA;                              range(df$start.date)[1], &#34;~&#34;, range(df$start.date)[2]),&#xA;            caption = &#34;Source: 서울대학교 국제정치데이터센터&#34;,&#xA;            y = &#34;지지율&#34;, x=&#34;조사기관 고정값&#34;) + &#xA;        scale_color_tq() +&#xA;        theme_jhp() +&#xA;        theme(legend.position = &#34;none&#34;) &#xA;g1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jongheepark/poll-MBC/main/man/figures/README-unnamed-chunk-9-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jongheepark/poll-MBC/main/poll1.png&#34; alt=&#34;조사기관 정보 요약 예시&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>