<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-20T01:41:14Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kozaka93/2023Z-DataVisualizationTechniques</title>
    <updated>2023-10-20T01:41:14Z</updated>
    <id>tag:github.com,2023-10-20:/kozaka93/2023Z-DataVisualizationTechniques</id>
    <link href="https://github.com/kozaka93/2023Z-DataVisualizationTechniques" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“Š Data Visualization Techniques course for DS studies in Winter 2023/24&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Data Visualization Techniques&lt;/h1&gt; &#xA;&lt;p&gt;Winter Semester 2023/24 &lt;a href=&#34;https://github.com/kozaka93&#34;&gt;@kozaka93&lt;/a&gt; &lt;a href=&#34;https://github.com/krzyzinskim&#34;&gt;@krzyzinskim&lt;/a&gt; &lt;a href=&#34;https://github.com/mikolajsp&#34;&gt;@mikolajsp&lt;/a&gt; &lt;a href=&#34;https://github.com/woznicak&#34;&gt;@woznicak&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Previous: &lt;a href=&#34;https://github.com/MI2-Education/2023Z-DataVisualizationTechniques&#34;&gt;Winter Semester 2022/23&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Schedule&lt;/h2&gt; &#xA;&lt;div class=&#34;tg-wrap&#34;&gt;&#xA; &lt;table style=&#34;undefined;table-layout: fixed; width: 865px&#34;&gt; &#xA;  &lt;colgroup&gt; &#xA;   &lt;col style=&#34;width: 25px&#34;&gt; &#xA;   &lt;col style=&#34;width: 80px&#34;&gt; &#xA;   &lt;col style=&#34;width: 250px&#34;&gt; &#xA;   &lt;col style=&#34;width: 250px&#34;&gt; &#xA;   &lt;col style=&#34;width: 160px&#34;&gt; &#xA;   &lt;col style=&#34;width: 100px&#34;&gt; &#xA;  &lt;/colgroup&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;b&gt;#&lt;/b&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;b&gt;Month-Day&lt;/b&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;b&gt;Lecture&lt;/b&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;b&gt;Lab&lt;/b&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;b&gt;Project&lt;/b&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;b&gt;Points&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;1&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;10-05&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/raw/main/lectures/L1-course-introduction.pdf&#34;&gt;Course introduction, &lt;/a&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/raw/main/lectures/L1-Intro.pdf&#34;&gt;data types, visualization tools&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/tree/main/labs/lab1&#34;&gt;R: review: proton, GitHub&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/tree/main/projects/project1&#34;&gt;Introducing P1&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;2&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;10-12&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/raw/main/lectures/L2-gramatyka.pdf&#34;&gt;The Grammar of Graphics&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/tree/main/labs/lab2&#34;&gt;R: dplyr, tidyr, forcats&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Group work&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P1 (1p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;3&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;10-19&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/raw/main/lectures/L3-kolory-skale.pdf&#34;&gt;Colors and scales&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/tree/main/labs/lab3&#34;&gt;R: ggplot2 - introduction&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;a href=&#34;https://github.com/kozaka93/2023Z-DataVisualizationTechniques/issues/69&#34;&gt;HW1 &lt;/a&gt;(6p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;4&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11-02&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Don&#39;t do this at home&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: ggplot2 - plot modification, theme, facets&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Data exploration &amp;amp; First visualizations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P1 (2p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;5&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11-09&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Maps - is it so complicated?&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: ggplot2 - advanced, extensions: patchwork, ggrepel, ggpubr&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Advanced visualizations &amp;amp; Prototype&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P1 (2p)&lt;br&gt;HW2 (6p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;6&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11-16&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Hans Rosling: The best stats you&#39;ve ever seen, Let my dataset change your mindset &lt;br&gt;Alberto Cairo: How Charts Lie&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: maps&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;7&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11-23&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Presentation of P1&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: plotly - interactive visualization&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Presentation of P1&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;HW3 (6p)&lt;br&gt;P1 (20p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;8&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11-30&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Dashboard&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: Shiny - introduction&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Introducing P2&lt;br&gt;Group work&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P2 (1p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;9&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;12-07&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;User Friendly - rules of design&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: Shiny - exercise&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;HW4 (6p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;10&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;12-14&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;History of Statistical Graphics&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;R: Shiny - advanced&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Data analysis&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P2 (2p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;11&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;12-21&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;The International Business Communication Standards&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Python: pandas, numpy, pandas.plot&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;12&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;01-04&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Other Data Visualization Tools&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Python: matplotlib, seaborn&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;HW5 (6p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;13&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;01-11&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;TBA&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Python: graphs + plotly&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Prototype&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P2 (2p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;14&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;01-18&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Test&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Python: matplotlib, seaborn - advanced&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Consultations&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;HW6 (6p)&lt;br&gt;T (10p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;15&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;01-25&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Presentation of P2 (part 1)&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Python: EDA&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Presentation of P2 (part 2)&lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;P2 (24p)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;General rules and course assessment&lt;/h2&gt; &#xA;&lt;p&gt;You can obtain up to 100 points during the term, which will be assigned according to the following list:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Projects (1 x 25 points, 1 x 29 points)&lt;/li&gt; &#xA; &lt;li&gt;Homeworks (6 x 6 points)&lt;/li&gt; &#xA; &lt;li&gt;Test (10 points)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You need at least 51 points overall, in this at least 50% of points from each of the projects, in order to pass the course.&lt;/p&gt; &#xA;&lt;p&gt;The grades will be given according to the table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Grade&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;3&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;3.5&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;4&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;4.5&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;5&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Score&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(50, 60]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(60, 70]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(70, 80]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(80, 90]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(90, âˆž)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>devOpifex/component</title>
    <updated>2023-10-20T01:41:14Z</updated>
    <id>tag:github.com,2023-10-20:/devOpifex/component</id>
    <link href="https://github.com/devOpifex/component" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Components for Shiny&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- badges: start --&gt; &#xA; &lt;!-- badges: end --&gt; &#xA; &lt;h1&gt;component&lt;/h1&gt; &#xA; &lt;p&gt;Creating components for &lt;a href=&#34;https://shiny.rstudio.com&#34;&gt;shiny&lt;/a&gt; inspired by &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;It tackles three &#34;issues&#34; with Shiny modules:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generating scoped (namespaced) CSS and JavaScript code.&lt;/li&gt; &#xA; &lt;li&gt;Places all the code for a module in a single file.&lt;/li&gt; &#xA; &lt;li&gt;Binds CSS, and JavaScript of a module to it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This is inspired from Vue where one defines a component in a single file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script setup&amp;gt;&#xA;import { ref } from &#39;vue&#39;&#xA;const count = ref(0)&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;template&amp;gt;&#xA;  &amp;lt;button @click=&#34;count++&#34;&amp;gt;Count is: {{ count }}&amp;lt;/button&amp;gt;&#xA;&amp;lt;/template&amp;gt;&#xA;&#xA;&amp;lt;style scoped&amp;gt;&#xA;button {&#xA;  font-weight: bold;&#xA;}&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where the file includes the style, script, and template. We reproduce the same with R with the addition of the server component.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of component from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;devOpifex/component&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create&lt;/h2&gt; &#xA;&lt;p&gt;From a package (see &lt;a href=&#34;https://leprechaun.opifex.org&#34;&gt;lerprechaun&lt;/a&gt; or &lt;a href=&#34;https://thinkr-open.github.io/golem/&#34;&gt;golem&lt;/a&gt;), create a component.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# create a component&#xA;# give it a name&#xA;component::create(&#34;test&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates a new file in &lt;code&gt;R/&lt;/code&gt; named &lt;code&gt;component-test.R&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Components generate code via &lt;code&gt;devtools::document()&lt;/code&gt; (more on that later) add the roxygen2 roclet to your &lt;code&gt;DESCRIPTION&lt;/code&gt;, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Roxygen: list(markdown = TRUE, roclets = c(&#34;collate&#34;, &#34;namespace&#34;, &#34;rd&#34;, &#34;component::roclet_component&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So &lt;code&gt;create()&lt;/code&gt; creates the component file but &lt;code&gt;devtools::document()&lt;/code&gt; generates the usable version of the component.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;component::create() =&amp;gt; `component-&amp;lt;name&amp;gt;.R` =&amp;gt; devtools::document() =&amp;gt; `component-generated-&amp;lt;name&amp;gt;.R`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Component Anatomy&lt;/h2&gt; &#xA;&lt;p&gt;The default component as created by &lt;code&gt;component::create()&lt;/code&gt; looks something like the code below (&lt;code&gt;R/component-test.R&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#&#39; @component test&#xA;NULL&#xA;&#xA;#&#39; test javascript&#xA;#&#39; &#xA;#&#39; test javascript component.&#xA;#&#39; &#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.test_javascript &amp;lt;- \(...) {&#xA;    &#34;$(&#39;{{class red}}&#39;).on(&#39;mouseenter&#39;, (e) =&amp;gt; {&#xA;        $(e.target).toggleClass(&#39;{{ns red}}&#39;);&#xA;    })&#34;&#xA;}&#xA;&#xA;#&#39; test css&#xA;#&#39; &#xA;#&#39; test css component.&#xA;#&#39; &#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.test_css &amp;lt;- \(...) {&#xA;  c(&#xA;    &#34;{{class red}}{color:red;}&#34;,&#xA;    &#34;h1{font-weight: bold;}&#34;&#xA;  )&#xA;}&#xA;&#xA;#&#39; test ui&#xA;#&#39; &#xA;#&#39; test UI component.&#xA;#&#39; &#xA;#&#39; @param ns Shiny&#39;s namespace function.&#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.test_ui &amp;lt;- \(ns, ...) {&#xA;  shiny::div(&#xA;    shiny::h1(&#34;Component&#34;, class = ns(&#34;red&#34;)),&#xA;    plotOutput(ns(&#34;plot&#34;))&#xA;  )&#xA;}&#xA;&#xA;#&#39; test server&#xA;#&#39; &#xA;#&#39; test server component.&#xA;#&#39; &#xA;#&#39; @param input,output,session Arguments passed from mdoule&#39;s server.&#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.test_server &amp;lt;- \(input, output, session, ...) {&#xA;  output$plot &amp;lt;- shiny::renderPlot(plot(stats::runif(200)))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Component tag&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;@component&lt;/code&gt; tag indicates the name of the component, in this example &lt;code&gt;test&lt;/code&gt;. This tells component which functions to scan for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.&amp;lt;component&amp;gt;_javascript&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.&amp;lt;component&amp;gt;_css&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.&amp;lt;component&amp;gt;_server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.&amp;lt;component&amp;gt;_ui&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JavaScript and CSS&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;.test_javascript&lt;/code&gt; and &lt;code&gt;.test_css&lt;/code&gt; functions are used to generate scoped code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;class&lt;/code&gt;: transforms &lt;code&gt;{{ class red }}&lt;/code&gt; into &lt;code&gt;.namespace-red&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt;: transforms &lt;code&gt;{{ id red }}&lt;/code&gt; into &lt;code&gt;#namespace-red&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ns&lt;/code&gt;: transforms &lt;code&gt;{{ ns red }}&lt;/code&gt; into &lt;code&gt;namespace-red&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt;: transforms &lt;code&gt;{{ json letters[1:2] }}&lt;/code&gt; into &lt;code&gt;[&#39;a&#39;, &#39;b&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You may still use &lt;code&gt;{{ x }}&lt;/code&gt; in which case it will evaluate &lt;code&gt;x&lt;/code&gt; (passed &lt;code&gt;*ui&lt;/code&gt; or &lt;code&gt;*server&lt;/code&gt; function).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These functions should return a character vector of length one or more.&lt;/p&gt; &#xA;&lt;p&gt;The CSS is minified using &lt;a href=&#34;https://github.com/rstudio/sass/&#34;&gt;sass&lt;/a&gt;, if you have &lt;a href=&#34;https://www.npmjs.com/package/uglify-js&#34;&gt;uglifyjs&lt;/a&gt; installed it is used to minify the JavaScript otherwise it is not (install it with &lt;code&gt;npm install uglify-js -g&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;UI and Server&lt;/h3&gt; &#xA;&lt;p&gt;Almost identical to the UI and server functions of a shiny module&lt;/p&gt; &#xA;&lt;h3&gt;How to use&lt;/h3&gt; &#xA;&lt;p&gt;The created template &lt;strong&gt;cannot&lt;/strong&gt; be used as-is, by documenting the code with &lt;code&gt;devtools::document()&lt;/code&gt; we create a new file (&lt;code&gt;R/component-generated-&amp;lt;component&amp;gt;.R&lt;/code&gt;) which contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;component&amp;gt;_ui&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;component&amp;gt;_server&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this example, &lt;code&gt;test_ui&lt;/code&gt;, and &lt;code&gt;server_ui&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These are the functions that one should use in the application. Always work on/edit the functions starting with a dot (e.g.: &lt;code&gt;.test_ui&lt;/code&gt;), as the generated files get regenerated at every &lt;code&gt;devtools::document()&lt;/code&gt; call.&lt;/p&gt; &#xA;&lt;p&gt;Example based on the abose &#34;test&#34; component, after running &lt;code&gt;devtools::document()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(shiny)&#xA;&#xA;ui &amp;lt;- fluidPage(&#xA;    title = &#34;Test&#34;,&#xA;    test_ui(&#34;test&#34;)&#xA;)&#xA;&#xA;server &amp;lt;- function(...){&#xA;    test_server(&#34;test&#34;)&#xA;}&#xA;&#xA;shinyApp(ui, server)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Here is the classic counter example but scoped and using JavaScript only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#&#39; @component counter&#xA;NULL&#xA;&#xA;#&#39; counter javascript&#xA;#&#39; &#xA;#&#39; counter javascript component.&#xA;#&#39; &#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.counter_javascript &amp;lt;- \(...) {&#xA;  &#34;$(() =&amp;gt; {&#xA;    let index = 0;&#xA;    $(&#39;{{id button}}&#39;).on(&#39;click&#39;, (e) =&amp;gt; {&#xA;      index++;&#xA;      $(&#39;{{id output}}&#39;).html(index);&#xA;      $(&#39;{{id output}}&#39;).toggleClass(&#39;{{ns criminal}}&#39;);&#xA;    })&#xA;  })&#34;&#xA;}&#xA;&#xA;#&#39; counter css&#xA;#&#39; &#xA;#&#39; counter css component.&#xA;#&#39; &#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.counter_css &amp;lt;- \(...) {&#xA;  &#34;{{class criminal}}{&#xA;    color: {{color}};&#xA;    font-weight: bold;&#xA;  }&#34;&#xA;}&#xA;&#xA;#&#39; counter ui&#xA;#&#39; &#xA;#&#39; counter UI component.&#xA;#&#39; &#xA;#&#39; @param ns Shiny&#39;s namespace function.&#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.counter_ui &amp;lt;- \(ns, ...) {&#xA;  shiny::div(&#xA;    shiny::h1(&#34;Counter&#34;),&#xA;    shiny::tags$button(&#xA;      class = &#34;btn btn-sm btn-primary&#34;,&#xA;      id = ns(&#34;button&#34;),&#xA;      &#34;Counter&#34;&#xA;    ),&#xA;    shiny::p(&#xA;      id = ns(&#34;output&#34;), &#xA;      0L&#xA;    )&#xA;  )&#xA;}&#xA;&#xA;#&#39; counter server&#xA;#&#39; &#xA;#&#39; counter server component.&#xA;#&#39; &#xA;#&#39; @param input,output,session Arguments passed from mdoule&#39;s server.&#xA;#&#39; @param ... Any other argument.&#xA;#&#39; &#xA;#&#39; @keywords internal&#xA;.counter_server &amp;lt;- \(input, output, session, ...) {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, after documenting, it can be used as.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(shiny)&#xA;&#xA;ui &amp;lt;- fluidPage(&#xA;    title = &#34;Test&#34;,&#xA;    counter_ui(&#34;c1&#34;, color = &#34;red&#34;),&#xA;    counter_ui(&#34;c2&#34;, color = &#34;blue&#34;),&#xA;)&#xA;&#xA;server &amp;lt;- function(...){&#xA;    counter_server(&#34;c1&#34;)&#xA;    counter_server(&#34;c2&#34;)&#xA;}&#xA;&#xA;shinyApp(ui, server)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>noriakis/ggkegg</title>
    <updated>2023-10-20T01:41:14Z</updated>
    <id>tag:github.com,2023-10-20:/noriakis/ggkegg</id>
    <link href="https://github.com/noriakis/ggkegg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Analyzing and visualizing KEGG information using the grammar of graphics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggkegg&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/noriakis/ggkegg/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/noriakis/ggkegg/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;A set of functions to analyse and plot the KEGG information using &lt;code&gt;tidygraph&lt;/code&gt;, &lt;code&gt;ggraph&lt;/code&gt; and &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The detailed documentation is &lt;a href=&#34;https://noriakis.github.io/software/ggkegg&#34;&gt;here&lt;/a&gt; using &lt;code&gt;bookdown&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;code&gt;BiocManager&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;BiocManager::install(&#34;ggkegg&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;devtools&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;noriakis/ggkegg&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggkegg)&#xA;library(ggfx)&#xA;library(igraph)&#xA;library(tidygraph)&#xA;library(dplyr)&#xA;&#xA;pathway(&#34;ko01100&#34;) |&amp;gt;&#xA;  process_line() |&amp;gt;&#xA;  highlight_module(module(&#34;M00021&#34;)) |&amp;gt;&#xA;  highlight_module(module(&#34;M00338&#34;)) |&amp;gt;&#xA;  ggraph(x=x, y=y) +&#xA;  geom_node_point(size=1, aes(color=I(fgcolor),&#xA;                              filter=fgcolor!=&#34;none&#34; &amp;amp; type!=&#34;line&#34;))+&#xA;  geom_edge_link0(width=0.1, aes(color=I(fgcolor),&#xA;                                filter=type==&#34;line&#34;&amp;amp; fgcolor!=&#34;none&#34;))+&#xA;  with_outer_glow(&#xA;    geom_edge_link0(width=1,&#xA;                   aes(color=I(fgcolor),&#xA;                       filter=(M00021 | M00338))),&#xA;    colour=&#34;red&#34;, expand=5&#xA;  )+&#xA;  with_outer_glow(&#xA;    geom_node_point(size=1.5,&#xA;                    aes(color=I(fgcolor),&#xA;                        filter=(M00021 | M00338))),&#xA;    colour=&#34;red&#34;, expand=5&#xA;  )+&#xA;  geom_node_text(size=2,&#xA;                 aes(x=x, y=y,&#xA;                     label=graphics_name,&#xA;                     filter=name==&#34;path:ko00270&#34;),&#xA;                 repel=TRUE, family=&#34;sans&#34;, bg.colour=&#34;white&#34;)+&#xA;  theme_void()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/noriakis/ggkegg/main/man/figures/README-unnamed-chunk-2-1.png&#34; width=&#34;2400&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;You can use your favorite geoms to annotate raw KEGG map combining the functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m &amp;lt;- module(&#34;M00013&#34;)&#xA;g &amp;lt;- pathway(&#34;ko00640&#34;) |&amp;gt; mutate(mod=highlight_set_nodes(m@reaction_components,how=&#34;all&#34;))&#xA;gg &amp;lt;- ggraph(g, layout=&#34;manual&#34;, x=x, y=y)+&#xA;  geom_node_rect(fill=&#34;grey&#34;,aes(filter=type==&#34;ortholog&#34;))+&#xA;  overlay_raw_map(&#34;ko00640&#34;)+&#xA;  geom_node_point(aes(filter=type==&#34;compound&#34;), shape=21, fill=&#34;blue&#34;, color=&#34;black&#34;, size=2)+&#xA;  ggfx::with_outer_glow(geom_node_point(aes(filter=mod, x=x, y=y), color=&#34;red&#34;,size=2),&#xA;                        colour=&#34;yellow&#34;,expand=5)+&#xA;  theme_void()&#xA;gg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/noriakis/ggkegg/main/man/figures/README-unnamed-chunk-3-1.png&#34; width=&#34;2400&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;Or customize graphics based on &lt;code&gt;ggraph&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;g &amp;lt;- pathway(&#34;hsa04110&#34;)&#xA;pseudo_lfc &amp;lt;- sample(seq(0,3,0.1), length(V(g)), replace=TRUE)&#xA;names(pseudo_lfc) &amp;lt;- V(g)$name&#xA;&#xA;ggkegg(&#34;hsa04110&#34;,&#xA;       convert_org = c(&#34;pathway&#34;,&#34;hsa&#34;,&#34;ko&#34;),&#xA;       numeric_attribute = pseudo_lfc)+&#xA;  geom_edge_parallel2(&#xA;    aes(color=subtype_name),&#xA;    arrow = arrow(length = unit(1, &#39;mm&#39;)), &#xA;    start_cap = square(1, &#39;cm&#39;),&#xA;    end_cap = square(1.5, &#39;cm&#39;)) + &#xA;  geom_node_rect(aes(filter=.data$type==&#34;group&#34;),&#xA;                 fill=&#34;transparent&#34;, color=&#34;red&#34;)+&#xA;  geom_node_rect(aes(fill=numeric_attribute,&#xA;                     filter=.data$type==&#34;gene&#34;))+&#xA;  geom_node_text(aes(label=converted_name,&#xA;                     filter=.data$type == &#34;gene&#34;),&#xA;                 size=2.5,&#xA;                 color=&#34;black&#34;)+&#xA;  with_outer_glow(geom_node_text(aes(label=converted_name,&#xA;                                     filter=converted_name==&#34;PCNA&#34;),&#xA;                                 size=2.5, color=&#34;red&#34;),&#xA;                  colour=&#34;white&#34;,&#xA;                  expand=4)+&#xA;  scale_edge_color_manual(values=viridis::plasma(11))+&#xA;  scale_fill_viridis(name=&#34;LFC&#34;)+&#xA;  theme_void()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/noriakis/ggkegg/main/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;3600&#34; style=&#34;display: block; margin: auto;&#34;&gt;</summary>
  </entry>
</feed>