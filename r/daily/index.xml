<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-17T01:38:17Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dime-worldbank/googletraffic</title>
    <updated>2022-12-17T01:38:17Z</updated>
    <id>tag:github.com,2022-12-17:/dime-worldbank/googletraffic</id>
    <link href="https://github.com/dime-worldbank/googletraffic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package to query Google Maps traffic data and transform into data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;googletraffic &lt;img src=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/man/figures/hex.png&#34; align=&#34;right&#34; width=&#34;200&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/package=googletraffic&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/googletraffic&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dime-worldbank/googletraffic/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/dime-worldbank/googletraffic/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/googletraffic&#34; alt=&#34;downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Create Georeferenced Traffic Data from the &lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/trafficlayer&#34;&gt;Google Maps Javascript API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/#apikey&#34;&gt;API Key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/#quickstart&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview &lt;a name=&#34;overview&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Google Maps &lt;a href=&#34;https://www.google.com/maps/@38.909083,-77.0249335,12.07z/data=!5m1!1e1&#34;&gt;displays information about traffic conditions&lt;/a&gt; across an area. This package provides functions to produce georeferenced rasters from real-time Google Maps traffic information. Having Google traffic information in a georeferenced data format facilitates analysis of traffic information (e.g., spatially merging traffic information with other data sources). This package was inspired by existing research that has used Google traffic information, including in &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0048969721034070&#34;&gt;New York City&lt;/a&gt; and &lt;a href=&#34;https://openknowledge.worldbank.org/handle/10986/33445&#34;&gt;Dar es Salaam&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- The below image shows an example raster produced using the package showing [traffic within Washington, DC.](https://www.google.com/maps/@38.9098813,-77.0406205,15.01z/data=!5m1!1e1)&#xA;&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;&lt;img src=&#34;man/figures/top_example.jpg&#34; alt=&#34;Example&#34; width=&#34;800&#34;/&gt;&#xA;&lt;/p&gt;&#xA;---&gt; &#xA;&lt;p&gt;Pixel values in rasters are derived from Google traffic colors and can be one of four values:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Google Traffic Color&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Raster Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Green&lt;/td&gt; &#xA;   &lt;td&gt;No traffic delays&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Orange&lt;/td&gt; &#xA;   &lt;td&gt;Medium traffic&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Red&lt;/td&gt; &#xA;   &lt;td&gt;High traffic&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dark Red&lt;/td&gt; &#xA;   &lt;td&gt;Heavy traffic&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation &lt;a name=&#34;installation&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The package can be installed via CRAN.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;googletraffic&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API Key &lt;a name=&#34;apikey&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Querying Google traffic information requires a Google API key with the &lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/overview&#34;&gt;Maps Javascript API&lt;/a&gt; enabled. To create a Google API key, &lt;a href=&#34;https://developers.google.com/maps/get-started#create-project&#34;&gt;follow these instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart &lt;a name=&#34;quickstart&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Setup &lt;a name=&#34;setup&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Load package&#xA;library(googletraffic)&#xA;&#xA;## Load additional packages to run below examples&#xA;library(ggplot2)&#xA;library(dplyr)&#xA;library(raster)&#xA;&#xA;## Set API key&#xA;google_key &amp;lt;- &#34;GOOGLE-KEY-HERE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Raster around point &lt;a name=&#34;point&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To create a raster around a point, we set the centroid coordinate, the &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Zoom_levels&#34;&gt;zoom&lt;/a&gt; level, and the height/width around the centroid coordinate (height/width are in terms of pixels, and kilometer distance of a pixel is determined primarily by the zoom level).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Make raster&#xA;r &amp;lt;- gt_make_raster(location   = c(40.712778, -74.006111),&#xA;                    height     = 2000,&#xA;                    width      = 2000,&#xA;                    zoom       = 16,&#xA;                    google_key = google_key)&#xA;&#xA;## Plot&#xA;r_df &amp;lt;- rasterToPoints(r, spatial = TRUE) %&amp;gt;% as.data.frame()&#xA;names(r_df) &amp;lt;- c(&#34;value&#34;, &#34;x&#34;, &#34;y&#34;)&#xA;&#xA;ggplot() +&#xA;  geom_raster(data = r_df, &#xA;  aes(x = x, y = y, &#xA;  fill = as.factor(value))) +&#xA;  labs(fill = &#34;Traffic\nLevel&#34;) +&#xA;  scale_fill_manual(values = c(&#34;green2&#34;, &#34;orange&#34;, &#34;red&#34;, &#34;#660000&#34;)) +&#xA;  coord_quickmap() + &#xA;  theme_void() +&#xA;  theme(plot.background = element_rect(fill = &#34;white&#34;, color=&#34;white&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/man/figures/nyc_small.jpg&#34; alt=&#34;Example&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Raster around polygon &lt;a name=&#34;polygon&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We can also create a raster using a polygon to define the location. If needed, the function will make multiple API calls to cover the area within the polygon (a larger &lt;code&gt;zoom&lt;/code&gt; value will result in needing to make more API calls).&lt;/p&gt; &#xA;&lt;!--By default, the function will use a height and width of 2000 (pixels) for each API call; if needed, the function will make multiple API calls to cover the area within the polygon. If the same number of API calls can be made using a smaller height and width, the function will use a smaller height and width. However, the height/width can also be manually specified using the `height` and `width` parameters. Larger height/width mean less API calls are needed, but traffic data will fail to render if too large of a height/width are set.--&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Grab shapefile of Manhattan&#xA;us_sp &amp;lt;- getData(&#39;GADM&#39;, country=&#39;USA&#39;, level=2)&#xA;ny_sp &amp;lt;- us_sp[us_sp$NAME_2 %in% &#34;New York&#34;,]&#xA;&#xA;## Make raster&#xA;r &amp;lt;- gt_make_raster_from_polygon(polygon    = ny_sp,&#xA;                                 zoom       = 16,&#xA;                                 google_key = google_key)&#xA;&#xA;## Plot&#xA;r_df &amp;lt;- rasterToPoints(r, spatial = TRUE) %&amp;gt;% as.data.frame()&#xA;names(r_df) &amp;lt;- c(&#34;value&#34;, &#34;x&#34;, &#34;y&#34;)&#xA;&#xA;ggplot() +&#xA;  geom_raster(data = r_df, &#xA;  aes(x = x, y = y, &#xA;  fill = as.factor(value))) +&#xA;  labs(fill = &#34;Traffic\nLevel&#34;) +&#xA;  scale_fill_manual(values = c(&#34;green2&#34;, &#34;orange&#34;, &#34;red&#34;, &#34;#660000&#34;)) +&#xA;  coord_quickmap() + &#xA;  theme_void() +&#xA;  theme(plot.background = element_rect(fill = &#34;white&#34;, color=&#34;white&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dime-worldbank/googletraffic/main/man/figures/nyc_large.jpg&#34; alt=&#34;Example&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Usage &lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://dime-worldbank.github.io/googletraffic/articles/googletraffic-vignette.html&#34;&gt;this vignette&lt;/a&gt; for additional information and examples illustrating how to use the package.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SafetyGraphics/safetyProfile</title>
    <updated>2022-12-17T01:38:17Z</updated>
    <id>tag:github.com,2022-12-17:/SafetyGraphics/safetyProfile</id>
    <link href="https://github.com/SafetyGraphics/safetyProfile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Patient Profile Shiny Module&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;safetyProfile&lt;/h1&gt; &#xA;&lt;p&gt;Patient Profile Shiny Module&lt;/p&gt;</summary>
  </entry>
</feed>