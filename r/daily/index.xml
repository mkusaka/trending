<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-20T01:39:15Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hadley/stringb</title>
    <updated>2023-09-20T01:39:15Z</updated>
    <id>tag:github.com,2023-09-20:/hadley/stringb</id>
    <link href="https://github.com/hadley/stringb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A dependency-free version of stringr&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stringb&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/hadley/stringb?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/hadley/stringb/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hadley/stringb/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/hadley/stringb/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;stringb provides a zero-dependency (mostly) drop in replacement for stringr implemented on top of base R regular expressions. This is useful if you are finding stringr&#39;s stringi dependency to be onerous for your users (since it requires compilation and a large unicode database).&lt;/p&gt; &#xA;&lt;p&gt;stringb should match stringr behaviour as much as possible. The main exceptions are listed below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;stringb uses either Perl-compatible regexps (the default) or POSIX 1003.2 extended regexps (with &lt;code&gt;regexp()&lt;/code&gt;). By and large, these are represent subsets of the ICU backed engine that stringi provides, but there maybe be subtle differences in edge cases.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;stringr always returns UTF-8 encoded strings; stringb follows the same rules as base R.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Most stringr functions are recycled over all arguments. stringb provides much more limited recycling: &lt;code&gt;pattern&lt;/code&gt; is not recycled; and &lt;code&gt;str_sub()&lt;/code&gt; only recycles &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;, not &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of stringb with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;hadley/stringb&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>SomaLogic/SomaPlotr</title>
    <updated>2023-09-20T01:39:15Z</updated>
    <id>tag:github.com,2023-09-20:/SomaLogic/SomaPlotr</id>
    <link href="https://github.com/SomaLogic/SomaPlotr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A highly specialized suite of standardized plotting routines based on the &#34;Grammar of Graphics&#34; framework of mapping variables to aesthetics used in &#39;ggplot2&#39;. Graphics types are biased towards visualizing SomaScan (proteomic) data.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;SomaPlotr&lt;/code&gt; &lt;a href=&#34;https://somalogic.github.io/SomaPlotr&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;138&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Version-0.0.0.9000-success.svg?style=flat&amp;amp;logo=github&#34; alt=&#34;GitHub version&#34;&gt; &lt;a href=&#34;https://cran.r-project.org/package=SomaPlotr&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/SomaPlotr&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=SomaPlotr&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/SomaPlotr&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SomaLogic/SomaPlotr/actions&#34;&gt;&lt;img src=&#34;https://github.com/SomaLogic/SomaPlotr/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/SomaLogic/SomaPlotr?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SomaLogic/SomaPlotr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;SomaPlotr&lt;/code&gt; R package contains various standardized plotting functions designed to visualize SomaScan data in the R statistical environment. &lt;code&gt;SomaPlotr&lt;/code&gt; is based on the “Grammar of Graphics” (&lt;a href=&#34;https://link.springer.com/book/10.1007/0-387-28695-0&#34;&gt;Wilkinson, 2005&lt;/a&gt;), the same layered framework of mapping variables to aesthetics that provides a structure for &lt;a href=&#34;https://cran.r-project.org/package=ggplot2&#34;&gt;ggplot2&lt;/a&gt;. As such, &lt;code&gt;SomaPlotr&lt;/code&gt; largely utilizes ggplot-style syntax, and can easily and quickly create fully labeled, colored figures of SomaScan data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SomaPlotr&lt;/code&gt; is designed to generate figures that are well-suited for the exploration and visualization of SomaScan data. &lt;code&gt;SomaPlotr&lt;/code&gt; is therefore biased in towards cumulative distribution function (CDF) plots, probability density function (PDF) plots, volcano and concordance plots, grouped boxplots, and more.&lt;/p&gt; &#xA;&lt;p&gt;Each panel in the figure below were generated with &lt;code&gt;SomaPlotr&lt;/code&gt; and pieced together into a grid with the &lt;a href=&#34;https://cran.r-project.org/package=patchwork&#34;&gt;patchwork&lt;/a&gt; package. Read on to learn how you can create these types of graphics using &lt;code&gt;SomaPlotr&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-plot-grid-1.png&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;For a full table of the visualizations that can be created with &lt;code&gt;SomaPlotr&lt;/code&gt;, see the &lt;em&gt;Usage&lt;/em&gt; section below.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;SomaPlotr&lt;/code&gt; can be installed from &lt;a href=&#34;https://github.com/SomaLogic/SomaPlotr&#34;&gt;GitHub&lt;/a&gt; using the &lt;code&gt;remotes&lt;/code&gt; package as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;SomaLogic/SomaPlotr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To load &lt;code&gt;SomaPlotr&lt;/code&gt;, simply make a call to &lt;code&gt;library()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(SomaPlotr)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;SomaPlotr&lt;/code&gt; provides tools to create figures commonly used for the visualization of SomaScan data. While the package does not include a comprehensive list of all possible graphics, those that it &lt;em&gt;does&lt;/em&gt; contain are popular for exploring and analyzing patterns in SomaScan.&lt;/p&gt; &#xA;&lt;h2&gt;Primary Functionality&lt;/h2&gt; &#xA;&lt;p&gt;The table below provides a high-level summary of the graphics that can be created with &lt;code&gt;SomaPlotr&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Plot type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CDF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotCDF()&lt;/code&gt;, &lt;code&gt;plotCDFlist()&lt;/code&gt;, &lt;code&gt;plotCDFbyGroup()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PDF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotPDF()&lt;/code&gt;, &lt;code&gt;plotPDFlist()&lt;/code&gt;, &lt;code&gt;plotCDFbyGroup()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Volcano&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotVolcano()&lt;/code&gt;, &lt;code&gt;plotVolcanoHTML()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Concordance&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotConcord()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Histogram&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotDoubleHist()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Boxplot&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;boxplotBeeswarm()&lt;/code&gt;, &lt;code&gt;boxplotGrouped()&lt;/code&gt;, &lt;code&gt;boxplotSubarray()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Longitudinal&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plotLongitudinal()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The plotting functions in &lt;code&gt;SomaPlotr&lt;/code&gt; require a SomaScan dataset as input, and generate a complete, labeled figure that can be further customized and modified, if desired.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;code&gt;SomaPlotr&lt;/code&gt;, the previously shown boxplot comparing RFU values across groups can be generated via &lt;code&gt;boxplotGrouped()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Simulate an example dataset&#xA;timepoint &amp;lt;- c(&#34;Treatment&#34;, &#34;Relapse&#34;, &#34;Remission&#34;)&#xA;withr::with_seed(101, {&#xA;  clin_df &amp;lt;- data.frame(&#xA;    TimePoint   = sample(timepoint, 80, replace = TRUE),&#xA;    seq.1234.56 = stats::rnorm(80, mean = 12, sd = 5)&#xA;  )&#xA;})&#xA;&#xA;# Create grouped boxplot w/ customized title&#xA;boxplotGrouped(&#xA;  clin_df,&#xA;  y = &#34;seq.1234.56&#34;, &#xA;  group.var = &#34;TimePoint&#34;, &#xA;  beeswarm = TRUE, &#xA;  main = &#34;Box Plot of Sample Timepoint&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-bx-plot-1.png&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;Similarly, we can replicate the CDF plot in the introductory figure above via &lt;code&gt;plotCDF()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- withr::with_seed(101, rnorm(100, mean = 4))&#xA;cdf &amp;lt;- plotCDF(x)&#xA;cdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-cdf-1.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;A quantile/percentile line (the &lt;span style=&#34;color:red&#34;&gt;red line&lt;/span&gt; in the figure below) can be added to an existing CDF plot via &lt;code&gt;addCDFquantiles()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cdf + addCDFquantiles(x, col = &#34;red&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-cdf-quantiles-1.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;For a more in-depth overview of the package and a full list of example plots, please see the package vignette: &lt;code&gt;vignette(&#34;SomaPlotr&#34;, package = &#34;SomaPlotr&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Color Palettes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;SomaPlotr&lt;/code&gt; provides color palettes that correspond to SomaLogic Operating Co., Inc. company color schemes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;scales::show_col(palette_soma(n = 8))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-palette-soma-1.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;These palettes can be incorporated into figures in a variety of ways. The &lt;code&gt;soma_colors&lt;/code&gt; and &lt;code&gt;soma_colors2&lt;/code&gt; objects provide individual hex colors for the SomaLogic color scheme. These objects can be used to transform the &lt;code&gt;ggplot&lt;/code&gt; default color palette.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data.frame(x = seq_along(soma_colors2), y = seq_along(soma_colors2)) |&amp;gt; &#xA;  ggplot(aes(x = x, y = y)) +&#xA;  geom_bar(stat = &#34;identity&#34;, fill = soma_colors2) +&#xA;  scale_x_discrete(labels = names(soma_colors2)) +&#xA;  theme(axis.title.y = element_blank(),&#xA;        axis.text.y = element_blank(),&#xA;        axis.ticks.y = element_blank())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-soma-colors2-1.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;theme_soma()&lt;/code&gt; theme and &lt;code&gt;scale_color_soma()&lt;/code&gt; functions provide a uniform plotting and color scheme. By using the &lt;code&gt;theme_soma()&lt;/code&gt; theme, polished, publication ready figures can be generated with consistent font sizes, backgrounds, legend positions, and more.&lt;/p&gt; &#xA;&lt;p&gt;Below on the left, &lt;code&gt;p1&lt;/code&gt; was created with the default &lt;a href=&#34;https://cran.r-project.org/package=ggplot2&#34;&gt;ggplot2&lt;/a&gt; theme. On the right, &lt;code&gt;p2&lt;/code&gt; has the &lt;code&gt;theme_soma()&lt;/code&gt; theme and &lt;code&gt;scale_color_soma()&lt;/code&gt; color scale applied.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p1 &amp;lt;- ggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +&#xA;  geom_point(alpha = 0.5, size = 4)&#xA;&#xA;p2 &amp;lt;- p1 + theme_soma(base_size = 15) + scale_color_soma()&#xA;&#xA;p1 + p2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SomaLogic/SomaPlotr/main/man/figures/README-theme-soma-1.png&#34; style=&#34;display: block; margin: auto auto auto 0;&#34;&gt; &#xA;&lt;p&gt;For a full list of available color scales and themes, see &lt;code&gt;?SomaPlotr::theme_soma&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;MIT LICENSE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/SomaLogic/SomaPlotr/raw/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The MIT license: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;https://choosealicense.com/licenses/mit/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.tldrlegal.com/license/mit-license&#34;&gt;https://www.tldrlegal.com/license/mit-license/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Further: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;“SomaPlotr” and “SomaLogic” are trademarks owned by SomaLogic Operating Co., Inc.&amp;nbsp;No license is hereby granted to these trademarks other than for purposes of identifying the origin or source of this Software.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>