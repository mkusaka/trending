<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-14T01:44:40Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>USDAForestService/FIESTA</title>
    <updated>2023-07-14T01:44:40Z</updated>
    <id>tag:github.com,2023-07-14:/USDAForestService/FIESTA</id>
    <link href="https://github.com/USDAForestService/FIESTA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FIESTA (Forest Inventory ESTimation and Analysis) is a research estimation tool for analysts that work with sample-based inventory data from the U.S. Department of Agriculture, Forest Service, Forest Inventory and Analysis (FIA) Program. Follow the link below for more information:&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;Authors:&lt;/b&gt; Frescino, Tracey S.; Moisen, Gretchen G.; Patterson, Paul L.; Toney, Chris; White, Grayson W.&lt;/p&gt; &#xA;&lt;h1&gt;ðŸŽ‰ FIESTA &lt;img src=&#34;https://github.com/USDAForestService/FIESTA/raw/master/figs/fiesta_grey.png?raw=true&#34; align=&#34;right&#34; width=&#34;150&#34;&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The R package, &lt;code&gt;FIESTA&lt;/code&gt; (Forest Inventory ESTimation and Analysis) is a research estimation tool for analysts that work with sample-based inventory data from the U.S. Department of Agriculture, Forest Service, Forest Inventory and Analysis (FIA) Program. &lt;code&gt;FIESTA&lt;/code&gt; can generate FIAâ€™s traditional state-wide estimates while also accommodate: unique population boundaries, different evaluation time periods, customized stratification schemes, non-standard variance equations, integration of multi-scale remotely-sensed data and other auxiliary information, and interaction with other modeling and estimation tools from CRANâ€™s library of packages. &lt;code&gt;FIESTA&lt;/code&gt; contains a collection of functions that can query FIA databases, summarize and compile plot and spatial data, and generate estimates with associated sampling errors.&lt;/p&gt; &#xA;&lt;p&gt;Functions are organized by type or objective and are named with a corresponding prefix (Fig. 1). &lt;code&gt;FIESTA&lt;/code&gt; core functions (CORE) facilitate data extraction and compilation of data input information and are used independently or within the &lt;code&gt;FIESTA&lt;/code&gt; estimation modules. &lt;code&gt;FIESTA&lt;/code&gt; estimation modules (MODULE) combine multiple functions from &lt;code&gt;FIESTA&lt;/code&gt; or other packages to generate population estimates using different estimation strategies. Each module has an associated &lt;code&gt;mod*pop&lt;/code&gt; function for compiling the population data and calculations (e.g., adjustments for nonresponse, standardizing auxiliary data) for a custom boundary and can be used for generating multiple estimates. &lt;code&gt;FIESTA&lt;/code&gt; analysis functions, found in the &lt;code&gt;FIESTAnalysis&lt;/code&gt; package, streamline different estimation routines by wrapping (i.e., combining) estimation modules and other functions for a specific purpose.&lt;/p&gt; &#xA;&lt;h5&gt;Core Functions&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Database tools (&lt;code&gt;DB*&lt;/code&gt;) - functions for querying and extracting data from FIAâ€™s national database.&lt;/li&gt; &#xA; &lt;li&gt;Data tools (&lt;code&gt;dat*&lt;/code&gt;) - functions for summarizing and exploring FIA data.&lt;/li&gt; &#xA; &lt;li&gt;Spatial tools (&lt;code&gt;sp*&lt;/code&gt;) - functions for manipulating and summarizing spatial data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Estimation Modules (mod)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Green-Book (&lt;code&gt;modGB*&lt;/code&gt;) - functions for FIAâ€™s standard Green-Book estimators.&lt;/li&gt; &#xA; &lt;li&gt;Photo-Based (&lt;code&gt;modPB*&lt;/code&gt;) - functions for supplementary photo-based estimators.&lt;/li&gt; &#xA; &lt;li&gt;Small Area (&lt;code&gt;modSA*&lt;/code&gt;) - functions for integration with available small area estimators (SAE).&lt;/li&gt; &#xA; &lt;li&gt;Model-Assisted (&lt;code&gt;modMA*&lt;/code&gt;) - functions for integration with available Model-Assisted estimators.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Analysis Functions&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Analysis functions (&lt;code&gt;an*&lt;/code&gt;) - wrapper functions for steam-lining estimation processes. These functions reside in the &lt;code&gt;FIESTAnalysis&lt;/code&gt; package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Stable installation&lt;/h4&gt; &#xA;&lt;p&gt;You can install the current stable version of &lt;code&gt;FIESTA&lt;/code&gt; from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;FIESTA&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Developmental installation&lt;/h4&gt; &#xA;&lt;p&gt;Or, if youâ€™d like to install the developmental version of &lt;code&gt;FIESTA&lt;/code&gt;, you can do so through a few steps:&lt;/p&gt; &#xA;&lt;h5&gt;1. Install Rtools or xcode&lt;/h5&gt; &#xA;&lt;p&gt;If you are using the Windows OS, in order to install source code from GitHub, you must install Rtools from &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;. Install the most current Rtools for Windows 64-bit at &lt;a href=&#34;https://cran.r-project.org/bin/windows/Rtools/&#34;&gt;this link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using macOS, youâ€™ll need to install xcode developer tools to install source code from GitHub. To do so, run the following code in your terminal (not the R console):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xcode-select --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2. Install the developmental version of &lt;code&gt;FIESTA&lt;/code&gt; (and &lt;code&gt;FIESTAutils&lt;/code&gt;)&lt;/h5&gt; &#xA;&lt;p&gt;First note that the developmental version of &lt;code&gt;FIESTA&lt;/code&gt; may rely on a developmental version of &lt;code&gt;FIESTAutils&lt;/code&gt;. For both of these installations, youâ€™ll need to make sure to have the &lt;code&gt;remotes&lt;/code&gt; package, and then you can install both packages from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install developmental FIESTAutils first&#xA;remotes::install_github(&#34;USDAForestService/FIESTAutils&#34;,&#xA;                        dependencies = TRUE)&#xA;&#xA;# Then install developmental FIESTA&#xA;remotes::install_github(&#34;USDAForestService/FIESTA&#34;,&#xA;                        dependencies = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;To report a bug with &lt;code&gt;FIESTA&lt;/code&gt;, please open an issue on the &lt;a href=&#34;https://github.com/USDAForestService/FIESTA/issues&#34;&gt;&lt;code&gt;FIESTA&lt;/code&gt; GitHub Repository issues page&lt;/a&gt;. Please provide a description of the bug, and a reproducible example. For help creating a reproducible example, see the &lt;a href=&#34;https://reprex.tidyverse.org/&#34;&gt;&lt;code&gt;reprex&lt;/code&gt;&lt;/a&gt; R package.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;This code was written and prepared by U.S. Government employees on official time, and therefore it is in the public domain and not subject to copyright.&lt;/p&gt; &#xA;&lt;p&gt;License is GPL-3.&lt;/p&gt; &#xA;&lt;h2&gt;Accessing Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Vignettes&lt;/h3&gt; &#xA;&lt;p&gt;The vignette tutorials from &lt;code&gt;FIESTA&lt;/code&gt; can be accessed from &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/&#34;&gt;the package website&lt;/a&gt;. The vignettes are split up into a few groups: general manuals (&lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_manual_mod_est.html&#34;&gt;Module Estimates&lt;/a&gt; and &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_manual_mod_pop.html&#34;&gt;Population Data&lt;/a&gt;), core functions (&lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_DB.html&#34;&gt;Database Tools&lt;/a&gt;, &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_dat.html&#34;&gt;Data Tools&lt;/a&gt;, and &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_sp.html&#34;&gt;Spatial Tools&lt;/a&gt;), and estimation modules (&lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_GB.html&#34;&gt;Green-book Estimators&lt;/a&gt;, &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_MA.html&#34;&gt;Model-Assisted Estimators&lt;/a&gt;, &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_SA.html&#34;&gt;Small Area Estimators&lt;/a&gt;, and &lt;a href=&#34;https://usdaforestservice.github.io/FIESTA/articles/FIESTA_tutorial_PB.html&#34;&gt;Photo-Based Module&lt;/a&gt;). We suggest you read the general manuals first if you are new to &lt;code&gt;FIESTA&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;External Data&lt;/h3&gt; &#xA;&lt;p&gt;You can access documentation for external data included in &lt;code&gt;FIESTA&lt;/code&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/USDAForestService/FIESTA/master/inst/extdata-README.md&#34;&gt;&lt;code&gt;extdata-README.md&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;These examples make use of vignettes that come with &lt;code&gt;FIESTA&lt;/code&gt;, and these vignettes can be found by calling &lt;code&gt;vignette(package = &#34;FIESTA&#34;)&lt;/code&gt;. The data used in these examples come with the &lt;code&gt;FIESTA&lt;/code&gt; package and are from Wyoming, inventory years 2011-2013 (Evaluation 561301). We first load &lt;code&gt;FIESTA&lt;/code&gt; to run these examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(FIESTA)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example 1: Green-book estimation&lt;/h3&gt; &#xA;&lt;p&gt;In order to produce estimates based on the Green-book, we first use the &lt;code&gt;GBpopdat&lt;/code&gt; function to produce population data for our areas of interest. We can look at a summary of the population data below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;GBpopdat &amp;lt;- modGBpop(popTabs = list(cond = FIESTA::WYcond,  &#xA;                                    tree = FIESTA::WYtree),      &#xA;                     popTabIDs = list(cond = &#34;PLT_CN&#34;),&#xA;                     pltassgn = FIESTA::WYpltassgn,&#xA;                     pltassgnid = &#34;CN&#34;,&#xA;                     pjoinid = &#34;PLT_CN&#34;,&#xA;                     unitarea = FIESTA::WYunitarea,&#xA;                     unitvar = &#34;ESTN_UNIT&#34;, &#xA;                     strata = TRUE,&#xA;                     stratalut = FIESTA::WYstratalut,&#xA;                     strata_opts = strata_options(getwt = TRUE))&#xA;&#xA;summary(GBpopdat)&#xA;#&amp;gt;             Length Class      Mode     &#xA;#&amp;gt; popType      1     -none-     character&#xA;#&amp;gt; condx       12     data.table list     &#xA;#&amp;gt; pltcondx    43     data.table list     &#xA;#&amp;gt; cuniqueid    1     -none-     character&#xA;#&amp;gt; condid       1     -none-     character&#xA;#&amp;gt; ACI.filter   1     -none-     character&#xA;#&amp;gt; unitarea     2     data.table list     &#xA;#&amp;gt; areavar      1     -none-     character&#xA;#&amp;gt; areaunits    1     -none-     character&#xA;#&amp;gt; unitvar      1     -none-     character&#xA;#&amp;gt; unitvars     1     -none-     character&#xA;#&amp;gt; strata       1     -none-     logical  &#xA;#&amp;gt; stratalut   18     data.table list     &#xA;#&amp;gt; strvar       1     -none-     character&#xA;#&amp;gt; strwtvar     1     -none-     character&#xA;#&amp;gt; expcondtab  12     data.table list     &#xA;#&amp;gt; plotsampcnt  3     data.frame list     &#xA;#&amp;gt; condsampcnt  3     data.frame list     &#xA;#&amp;gt; states       1     -none-     character&#xA;#&amp;gt; invyrs       1     -none-     list     &#xA;#&amp;gt; estvar.area  1     -none-     character&#xA;#&amp;gt; adj          1     -none-     character&#xA;#&amp;gt; areawt       1     -none-     character&#xA;#&amp;gt; treex       21     data.table list     &#xA;#&amp;gt; tuniqueid    1     -none-     character&#xA;#&amp;gt; adjtree      1     -none-     logical&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;GBpopdat&lt;/code&gt; list generated by &lt;code&gt;modGBpop&lt;/code&gt; contains many items. Some examples include the number of plots by plot status (&lt;code&gt;plotsampcnt&lt;/code&gt;), the number of conditions by condition status (&lt;code&gt;condsampcnt&lt;/code&gt;), the strata-level population data, including number of plots and adjustment factors (&lt;code&gt;stratalut&lt;/code&gt;), and the adjustment factors added to the condition-level, tree-level, and seedling data (&lt;code&gt;condx&lt;/code&gt;, &lt;code&gt;treex&lt;/code&gt;, and &lt;code&gt;seedx&lt;/code&gt;, respectfully).&lt;/p&gt; &#xA;&lt;p&gt;Now, with the &lt;code&gt;GBpopdat&lt;/code&gt; object, we can quickly produce estimates of basal area (&lt;code&gt;estvar = &#34;BA&#34;&lt;/code&gt;) by county in Wyoming for the 2011-2013 years.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;GBest &amp;lt;- modGBtree(GBpopdat = GBpopdat,&#xA;                   estvar = &#34;BA&#34;,&#xA;                   estvar.filter = &#34;STATUSCD == 1&#34;,&#xA;                   sumunits = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We again output a list, now with estimates/standard errors, raw data, state code, and inventory year:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(GBest, max.level = 2)&#xA;#&amp;gt; List of 4&#xA;#&amp;gt;  $ est    :&#39;data.frame&#39;: 23 obs. of  3 variables:&#xA;#&amp;gt;   ..$ ESTN_UNIT             : int [1:23] 1 3 5 7 9 11 13 15 17 19 ...&#xA;#&amp;gt;   ..$ Estimate              : num [1:23] 35117889 24184274 8223787 73174024 16031144 ...&#xA;#&amp;gt;   ..$ Percent Sampling Error: num [1:23] 11.71 26.91 32.24 8.56 31.4 ...&#xA;#&amp;gt;  $ raw    :List of 11&#xA;#&amp;gt;   ..$ unit_totest  :&#39;data.frame&#39;:    23 obs. of  17 variables:&#xA;#&amp;gt;   ..$ domdat       :&#39;data.frame&#39;:    590 obs. of  14 variables:&#xA;#&amp;gt;   ..$ estvar       : chr &#34;BA&#34;&#xA;#&amp;gt;   ..$ estvar.filter: chr &#34;STATUSCD == 1&#34;&#xA;#&amp;gt;   ..$ module       : chr &#34;GB&#34;&#xA;#&amp;gt;   ..$ esttype      : chr &#34;TREE&#34;&#xA;#&amp;gt;   ..$ GBmethod     : chr &#34;PS&#34;&#xA;#&amp;gt;   ..$ rowvar       : chr &#34;TOTAL&#34;&#xA;#&amp;gt;   ..$ colvar       : chr &#34;NONE&#34;&#xA;#&amp;gt;   ..$ areaunits    : chr &#34;acres&#34;&#xA;#&amp;gt;   ..$ estunits     : chr &#34;square feet&#34;&#xA;#&amp;gt;  $ statecd: int 56&#xA;#&amp;gt;  $ invyr  : int [1:3] 2011 2012 2013&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example 2: Model-assisted estimation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;FIESTA&lt;/code&gt; makes it easy to do estimation through techniques such as model-assited estimation and small area estimation. In this example, we use a similar process to the Green-Book estimation above to produce estimates for the same region, but through a generalized regression (GREG) model-assisted estimator. First, we get our population data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MApopdat &amp;lt;- modMApop(popTabs = list(tree = FIESTA::WYtree,&#xA;                                    cond = FIESTA::WYcond),&#xA;                     pltassgn = FIESTA::WYpltassgn,&#xA;                     pltassgnid = &#34;CN&#34;,&#xA;                     unitarea = FIESTA::WYunitarea,&#xA;                     unitvar = &#34;ESTN_UNIT&#34;,&#xA;                     unitzonal = FIESTA::WYunitzonal,&#xA;                     prednames = c(&#34;dem&#34;, &#34;tcc&#34;, &#34;tpi&#34;, &#34;tnt&#34;),&#xA;                     predfac = &#34;tnt&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, analogous to the &lt;code&gt;modGBtree()&lt;/code&gt; function we can produce estimates with the &lt;code&gt;modMAtree()&lt;/code&gt; function&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MAest &amp;lt;- modMAtree(MApopdat = MApopdat,&#xA;                   MAmethod = &#34;greg&#34;,&#xA;                   estvar = &#34;BA&#34;,&#xA;                   estvar.filter = &#34;STATUSCD == 1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and we can see the output of &lt;code&gt;modMAtree()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(MAest, max.level = 2)&#xA;#&amp;gt; List of 4&#xA;#&amp;gt;  $ est    :Classes &#39;data.table&#39; and &#39;data.frame&#39;:    23 obs. of  3 variables:&#xA;#&amp;gt;   ..$ ESTN_UNIT             : int [1:23] 1 3 5 7 9 11 13 15 17 19 ...&#xA;#&amp;gt;   ..$ Estimate              : num [1:23] 34769303 28493559 8260491 69278394 23200460 ...&#xA;#&amp;gt;   ..$ Percent Sampling Error: num [1:23] 8.7 19.8 25.69 9.23 20.17 ...&#xA;#&amp;gt;   ..- attr(*, &#34;.internal.selfref&#34;)=&amp;lt;externalptr&amp;gt; &#xA;#&amp;gt;   ..- attr(*, &#34;sorted&#34;)= chr &#34;ESTN_UNIT&#34;&#xA;#&amp;gt;  $ raw    :List of 13&#xA;#&amp;gt;   ..$ unit_totest  :&#39;data.frame&#39;:    23 obs. of  18 variables:&#xA;#&amp;gt;   ..$ domdat       :&#39;data.frame&#39;:    3210 obs. of  14 variables:&#xA;#&amp;gt;   ..$ plotweights  :List of 1&#xA;#&amp;gt;   ..$ estvar       : chr &#34;BA&#34;&#xA;#&amp;gt;   ..$ estvar.filter: chr &#34;STATUSCD == 1&#34;&#xA;#&amp;gt;   ..$ module       : chr &#34;MA&#34;&#xA;#&amp;gt;   ..$ esttype      : chr &#34;TREE&#34;&#xA;#&amp;gt;   ..$ MAmethod     : chr &#34;greg&#34;&#xA;#&amp;gt;   ..$ predselectlst:List of 1&#xA;#&amp;gt;   ..$ rowvar       : chr &#34;TOTAL&#34;&#xA;#&amp;gt;   ..$ colvar       : chr &#34;NONE&#34;&#xA;#&amp;gt;   ..$ areaunits    : chr &#34;acres&#34;&#xA;#&amp;gt;   ..$ estunits     : int [1:23] 1 3 5 7 9 11 13 15 17 19 ...&#xA;#&amp;gt;  $ statecd: int 56&#xA;#&amp;gt;  $ invyr  : int [1:3] 2011 2012 2013&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>