<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-15T01:41:24Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cran/ggflowchart</title>
    <updated>2023-05-15T01:41:24Z</updated>
    <id>tag:github.com,2023-05-15:/cran/ggflowchart</id>
    <link href="https://github.com/cran/ggflowchart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;❗ This is a read-only mirror of the CRAN R package repository. ggflowchart — Flowcharts with &#39;ggplot2&#39;. Homepage: https://nrennie.github.io/ggflowchart/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nrennie/ggflowchart/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/nrennie/ggflowchart/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h1&gt;{ggflowchart} &lt;img src=&#34;https://raw.githubusercontent.com/cran/ggflowchart/master/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;{ggflowchart} is an R package for producing flowcharts using {ggplot2}.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the package from CRAN using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;ggflowchart&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or install the development version from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;nrennie/ggflowchart&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The idea of {ggflowchart} is to create simple flowcharts with minimal effort. Currently, all flowcharts are constructed using the &lt;code&gt;ggflowchart()&lt;/code&gt; function. For the most basic flowchart, it takes as input a data frame containing (at least) two columns for the start and end points of the edges in the flowchart.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- tibble::tibble(from = c(&#34;A&#34;, &#34;A&#34;, &#34;A&#34;, &#34;B&#34;, &#34;C&#34;, &#34;F&#34;),&#xA;                       to = c(&#34;B&#34;, &#34;C&#34;, &#34;D&#34;, &#34;E&#34;, &#34;F&#34;, &#34;G&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The flowchart is then created using &lt;code&gt;ggflowchart()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggflowchart(data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cran/ggflowchart/master/man/figures/README-minimal.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See vignettes for further examples of usage.&lt;/p&gt; &#xA;&lt;h2&gt;Upcoming features&lt;/h2&gt; &#xA;&lt;p&gt;Note: this package is currently a work-in-progress. Upcoming features that are currently listed as issues being worked on include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Changing node outline &lt;code&gt;colour&lt;/code&gt; based on node attributes.&lt;/li&gt; &#xA; &lt;li&gt;Changing &lt;code&gt;linetype&lt;/code&gt; and &lt;code&gt;colour&lt;/code&gt; of arrows based on edge attributes.&lt;/li&gt; &#xA; &lt;li&gt;Same-level arrows (currently an issue with crossing over).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have a suggestion of an additional feature, or find a bug, please file an issue on the &lt;a href=&#34;https://github.com/nrennie/ggflowchart/issues&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>grambank/rgrambank</title>
    <updated>2023-05-15T01:41:24Z</updated>
    <id>tag:github.com,2023-05-15:/grambank/rgrambank</id>
    <link href="https://github.com/grambank/rgrambank" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package to access and analyse Grambank&#39;s CLDF data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rgrambank&lt;/h1&gt; &#xA;&lt;p&gt;R package to access and analyse Grambank&#39;s CLDF data&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>duckdblabs/duckplyr</title>
    <updated>2023-05-15T01:41:24Z</updated>
    <id>tag:github.com,2023-05-15:/duckdblabs/duckplyr</id>
    <link href="https://github.com/duckdblabs/duckplyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;duckplyr&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of duckplyr is to …&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of duckplyr from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre class=&#34;chroma&#34;&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# install.packages(&#34;pak&#34;, repos = sprintf(&#34;https://r-lib.github.io/p/pak/stable/%s/%s/%s&#34;, .Platform$pkgType, R.Version()$os, R.Version()$arch))&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nf&#34;&gt;pak&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&lt;a href=&#34;http://pak.r-lib.org/reference/pak.html&#34;&gt;pak&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;duckdblabs/duckplyr&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;This is a basic example which shows you how to solve a common problem:&lt;/p&gt; &#xA;&lt;pre class=&#34;chroma&#34;&gt;&#xA;&lt;span&gt;&lt;span class=&#34;kr&#34;&gt;&lt;a href=&#34;https://rdrr.io/r/base/library.html&#34;&gt;library&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&lt;a href=&#34;https://duckdb.org/&#34;&gt;duckdb&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; Loading required package: DBI&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;kr&#34;&gt;&lt;a href=&#34;https://rdrr.io/r/base/library.html&#34;&gt;library&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&lt;a href=&#34;https://github.com/duckdblabs/duckplyr&#34;&gt;duckplyr&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# Use `as_duckplyr_df()` to enable processing with duckdb:&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;palmerpenguins&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&lt;a href=&#34;https://allisonhorst.github.io/palmerpenguins/reference/penguins.html&#34;&gt;penguins&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;as_duckplyr_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;transmute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bill_area &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;bill_length_mm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;bill_depth_mm&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;bill_length_mm&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;species&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;&lt;a href=&#34;https://rdrr.io/r/stats/filter.html&#34;&gt;filter&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;bill_length_mm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;bill_length_mm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# The result is a data frame or tibble, with its own class.&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nf&#34;&gt;&lt;a href=&#34;https://rdrr.io/r/base/class.html&#34;&gt;class&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; [1] &#34;duckplyr_df&#34; &#34;tbl_df&#34; &#34;tbl&#34; &#34;data.frame&#34;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nf&#34;&gt;&lt;a href=&#34;https://rdrr.io/r/base/names.html&#34;&gt;names&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; [1] &#34;bill_area&#34; &#34;species&#34; &#34;sex&#34;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# duckdb is responsible for eventually carrying out the operations:&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;/span&gt;&#xA;&lt;span&gt;  &lt;span class=&#34;nf&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ┌───────────────────────────┐&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ PROJECTION │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ bill_area │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ species │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ sex │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; └─────────────┬─────────────┘ &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ┌─────────────┴─────────────┐&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ FILTER │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ (bill_length_mm &amp;lt; 40.0) │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; └─────────────┬─────────────┘ &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ┌─────────────┴─────────────┐&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ R_DATAFRAME_SCAN │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ data.frame │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; │ EC=344 │&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; └───────────────────────────┘&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# The contents of this data frame are computed only upon request:&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; materializing:&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ---------------------&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; --- Relation Tree ---&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ---------------------&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; Projection [bill_area as bill_area, species as species, sex as sex]&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; Filter [&amp;lt;(bill_length_mm, 40.0)]&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; Projection [*(bill_length_mm, bill_depth_mm) as bill_area, bill_length_mm as bill_length_mm, species as species, sex as sex]&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; r_dataframe_scan(0x12c0a8a58)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ---------------------&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; -- Result Columns --&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; ---------------------&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; - bill_area (DOUBLE)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; - species (species)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; - sex (sex)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;# A tibble: 100 × 3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;bill_area&lt;/span&gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;species&lt;/span&gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;sex&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;dbl&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;fct&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;fct&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 1&lt;/span&gt; 731. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 2&lt;/span&gt; 687. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 3&lt;/span&gt; 708. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 4&lt;/span&gt; 810. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 5&lt;/span&gt; 692. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 6&lt;/span&gt; 768. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 7&lt;/span&gt; 617. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 8&lt;/span&gt; 646. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 9&lt;/span&gt; 654. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;10&lt;/span&gt; 818. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;# … with 90 more rows&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;# Once computed, the results remain available as a data frame:&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;nv&#34;&gt;out&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;# A tibble: 100 × 3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;bill_area&lt;/span&gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;species&lt;/span&gt; &lt;span style=&#34;font-weight: bold;&#34;&gt;sex&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;dbl&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;fct&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #555555; font-style: italic;&#34;&gt;&amp;lt;fct&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 1&lt;/span&gt; 731. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 2&lt;/span&gt; 687. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 3&lt;/span&gt; 708. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 4&lt;/span&gt; 810. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 5&lt;/span&gt; 692. Adelie female&lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 6&lt;/span&gt; 768. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 7&lt;/span&gt; 617. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 8&lt;/span&gt; 646. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt; 9&lt;/span&gt; 654. Adelie &lt;span style=&#34;color: #BB0000;&#34;&gt;NA&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;10&lt;/span&gt; 818. Adelie male &lt;/span&gt;&lt;/span&gt;&#xA;&lt;span&gt;&lt;span class=&#34;c&#34;&gt;#&amp;gt; &lt;span style=&#34;color: #555555;&#34;&gt;# … with 90 more rows&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>