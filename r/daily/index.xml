<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T01:45:29Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>VictimOfMaths/Maps</title>
    <updated>2022-08-21T01:45:29Z</updated>
    <id>tag:github.com,2022-08-21:/VictimOfMaths/Maps</id>
    <link href="https://github.com/VictimOfMaths/Maps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Maps of stuff&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Maps&lt;/h1&gt; &#xA;&lt;p&gt;Maps of stuff&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/BivariateAlcDrug.R&#34;&gt;BivariateAlcDrug.R&lt;/a&gt; generates a bivariate map of alcohol-specific and drug misuse deaths for all 152 Local Authorities/Counties &amp;amp; Unitary Authorities in England.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/BivariateAlcDrugGB.R&#34;&gt;BivariateAlcDrugsGB.R&lt;/a&gt; does the same, but including Scottish Local Authorities as well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/VictimOfMaths/Maps/raw/master/BivariateAlcDrugsGB.png&#34; alt=&#34;Bivariate alcohol and drug death map&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/HLEbyLA&#34;&gt;HLEbyLA.R&lt;/a&gt; (using {rgdal} and geom_map()) and &lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/HLEbyLAv2.R&#34;&gt;HLEbyLA v2.R&lt;/a&gt; (using {sf} and geom_sf()) generate a map of healthy life expectancy by Local Authority and sex across England&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/VictimOfMaths/Maps/raw/master/HLEbyLA.png&#34; alt=&#34;HLE map&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/ConstHexTern2019.R&#34;&gt;ConstHexTern.R&lt;/a&gt; generates a hex map of English electoral constituencies, coloured by vote share between the three main parties at the 2019 General Election, using the wonderful {tricolore} package, with a hex map from {parlitools}.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/VictimOfMaths/Maps/raw/master/ConstHexTern2019.png&#34; alt=&#34;Tricolore Hex Map&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VictimOfMaths/Maps/raw/master/COVIDVaxvsBiden.R&#34;&gt;COVIDVaxvsBiden.R&lt;/a&gt; combines data on COVID vaccination coverage at US county level with voting data on the proportion of 2020 presidential election votes which went to Joe Biden.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/VictimOfMaths/Maps/raw/master/COVIDVaxvsBidenMap.png&#34; alt=&#34;COVID Vax vs Biden Bivariate Map&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kjhealy/socviz</title>
    <updated>2022-08-21T01:45:29Z</updated>
    <id>tag:github.com,2022-08-21:/kjhealy/socviz</id>
    <link href="https://github.com/kjhealy/socviz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Support files for a data visualization course and book&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;socviz &lt;img src=&#34;https://raw.githubusercontent.com/kjhealy/socviz/master/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kjhealy/socviz/actions&#34;&gt;&lt;img src=&#34;https://github.com/kjhealy/socviz/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;This is an R package of datasets, functions, and course materials to go along with the book &lt;em&gt;&lt;a href=&#34;https://amzn.to/2vfAixM&#34;&gt;Data Visualization: A Practical Introduction&lt;/a&gt;&lt;/em&gt; (Princeton University Press, 2019).&lt;/p&gt; &#xA;&lt;img src=&#34;http://socviz.co/assets/dv-cover-pupress.jpg&#34; width=&#34;75%&#34;&gt; &#xA;&lt;h2&gt;What&#39;s in this Package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;socviz&lt;/code&gt; package contains about twenty five datasets and a number of utility and convenience functions. Most of them are used in &lt;em&gt;&lt;a href=&#34;https://amzn.to/2vfAixM&#34;&gt;Data Visualization: A Practical Introduction&lt;/a&gt;&lt;/em&gt; (&lt;code&gt;http://socviz.co&lt;/code&gt;), and there are also a few others as well for self-learners and students to practice their skills on.&lt;/p&gt; &#xA;&lt;p&gt;A course packet is also included. This is a zipped file containing an &lt;a href=&#34;http://rstudio.com&#34;&gt;R Studio&lt;/a&gt; project consisting of a nine &lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;R Markdown&lt;/a&gt; documents that parallel the chapters in the book. They contain the code for almost all the figures in the book (and a few more besides). Some support files are also included, to help demonstrate things like reading in your own data locally in R.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the package, you can follow the instructions in the Preface to the book. Alternatively, first download and install R for &lt;a href=&#34;https://cran.r-project.org/bin/macosx/&#34;&gt;MacOS&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/bin/windows/&#34;&gt;Windows&lt;/a&gt; or &lt;a href=&#34;https://cran.r-project.org/bin/linux/&#34;&gt;Linux&lt;/a&gt;, as appropriate. Then download and install &lt;a href=&#34;http://rstudio.com/download/&#34;&gt;RStudio&lt;/a&gt;. Launch RStudio and then type the following code at the Console prompt (&lt;code&gt;&amp;gt; &lt;/code&gt;), hitting return at the end of each line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;&#xA;my_packages &amp;lt;- c(&#34;tidyverse&#34;, &#34;fs&#34;, &#34;devtools&#34;)&#xA;install.packages(my_packages)&#xA;&#xA;install.packages(&#34;socviz&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the development version of &lt;code&gt;socviz&lt;/code&gt;, instead of &lt;code&gt;install.packages(&#34;socviz&#34;)&lt;/code&gt; do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;devtools::install_github(&#34;kjhealy/socviz&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once everything has downloaded and been installed (which may take a little while), load the &lt;code&gt;socviz&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(socviz)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The Course Packet&lt;/h2&gt; &#xA;&lt;p&gt;The supporting materials are contained in a compressed &lt;code&gt;.zip&lt;/code&gt; file. To extract them to your Desktop, make sure the &lt;code&gt;socviz&lt;/code&gt; package is loaded as described above. Then do something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;setup_course_notes(folder = &#34;~/Desktop&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can choose the destination folder, but you must supply one. Here, the &lt;code&gt;dataviz_course_notes.zip&lt;/code&gt; file will be copied to your Desktop, and uncompressed there into a folder called &lt;code&gt;dataviz_course_notes&lt;/code&gt;. Open the folder, and double-click the file named &lt;code&gt;dataviz.Rproj&lt;/code&gt; to launch the project as a new RStudio session. If you want to uncompress the file somewhere other than your Desktop, e.g. your Documents folder, you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;setup_course_notes(folder = &#34;~/Documents&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More about the Datasets and Functions&lt;/h2&gt; &#xA;&lt;p&gt;The included datasets and functions are documented at &lt;a href=&#34;http://kjhealy.github.io/socviz/reference/&#34;&gt;http://kjhealy.github.io/socviz/reference/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dreamRs/shinyWidgets</title>
    <updated>2022-08-21T01:45:29Z</updated>
    <id>tag:github.com,2022-08-21:/dreamRs/shinyWidgets</id>
    <link href="https://github.com/dreamRs/shinyWidgets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;shinyWidgets : Extend widgets available in shiny&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shinyWidgets&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Extend widgets available in &lt;a href=&#34;https://github.com/rstudio/shiny&#34;&gt;shiny&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=shinyWidgets&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/shinyWidgets&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=shinyWidgets&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/shinyWidgets&#34; alt=&#34;cranlogs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cranchecks.info/pkgs/shinyWidgets&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/shinyWidgets&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/dreamRs/shinyWidgets?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/dreamRs/shinyWidgets/master.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/dreamRs/shinyWidgets&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/dreamRs/shinyWidgets?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dreamRs/shinyWidgets/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/dreamRs/shinyWidgets/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This package offers custom widgets and other components to enhance your shiny applications.&lt;/p&gt; &#xA;&lt;p&gt;You can replace classical checkboxes with switch button, add colors to radio buttons and checkbox group, use buttons as radio or checkboxes. Each widget has an &lt;code&gt;update&lt;/code&gt; method to change the value of an input from the server.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://CRAN.R-project.org/package=shinyWidgets&#34;&gt;CRAN&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;shinyWidgets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the development version from &lt;a href=&#34;https://github.com/dreamRs/shinyWidgets&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;dreamRs/shinyWidgets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;A gallery application is included in the package. Once installed, use the following command to launch it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;shinyWidgets::shinyWidgetsGallery()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A live version is available here : &lt;a href=&#34;http://shinyapps.dreamrs.fr/shinyWidgets&#34;&gt;http://shinyapps.dreamrs.fr/shinyWidgets&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bootstrap switch&lt;/h3&gt; &#xA;&lt;p&gt;Turn checkboxes into toggle switches :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/switchInput.png&#34; alt=&#34;switchInput&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;switchInput(inputId = &#34;id&#34;, value = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Material switch&lt;/h3&gt; &#xA;&lt;p&gt;Turn checkboxes into toggle switches :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/materialSwitch.png&#34; alt=&#34;materialSwitch&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;materialSwitch(inputId = &#34;id&#34;, label = &#34;Primary switch&#34;, status = &#34;danger&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pretty Checkbox&lt;/h3&gt; &#xA;&lt;p&gt;Checkbox and radio buttons with the beautiful CSS library &lt;a href=&#34;https://lokesh-coder.github.io/pretty-checkbox/&#34;&gt;pretty-checkbox&lt;/a&gt; : &lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/pretty.png&#34; alt=&#34;prettycheckbox&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;prettyCheckbox(&#xA;  inputId = &#34;pretty_1&#34;, label = &#34;Check me!&#34;, icon = icon(&#34;check&#34;)&#xA;),&#xA;prettyCheckbox(&#xA;  inputId = &#34;pretty_2&#34;, label = &#34;Check me!&#34;, icon = icon(&#34;thumbs-up&#34;), &#xA;  status = &#34;default&#34;, shape = &#34;curve&#34;, animation = &#34;pulse&#34;&#xA;),&#xA;prettyCheckbox(&#xA;  inputId = &#34;pretty_3&#34;, label = &#34;Check me!&#34;, icon = icon(&#34;users&#34;), &#xA;  animation = &#34;pulse&#34;, plain = TRUE, outline = TRUE&#xA;),&#xA;prettyCheckbox(&#xA;  inputId = &#34;pretty_4&#34;, label = &#34;Check me!&#34;,&#xA;  status = &#34;success&#34;, outline = TRUE&#xA;),&#xA;prettyCheckbox(&#xA;  inputId = &#34;pretty_5&#34;, label = &#34;Check me!&#34;,&#xA;  shape = &#34;round&#34;, outline = TRUE, status = &#34;info&#34;&#xA;),&#xA;&#xA;# ...&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sweet Alert&lt;/h3&gt; &#xA;&lt;p&gt;Show an alert message to the user to provide some feedback, via &lt;a href=&#34;https://sweetalert2.github.io/&#34;&gt;sweetalert2&lt;/a&gt; library:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/show_alert.png&#34; alt=&#34;sendSweetAlert&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See examples in &lt;code&gt;?show_alert&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Request confirmation from the user :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/ask_confirmation.png&#34; alt=&#34;confirmSweetAlert&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See examples in &lt;code&gt;?ask_confirmation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Slider Text&lt;/h3&gt; &#xA;&lt;p&gt;Slider with strings, to pass whatever you want : &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/sliderText.png&#34; alt=&#34;sliderText&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sliderTextInput(&#xA;  inputId = &#34;mySliderText&#34;, &#xA;  label = &#34;Your choice:&#34;, &#xA;  grid = TRUE, &#xA;  force_edges = TRUE,&#xA;  choices = c(&#34;Strongly disagree&#34;,&#xA;              &#34;Disagree&#34;, &#34;Neither agree nor disagree&#34;, &#xA;              &#34;Agree&#34;, &#34;Strongly agree&#34;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Select picker&lt;/h3&gt; &#xA;&lt;p&gt;Dropdown menu with a lot of options :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/pickerInput.png&#34; alt=&#34;pickerInput&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pickerInput(&#xA;  inputId = &#34;myPicker&#34;, &#xA;  label = &#34;Select/deselect all + format selected&#34;, &#xA;  choices = LETTERS, &#xA;  options = list(&#xA;    `actions-box` = TRUE, &#xA;    size = 10,&#xA;    `selected-text-format` = &#34;count &amp;gt; 3&#34;&#xA;  ), &#xA;  multiple = TRUE&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Checkbox and radio buttons&lt;/h3&gt; &#xA;&lt;p&gt;Turn buttons into checkbox or radio :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/checkboxGroupButtons.png&#34; alt=&#34;checkboxGroupButtons&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;checkboxGroupButtons(&#xA;  inputId = &#34;somevalue&#34;, label = &#34;Make a choice :&#34;, &#xA;  choices = c(&#34;Choice A&#34;, &#34;Choice B&#34;, &#34; Choice C&#34;, &#34;Choice D&#34;), &#xA;  justified = TRUE, status = &#34;primary&#34;,&#xA;  checkIcon = list(yes = icon(&#34;ok&#34;, lib = &#34;glyphicon&#34;), no = icon(&#34;remove&#34;, lib = &#34;glyphicon&#34;))&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Search input&lt;/h3&gt; &#xA;&lt;p&gt;A text input only triggered by hitting &#39;Enter&#39; or clicking search button :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/search_input.png&#34; alt=&#34;search_input&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;searchInput(&#xA;  inputId = &#34;id&#34;, &#xA;  label = &#34;Enter your search :&#34;, &#xA;  placeholder = &#34;This is a placeholder&#34;, &#xA;  btnSearch = icon(&#34;search&#34;), &#xA;  btnReset = icon(&#34;remove&#34;), &#xA;  width = &#34;100%&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dropdown button&lt;/h3&gt; &#xA;&lt;p&gt;Hide input in a button : &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/dropdown_btn_off.png&#34; alt=&#34;dropdown_off&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dreamRs/shinyWidgets/master/man/figures/dropdown_btn_on.png&#34; alt=&#34;dropdown_on&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dropdownButton(&#xA;  tags$h3(&#34;List of Input&#34;),&#xA;  selectInput(inputId = &#39;xcol&#39;, label = &#39;X Variable&#39;, choices = names(iris)),&#xA;  selectInput(inputId = &#39;ycol&#39;, label = &#39;Y Variable&#39;, choices = names(iris), selected = names(iris)[[2]]),&#xA;  sliderInput(inputId = &#39;clusters&#39;, label = &#39;Cluster count&#39;, value = 3, min = 1, max = 9),&#xA;  circle = TRUE, status = &#34;danger&#34;, icon = icon(&#34;cog&#34;), width = &#34;300px&#34;,&#xA;  tooltip = tooltipOptions(title = &#34;Click to see inputs !&#34;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also &lt;code&gt;?dropMenu()&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>