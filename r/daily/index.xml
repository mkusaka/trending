<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T01:51:53Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mdhall272/ggarchery</title>
    <updated>2022-07-24T01:51:53Z</updated>
    <id>tag:github.com,2022-07-24:/mdhall272/ggarchery</id>
    <link href="https://github.com/mdhall272/ggarchery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible segment geoms with arrows for ggplot2&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggarchery: Flexible segment geoms with arrows for ggplot2&lt;/h1&gt; &#xA;&lt;p&gt;ggarchery is intended to extend &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&#39;s handling of segments with arrowheads. At present it contains one geom and one position adjustment.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;geom_arrowsegment()&lt;/code&gt; allows placement of one or more arrowheads at any point on a segment&lt;/h2&gt; &#xA;&lt;p&gt;First, let&#39;s generate some data that would be understood by &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&#39;s normal &lt;code&gt;geom_segment()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(tidyverse)&#xA;library(ggarchery)&#xA;&#xA;tbl &amp;lt;- tibble(x = c(0.1, 0.2), xend = c(0.1, 0.8), y = c(0.1, 0.5), yend = c(0.7, 0.9))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default behaviour of &lt;code&gt;geom_arrowsegment()&lt;/code&gt; mimics that of &lt;code&gt;geom_segment(arrow = arrow())&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_segment(aes(x = x, xend = xend, y = y, yend = yend), arrow = arrow()) + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_segment_example.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend)) + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example1.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;The &lt;code&gt;arrows&lt;/code&gt; parameter of &lt;code&gt;geom_arrowsegment()&lt;/code&gt; also behaves exactly like the &lt;code&gt;arrow&lt;/code&gt; parameter of &lt;code&gt;geom_segment&lt;/code&gt;, as a call to &lt;code&gt;grid::arrow()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), arrows = arrow(type = &#39;closed&#39;)) + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example2.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Now for the interesting bit. Suppose that we would like the arrowhead to appear at the midpoint of the segment, rather than the end. This can be done by specifying &lt;code&gt;arrow_positions = 0.5&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), arrow_positions = 0.5) + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example3.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Control of the arrow segment works as before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), &#xA;                    arrow_positions = 0.5, &#xA;                    arrows = arrow(type = &#39;closed&#39;)) + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example4.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Other aesthetics also work as you would hope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tbl &amp;lt;- tbl %&amp;gt;% mutate(col = c(&#34;A&#34;, &#34;B&#34;))&#xA;&#xA;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend, col = col), arrow_positions = 0.5)  + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example5.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;You can also define multiple arrowheads by making &lt;code&gt;arrow_positions&lt;/code&gt; a vector of length greater than 1. All values are expected to fall between 0 and 1, and not be exactly 0:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), arrow_positions = c(0.25, 0.75))  + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example6.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;If one value is 1, then the final arrowhead appears at the end:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), arrow_positions = c(0.25, 1))  + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example7.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;The look of each arrow can also be controlled separately by making &lt;code&gt;arrows&lt;/code&gt; a list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), arrow_positions = c(0.25, 1), &#xA;                    arrows = list(arrow(angle = 10), arrow(type = &#39;closed&#39;)))  + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example8.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;The &lt;code&gt;arrow_fills&lt;/code&gt; option also mimics &lt;code&gt;arrow.fill&lt;/code&gt; of &lt;code&gt;geom_segment()&lt;/code&gt; but can be a vector.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(tbl) + &#xA;  geom_arrowsegment(aes(x = x, xend = xend, y = y, yend = yend), &#xA;                    arrow_positions = c(0.25, 1), &#xA;                    arrow_fills = c(&#34;indianred3&#34;, &#34;dodgerblue3&#34;), &#xA;                    arrows = arrow(type = &#34;closed&#34;))  + &#xA;  xlim(c(0,1)) +&#xA;  ylim(c(0,1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/geom_arrowsegment_example9.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Finally, the geom can be used as an annotation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(mtcars) + &#xA;  geom_point(aes(x = disp, y=hp)) + &#xA;  annotate(geom = &#34;arrowsegment&#34;, &#xA;           x = 170, &#xA;           y=200, &#xA;           xend = 145, &#xA;           yend = 175, &#xA;           arrow_positions = 0.6, &#xA;           arrows = arrow(type = &#34;closed&#34;, length = unit(0.1, &#34;inches&#34;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/annotate_example.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;h2&gt;&lt;code&gt;position_attractsegment()&lt;/code&gt; allows you to automatically shave the ends of arrow segments&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;position_attractsegment()&lt;/code&gt; is intended to solve the following problem. Suppose you have nicely laid out a set of labelled points:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pt.tbl &amp;lt;- tibble(x = c(0.25, 0.5, 0.75), y = c(0.25, 0.5, 0.75), labels = c(&#34;A&#34;, &#34;B&#34;, &#34;C&#34;))&#xA;&#xA;ggplot(pt.tbl) + &#xA;  geom_point(aes(x,y, fill = labels), size =6, shape = 21) +&#xA;  geom_text(aes(x,y, label = labels)) +&#xA;  xlim(c(0, 1)) +&#xA;  ylim(c(0, 1)) +&#xA;  scale_fill_discrete(guide = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/position_attractsegment_example1.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;If you wish to connect these points using geom_segment() with an arrow, the output is a little ugly, as the lines intersect the points:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sg.tbl &amp;lt;- tibble(x = c(0.25, 0.5), y = c(0.25, 0.5), xend = c(0.5, 0.75), yend = c(0.5, 0.75))&#xA;&#xA;ggplot(pt.tbl) + &#xA;  geom_point(aes(x,y, fill = labels), size =6, shape = 21) +&#xA;  geom_text(aes(x,y, label = labels)) +&#xA;  geom_segment(data = sg.tbl, &#xA;               aes(x = x, xend = xend, y = y, yend = yend), &#xA;               arrow = arrow()) +&#xA;  xlim(c(0, 1)) +&#xA;  ylim(c(0, 1)) +&#xA;  scale_fill_discrete(guide = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/position_attractsegment_example2.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;position_attractsegment()&lt;/code&gt; works by shortening the segment at the start and the end (by &#34;attracting&#34; the start and end points towards each other). It can do this in two ways, as determined by the &lt;code&gt;type_shave&lt;/code&gt; option. If &lt;code&gt;type_shave = &#34;proportion&#34;&lt;/code&gt; (the default), then it takes the proportions &lt;code&gt;start_shave&lt;/code&gt; and &lt;code&gt;end_shave&lt;/code&gt; away:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(pt.tbl) + &#xA;  geom_point(aes(x,y, fill = labels), size =6, shape = 21) +&#xA;  geom_text(aes(x,y, label = labels)) +&#xA;  geom_segment(data = sg.tbl, &#xA;               aes(x = x, xend = xend, y = y, yend = yend), &#xA;               arrow = arrow(), &#xA;               position = position_attractsegment(start_shave = 0.1, end_shave = 0.1)) +&#xA;  xlim(c(0, 1)) +&#xA;  ylim(c(0, 1)) +&#xA;  scale_fill_discrete(guide = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/position_attractsegment_example3.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Alternatively, if type_shave = &#34;distance&#34; then the amount removed is in graph units. This allows for finer control, but has strange effects if the dimensions of the x and y axes are not the same and is only really recommended in combination with &lt;code&gt;coord_fixed()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(pt.tbl)+&#xA;  geom_segment(data = sg.tbl, aes(x = x, xend = xend, y = y, yend = yend), arrow = arrow(), &#xA;               position = position_attractsegment(start_shave = 0, end_shave = 0.05, type_shave = &#34;distance&#34;)) +&#xA;  geom_point(aes(x,y, fill = labels), size =6, shape = 21) +&#xA;  geom_text(aes(x,y, label = labels))  +&#xA;  xlim(c(0, 1)) +&#xA;  ylim(c(0, 1)) +&#xA;  scale_fill_discrete(guide = &#34;none&#34;) +&#xA;  coord_fixed()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/position_attractsegment_example4.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;(Note here we shaved only the end of the segment, and drew the segment first.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;geom_arrowsegment()&lt;/code&gt; and &lt;code&gt;position_attractsegment()&lt;/code&gt; can naturally be used in combination:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ggplot(pt.tbl)+&#xA;  geom_arrowsegment(data = sg.tbl, aes(x = x, xend = xend, y = y, yend = yend), &#xA;                    arrow_positions = c(0.5, 0.6), &#xA;                    arrows = arrow(length = unit(0.1, &#34;inches&#34;)), &#xA;                    position = position_attractsegment(start_shave = 0.05, &#xA;                                                       end_shave = 0.05, &#xA;                                                       type_shave = &#34;distance&#34;)) +&#xA;  geom_point(aes(x,y, fill = labels), size =6, shape = 21) +&#xA;  geom_text(aes(x,y, label = labels))  +&#xA;  xlim(c(0, 1)) +&#xA;  ylim(c(0, 1)) +&#xA;  scale_fill_discrete(guide = &#34;none&#34;) +&#xA;  coord_fixed()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mdhall272/ggarchery/main/man/figures/position_attractsegment_example5.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Current these replace only &lt;code&gt;geom_segment()&lt;/code&gt; and work only for linear coordinate systems. I would like to extend to &lt;code&gt;geom_curve()&lt;/code&gt; but the intricacies of &lt;code&gt;grid::curveGrob()&lt;/code&gt; make that much more complicated. I am unsure if allowing these for the &lt;code&gt;geom_line()&lt;/code&gt; and &lt;code&gt;geom_path()&lt;/code&gt; parameterisations would be especially useful, but I&#39;m happy to be told they would be.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rweekly/rweekly.org</title>
    <updated>2022-07-24T01:51:53Z</updated>
    <id>tag:github.com,2022-07-24:/rweekly/rweekly.org</id>
    <link href="https://github.com/rweekly/rweekly.org" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Weekly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R Weekly&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://rweekly.org/images/icons/icon-256x256.png&#34;&gt; &#xA;&lt;p&gt;R weekly provides weekly updates from the R community. You are welcome to contribute as long as you follow &lt;a href=&#34;https://raw.githubusercontent.com/rweekly/rweekly.org/gh-pages/CODE_OF_CONDUCT.md&#34;&gt;our code of conduct&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/rweekly/rweekly.org/gh-pages/CONTRIBUTING.md&#34;&gt;our contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to have (my) content shared by R Weekly?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re all about spreading content about R, be it blog posts, tutorials, screencasts, slidedecks, etc. Please help us!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In general for feeds and one time sharing we prefer https over http.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Regular R posts: submit your RSS feed&lt;/h3&gt; &#xA;&lt;p&gt;Submit your blog RSS feed via &lt;a href=&#34;https://rweekly.org/submit&#34;&gt;https://rweekly.org/submit&lt;/a&gt;. If your blog doesn&#39;t have an RSS feed yet, look up for resources / help for doing it, it&#39;s worth it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rweekly.org/feedlist.html&#34;&gt;https://rweekly.org/feedlist.html&lt;/a&gt; is the list of feeds for R Weekly Live&lt;/p&gt; &#xA;&lt;p&gt;What rules are there?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The RSS feed has to be mainly related to R, so if your content mixes R and baking posts please create a specific R feed. Now, if there&#39;s one off topic post once in a while, it&#39;s fine, we&#39;ll remove it from the release.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please💡 Use &lt;a href=&#34;https://validator.w3.org/feed/&#34;&gt;W3C Feed Validation&lt;/a&gt; Service to checks the syntax of Atom or RSS feeds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We don&#39;t need a full content RSS feed since we&#39;ll only use links and titles.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;One off sharing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;An URL to a &lt;strong&gt;free&lt;/strong&gt; resource about R, or using R. If it&#39;s a book, we won&#39;t advertise it unless there&#39;s a free online version. In posts/tutorials, the R code has to be visible or easy to find. We check for duplicates over the last issues.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Via this very GitHub repo. Update the &lt;a href=&#34;https://github.com/rweekly/rweekly.org/raw/gh-pages/draft.md&#34;&gt;draft&lt;/a&gt; post, and create a pull request. Please respect the categories indicated in the &lt;a href=&#34;https://raw.githubusercontent.com/rweekly/rweekly.org/gh-pages/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; but don&#39;t worry, we can reshuffle content as needed. You can suggest an image in the comment of the PR but don&#39;t add images to your PR edits, the editor in charge of the release will pick images.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We prefer PRs because they&#39;re more transparent and make the workflow smoother for us (merging a PR vs copy-pasting from the form output) but if you&#39;re afraid of GitHub use the form... or open a PR anyway, we&#39;ll teach you!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=oNcW5xeV1bw&#34;&gt;Contribute to R-Weekly via Pull Requests: short screencast created by Sina Rüeger demonstrating how you can contribute a new link to the R-Weekly issue via a GitHub pull request&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Submit your links or feeds for R Weekly posts and podcasts via going to &lt;a href=&#34;https://rweekly.org/submit&#34;&gt;https://rweekly.org/submit&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;When?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s best to submit links between Monday and Friday, because we pick links for our highlights poll on Fridays. &lt;span&gt;😉&lt;/span&gt; The issue is frozen on Sundays. No time is indicated because it depends on the timezone &amp;amp; time availabilities of the volunteer editor in charge of the release.&lt;/p&gt; &#xA;&lt;h2&gt;Where does the content come from?&lt;/h2&gt; &#xA;&lt;p&gt;For nitty-gritty details see &lt;a href=&#34;https://github.com/rweekly/rweekly.org/wiki/Release-Editor-FAQ&#34;&gt;the process release editors follow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;From RSS feeds&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From links contributed by the community via PRs or &lt;a href=&#34;https://rweekly.org/submit&#34;&gt;https://rweekly.org/submit&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From editors&#39;, in particular the editor in charge of the release that week, looking over their own Twitter likes, feed readers etc. But really, if you can and are aware of R Weekly, it&#39;s better to proactively submit your content (or content by someone else and that you found great!) rather than to hope we&#39;ll have seen it. We miss cool stuff all the time despite our best efforts!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;h3&gt;Talk with us!&lt;/h3&gt; &#xA;&lt;p&gt;Have a question or great idea about this website?&lt;/p&gt; &#xA;&lt;p&gt;Talk with us on &lt;a href=&#34;https://twitter.com/rweekly_org&#34;&gt;Twitter&lt;/a&gt; or &lt;a href=&#34;https://github.com/rweekly/rweekly.org/issues/new&#34;&gt;an GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Join us!&lt;/h3&gt; &#xA;&lt;p&gt;Are you passionate about sharing content from the R community? After creating at least 10 pull requests, &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSet2Tq_mWWOVsKWxGOSoUg8DzCPlW2-nxIFOSkkRvlUFxQFLw/viewform&#34;&gt;fill in this form&lt;/a&gt; to join our team!&lt;/p&gt; &#xA;&lt;p&gt;Responsabilities of editors&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rweekly/rweekly.org/wiki/Release-Editor-FAQ&#34;&gt;Handle a release every few weeks&lt;/a&gt;. We agree on the schedule and swap weeks as needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vote on the highlight on Saturdays, which can be skipped when you have no time or no opinion. Each release contains at most 3 highlight posts in general. Editors will vote for at most three posts on the R Weekly Slack channel every Saturday. If you do not want to recommend any post, you can skip the vote.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A member will receive a notice about his/her inactive status for two months in the organization. A member will leave R Weekly organization if the inactive status passes 75 days.&lt;/p&gt; &#xA;&lt;h2&gt;Support with Patreon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/rweekly&#34;&gt;Donate to R Weekly with Patreon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks for reading!&lt;/p&gt;</summary>
  </entry>
</feed>