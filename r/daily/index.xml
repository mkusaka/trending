<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-25T01:38:55Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>leonardojo/ggPlantmap</title>
    <updated>2023-09-25T01:38:55Z</updated>
    <id>tag:github.com,2023-09-25:/leonardojo/ggPlantmap</id>
    <link href="https://github.com/leonardojo/ggPlantmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggPlantmap &lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/hex.png&#34; align=&#34;right&#34; height=&#34;250&#34;&gt;&lt;/h1&gt; &#xA;&lt;h6&gt;Version 1.0.0&lt;/h6&gt; &#xA;&lt;h6&gt;Author: Leonardo Jo (&lt;a href=&#34;mailto:l.jo@uu.nl&#34;&gt;l.jo@uu.nl&lt;/a&gt;)&lt;/h6&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ggPlantmap is an open-source R package with the goal of facilitating the generation of informative ggplot maps from plant images to explore quantitative cell-type specific data. When combined with external quantitative data, ggPlantmap can be used for the visualization and displaying of spatial profiles in distinct parts/cells of the plant.&lt;/p&gt; &#xA;&lt;p&gt;Included in the package there is a set of pre-loaded maps created from previously published plant images that can be directly inserted into a ggplot coding workflow. ggPlantmap enables users to plot heatmap signatures of gene expression or any spatial quantitative data onto plant images providing a customizable and extensible platform for visualizing, and analyzing spatial quantitative patterns within specific plant regions This package uses the flexibility of the well-known ggplot2 R package to allow users to tailor maps to their specific research questions. &lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/ggPlantmap.example.jpg&#34; align=&#34;center&#34; width=&#34;1000&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;##install devtools (if you haven&#39;t already)&#xA;install.packages(&#34;devtools&#34;)&#xA;library(devtools)&#xA;&#xA;## Installing from a github respository&#xA;install_github(&#34;leonardojo/ggPlantmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ggPlantmap useful guides (HIGHLY RECOMMENDED!)&lt;/h2&gt; &#xA;&lt;p&gt;I created a step-by-step &lt;a href=&#34;https://github.com/leonardojo/ggPlantmap/raw/main/ggPlantmap.userguide.md&#34;&gt;user guide&lt;/a&gt; to help users navigate through the package.&lt;/p&gt; &#xA;&lt;p&gt;I also created a &lt;a href=&#34;https://github.com/leonardojo/ggPlantmap/raw/main/TutorialforXMLfile.pdf&#34;&gt;step-by-step guide with tips&lt;/a&gt; on how to create your own ggPlantmap.&lt;/p&gt; &#xA;&lt;p&gt;Finally, here are some &lt;a href=&#34;https://github.com/leonardojo/ggPlantmap/raw/main/contributetoggPlantmap.md&#34;&gt;instructions&lt;/a&gt; on how your newly created ggPlantmap can be included in the package.&lt;/p&gt; &#xA;&lt;h2&gt;What is a ggPlantmap?&lt;/h2&gt; &#xA;&lt;p&gt;Each unique ggPlantmap is a table (tibble) object with points coordinates (x,y) of specific points of polygons (ROIs) extracted from plant images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggPlantmap)&#xA;head(ggPm.At.roottip.longitudinal)&#xA;#&amp;gt; # A tibble: 6 × 7&#xA;#&amp;gt;   ROI.name    Level1   Level2 ROI.id point     x     y&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Meristem.QC Meristem QC          1     1  121. -323.&#xA;#&amp;gt; 2 Meristem.QC Meristem QC          1     2  127. -315.&#xA;#&amp;gt; 3 Meristem.QC Meristem QC          1     3  134. -315.&#xA;#&amp;gt; 4 Meristem.QC Meristem QC          1     4  149. -318.&#xA;#&amp;gt; 5 Meristem.QC Meristem QC          1     5  149. -329.&#xA;#&amp;gt; 6 Meristem.QC Meristem QC          1     6  134. -327.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/guide/Slide6.JPG&#34; align=&#34;center&#34; height=&#34;500&#34;&gt; &#xA;&lt;h2&gt;Plotting a ggPlantmap&lt;/h2&gt; &#xA;&lt;p&gt;ggPlantmaps can be easily plotted using the ggPlantmap.plot() function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggPlantmap)&#xA;ggPlantmap.plot(ggPm.At.earlyembryogenesis.devseries,Cell)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggPlantmap.plot(ggPm.At.roottip.longitudinal,Level1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-unnamed-chunk-4-2.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h2&gt;Pre-loaded ggPlantmaps&lt;/h2&gt; &#xA;&lt;p&gt;The package contain a series of pre-loaded ggPlantmaps created from previously published plant images. I hope to update the package with the contribution of the plant research community.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggPlantmap)&#xA;ggPm.summary&#xA;#&amp;gt; # A tibble: 16 × 9&#xA;#&amp;gt;    ggPlantmap.name   Species Tissue Type  Descr…¹ Layers Image…² Made.by Conta…³&#xA;#&amp;gt;    &amp;lt;chr&amp;gt;             &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &#xA;#&amp;gt;  1 ggPm.At.roottip.… Arabid… root   cros… Cross-… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt;  2 ggPm.At.roottip.… Arabid… root   long… Longit… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt;  3 ggPm.At.3weekros… Arabid… roset… top … Top vi… Leaves https:… Leonar… jo.leo…&#xA;#&amp;gt;  4 ggPm.At.leafepid… Arabid… leaf … top … Top vi… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt;  5 ggPm.At.leaf.cro… Arabid… leaves cros… Cross-… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt;  6 ggPm.At.seed.dev… Arabid… seed   deve… Diagra… Cells… https:… Leonar… jo.leo…&#xA;#&amp;gt;  7 ggPm.At.earlyemb… Arabid… embryo deve… Diagra… Cells… https:… Leonar… jo.leo…&#xA;#&amp;gt;  8 ggPm.At.shootape… Arabid… shoot… long… Diagra… Layer… https:… Leonar… jo.leo…&#xA;#&amp;gt;  9 ggPm.At.inflores… Arabid… inflo… cros… Cross-… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt; 10 ggPm.Sl.root.cro… Solanu… root   cros… Cross-… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt; 11 ggPm.At.leaf.top… Arabid… leaf   top … Top vi… Leaves http:/… Leonar… jo.leo…&#xA;#&amp;gt; 12 ggPm.At.rootelon… Arabid… root … long… Longit… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt; 13 ggPm.At.rootmatu… Arabid… root … cros… Cross-… Cells  https:… Leonar… jo.leo…&#xA;#&amp;gt; 14 ggPm.At.flower.d… Arabid… flower diag… Diagra… Tissu… Taiz, … Leonar… jo.leo…&#xA;#&amp;gt; 15 ggPm.At.lateralr… Arabid… later… deve… Diagra… Cells… https:… Leonar… jo.leo…&#xA;#&amp;gt; 16 ggPm.Ms.root.cro… Medica… root   cros… Cross-… Cells  Unpubl… Leonar… jo.leo…&#xA;#&amp;gt; # … with abbreviated variable names ¹​Description, ²​Image.Reference,&#xA;#&amp;gt; #   ³​Contact.Info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/ggPm.someexamples.jpg&#34; align=&#34;center&#34; height=&#34;500&#34;&gt; &#xA;&lt;h2&gt;Color mapping&lt;/h2&gt; &#xA;&lt;p&gt;These maps can be easily loaded into a ggplot coding environment and their color mapping changed based on the distinct layer classification of each ggPlantmap.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-unnamed-chunk-6-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-unnamed-chunk-7-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h2&gt;Overlaying external quantitative data into a ggPlantmap&lt;/h2&gt; &#xA;&lt;p&gt;With ggPlantmap you can overlay quantitative data into your ggPlantmap to visualize it as sort of a heatmap. To do so, you will need another table that contains quantitative data attributed to your ROIs. &lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/guide/Slide7.JPG&#34; align=&#34;center&#34; width=&#34;1200&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This approach can be very helpful for R Shiny app developers to create web interactive tools to visualize quantitative data in plant cell or structures.&lt;/p&gt; &#xA;&lt;p&gt;Some examples of heatmaps generated from available published data: &lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-Slide2.PNG&#34; align=&#34;center&#34; width=&#34;1000&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-Slide3.PNG&#34; align=&#34;center&#34; width=&#34;1000&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Is ggPlantmap only usefull for molecular expression data?&lt;/h2&gt; &#xA;&lt;p&gt;Not at all. ggPlantmap can also be used to produce many other type of plots. Essentially anything that you can trace, you can create! Be creative! I hope to build a community where people explore the usage of ggPlantmap for the communication of Plant science.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-Slide4.PNG&#34; align=&#34;center&#34; width=&#34;1000&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How can I create my own ggPlantmap?&lt;/h2&gt; &#xA;&lt;p&gt;The principle of creating a ggPlantmap is fairly simple. We generate a list of ROIs (region of interests) in the Icy open-source software (&lt;a href=&#34;https://icy.bioimageanalysis.org/&#34;&gt;https://icy.bioimageanalysis.org/&lt;/a&gt;) from any plant image. These ROIs are saved as XML files and later be converted into ggPlantmaps with the XML.to.ggPlantmap() function. &lt;a href=&#34;https://github.com/leonardojo/ggPlantmap/raw/main/TutorialforXMLfile.pdf&#34;&gt;We created step-by-step guide with tips&lt;/a&gt; on how to generate xml images from plant images.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-Slide1.PNG&#34; align=&#34;center&#34; width=&#34;800&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;new.ggPlantmap &amp;lt;- XML.to.ggPlantmap(&#34;data/ggPm.sample.xml&#34;)&#xA;ggPlantmap.plot(new.ggPlantmap,ROI.name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leonardojo/ggPlantmap/main/man/figures/README-unnamed-chunk-8-1.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;Can my ggPlantmap be included in the package?&lt;/h2&gt; &#xA;&lt;p&gt;YES!!! Any Plant map can be included in the package. Here are some &lt;a href=&#34;https://github.com/leonardojo/ggPlantmap/raw/main/contributetoggPlantmap.md&#34;&gt;instructions&lt;/a&gt; on how your newly created ggPlantmap can be included in the package.&lt;/p&gt; &#xA;&lt;p&gt;If you create one, please email me (&lt;a href=&#34;mailto:l.jo@uu.nl&#34;&gt;l.jo@uu.nl&lt;/a&gt;) your ggPlantmap as tab-delimited table and I’ll make sure to include in the package. You will be credited and your information will be displayed in the summary file. I really hope this becomes an organic package with the contribution of the plant research community.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;I would like to acknowledge Kaisa Kajala, Lisa Oskam, Monica Garcia Gomez, Pierre Gautrat and Kyra van der Velde for testing ggPlantmap. I also would like to acknowledge Andres Romanowski for providing some data for the initial tests of ggPlantmap.&lt;/p&gt; &#xA;&lt;h2&gt;How to cite&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-print&lt;/h3&gt; &#xA;&lt;p&gt;Leonardo Jo, Kaisa Kajala. ggPlantmap: an R package for the graphic mapping of plant images. Authorea. September 21, 2023. DOI: 10.22541/au.169531385.58441696/v1&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gadenbuie/epoxy</title>
    <updated>2023-09-25T01:38:55Z</updated>
    <id>tag:github.com,2023-09-25:/gadenbuie/epoxy</id>
    <link href="https://github.com/gadenbuie/epoxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extra-strength glue engines for R Markdown and Quarto&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;http://pkg.garrickadenbuie.com/epoxy/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gadenbuie/epoxy/main/man/figures/logo.png&#34; align=&#34;center&#34; height=&#34;250&#34; alt=&#34;epoxy logo&#34;&gt;&lt;/a&gt;&lt;br&gt; {epoxy} &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;extra-strength &lt;a href=&#34;https://glue.tidyverse.org&#34;&gt;glue&lt;/a&gt;&lt;/b&gt; for scripts, reports, and apps. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- badges: start --&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=epoxy&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/epoxy&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gadenbuie.r-universe.dev&#34;&gt;&lt;img src=&#34;https://gadenbuie.r-universe.dev/badges/epoxy&#34; alt=&#34;epoxy r-universe badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gadenbuie/epoxy/actions&#34;&gt;&lt;img src=&#34;https://github.com/gadenbuie/epoxy/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/gadenbuie/epoxy?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/gadenbuie/epoxy/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gadenbuie/epoxy/raw/main/LICENSE.md&#34; alt=&#34;MIT Licensed.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- badges: end --&gt; &lt;/p&gt; &#xA;&lt;h2&gt;epoxy is super glue&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-report.html&#34;&gt;In R Markdown and Quarto reports&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;epoxy&lt;/code&gt; chunks for extra-strength inline syntax. Just &lt;code&gt;library(epoxy)&lt;/code&gt; in your &lt;a href=&#34;https://rmarkdown.rstudio.com&#34;&gt;R Markdown&lt;/a&gt; or &lt;a href=&#34;https://quarto.org&#34;&gt;Quarto&lt;/a&gt; document to get started. All epoxy chunks make it easy to transform values in place with a &lt;code&gt;{cli}&lt;/code&gt;-inspired inline syntax described in &lt;code&gt;?epoxy_transform_inline&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-script.html&#34;&gt;In R scripts&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The same functions that power epoxy chunks are availble in three flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;epoxy()&lt;/code&gt; for markdown and general purpose outputs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;epoxy_html()&lt;/code&gt; for HTML outputs, with added support for HTML templating (see &lt;code&gt;?epoxy_transform_html&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;epoxy_latex()&lt;/code&gt; for LaTeX reports&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These functions are accompanied by a robust system for chained glue-transformers powered by &lt;code&gt;epoxy_transform()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-shiny.html&#34;&gt;In Shiny apps&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ui_epoxy_html()&lt;/code&gt; makes it easy to update text or HTML dynamically, anywhere in your &lt;a href=&#34;https://shiny.posit.co/&#34;&gt;Shiny&lt;/a&gt; app’s UI. For more complicated situations, &lt;code&gt;ui_epoxy_mustache()&lt;/code&gt; lets you turn any Shiny UI into a template that leverages the &lt;a href=&#34;https://mustache.github.io&#34;&gt;Mustache templating language&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;epoxy in R Markdown and Quarto documents&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://rmarkdown.rstudio.com&#34;&gt;R Markdown&lt;/a&gt; and &lt;a href=&#34;https://quarto.org&#34;&gt;Quarto&lt;/a&gt; documents, &lt;strong&gt;epoxy&lt;/strong&gt; gives you an &lt;code&gt;epoxy&lt;/code&gt; chunk where you can write in markdown, blending prose and data using &lt;a href=&#34;https://glue.tidyverse.org&#34;&gt;glue&lt;/a&gt;’s template syntax.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example using a small list containing data about a &lt;code&gt;movie&lt;/code&gt; (expand the section below to see the full code for &lt;code&gt;movie&lt;/code&gt;). We can use the inline transformer to format the replacement text as we build up a description from this data.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Movie data &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;movie &amp;lt;- list(&#xA;  year = 1989,&#xA;  title = &#34;Back to the Future Part II&#34;,&#xA;  budget = 4e+07,&#xA;  domgross = 118450002,&#xA;  imdb_rating = 7.8,&#xA;  actors = c(&#xA;    &#34;Michael J. Fox&#34;,&#xA;    &#34;Christopher Lloyd&#34;,&#xA;    &#34;Lea Thompson&#34;,&#xA;    &#34;Thomas F. Wilson&#34;&#xA;  ),&#xA;  runtime = 108L&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-default&#34;&gt;```{epoxy}&#xA;The movie {.emph {.titlecase movie$title}}&#xA;was released in {.strong movie$year}.&#xA;It earned {.dollar movie$domgross}&#xA;with a budget of {.dollar movie$budget},&#xA;and it features movie stars&#xA;{.and movie$actors}.&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt;&#xA;  The movie *Back to the Future Part II* was released in **1989**. It earned \$118,450,002 with a budget of \$40,000,000, and it features movie stars Michael J. Fox, Christopher Lloyd, Lea Thompson, and Thomas F. Wilson. &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Learn more about &lt;code&gt;epoxy&lt;/code&gt; chunks – and its siblings &lt;code&gt;epoxy_html&lt;/code&gt; and &lt;code&gt;epoxy_latex&lt;/code&gt; – in &lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy//articles/epoxy.html&#34;&gt;Getting Started&lt;/a&gt;. Or read more about epoxy’s inline formatting in &lt;code&gt;?epoxy_transform_inline&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install epoxy from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;epoxy&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the latest development version of epoxy with &lt;a href=&#34;https://remotes.r-lib.org&#34;&gt;remotes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;gadenbuie/epoxy&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from &lt;a href=&#34;https://gadenbuie.r-universe.dev&#34;&gt;gadenbuie.r-universe.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;options(repos = c(&#xA;  gadenbuie = &#34;https://gadenbuie.r-universe.dev/&#34;,&#xA;  getOption(&#34;repos&#34;)&#xA;))&#xA;&#xA;install.packages(&#34;epoxy&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(epoxy)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loading epoxy adds four new &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/language-engines.html&#34;&gt;knitr engines&lt;/a&gt;, or chunk types. Each type lets you intermix text with R code or data (&lt;code&gt;expr&lt;/code&gt; in the table below), and each is geared toward a different output context.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Engine&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Output Context&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Delimiter&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;epoxy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;all-purpose markdown&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;{expr}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;epoxy_html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;{{expr}}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;epoxy_latex&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LaTeX&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&amp;lt;&amp;lt;expr&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;whisker&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;all-purpose&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mustache.github.io/&#34;&gt;mustache template language&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;Caution:&lt;/strong&gt; Previously, epoxy provided a &lt;code&gt;glue&lt;/code&gt; engine, but this conflicts with a similar chunk engine by the &lt;a href=&#34;https://glue.tidyverse.org&#34;&gt;glue&lt;/a&gt; package. You can update existing documents to use the &lt;code&gt;epoxy&lt;/code&gt; engine, or you can explicitly use epoxy’s &lt;code&gt;glue&lt;/code&gt; chunk by including the following in your setup chunk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_epoxy_glue_engine()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use epoxy&lt;/h2&gt; &#xA;&lt;p&gt;To use epoxy in your R Markdown document, create a new chunk using the engine of your choice. In that chunk, write in markdown, HTML, or LaTeX as needed, wrapping R expressions inside the delimiters for the epoxy chunk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-default&#34;&gt;```{epoxy}&#xA;The average speed of the cars was **{mean(cars$speed)} mph.**&#xA;But on average the distance traveled was only _{mean(cars$dist)}_.&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The average speed of the cars was &lt;strong&gt;15.4 mph&lt;/strong&gt;. But on average the distance traveled was only &lt;em&gt;42.98 ft&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;epoxy&lt;/code&gt; is built around &lt;code&gt;glue::glue()&lt;/code&gt;, which evaluates the R expressions in the &lt;code&gt;{ }&lt;/code&gt; and inserts the results into the string. The chunk above is equivalent to this call to &lt;code&gt;glue::glue()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;glue::glue(&#34;The average speed of the cars was **{mean(cars$speed)} mph**.&#xA;But on average the distance traveled was only _{mean(cars$dist)} ft_.&#34;)&#xA;#&amp;gt; The average speed of the cars was **15.4 mph**.&#xA;#&amp;gt; But on average the distance traveled was only _42.98 ft_.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One immediate advantage of using &lt;code&gt;epoxy&lt;/code&gt; instead of &lt;code&gt;glue::glue()&lt;/code&gt; is that RStudio’s autocompletion feature works inside &lt;code&gt;epoxy&lt;/code&gt; chunks! Typing &lt;code&gt;cars$&lt;/code&gt; in the chunk will suggest the columns of &lt;code&gt;cars&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;There’s a whole lot more that epoxy can do! Learn more:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy/&#34;&gt;epoxy Package Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy//articles/epoxy.html&#34;&gt;Getting Started&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkg.garrickadenbuie.com/epoxy//articles/inline-reporting.html&#34;&gt;Inline Reporting with epoxy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the epoxy project is released with a &lt;a href=&#34;http://pkg.garrickadenbuie.com/epoxy/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>curso-r/voosBR</title>
    <updated>2023-09-25T01:38:55Z</updated>
    <id>tag:github.com,2023-09-25:/curso-r/voosBR</id>
    <link href="https://github.com/curso-r/voosBR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>