<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-06T01:39:05Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bwlewis/irlba</title>
    <updated>2023-12-06T01:39:05Z</updated>
    <id>tag:github.com,2023-12-06:/bwlewis/irlba</id>
    <link href="https://github.com/bwlewis/irlba" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast truncated singular value decompositions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;irlba&lt;/h1&gt; &#xA;&lt;p&gt;Implicitly-restarted Lanczos methods for fast truncated singular value decomposition of sparse and dense matrices (also referred to as partial SVD). IRLBA stands for Augmented, &lt;b&gt;I&lt;/b&gt;mplicitly &lt;b&gt;R&lt;/b&gt;estarted &lt;b&gt;L&lt;/b&gt;anczos &lt;b&gt;B&lt;/b&gt;idiagonalization &lt;b&gt;A&lt;/b&gt;lgorithm. The package provides the following functions (see help on each for details and examples).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;irlba()&lt;/code&gt; partial SVD function&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ssvd()&lt;/code&gt; l1-penalized matrix decompoisition for sparse PCA (based on Shen and Huang&#39;s algorithm)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prcomp_irlba()&lt;/code&gt; principal components function similar to the &lt;code&gt;prcomp&lt;/code&gt; function in stats package for computing the first few principal components of large matrices&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;svdr()&lt;/code&gt; alternate partial SVD function based on randomized SVD (see also the &lt;a href=&#34;https://cran.r-project.org/package=rsvd&#34;&gt;rsvd&lt;/a&gt; package by N. Benjamin Erichson for an alternative implementation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;partial_eigen()&lt;/code&gt; a very limited partial eigenvalue decomposition for symmetric matrices (see the &lt;a href=&#34;https://cran.r-project.org/package=RSpectra&#34;&gt;RSpectra&lt;/a&gt; package for more comprehensive truncated eigenvalue decomposition)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Help documentation for each function includes extensive documentation and examples. Also see the package vignette, &lt;code&gt;vignette(&#34;irlba&#34;, package=&#34;irlba&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An overview web page is here: &lt;a href=&#34;https://bwlewis.github.io/irlba/&#34;&gt;https://bwlewis.github.io/irlba/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;New in 2.3.2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed a regression in &lt;code&gt;prcomp_irlba()&lt;/code&gt; discovered by Xiaojie Qiu, see &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/25&#34;&gt;https://github.com/bwlewis/irlba/issues/25&lt;/a&gt;, and other related problems reported in &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/32&#34;&gt;https://github.com/bwlewis/irlba/issues/32&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Added rchk testing to pre-CRAN submission tests.&lt;/li&gt; &#xA; &lt;li&gt;Fixed a sign bug in &lt;code&gt;ssvd()&lt;/code&gt; found by Alex Poliakov.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s new in Version 2.3.1?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed an &lt;code&gt;irlba()&lt;/code&gt; bug associated with centering (PCA), see &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/21&#34;&gt;https://github.com/bwlewis/irlba/issues/21&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fixed &lt;code&gt;irlba()&lt;/code&gt; scaling to conform to &lt;code&gt;scale&lt;/code&gt;, see &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/22&#34;&gt;https://github.com/bwlewis/irlba/issues/22&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Improved &lt;code&gt;prcomp_irlba()&lt;/code&gt; from a suggestion by N. Benjamin Erichson, see &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/23&#34;&gt;https://github.com/bwlewis/irlba/issues/23&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Significanty changed/improved &lt;code&gt;svdr()&lt;/code&gt; convergence criterion.&lt;/li&gt; &#xA; &lt;li&gt;Added a version of Shen and Huang&#39;s Sparse PCA/SVD L1-penalized matrix decomposition (&lt;code&gt;ssvd()&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Fixed valgrind errors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deprecated features&lt;/h2&gt; &#xA;&lt;p&gt;I will remove &lt;code&gt;partial_eigen()&lt;/code&gt; in a future version. As its documentation states, users are better off using the RSpectra package for eigenvalue computations (although not generally for singular value computations).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;mult&lt;/code&gt; argument is deprecated and will be removed in a future version. We now recommend simply defining a custom class with a custom multiplcation operator. The example below illustrates the old and new approaches.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(irlba)&#xA;set.seed(1)&#xA;A &amp;lt;- matrix(rnorm(100), 10)&#xA;&#xA;# ------------------ old way ----------------------------------------------&#xA;# A custom matrix multiplication function that scales the columns of A&#xA;# (cf the scale option). This function scales the columns of A to unit norm.&#xA;col_scale &amp;lt;- sqrt(apply(A, 2, crossprod))&#xA;mult &amp;lt;- function(x, y)&#xA;        {&#xA;          # check if x is a  vector&#xA;          if (is.vector(x))&#xA;          {&#xA;            return((x %*% y) / col_scale)&#xA;          }&#xA;          # else x is the matrix&#xA;          x %*% (y / col_scale)&#xA;        }&#xA;irlba(A, 3, mult=mult)$d&#xA;## [1] 1.820227 1.622988 1.067185&#xA;&#xA;# Compare with:&#xA;irlba(A, 3, scale=col_scale)$d&#xA;## [1] 1.820227 1.622988 1.067185&#xA;&#xA;# Compare with:&#xA;svd(sweep(A, 2, col_scale, FUN=`/`))$d[1:3]&#xA;## [1] 1.820227 1.622988 1.067185&#xA;&#xA;# ------------------ new way ----------------------------------------------&#xA;setClass(&#34;scaled_matrix&#34;, contains=&#34;matrix&#34;, slots=c(scale=&#34;numeric&#34;))&#xA;setMethod(&#34;%*%&#34;, signature(x=&#34;scaled_matrix&#34;, y=&#34;numeric&#34;), function(x ,y) x@.Data %*% (y / x@scale))&#xA;setMethod(&#34;%*%&#34;, signature(x=&#34;numeric&#34;, y=&#34;scaled_matrix&#34;), function(x ,y) (x %*% y@.Data) / y@scale)&#xA;a &amp;lt;- new(&#34;scaled_matrix&#34;, A, scale=col_scale)&#xA;&#xA;irlba(a, 3)$d&#xA;## [1] 1.820227 1.622988 1.067185&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have learned that using R&#39;s existing S4 system is simpler, easier, and more flexible than using custom arguments with idiosyncratic syntax and behavior. We&#39;ve even used the new approach to implement distributed parallel matrix products for very large problems with amazingly little code.&lt;/p&gt; &#xA;&lt;h2&gt;Wishlist / help wanted...&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More Matrix classes supported in the fast code path&lt;/li&gt; &#xA; &lt;li&gt;Help improving the solver for singular values in tricky cases (basically, for ill-conditioned problems and especially for the smallest singular values); in general this may require a combination of more careful convergence criteria and use of harmonic Ritz values; Dmitriy Selivanov has proposed alternative convergence criteria in &lt;a href=&#34;https://github.com/bwlewis/irlba/issues/29&#34;&gt;https://github.com/bwlewis/irlba/issues/29&lt;/a&gt; for example.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Baglama, James, and Lothar Reichel. &#34;Augmented implicitly restarted Lanczos bidiagonalization methods.&#34; SIAM Journal on Scientific Computing 27.1 (2005): 19-42.&lt;/li&gt; &#xA; &lt;li&gt;Halko, Nathan, Per-Gunnar Martinsson, and Joel A. Tropp. &#34;Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions.&#34; (2009).&lt;/li&gt; &#xA; &lt;li&gt;Shen, Haipeng, and Jianhua Z. Huang. &#34;Sparse principal component analysis via regularized low rank matrix approximation.&#34; Journal of multivariate analysis 99.6 (2008): 1015-1034.&lt;/li&gt; &#xA; &lt;li&gt;Witten, Daniela M., Robert Tibshirani, and Trevor Hastie. &#34;A penalized matrix decomposition, with applications to sparse principal components and canonical correlation analysis.&#34; Biostatistics 10.3 (2009): 515-534.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nhs-r-community/NHSRwaitinglist</title>
    <updated>2023-12-06T01:39:05Z</updated>
    <id>tag:github.com,2023-12-06:/nhs-r-community/NHSRwaitinglist</id>
    <link href="https://github.com/nhs-r-community/NHSRwaitinglist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R-package to implement the waiting list management approach described in this paper by Fong et al https://www.medrxiv.org/content/10.1101/2022.08.23.22279117v1&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NHSRwaitinglist&lt;/h1&gt; &#xA;&lt;p&gt;R-package to implement the waiting list management approach described in this paper by Fong et al &lt;a href=&#34;https://www.medrxiv.org/content/10.1101/2022.08.23.22279117v1&#34;&gt;https://www.medrxiv.org/content/10.1101/2022.08.23.22279117v1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;This is an NHS-R Community project that is open for anyone to contribute to in any way that they are able. Please see the &lt;a href=&#34;https://nhsrway.nhsrcommunity.com/style-guides.html&#34;&gt;NHS-R Way&lt;/a&gt; to read more on the style guides and for &lt;a href=&#34;https://nhsrway.nhsrcommunity.com/code-of-conduct.html&#34;&gt;Code of Conduct&lt;/a&gt; related to any activity or contribution to the NHS-R Community as well as the Code of Conduct in this repository which is generated using &lt;code&gt;usethis::use_code_of_conduct(contact = &#34;nhs.rcommunity@nhs.net&#34;)&lt;/code&gt;. By contributing to this project, you agree to abide by these terms.&lt;/p&gt; &#xA;&lt;p&gt;If you want to learn more about this project, please join the discussion at the &lt;a href=&#34;https://nhsrway.nhsrcommunity.com/community-handbook.html#slack&#34;&gt;NHS-R Community Slack&lt;/a&gt; group and the specific channel #managing-waiting-lists.&lt;/p&gt; &#xA;&lt;p&gt;The simplest way to contribute is to raise an issue detailing the feature or functionality you would like to see added, or any unexpected behaviour or bugs you have experienced.&lt;/p&gt; &#xA;&lt;h3&gt;Pull-Request workflow&lt;/h3&gt; &#xA;&lt;p&gt;You are welcome to also submit Pull Requests and, as the &lt;code&gt;main&lt;/code&gt; branch is protected and won&#39;t accept pushes directly even if you have been added to the repository as a member, the workflow will be (from your own forked repository if you are not a member, or a clone of the repository if you are a member):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create new branch with a descriptive name&lt;/li&gt; &#xA; &lt;li&gt;Commit to the new branch (add code or delete code or make changes)&lt;/li&gt; &#xA; &lt;li&gt;Push the commits&lt;/li&gt; &#xA; &lt;li&gt;Create a pull-request in GitHub to signal that your work is ready to be merged&lt;/li&gt; &#xA; &lt;li&gt;Tag one or more reviewers so that your contribution can be reviewed and merged into &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>