<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-24T01:35:03Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eclarke/ggbeeswarm</title>
    <updated>2022-12-24T01:35:03Z</updated>
    <id>tag:github.com,2022-12-24:/eclarke/ggbeeswarm</id>
    <link href="https://github.com/eclarke/ggbeeswarm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Column scatter / beeswarm-style plots in ggplot2&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beeswarm-style plots with ggplot2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/eclarke/ggbeeswarm&#34;&gt;&lt;img src=&#34;https://travis-ci.org/eclarke/ggbeeswarm.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggbeeswarm&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggbeeswarm&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Beeswarm plots (aka column scatter plots or violin scatter plots) are a way of plotting points that would ordinarily overlap so that they fall next to each other instead. In addition to reducing overplotting, it helps visualize the density of the data at each point (similar to a violin plot), while still showing each data point individually.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ggbeeswarm&lt;/code&gt; provides two different methods to create beeswarm-style plots using &lt;a href=&#34;http://ggplot2.org&#34;&gt;ggplot2&lt;/a&gt;. It does this by adding two new ggplot geom objects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;geom_quasirandom&lt;/code&gt;: Uses a &lt;a href=&#34;http://en.wikipedia.org/wiki/Van_der_Corput_sequence&#34;&gt;van der Corput sequence&lt;/a&gt; or Tukey texturing (Tukey and Tukey “Strips displaying empirical distributions: I. textured dot strips”) to space the dots to avoid overplotting. This uses &lt;a href=&#34;https://github.com/sherrillmix/vipor&#34;&gt;sherrillmix/vipor&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;geom_beeswarm&lt;/code&gt;: Uses the &lt;a href=&#34;https://cran.r-project.org/web/packages/beeswarm/index.html&#34;&gt;beeswarm&lt;/a&gt; library to do point-size based offset.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can handle categorical variables on the y-axis (thanks @smsaladi, @koncina)&lt;/li&gt; &#xA; &lt;li&gt;Automatically dodges if a grouping variable is categorical and &lt;code&gt;dodge.width&lt;/code&gt; is specified (thanks @josesho)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the examples below.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This package is on CRAN so install should be a simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#39;ggbeeswarm&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want the development version from GitHub, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;eclarke/ggbeeswarm&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here is a comparison between &lt;code&gt;geom_jitter&lt;/code&gt; and &lt;code&gt;geom_quasirandom&lt;/code&gt; on the &lt;code&gt;iris&lt;/code&gt; dataset:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(12345)&#xA;library(ggplot2)&#xA;library(ggbeeswarm)&#xA;#compare to jitter&#xA;ggplot(iris,aes(Species, Sepal.Length)) + geom_jitter()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-compare-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris,aes(Species, Sepal.Length)) + geom_quasirandom()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-compare-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h3&gt;geom_quasirandom()&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;geom_quasirandom&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#default geom_quasirandom&#xA;ggplot(mpg,aes(class, hwy)) + geom_quasirandom()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-examples-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# With categorical y-axis&#xA;ggplot(mpg,aes(hwy, class)) + geom_quasirandom(groupOnX=FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-examples-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Some groups may have only a few points. Use `varwidth=TRUE` to adjust width dynamically.&#xA;ggplot(mpg,aes(class, hwy)) + geom_quasirandom(varwidth = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-examples-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Automatic dodging&#xA;sub_mpg &amp;lt;- mpg[mpg$class %in% c(&#34;midsize&#34;, &#34;pickup&#34;, &#34;suv&#34;),]&#xA;ggplot(sub_mpg, aes(class, displ, color=factor(cyl))) + geom_quasirandom(dodge.width=1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-examples-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h4&gt;Alternative methods&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;geom_quasirandom&lt;/code&gt; can also use several other methods to distribute points. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_quasirandom(method = &#34;tukey&#34;) + ggtitle(&#34;Tukey texture&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_quasirandom(method = &#34;tukeyDense&#34;) +&#xA;    ggtitle(&#34;Tukey + density&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_quasirandom(method = &#34;frowney&#34;) +&#xA;    ggtitle(&#34;Banded frowns&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_quasirandom(method = &#34;smiley&#34;) +&#xA;    ggtitle(&#34;Banded smiles&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_quasirandom(method = &#34;pseudorandom&#34;) +&#xA;    ggtitle(&#34;Jittered density&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-5.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris, aes(Species, Sepal.Length)) + geom_beeswarm() + ggtitle(&#34;Beeswarm&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-methods-6.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h3&gt;geom_beeswarm()&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;geom_beeswarm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm(side = 1L)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg,aes(class, hwy)) + geom_beeswarm(size=.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# With categorical y-axis&#xA;ggplot(mpg,aes(hwy, class)) + geom_beeswarm(size=.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Also watch out for points escaping from the plot with geom_beeswarm&#xA;ggplot(mpg,aes(hwy, class)) + geom_beeswarm(size=.5) + scale_y_discrete(expand=expansion(add=c(0.5,1)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-5.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg,aes(class, hwy)) + geom_beeswarm(size=1.1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-6.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# With automatic dodging&#xA;ggplot(sub_mpg, aes(class, displ, color=factor(cyl))) + geom_beeswarm(dodge.width=0.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-7.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h4&gt;Alternative methods&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- data.frame(&#xA;  x = &#34;A&#34;,&#xA;  y = sample(1:100, 200, replace = TRUE)&#xA;)&#xA;ggplot(df, aes(x = x, y = y)) + geom_beeswarm(cex = 2.5, method = &#34;swarm&#34;) + ggtitle(&#39;method = &#34;swarm&#34; (default)&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-alt-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df, aes(x = x, y = y)) + geom_beeswarm(cex = 2.5, method = &#34;compactswarm&#34;) + ggtitle(&#39;method = &#34;compactswarm&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-alt-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df, aes(x = x, y = y)) + geom_beeswarm(cex = 2.5, method = &#34;hex&#34;) + ggtitle(&#39;method = &#34;hex&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-alt-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df, aes(x = x, y = y)) + geom_beeswarm(cex = 2.5, method = &#34;square&#34;) + ggtitle(&#39;method = &#34;square&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-alt-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df, aes(x = x, y = y)) + geom_beeswarm(cex = 2.5, method = &#34;center&#34;) + ggtitle(&#39;method = &#34;center&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-beeswarm-alt-5.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h4&gt;Different point distribution priority&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#With different beeswarm point distribution priority&#xA;dat&amp;lt;-data.frame(x=rep(1:3,c(20,40,80)))&#xA;dat$y&amp;lt;-rnorm(nrow(dat),dat$x)&#xA;ggplot(dat,aes(x,y)) + geom_beeswarm(cex=2) + ggtitle(&#39;Default (ascending)&#39;) + scale_x_continuous(expand=expansion(add=c(0.5,.5)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-priority-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(dat,aes(x,y)) + geom_beeswarm(cex=2,priority=&#39;descending&#39;) + ggtitle(&#39;Descending&#39;) + scale_x_continuous(expand=expansion(add=c(0.5,.5)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-priority-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(dat,aes(x,y)) + geom_beeswarm(cex=2,priority=&#39;density&#39;) + ggtitle(&#39;Density&#39;) + scale_x_continuous(expand=expansion(add=c(0.5,.5)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-priority-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(dat,aes(x,y)) + geom_beeswarm(cex=2,priority=&#39;random&#39;) + ggtitle(&#39;Random&#39;) + scale_x_continuous(expand=expansion(add=c(0.5,.5)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-priority-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;h4&gt;Corral runaway points&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(1995)&#xA;df2 &amp;lt;- data.frame(&#xA;  y = rnorm(1000),&#xA;  id = sample(c(&#34;G1&#34;, &#34;G2&#34;, &#34;G3&#34;), size = 1000, replace = TRUE)&#xA;)&#xA;p &amp;lt;- ggplot(df2, aes(x = id, y = y, colour = id))&#xA;&#xA;# use corral.width to control corral width&#xA;p + geom_beeswarm(cex = 2.5, corral = &#34;none&#34;, corral.width = 0.9) + ggtitle(&#39;corral = &#34;none&#34; (default)&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-corral-1.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p + geom_beeswarm(cex = 2.5, corral = &#34;gutter&#34;, corral.width = 0.9) + ggtitle(&#39;corral = &#34;gutter&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-corral-2.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p + geom_beeswarm(cex = 2.5, corral = &#34;wrap&#34;, corral.width = 0.9) + ggtitle(&#39;corral = &#34;wrap&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-corral-3.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p + geom_beeswarm(cex = 2.5, corral = &#34;random&#34;, corral.width = 0.9) + ggtitle(&#39;corral = &#34;random&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-corral-4.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p + geom_beeswarm(cex = 2.5, corral = &#34;omit&#34;, corral.width = 0.9) + ggtitle(&#39;corral = &#34;omit&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Warning: Removed 303 rows containing missing values (geom_point).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eclarke/ggbeeswarm/main/README_files/figure-gfm/ggplot2-corral-5.png&#34; width=&#34;576&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Authors: Erik Clarke, Scott Sherrill-Mix, and Charlotte Dawson&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>biobricks-ai/chemharmony</title>
    <updated>2022-12-24T01:35:03Z</updated>
    <id>tag:github.com,2022-12-24:/biobricks-ai/chemharmony</id>
    <link href="https://github.com/biobricks-ai/chemharmony" rel="alternate"></link>
    <summary type="html">&lt;p&gt;integrated chemical-property-values from many source databases.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chemharmony&lt;/h1&gt; &#xA;&lt;p&gt;Chemharmony harmonizes some simple chemical properties.&lt;/p&gt; &#xA;&lt;p&gt;It reduces databases into three tables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram&#xA;&#xA;    class Substances{&#xA;        - UUID sid&#xA;        - JSON data&#xA;    }&#xA;&#xA;    class Properties{&#xA;        - UUID pid&#xA;        - JSON data&#xA;    }&#xA;&#xA;    class Activities{&#xA;        - UUID aid &#xA;        - UUID sid&#xA;        - UUID pid&#xA;        + String qualifier&#xA;        + String units&#xA;        + String value&#xA;    }&#xA;&#xA;    Activities --&amp;gt; Substances&#xA;    Activities --&amp;gt; Properties&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; toxvaldb&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; chembl&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; tox21&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;This schema seems limited. What about capturing metabolism data? Or dose response data?&lt;/h3&gt; &#xA;&lt;p&gt;This schema is focused on building QSAR models, but a more flexible graph based schema might be better. Ultimately, capturing data that relates compounds with each other or with other entities through reactions, metabolism, etc. could be captured by adding more tables. Graph schemas can be isomorphic with that approach.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>mrc-ide/outpack.orderly</title>
    <updated>2022-12-24T01:35:03Z</updated>
    <id>tag:github.com,2022-12-24:/mrc-ide/outpack.orderly</id>
    <link href="https://github.com/mrc-ide/outpack.orderly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;outpack.orderly&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.repostatus.org/#concept&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/concept.svg?sanitize=true&#34; alt=&#34;Project Status: Concept – Minimal or no implementation has been done yet, or the repository is only intended to be a limited example, demo, or proof-of-concept.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mrc-ide/outpack.orderly/actions&#34;&gt;&lt;img src=&#34;https://github.com/mrc-ide/outpack.orderly/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/mrc-ide/outpack.orderly?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/github/mrc-ide/outpack.orderly/coverage.svg?branch=main&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;A temporary package to play around with outpack migration etc.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;code&gt;outpack.orderly&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;mrc-ide/outpack.orderly&#34;, upgrade = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © Imperial College of Science, Technology and Medicine&lt;/p&gt;</summary>
  </entry>
</feed>