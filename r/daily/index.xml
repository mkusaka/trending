<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-16T01:42:44Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vincentarelbundock/tinytable</title>
    <updated>2024-01-16T01:42:44Z</updated>
    <id>tag:github.com,2024-01-16:/vincentarelbundock/tinytable</id>
    <link href="https://github.com/vincentarelbundock/tinytable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple and Customizable Tables in `R`&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vincentarelbundock/tinytable/main/man/figures/tinytable_logo.svg?sanitize=true&#34; height=&#34;250&#34; class=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &#xA; &lt;!-- badges: start --&gt; &#xA; &lt;!-- badges: end --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;tinytable&lt;/code&gt; is a small but powerful &lt;code&gt;R&lt;/code&gt; package to draw HTML, LaTeX, PDF, Markdown, and Typst tables. The user interface is minimalist, but it gives users access to powerful frameworks to create endlessly customizable tables.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vincentarelbundock.github.io/tinytable&#34;&gt;https://vincentarelbundock.github.io/tinytable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;There are already many excellent table-drawing packages in the &lt;code&gt;R&lt;/code&gt; ecosystem. Why release a new one? As &lt;a href=&#34;https://modelsummary.com&#34;&gt;the maintainer of &lt;code&gt;modelsummary&lt;/code&gt;&lt;/a&gt;, I needed a table-drawing package which was:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Simple&lt;/em&gt;: Streamlined, consistent, and uncluttered user interface, with few functions to learn.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Flexible&lt;/em&gt;: Expressive frameworks to customize tables in HTML and LaTeX formats.[1]&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Zero-dependency&lt;/em&gt;: Avoid importing any other &lt;code&gt;R&lt;/code&gt; package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Concise&lt;/em&gt;: Draw beautiful tables without typing a lot of code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Safe&lt;/em&gt;: User inputs are checked thoroughly, and informative errors are returned early.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Maintainable&lt;/em&gt;: A small code base which does not rely on too many complex regular expressions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Readable&lt;/em&gt;: HTML and LaTeX code should be human-readable and editable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Free&lt;/em&gt;: This package will always be free. Tiny tables for a tiny price!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are some of the tables that &lt;code&gt;tinytable&lt;/code&gt; can draw:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vincentarelbundock/tinytable/main/man/figures/gallery/tinytable_gallery.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To achieve these goals, the design philosophy of &lt;code&gt;tinytable&lt;/code&gt; rests on three pillars:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Data is separate from style.&lt;/em&gt; The code that this package creates keeps the content of a table separate from the style sheet that applies to its cells. This is in contrast to other &lt;code&gt;R&lt;/code&gt; packages that modify the actual text in each cell to style it. Keeping data and style separate allows &lt;code&gt;tidytable&lt;/code&gt; to create human-readable files which are easy to edit, debug, and extend. It also enables developers to keep a tidy code base, with minimal use of messy regular expressions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Flexibility.&lt;/em&gt; Users’ needs are extremely varied, and a table-drawing package must be flexible enough to accomodate different ideas. To achieve this, &lt;code&gt;tinytable&lt;/code&gt; builds on battle-tested and versatile frameworks like &lt;code&gt;Bootstrap&lt;/code&gt; for HTML and &lt;code&gt;tabularray&lt;/code&gt; for LaTeX.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.tinyverse.org/&#34;&gt;&lt;em&gt;Lightweight is the right weight.&lt;/em&gt;&lt;/a&gt; Some of the most popular table-drawing packages in the &lt;code&gt;R&lt;/code&gt; ecosystem are very heavy: A single &lt;code&gt;library()&lt;/code&gt; call can sometimes load upwards of 65 &lt;code&gt;R&lt;/code&gt; packages. In contrast, &lt;code&gt;tinytable&lt;/code&gt; imports zero 3rd party &lt;code&gt;R&lt;/code&gt; package by default.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;tinytable&lt;/code&gt; from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(remotes)&#xA;install_github(&#34;vincentarelbundock/tinytable&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vincentarelbundock.github.io/tinytable/vignettes/tutorial.html&#34;&gt;Tutorial (HTML)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vincentarelbundock.github.io/tinytable/vignettes/tutorial.pdf&#34;&gt;Tutorial (PDF)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternative packages&lt;/h2&gt; &#xA;&lt;p&gt;There are many fantastic table-drawing packages out there. If you don’t like &lt;code&gt;tinytable&lt;/code&gt;, I recommend you check out some of these:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haozhu233.github.io/kableExtra/&#34;&gt;&lt;code&gt;kableExtra&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gt.rstudio.com&#34;&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/DT/&#34;&gt;&lt;code&gt;DT&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://davidgohel.github.io/flextable/&#34;&gt;&lt;code&gt;flextable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hughjonesd.github.io/huxtable/&#34;&gt;&lt;code&gt;huxtable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Did I miss your favorite package? Drop me a note and I’ll add it to the list.&lt;/p&gt; &#xA;&lt;p&gt;Of course, there are also many packages to compute statistics and build tables (ex: &lt;code&gt;modelsummary&lt;/code&gt;, &lt;code&gt;gtsummary&lt;/code&gt;, &lt;code&gt;table1&lt;/code&gt;). Many of those packages delegate the actual drawing of the tables (ie: lines and colors) to one of the table-drawing packages listed above. In that sense, &lt;code&gt;tinytable&lt;/code&gt; should be seen as more of a complement than an alternative to data summary packages. The goal of &lt;code&gt;tinytable&lt;/code&gt; is to help users and developers convert data frames into beautiful tables easily. What people put in those tables is outside the scope of &lt;code&gt;tinytable&lt;/code&gt;. If you are interested in a package to create data summaries and regression tables/plots, please check out my &lt;code&gt;modelsummary&lt;/code&gt; package: &lt;a href=&#34;https://modelsummary.com&#34;&gt;https://modelsummary.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[1] Other formats like Markdown and Typst are also available, but less flexible.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trestletech/RCache</title>
    <updated>2024-01-16T01:42:44Z</updated>
    <id>tag:github.com,2024-01-16:/trestletech/RCache</id>
    <link href="https://github.com/trestletech/RCache" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demonstration of package-wide caching variables in R packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RCache&lt;/h1&gt; &#xA;&lt;p&gt;Demonstration of package-wide caching variables in R packages.&lt;/p&gt; &#xA;&lt;p&gt;You can read the full write-up at &lt;a href=&#34;http://trestletechnology.net/2013/04/package-wide-variablescache-in-r-package&#34;&gt;http://trestletechnology.net/2013/04/package-wide-variablescache-in-r-package&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lorenzwalthert/precommit</title>
    <updated>2024-01-16T01:42:44Z</updated>
    <id>tag:github.com,2024-01-16:/lorenzwalthert/precommit</id>
    <link href="https://github.com/lorenzwalthert/precommit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pre-commit hooks for R projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Useful git pre-commit hooks for R&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=precommit&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/precommit&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-green.svg?sanitize=true&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lorenzwalthert/precommit/actions&#34;&gt;&lt;img src=&#34;https://github.com/lorenzwalthert/precommit/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pre-commit.com&#34;&gt;Pre-commit hooks&lt;/a&gt; are tests that run each time you attempt to commit. If the tests pass, the commit will be made, otherwise not. A very basic test is to check if the code is parsable, making sure you have not forgotten a comma, brace or quote. You can run hooks locally and/or in the cloud:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;As a check before local commits: This requires installing pre-commit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As a CI check with &lt;a href=&#34;https://pre-commit.ci&#34;&gt;https://pre-commit.ci&lt;/a&gt;: If you want to enforce passing hooks on pull requests (and auto-fix trivial problems like styling) even if the committer does not have a local installation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Goals of the package&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this package is to twofold:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide a &lt;a href=&#34;https://lorenzwalthert.github.io/precommit/articles/available-hooks.html&#34;&gt;set of hooks&lt;/a&gt; that are useful when your git repo contains R code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide &lt;a href=&#34;https://github.com/r-lib/usethis&#34;&gt;usethis&lt;/a&gt;-like functionality for common tasks such as installation and set-up and config file modification.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why do I need pre-commit hooks?&lt;/h2&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/lorenzwalthert/precommit/main/man/figures/pre-commit-meme.jpeg&#34; width=&#34;500&#34; align=&#34;center&#34; href=&#34;https://twitter.com/dataandme/status/1255510799273132032&#34;&gt; &#xA; &lt;figcaption&gt;&#xA;   By &#xA;  &lt;a href=&#34;https://twitter.com/dataandme/status/1255510799273132032&#34;&gt;Mara Averick&lt;/a&gt; &#xA; &lt;/figcaption&gt; &#xA;&lt;/figure&gt; &#xA;&lt;p&gt;For a more in-depth explanation and even more reasons, see &lt;code&gt;vignette(&#34;why-use-hooks&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The following online docs are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lorenzwalthert.github.io/precommit/&#34;&gt;latest CRAN release&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lorenzwalthert.github.io/precommit/dev/&#34;&gt;GitHub development version&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=r3QXwfxQBLM&amp;amp;t=1280s&#34;&gt;UseR 2022 talk on pre-commit for R&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These only cover the functionality added on top of the pre-commit framework by this package. Everything else is covered in the extensive &lt;a href=&#34;https://pre-commit.com&#34;&gt;online documentation&lt;/a&gt; of the pre-commit framework itself, including how to create hooks for actions like &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt;, create local hooks etc.&lt;/p&gt;</summary>
  </entry>
</feed>