<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-08T01:35:55Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>daroczig/logger</title>
    <updated>2024-08-08T01:35:55Z</updated>
    <id>tag:github.com,2024-08-08:/daroczig/logger</id>
    <link href="https://github.com/daroczig/logger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight, modern and flexible, log4j and futile.logger inspired logging utility for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;logger&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=logger&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/logger&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/daroczig/logger/actions&#34;&gt;&lt;img src=&#34;https://github.com/daroczig/logger/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/daroczig/logger&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/daroczig/logger/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mikata.dev&#34;&gt;&lt;img src=&#34;https://mikata.dev/img/badge.svg?sanitize=true&#34; alt=&#34;A Mikata Project&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;A lightweight, modern and flexibly logging utility for R – heavily inspired by the &lt;code&gt;futile.logger&lt;/code&gt; R package and &lt;code&gt;logging&lt;/code&gt; Python module.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=logger&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version-ago/logger&#34; alt=&#34;CRAN version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;logger&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The most recent, development version of &lt;code&gt;logger&lt;/code&gt; can also be installed from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;pak&#34;)&#xA;pak::pak(&#34;daroczig/logger&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick example&lt;/h2&gt; &#xA;&lt;p&gt;Setting the log level threshold to something low and logging various messages in ad-hoc and programmatic ways:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(logger)&#xA;log_threshold(DEBUG)&#xA;log_info(&#34;Script starting up...&#34;)&#xA;#&amp;gt; INFO [2024-08-05 16:05:22] Script starting up...&#xA;&#xA;pkgs &amp;lt;- available.packages()&#xA;log_info(&#39;There are {nrow(pkgs)} R packages hosted on CRAN!&#39;)&#xA;#&amp;gt; INFO [2024-08-05 16:05:23] There are 21132 R packages hosted on CRAN!&#xA;&#xA;for (letter in letters) {&#xA;  lpkgs &amp;lt;- sum(grepl(letter, pkgs[, &#34;Package&#34;], ignore.case = TRUE))&#xA;  log_level(&#xA;    if (lpkgs &amp;lt; 5000) TRACE else DEBUG,&#xA;    &#34;{lpkgs} R packages including the {shQuote(letter)} letter&#34;&#xA;  )&#xA;}&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 10194 R packages including the &#39;a&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 7016 R packages including the &#39;c&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 5751 R packages including the &#39;d&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 10908 R packages including the &#39;e&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 8825 R packages including the &#39;i&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 7060 R packages including the &#39;l&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 7045 R packages including the &#39;m&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 6665 R packages including the &#39;n&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 7863 R packages including the &#39;o&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 6582 R packages including the &#39;p&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 11230 R packages including the &#39;r&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 10296 R packages including the &#39;s&#39; letter&#xA;#&amp;gt; DEBUG [2024-08-05 16:05:23] 9531 R packages including the &#39;t&#39; letter&#xA;&#xA;log_warn(&#34;There might be many, like {1:2} or more warnings!!!&#34;)&#xA;#&amp;gt; WARN [2024-08-05 16:05:23] There might be many, like 1 or more warnings!!!&#xA;#&amp;gt; WARN [2024-08-05 16:05:23] There might be many, like 2 or more warnings!!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can even use a custom log layout to render the log records with colors, as you can see in &lt;code&gt;layout_glue_colors()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/daroczig/logger/master/man/figures/colors.png&#34; alt=&#34;colored log output&#34;&gt; &#xA;&lt;p&gt;But you could set up any custom colors and layout, eg using custom colors only for the log levels, make it grayscale, include the calling function or R package namespace with specific colors etc. For more details, see &lt;code&gt;vignette(&#34;write_custom_extensions&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related work&lt;/h2&gt; &#xA;&lt;p&gt;There are many other logging packages available on CRAN:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=futile.logger&#34;&gt;&lt;code&gt;futile.logger&lt;/code&gt;&lt;/a&gt;: probably the most popular &lt;code&gt;log4j&lt;/code&gt; variant (and I’m a big fan)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=logging&#34;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt;: just like Python’s &lt;code&gt;logging&lt;/code&gt; package&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=lgr&#34;&gt;&lt;code&gt;lgr&lt;/code&gt;&lt;/a&gt;: built on top of R6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=loggit&#34;&gt;&lt;code&gt;loggit&lt;/code&gt;&lt;/a&gt;: capture &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; function messages in a JSON file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=log4r&#34;&gt;&lt;code&gt;log4r&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;log4j&lt;/code&gt;-based, object-oriented logger&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=rsyslog&#34;&gt;&lt;code&gt;rsyslog&lt;/code&gt;&lt;/a&gt;: logging to &lt;code&gt;syslog&lt;/code&gt; on ‘POSIX’-compatible operating systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=lumberjack&#34;&gt;&lt;code&gt;lumberjack&lt;/code&gt;&lt;/a&gt;: provides a special operator to log changes in data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Why use logger? I decided to write the &lt;code&gt;n+1&lt;/code&gt;th extensible &lt;code&gt;log4j&lt;/code&gt; logger that fits my liking — and hopefully yours as well — with the aim to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keep it close to &lt;code&gt;log4j&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Respect the modern function/variable naming conventions and general R coding style.&lt;/li&gt; &#xA; &lt;li&gt;By default, rely on &lt;code&gt;glue()&lt;/code&gt; when it comes to formatting / rendering log messages, but keep it flexible if others prefer &lt;code&gt;sprintf()&lt;/code&gt; (e.g.&amp;nbsp;for performance reasons) or other functions.&lt;/li&gt; &#xA; &lt;li&gt;Support vectorization (eg passing a vector to be logged on multiple lines).&lt;/li&gt; &#xA; &lt;li&gt;Make it easy to extend with new features (e.g.&amp;nbsp;custom layouts, message formats and output).&lt;/li&gt; &#xA; &lt;li&gt;Prepare for writing to various services, streams etc&lt;/li&gt; &#xA; &lt;li&gt;Provide support for namespaces, preferably automatically finding and creating a custom namespace for all R packages writing log messages, each with optionally configurable log level threshold, message and output formats.&lt;/li&gt; &#xA; &lt;li&gt;Allow stacking loggers to implement logger hierarchy – even within a namespace, so that the very same &lt;code&gt;log&lt;/code&gt; call can write all the &lt;code&gt;TRACE&lt;/code&gt; log messages to the console, while only pushing &lt;code&gt;ERROR&lt;/code&gt;s to DataDog and eg &lt;code&gt;INFO&lt;/code&gt; messages to CloudWatch.&lt;/li&gt; &#xA; &lt;li&gt;Optionally colorize log message based on the log level.&lt;/li&gt; &#xA; &lt;li&gt;Make logging fun!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Welcome to the &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar&#34;&gt;Bazaar&lt;/a&gt;! If you already use any of the above packages for logging, you might find &lt;code&gt;vignette(&#34;migration&#34;)&lt;/code&gt; useful.&lt;/p&gt; &#xA;&lt;h2&gt;Interested in more details?&lt;/h2&gt; &#xA;&lt;div class=&#34;.pkgdown-hide&#34;&gt; &#xA; &lt;p&gt;Check out the main documentation site at &lt;a href=&#34;https://daroczig.github.io/logger&#34;&gt;https://daroczig.github.io/logger&lt;/a&gt; or the vignettes on the below topics:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/Intro.html&#34;&gt;Introduction to logger&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/anatomy.html&#34;&gt;The Anatomy of a Log Request&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/customize_logger.html&#34;&gt;Customizing the Format and the Destination of a Log Record&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/write_custom_extensions.html&#34;&gt;Writing Custom Logger Extensions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/migration.html&#34;&gt;Migration Guide from other logging packages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/r_packages.html&#34;&gt;Logging from R Packages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://daroczig.github.io/logger/articles/performance.html&#34;&gt;Simple Benchmarks on Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;If you prefer visual content, you can watch the video recording of the &#34;Getting things logged&#34; talk at RStudio::conf(2020):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_rUuBbml9dU&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/_rUuBbml9dU/0.jpg&#34; alt=&#34;Gergely Daroczi presenting &amp;quot;Getting things logged&amp;quot; on using the logger R package at the RStudio conference in 2020&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>