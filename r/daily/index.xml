<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:51:40Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RamiKrispin/TSstudio</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/RamiKrispin/TSstudio</id>
    <link href="https://github.com/RamiKrispin/TSstudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tools for time series analysis and forecasting&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TSstudio &lt;a href=&#34;https://ramikrispin.github.io/TSstudio/&#34;&gt;&lt;img src=&#34;man/figures/TSstudio logo.png&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=TSstudio&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/TSstudio&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=TSstudio&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/TSstudio&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tidyverse.org/lifecycle/#maturing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-maturing-blue.svg?sanitize=true&#34; alt=&#34;lifecycle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://ramikrispin.github.io/TSstudio&#34;&gt;TSstudio&lt;/a&gt; package provides a set of tools descriptive and predictive analysis of time series data. That includes utility functions for preprocessing time series data, interactive visualization functions based on the &lt;a href=&#34;https://CRAN.R-project.org/package=plotly&#34;&gt;plotly&lt;/a&gt; package engine, and set of tools for training and evaluating time series forecasting models from the &lt;a href=&#34;https://CRAN.R-project.org/package=forecast&#34;&gt;forecast&lt;/a&gt;, &lt;a href=&#34;https://CRAN.R-project.org/package=forecastHybrid&#34;&gt;forecastHybrid&lt;/a&gt;, and &lt;a href=&#34;https://CRAN.R-project.org/package=bsts&#34;&gt;bsts&lt;/a&gt; packages.&lt;/p&gt; &#xA;&lt;p&gt;More information available on the package &lt;a href=&#34;https://ramikrispin.github.io/TSstudio/articles/&#34;&gt;vignettes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the stable version from &lt;a href=&#34;https://CRAN.R-project.org/package=TSstudio&#34;&gt;CRAN&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;TSstudio&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or install the development version from &lt;a href=&#34;https://github.com/RamiKrispin/TSstudio&#34;&gt;Github&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;RamiKrispin/TSstudio&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Plotting time series data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(TSstudio)&#xA;data(USgas)&#xA;&#xA;# Ploting time series object&#xA;ts_plot(USgas, &#xA;        title = &#34;US Monthly Natural Gas Consumption&#34;,&#xA;        Ytitle = &#34;Billion Cubic Feet&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_plot.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Seasonality analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Seasonal plot&#xA;ts_seasonal(USgas, type = &#34;all&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_seasonal.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# Heatmap plot&#xA;&#xA;ts_heatmap(USgas)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_heatmap.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Correlation analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ACF and PACF plots&#xA;ts_cor(USgas, lag.max = 60)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_acf.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Lags plot&#xA;ts_lags(USgas, lags = 1:12)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_lags.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Seasonal lags plot&#xA;ts_lags(USgas, lags = c(12, 24, 36, 48))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_lags2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Training forecasting models&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forecasting applications&#xA;# Setting training and testing partitions&#xA;USgas_s &amp;lt;- ts_split(ts.obj = USgas, sample.out = 12)&#xA;train &amp;lt;- USgas_s$train&#xA;test &amp;lt;- USgas_s$test&#xA;&#xA;# Forecasting with auto.arima&#xA;library(forecast)&#xA;md &amp;lt;- auto.arima(train)&#xA;fc &amp;lt;- forecast(md, h = 12)&#xA;&#xA;# Plotting actual vs. fitted and forecasted&#xA;test_forecast(actual = USgas, forecast.obj = fc, test = test)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_test_f.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Plotting the forecast &#xA;plot_forecast(fc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/USgas_forecast.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Run horse race between multiple models&#xA;methods &amp;lt;- list(ets1 = list(method = &#34;ets&#34;,&#xA;                            method_arg = list(opt.crit = &#34;lik&#34;),&#xA;                            notes = &#34;ETS model with opt.crit = lik&#34;),&#xA;                ets2 = list(method = &#34;ets&#34;,&#xA;                            method_arg = list(opt.crit = &#34;amse&#34;),&#xA;                            notes = &#34;ETS model with opt.crit = amse&#34;),&#xA;                arima1 = list(method = &#34;arima&#34;,&#xA;                              method_arg = list(order = c(2,1,0)),&#xA;                              notes = &#34;ARIMA(2,1,0)&#34;),&#xA;                arima2 = list(method = &#34;arima&#34;,&#xA;                              method_arg = list(order = c(2,1,2),&#xA;                                                seasonal = list(order = c(1,1,1))),&#xA;                              notes = &#34;SARIMA(2,1,2)(1,1,1)&#34;),&#xA;                hw = list(method = &#34;HoltWinters&#34;,&#xA;                          method_arg = NULL,&#xA;                          notes = &#34;HoltWinters Model&#34;),&#xA;                tslm = list(method = &#34;tslm&#34;,&#xA;                            method_arg = list(formula = input ~ trend + season),&#xA;                            notes = &#34;tslm model with trend and seasonal components&#34;))&#xA;# Training the models with backtesting&#xA;md &amp;lt;- train_model(input = USgas,&#xA;                  methods = methods,&#xA;                  train_method = list(partitions = 6, &#xA;                                      sample.out = 12, &#xA;                                      space = 3),&#xA;                  horizon = 12,&#xA;                  error = &#34;MAPE&#34;)&#xA;# A tibble: 6 x 7&#xA;  model_id model       notes                                         avg_mape avg_rmse `avg_coverage_80%` `avg_coverage_95%`&#xA;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;                                            &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;&#xA;1 arima2   arima       SARIMA(2,1,2)(1,1,1)                            0.0557     167.              0.583              0.806&#xA;2 hw       HoltWinters HoltWinters Model                               0.0563     163.              0.736              0.889&#xA;3 ets1     ets         ETS model with opt.crit = lik                   0.0611     172.              0.681              0.903&#xA;4 ets2     ets         ETS model with opt.crit = amse                  0.0666     186.              0.458              0.833&#xA;5 tslm     tslm        tslm model with trend and seasonal components   0.0767     220.              0.417              0.667&#xA;6 arima1   arima       ARIMA(2,1,0)                                    0.188      598.              0.875              0.958&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Plot the performance of the different models on the testing partitions&#xA;plot_model(md)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/plot_model.gif&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Holt-Winters tunning parameters with grid search&#xA;hw_grid &amp;lt;- ts_grid(USgas, &#xA;                   model = &#34;HoltWinters&#34;,&#xA;                   periods = 6,&#xA;                   window_space = 6,&#xA;                   window_test = 12,&#xA;                   hyper_params = list(alpha = seq(0,1,0.1),&#xA;                                       beta = seq(0,1,0.1),&#xA;                                       gamma = seq(0,1,0.1)))&#xA;                                       &#xA;plot_grid(hw_grid, type = &#34;3D&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/RamiKrispin/TSstudio/master/man/figures/hw_grid.png&#34; width=&#34;100%&#34;&gt;</summary>
  </entry>
  <entry>
    <title>mlr-org/mlr</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/mlr-org/mlr</id>
    <link href="https://github.com/mlr-org/mlr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Machine Learning in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mlr &lt;img src=&#34;https://raw.githubusercontent.com/mlr-org/mlr/main/man/figures/logo.png&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Package website: &lt;a href=&#34;https://mlr.mlr-org.com/&#34;&gt;release&lt;/a&gt; | &lt;a href=&#34;https://mlr.mlr-org.com/dev/&#34;&gt;dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Machine learning in R.&lt;/p&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mlr-org/mlr/actions&#34;&gt;&lt;img src=&#34;https://github.com/mlr-org/mlr/workflows/tic/badge.svg?branch=main&#34; alt=&#34;tic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=mlr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version-ago/mlr&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_mlr.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/mlr&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=mlr&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/mlr&#34; alt=&#34;CRAN Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/mlr&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-mlr-blue.svg?sanitize=true&#34; alt=&#34;StackOverflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-retired-orange.svg?sanitize=true&#34; alt=&#34;lifecycle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mlr-org/mlr&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mlr-org/mlr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=mlr&#34;&gt;CRAN release site&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mlr.mlr-org.com/index.html&#34;&gt;Online tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cheatsheets.mlr-org.com/mlr.pdf&#34;&gt;Cheatsheet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mlr.mlr-org.com/news/index.html&#34;&gt;Changelog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/mlr&#34;&gt;Stackoverflow&lt;/a&gt;: &lt;code&gt;#mlr&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lmmisld-lmu-stats-slds.srv.mwn.de/mlr_invite/&#34;&gt;Mattermost&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mlr-org.com/&#34;&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deprecated&lt;/h2&gt; &#xA;&lt;p&gt;{mlr} is considered retired from the mlr-org team. We won&#39;t add new features anymore and will only fix &lt;em&gt;severe&lt;/em&gt; bugs. We suggest to use the new &lt;a href=&#34;https://mlr3.mlr-org.com/&#34;&gt;mlr3&lt;/a&gt; framework from now on and for future projects.&lt;/p&gt; &#xA;&lt;p&gt;Not all features of {mlr} are already implemented in {mlr3}. If you are missing a crucial feature, please open an issue in the respective &lt;a href=&#34;https://github.com/mlr-org/mlr3/wiki/Extension-Packages&#34;&gt;mlr3 extension package&lt;/a&gt; and do not hesitate to follow-up on it.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;mlr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;remotes::install_github(&#34;mlr-org/mlr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citing {mlr} in publications&lt;/h2&gt; &#xA;&lt;p&gt;Please cite our &lt;a href=&#34;https://jmlr.org/papers/v17/15-066.html&#34;&gt;JMLR paper&lt;/a&gt; [&lt;a href=&#34;https://www.jmlr.org/papers/v17/15-066.bib&#34;&gt;bibtex&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;p&gt;Some parts of the package were created as part of other publications. If you use these parts, please cite the relevant work appropriately. An overview of all {mlr} related publications can be found &lt;a href=&#34;https://mlr.mlr-org.com/articles/tutorial/mlr_publications.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;R does not define a standardized interface for its machine-learning algorithms. Therefore, for any non-trivial experiments, you need to write lengthy, tedious and error-prone wrappers to call the different algorithms and unify their respective output.&lt;/p&gt; &#xA;&lt;p&gt;Additionally you need to implement infrastructure to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;resample your models&lt;/li&gt; &#xA; &lt;li&gt;optimize hyperparameters&lt;/li&gt; &#xA; &lt;li&gt;select features&lt;/li&gt; &#xA; &lt;li&gt;cope with pre- and post-processing of data and compare models in a statistically meaningful way.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As this becomes computationally expensive, you might want to parallelize your experiments as well. This often forces users to make crummy trade-offs in their experiments due to time constraints or lacking expert programming skills.&lt;/p&gt; &#xA;&lt;p&gt;{mlr} provides this infrastructure so that you can focus on your experiments! The framework provides supervised methods like classification, regression and survival analysis along with their corresponding evaluation and optimization methods, as well as unsupervised methods like clustering. It is written in a way that you can extend it yourself or deviate from the implemented convenience methods and construct your own complex experiments or algorithms.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, the package is nicely connected to the &lt;a href=&#34;https://github.com/openml/openml-r&#34;&gt;&lt;strong&gt;OpenML&lt;/strong&gt;&lt;/a&gt; R package and its &lt;a href=&#34;https://www.openml.org/&#34;&gt;online platform&lt;/a&gt;, which aims at supporting collaborative machine learning online and allows to easily share datasets as well as machine learning tasks, algorithms and experiments in order to support reproducible research.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clear &lt;strong&gt;S3&lt;/strong&gt; interface to R &lt;strong&gt;classification, regression, clustering and survival&lt;/strong&gt; analysis methods&lt;/li&gt; &#xA; &lt;li&gt;Abstract description of learners and tasks by properties&lt;/li&gt; &#xA; &lt;li&gt;Convenience methods and generic building blocks for your machine learning experiments&lt;/li&gt; &#xA; &lt;li&gt;Resampling methods like &lt;strong&gt;bootstrapping, cross-validation and subsampling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extensive visualizations (e.g. ROC curves, predictions and partial predictions)&lt;/li&gt; &#xA; &lt;li&gt;Simplified benchmarking across data sets and learners&lt;/li&gt; &#xA; &lt;li&gt;Easy hyperparameter tuning using different optimization strategies, including potent configurators like &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;iterated F-racing (irace)&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;sequential model-based optimization&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Variable selection with filters and wrappers&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nested resampling of models with tuning and feature selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost-sensitive learning, threshold tuning and imbalance correction&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wrapper mechanism to extend learner functionality in complex ways&lt;/li&gt; &#xA; &lt;li&gt;Possibility to combine different processing steps to a complex data mining chain that can be jointly optimized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenML&lt;/strong&gt; connector for the Open Machine Learning server&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;strong&gt;parallelization&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Detailed tutorial&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;p&gt;Simple usage questions are better suited at Stackoverflow using the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/mlr&#34;&gt;mlr&lt;/a&gt; tag.&lt;/p&gt; &#xA;&lt;p&gt;Please note that all of us work in academia and put a lot of work into this project - simply because we like it, not because we are paid for it.&lt;/p&gt; &#xA;&lt;p&gt;New development efforts should go into &lt;a href=&#34;https://github.com/mlr-org/mlr3&#34;&gt;{mlr3}&lt;/a&gt;. We have a own style guide which can easily applied by using the &lt;code&gt;mlr_style&lt;/code&gt; from the &lt;a href=&#34;https://github.com/r-lib/styler&#34;&gt;styler&lt;/a&gt; package. See &lt;a href=&#34;https://github.com/mlr-org/mlr3/wiki/Style-Guide#styler-mlr-style&#34;&gt;our wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Talks, Workshops, etc.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mlr-org/mlr-outreach&#34;&gt;mlr-outreach&lt;/a&gt; holds all outreach activities related to {mlr} and {mlr3}.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rdpeng/ProgrammingAssignment2</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/rdpeng/ProgrammingAssignment2</id>
    <link href="https://github.com/rdpeng/ProgrammingAssignment2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for Programming Assignment 2 for R Programming on Coursera&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;This second programming assignment will require you to write an R function that is able to cache potentially time-consuming computations. For example, taking the mean of a numeric vector is typically a fast operation. However, for a very long vector, it may take too long to compute the mean, especially if it has to be computed repeatedly (e.g. in a loop). If the contents of a vector are not changing, it may make sense to cache the value of the mean so that when we need it again, it can be looked up in the cache rather than recomputed. In this Programming Assignment you will take advantage of the scoping rules of the R language and how they can be manipulated to preserve state inside of an R object.&lt;/p&gt; &#xA;&lt;h3&gt;Example: Caching the Mean of a Vector&lt;/h3&gt; &#xA;&lt;p&gt;In this example we introduce the &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt; operator which can be used to assign a value to an object in an environment that is different from the current environment. Below are two functions that are used to create a special object that stores a numeric vector and caches its mean.&lt;/p&gt; &#xA;&lt;p&gt;The first function, &lt;code&gt;makeVector&lt;/code&gt; creates a special &#34;vector&#34;, which is really a list containing a function to&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;set the value of the vector&lt;/li&gt; &#xA; &lt;li&gt;get the value of the vector&lt;/li&gt; &#xA; &lt;li&gt;set the value of the mean&lt;/li&gt; &#xA; &lt;li&gt;get the value of the mean&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- --&gt; &#xA;&lt;pre&gt;&lt;code&gt;makeVector &amp;lt;- function(x = numeric()) {&#xA;        m &amp;lt;- NULL&#xA;        set &amp;lt;- function(y) {&#xA;                x &amp;lt;&amp;lt;- y&#xA;                m &amp;lt;&amp;lt;- NULL&#xA;        }&#xA;        get &amp;lt;- function() x&#xA;        setmean &amp;lt;- function(mean) m &amp;lt;&amp;lt;- mean&#xA;        getmean &amp;lt;- function() m&#xA;        list(set = set, get = get,&#xA;             setmean = setmean,&#xA;             getmean = getmean)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following function calculates the mean of the special &#34;vector&#34; created with the above function. However, it first checks to see if the mean has already been calculated. If so, it &lt;code&gt;get&lt;/code&gt;s the mean from the cache and skips the computation. Otherwise, it calculates the mean of the data and sets the value of the mean in the cache via the &lt;code&gt;setmean&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cachemean &amp;lt;- function(x, ...) {&#xA;        m &amp;lt;- x$getmean()&#xA;        if(!is.null(m)) {&#xA;                message(&#34;getting cached data&#34;)&#xA;                return(m)&#xA;        }&#xA;        data &amp;lt;- x$get()&#xA;        m &amp;lt;- mean(data, ...)&#xA;        x$setmean(m)&#xA;        m&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment: Caching the Inverse of a Matrix&lt;/h3&gt; &#xA;&lt;p&gt;Matrix inversion is usually a costly computation and there may be some benefit to caching the inverse of a matrix rather than computing it repeatedly (there are also alternatives to matrix inversion that we will not discuss here). Your assignment is to write a pair of functions that cache the inverse of a matrix.&lt;/p&gt; &#xA;&lt;p&gt;Write the following functions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;makeCacheMatrix&lt;/code&gt;: This function creates a special &#34;matrix&#34; object that can cache its inverse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cacheSolve&lt;/code&gt;: This function computes the inverse of the special &#34;matrix&#34; returned by &lt;code&gt;makeCacheMatrix&lt;/code&gt; above. If the inverse has already been calculated (and the matrix has not changed), then &lt;code&gt;cacheSolve&lt;/code&gt; should retrieve the inverse from the cache.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Computing the inverse of a square matrix can be done with the &lt;code&gt;solve&lt;/code&gt; function in R. For example, if &lt;code&gt;X&lt;/code&gt; is a square invertible matrix, then &lt;code&gt;solve(X)&lt;/code&gt; returns its inverse.&lt;/p&gt; &#xA;&lt;p&gt;For this assignment, assume that the matrix supplied is always invertible.&lt;/p&gt; &#xA;&lt;p&gt;In order to complete this assignment, you must do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the GitHub repository containing the stub R files at &lt;a href=&#34;https://github.com/rdpeng/ProgrammingAssignment2&#34;&gt;https://github.com/rdpeng/ProgrammingAssignment2&lt;/a&gt; to create a copy under your own account.&lt;/li&gt; &#xA; &lt;li&gt;Clone your forked GitHub repository to your computer so that you can edit the files locally on your own machine.&lt;/li&gt; &#xA; &lt;li&gt;Edit the R file contained in the git repository and place your solution in that file (please do not rename the file).&lt;/li&gt; &#xA; &lt;li&gt;Commit your completed R file into YOUR git repository and push your git branch to the GitHub repository under your account.&lt;/li&gt; &#xA; &lt;li&gt;Submit to Coursera the URL to your GitHub repository that contains the completed R code for the assignment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Grading&lt;/h3&gt; &#xA;&lt;p&gt;This assignment will be graded via peer assessment.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gilbertfontana/DataVisualization</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/gilbertfontana/DataVisualization</id>
    <link href="https://github.com/gilbertfontana/DataVisualization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Various data visualization projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DataVisualization&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains various data visualization projects.&lt;/p&gt; &#xA;&lt;h3&gt;Population: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Population&#34;&gt;World population prospects&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Population/Population.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bond: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Bond&#34;&gt;Government bond interest rates&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Bond/Bond.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Obesity: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Obesity&#34;&gt;World obesity&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Obesity/Obesity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tarantino: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Tarantino&#34;&gt;Tarantino movie deaths&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Tarantino/Tarantino.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vote: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Vote&#34;&gt;Political fragmentation in the EP election&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Vote/Vote.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Visa: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Visa&#34;&gt;Costs for work visa&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Visa/Visa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Leaders: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Leaders&#34;&gt;Removal of political leaders&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Leaders/Leaders.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;UN: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/UN&#34;&gt;UN peacekeeping fatalities&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/UN/UN.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Disease: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Disease&#34;&gt;Pre Covid Disease Outbreaks&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Disease/Disease.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Life expectancy: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Lifeexp&#34;&gt;Life expectancy&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Lifeexp/Lifeexp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Stockholm: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Stockholm&#34;&gt;Risk of poverty in Stockholm&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Stockholm/Stockholm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Banknotes: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Banknotes&#34;&gt;Cash is Queen?&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Banknotes/Banknotes.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zoo: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Zoo&#34;&gt;Median Life Expectancy of Zoo Animals&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Zoo/Zoo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Foundation: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Foundation&#34;&gt;Variation in foundation shade&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Foundation/Foundation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ukraine: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Ukraine&#34;&gt;Sympathy towards Ukrainians&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Ukraine/Ukraine.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mask: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Mask&#34;&gt;Subway and Bus Mask Compliance Statistics&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Mask/Mask.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LGBTQ: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/LGBTQ&#34;&gt;Elected LGBTQ officials&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/LGBTQ/LGBTQ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tax revenue: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Tax&#34;&gt;Tax revenue&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Tax/tax.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Electric: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Electric&#34;&gt;Electric vehicles&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Electric/electric.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Precipitation: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Rain&#34;&gt;Variation in Precipitation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Rain/rain.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GoT: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/GoT&#34;&gt;Top GoT killers&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/GoT/GoT.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Temp: &lt;a href=&#34;https://github.com/gilbertfontana/DataVisualization/tree/main/Temp&#34;&gt;Average Monthly Temperatures Between 1722 - 2020&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gilbertfontana/DataVisualization/raw/main/Temp/temp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookexperimental/Robyn</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/facebookexperimental/Robyn</id>
    <link href="https://github.com/facebookexperimental/Robyn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Robyn is an experimental, automated and open-sourced Marketing Mix Modeling (MMM) package from Facebook Marketing Science. It uses various machine learning techniques (Ridge regression, multi-objective evolutionary algorithm for hyperparameter optimisation, gradient-based optimisation for budget allocation etc.) to define media channel efficienc…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project Robyn - Continuous &amp;amp; Semi-Automated MMM &lt;img src=&#34;https://raw.githubusercontent.com/facebookexperimental/Robyn/main/R/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139px&#34;&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;The Open Source Marketing Mix Model Package from Meta Marketing Science&lt;/h3&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Robyn&lt;/strong&gt;: Robyn is an experimental, semi-automated and open-sourced Marketing Mix Modeling (MMM) package from Meta Marketing Science. It uses various machine learning techniques (Ridge regression, multi-objective evolutionary algorithm for hyperparameter optimization, time-series decomposition for trend &amp;amp; season, gradient-based optimization for budget allocation etc.) to define media channel efficiency and effectivity, explore adstock rates and saturation curves. It&#39;s built for granular datasets with many independent variables and therefore especially suitable for digital and direct response advertisers with rich data sources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why are we doing this&lt;/strong&gt;: MMM used to be a resource-intensive technique that was only affordable for &#34;big players&#34;. As the privacy needs of the measurement landscape evolve, there&#39;s a clear trend of increasing demand for modern MMM as a privacy-safe solution. At Meta Marketing Science, our mission is to help all businesses grow by transforming marketing practices grounded in data and science. It&#39;s highly aligned with our mission to democratising MMM and making it accessible for advertisers of all sizes. With Project Robyn, we want to contribute to the measurement landscape, inspire the industry and build a community for exchange and innovation around the future of MMM and Marketing Science in general.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start (R only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Installing the package&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Robyn latest package version:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;## CRAN VERSION&#xA;install.packages(&#34;Robyn&#34;)&#xA;&#xA;## DEV VERSION&#xA;# If you don&#39;t have remotes installed yet, first run: install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;facebookexperimental/Robyn/R&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If it&#39;s taking too long to download, you have a slow or unstable internet connection, and have &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/issues/309&#34;&gt;issues&lt;/a&gt; while installing the package, try setting &lt;code&gt;options(timeout=400)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Robyn requires the Python library &lt;a href=&#34;https://facebookresearch.github.io/nevergrad/&#34;&gt;Nevergrad&lt;/a&gt;. If encountering Python-related error during installation, please check out the &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/raw/main/demo/demo.R&#34;&gt;step-by-step guide&lt;/a&gt; as well as this &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/issues/189&#34;&gt;issue&lt;/a&gt; to get more info.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Windows, if you get openssl error, please see instructions &lt;a href=&#34;https://stackoverflow.com/questions/54558389/how-to-solve-this-error-while-installing-python-packages-in-rstudio/54566647&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://dev.to/danilovieira/installing-openssl-on-windows-and-adding-to-path-3mbf&#34;&gt;here&lt;/a&gt; to install and update openssl.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Getting started&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use this &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/tree/main/demo/demo.R&#34;&gt;demo.R&lt;/a&gt; script as step-by-step guide that is intended to cover most common use-cases. Test the package using simulated dataset provided in the package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit our &lt;a href=&#34;https://facebookexperimental.github.io/Robyn/&#34;&gt;website&lt;/a&gt; to explore more details about Project Robyn.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Join our &lt;a href=&#34;https://www.facebook.com/groups/robynmmm/&#34;&gt;public group&lt;/a&gt; to exchange with other users and interact with team Robyn.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start (Python): TBA&lt;/h2&gt; &#xA;&lt;p&gt;Work in progress. Expect a Python wrapper soon.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Meta Robyn MMM R script is MIT licensed, as found in the LICENSE file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Terms of Use - &lt;a href=&#34;https://opensource.facebook.com/legal/terms&#34;&gt;https://opensource.facebook.com/legal/terms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Privacy Policy - &lt;a href=&#34;https://opensource.facebook.com/legal/privacy&#34;&gt;https://opensource.facebook.com/legal/privacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Defensive Publication - &lt;a href=&#34;https://www.tdcommons.org/dpubs_series/4627/&#34;&gt;https://www.tdcommons.org/dpubs_series/4627/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:gufeng@fb.com&#34;&gt;gufeng@fb.com&lt;/a&gt;, Gufeng Zhou, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:leonelsentana@fb.com&#34;&gt;leonelsentana@fb.com&lt;/a&gt;, Leonel Sentana, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:igorskokan@fb.com&#34;&gt;igorskokan@fb.com&lt;/a&gt;, Igor Skokan, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:bernardolares@fb.com&#34;&gt;bernardolares@fb.com&lt;/a&gt;, Bernardo Lares, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:kylegoldberg@fb.com&#34;&gt;kylegoldberg@fb.com&lt;/a&gt;, Kyle Goldberg, Marketing Science Partner&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rmcelreath/stat_rethinking_2022</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/rmcelreath/stat_rethinking_2022</id>
    <link href="https://github.com/rmcelreath/stat_rethinking_2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Statistical Rethinking course winter 2022&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rmcelreath/stat_rethinking_2022/main/title.gif&#34; width=&#34;500&#34;&gt; &#xA;&lt;h1&gt;Statistical Rethinking (2022 Edition)&lt;/h1&gt; &#xA;&lt;p&gt;Instructor: Richard McElreath&lt;/p&gt; &#xA;&lt;p&gt;Lectures: Uploaded &amp;lt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&#34;&gt;Playlist&lt;/a&gt;&amp;gt; and pre-recorded, two per week&lt;/p&gt; &#xA;&lt;p&gt;Discussion: Online, Fridays 3pm-4pm Central European Time&lt;/p&gt; &#xA;&lt;h1&gt;Purpose&lt;/h1&gt; &#xA;&lt;p&gt;This course teaches data analysis, but it focuses on scientific models first. The unfortunate truth about data is that nothing much can be done with it, until we say what caused it. We will prioritize conceptual, causal models and precise questions about those models. We will use Bayesian data analysis to connect scientific models to evidence. And we will learn powerful computational tools for coping with high-dimension, imperfect data of the kind that biologists and social scientists face.&lt;/p&gt; &#xA;&lt;h1&gt;Format&lt;/h1&gt; &#xA;&lt;p&gt;Online, flipped instruction. The lectures are pre-recorded. We&#39;ll meet online once a week for an hour to work through the solutions to the assigned problems.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll use the 2nd edition of my book, &amp;lt;&lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;Statistical Rethinking&lt;/a&gt;&amp;gt;. I&#39;ll provide a PDF of the book to enrolled students.&lt;/p&gt; &#xA;&lt;p&gt;Registration: Please sign up via &amp;lt;[COURSE IS FULL SORRY]&amp;gt;. I&#39;ve also set aside 100 audit tickets at the same link, for people who want to participate, but who don&#39;t need graded work and course credit.&lt;/p&gt; &#xA;&lt;h1&gt;Calendar &amp;amp; Topical Outline&lt;/h1&gt; &#xA;&lt;p&gt;There are 10 weeks of instruction. Links to lecture recordings will appear in this table. Weekly problem sets are assigned on Fridays and due the next Friday, when we discuss the solutions in the weekly online meeting.&lt;/p&gt; &#xA;&lt;p&gt;Lecture playlist on Youtube: &amp;lt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&#34;&gt;Statistical Rethinking 2022&lt;/a&gt;&amp;gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Week ##&lt;/th&gt; &#xA;   &lt;th&gt;Meeting date&lt;/th&gt; &#xA;   &lt;th&gt;Reading&lt;/th&gt; &#xA;   &lt;th&gt;Lectures&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 01&lt;/td&gt; &#xA;   &lt;td&gt;07 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 1, 2 and 3&lt;/td&gt; &#xA;   &lt;td&gt;[1] &amp;lt;&lt;a href=&#34;https://youtu.be/cclUd_HoRlo&#34;&gt;The Golem of Prague&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-01&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [2] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=guTdrfycW2Q&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=2&#34;&gt;Bayesian Inference&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-02&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 02&lt;/td&gt; &#xA;   &lt;td&gt;14 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 4 and 5&lt;/td&gt; &#xA;   &lt;td&gt;[3] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=zYYBtxHWE0A&#34;&gt;Basic Regression&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-03&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [4] &amp;lt;&lt;a href=&#34;https://youtu.be/QiHKdvAbYII&#34;&gt;Categories &amp;amp; Curves&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-04&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 03&lt;/td&gt; &#xA;   &lt;td&gt;21 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 5 and 6&lt;/td&gt; &#xA;   &lt;td&gt;[5] &amp;lt;&lt;a href=&#34;https://youtu.be/UpP-_mBvECI&#34;&gt;Elemental Confounds&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-05&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [6] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=NSuTaeW6Orc&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=6&#34;&gt;Good &amp;amp; Bad Controls&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-06&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 04&lt;/td&gt; &#xA;   &lt;td&gt;28 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 7, 8 and 9&lt;/td&gt; &#xA;   &lt;td&gt;[7] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=odGAAJDlgp8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=7&#34;&gt;Overfitting&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-07&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [8] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=Qqz5AJjyugM&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=8&amp;amp;pp=sAQB&#34;&gt;Markov chain Monte Carlo&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-08&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 05&lt;/td&gt; &#xA;   &lt;td&gt;04 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 10 and 11&lt;/td&gt; &#xA;   &lt;td&gt;[9] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=nPi5yGbfxuo&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=9&#34;&gt;Logistic and Binomial GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-09&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [10] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=YrwL6t0kW2I&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=10&#34;&gt;Sensitivity and Poisson GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-10&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 06&lt;/td&gt; &#xA;   &lt;td&gt;11 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 12 and 13&lt;/td&gt; &#xA;   &lt;td&gt;[11] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=-397DMPooR8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=11&#34;&gt;Ordered Categories&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-11&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [12] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=SocRgsf202M&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=12&#34;&gt;Multilevel Models&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-12&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 07&lt;/td&gt; &#xA;   &lt;td&gt;18 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 13 and 14&lt;/td&gt; &#xA;   &lt;td&gt;[13] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=n2aJYtuGu54&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=13&#34;&gt;Multi-Multilevel Models&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-13&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [14] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=XDoAglqd7ss&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=14&#34;&gt;Correlated varying effects&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-14&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 08&lt;/td&gt; &#xA;   &lt;td&gt;25 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapter 14&lt;/td&gt; &#xA;   &lt;td&gt;[15] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=L_QumFUv7C8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=15&#34;&gt;Social Networks&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-15&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [16] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=PIuqxOBJqLU&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=16&#34;&gt;Gaussian Processes&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-16&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 09&lt;/td&gt; &#xA;   &lt;td&gt;04 March&lt;/td&gt; &#xA;   &lt;td&gt;Chapter 15&lt;/td&gt; &#xA;   &lt;td&gt;[17] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=lTFAB6QmwHM&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=17&#34;&gt;Measurement Error&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-17&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [18] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=oMiSb8GKR0o&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=18&#34;&gt;Missing Data&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-18&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 10&lt;/td&gt; &#xA;   &lt;td&gt;11 March&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 16 and 17&lt;/td&gt; &#xA;   &lt;td&gt;[19] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=Doaod09YitA&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=19&#34;&gt;Beyond GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-19&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [20] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=qV3eos7maGs&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=20&#34;&gt;Horoscopes&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-20&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Coding&lt;/h1&gt; &#xA;&lt;p&gt;This course involves a lot of scripting. Students can engage with the material using either the original R code examples or one of several conversions to other computing environments. The conversions are not always exact, but they are rather complete. Each option is listed below. I also list conversions &amp;lt;&lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;here&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Original R Flavor&lt;/h2&gt; &#xA;&lt;p&gt;For those who want to use the original R code examples in the print book, you need to install the &lt;code&gt;rethinking&lt;/code&gt; R package. The code is all on github &lt;a href=&#34;https://github.com/rmcelreath/rethinking/&#34;&gt;https://github.com/rmcelreath/rethinking/&lt;/a&gt; and there are additional details about the package there, including information about using the more-up-to-date &lt;code&gt;cmdstanr&lt;/code&gt; instead of &lt;code&gt;rstan&lt;/code&gt; as the underlying MCMC engine.&lt;/p&gt; &#xA;&lt;h2&gt;R + Tidyverse + ggplot2 + brms&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://bookdown.org/content/4857/&#34;&gt;Tidyverse/brms&lt;/a&gt;&amp;gt; conversion is very high quality and complete through Chapter 14.&lt;/p&gt; &#xA;&lt;h2&gt;Python: PyMC3 and NumPyro and more&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://github.com/pymc-devs/resources/tree/master/Rethinking_2&#34;&gt;Python/PyMC3&lt;/a&gt;&amp;gt; conversion is quite complete. There are also at least two NumPyro conversions: &amp;lt;&lt;a href=&#34;https://github.com/asuagar/statrethink-course-numpyro-2019&#34;&gt;NumPyro1&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://fehiepsi.github.io/rethinking-numpyro/&#34;&gt;NumPyro2&lt;/a&gt;&amp;gt;. And there is this &amp;lt;&lt;a href=&#34;https://github.com/ksachdeva/rethinking-tensorflow-probability&#34;&gt;TensorFlow Probability&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Julia and Turing&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://github.com/StatisticalRethinkingJulia&#34;&gt;Julia/Turing&lt;/a&gt;&amp;gt; conversion is not as complete, but is growing fast and presents the Rethinking examples in multiple Julia engines, including the great &amp;lt;&lt;a href=&#34;https://github.com/StatisticalRethinkingJulia/TuringModels.jl&#34;&gt;TuringLang&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;p&gt;The are several other conversions. See the full list at &lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;https://xcelab.net/rm/statistical-rethinking/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Homework and solutions&lt;/h1&gt; &#xA;&lt;p&gt;I will also post problem sets and solutions. Check the folders at the top of the repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/ggplot2</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/tidyverse/ggplot2</id>
    <link href="https://github.com/tidyverse/ggplot2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of the Grammar of Graphics in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggplot2 &lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tidyverse/ggplot2/actions&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/ggplot2/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/ggplot2?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/ggplot2/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggplot2&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggplot2&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href=&#34;https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448/ref=as_li_ss_tl&#34;&gt;The Grammar of Graphics&lt;/a&gt;. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get ggplot2 is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just ggplot2:&#xA;install.packages(&#34;ggplot2&#34;)&#xA;&#xA;# Or the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/ggplot2&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a deep philosophy of visualisation. However, in most cases you start with &lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales (like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like &lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;ggplot(mpg, aes(displ, hwy, colour = class)) + &#xA;  geom_point()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/README-example-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lifecycle&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;lifecycle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of people to make millions of plots. That means, by-and-large, ggplot2 itself changes relatively little. When we do make changes, they will be generally to add new functions or arguments rather than changing the behaviour of existing functions, and if we do make changes to existing behaviour we will do them for compelling reasons.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of extensions. See a community maintained list at &lt;a href=&#34;https://exts.ggplot2.tidyverse.org/gallery/&#34;&gt;https://exts.ggplot2.tidyverse.org/gallery/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learning ggplot2&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic introduction, rather than trying to learn from reading individual documentation pages. Currently, there are three good places to start:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://r4ds.had.co.nz/data-visualisation.html&#34;&gt;Data Visualisation&lt;/a&gt; and &lt;a href=&#34;https://r4ds.had.co.nz/graphics-for-communication.html&#34;&gt;Graphics for communication&lt;/a&gt; chapters in &lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt;. R for Data Science is designed to give you a comprehensive introduction to the &lt;a href=&#34;https://www.tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;, and these two chapters will get you up to speed with the essentials of ggplot2 as quickly as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to take an online course, try &lt;a href=&#34;https://learning.oreilly.com/videos/data-visualization-in/9781491963661/&#34;&gt;Data Visualization in R With ggplot2&lt;/a&gt; by Kara Woo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to follow a webinar, try &lt;a href=&#34;https://youtu.be/h29g21z0a68&#34;&gt;Plotting Anything with ggplot2&lt;/a&gt; by Thomas Lin Pedersen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to dive into making common graphics as quickly as possible, I recommend &lt;a href=&#34;https://r-graphics.org&#34;&gt;The R Graphics Cookbook&lt;/a&gt; by Winston Chang. It provides a set of recipes to solve common graphics problems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href=&#34;https://ggplot2-book.org&#34;&gt;ggplot2: Elegant Graphics for Data Analysis&lt;/a&gt;. It describes the theoretical underpinnings of ggplot2 and shows you how all the pieces fit together. This book helps you understand the theory that underpins ggplot2, and will help you create new types of graphics specifically tailored to your needs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;RStudio community&lt;/a&gt; is a friendly place to ask any questions about ggplot2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50&#34;&gt;Stack Overflow&lt;/a&gt; is a great source of answers to common ggplot2 questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/dplyr</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/tidyverse/dplyr</id>
    <link href="https://github.com/tidyverse/dplyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dplyr: A grammar of data manipulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dplyr &lt;a href=&#34;https://dplyr.tidyverse.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/dplyr/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=dplyr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/dplyr&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/dplyr?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/dplyr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;dplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; adds new variables that are functions of existing variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select()&lt;/code&gt; picks variables based on their names.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; picks cases based on their values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;summarise()&lt;/code&gt; reduces multiple values down to a single summary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; changes the ordering of the rows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These all combine naturally with &lt;code&gt;group_by()&lt;/code&gt; which allows you to perform any operation “by group”. You can learn more about them in &lt;code&gt;vignette(&#34;dplyr&#34;)&lt;/code&gt;. As well as these single-table verbs, dplyr also provides a variety of two-table verbs, which you can learn about in &lt;code&gt;vignette(&#34;two-table&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to dplyr, the best place to start is the &lt;a href=&#34;https://r4ds.had.co.nz/transform.html&#34;&gt;data transformation chapter&lt;/a&gt; in R for data science.&lt;/p&gt; &#xA;&lt;h2&gt;Backends&lt;/h2&gt; &#xA;&lt;p&gt;In addition to data frames/tibbles, dplyr makes working with other computational backends accessible and efficient. Below is a list of alternative backends:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dtplyr.tidyverse.org/&#34;&gt;dtplyr&lt;/a&gt;: for large, in-memory datasets. Translates your dplyr code to high performance &lt;a href=&#34;https://rdatatable.gitlab.io/data.table/&#34;&gt;data.table&lt;/a&gt; code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dbplyr.tidyverse.org/&#34;&gt;dbplyr&lt;/a&gt;: for data stored in a relational database. Translates your dplyr code to SQL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://spark.rstudio.com&#34;&gt;sparklyr&lt;/a&gt;: for very large datasets stored in &lt;a href=&#34;https://spark.apache.org&#34;&gt;Apache Spark&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get dplyr is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just dplyr:&#xA;install.packages(&#34;dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development version&lt;/h3&gt; &#xA;&lt;p&gt;To get a bug fix or to use a feature from the development version, you can install the development version of dplyr from GitHub.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheat Sheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/main/data-transformation.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/main/pngs/thumbnails/data-transformation-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;&#xA;starwars %&amp;gt;% &#xA;  filter(species == &#34;Droid&#34;)&#xA;#&amp;gt; # A tibble: 6 × 14&#xA;#&amp;gt;   name   height  mass hair_color skin_color  eye_color birth_year sex   gender  &#xA;#&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &#xA;#&amp;gt; 1 C-3PO     167    75 &amp;lt;NA&amp;gt;       gold        yellow           112 none  masculi…&#xA;#&amp;gt; 2 R2-D2      96    32 &amp;lt;NA&amp;gt;       white, blue red               33 none  masculi…&#xA;#&amp;gt; 3 R5-D4      97    32 &amp;lt;NA&amp;gt;       white, red  red               NA none  masculi…&#xA;#&amp;gt; 4 IG-88     200   140 none       metal       red               15 none  masculi…&#xA;#&amp;gt; 5 R4-P17     96    NA none       silver, red red, blue         NA none  feminine&#xA;#&amp;gt; # … with 1 more row, and 5 more variables: homeworld &amp;lt;chr&amp;gt;, species &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   films &amp;lt;list&amp;gt;, vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;&#xA;&#xA;starwars %&amp;gt;% &#xA;  select(name, ends_with(&#34;color&#34;))&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           hair_color skin_color  eye_color&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;    &#xA;#&amp;gt; 1 Luke Skywalker blond      fair        blue     &#xA;#&amp;gt; 2 C-3PO          &amp;lt;NA&amp;gt;       gold        yellow   &#xA;#&amp;gt; 3 R2-D2          &amp;lt;NA&amp;gt;       white, blue red      &#xA;#&amp;gt; 4 Darth Vader    none       white       yellow   &#xA;#&amp;gt; 5 Leia Organa    brown      light       brown    &#xA;#&amp;gt; # … with 82 more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  mutate(name, bmi = mass / ((height / 100)  ^ 2)) %&amp;gt;%&#xA;  select(name:mass, bmi)&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           height  mass   bmi&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;           &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Luke Skywalker    172    77  26.0&#xA;#&amp;gt; 2 C-3PO             167    75  26.9&#xA;#&amp;gt; 3 R2-D2              96    32  34.7&#xA;#&amp;gt; 4 Darth Vader       202   136  33.3&#xA;#&amp;gt; 5 Leia Organa       150    49  21.8&#xA;#&amp;gt; # … with 82 more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  arrange(desc(mass))&#xA;#&amp;gt; # A tibble: 87 × 14&#xA;#&amp;gt;   name      height  mass hair_color skin_color eye_color birth_year sex   gender&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &#xA;#&amp;gt; 1 Jabba De…    175  1358 &amp;lt;NA&amp;gt;       green-tan… orange         600   herm… mascu…&#xA;#&amp;gt; 2 Grievous     216   159 none       brown, wh… green, y…       NA   male  mascu…&#xA;#&amp;gt; 3 IG-88        200   140 none       metal      red             15   none  mascu…&#xA;#&amp;gt; 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…&#xA;#&amp;gt; 5 Tarfful      234   136 brown      brown      blue            NA   male  mascu…&#xA;#&amp;gt; # … with 82 more rows, and 5 more variables: homeworld &amp;lt;chr&amp;gt;, species &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   films &amp;lt;list&amp;gt;, vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;&#xA;&#xA;starwars %&amp;gt;%&#xA;  group_by(species) %&amp;gt;%&#xA;  summarise(&#xA;    n = n(),&#xA;    mass = mean(mass, na.rm = TRUE)&#xA;  ) %&amp;gt;%&#xA;  filter(&#xA;    n &amp;gt; 1,&#xA;    mass &amp;gt; 50&#xA;  )&#xA;#&amp;gt; # A tibble: 8 × 3&#xA;#&amp;gt;   species      n  mass&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Droid        6  69.8&#xA;#&amp;gt; 2 Gungan       3  74  &#xA;#&amp;gt; 3 Human       35  82.8&#xA;#&amp;gt; 4 Kaminoan     2  88  &#xA;#&amp;gt; 5 Mirialan     2  53.1&#xA;#&amp;gt; # … with 3 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a clear bug, please file an issue with a minimal reproducible example on &lt;a href=&#34;https://github.com/tidyverse/dplyr/issues&#34;&gt;GitHub&lt;/a&gt;. For questions and other discussion, please use &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;community.rstudio.com&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/d/forum/manipulatr&#34;&gt;manipulatr mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://dplyr.tidyverse.org/CODE_OF_CONDUCT&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qinwf/awesome-R</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/qinwf/awesome-R</id>
    <link href="https://github.com/qinwf/awesome-R" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of awesome R packages, frameworks and software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome R&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A curated list of awesome R packages and tools. Inspired by &lt;a href=&#34;https://github.com/josephmisiti/awesome-machine-learning&#34;&gt;awesome-machine-learning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt; for &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/rstudio/RStartHere/raw/master/top_downloads_2016/top_packages&#34;&gt;Top 50&lt;/a&gt; CRAN downloaded packages or repos with 400+ &lt;img class=&#34;emoji&#34; alt=&#34;star&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/star.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#awesome-&#34;&gt;Awesome R&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#2020&#34;&gt;2020&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#2019&#34;&gt;2019&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#2018&#34;&gt;2018&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#integrated-development-environments&#34;&gt;Integrated Development Environments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#syntax&#34;&gt;Syntax&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#data-manipulation&#34;&gt;Data Manipulation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#graphic-displays&#34;&gt;Graphic Displays&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#html-widgets&#34;&gt;Html Widgets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#reproducible-research&#34;&gt;Reproducible Research&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#web-technologies-and-services&#34;&gt;Web Technologies and Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#parallel-computing&#34;&gt;Parallel Computing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#high-performance&#34;&gt;High Performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#language-api&#34;&gt;Language API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#database-management&#34;&gt;Database Management&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#machine-learning&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#natural-language-processing&#34;&gt;Natural Language Processing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#bayesian&#34;&gt;Bayesian&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#optimization&#34;&gt;Optimization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#finance&#34;&gt;Finance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#bioinformatics-and-biostatistics&#34;&gt;Bioinformatics and Biostatistics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#network-analysis&#34;&gt;Network Analysis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#spatial&#34;&gt;Spatial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#r-development&#34;&gt;R Development&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#logging&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#data-packages&#34;&gt;Data Packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#other-tools&#34;&gt;Other Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#other-interpreters&#34;&gt;Other Interpreters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#learning-r&#34;&gt;Learning R&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#resources&#34;&gt;Resources&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#websites&#34;&gt;Websites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#podcasts&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#reference-cards&#34;&gt;Reference Cards&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#moocs&#34;&gt;MOOCs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#lists&#34;&gt;Lists&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#other-awesome-lists&#34;&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2020&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt; - &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Ikuyadeu.r&#34;&gt;vscode-R&lt;/a&gt; + &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=REditorSupport.r-lsp&#34;&gt;vscode-r-lsp&lt;/a&gt; VSCode R Langauage Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/gt&#34;&gt;gt&lt;/a&gt; - Easily generate information-rich, publication-quality tables from R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/lightgbm/index.html&#34;&gt;lightgbm &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Light Gradient Boosting Machine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/torch/index.html&#34;&gt;torch&lt;/a&gt; - Tensors and Neural Networks with &#39;GPU&#39; Acceleration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2019&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thomasp85/ggforce&#34;&gt;ggforce&lt;/a&gt; - ggplot2 extension framework &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/ggforce&#34; alt=&#34;ggforce&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tylermorganwall/rayshader&#34;&gt;rayshader&lt;/a&gt; - 2D and 3D data visualizations via rgl &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/rayshader&#34; alt=&#34;rayshader&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/vroom&#34;&gt;vroom&lt;/a&gt; - Fast reading of delimited files &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/vroom&#34; alt=&#34;vroom&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrated Development Environments&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Integrated Development Environment&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Ikuyadeu.r&#34;&gt;vscode-R&lt;/a&gt; + &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=REditorSupport.r-lsp&#34;&gt;vscode-r-lsp&lt;/a&gt; VSCode R Langauage Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rstudio.org/&#34;&gt;RStudio &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - A powerful and productive user interface for R. Works great on Windows, Mac, and Linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ess.r-project.org/&#34;&gt;Emacs + ESS&lt;/a&gt; - Emacs Speaks Statistics is an add-on package for emacs text editors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/randy3k/R-Box/&#34;&gt;Sublime Text + R-Box&lt;/a&gt; - Add-on package for Sublime Text 2/3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/textmate/r.tmbundle&#34;&gt;TextMate + r.tmblundle&lt;/a&gt; - Add-on package for TextMate 1/2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.walware.de/goto/statet&#34;&gt;StatET&lt;/a&gt; - An Eclipse based IDE for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mran.microsoft.com/&#34;&gt;Microsoft R&lt;/a&gt; - Revolution R would be offered free to academic users and commercial software would focus on big data, large scale multiprocessor functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://socserv.mcmaster.ca/jfox/Misc/Rcmdr/&#34;&gt;R Commander&lt;/a&gt; - A package that provides a basic graphical user interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IRkernel/IRkernel&#34;&gt;IRkernel &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - R kernel for Jupyter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.deducer.org/pmwiki/pmwiki.php?n=Main.DeducerManual?from=Main.HomePage&#34;&gt;Deducer&lt;/a&gt; - A Menu driven data analysis GUI with a spreadsheet like data editor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://radiant-rstats.github.io/docs&#34;&gt;Radiant&lt;/a&gt; - A platform-independent browser-based interface for business analytics in R, based on the Shiny.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vim-scripts/Vim-R-plugin&#34;&gt;Vim-R&lt;/a&gt; - Vim plugin for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jalvesaq/Nvim-R&#34;&gt;Nvim-R&lt;/a&gt; - Neovim plugin for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jamovi.org/&#34;&gt;Jamovi&lt;/a&gt; and &lt;a href=&#34;https://jasp-stats.org/&#34;&gt;JASP&lt;/a&gt; - Desktop software for both Bayesian and Frequentist methods, using a UI familiar to SPSS users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.bio7.org/&#34;&gt;Bio7&lt;/a&gt; - An IDE contains tools for model creation, scientific image analysis and statistical analysis for ecological modelling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://microsoft.github.io/RTVS-docs/&#34;&gt;RTVS&lt;/a&gt; - R Tools for Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/randy3k/radian&#34;&gt;radian &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; (formerly rtichoke) - A modern R console with syntax highlighting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rkward.kde.org/&#34;&gt;RKWard&lt;/a&gt; - An extensible IDE/GUI for R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Syntax&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages change the way you use R.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smbache/magrittr&#34;&gt;magrittr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Let&#39;s pipe it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renkun-ken/pipeR&#34;&gt;pipeR&lt;/a&gt; - Multi-paradigm Pipeline Implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zatonovo/lambda.r&#34;&gt;lambda.r&lt;/a&gt; - Functional programming and simple pattern matching in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/purrr&#34;&gt;purrr&lt;/a&gt; - A FP package for R in the spirit of underscore.js.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Manipulation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for cooking data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/dplyr&#34;&gt;dplyr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Fast data frames manipulation and database query.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rdatatable/data.table&#34;&gt;data.table &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Fast data manipulation in a short and flexible syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/reshape&#34;&gt;reshape2 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Flexible rearrange, reshape and aggregate data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/tidyr&#34;&gt;tidyr&lt;/a&gt; - Easily tidy data with spread and gather functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgrtwo/broom&#34;&gt;broom &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Convert statistical analysis objects into tidy data frames.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renkun-ken/rlist&#34;&gt;rlist&lt;/a&gt; - A toolbox for non-tabular data manipulation with lists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ff.r-forge.r-project.org/&#34;&gt;ff&lt;/a&gt; - Data structures designed to store large datasets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/lubridate&#34;&gt;lubridate&lt;/a&gt; - A set of functions to work with dates and times.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gagolews/stringi&#34;&gt;stringi &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - ICU based string processing package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/stringr&#34;&gt;stringr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Consistent API for string processing, built on top of stringi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaneplusplus/bigmemory&#34;&gt;bigmemory&lt;/a&gt; - Shared memory and memory-mapped matrices. The big* packages provide additional tools including linear models (&lt;a href=&#34;http://cran.r-project.org/web/packages/biglm/index.html&#34;&gt;biglm&lt;/a&gt;) and Random Forests (&lt;a href=&#34;https://github.com/aloysius-lim/bigrf&#34;&gt;bigrf&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgrtwo/fuzzyjoin&#34;&gt;fuzzyjoin&lt;/a&gt; - Join tables together on inexact matching.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/tidyverse&#34;&gt;tidyverse&lt;/a&gt; - Easily install and load packages from the tidyverse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tazinho/snakecase&#34;&gt;snakecase&lt;/a&gt; - Automatically parse and convert strings into cases like snake or camel among others.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boxuancui/DataExplorer&#34;&gt;DataExplorer&lt;/a&gt; - Fast exploratory data analysis with minimum code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Formats&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for reading and writing data of different formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/docs/r/&#34;&gt;arrow &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - An interface to the Arrow C++ library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wesm/feather&#34;&gt;feather &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Fast, interoperable binary data frame storage for Python, R, and more powered by Apache Arrow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinwf/awesome-R/master/www.fstpackage.org/fst/&#34;&gt;fst &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Lightning Fast Serialization of Data Frames for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/haven&#34;&gt;haven&lt;/a&gt; - Improved methods to import SPSS, Stata and SAS files in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeroenooms/jsonlite&#34;&gt;jsonlite&lt;/a&gt; - A robust and quick way to parse JSON files in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/traversc/qs&#34;&gt;qs&lt;/a&gt; - Quick serialization of R objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://readxl.tidyverse.org/&#34;&gt;readxl &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Read excel files (.xls and .xlsx) into R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/readr&#34;&gt;readr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - A fast and friendly way to read tabular data into R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leeper/rio&#34;&gt;rio&lt;/a&gt; - A Swiss-Army Knife for Data I/O.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chainsawriot/readODS/&#34;&gt;readODS&lt;/a&gt; - Read OpenDocument Spreadsheets into R as data.frames.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eddelbuettel/rcpptoml&#34;&gt;RcppTOML&lt;/a&gt; - Rcpp Bindings to C++ parser for TOML files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/vroom&#34;&gt;vroom&lt;/a&gt; - Fast reading of delimited files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ropensci.org/writexl/&#34;&gt;writexl&lt;/a&gt; - Portable, light-weight data frame to xlsx exporter for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/viking/r-yaml&#34;&gt;yaml&lt;/a&gt; - R package for converting objects to and from YAML.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Graphic Displays&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for showing data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/ggplot2&#34;&gt;ggplot2 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - An implementation of the Grammar of Graphics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sinhrks/ggfortify&#34;&gt;ggfortify&lt;/a&gt; - A unified interface to ggplot2 popular statistical packages using one line of code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/slowkow/ggrepel&#34;&gt;ggrepel&lt;/a&gt; - Repel overlapping text labels away from each other.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/ggalt&#34;&gt;ggalt&lt;/a&gt; - Extra Coordinate Systems, Geoms and Statistical Transformations for ggplot2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IndrajeetPatil/ggstatsplot&#34;&gt;ggstatsplot&lt;/a&gt; - ggplot2 Based Plots with Statistical Details&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; - Visualization and annotation of phylogenetic tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ricardo-bion/ggtech&#34;&gt;ggtech&lt;/a&gt; - ggplot2 tech themes and scales&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ggplot2-exts.github.io/ggiraph.html&#34;&gt;ggplot2 Extensions&lt;/a&gt; - Showcases of ggplot2 extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deepayan/lattice&#34;&gt;lattice&lt;/a&gt; - A powerful and elegant high-level data visualization system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taiyun/corrplot&#34;&gt;corrplot&lt;/a&gt; - A graphical display of a correlation matrix or general matrix. It also contains some algorithms to do matrix reordering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rgl/index.html&#34;&gt;rgl&lt;/a&gt; - 3D visualization device system for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/Cairo/index.html&#34;&gt;Cairo&lt;/a&gt; - R graphics device using cairo graphics library for creating high-quality display output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wch/extrafont&#34;&gt;extrafont&lt;/a&gt; - Tools for using fonts in R graphics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yixuan/showtext&#34;&gt;showtext&lt;/a&gt; - Enable R graphics device to show text using system fonts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihui/animation&#34;&gt;animation&lt;/a&gt; - A simple way to produce animated graphics in R, using &lt;a href=&#34;http://imagemagick.org/&#34;&gt;ImageMagick&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgrtwo/gganimate&#34;&gt;gganimate&lt;/a&gt; - Create easy animations with ggplot2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/misc3d/index.html&#34;&gt;misc3d&lt;/a&gt; - Powerful functions to deal with 3d plots, isosurfaces, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/xkcd/index.html&#34;&gt;xkcd&lt;/a&gt; - Use xkcd style in graphs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dahtah.github.io/imager/&#34;&gt;imager&lt;/a&gt; - An image processing package based on CImg library to work with images and display them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/hrbrthemes&#34;&gt;hrbrthemes&lt;/a&gt; - 🔏 Opinionated, typographic-centric ggplot2 themes and theme components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/waffle&#34;&gt;waffle&lt;/a&gt; - 🍁 Make waffle (square pie) charts in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talgalili/dendextend&#34;&gt;dendextend&lt;/a&gt; - visualizing, adjusting and comparing trees of hierarchical clustering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tsieger/idendro&#34;&gt;idendro&lt;/a&gt; - interactive exploration of dendrograms (trees of hierarchical clustering).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/r2d3/&#34;&gt;r2d3&lt;/a&gt; - R Interface to D3 Visualizations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34;&gt;Patchwork&lt;/a&gt; - Combine separate ggplots into the same graphic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rforscience.com/rpackages/visualisation/plot3d/&#34;&gt;plot3D&lt;/a&gt; - Plotting Multi-Dimensional Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/plot3Drgl/index.html&#34;&gt;plot3Drgl&lt;/a&gt; - Plotting Multi-Dimensional Data - Using &#39;rgl&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nx10/httpgd&#34;&gt;httpgd&lt;/a&gt; - Asynchronous http server graphics device for R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HTML Widgets&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for interactive visualizations.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talgalili/heatmaply&#34;&gt;heatmaply&lt;/a&gt; - Interactive heatmaps with D3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/d3heatmap&#34;&gt;d3heatmap&lt;/a&gt; - Interactive heatmaps with D3 (no longer maintained).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rstudio.github.io/DT/&#34;&gt;DataTables&lt;/a&gt; - Displays R matrices or data frames as interactive HTML tables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rich-iannone/DiagrammeR&#34;&gt;DiagrammeR &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Create JS graph diagrams and flowcharts in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/dygraphs&#34;&gt;dygraphs&lt;/a&gt; - Charting time-series data in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renkun-ken/formattable&#34;&gt;formattable &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Formattable Data Structures.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/ggvis&#34;&gt;ggvis &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Interactive grammar of graphics for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rstudio.github.io/leaflet/&#34;&gt;Leaflet&lt;/a&gt; - One of the most popular JavaScript libraries interactive maps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hrbrmstr.github.io/metricsgraphics/&#34;&gt;MetricsGraphics&lt;/a&gt; - Enables easy creation of D3 scatterplots, line charts, and histograms.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://christophergandrud.github.io/networkD3/&#34;&gt;networkD3&lt;/a&gt; - D3 JavaScript Network Graphs from R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/juba/scatterD3&#34;&gt;scatterD3&lt;/a&gt; - Interactive scatterplots with D3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/plotly&#34;&gt;plotly &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Interactive ggplot2 and Shiny plotting with &lt;a href=&#34;https://plot.ly&#34;&gt;plot.ly&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ramnathv/rCharts&#34;&gt;rCharts &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Interactive JS Charts from R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hafen.github.io/rbokeh/&#34;&gt;rbokeh&lt;/a&gt; - R Interface to &lt;a href=&#34;http://bokeh.pydata.org/en/latest/&#34;&gt;Bokeh&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bwlewis/rthreejs&#34;&gt;threejs&lt;/a&gt; - Interactive 3D scatter plots and globes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daattali/timevis&#34;&gt;timevis&lt;/a&gt; - Create fully interactive timeline visualizations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastorm-open/visNetwork&#34;&gt;visNetwork&lt;/a&gt; - Using vis.js library for network visualization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lchiffon/wordcloud2&#34;&gt;wordcloud2&lt;/a&gt; - R interface to wordcloud2.js.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbkunst/highcharter&#34;&gt;highcharter&lt;/a&gt; - R wrapper for highcharts based on htmlwidgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JohnCoene/echarts4r&#34;&gt;echarts4r&lt;/a&gt; - R wrapper to Echarts version 4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reproducible Research&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for literate programming and reproducible workflows.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihui/knitr&#34;&gt;knitr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Easy dynamic report generation in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/noamross/redoc&#34;&gt;redoc&lt;/a&gt; - Reversible Reproducible Documents&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihui/tinytex&#34;&gt;tinytex&lt;/a&gt; - A lightweight and easy-to-maintain LaTeX distribution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/xtable/index.html&#34;&gt;xtable&lt;/a&gt; - Export tables to LaTeX or HTML.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rapport-package.info/#intro&#34;&gt;rapport&lt;/a&gt; - An R templating system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/&#34;&gt;rmarkdown &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Dynamic documents for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ramnathv/slidify&#34;&gt;slidify &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Generate reproducible html5 slides from R markdown.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.statistik.lmu.de/~leisch/Sweave/&#34;&gt;Sweave&lt;/a&gt; - A package designed to write LaTeX reports using R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leifeld/texreg&#34;&gt;texreg&lt;/a&gt; - Formatting statistical models in LaTex and HTML.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RevolutionAnalytics/checkpoint&#34;&gt;checkpoint&lt;/a&gt; - Install packages from snapshots on the checkpoint server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/brew/index.html&#34;&gt;brew&lt;/a&gt; - Pre-compute data to enhance your report templates. Can be combined with knitr.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://davidgohel.github.io/officer/index.html&#34;&gt;officer&lt;/a&gt; - An R package to generate Microsoft Word, Microsoft PowerPoint and HTML reports.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://davidgohel.github.io/flextable/index.html&#34;&gt;flextable&lt;/a&gt; - An R package to embed complex tables (merged cells, multi-level headers and footers, conditional formatting) in Microsoft Word, Microsoft PowerPoint and HTML reports. It cooperates with the [officer] package and integrates with [rmarkdown] reports.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bookdown.org/&#34;&gt;bookdown&lt;/a&gt; - Authoring Books with R Markdown.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daattali/ezknitr&#34;&gt;ezknitr&lt;/a&gt; - Avoid the typical working directory pain when using &#39;knitr&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/drake&#34;&gt;drake&lt;/a&gt; - An &lt;a href=&#34;https://ropensci.org/&#34;&gt;rOpenSci&lt;/a&gt; package for reproducible data science workflows too big for &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rsuite.io&#34;&gt;R Suite&lt;/a&gt; - A package to design flexible and reproducible deployment workflows for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html&#34;&gt;kable&lt;/a&gt; - Build fancy HTML or &#39;LaTeX&#39; tables using &#39;kable()&#39; from &#39;knitr&#39;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web Technologies and Services&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages to surf the web.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/webservices&#34;&gt;Web Technologies List&lt;/a&gt; - Information about how to use R and the world wide web together.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/shiny&#34;&gt;shiny &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Easy interactive web applications with R. See also &lt;a href=&#34;https://github.com/grabear/awesome-rshiny&#34;&gt;awesome-rshiny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daattali/shinyjs&#34;&gt;shinyjs&lt;/a&gt; - Easily improve the user interaction and user experience in your Shiny apps in seconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RCurl/index.html&#34;&gt;RCurl&lt;/a&gt; - General network (HTTP/FTP/...) client interface for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeroen/curl&#34;&gt;curl&lt;/a&gt; - A Modern and Flexible Web Client for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/httr&#34;&gt;httr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - User-friendly RCurl wrapper.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/httpuv&#34;&gt;httpuv&lt;/a&gt; - HTTP and WebSocket server library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/XML/index.html&#34;&gt;XML &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Tools for parsing and generating XML within R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/xml2/index.html&#34;&gt;xml2 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Optimized tools for parsing and generating XML within R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/rvest&#34;&gt;rvest &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Simple web scraping for R, using CSSSelect or XPath syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opencpu.org/&#34;&gt;OpenCPU &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - HTTP API for R handling concurrent calls, based on the Apache2 web server, to expose R code as REST web services and create full-sized, multi-page web applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pablobarbera/Rfacebook&#34;&gt;Rfacebook&lt;/a&gt; - Access to Facebook API via R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/randyzwitch/RSiteCatalyst&#34;&gt;RSiteCatalyst&lt;/a&gt; - R client library for the Adobe Analytics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trestletech/plumber&#34;&gt;plumber&lt;/a&gt; - A library to expose existing R code as web API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thinkr-open.github.io/golem/&#34;&gt;golem&lt;/a&gt; - A framework for building production-grade Shiny apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Parallel Computing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for parallel computing.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/views/HighPerformanceComputing.html&#34;&gt;parallel&lt;/a&gt; - R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages &lt;a href=&#34;http://cran.r-project.org/web/packages/multicore/index.html&#34;&gt;multicore&lt;/a&gt; and &lt;a href=&#34;http://cran.r-project.org/web/packages/snow/index.html&#34;&gt;snow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/Rmpi/index.html&#34;&gt;Rmpi&lt;/a&gt; - Rmpi provides an interface (wrapper) to MPI APIs. It also provides interactive R slave environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/foreach/index.html&#34;&gt;foreach &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Executing the loop in parallel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=future&#34;&gt;future &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - A minimal, efficient, cross-platform unified Future API for parallel and distributed processing in R; designed for beginners as well as advanced developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amplab-extras/SparkR-pkg&#34;&gt;SparkR &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - R frontend for Spark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vertica/DistributedR&#34;&gt;DistributedR&lt;/a&gt; - A scalable high-performance platform from HP Vertica Analytics Team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vertica/ddR&#34;&gt;ddR&lt;/a&gt; - Provides distributed data structures and simplifies distributed computing in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://spark.rstudio.com/&#34;&gt;sparklyr&lt;/a&gt; - R interface for Apache Spark from RStudio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=batchtools&#34;&gt;batchtools&lt;/a&gt; - High performance computing with LSF, TORQUE, Slurm, OpenLava, SGE and Docker Swarm.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;High Performance&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for making R faster.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rcpp.org/&#34;&gt;Rcpp &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Rcpp provides a powerful API on top of R, make function in R extremely faster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rcpp11/Rcpp11&#34;&gt;Rcpp11&lt;/a&gt; - Rcpp11 is a complete redesign of Rcpp, targetting C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/compiler/html/compile.html&#34;&gt;compiler&lt;/a&gt; - speeding up your R code using the JIT&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/cpp11&#34;&gt;cpp11&lt;/a&gt; - cpp11 is a header-only R package that helps R package developers handle R objects with C++ code. It&#39;s similar to Rcpp but with different design trade-offs and features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Language API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for other languages.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rJava/&#34;&gt;rJava&lt;/a&gt; - Low-level R to Java interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cran/jvmr&#34;&gt;jvmr&lt;/a&gt; - Integration of R, Java, and Scala.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/reticulate/index.html&#34;&gt;reticulate &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Interface to &#39;Python&#39;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rJython/index.html&#34;&gt;rJython&lt;/a&gt; - R interface to Python via Jython.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rPython/index.html&#34;&gt;rPython&lt;/a&gt; - Package allowing R to call Python.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihui/runr&#34;&gt;runr&lt;/a&gt; - Run Julia and Bash from R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armgong/RJulia&#34;&gt;RJulia&lt;/a&gt; - R package Call Julia.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Non-Contradiction/JuliaCall&#34;&gt;JuliaCall&lt;/a&gt; - Seamless Integration Between R and Julia.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/a/ddahl.org/rinruby-users/&#34;&gt;RinRuby&lt;/a&gt; - a Ruby library that integrates the R interpreter in Ruby.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/R.matlab/index.html&#34;&gt;R.matlab&lt;/a&gt; - Read and write of MAT files together with R-to-MATLAB connectivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renozao/RcppOctave&#34;&gt;RcppOctave&lt;/a&gt; - Seamless Interface to Octave and Matlab.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.omegahat.org/RSPerl/&#34;&gt;RSPerl&lt;/a&gt; - A bidirectional interface for calling R from Perl and Perl from R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeroenooms/V8&#34;&gt;V8&lt;/a&gt; - Embedded JavaScript Engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.htmlwidgets.org/&#34;&gt;htmlwidgets&lt;/a&gt; - Bring the best of JavaScript data visualization to R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rpy.sourceforge.net/&#34;&gt;rpy2&lt;/a&gt; - Python interface for R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database Management&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for managing data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RODBC/&#34;&gt;RODBC&lt;/a&gt; - ODBC database access for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstats-db/DBI&#34;&gt;DBI&lt;/a&gt; - Defines a common interface between the R and database management systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/elastic&#34;&gt;elastic&lt;/a&gt; - Wrapper for the Elasticsearch HTTP API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeroenooms/mongolite&#34;&gt;mongolite&lt;/a&gt; - Streaming Mongo Client for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/r-dbi/odbc&#34;&gt;odbc&lt;/a&gt; - Connect to ODBC databases (using the DBI interface)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstats-db/RMariaDB&#34;&gt;RMariaDB&lt;/a&gt; - An R interface to MariaDB (a replacement for the old RMySQL package)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RMySQL/&#34;&gt;RMySQL&lt;/a&gt; - R interface to the MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ROracle/index.html&#34;&gt;ROracle&lt;/a&gt; - OCI based Oracle database interface for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/r-dbi/RPostgres&#34;&gt;RPostgres&lt;/a&gt; - an DBI-compliant interface to the postgres database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.google.com/p/rpostgresql/&#34;&gt;RPostgreSQL&lt;/a&gt; - R interface to the PostgreSQL database system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RSQLite/&#34;&gt;RSQLite&lt;/a&gt; - SQLite interface for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RJDBC/&#34;&gt;RJDBC&lt;/a&gt; - Provides access to databases through the JDBC interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongosoup/rmongodb&#34;&gt;rmongodb&lt;/a&gt; - R driver for MongoDB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richfitz/redux&#34;&gt;redux&lt;/a&gt; - Redis client for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RCassandra/index.html&#34;&gt;RCassandra&lt;/a&gt; - Direct interface (not Java) to the most basic functionality of Apache Cassandra.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nexr/RHive&#34;&gt;RHive&lt;/a&gt; - R extension facilitating distributed computing via Apache Hive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nicolewhite/Rneo4j&#34;&gt;RNeo4j&lt;/a&gt; - Neo4j graph database driver.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mablab/rpostgis&#34;&gt;rpostgis&lt;/a&gt; - R interface to PostGIS database and get spatial objects in R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for making R cleverer.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/business-science/anomalize&#34;&gt;anomalize&lt;/a&gt; - Tidy Anomaly Detection using Twitter&#39;s AnomalyDetection method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/AnomalyDetection&#34;&gt;AnomalyDetection &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - AnomalyDetection R package from Twitter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ahaz/index.html&#34;&gt;ahaz&lt;/a&gt; - Regularization for semiparametric additive hazards regression.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/arules/index.html&#34;&gt;arules&lt;/a&gt; - Mining Association Rules and Frequent Itemsets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/bigrf/index.html&#34;&gt;bigrf&lt;/a&gt; - Big Random Forests: Classification and Regression Forests for Large Data Sets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/bigRR/index.html&#34;&gt;bigRR&lt;/a&gt; - Generalized Ridge Regression (with special advantage for p &amp;gt;&amp;gt; n cases)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/bmrm/index.html&#34;&gt;bmrm&lt;/a&gt; - Bundle Methods for Regularized Risk Minimization Package&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/Boruta/index.html&#34;&gt;Boruta&lt;/a&gt; - A wrapper algorithm for all-relevant feature selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/BreakoutDetection&#34;&gt;BreakoutDetection &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Breakout Detection via Robust E-Statistics from Twitter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/bst/index.html&#34;&gt;bst&lt;/a&gt; - Gradient Boosting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/CausalImpact&#34;&gt;CausalImpact &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Causal inference using Bayesian structural time-series models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/C50/index.html&#34;&gt;C50&lt;/a&gt; - C5.0 Decision Trees and Rule-Based Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/caret/index.html&#34;&gt;caret &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Classification and Regression Training&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbrownlee/CleverAlgorithmsMachineLearning&#34;&gt;Clever Algorithms For Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/CORElearn/index.html&#34;&gt;CORElearn&lt;/a&gt; - Classification, regression, feature evaluation and ordinal evaluation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/CoxBoost/index.html&#34;&gt;CoxBoost&lt;/a&gt; - Cox models by likelihood based boosting for a single survival endpoint or competing risks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/Cubist/index.html&#34;&gt;Cubist&lt;/a&gt; - Rule- and Instance-Based Regression Modeling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/e1071/index.html&#34;&gt;e1071&lt;/a&gt; - Misc Functions of the Department of Statistics (e1071), TU Wien&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/earth/index.html&#34;&gt;earth&lt;/a&gt; - Multivariate Adaptive Regression Spline Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/elasticnet/index.html&#34;&gt;elasticnet&lt;/a&gt; - Elastic-Net for Sparse Estimation and Sparse PCA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ElemStatLearn/index.html&#34;&gt;ElemStatLearn&lt;/a&gt; - Data sets, functions and examples from the book: &#34;The Elements of Statistical Learning, Data Mining, Inference, and Prediction&#34; by Trevor Hastie, Robert Tibshirani and Jerome Friedman&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/evtree/index.html&#34;&gt;evtree&lt;/a&gt; - Evolutionary Learning of Globally Optimal Trees&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverts/fable/&#34;&gt;fable&lt;/a&gt; - a collection of commonly used univariate and multivariate time series forecasting models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookincubator/prophet&#34;&gt;prophet &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Tool for producing high quality forecasts for time series data that has multiple seasonality with linear or non-linear growth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/FSelector/index.html&#34;&gt;FSelector&lt;/a&gt; - A feature selection framework, based on subset-search or feature ranking approches.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/frbs/index.html&#34;&gt;frbs&lt;/a&gt; - Fuzzy Rule-based Systems for Classification and Regression Tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/GAMBoost/index.html&#34;&gt;GAMBoost&lt;/a&gt; - Generalized linear and additive models by likelihood based boosting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/gamboostLSS/index.html&#34;&gt;gamboostLSS&lt;/a&gt; - Boosting Methods for GAMLSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/gbm/index.html&#34;&gt;gbm&lt;/a&gt; - Generalized Boosted Regression Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/glmnet/index.html&#34;&gt;glmnet &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Lasso and elastic-net regularized generalized linear models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/glmpath/index.html&#34;&gt;glmpath&lt;/a&gt; - L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/GMMBoost/index.html&#34;&gt;GMMBoost&lt;/a&gt; - Likelihood-based Boosting for Generalized mixed models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/grplasso/index.html&#34;&gt;grplasso&lt;/a&gt; - Fitting user specified models with Group Lasso penalty&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/grpreg/index.html&#34;&gt;grpreg&lt;/a&gt; - Regularization paths for regression models with grouped covariates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/h2o/index.html&#34;&gt;h2o &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Deeplearning, Random forests, GBM, KMeans, PCA, GLM&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/hda/index.html&#34;&gt;hda&lt;/a&gt; - Heteroscedastic Discriminant Analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ipred/index.html&#34;&gt;ipred&lt;/a&gt; - Improved Predictors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/kernlab/index.html&#34;&gt;kernlab&lt;/a&gt; - kernlab: Kernel-based Machine Learning Lab&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/klaR/index.html&#34;&gt;klaR&lt;/a&gt; - Classification and visualization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/kohonen/&#34;&gt;kohonen&lt;/a&gt; - Supervised and Unsupervised Self-Organising Maps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/L0Learn/index.html&#34;&gt;L0Learn&lt;/a&gt; - Fast algorithms for best subset selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/lars/index.html&#34;&gt;lars&lt;/a&gt; - Least Angle Regression, Lasso and Forward Stagewise&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/lasso2/index.html&#34;&gt;lasso2&lt;/a&gt; - L1 constrained estimation aka ‘lasso’&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/LiblineaR/index.html&#34;&gt;LiblineaR&lt;/a&gt; - Linear Predictive Models Based On The Liblinear C/C++ Library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/lightgbm/index.html&#34;&gt;lightgbm &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Light Gradient Boosting Machine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lme4/lme4&#34;&gt;lme4 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Mixed-effects models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/nlme/index.html&#34;&gt;nlme &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Mixed-effects models, handling user-specified matrix of residual covariance, relevant for the analysis of repeated observations in longitudinal trials&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/glmmTMB/index.html&#34;&gt;glmmTMB&lt;/a&gt; - Generalized mixed-effects models, handling user-specified matrix of residual covariance, relevant for the analysis of repeated observations in longitudinal trials&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/LogicReg/index.html&#34;&gt;LogicReg&lt;/a&gt; - Logic Regression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/maptree/index.html&#34;&gt;maptree&lt;/a&gt; - Mapping, pruning, and graphing tree models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/mboost/index.html&#34;&gt;mboost&lt;/a&gt; - Model-Based Boosting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnmyleswhite/ML_for_Hackers&#34;&gt;Machine Learning For Hackers &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mlr-org/mlr&#34;&gt;mlr&lt;/a&gt; - Extensible framework for classification, regression, survival analysis and clustering [DEPRECIATED]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mlr-org/mlr3&#34;&gt;mlr3 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Next generation extensible framework for classification, regression, survival analysis and clustering&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/mvpart/index.html&#34;&gt;mvpart&lt;/a&gt; - Multivariate partitioning&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dmlc/mxnet/tree/master/R-package&#34;&gt;MXNet &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - MXNet brings flexible and efficient GPU computing and state-of-art deep learning to R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ncvreg/index.html&#34;&gt;ncvreg&lt;/a&gt; - Regularization paths for SCAD- and MCP-penalized regression models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/nnet/index.html&#34;&gt;nnet&lt;/a&gt; - eed-forward Neural Networks and Multinomial Log-Linear Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/oblique.tree/index.html&#34;&gt;oblique.tree&lt;/a&gt; - Oblique Trees for Classification Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/pamr/index.html&#34;&gt;pamr&lt;/a&gt; - Pam: prediction analysis for microarrays&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/party/index.html&#34;&gt;party&lt;/a&gt; - A Laboratory for Recursive Partytioning&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/partykit/index.html&#34;&gt;partykit&lt;/a&gt; - A Toolkit for Recursive Partytioning&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/penalized/index.html&#34;&gt;penalized&lt;/a&gt; - L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/penalizedLDA/index.html&#34;&gt;penalizedLDA&lt;/a&gt; - Penalized classification using Fisher&#39;s linear discriminant&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/penalizedSVM/index.html&#34;&gt;penalizedSVM&lt;/a&gt; - Feature Selection SVM using penalty functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/quantregForest/index.html&#34;&gt;quantregForest&lt;/a&gt; - quantregForest: Quantile Regression Forests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/randomForest/index.html&#34;&gt;randomForest&lt;/a&gt; - randomForest: Breiman and Cutler&#39;s random forests for classification and regression.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/randomForestSRC/index.html&#34;&gt;randomForestSRC&lt;/a&gt; - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imbs-hl/ranger&#34;&gt;ranger&lt;/a&gt; - A Fast Implementation of Random Forests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rattle/index.html&#34;&gt;rattle&lt;/a&gt; - Graphical user interface for data mining in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rda/index.html&#34;&gt;rda&lt;/a&gt; - Shrunken Centroids Regularized Discriminant Analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rdetools/index.html&#34;&gt;rdetools&lt;/a&gt; - Relevant Dimension Estimation (RDE) in Feature Spaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/REEMtree/index.html&#34;&gt;REEMtree&lt;/a&gt; - Regression Trees with Random Effects for Longitudinal (Panel) Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/relaxo/index.html&#34;&gt;relaxo&lt;/a&gt; - Relaxed Lasso&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rgenoud/index.html&#34;&gt;rgenoud&lt;/a&gt; - R version of GENetic Optimization Using Derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rgp/index.html&#34;&gt;rgp&lt;/a&gt; - R genetic programming framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/Rmalschains/index.html&#34;&gt;Rmalschains&lt;/a&gt; - Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rminer/index.html&#34;&gt;rminer&lt;/a&gt; - Simpler use of data mining methods (e.g. NN and SVM) in classification and regression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ROCR/index.html&#34;&gt;ROCR&lt;/a&gt; - Visualizing the performance of scoring classifiers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RoughSets/index.html&#34;&gt;RoughSets&lt;/a&gt; - Data Analysis Using Rough Set and Fuzzy Rough Set Theories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rpart/index.html&#34;&gt;rpart&lt;/a&gt; - Recursive Partitioning and Regression Trees&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RPMM/index.html&#34;&gt;RPMM&lt;/a&gt; - Recursively Partitioned Mixture Model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RSNNS/index.html&#34;&gt;RSNNS&lt;/a&gt; - Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/Rsomoclu/index.html&#34;&gt;Rsomoclu&lt;/a&gt; - Parallel implementation of self-organizing maps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RWeka/index.html&#34;&gt;RWeka&lt;/a&gt; - R/Weka interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/RXshrink/index.html&#34;&gt;RXshrink&lt;/a&gt; - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/sda/index.html&#34;&gt;sda&lt;/a&gt; - Shrinkage Discriminant Analysis and CAT Score Variable Selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/SDDA/index.html&#34;&gt;SDDA&lt;/a&gt; - Stepwise Diagonal Discriminant Analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ecpolley/SuperLearner&#34;&gt;SuperLearner&lt;/a&gt; and &lt;a href=&#34;http://cran.r-project.org/web/packages/subsemble/index.html&#34;&gt;subsemble&lt;/a&gt; - Multi-algorithm ensemble learning packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kassambara/survminer&#34;&gt;survminer&lt;/a&gt; - Survival Analysis &amp;amp; Visualization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/survival/index.html&#34;&gt;survival&lt;/a&gt; - Survival Analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/svmpath/index.html&#34;&gt;svmpath&lt;/a&gt; - svmpath: the SVM Path algorithm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/tgp/index.html&#34;&gt;tgp&lt;/a&gt; - Bayesian treed Gaussian process models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/tidymodels/index.html&#34;&gt;tidymodels&lt;/a&gt; - A collection of packages for modeling and statistical analysis that share the underlying design philosophy, grammar, and data structures of the tidyverse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/torch/index.html&#34;&gt;torch&lt;/a&gt; - Tensors and Neural Networks with &#39;GPU&#39; Acceleration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/tree/index.html&#34;&gt;tree&lt;/a&gt; - Classification and regression trees&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/varSelRF/index.html&#34;&gt;varSelRF&lt;/a&gt; - Variable selection using random forests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tqchen/xgboost/tree/master/R-package&#34;&gt;xgboost &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - eXtreme Gradient Boosting Tree model, well known for its speed and performance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Natural Language Processing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for Natural Language Processing.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dselivanov/text2vec&#34;&gt;text2vec&lt;/a&gt; - Fast Text Mining Framework for Vectorization and Word Embeddings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/tm/index.html&#34;&gt;tm&lt;/a&gt; - A comprehensive text mining framework for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/openNLP/index.html&#34;&gt;openNLP&lt;/a&gt; - Apache OpenNLP Tools Interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/koRpus/index.html&#34;&gt;koRpus&lt;/a&gt; - An R Package for Text Analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/zipfR/index.html&#34;&gt;zipfR&lt;/a&gt; - Statistical models for word frequency distributions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/NLP/index.html&#34;&gt;NLP&lt;/a&gt; - Basic functions for Natural Language Processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpsievert/LDAvis&#34;&gt;LDAvis&lt;/a&gt; - Interactive visualization of topic models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/topicmodels/index.html&#34;&gt;topicmodels&lt;/a&gt; - Topic modeling interface to the C code developed by by David M. Blei for Topic Modeling (Latent Dirichlet Allocation (LDA), and Correlated Topics Models (CTM)).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/syuzhet/index.html&#34;&gt;syuzhet&lt;/a&gt; - Extracts sentiment from text using three different sentiment dictionaries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/SnowballC/index.html&#34;&gt;SnowballC&lt;/a&gt; - Snowball stemmers based on the C libstemmer UTF-8 library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kbenoit/quanteda&#34;&gt;quanteda&lt;/a&gt; - R functions for Quantitative Analysis of Textual Data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trinker/topicmodels_learning&#34;&gt;Topic Models Resources&lt;/a&gt; - Topic Models learning and R related resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BZRLC/R-notes/raw/master/NLP/readme.md&#34;&gt;NLP for &lt;img src=&#34;https://assets-cdn.github.com/images/icons/emoji/unicode/1f1e8-1f1f3.png&#34; width=&#34;20&#34; heigth=&#34;20&#34; align=&#34;absmiddle&#34; class=&#34;emoji&#34; alt=&#34;&lt;span&gt;🇨🇳&lt;/span&gt;&#34;&gt;&lt;/a&gt; - NLP related resources in R. @Chinese&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/masalmon/monkeylearn&#34;&gt;MonkeyLearn&lt;/a&gt; - 🐒 R package for text analysis with Monkeylearn 🐒.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tidytextmining.com/index.html&#34;&gt;tidytext&lt;/a&gt; - Implementing tidy principles of Hadley Wickham to text mining.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patperry/r-utf8&#34;&gt;utf8&lt;/a&gt; - Manipulating and printing UTF-8 text that fixes multiple bugs in R&#39;s UTF-8 handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kgjerde.github.io/corporaexplorer/&#34;&gt;corporaexplorer&lt;/a&gt; - Dynamic exploration of text collections&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bayesian&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for Bayesian Inference.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/coda/index.html&#34;&gt;coda&lt;/a&gt; - Output analysis and diagnostics for MCMC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/mcmc/index.html&#34;&gt;mcmc&lt;/a&gt; - Markov Chain Monte Carlo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mcmcpack.berkeley.edu/&#34;&gt;MCMCpack&lt;/a&gt; - Markov chain Monte Carlo (MCMC) Package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/R2WinBUGS/index.html&#34;&gt;R2WinBUGS&lt;/a&gt; - Running WinBUGS and OpenBUGS from R / S-PLUS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/BRugs/index.html&#34;&gt;BRugs&lt;/a&gt; - R interface to the OpenBUGS MCMC software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/rjags/index.html&#34;&gt;rjags&lt;/a&gt; - R interface to the JAGS MCMC library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mc-stan.org/interfaces/rstan.html&#34;&gt;rstan &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - R interface to the Stan MCMC software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optimization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for Optimization.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/lpSolve/index.html&#34;&gt;lpSolve&lt;/a&gt; - Interface to &lt;code&gt;Lp_solve&lt;/code&gt; to Solve Linear/Integer Programs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/minqa/index.html&#34;&gt;minqa&lt;/a&gt; - Derivative-free optimization algorithms by quadratic approximation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/nloptr/index.html&#34;&gt;nloptr&lt;/a&gt; - NLopt is a free/open-source library for nonlinear optimization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/ompr/index.html&#34;&gt;ompr&lt;/a&gt; - Model mixed integer linear programs in an algebraic way directly in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/Rglpk/index.html&#34;&gt;Rglpk&lt;/a&gt; - R/GNU Linear Programming Kit Interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/ROI/index.html&#34;&gt;ROI&lt;/a&gt; - The R Optimization Infrastructure (&#39;ROI&#39;) is a sophisticated framework for handling optimization problems in R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Finance&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for dealing with money.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.quantmod.com/&#34;&gt;quantmod &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Quantitative Financial Modelling &amp;amp; Trading Framework for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pedquant.com/&#34;&gt;pedquant&lt;/a&gt; - Public Economic Data and Quantitative Analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/TTR/index.html&#34;&gt;TTR&lt;/a&gt; - Functions and data to construct technical trading rules with R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/PerformanceAnalytics/index.html&#34;&gt;PerformanceAnalytics&lt;/a&gt; - Econometric tools for performance and risk analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/zoo/index.html&#34;&gt;zoo &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - S3 Infrastructure for Regular and Irregular Time Series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/xts/index.html&#34;&gt;xts&lt;/a&gt; - eXtensible Time Series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/tseries/index.html&#34;&gt;tseries&lt;/a&gt; - Time series analysis and computational finance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/fAssets/index.html&#34;&gt;fAssets&lt;/a&gt; - Analysing and Modelling Financial Assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShichenXie/scorecard&#34;&gt;scorecard&lt;/a&gt; - Credit Risk Scorecard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bioinformatics and Biostatistics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for processing biological datasets.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.bioconductor.org/&#34;&gt;Bioconductor &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Tools for the analysis and comprehension of high-throughput genomic data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/genetics/index.html&#34;&gt;genetics&lt;/a&gt; - Classes and methods for handling genetic data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/gap/index.html&#34;&gt;gap&lt;/a&gt; - An integrated package for genetic data analysis of both population and family data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ape/index.html&#34;&gt;ape&lt;/a&gt; - Analyses of Phylogenetics and Evolution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/pheatmap/index.html&#34;&gt;pheatmap&lt;/a&gt; - Pretty heatmaps made easy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lme4/lme4&#34;&gt;lme4&lt;/a&gt; - Generalized mixed-effects models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/nlme/index.html&#34;&gt;nlme&lt;/a&gt; - Mixed-effects models, handling user-specified matrix of residual covariance, relevant for the anaysis of repeated observations in longitudinal trials.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/glmmTMB/index.html&#34;&gt;glmmTMB&lt;/a&gt; - Generalized mixed-effects models, handling user-specified matrix of residual covariance, relevant for the anaysis of repeated observations in longitudinal trials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Network Analysis&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages to construct, analyze and visualize network data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/briatte/awesome-network-analysis&#34;&gt;Network Analysis List&lt;/a&gt; - Network Analysis related resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://igraph.org/r/&#34;&gt;igraph &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - A collection of network analysis tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/network/index.html&#34;&gt;network&lt;/a&gt; - Basic tools to manipulate relational data in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/sna/index.html&#34;&gt;sna&lt;/a&gt; - Basic network measures and visualization tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/USCCANA/netdiffuseR&#34;&gt;netdiffuseR&lt;/a&gt; - Tools for Analysis of Network Diffusion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/networkDynamic/&#34;&gt;networkDynamic&lt;/a&gt; - Support for dynamic, (inter)temporal networks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/ndtv/&#34;&gt;ndtv&lt;/a&gt; - Tools to construct animated visualizations of dynamic network data in various formats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://statnet.org/&#34;&gt;statnet&lt;/a&gt; - The project behind many R network analysis packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/ergm/index.html&#34;&gt;ergm&lt;/a&gt; - Exponential random graph models in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/latentnet/index.html&#34;&gt;latentnet&lt;/a&gt; - Latent position and cluster models for network objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/tnet/index.html&#34;&gt;tnet&lt;/a&gt; - Network measures for weighted, two-mode and longitudinal networks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gvegayon/rgexf/wiki/Home&#34;&gt;rgexf&lt;/a&gt; - Export network objects from R to &lt;a href=&#34;http://gexf.net/format/&#34;&gt;GEXF&lt;/a&gt;, for manipulation with network software like &lt;a href=&#34;https://gephi.org/&#34;&gt;Gephi&lt;/a&gt; or &lt;a href=&#34;http://sigmajs.org/&#34;&gt;Sigma&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastorm-open/visNetwork&#34;&gt;visNetwork&lt;/a&gt; - Using vis.js library for network visualization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thomasp85/tidygraph&#34;&gt;tidygraph&lt;/a&gt; - A tidy API for graph manipulation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Spatial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages to explore the earth.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/views/Spatial.html&#34;&gt;CRAN Task View: Analysis of Spatial Data&lt;/a&gt;- Spatial Analysis related resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rstudio.github.io/leaflet/&#34;&gt;Leaflet&lt;/a&gt; - One of the most popular JavaScript libraries interactive maps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dkahle/ggmap&#34;&gt;ggmap&lt;/a&gt; - Plotting maps in R with ggplot2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lchiffon/REmap&#34;&gt;REmap&lt;/a&gt; - R interface to the JavaScript library ECharts for interactive map data visualization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/sf/index.html&#34;&gt;sf&lt;/a&gt; - Improved Classes and Methods for Spatial Data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edzer.github.io/sp/&#34;&gt;sp&lt;/a&gt; - Classes and Methods for Spatial Data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/rgeos/index.html&#34;&gt;rgeos&lt;/a&gt; - Interface to Geometry Engine - Open Source&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/rgdal/index.html&#34;&gt;rgdal&lt;/a&gt; - Bindings for the Geospatial Data Abstraction Library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/maptools/index.html&#34;&gt;maptools&lt;/a&gt; - Tools for Reading and Handling Spatial Objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edzer/gstat&#34;&gt;gstat&lt;/a&gt; - Spatial and spatio-temporal geostatistical modelling, prediction and simulation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edzer/spacetime&#34;&gt;spacetime&lt;/a&gt; - R classes and methods for spatio-temporal data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/RColorBrewer/index.html&#34;&gt;RColorBrewer&lt;/a&gt; - Provides color schemes for maps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spatstat/spatstat&#34;&gt;spatstat&lt;/a&gt; - Spatial Point Pattern Analysis, Model-Fitting, Simulation, Tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/spdep/index.html&#34;&gt;spdep&lt;/a&gt; - Spatial Dependence: Weighting Schemes, Statistics and Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/walkerke/tigris&#34;&gt;tigris&lt;/a&gt; - Download and use Census TIGER/Line shapefiles in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/GWmodel/&#34;&gt;GWmodel&lt;/a&gt; - Geographically-Weighted Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mtennekes/tmap&#34;&gt;tmap&lt;/a&gt; - R package for thematic maps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;R Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for packages.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/PackageDevelopment&#34;&gt;Package Development List&lt;/a&gt; - R packages to improve package development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/promises/index.html&#34;&gt;promises&lt;/a&gt; - Abstractions for Promise-Based Asynchronous Programming&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/devtools&#34;&gt;devtools &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Tools to make an R developer&#39;s life easier.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/testthat&#34;&gt;testthat &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - An R package to make testing fun.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wch/R6&#34;&gt;R6 &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - simpler, faster, lighter-weight alternative to R&#39;s built-in classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/pryr&#34;&gt;pryr &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Make it easier to understand what&#39;s going on in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/klutometis/roxygen&#34;&gt;roxygen &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - Describe your functions in comments next to their definitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/lineprof&#34;&gt;lineprof&lt;/a&gt; - Visualise line profiling results in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/packrat&#34;&gt;packrat&lt;/a&gt; - Make your R projects more isolated, portable, and reproducible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talgalili/installr/&#34;&gt;installr&lt;/a&gt; - Functions for installing softwares from within R (for Windows).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smbache/import/&#34;&gt;import&lt;/a&gt; - An import mechanism for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/klmr/modules&#34;&gt;modules&lt;/a&gt; - An alternative (Python style) module system for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rocker-org&#34;&gt;Rocker &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - R configurations for &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daattali/rstudio-addins&#34;&gt;RStudio Addins&lt;/a&gt; - List of RStudio addins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eddelbuettel/drat&#34;&gt;drat&lt;/a&gt; - Creation and use of R repositories on GitHub or other repos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimhester/covr&#34;&gt;covr&lt;/a&gt; - Test coverage for your R package and (optionally) upload the results to &lt;a href=&#34;https://coveralls.io/&#34;&gt;coveralls&lt;/a&gt; or &lt;a href=&#34;https://codecov.io/&#34;&gt;codecov&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34;&gt;lintr&lt;/a&gt; - Static code analysis for R to enforce code style.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/staticdocs&#34;&gt;staticdocs&lt;/a&gt; - Generate static html documentation for an R package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/metrumresearchgroup/sinew&#34;&gt;sinew&lt;/a&gt; - Generate roxygen2 skeletons populated with information scraped from the function script.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for Logging&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zatonovo/futile.logger&#34;&gt;futile.logger&lt;/a&gt; - A logging package in R similar to log4j&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnmyleswhite/log4r&#34;&gt;log4r&lt;/a&gt; - A log4j derivative for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/logging/index.html&#34;&gt;logging&lt;/a&gt; - A logging package emulating the python logging package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Packages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Handy Data Packages&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jalapic/engsoccerdata&#34;&gt;engsoccerdata&lt;/a&gt; - English and European soccer results 1871-2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/jennybc/gapminder&#34;&gt;gapminder&lt;/a&gt; - Excerpt from the Gapminder dataset (data about countries through the past 50 years).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/wbstats/index.html&#34;&gt;wbstats&lt;/a&gt; - Tools for searching and downloading data and statistics from the World Bank Data API and the World Bank Data Catalog API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrrlw/ICON&#34;&gt;ICON&lt;/a&gt; - complex systems &amp;amp; networks datasets from the Index of COmplex Networks (ICON) database &lt;a href=&#34;http://icon.colorado.edu&#34;&gt;webpage&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thospfuller/rcoboldi&#34;&gt;RCOBOLDI&lt;/a&gt; - Import COBOL CopyBook data files directly into R as properly structured data frames. Package builds are available via &lt;a href=&#34;https://github.com/thospfuller/drat&#34;&gt;Drat&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/thospfuller/rcoboldi-rocker-rstudio&#34;&gt;DockerHub&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Tools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Handy Tools for R&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/git2r&#34;&gt;git2r&lt;/a&gt; - Gives you programmatic access to Git repositories from R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anaconda.org/r/repo&#34;&gt;Conda&lt;/a&gt; - Most R packages are available through the Conda polyglot cross-platform dependency manager.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Interpreters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Alternative R engines.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cs.kent.ac.uk/projects/cxxr/&#34;&gt;CXXR&lt;/a&gt; - Refactorising R into C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/allr/fastr/wiki/Home&#34;&gt;fastR&lt;/a&gt; - FastR is an implementation of the R Language in Java atop Truffle and Graal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pqr-project.org/&#34;&gt;pqR&lt;/a&gt; - a &#34;pretty quick&#34; implementation of R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.renjin.org/&#34;&gt;renjin&lt;/a&gt; - a JVM-based interpreter for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rho-devel/rho&#34;&gt;rho&lt;/a&gt; - Refactor the interpreter of the R language into a fully-compatible, efficient, VM for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jtalbot/riposte&#34;&gt;riposte&lt;/a&gt; - a fast interpreter and JIT for R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://spotfire.tibco.com/discover-spotfire/what-does-spotfire-do/predictive-analytics/tibco-enterprise-runtime-for-r-terr&#34;&gt;TERR&lt;/a&gt; - TIBCO Enterprise Runtime for R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learning R&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Packages for Learning R.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://swirlstats.com/&#34;&gt;swirl &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - An interactive R tutorial directly in your R console.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ujjwalkarn/DataScienceR&#34;&gt;DataScienceR &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - a list of R tutorials for Data Science, NLP and Machine Learning.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;p&gt;Where to discover new R-esources.&lt;/p&gt; &#xA;&lt;h2&gt;Websites&lt;/h2&gt; &#xA;&lt;h3&gt;Manuals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.r-project.org/&#34;&gt;R-project&lt;/a&gt; - The R Project for Statistical Computing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/doc/manuals/R-intro.pdf&#34;&gt;An Introduction to R&lt;/a&gt; - A very good introductory text on R, also covers some advanced topic. See also the &lt;code&gt;Manuals&lt;/code&gt; section on &lt;a href=&#34;https://cran.r-project.org/manuals.html&#34;&gt;CRAN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/other-docs.html&#34;&gt;CRAN Contributed Docs&lt;/a&gt; - CRAN Contributed Documentation in many languages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.statmethods.net/&#34;&gt;Quick-R&lt;/a&gt; - An excellent quick reference&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tryr.codeschool.com/&#34;&gt;tryR&lt;/a&gt; - A quick course for getting started with R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tools and References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/&#34;&gt;RDocumentation&lt;/a&gt; - Search through all CRAN, Bioconductor, Github packages and their archives with RDocumentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rdrr.io/&#34;&gt;rdrr.io&lt;/a&gt; - Find R package documentation. Try R packages in your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/web/views/&#34;&gt;CRAN Task Views&lt;/a&gt; - Task Views for CRAN packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rnotebook.io/&#34;&gt;rnotebook.io&lt;/a&gt; - Create online R Jupyter Notebooks for free.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;News and Info&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rweekly.org&#34;&gt;R Weekly&lt;/a&gt; - Weekly updates about R and Data Science. R Weekly is openly developed on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/&#34;&gt;R Bloggers&lt;/a&gt; - There are people scattered across the Web who blog about R. This is simply an aggregator of many of those feeds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.r-users.com/&#34;&gt;R-users&lt;/a&gt; - A job board for R users (and the people who are looking to hire them)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;h3&gt;Free and Online&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://r4ds.had.co.nz/&#34;&gt;&lt;em&gt;R for Data Science&lt;/em&gt; by Garrett Grolemund &amp;amp; Hadley Wickham&lt;/a&gt; - Free book from RStudio developers with emphasis on data science workflow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/&#34;&gt;&lt;em&gt;R Cookbook&lt;/em&gt; by Winston Chang&lt;/a&gt; - A problem-oriented online book that supports his &lt;a href=&#34;http://shop.oreilly.com/product/0636920063704.do&#34;&gt;R Graphics Cookbook, 2nd ed. (2018)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://adv-r.hadley.nz/&#34;&gt;&lt;em&gt;Advanced R&lt;/em&gt;, 2nd ed. by Hadley Wickham (2019) &lt;img class=&#34;emoji&#34; alt=&#34;heart&#34; src=&#34;https://cdn.jsdelivr.net/gh/qinwf/awesome-R@3c66da6e291bcc0520b1649125b0bed750896a9a/heart.png&#34; height=&#34;20&#34; align=&#34;absmiddle&#34; width=&#34;20&#34;&gt;&lt;/a&gt; - An online version of the Advanced R book.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://r-pkgs.org/&#34;&gt;&lt;em&gt;R Packages&lt;/em&gt;, 2nd ed. by Hadley Wickham &amp;amp; Jennifer Bryan&lt;/a&gt; - A book (in paper and website formats) on writing R packages.&lt;/li&gt; &#xA; &lt;li&gt;Books written as part of the Johns Hopkins Data Science Specialization: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leanpub.com/exdata&#34;&gt;&lt;em&gt;Exploratory Data Analysis with R&lt;/em&gt; by Roger D. Peng (2016)&lt;/a&gt; - Basic analytical skills for all sorts of data in R.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leanpub.com/rprogramming&#34;&gt;&lt;em&gt;R Programming for Data Science&lt;/em&gt; by Roger D. Peng (2019)&lt;/a&gt; - More advanced data analysis that relies on R programming.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leanpub.com/reportwriting&#34;&gt;&lt;em&gt;Report Writing for Data Science in R&lt;/em&gt; by Roger D. Peng (2019)&lt;/a&gt; - R-based methods for reproducible research and report generation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://r4stats.com/books/free-version/&#34;&gt;&lt;em&gt;R for SAS and SPSS users&lt;/em&gt; by Bob Muenchen (2012)&lt;/a&gt; - An excellent resource for users already familiar with SAS or SPSS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://faculty.marshall.usc.edu/gareth-james/ISL/&#34;&gt;&lt;em&gt;Introduction to Statistical Learning with Application in R&lt;/em&gt; by Gareth James et al. (2017)&lt;/a&gt; - A simplified and &#34;operational&#34; version of &lt;em&gt;The Elements of Statistical Learning&lt;/em&gt;. Free softcopy provided by its authors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.burns-stat.com/pages/Tutor/R_inferno.pdf&#34;&gt;&lt;em&gt;The R Inferno&lt;/em&gt; by Patrick Burns (2011)&lt;/a&gt; - Patrick Burns gives insight into R&#39;s ins and outs along with its quirks!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://csgillespie.github.io/efficientR/&#34;&gt;&lt;em&gt;Efficient R Programming&lt;/em&gt; by Colin Gillespie &amp;amp; Robin Lovelace (2017)&lt;/a&gt; - An online version of the O’Reilly book: Efficient R Programming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/R_Programming&#34;&gt;The R Programming Wikibook&lt;/a&gt; - A collaborative handbook for R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/9781593273842.do&#34;&gt;The Art of R Programming&lt;/a&gt; - It&#39;s a good resource for systematically learning fundamentals such as types of objects, control statements, variable scope, classes and debugging in R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/0636920174851.do&#34;&gt;&lt;em&gt;R Cookbook&lt;/em&gt;, 2nd ed. by JD Long &amp;amp; Paul Teetor (2019)&lt;/a&gt; - A quick and simple introduction to conducting many common statistical tasks with R.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.manning.com/kabacoff2/&#34;&gt;R in Action&lt;/a&gt; - This book aims at all levels of users, with sections for beginning, intermediate and advanced R ranging from &#34;Exploring R data structures&#34; to running regressions and conducting factor analyses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.springer.com/series/6991?detailsPage=titles&#34;&gt;&lt;em&gt;Use R!&lt;/em&gt; Series by Springer&lt;/a&gt; - This series of inexpensive and focused books from Springer publish shorter books aimed at practitioners. Books can discuss the use of R in a particular subject area, such as Bayesian networks, ggplot2 and Rcpp.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.packtpub.com/big-data-and-business-intelligence/learning-r-programming&#34;&gt;Learning R Programming&lt;/a&gt; - Learning R as a programming language from basics to advanced topics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Book/monograph Lists and Reviews&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RomanTsegelskyi/rbooks&#34;&gt;R Books List&lt;/a&gt; - List of R Books.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/stats337&#34;&gt;Readings in Applied Data Science&lt;/a&gt; - These readings reflect Hadley&#39;s personal thoughts about applied data science.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Podcasts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soundcloud.com/nssd-podcast&#34;&gt;Not So Standard Deviations&lt;/a&gt; - The Data Science Podcast. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/rdpeng&#34;&gt;@Roger Peng&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/hspter&#34;&gt;@Hilary Parker&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rworld.news/blog/&#34;&gt;R World News&lt;/a&gt; - R World News helps you keep up with happenings within the R community. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/hrbrmstr&#34;&gt;@Bob Rudis&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jayjacobs&#34;&gt;@Jay Jacobs&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://r-podcast.org/&#34;&gt;The R-Podcast&lt;/a&gt; - Giving practical advice on how to use R. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://r-podcast.org/stories/contact.html&#34;&gt;@Eric Nantz&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rtalk.org&#34;&gt;R Talk&lt;/a&gt; - News and discussions of statistical software and language R. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/quominus&#34;&gt;@Oliver Keyes&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jasdumas&#34;&gt;@Jasmine Dumas&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/emhrt_&#34;&gt;@Ted Hart&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/bearloga&#34;&gt;@Mikhail Popov&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rweekly.org&#34;&gt;R Weekly&lt;/a&gt; - Weekly news updates about the R community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference Cards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/resources/cheatsheets/&#34;&gt;RStudio Cheat Sheets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdf&#34;&gt;R&amp;nbsp;Reference&amp;nbsp;Card&amp;nbsp;2.0&lt;/a&gt; - Material from R for Beginners by permission of Emmanuel Paradis (Version 2 by Matt Baggott).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/doc/contrib/Ricci-refcard-regression.pdf&#34;&gt;Regression Analysis Refcard&lt;/a&gt; - R Reference Card for Regression Analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ess.r-project.org/refcard.pdf&#34;&gt;Reference Card for ESS&lt;/a&gt; - Reference Card for ESS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MOOCs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Massive open online courses.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coursera.org/specialization/jhudatascience/1&#34;&gt;Johns Hopkins University Data Science Specialization&lt;/a&gt; - 9 courses including: Introduction to R, literate analysis tools, Shiny and some more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://simplystatistics.org/2014/11/25/harvardx-biomedical-data-science-open-online-training-curriculum-launches-on-january-19/&#34;&gt;HarvardX Biomedical Data Science&lt;/a&gt; - Introduction to R for the Life Sciences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.edx.org/course/explore-statistics-r-kix-kiexplorx-0&#34;&gt;Explore Statistics with R&lt;/a&gt; - Covers introduction, data handling and statistical analysis in R.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lists&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Great resources for learning domain knowledge.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RomanTsegelskyi/rbooks&#34;&gt;Books&lt;/a&gt; - List of R Books.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ggplot2-exts.github.io/ggiraph.html&#34;&gt;ggplot2 Extensions&lt;/a&gt; - Showcases of ggplot2 extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BZRLC/R-notes/raw/master/NLP/readme.md&#34;&gt;Natural Language Processing &lt;img src=&#34;https://assets-cdn.github.com/images/icons/emoji/unicode/1f1e8-1f1f3.png&#34; width=&#34;20&#34; heigth=&#34;20&#34; align=&#34;absmiddle&#34; class=&#34;emoji&#34; alt=&#34;&lt;span&gt;🇨🇳&lt;/span&gt;&#34;&gt;&lt;/a&gt; - NLP related resources in R. @Chinese&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/briatte/awesome-network-analysis&#34;&gt;Network Analysis&lt;/a&gt; - Network Analysis related resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/opendata&#34;&gt;Open Data&lt;/a&gt; - Using R to obtain, parse, manipulate, create, and share open data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qinwf/awesome-R/raw/master/misc/posts.md&#34;&gt;Posts&lt;/a&gt; - Great R blog posts or Rticles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/PackageDevelopment&#34;&gt;Package Development&lt;/a&gt; - R packages to improve package development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.r-project.org/conferences.html&#34;&gt;R Project Conferences&lt;/a&gt; - Information about useR! Conferences and DSC Conferences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/RStartHere&#34;&gt;RStartHere&lt;/a&gt; - A guide to some of the most useful R packages, organized by workflow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daattali/addinslist&#34;&gt;RStudio Addins&lt;/a&gt; - List of RStudio addins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trinker/topicmodels_learning&#34;&gt;Topic Models&lt;/a&gt; - Topic Models learning and R related resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/webservices&#34;&gt;Web Technologies&lt;/a&gt; - Information about how to use R and the world wide web together.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;R Ecosystems&lt;/h2&gt; &#xA;&lt;p&gt;R communities and package collections (in alphabetical order):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ropengov.github.io/&#34;&gt;rOpenGov&lt;/a&gt; Open government data, computational social science, digital humanities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rOpenHealth&#34;&gt;rOpenHealth&lt;/a&gt; Public health data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ropensci.org&#34;&gt;rOpenSci&lt;/a&gt; Open science&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2018&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverts/fable&#34;&gt;fable&lt;/a&gt; - univariate and multivariate time series forecasting models &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/fable&#34; alt=&#34;fable&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/r2d3/&#34;&gt;r2d3&lt;/a&gt; - R Interface to D3 Visualizations &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/r2d3&#34; alt=&#34;r2d3&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio-education/rstats-ed&#34;&gt;rstats-ed&lt;/a&gt; - List of courses teaching R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/promises/index.html&#34;&gt;promises&lt;/a&gt; - Abstractions for Promise-Based Asynchronous Programming &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/promises&#34; alt=&#34;promises&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yihui.name/tinytex/&#34;&gt;tinytex&lt;/a&gt; - A lightweight and easy-to-maintain LaTeX distribution &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/tinytex&#34; alt=&#34;tinytex&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hadley/stats337&#34;&gt;Readings in Applied Data Science&lt;/a&gt; - These readings reflect Hadley&#39;s personal thoughts about applied data science.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2017&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookincubator/prophet&#34;&gt;prophet&lt;/a&gt; - Tool for producing high quality forecasts for time series data that has multiple seasonality with linear or non-linear growth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/tidyverse&#34;&gt;tidyverse&lt;/a&gt; - Easily install and load packages from the tidyverse&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/purrr&#34;&gt;purrr&lt;/a&gt; - A functional programming toolkit for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/hrbrthemes&#34;&gt;hrbrthemes&lt;/a&gt; - 🔏 Opinionated, typographic-centric ggplot2 themes and theme components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;xaringan&lt;/a&gt; - Create HTML5 slides with R Markdown and the JavaScript library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt; - Create Blogs and Websites with R Markdown&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/glue&#34;&gt;glue&lt;/a&gt; - Glue strings to data in R. Small, fast, dependency free interpreted string literals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimhester/covr&#34;&gt;covr&lt;/a&gt; - Test coverage reports for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34;&gt;lintr&lt;/a&gt; - Static Code Analysis for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jennybc/reprex&#34;&gt;reprex&lt;/a&gt; - Render bits of R code for sharing, e.g., on GitHub or StackOverflow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/reticulate&#34;&gt;reticulate&lt;/a&gt; - R Interface to Python&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/tensorflow&#34;&gt;tensorflow&lt;/a&gt; - TensorFlow for R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patperry/r-utf8&#34;&gt;utf8&lt;/a&gt; - Manipulating and printing UTF-8 text that fixes multiple bugs in R&#39;s UTF-8 handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34;&gt;Patchwork&lt;/a&gt; - Combine separate ggplots into the same graphic.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Other Awesome Lists&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bayandin/awesome-awesomeness&#34;&gt;awesome-awesomeness&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jnv/lists&#34;&gt;lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grabear/awesome-rshiny&#34;&gt;awesome-rshiny&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Your contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License - &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/legalcode&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-dbi/bigrquery</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/r-dbi/bigrquery</id>
    <link href="https://github.com/r-dbi/bigrquery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interface to Google&#39;s BigQuery from R.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bigrquery&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=bigrquery&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/bigrquery&#34; alt=&#34;CRAN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r-dbi/bigrquery/actions&#34;&gt;&lt;img src=&#34;https://github.com/r-dbi/bigrquery/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/r-dbi/bigrquery?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-dbi/bigrquery/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The bigrquery package makes it easy to work with data stored in &lt;a href=&#34;https://cloud.google.com/bigquery/docs&#34;&gt;Google BigQuery&lt;/a&gt; by allowing you to query BigQuery tables and retrieve metadata about your projects, datasets, tables, and jobs. The bigrquery package provides three levels of abstraction on top of BigQuery:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The low-level API provides thin wrappers over the underlying REST API. All the low-level functions start with &lt;code&gt;bq_&lt;/code&gt;, and mostly have the form &lt;code&gt;bq_noun_verb()&lt;/code&gt;. This level of abstraction is most appropriate if you’re familiar with the REST API and you want do something not supported in the higher-level APIs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://www.r-dbi.org&#34;&gt;DBI interface&lt;/a&gt; wraps the low-level API and makes working with BigQuery like working with any other database system. This is most convenient layer if you want to execute SQL queries in BigQuery or upload smaller amounts (i.e.&amp;nbsp;&amp;lt;100 MB) of data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://dbplyr.tidyverse.org/&#34;&gt;dplyr interface&lt;/a&gt; lets you treat BigQuery tables as if they are in-memory data frames. This is the most convenient layer if you don’t want to write SQL, but instead want dbplyr to write it for you.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The current bigrquery release can be installed from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;bigrquery&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The newest development release can be installed from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#39;devtools&#39;)&#xA;devtools::install_github(&#34;r-dbi/bigrquery&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Low-level API&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(bigrquery)&#xA;billing &amp;lt;- bq_test_project() # replace this with your project ID &#xA;sql &amp;lt;- &#34;SELECT year, month, day, weight_pounds FROM `publicdata.samples.natality`&#34;&#xA;&#xA;tb &amp;lt;- bq_project_query(billing, sql)&#xA;bq_table_download(tb, n_max = 10)&#xA;#&amp;gt; First chunk includes all requested rows.&#xA;#&amp;gt; # A tibble: 10 x 4&#xA;#&amp;gt;     year month   day weight_pounds&#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;         &amp;lt;dbl&amp;gt;&#xA;#&amp;gt;  1  1969     1    20          7.00&#xA;#&amp;gt;  2  1969     1    27          7.69&#xA;#&amp;gt;  3  1969     6    19          6.75&#xA;#&amp;gt;  4  1969     5    30          6.19&#xA;#&amp;gt;  5  1969    11     9          7.87&#xA;#&amp;gt;  6  1969     5    25          7.06&#xA;#&amp;gt;  7  1969     7    25          7.94&#xA;#&amp;gt;  8  1969     9    11          7.06&#xA;#&amp;gt;  9  1969     7    13          6.00&#xA;#&amp;gt; 10  1969     9    27          8.13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DBI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(DBI)&#xA;&#xA;con &amp;lt;- dbConnect(&#xA;  bigrquery::bigquery(),&#xA;  project = &#34;publicdata&#34;,&#xA;  dataset = &#34;samples&#34;,&#xA;  billing = billing&#xA;)&#xA;con &#xA;#&amp;gt; &amp;lt;BigQueryConnection&amp;gt;&#xA;#&amp;gt;   Dataset: publicdata.samples&#xA;#&amp;gt;   Billing: gargle-169921&#xA;&#xA;dbListTables(con)&#xA;#&amp;gt; [1] &#34;github_nested&#34;   &#34;github_timeline&#34; &#34;gsod&#34;            &#34;natality&#34;       &#xA;#&amp;gt; [5] &#34;shakespeare&#34;     &#34;trigrams&#34;        &#34;wikipedia&#34;&#xA;&#xA;dbGetQuery(con, sql, n = 10)&#xA;#&amp;gt; First chunk includes all requested rows.&#xA;#&amp;gt; # A tibble: 10 x 4&#xA;#&amp;gt;     year month   day weight_pounds&#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;         &amp;lt;dbl&amp;gt;&#xA;#&amp;gt;  1  1969     1    20          7.00&#xA;#&amp;gt;  2  1969     1    27          7.69&#xA;#&amp;gt;  3  1969     6    19          6.75&#xA;#&amp;gt;  4  1969     5    30          6.19&#xA;#&amp;gt;  5  1969    11     9          7.87&#xA;#&amp;gt;  6  1969     5    25          7.06&#xA;#&amp;gt;  7  1969     7    25          7.94&#xA;#&amp;gt;  8  1969     9    11          7.06&#xA;#&amp;gt;  9  1969     7    13          6.00&#xA;#&amp;gt; 10  1969     9    27          8.13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;dplyr&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;&#xA;natality &amp;lt;- tbl(con, &#34;natality&#34;)&#xA;&#xA;natality %&amp;gt;%&#xA;  select(year, month, day, weight_pounds) %&amp;gt;% &#xA;  head(10) %&amp;gt;%&#xA;  collect()&#xA;#&amp;gt; # A tibble: 10 x 4&#xA;#&amp;gt;     year month   day weight_pounds&#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;         &amp;lt;dbl&amp;gt;&#xA;#&amp;gt;  1  1969    10     6          3.25&#xA;#&amp;gt;  2  1969     5    11          5.75&#xA;#&amp;gt;  3  1969     6    29          7.94&#xA;#&amp;gt;  4  1969     3     7          8.38&#xA;#&amp;gt;  5  1970     4    26          6.38&#xA;#&amp;gt;  6  1971    10     6          6.69&#xA;#&amp;gt;  7  1971     2    23          6.69&#xA;#&amp;gt;  8  1971     8    12          7.37&#xA;#&amp;gt;  9  1969     9     3          5.25&#xA;#&amp;gt; 10  1969     4    25          6.62&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important details&lt;/h2&gt; &#xA;&lt;h3&gt;Authentication and authorization&lt;/h3&gt; &#xA;&lt;p&gt;When using bigrquery interactively, you’ll be prompted to &lt;a href=&#34;https://cloud.google.com/bigquery/docs/authorization&#34;&gt;authorize bigrquery&lt;/a&gt; in the browser. Your token will be cached across sessions inside the folder &lt;code&gt;~/.R/gargle/gargle-oauth/&lt;/code&gt;, by default. For non-interactive usage, it is preferred to use a service account token and put it into force via &lt;code&gt;bq_auth(path = &#34;/path/to/your/service-account.json&#34;)&lt;/code&gt;. More places to learn about auth:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Help for &lt;a href=&#34;https://bigrquery.r-dbi.org/reference/bq_auth.html&#34;&gt;&lt;code&gt;bigrquery::bq_auth()&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gargle.r-lib.org/articles/how-gargle-gets-tokens.html&#34;&gt;How gargle gets tokens&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;bigrquery obtains a token with &lt;code&gt;gargle::token_fetch()&lt;/code&gt;, which supports a variety of token flows. This article provides full details, such as how to take advantage of Application Default Credentials or service accounts on GCE VMs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gargle.r-lib.org/articles/non-interactive-auth.html&#34;&gt;Non-interactive auth&lt;/a&gt;. Explains how to set up a project when code must run without any user interaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gargle.r-lib.org/articles/get-api-credentials.html&#34;&gt;How to get your own API credentials&lt;/a&gt;. Instructions for getting your own OAuth client (or “app”) or service account token.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that bigrquery requests permission to modify your data; but it will never do so unless you explicitly request it (e.g.&amp;nbsp;by calling &lt;code&gt;bq_table_delete()&lt;/code&gt; or &lt;code&gt;bq_table_upload()&lt;/code&gt;). Our &lt;a href=&#34;https://www.tidyverse.org/google_privacy_policy&#34;&gt;Privacy policy&lt;/a&gt; provides more info.&lt;/p&gt; &#xA;&lt;h3&gt;Billing project&lt;/h3&gt; &#xA;&lt;p&gt;If you just want to play around with the BigQuery API, it’s easiest to start with Google’s free &lt;a href=&#34;https://cloud.google.com/bigquery/public-data&#34;&gt;sample data&lt;/a&gt;. You’ll still need to create a project, but if you’re just playing around, it’s unlikely that you’ll go over the free limit (1 TB of queries / 10 GB of storage).&lt;/p&gt; &#xA;&lt;p&gt;To create a project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;https://console.cloud.google.com/&lt;/a&gt; and create a project. Make a note of the “Project ID” in the “Project info” box.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on “APIs &amp;amp; Services”, then “Dashboard” in the left the left menu.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on “Enable Apis and Services” at the top of the page, then search for “BigQuery API” and “Cloud storage”.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Use your project ID as the &lt;code&gt;billing&lt;/code&gt; project whenever you work with free sample data; and as the &lt;code&gt;project&lt;/code&gt; when you work with your own data.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators&#34;&gt;SQL reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/bigquery/docs/reference/rest&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigquery.cloud.google.com/&#34;&gt;Query/job console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Billing console&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Policies&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the ‘bigrquery’ project is released with a &lt;a href=&#34;https://bigrquery.r-dbi.org/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tidyverse.org/google_privacy_policy&#34;&gt;Privacy policy&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-tmap/tmap</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/r-tmap/tmap</id>
    <link href="https://github.com/r-tmap/tmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package for thematic maps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tmap: thematic maps in R&lt;/h1&gt; &#xA;&lt;!--[![Build Status](https://travis-ci.org/mtennekes/tmap.png?branch=master)](https://travis-ci.org/mtennekes/tmap)--&gt; &#xA;&lt;!--[![Coverage Status](https://img.shields.io/codecov/c/github/mtennekes/tmap/master.svg)](https://codecov.io/github/mtennekes/tmap?branch=master)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/mtennekes/tmap&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/mtennekes/tmap?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3-brightgreen.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=tmap&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/tmap&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_tmap.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/tmap&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.r-pkg.org/pkg/tmap&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/tmap?color=brightgreen&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/package=tmap&#34;&gt;&lt;code&gt;tmap&lt;/code&gt;&lt;/a&gt; is an actively maintained open-source &lt;a href=&#34;http://stackoverflow.com/tags/r/info&#34;&gt;R&lt;/a&gt;-library for drawing thematic maps. The API is based on &lt;a href=&#34;http://vita.had.co.nz/papers/layered-grammar.pdf&#34;&gt;&lt;em&gt;A Layered Grammar of Graphics&lt;/em&gt;&lt;/a&gt; and resembles the syntax of &lt;a href=&#34;http://cran.r-project.org/package=ggplot2&#34;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;, a popular R-library for drawing charts.&lt;/p&gt; &#xA;&lt;span&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/classic.png&#34; alt=&#34;Classic World Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/bubble.png&#34; alt=&#34;Bubble Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/view_metro4.jpg&#34; alt=&#34;Bubble Map&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/world_facets2.png&#34; alt=&#34;World facets&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/USchoro.png&#34; alt=&#34;US Choropleth&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/US_PR.jpg&#34; alt=&#34;US Choropleth&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes3b.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes4.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/crimes5.png&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;img src=&#34;https://mtennekes.github.io/downloads/images/view_crimes2.JPG&#34; alt=&#34;London Crimes&#34; height=&#34;125px&#34;&gt; &lt;/span&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/r-tmap/tmap/#reference&#34;&gt;below&lt;/a&gt; the source code for these images.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;tmap&lt;/code&gt; is available on &lt;a href=&#34;https://cran.r-project.org/package=tmap&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/tmap&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt;. Installation is straightforward:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;tmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Linux and macOS users who are new to working with spatial data in R, this may fail since additional (non-R) libraries are required (which are automatically installed for Windows users).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; No additional installation required.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux (Ubuntu)&lt;/strong&gt; See &lt;a href=&#34;https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/&#34;&gt;https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/&lt;/a&gt;. Please address installation issues in this &lt;a href=&#34;https://github.com/r-tmap/tmap/issues/150&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt; See &lt;a href=&#34;http://www.kyngchaos.com&#34;&gt;http://www.kyngchaos.com&lt;/a&gt;. Please address installation issues in this &lt;a href=&#34;https://github.com/r-tmap/tmap/issues/149&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;The latest development version can be installed using &lt;code&gt;devtools&lt;/code&gt;. In order to use the development version of &lt;code&gt;tmap&lt;/code&gt;, it is recommended to use the development version of &lt;a href=&#34;http://github.com/r-tmap/tmaptools&#34;&gt;tmaptools&lt;/a&gt; as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(remotes)&#xA;install_github(&#34;r-tmap/tmaptools&#34;)&#xA;install_github(&#34;r-tmap/tmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/r-tmap/tmap/raw/master/NEWS&#34;&gt;NEWS&lt;/a&gt; for the latest features and improvements and the &lt;a href=&#34;https://github.com/r-tmap/tmap/issues&#34;&gt;issue list&lt;/a&gt; for discussions of enhancements and bugs.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to help with the development of the package? Please let us know! Any feedback, requests, tips, or bug reports are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tmap)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Book&lt;/h2&gt; &#xA;&lt;p&gt;Tennekes, M., Nowosad, J., Elegant and informative maps with tmap. Draft version, &lt;a href=&#34;https://r-tmap.github.io/&#34;&gt;https://r-tmap.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.18637/jss.v084.i06&#34;&gt;Tennekes, M., 2018, tmap: Thematic Maps in R, Journal of Statistical Software, 84(6), 1-39&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This paper has been written for &lt;code&gt;tmap&lt;/code&gt; 1.11-2. See the &lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-JSS-code.html&#34;&gt;reproducible code&lt;/a&gt; using &lt;code&gt;tmap&lt;/code&gt; 2.x and 3.x.&lt;/p&gt; &#xA;&lt;h2&gt;Vignettes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-getstarted.html&#34;&gt;tmap: get started!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=tmap/vignettes/tmap-changes.html&#34;&gt;tmap: what is changed in recent versions?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mtennekes.github.io/tmap4/index.html&#34;&gt;tmap v4: a sneak peak&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-tmap/tmap/raw/master/demo/tutorials/rmarkdown_tmap.Rmd&#34;&gt;tmap in RMarkdown&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Presentations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_opengeo_muenster.pdf&#34;&gt;Creating thematic maps in R&lt;/a&gt; (OpenGeoHUB Summer School 2019)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mtennekes/tmap-workshop&#34;&gt;Plotting spatial data with R&lt;/a&gt; (eRum 2018)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_user2017.pdf&#34;&gt;Exploring and presenting maps with tmap&lt;/a&gt; (useR!2017)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mtennekes.github.io/downloads/presentations/tmap_user2015.pdf&#34;&gt;tmap: creating thematic maps in a flexible way&lt;/a&gt; (useR!2015)]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://geocompr.robinlovelace.net/adv-map.html&#34;&gt;Geocomputation with R; Making maps with R, Robin Lovelace, Jakub Nowosad, Jannes Muenchow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wgFVmzSbaQc#t=3m20s&#34;&gt;R tip: Create maps in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gotellilab.github.io/Bio381/StudentPresentations/SpatialDataTutorial.html&#34;&gt;Working with Spatial Data and using tmap, Samantha A. Alger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.computerworld.com/article/3175623/data-analytics/mapping-in-r-just-got-a-whole-lot-easier.html&#34;&gt;Computer World: Mapping in R just got a whole lot easier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sesync-ci.github.io/maps-in-R-lesson/&#34;&gt;National Socio-Environmental Synthesis Center: Maps in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/doc/contrib/intro-spatial-rl.pdf&#34;&gt;Introduction to visualising spatial data in R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://spatcontrol.net/SpatialControl/2015/11/06/tmap-r-package/&#34;&gt;Blog post StatialControl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twiav.nl/en/blog0002en.php&#34;&gt;Blog post TWIAV&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cwrld.us/Rmaps10&#34;&gt;Computer World: Create maps in R in 10 (fairly) easy steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.computerworld.com/article/2921176/business-intelligence/great-r-packages-for-data-import-wrangling-visualization.html&#34;&gt;Computer World: Great R packages for data import, wrangling and visualization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Robinlovelace/Creating-maps-in-R/raw/master/vignettes/vspd-base-shiny.Rmd&#34;&gt;Tutorial Visualising spatial data: from base to shiny - workshop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/tmap&#34;&gt;Stack Overflow questions (#tmap)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help with &lt;code&gt;tmap&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/tags/tmap&#34;&gt;stackoverflow&lt;/a&gt; is a great source of answers to common tmap questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem. Please tag your questions with &lt;em&gt;tmap&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have a request or if think your problem is caused by a bug, please open an &lt;a href=&#34;https://github.com/mtennekes/tmap/issues&#34;&gt;issue&lt;/a&gt;, preferably with a reproducible example.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>YuLab-SMU/clusterProfiler</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/YuLab-SMU/clusterProfiler</id>
    <link href="https://github.com/YuLab-SMU/clusterProfiler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📊 A universal enrichment tool for interpreting omics data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clusterProfiler&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Bioconductor/BiocStickers/master/clusterProfiler/clusterProfiler.png&#34; height=&#34;200&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;http://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active - The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bioconductor.org/packages/clusterProfiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release%20version-4.0.2-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/guangchuangyu/clusterProfiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/devel%20version-4.1.3-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bioconductor.org/packages/devel/bioc/html/clusterProfiler.html#since&#34;&gt;&lt;img src=&#34;http://www.bioconductor.org/shields/years-in-bioc/clusterProfiler.svg?sanitize=true&#34; alt=&#34;Bioc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bioconductor.org/packages/devel/bioc/html/clusterProfiler.html#archives&#34;&gt;&lt;img src=&#34;http://www.bioconductor.org/shields/availability/devel/clusterProfiler.svg?sanitize=true&#34; alt=&#34;platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bioconductor.org/checkResults/devel/bioc-LATEST/clusterProfiler/&#34;&gt;&lt;img src=&#34;http://www.bioconductor.org/shields/build/devel/bioc/clusterProfiler.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/GuangchuangYu/clusterProfiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/GuangchuangYu/clusterProfiler/master.svg?label=Mac%20OSX%20%26%20Linux&#34; alt=&#34;Linux/Mac Travis Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/GuangchuangYu/clusterProfiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/Guangchuangyu/clusterProfiler/master.svg?label=Windows&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/GuangchuangYu/clusterProfiler/&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/GuangchuangYu/clusterProfiler/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;[![Last-changedate](https://img.shields.io/badge/last%20change-2021--08--16-green.svg)](https://github.com/GuangchuangYu/clusterProfiler/commits/master)&#xA;--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt; supports exploring functional characteristics of both coding and non-coding genomics data for thousands of species with up-to-date gene annotation.&lt;/li&gt; &#xA; &lt;li&gt;It provides a universal interface for gene functional annotation from a variety of sources and thus can be applied in diverse scenarios.&lt;/li&gt; &#xA; &lt;li&gt;It provides a tidy interface to access, manipulate, and visualize enrichment results to help users achieve efficient data interpretation&lt;/li&gt; &#xA; &lt;li&gt;Datasets obtained from multiple treatments and time points can be analyzed and compared in a single run, easily revealing functional consensus and differences among distinct conditions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For details, please visit &lt;a href=&#34;https://yulab-smu.top/biomedical-knowledge-mining-book/&#34;&gt;https://yulab-smu.top/biomedical-knowledge-mining-book/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/YuLab-SMU/clusterProfiler/master/graphic-abstract-The-Innovation-2021.jpg&#34; width=&#34;890&#34;&gt; &#xA;&lt;h2&gt;&lt;span&gt;✍&lt;/span&gt; Authors&lt;/h2&gt; &#xA;&lt;p&gt;Guangchuang YU &lt;a href=&#34;https://yulab-smu.top&#34;&gt;https://yulab-smu.top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;School of Basic Medical Sciences, Southern Medical University&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/intent/tweet?hashtags=clusterProfiler&amp;amp;url=http://online.liebertpub.com/doi/abs/10.1089/omi.2011.0118&amp;amp;screen_name=guangchuangyu&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&amp;amp;logo=twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://saythanks.io/to/GuangchuangYu&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/say-thanks-ff69b4.svg?sanitize=true&#34; alt=&#34;saythanks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://guangchuangyu.github.io/blog_images/biobabble.jpg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/follow%20me%20on-WeChat-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;http://bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt; in published research, please cite the most appropriate paper(s) from this list:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;T Wu&lt;sup&gt;#&lt;/sup&gt;, E Hu&lt;sup&gt;#&lt;/sup&gt;, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo&lt;sup&gt;*&lt;/sup&gt;, &lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. &lt;em&gt;&lt;strong&gt;The Innovation&lt;/strong&gt;&lt;/em&gt;. 2021, 2(3):100141. doi: &lt;a href=&#34;https://doi.org/10.1016/j.xinn.2021.100141&#34;&gt;10.1016/j.xinn.2021.100141&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. Gene Ontology Semantic Similarity Analysis Using GOSemSim. In: Kidder B. (eds) Stem Cell Transcriptional Networks. &lt;em&gt;&lt;strong&gt;Methods in Molecular Biology&lt;/strong&gt;&lt;/em&gt;. 2020, 2117:207-215. Humana, New York, NY. doi: &lt;a href=&#34;https://doi.org/10.1007/978-1-0716-0301-7_11&#34;&gt;10.1007/978-1-0716-0301-7_11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. Using meshes for MeSH term enrichment and semantic analyses. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2018, 34(21):3766–3767. doi: &lt;a href=&#34;https://doi.org/10.1093/bioinformatics/bty410&#34;&gt;10.1093/bioinformatics/bty410&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, QY He&lt;sup&gt;*&lt;/sup&gt;. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. &lt;em&gt;&lt;strong&gt;Molecular BioSystems&lt;/strong&gt;&lt;/em&gt;. 2016, 12(2):477-479. doi: &lt;a href=&#34;https://doi.org/10.1039/C5MB00663E&#34;&gt;10.1039/C5MB00663E&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;, LG Wang, and QY He&lt;sup&gt;*&lt;/sup&gt;. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2015, 31(14):2382-2383. doi: &lt;a href=&#34;https://doi.org/10.1093/bioinformatics/btv145&#34;&gt;10.1093/bioinformatics/btv145&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;, LG Wang, GR Yan, QY He&lt;sup&gt;*&lt;/sup&gt;. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2015, 31(4):608-609. doi: &lt;a href=&#34;https://doi.org/10.1093/bioinformatics/btu684&#34;&gt;10.1093/bioinformatics/btu684&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, LG Wang, Y Han and QY He&lt;sup&gt;*&lt;/sup&gt;. clusterProfiler: an R package for comparing biological themes among gene clusters. &lt;em&gt;&lt;strong&gt;OMICS: A Journal of Integrative Biology&lt;/strong&gt;&lt;/em&gt;. 2012, 16(5):284-287. doi: &lt;a href=&#34;https://doi.org/10.1089/omi.2011.0118&#34;&gt;10.1089/omi.2011.0118&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, F Li, Y Qin, X Bo&lt;sup&gt;*&lt;/sup&gt;, Y Wu, S Wang&lt;sup&gt;*&lt;/sup&gt;. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2010, 26(7):976-978. doi: &lt;a href=&#34;https://doi.org/10.1093/bioinformatics/btq064&#34;&gt;10.1093/bioinformatics/btq064&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!--&#xA;&#xA;&#xA;&#xA; r badge_custom(&#34;1st most cited paper&#34;, &#34;in OMICS&#34;, &#34;green&#34;,&#xA;  &#34;http://online.liebertpub.com/action/showMostCitedArticles?journalCode=omi&#34;)`&#xA; r badge_custom(&#34;ESI&#34;, &#34;Highly Cited Paper&#34;, &#34;green&#34;)`&#xA; r badge_doi(&#34;10.1089/omi.2011.0118&#34;, &#34;green&#34;)`&#xA;&#xA;&#xA;------------------------------------------------------------------------&#xA;&#xA;### Citation&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img src=&#34;https://guangchuangyu.github.io/software/citation_trend/clusterProfiler.png&#34; width=&#34;890&#34;/&gt;&#xA;&#xA;&#xA;### Download stats&#xA;&#xA;r badge_download_bioc(&#34;clusterProfiler&#34;)&#xA;r badge_bioc_download(&#34;clusterProfiler&#34;, &#34;total&#34;, &#34;blue&#34;)&#xA;r badge_bioc_download(&#34;clusterProfiler&#34;, &#34;month&#34;, &#34;blue&#34;)&#xA;&#xA;&#xA;&lt;img src=&#34;https://guangchuangyu.github.io/software/dlstats/clusterProfiler.png&#34; width=&#34;890&#34;/&gt;&#xA;&#xA;--&gt;</summary>
  </entry>
  <entry>
    <title>vegandevs/vegan</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/vegandevs/vegan</id>
    <link href="https://github.com/vegandevs/vegan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package for community ecologists: popular ordination methods, ecological null models &amp; diversity analysis&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vegan: an R package for community ecologists&lt;/h1&gt; &#xA;&lt;p&gt;Ordination methods, diversity analysis and other functions for community and vegetation ecologists.&lt;/p&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vegandevs/vegan/actions&#34;&gt;&lt;img src=&#34;https://github.com/vegandevs/vegan/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=vegan&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/vegan&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cran.rstudio.com/web/packages/vegan/index.html&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/vegan&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Website for the development version of the &lt;strong&gt;vegan&lt;/strong&gt; package.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sqjin/CellChat</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/sqjin/CellChat</id>
    <link href="https://github.com/sqjin/CellChat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R toolkit for inference, visualization and analysis of cell-cell communication from single-cell data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CellChat: Inference and analysis of cell-cell communication&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://github.com/sqjin/CellChat/raw/master/CellChat_Logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;p&gt;May 07, 2022 (Version 1.4.0)&lt;/p&gt; &#xA;&lt;p&gt;We recently utilized CellChat to study the aging-induced signaling changes and thus updated some functions for better interpreting the inferred cell-cell communication. For the version history and detailed important changes, please see the &lt;a href=&#34;https://github.com/sqjin/CellChat/raw/master/NEWS.md&#34;&gt;NEWS file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Capabilities&lt;/h2&gt; &#xA;&lt;p&gt;In addition to infer the intercellular communication from any given scRNA-seq data, CellChat provides functionality for further data exploration, analysis, and visualization.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is able to analyze cell-cell communication for continuous states along cellular development trajectories.&lt;/li&gt; &#xA; &lt;li&gt;It can quantitatively characterize and compare the inferred cell-cell communication networks using an integrated approach by combining social network analysis, pattern recognition, and manifold learning approaches.&lt;/li&gt; &#xA; &lt;li&gt;It provides an easy-to-use tool for extracting and visualizing high-order information of the inferred networks. For example, it allows ready prediction of major signaling inputs and outputs for all cell populations and how these populations and signals coordinate together for functions.&lt;/li&gt; &#xA; &lt;li&gt;It provides several visualization outputs to facilitate intuitive user-guided data interpretation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://www.nature.com/articles/s41467-021-21246-9&#34;&gt;our paper (Jin et al., Nature Communications, 2021)&lt;/a&gt; for the detailed methods and applications.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;CellChat R package can be easily installed from Github using devtools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;devtools::install_github(&#34;sqjin/CellChat&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please make sure you have installed the correct version of &lt;code&gt;NMF&lt;/code&gt; and &lt;code&gt;circlize&lt;/code&gt; package&lt;/strong&gt;. See instruction below.&lt;/p&gt; &#xA;&lt;h3&gt;Installation of other dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;http://renozao.github.io/NMF/devel/PAGE-INSTALLATION.html&#34;&gt;NMF (&amp;gt;= 0.23.0)&lt;/a&gt; using &lt;code&gt;install.packages(&#39;NMF&#39;)&lt;/code&gt;. Please check &lt;a href=&#34;https://github.com/sqjin/CellChat/issues/16&#34;&gt;here&lt;/a&gt; for other solutions if you encounter any issue. You might can set &lt;code&gt;Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)&lt;/code&gt; if it throws R version error.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/jokergoo/circlize&#34;&gt;circlize (&amp;gt;= 0.4.12)&lt;/a&gt; using &lt;code&gt;devtools::install_github(&#34;jokergoo/circlize&#34;)&lt;/code&gt; if you encounter any issue.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/jokergoo/ComplexHeatmap&#34;&gt;ComplexHeatmap&lt;/a&gt; using &lt;code&gt;devtools::install_github(&#34;jokergoo/ComplexHeatmap&#34;)&lt;/code&gt; if you encounter any issue.&lt;/li&gt; &#xA; &lt;li&gt;Install UMAP python pacakge for dimension reduction: &lt;code&gt;pip install umap-learn&lt;/code&gt;. Please check &lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;here&lt;/a&gt; if you encounter any issue.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some users might have issues when installing CellChat pacakge due to different operating systems and new R version. Please check the following solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Installation on Mac OX with R &amp;gt; 3.6&lt;/strong&gt;: Please re-install &lt;a href=&#34;https://community.rstudio.com/t/imager-package-does-not-work-in-r-3-6-1/38119&#34;&gt;Xquartz&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Installation on Windows, Linux and Centos&lt;/strong&gt;: Please check the solution for &lt;a href=&#34;https://github.com/sqjin/CellChat/issues/5&#34;&gt;Windows&lt;/a&gt; and &lt;a href=&#34;https://github.com/sqjin/CellChat/issues/131&#34;&gt;Linux&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;Please check the tutorial directory of the repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/sqjin/CellChat/raw/master/tutorial/CellChat-vignette.html&#34;&gt;Full tutorial for CellChat analysis of a single dataset with detailed explanation of each function&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/sqjin/CellChat/raw/master/tutorial/Comparison_analysis_of_multiple_datasets.html&#34;&gt;Full tutorial for comparison analysis of multiple datasets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/sqjin/CellChat/raw/master/tutorial/Comparison_analysis_of_multiple_datasets_with_different_cellular_compositions.html&#34;&gt;Comparison analysis of multiple datasets with different cellular compositions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/sqjin/CellChat/raw/master/tutorial/Interface_with_other_single-cell_analysis_toolkits.html&#34;&gt;Interface with other single-cell analysis toolkits (e.g., Seurat, SingleCellExperiment, Scanpy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/sqjin/CellChat/raw/master/tutorial/Update-CellChatDB.html&#34;&gt;Tutorial for updating ligand-receptor database CellChatDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;700&#34; src=&#34;https://github.com/sqjin/CellChat/raw/master/overview_CellChat.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Web-based “CellChat Explorer”&lt;/h2&gt; &#xA;&lt;p&gt;We build a user-friendly web-based “&lt;a href=&#34;http://www.cellchat.org/&#34;&gt;CellChat Explorer&lt;/a&gt;” that contains two major components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ligand-Receptor Interaction Explorer&lt;/strong&gt; that allows easy exploration of our novel ligand-receptor interaction database, a comprehensive recapitulation of known molecular compositions including multimeric complexes and co-factors. &lt;em&gt;Our database CellChatDB is a manually curated database of literature-supported ligand-receptor interactions in both &lt;strong&gt;human and mouse&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cell-Cell Communication Atlas Explorer&lt;/strong&gt; that allows easy exploration of the cell-cell communication for any given scRNA-seq dataset that has been processed by our R toolkit CellChat.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We also developed a &lt;a href=&#34;https://github.com/sqjin/CellChatShiny&#34;&gt;standalone CellChat Shiny App&lt;/a&gt; for our Cell-Cell Communication Atlas Explorer.&lt;/p&gt; &#xA;&lt;h2&gt;Help, Suggestion and Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you have any question, comment or suggestion, please use github issue tracker to report coding related &lt;a href=&#34;https://github.com/sqjin/CellChat/issues&#34;&gt;issues&lt;/a&gt; of CellChat.&lt;/p&gt; &#xA;&lt;h3&gt;Before reporting an issue&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First &lt;strong&gt;check the GitHub &lt;a href=&#34;https://github.com/sqjin/CellChat/issues&#34;&gt;issues&lt;/a&gt;&lt;/strong&gt; to see if the same or a similar issues has been reported and resolved. This relieves the developers from addressing the same issues and helps them focus on adding new features!&lt;/li&gt; &#xA; &lt;li&gt;The best way to figure out the issues is &lt;strong&gt;running the sources codes&lt;/strong&gt; of the specific functions by yourself. This will also relieve the developers and helps them focus on the common issues! I am sorry, but I have to say I have no idea on many errors except that I can reproduce the issues.&lt;/li&gt; &#xA; &lt;li&gt;Minimal and &lt;strong&gt;reproducible example&lt;/strong&gt; are required when filing a GitHub issue. In certain cases, please share your CellChat object and related codes to reproduce the issues.&lt;/li&gt; &#xA; &lt;li&gt;Users are encouraged to discuss issues and bugs using the github &lt;a href=&#34;https://github.com/sqjin/CellChat/issues&#34;&gt;issues&lt;/a&gt; instead of email exchanges.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;CellChat is an open source software package and any contribution is highly appreciated!&lt;/p&gt; &#xA;&lt;p&gt;We use GitHub&#39;s &lt;a href=&#34;https://github.com/sqjin/CellChat/pulls&#34;&gt;Pull Request&lt;/a&gt; mechanism for reviewing and accepting submissions of any contribution. Issue a pull request on the GitHub website to request that we merge your branch&#39;s changes into CellChat&#39;s master branch. Be sure to include a description of your changes in the pull request, as well as any other information that will help the CellChat developers involved in reviewing your code.&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Hardware requirements: CellChat package requires only a standard computer with enough RAM to support the in-memory operations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Software requirements: This package is supported for macOS, Windows and Linux. The package has been tested on macOS: Mojave (10.14.5) and Windows 10. Dependencies of CellChat package are indicated in the Description file, and can be automatically installed when installing CellChat pacakge. CellChat can be installed on a normal computer within few mins.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to cite?&lt;/h2&gt; &#xA;&lt;p&gt;Suoqin Jin et al., Inference and analysis of cell-cell communication using CellChat. Nature Communications, 12:1088 (2021). &lt;a href=&#34;https://www.nature.com/articles/s41467-021-21246-9&#34;&gt;https://www.nature.com/articles/s41467-021-21246-9&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>benjjneb/dada2</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/benjjneb/dada2</id>
    <link href="https://github.com/benjjneb/dada2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Accurate sample inference from amplicon data with single nucleotide resolution&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/benjjneb/dada2&#34;&gt;&lt;img src=&#34;https://travis-ci.org/benjjneb/dada2.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;dada2&lt;/h1&gt; &#xA;&lt;p&gt;Exact sample inference from high-throughput amplicon data. Resolves real variants differing by as little as one nucleotide. Visit &lt;a href=&#34;https://benjjneb.github.io/dada2/index.html&#34;&gt;the DADA2 website&lt;/a&gt; for the most detailed and up-to-date documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The dada2 package binaries are available through Bioconductor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-S&#34;&gt;## try http:// if https:// URLs are not supported&#xA;if (!requireNamespace(&#34;BiocManager&#34;, quietly=TRUE))&#xA;    install.packages(&#34;BiocManager&#34;)&#xA;BiocManager::install(&#34;dada2&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to install dada2 from source (and get the latest and greatest new features) see our &lt;a href=&#34;https://benjjneb.github.io/dada2/dada-installation.html&#34;&gt;installation from source instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://benjjneb.github.io/dada2/tutorial.html&#34;&gt;tutorial walkthrough of the DADA2 pipeline on paired end Illumina Miseq data&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.bioconductor.org/packages/3.6/bioc/manuals/dada2/man/dada2.pdf&#34;&gt;dada2 R package manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Further documentation is available on &lt;a href=&#34;http://benjjneb.github.io/dada2/&#34;&gt;the DADA2 front page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DADA2 Articles&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://dx.doi.org/10.1038/nmeth.3869&#34;&gt;DADA2: High resolution sample inference from Illumina amplicon data. Nature Methods, 2016.&lt;/a&gt; &lt;a href=&#34;http://rdcu.be/ipGh&#34;&gt;(Open Access link.)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f1000research.com/articles/5-1492&#34;&gt;Bioconductor workflow for microbiome data analysis: from raw reads to community analyses. F1000 Research, 2016.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://dx.doi.org/10.1038/ismej.2017.119&#34;&gt;Exact sequence variants should replace operational taxonomic units in marker-gene data analysis. ISMEJ, 2017.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://dx.doi.org/10.1093/nar/gkz569&#34;&gt;High-throughput amplicon sequencing of the full-length 16S rRNA gene with single-nucleotide resolution. Nucleic Acids Research, 2019.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Resources&lt;/h3&gt; &#xA;&lt;p&gt;Planned feature improvements are publicly catalogued at the main DADA2 development site on github, specifically on the &#34;Issues&#34; page for DADA2:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/benjjneb/dada2/issues&#34;&gt;https://github.com/benjjneb/dada2/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the feature you are hoping for is not listed, you are welcome to add it as a feature request &#34;issue&#34; on this page. This request will be publicly available and listed on the page.&lt;/p&gt; &#xA;&lt;p&gt;Bugs and difficulties in using DADA2 are also welcome on &lt;a href=&#34;https://github.com/benjjneb/dada2/issues&#34;&gt;the issue tracker&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/keras</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/rstudio/keras</id>
    <link href="https://github.com/rstudio/keras" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Interface to Keras&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R interface to Keras&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/keras.io/img/keras-logo-2018-large-1200.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/keras/actions?workflow=R-CMD-check&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/keras/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=keras&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/keras&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/keras-team/keras/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://keras.io/&#34;&gt;Keras&lt;/a&gt; is a high-level neural networks API developed with a focus on enabling fast experimentation. &lt;em&gt;Being able to go from idea to result with the least possible delay is key to doing good research.&lt;/em&gt; Keras has the following key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Allows the same code to run on CPU or on GPU, seamlessly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User-friendly API which makes it easy to quickly prototype deep learning models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in support for convolutional networks (for computer vision), recurrent networks (for sequence processing), and any combination of both.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports arbitrary network architectures: multi-input or multi-output models, layer sharing, model sharing, etc. This means that Keras is appropriate for building essentially any deep learning model, from a memory network to a neural Turing machine.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the package website at &lt;a href=&#34;https://tensorflow.rstudio.com&#34;&gt;https://tensorflow.rstudio.com&lt;/a&gt; for complete documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dieghernan/tidyterra</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/dieghernan/tidyterra</id>
    <link href="https://github.com/dieghernan/tidyterra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tidyverse and ggplot2 methods for terra spatial objects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tidyterra &lt;a href=&#34;https://dieghernan.github.io/tidyterra/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/tidyterra&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_tidyterra.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/tidyterra&#34; alt=&#34;CRAN results&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/tidyterra&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dieghernan/tidyterra/actions/workflows/check-full.yaml&#34;&gt;&lt;img src=&#34;https://github.com/dieghernan/tidyterra/actions/workflows/check-full.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/dieghernan/tidyterra&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dieghernan/tidyterra/branch/main/graph/badge.svg?token=blvDmRjcfb&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dieghernan.r-universe.dev/&#34;&gt;&lt;img src=&#34;https://dieghernan.r-universe.dev/badges/tidyterra&#34; alt=&#34;r-universe&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.6572471&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/DOI-10.5281/zenodo.6572471-blue&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/dieghernan/tidyterra&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/dieghernan/tidyterra/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of {tidyterra} is to provide common methods of the &lt;a href=&#34;https://www.tidyverse.org/packages/&#34;&gt;tidyverse packages&lt;/a&gt; for objects created with the &lt;a href=&#34;https://CRAN.R-project.org/package=terra&#34;&gt;{terra}&lt;/a&gt; package: SpatRaster and SpatVector. It also provides geoms for plotting these objects with &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;{ggplot2}&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;{tidyverse} methods implemented on {tidyterra} works differently depending on the type of Spat* object:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;SpatVector: the methods are implemented taking advantage of the tidyverse implementation on {sf}. The SpatVector object is converted first to sf via &lt;code&gt;sf::st_as_sf()&lt;/code&gt;, then the method (or function) is applied and finally the object is converted back to SpatVector with &lt;code&gt;terra::vect()&lt;/code&gt;. Hence, rows correspond to geometries and columns correspond to attributes of the geometry.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SpatRaster: The implementation on SpatRaster objects differs, since the methods could be applied to layers or to cells. {tidyterra} overall approach is to treat the layers as columns of a tibble and the cells as rows (i.e. &lt;code&gt;select(SpatRaster, 1)&lt;/code&gt; would select the first layer of a SpatRaster).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The methods implemented return the same type of object used as input, unless the expected behavior of the method is to return another type of object, (for example, &lt;code&gt;as_tibble()&lt;/code&gt; would return a tibble).&lt;/p&gt; &#xA;&lt;p&gt;Current methods and functions provided by {tidyterra} are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;tidyverse method&lt;/th&gt; &#xA;   &lt;th&gt;SpatVector&lt;/th&gt; &#xA;   &lt;th&gt;SpatRaster&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tibble::as_tibble()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::select()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Select layers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::mutate()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Create /modify layers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::transmute()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::filter()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Modify cells values and (additionally) remove outer cells.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::slice()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Additional methods for slicing by row and column.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::pull()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::rename()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::relocate()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tidyr::drop_na()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Remove cell values with &lt;code&gt;NA&lt;/code&gt; on any layer. Additionally, outer cells with &lt;code&gt;NA&lt;/code&gt; are removed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tidyr::replace_na()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ggplot2::geom_*()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; &lt;code&gt;geom_spatvector()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; &lt;code&gt;geom_spatraster()&lt;/code&gt; and &lt;code&gt;geom_spatraster_rgb()&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;❗&lt;/span&gt; A note on performance&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} is conceived as a user-friendly wrapper of {terra} using the {tidyverse} methods and verbs. This approach therefore has a &lt;strong&gt;cost in terms of performance&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a &lt;strong&gt;heavy user of {terra}&lt;/strong&gt; or you need to work with &lt;strong&gt;big raster files&lt;/strong&gt;, {terra} is much more focused on terms of performance. When possible, each function of {tidyterra} references to its equivalent on {terra}.&lt;/p&gt; &#xA;&lt;p&gt;As a rule of thumb if your raster has less than 10.000.000 data slots counting cells and layers (i.e.&amp;nbsp;&lt;code&gt;terra::ncell(your_rast)*terra::nlyr(your_rast) &amp;lt; 10e6&lt;/code&gt;) you are good to go with {tidyterra}.&lt;/p&gt; &#xA;&lt;p&gt;When plotting rasters, resampling is performed automatically (as &lt;code&gt;terra::plot()&lt;/code&gt; does, see the help page). You can adjust this with the &lt;code&gt;maxcell&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install {tidyterra} from &lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;strong&gt;CRAN&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the development version of {tidyterra} like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;dieghernan/tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can install {tidyterra} using the &lt;a href=&#34;https://dieghernan.r-universe.dev/ui#builds&#34;&gt;r-universe&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Enable this universe&#xA;options(repos = c(&#xA;  dieghernan = &#34;https://dieghernan.r-universe.dev&#34;,&#xA;  CRAN = &#34;https://cloud.r-project.org&#34;&#xA;))&#xA;install.packages(&#34;tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;This is a basic example which shows you how to manipulate and plot SpatRaster objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyterra)&#xA;&#xA;library(terra)&#xA;&#xA;&#xA;# Temperatures&#xA;f &amp;lt;- system.file(&#34;extdata/cyl_temp.tif&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;rastertemp &amp;lt;- rast(f)&#xA;&#xA;library(ggplot2)&#xA;&#xA;# Facet all layers&#xA;&#xA;ggplot() +&#xA;  geom_spatraster(data = rastertemp) +&#xA;  facet_wrap(~lyr, ncol = 2) +&#xA;  scale_fill_gradientn(&#xA;    colors = hcl.colors(10, &#34;RdBu&#34;, rev = TRUE),&#xA;    na.value = NA,&#xA;    labels = scales::label_number(suffix = &#34;º&#34;)&#xA;  ) +&#xA;  labs(fill = &#34;Avg temperature&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/img/README-example-temp-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# Create maximum differences&#xA;&#xA;variation &amp;lt;- rastertemp %&amp;gt;%&#xA;  mutate(&#xA;    diff = tavg_06 - tavg_04&#xA;  ) %&amp;gt;%&#xA;  select(var_apr_jun = diff)&#xA;&#xA;# Add also a overlay of a SpatVector&#xA;f_vect &amp;lt;- system.file(&#34;extdata/cyl.gpkg&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;prov &amp;lt;- vect(f_vect)&#xA;&#xA;ggplot() +&#xA;  geom_spatraster(data = variation) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  scale_fill_gradientn(&#xA;    colors = hcl.colors(10, &#34;RdBu&#34;, rev = TRUE),&#xA;    na.value = NA,&#xA;    labels = scales::label_number(suffix = &#34;º&#34;)&#xA;  ) +&#xA;  theme_minimal() +&#xA;  coord_sf(crs = 25830) +&#xA;  labs(&#xA;    fill = &#34;Difference&#34;,&#xA;    title = &#34;Variation of temperature in Castille and Leon (Spain)&#34;,&#xA;    subtitle = &#34;(Average) temperatures in June vs. April&#34;&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/img/README-example-temp-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;{tidyterra} also provide a geom for plotting RGB SpatRaster tiles with {ggplot2}&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;f_tile &amp;lt;- system.file(&#34;extdata/cyl_tile.tif&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;rgb_tile &amp;lt;- rast(f_tile)&#xA;&#xA;&#xA;ggplot() +&#xA;  geom_spatraster_rgb(data = rgb_tile) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  theme_light()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/img/README-example-tile-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Recognizes coord_sf()&#xA;&#xA;ggplot() +&#xA;  geom_spatraster_rgb(data = rgb_tile) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  theme_light() +&#xA;  # Change crs and datum (for relabeling graticules)&#xA;  coord_sf(crs = 3035, datum = 3035)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/img/README-example-tile-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;I need your feedback&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} is currently on development mode. Please leave your feedback or open an issue on &lt;a href=&#34;https://github.com/dieghernan/tidyterra/issues&#34;&gt;https://github.com/dieghernan/tidyterra/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;To cite ‘tidyterra’ in publications use:&lt;/p&gt; &#xA;&lt;p&gt;Hernangomez D (2022). &lt;em&gt;tidyterra: tidyverse Methods and ggplot2 Utils for terra Objects&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5281/zenodo.6572471&#34;&gt;https://doi.org/10.5281/zenodo.6572471&lt;/a&gt;, &lt;a href=&#34;https://dieghernan.github.io/tidyterra/&#34;&gt;https://dieghernan.github.io/tidyterra/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A BibTeX entry for LaTeX users is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@Manual{R-tidyterra,&#xA;  title = {{tidyterra}: tidyverse Methods and ggplot2 Utils for terra Objects},&#xA;  doi = {10.5281/zenodo.6572471},&#xA;  author = {Diego Hernangómez},&#xA;  year = {2022},&#xA;  version = {0.1.0.9001},&#xA;  url = {https://dieghernan.github.io/tidyterra/},&#xA;  abstract = {Extension of the tidyverse for SpatRaster and SpatVector objects of the terra package. It includes also new geom_ functions that provide a convenient way of visualizing terra objects with ggplot2.},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} ggplot2 geoms are based on &lt;a href=&#34;https://github.com/paleolimbot/ggspatial&#34;&gt;{ggspatial}&lt;/a&gt; implementation, by &lt;a href=&#34;https://github.com/paleolimbot&#34;&gt;Dewey Dunnington&lt;/a&gt; and &lt;a href=&#34;https://github.com/paleolimbot/ggspatial/graphs/contributors&#34;&gt;ggspatial contributors&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ashbaldry/designer</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/ashbaldry/designer</id>
    <link href="https://github.com/ashbaldry/designer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prototype UI for Shiny Apps&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ashbaldry/designer?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ashbaldry/designer/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ashbaldry/designer/actions&#34;&gt;&lt;img src=&#34;https://github.com/ashbaldry/designer/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h1&gt;{designer} &lt;img src=&#34;https://raw.githubusercontent.com/ashbaldry/designer/master/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;{designer}&lt;/code&gt; is intended to make the initial generation of a UI wireframe of a shiny application as quick and simple as possible.&lt;/p&gt; &#xA;&lt;p&gt;The package contains a &lt;code&gt;shiny&lt;/code&gt; application that enables the user to build the UI of a &lt;code&gt;shiny&lt;/code&gt; application by drag and dropping several &lt;code&gt;shiny&lt;/code&gt; components - such as inputs, outputs and buttons - into one of the available pages in the &lt;code&gt;{shiny}&lt;/code&gt; package. Once finalised, the R code used to generate the UI can be copied or downloaded to a &lt;code&gt;ui.R&lt;/code&gt; file, and then the rest of the application like the server logic and styling can be built by the developer.&lt;/p&gt; &#xA;&lt;p&gt;The drag-and-drop nature of the application means that it is easy for both R and non-R users to collaborate in designing the UI of their shiny application. Comments can be added to any component so that it is simple to remember what should be included for each input/output.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://cran.r-project.org/web/packages/designer/index.html&#34;&gt;CRAN&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;designer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the development version from &lt;a href=&#34;https://github.com/ashbaldry/designer&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;ashbaldry/designer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application is also available on-line through &lt;a href=&#34;https://ashbaldry.shinyapps.io/designer&#34;&gt;shinyapps.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To open the &lt;code&gt;{designer}&lt;/code&gt; application and create your own UI, run the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;designer::designApp()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can launch the addin via the RStudio menu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ashbaldry/designer/main/man/figures/example_app.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once opened, create the application as required until you are happy with the layout of the application, then copy the code to the relevant R file&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ashbaldry/designer/main/man/figures/example_app_filled.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ui.R&#xA;&#xA;bootstrapPage(&#xA;  title = &#34;Shiny Application&#34;,&#xA;  theme = bslib::bs_theme(4),&#xA;  h1(&#xA;    &#34;My shiny application&#34;&#xA;  ),&#xA;  inputPanel(&#xA;    selectInput(&#xA;      inputId = &#34;dropdown_gxc2o1ekgb&#34;,&#xA;      label = &#34;Label&#34;,&#xA;      choices = &#34;...&#34;&#xA;    ),&#xA;    selectInput(&#xA;      inputId = &#34;dropdown_azset57v65&#34;,&#xA;      label = &#34;Label&#34;,&#xA;      choices = &#34;...&#34;&#xA;    ),&#xA;    selectInput(&#xA;      inputId = &#34;dropdown_itgcle8yze&#34;,&#xA;      label = &#34;Label&#34;,&#xA;      choices = &#34;...&#34;&#xA;    )&#xA;  ),&#xA;  fluidRow(&#xA;    column(&#xA;      width = 6,&#xA;      # Bar plot&#xA;      plotOutput(&#xA;        outputId = &#34;plot_zvu8c9upbu&#34;,&#xA;        height = &#34;200px&#34;&#xA;      )&#xA;    ),&#xA;    column(&#xA;      width = 6,&#xA;      # Line chart&#xA;      plotOutput(&#xA;        outputId = &#34;plot_qsmfr0lp57&#34;,&#xA;        height = &#34;200px&#34;&#xA;      )&#xA;    )&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;Certain inputs will only include default values and not fully customisable; this is intentional as they are likely to change throughout development and therefore not something that is required at this time of the development process.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>joey711/phyloseq</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/joey711/phyloseq</id>
    <link href="https://github.com/joey711/phyloseq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;phyloseq is a set of classes, wrappers, and tools (in R) to make it easier to import, store, and analyze phylogenetic sequencing data; and to reproducibly share that data and analysis with others. See the phyloseq front page:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;http://joey711.github.com/phyloseq/&#34;&gt;phyloseq&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/joey711/phyloseq&#34;&gt;&lt;img src=&#34;https://travis-ci.org/joey711/phyloseq.svg?branch=master&#34; alt=&#34;Travis-CI Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/joey711/phyloseq/master/inst/extdata/phyloseq.png&#34; alt=&#34;phyloseq&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Install&lt;/h2&gt; &#xA;&lt;p&gt;In R terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;if(!requireNamespace(&#34;BiocManager&#34;)){&#xA;  install.packages(&#34;BiocManager&#34;)&#xA;}&#xA;BiocManager::install(&#34;phyloseq&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://joey711.github.io/phyloseq/install.html&#34;&gt;the phyloseq installation page&lt;/a&gt; for further details, examples.&lt;/p&gt; &#xA;&lt;h2&gt;Article on Improved Microbiome Analysis&lt;/h2&gt; &#xA;&lt;p&gt;McMurdie and Holmes (2014) &lt;a href=&#34;http://dx.plos.org/10.1371/journal.pcbi.1003531&#34;&gt;Waste Not, Want Not: Why Rarefying Microbiome Data is Statistically Inadmissible&lt;/a&gt; &lt;em&gt;PLoS Computational Biology&lt;/em&gt; 10(4): e1003531&lt;/p&gt; &#xA;&lt;p&gt;Presubmission versions ahead of acceptance (2013): &lt;a href=&#34;http://arxiv.org/pdf/1310.0424v2.pdf&#34;&gt;PDF version 2&lt;/a&gt;, &lt;a href=&#34;http://arxiv.org/pdf/1310.0424v1.pdf&#34;&gt;PDF version 1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Peer-reviewed articles about phyloseq&lt;/h2&gt; &#xA;&lt;p&gt;McMurdie and Holmes (2014) &lt;a href=&#34;http://bioinformatics.oxfordjournals.org/content/early/2014/10/02/bioinformatics.btu616&#34;&gt;Shiny-phyloseq: Web Application for Interactive Microbiome Analysis with Provenance Tracking&lt;/a&gt;. &lt;em&gt;Bioinformatics (Oxford, England)&lt;/em&gt; 31(2), 282–283.&lt;/p&gt; &#xA;&lt;p&gt;McMurdie and Holmes (2013) &lt;a href=&#34;http://dx.plos.org/10.1371/journal.pone.0061217&#34;&gt;phyloseq: An R package for reproducible interactive analysis and graphics of microbiome census data&lt;/a&gt; &lt;em&gt;PLoS ONE&lt;/em&gt; 8(4):e61217&lt;/p&gt; &#xA;&lt;h2&gt;Other resources&lt;/h2&gt; &#xA;&lt;p&gt;The phyloseq project also has a number of supporting online resources, including (but probably not limited to)&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://joey711.github.com/phyloseq/&#34;&gt;the phyloseq home page&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.bioconductor.org/packages/release/bioc/vignettes/phyloseq/inst/doc/phyloseq-FAQ.html&#34;&gt;the phyloseq FAQ&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;I recommend checking this page, and the issues tracker, before posting new issues.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/phyloseq.html&#34;&gt;Bioconductor stable release&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/joey711/phyloseq/issues&#34;&gt;the phyloseq Issue Tracker&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is the recommended location to post&lt;/p&gt; &#xA;&lt;p&gt;(1) feature requests (2) bug reports (3) theoretical considerations (4) other issues, feedback (5) ask for help&lt;/p&gt; &#xA;&lt;p&gt;Search previous posts, and check &lt;a href=&#34;https://www.bioconductor.org/packages/release/bioc/vignettes/phyloseq/inst/doc/phyloseq-FAQ.html&#34;&gt;the phyloseq FAQ&lt;/a&gt; before posting a new issue.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>satijalab/seurat</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/satijalab/seurat</id>
    <link href="https://github.com/satijalab/seurat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R toolkit for single cell genomics&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://app.travis-ci.com:443/github/satijalab/seurat&#34;&gt;&lt;img src=&#34;https://travis-ci.com/satijalab/seurat.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/satijalab/seurat&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/satijalab/seurat?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=Seurat&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/Seurat&#34; alt=&#34;CRAN Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=Seurat&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/Seurat&#34; alt=&#34;CRAN Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Seurat v4.1&lt;/h1&gt; &#xA;&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt; &#xA;&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://satijalab.org/seurat&#34;&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/satijalab/seurat&#34;&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt; &#xA;&lt;p&gt;Improvements and new features will be added on a regular basis, please post on the &lt;a href=&#34;https://github.com/satijalab/seurat&#34;&gt;github page&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt; &#xA;&lt;p&gt;For a version history/changelog, please see the &lt;a href=&#34;https://github.com/satijalab/seurat/raw/master/NEWS.md&#34;&gt;NEWS file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plotly/plotly.R</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/plotly/plotly.R</id>
    <link href="https://github.com/plotly/plotly.R" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interactive graphing library for R&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/plotly.R/master/man/figures/plotly.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.R/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci/plotly/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=plotly&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/plotly&#34; alt=&#34;CRAN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rpackages.io/package/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/plotly&#34; alt=&#34;CRAN Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rpackages.io/package/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/plotly&#34; alt=&#34;monthly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;An R package for creating interactive web graphics via the open source JavaScript graphing library &lt;a href=&#34;https://github.com/plotly/plotly.js&#34;&gt;plotly.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the latest development version (on GitHub) via &lt;code&gt;{remotes}&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;plotly/plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Web-based ggplot2 graphics&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;ggplot2&lt;/a&gt;, &lt;code&gt;ggplotly()&lt;/code&gt; converts your static plots to an interactive web-based version!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(plotly)&#xA;g &amp;lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) +&#xA;  stat_density_2d(aes(fill = ..level..), geom = &#34;polygon&#34;) + &#xA;  xlim(1, 6) + ylim(40, 100)&#xA;ggplotly(g)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/G1rSArP.gif&#34; alt=&#34;https://i.imgur.com/G1rSArP.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;ggplotly()&lt;/code&gt; tries to replicate the static ggplot2 version exactly (before any interaction occurs), but sometimes you need greater control over the interactive behavior. The &lt;code&gt;ggplotly()&lt;/code&gt; function itself has some convenient “high-level” arguments, such as &lt;code&gt;dynamicTicks&lt;/code&gt;, which tells plotly.js to dynamically recompute axes, when appropriate. The &lt;code&gt;style()&lt;/code&gt; function also comes in handy for &lt;em&gt;modifying&lt;/em&gt; the underlying trace attributes (e.g. &lt;a href=&#34;https://plotly.com/r/reference/#scatter-hoveron&#34;&gt;hoveron&lt;/a&gt;) used to generate the plot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg &amp;lt;- ggplotly(g, dynamicTicks = &#34;y&#34;)&#xA;style(gg, hoveron = &#34;points&#34;, hoverinfo = &#34;x+y+text&#34;, hoverlabel = list(bgcolor = &#34;white&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imgur.com/qRvLgea.gif&#34; alt=&#34;https://i.imgur.com/qRvLgea.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Moreover, since &lt;code&gt;ggplotly()&lt;/code&gt; returns a plotly object, you can apply essentially any function from the R package on that object. Some useful ones include &lt;code&gt;layout()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#modifying-layout&#34;&gt;customizing the layout&lt;/a&gt;), &lt;code&gt;add_traces()&lt;/code&gt; (and its higher-level &lt;code&gt;add_*()&lt;/code&gt; siblings, for example &lt;code&gt;add_polygons()&lt;/code&gt;, for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#leveraging-statistical-output&#34;&gt;adding new traces/data&lt;/a&gt;), &lt;code&gt;subplot()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/arranging-views.html#arranging-plotly-objects&#34;&gt;combining multiple plotly objects&lt;/a&gt;), and &lt;code&gt;plotly_json()&lt;/code&gt; (for inspecting the underlying JSON sent to plotly.js).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;ggplotly()&lt;/code&gt; function will also respect some “unofficial” &lt;strong&gt;ggplot2&lt;/strong&gt; aesthetics, namely &lt;code&gt;text&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/controlling-tooltips.html#tooltip-text-ggplotly&#34;&gt;customizing the tooltip&lt;/a&gt;), &lt;code&gt;frame&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/animating-views.html&#34;&gt;creating animations&lt;/a&gt;), and &lt;code&gt;ids&lt;/code&gt; (for ensuring sensible smooth transitions).&lt;/p&gt; &#xA;&lt;h3&gt;Using plotly without ggplot2&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;plot_ly()&lt;/code&gt; function provides a more direct interface to plotly.js so you can leverage more specialized chart types (e.g., &lt;a href=&#34;https://plotly.com/r/parallel-coordinates-plot/&#34;&gt;parallel coordinates&lt;/a&gt; or &lt;a href=&#34;https://plotly.com/r/maps/&#34;&gt;maps&lt;/a&gt;) or even some visualization that the ggplot2 API won’t ever support (e.g., surface, &lt;a href=&#34;https://plotly.com/r/3d-mesh/&#34;&gt;mesh&lt;/a&gt;, &lt;a href=&#34;https://plotly.com/r/trisurf/&#34;&gt;trisurf&lt;/a&gt;, etc).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_ly(z = ~volcano, type = &#34;surface&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://plot.ly/~brnvg/1134.png&#34; alt=&#34;https://plot.ly/~brnvg/1134&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about special features that the plotly R package provides (e.g., &lt;a href=&#34;https://plotly-r.com/client-side-linking.html&#34;&gt;client-side linking&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/linking-views-with-shiny.html&#34;&gt;&lt;strong&gt;shiny&lt;/strong&gt; integration&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/publish.html&#34;&gt;editing and generating static images&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/javascript.html&#34;&gt;custom events in JavaScript&lt;/a&gt;, and more), see &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt;. You may already be familiar with existing plotly documentation (e.g., &lt;a href=&#34;https://plotly.com/r/&#34;&gt;https://plotly.com/r/&lt;/a&gt;), which is essentially a language-agnostic how-to guide for learning plotly.js, whereas &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt; is meant to be more wholistic tutorial written by and for the R user. The package itself ships with a number of demos (list them by running &lt;code&gt;demo(package = &#34;plotly&#34;)&lt;/code&gt;) and shiny/rmarkdown examples (list them by running &lt;code&gt;plotly_example(&#34;shiny&#34;)&lt;/code&gt; or &lt;code&gt;plotly_example(&#34;rmd&#34;)&lt;/code&gt;). &lt;a href=&#34;https://cpsievert.me&#34;&gt;Carson&lt;/a&gt; also keeps numerous &lt;a href=&#34;https://talks.cpsievert.me&#34;&gt;slide decks&lt;/a&gt; with useful examples and concepts.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://github.com/plotly/plotly.R/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, asking questions, contributing changes to plotly, and our code of conduct.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.ropensci.org/public_images/github_footer.png&#34; alt=&#34;https://ropensci.org&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>selva86/datasets</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/selva86/datasets</id>
    <link href="https://github.com/selva86/datasets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of datasets of ML problem solving&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datasets&lt;/h1&gt; &#xA;&lt;h3&gt;Datasets collected from R packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mlbench&lt;/li&gt; &#xA; &lt;li&gt;kernlab&lt;/li&gt; &#xA; &lt;li&gt;klaR&lt;/li&gt; &#xA; &lt;li&gt;car&lt;/li&gt; &#xA; &lt;li&gt;reshape2&lt;/li&gt; &#xA; &lt;li&gt;hflights&lt;/li&gt; &#xA; &lt;li&gt;ISLR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The original source repositories are:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;ftp://ftp.ics.uci.edu/pub/machine-learning-databases&#34;&gt;ftp://ftp.ics.uci.edu/pub/machine-learning-databases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ics.uci.edu/~mlearn/MLRepository.html&#34;&gt;http://www.ics.uci.edu/~mlearn/MLRepository.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kdd.ics.uci.edu&#34;&gt;http://kdd.ics.uci.edu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.liacs.nl/~putten/library/cc2000/&#34;&gt;http://www.liacs.nl/~putten/library/cc2000/&lt;/a&gt; (ticdata)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/chromote</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/rstudio/chromote</id>
    <link href="https://github.com/rstudio/chromote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chrome Remote Interface for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chromote: Headless Chrome Remote Interface&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/chromote/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/chromote/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=chromote&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/chromote&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Chromote is an R implementation of the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt;. It works with Chrome, Chromium, Opera, Vivaldi, and other browsers based on &lt;a href=&#34;https://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt;. By default it uses Google Chrome (which must already be installed on the system). To use a different browser, see &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#specifying-which-browser-to-use&#34;&gt;Specifying which browser to use&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Chromote is not the only R package that implements the Chrome DevTools Protocol. Here are some others:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RLesur/crrri&#34;&gt;crrri&lt;/a&gt; by Romain Lesur and Christophe Dervieux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/decapitated/&#34;&gt;decapitated&lt;/a&gt; by Bob Rudis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/milesmcbain/chradle&#34;&gt;chradle&lt;/a&gt; by Miles McBain&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The interface to Chromote is similar to &lt;a href=&#34;https://github.com/cyrus-and/chrome-remote-interface&#34;&gt;chrome-remote-interface&lt;/a&gt; for node.js.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# CRAN&#xA;install.packages(&#34;chromote&#34;)&#xA;&#xA;# Development&#xA;remotes::install_github(&#34;rstudio/chromote&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;This will start a headless browser and open an interactive viewer for it in a normal browser, so that you can see what the headless browser is doing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;&#xA;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# In a web browser, open a viewer for the headless browser. Works best with&#xA;# Chromium-based browsers.&#xA;b$view()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The browser can be given &lt;em&gt;commands&lt;/em&gt;, as specified by the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt;. For example, &lt;code&gt;$Browser$getVersion()&lt;/code&gt; (which corresponds to the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Browser/#method-getVersion&#34;&gt;Browser.getVersion&lt;/a&gt; in the API docs) will query the browser for version information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Browser$getVersion()&#xA;#&amp;gt; $protocolVersion&#xA;#&amp;gt; [1] &#34;1.3&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $product&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $revision&#xA;#&amp;gt; [1] &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $userAgent&#xA;#&amp;gt; [1] &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $jsVersion&#xA;#&amp;gt; [1] &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have the viewer open and run the following, you’ll see the web page load in the viewer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the official Chrome DevTools Protocol (CDP) documentation, this is the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-navigate&#34;&gt;&lt;code&gt;Page.navigate&lt;/code&gt;&lt;/a&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;In addition to full support of the CDP, &lt;code&gt;ChromoteSession&lt;/code&gt; objects also some convenience methods, like &lt;code&gt;$screenshot()&lt;/code&gt;. (See the Examples section below for more information about screenshots.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Saves to screenshot.png&#xA;b$screenshot()&#xA;&#xA;# Takes a screenshot of elements picked out by CSS selector&#xA;b$screenshot(&#34;sidebar.png&#34;, selector = &#34;.sidebar&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/man/figures/sidebar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All members of &lt;code&gt;Chromote&lt;/code&gt; and &lt;code&gt;ChromoteSession&lt;/code&gt; objects which start with a capital letter (like &lt;code&gt;b$Page&lt;/code&gt;, &lt;code&gt;b$DOM&lt;/code&gt;, and &lt;code&gt;b$Browser&lt;/code&gt;) correspond to domains from the Chrome DevTools Protocol, and are documented in the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;official CDP site&lt;/a&gt;. All members which start with a lower-case letter (like &lt;code&gt;b$screenshot&lt;/code&gt; and &lt;code&gt;b$close&lt;/code&gt;) are not part of the Chrome DevTools Protocol, and are specific to &lt;code&gt;Chromote&lt;/code&gt; and &lt;code&gt;ChromoteSession&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of how to use Chromote to find the position of a DOM element using &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/DOM/#method-getBoxModel&#34;&gt;DOM.getBoxModel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- b$DOM$getDocument()&#xA;x &amp;lt;- b$DOM$querySelector(x$root$nodeId, &#34;.sidebar&#34;)&#xA;x &amp;lt;- b$DOM$getBoxModel(x$nodeId)&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can do the same thing by chaining commands together with a magrittr pipe:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument() %&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;) } %&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId) } %&amp;gt;%&#xA;  str()&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating new tabs and managing the process&lt;/h3&gt; &#xA;&lt;p&gt;To create a new tab/window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1 &amp;lt;- b$new_session()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it’s created, you can perform operations with the new tab without affecting the first one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$view()&#xA;b1$Page$navigate(&#34;https://github.com/rstudio/chromote&#34;)&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;714439EBDD663E597658503C86F77B0B&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;F39339CBA7D1ACB83618FEF40C3C7467&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close a browser tab/window, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is different from shutting down the browser process. If you call &lt;code&gt;b$close()&lt;/code&gt;, the browser process will still be running, even if all tabs have been closed. If all tabs have been closed, you can still create a new tab by calling &lt;code&gt;b1$new_session()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To shut down the process, call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$parent$close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;b1$parent&lt;/code&gt; is a &lt;code&gt;Chromote&lt;/code&gt; object (as opposed to &lt;code&gt;ChromoteSession&lt;/code&gt;), which represents the browser as a whole. This is explained in &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#the-chromote-object-model&#34;&gt;The Chromote object model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Commands and Events&lt;/h3&gt; &#xA;&lt;p&gt;The Chrome DevTools Protocol has two types of methods: &lt;em&gt;commands&lt;/em&gt; and &lt;em&gt;events&lt;/em&gt;. The methods used in the previous examples are commands. That is, they tell the browser to do something; the browser does it, and then sends back some data.&lt;/p&gt; &#xA;&lt;p&gt;Events are quite different from commands. When, for example, you run &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt;, it does not send a message to the browser. Rather, this method tells the R process to wait until it receives a &lt;code&gt;Page.loadEventFired&lt;/code&gt; message from the browser.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of how that event can be used. Note that these two lines of code must be run together, without any delay at all (this can be enforced by wrapping both lines of code in &lt;code&gt;{ .... }&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Send a command to navigate to a page&#xA;b$Page$navigate(&#34;https://www.r-project.org&#34;)&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;0ADE3CFBAF764B0308ADE1ACCC33358B&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;112AF4AC0C13FF4A95BED8173C3F4C7F&#34;&#xA;&#xA;# Wait for the Page.loadEventFired event&#xA;b$Page$loadEventFired()&#xA;#&amp;gt; $timestamp&#xA;#&amp;gt; [1] 680.7603&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running these two lines, the R process will be blocked. While it’s blocked, the browser will load the page, and then send a message to the R process saying that the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event has occurred. The message looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;method&#34;:&#34;Page.loadEventFired&#34;,&#34;params&#34;:{&#34;timestamp&#34;:699232.345338}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the R process receives this message, the function returns the value, which looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$timestamp&#xA;[1] 699232.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; Chromote insulates the user from some of the details of how the CDP implements event notifications. Event notifications are not sent from the browser to the R process by default; you must first send a command to enable event notifications for a domain. For example &lt;code&gt;Page.enable&lt;/code&gt; enables event notifications for the &lt;code&gt;Page&lt;/code&gt; domain – the browser will send messages for &lt;em&gt;all&lt;/em&gt; &lt;code&gt;Page&lt;/code&gt; events. (See the Events section in &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Page/&#34;&gt;this page&lt;/a&gt;). These notifications will continue to be sent until the browser receives a &lt;code&gt;Page.disable&lt;/code&gt; command.&lt;/p&gt; &#xA; &lt;p&gt;By default, Chromote hides this implementation detail. When you call &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt;, Chromote sends a &lt;code&gt;Page.enable&lt;/code&gt; command automatically, and then waits until it receives the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event notification. Then it sends a &lt;code&gt;Page.disable&lt;/code&gt; command.&lt;/p&gt; &#xA; &lt;p&gt;Note that in asynchronous mode, the behavior is slightly more sophisticated: it maintains a counter of how many outstanding events it is waiting for in a given domain. When that count goes from 0 to 1, it sends the &lt;code&gt;X.enable&lt;/code&gt; command; when the count goes from 1 to 0, it sends the &lt;code&gt;X.disable&lt;/code&gt; command. For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#async-events&#34;&gt;Async events&lt;/a&gt; section.&lt;/p&gt; &#xA; &lt;p&gt;If you do not want automatic event enabling and disabling, then when creating the ChromoteSession object, use &lt;code&gt;ChromoteSession$new(auto_events = FALSE)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;The Chromote object model&lt;/h3&gt; &#xA;&lt;p&gt;There are two R6 classes that are used to represent the Chrome browser. One is &lt;code&gt;Chromote&lt;/code&gt;, and the other is &lt;code&gt;ChromoteSession&lt;/code&gt;. A &lt;code&gt;Chromote&lt;/code&gt; object represents the browser as a whole, and it can have multiple &lt;em&gt;targets&lt;/em&gt;, which each represent a browser tab. In the Chrome DevTools Protocol, each target can have one or more debugging &lt;em&gt;sessions&lt;/em&gt; to control it. A &lt;code&gt;ChromoteSession&lt;/code&gt; object represents a single &lt;em&gt;session&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When a &lt;code&gt;ChromoteSession&lt;/code&gt; object is instantiated, a target is created, then a session is attached to that target, and the &lt;code&gt;ChromoteSession&lt;/code&gt; object represents the session. (It is possible, though not very useful, to have multiple &lt;code&gt;ChromoteSession&lt;/code&gt; objects connected to the same target, each with a different session.)&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;Chromote&lt;/code&gt; object can have any number of &lt;code&gt;ChromoteSession&lt;/code&gt; objects as children. It is not necessary to create a &lt;code&gt;Chromote&lt;/code&gt; object manually. You can simply call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and it will automatically create a &lt;code&gt;Chromote&lt;/code&gt; object if one has not already been created. The Chromote package will then designate that &lt;code&gt;Chromote&lt;/code&gt; object as the &lt;em&gt;default&lt;/em&gt; Chromote object for the package, so that any future calls to &lt;code&gt;ChromoteSession$new()&lt;/code&gt; will automatically use the same &lt;code&gt;Chromote&lt;/code&gt;. This is so that it doesn’t start a new browser for every &lt;code&gt;ChromoteSession&lt;/code&gt; object that is created.&lt;/p&gt; &#xA;&lt;p&gt;In the Chrome DevTools Protocol, most commands can be sent to individual sessions using the &lt;code&gt;ChromoteSession&lt;/code&gt; object, but there are some commands which can only be sent to the overall browser, using the &lt;code&gt;Chromote&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;To access the parent &lt;code&gt;Chromote&lt;/code&gt; object from a &lt;code&gt;ChromoteSession&lt;/code&gt;, you can simply use &lt;code&gt;$parent&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;m &amp;lt;- b$parent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With a &lt;code&gt;Chromote&lt;/code&gt; object, you can get a list containing all the &lt;code&gt;ChromoteSession&lt;/code&gt;s, with &lt;code&gt;$get_sessions()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m$get_sessions()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, subsequent calls to &lt;code&gt;ChromoteSession$new()&lt;/code&gt; will use the existing &lt;code&gt;Chromote&lt;/code&gt; object. However, if you want to start a new browser process, you can manually create a &lt;code&gt;Chromote&lt;/code&gt; object, then spawn a session from it; or you can pass the new &lt;code&gt;Chromote&lt;/code&gt; object to &lt;code&gt;ChromoteSession$new()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cm &amp;lt;- Chromote$new()&#xA;b1 &amp;lt;- cm$new_session()&#xA;&#xA;# Or:&#xA;b1 &amp;lt;- ChromoteSession$new(parent = cm)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if you use either of these methods, the new &lt;code&gt;Chromote&lt;/code&gt; object will &lt;em&gt;not&lt;/em&gt; be set as the default that is used by future calls to &lt;code&gt;ChromoteSesssion$new()&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#specifying-which-browser-to-use&#34;&gt;Specifying which browser to use&lt;/a&gt; for information on setting the default &lt;code&gt;Chromote&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;There are also the following classes which represent the browser at a lower level:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Browser&lt;/code&gt;: This represents an instance of a browser that supports the Chrome DevTools Protocol. It contains information about how to communicate with the Chrome browser. A &lt;code&gt;Chromote&lt;/code&gt; object contains one of these.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Chrome&lt;/code&gt;: This is a subclass of &lt;code&gt;Browser&lt;/code&gt; that represents a local browser. It extends the &lt;code&gt;Browser&lt;/code&gt; class with a &lt;code&gt;processx::process&lt;/code&gt; object, which represents the browser’s system process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ChromeRemote&lt;/code&gt;: This is a subclass of &lt;code&gt;Browser&lt;/code&gt; that represents a browser running on a remote system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;b$debug_messages(TRUE)&lt;/code&gt; will enable the printing of all the JSON messages sent between R and Chrome. This can be very helpful for understanding how the Chrome DevTools Protocol works.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;b$parent$debug_messages(TRUE)&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;#&amp;gt; SEND {&#34;method&#34;:&#34;Page.navigate&#34;,&#34;params&#34;:{&#34;url&#34;:&#34;https://www.r-project.org/&#34;},&#34;id&#34;:53,&#34;sessionId&#34;:&#34;12CB6B044A379DA0BDCFBBA55318247C&#34;}&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;BAAC175C67E55886207BADE1776E7B1F&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;66DED3DF9403DA4A307444765FDE828E&#34;&#xA;&#xA;# Disable debug messages&#xA;b$parent$debug_messages(FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Synchronous vs.&amp;nbsp;asynchronous usage&lt;/h3&gt; &#xA;&lt;p&gt;By default, when you call methods from a &lt;code&gt;Chromote&lt;/code&gt; or &lt;code&gt;ChromoteSession&lt;/code&gt; object, it operates in &lt;em&gt;synchronous&lt;/em&gt; mode. For example, when you call a command function (like &lt;code&gt;b$Page$navigate()&lt;/code&gt;), a command message is sent to the headless browser, the headless browser executes that command, and it sends a response message back. When the R process receives the response, it converts it from JSON to an R object and the function returns that value. During this time, the R process is blocked; no other R code can execute.&lt;/p&gt; &#xA;&lt;p&gt;The methods in Chromote/ChromoteSession objects can also be called in &lt;em&gt;asynchronous&lt;/em&gt; mode. In async mode, a command function fires off a message to the browser, and then the R process continues running other code; when the response comes back at some time in the future, the R process calls another function and passes the response value to it.&lt;/p&gt; &#xA;&lt;p&gt;There are two different ways of using async with Chromote. The first is with &lt;a href=&#34;https://rstudio.github.io/promises/&#34;&gt;promises&lt;/a&gt; (note that these are not the regular R-language promises; these are similar to JavaScript promises for async programming.) The second way is with callbacks: you call methods with a &lt;code&gt;callback_&lt;/code&gt; argument. Although callbacks are initially easier to use than promises, once you start writing more complex code, managing callbacks becomes very difficult, especially when error handling is involved. For this reason, this document will focus mostly on promises instead of callback-style programming.&lt;/p&gt; &#xA;&lt;p&gt;When Chromote methods are called in synchronous mode, under the hood, they are implemented with asynchronous functions, and then waiting for the asynchronous functions to resolve.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note about the event loop&lt;/strong&gt;: When methods are called asynchronously, the R process will run callbacks and promises using an event loop provided by the &lt;a href=&#34;https://github.com/r-lib/later&#34;&gt;later&lt;/a&gt; package. This event loop is very similar to the one used in JavaScript, which is explained in depth by &lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&#34;&gt;this article&lt;/a&gt;. One important difference between JavaScript’s event loop and the one provided by &lt;strong&gt;later&lt;/strong&gt;’s is that in JavaScript, the event loop only runs when the call stack is empty (essentially, when the JS runtime is idle); with &lt;strong&gt;later&lt;/strong&gt; the event loop similarly runs when the call stack is empty (when the R console is idle), but it can also be run at any point by calling &lt;code&gt;later::run_now()&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;There is another important difference between the JS event loop and the one used by Chromote: Chromote uses &lt;em&gt;private event loops&lt;/em&gt; provided by &lt;a href=&#34;https://github.com/r-lib/later&#34;&gt;later&lt;/a&gt;. Running the private event loop with &lt;code&gt;run_now()&lt;/code&gt; will not interfere with the global event loop. This is crucial for being able to run asynchronous code in a way that appears synchronous.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Why async?&lt;/h4&gt; &#xA;&lt;p&gt;The synchronous API is easier to use than the asynchronous one. So why would you want to use the async API? Here are some reasons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The async API allows you to send commands to the browser that may take some time for the browser to complete, and they will not block the R process from doing other work while the browser executes the command.&lt;/li&gt; &#xA; &lt;li&gt;The async API lets you send commands to multiple browser “tabs” and let them work in parallel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the other hand, async programming can make it difficult to write code that proceeds in a straightforward, linear manner. Async programming may be difficult to use in, say, an analysis script.&lt;/p&gt; &#xA;&lt;p&gt;When using Chromote interactively at the R console, it’s usually best to just call methods synchronously. This fits well with a iterative, interactive data analysis workflow.&lt;/p&gt; &#xA;&lt;p&gt;When you are &lt;em&gt;programming&lt;/em&gt; with Chromote instead of using it interactively, it is in many cases better to call the methods asynchronously, because it allows for better performance. In a later section, we’ll see how to write asynchronous code with Chromote that can be run either synchronously or asynchronously. This provides the best of both worlds.&lt;/p&gt; &#xA;&lt;h4&gt;Async commands&lt;/h4&gt; &#xA;&lt;p&gt;When a method is called in synchronous mode, it blocks until the browser sends back a response, and then it returns the value, converted from JSON to an R object. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Synchronous&#xA;str(b$Browser$getVersion())&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In async mode, there are two ways to use the value that the browser sends to the R process. One is to use the &lt;code&gt;callback_&lt;/code&gt; argument with &lt;code&gt;wait_=FALSE&lt;/code&gt;. The &lt;code&gt;wait_=FALSE&lt;/code&gt; tells it to run the command in async mode; instead of returning the value from the browser, it returns a promise. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Async with callback&#xA;b$Browser$getVersion(wait_ = FALSE, callback_ = str)&#xA;#&amp;gt; &amp;lt;Promise [pending]&amp;gt;&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the function returned &lt;code&gt;&amp;lt;Promise [pending]&amp;gt;&lt;/code&gt;, and then it printed out the data. We’ll come back to the promise part.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; When you pass a function as &lt;code&gt;callback_&lt;/code&gt;, that function is used as the first step in the promise chain that is returned.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you run the command in a code block (or a function), the entire code block will finish executing before the callback can be executed. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  b$Browser$getVersion(wait_ = FALSE, callback_ = str)&#xA;  1+1&#xA;}&#xA;#&amp;gt; [1] 2&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the code above, it executes the &lt;code&gt;1+1&lt;/code&gt; and returns the value before the &lt;code&gt;str&lt;/code&gt; callback can be executed on the message from the browser.&lt;/p&gt; &#xA;&lt;p&gt;If you want to store the value from the browser, you can write a callback that stores the value like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# This will extract the product field&#xA;product &amp;lt;- NULL&#xA;b$Browser$getVersion(wait_ = FALSE, callback_ = function(msg) {&#xA;  product &amp;lt;&amp;lt;- msg$product&#xA;})&#xA;#&amp;gt; &amp;lt;Promise [pending]&amp;gt;&#xA;# Wait for a moment, then run:&#xA;product&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But to get the value, you need to wait for the callback to execute before you can use the value. Waiting for a value is simple when running R interactively – you can just add a &lt;code&gt;message(&#34;message arrived&#34;)&lt;/code&gt; call in the callback and wait for it before running the next line of code – but waiting for the value is not easy to do using ordinary straight-line coding. Fortunately, Chromote has a way to wait for async operations, which we’ll see later.&lt;/p&gt; &#xA;&lt;p&gt;The other way of using the value is to use &lt;em&gt;promises&lt;/em&gt;. If &lt;code&gt;wait_=FALSE&lt;/code&gt; and no &lt;code&gt;callback_&lt;/code&gt; is passed to the command, then it will simply return a promise. Promises have many advantages over plain old callbacks: they are easier to chain, and they provide better error-handling capabilities. You can &lt;em&gt;chain&lt;/em&gt; more steps to the promise: when the promise resolves – that is, when the message is received from the browser – it will run the next step in the promise chain.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example that uses promises to print out the version information. Note that the surrounding curly braces are there to indicate that this whole thing must be run as a block without any idle time in between the function calls – if you were to run the code in the R console line-by-line, the browser would send back the message and the promise would resolve before you called &lt;code&gt;p$then()&lt;/code&gt;, which is where you tell the promise what to do with the return value. (The curly braces aren’t strictly necessary – you could run the code inside the braces in a single paste operation and have the same effect.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  p &amp;lt;- b$Browser$getVersion(wait_ = FALSE)&#xA;  p$then(function(value) {&#xA;    print(value$product)&#xA;  })&#xA;}&#xA;# Wait for a moment, then prints:&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are some progressively more concise ways of achieving the same thing. As you work with promises, you will see these various forms of promise chaining. For more information, see the &lt;a href=&#34;https://rstudio.github.io/promises/&#34;&gt;promises documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(promises)&#xA;&#xA;# Regular function pipe to then()&#xA;b$Browser$getVersion(wait_ = FALSE) %&amp;gt;% then(function(value) {&#xA;  print(value$product)&#xA;})&#xA;&#xA;# Promise-pipe to anonymous function, which must be wrapped in parens&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% (function(value) {&#xA;  print(value$product)&#xA;})&#xA;&#xA;# Promise-pipe to an expression (which gets converted to a function with the first argument `.`)&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% { print(.$product) }&#xA;&#xA;# Promise-pipe to a named function, with parentheses&#xA;print_product &amp;lt;- function(msg) print(msg$product)&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% print_product()&#xA;&#xA;# Promise-pipe to a named function, without parentheses&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% print_product&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The earlier example where we found the dimensions of a DOM element using CSS selectors was done with the synchronous API and &lt;code&gt;%&amp;gt;%&lt;/code&gt; pipes. The same can be done in async mode by switching from the regular pipe to the promise-pipe, and calling all the methods with &lt;code&gt;wait_=FALSE&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) } %...&amp;gt;%&#xA;  str()&#xA;&#xA;&#xA;# Or, more verbosely:&#xA;b$DOM$getDocument(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$DOM$querySelector(value$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$getBoxModel(value$nodeId, wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    str(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each step in the promise chain uses the value from the previous step, via &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt;. Note that not all asynchronous code works in such a linear, straightforward way. Sometimes it is necessary to save data from intermediate steps in a broader-scoped variable, if it is to be used in a later step in the promise chain.&lt;/p&gt; &#xA;&lt;h4&gt;Turning asynchronous code into synchronous code&lt;/h4&gt; &#xA;&lt;p&gt;There may be times, especially when programming with Chromote, where you want to wait for a promise to resolve before continuing. To do this, you can use the Chromote or ChromoteSession’s &lt;code&gt;wait_for()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# A promise chain&#xA;p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) } %...&amp;gt;%&#xA;  str()&#xA;&#xA;b$wait_for(p)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This documentation will refer to this technique as &lt;em&gt;synchronizing&lt;/em&gt; asynchronous code. The way that &lt;code&gt;wait_for()&lt;/code&gt; works is that it runs the Chromote object’s private event loop until the promise has resolved. Because the event loop is &lt;em&gt;private&lt;/em&gt;, running it will not interfere with the global event loop, which, for example, may used by Shiny to serve a web application.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;$wait_for()&lt;/code&gt; method will return the value from the promise, so instead of putting the &lt;code&gt;str()&lt;/code&gt; in the chain, you call &lt;code&gt;str()&lt;/code&gt; on the value returned by &lt;code&gt;$wait_for()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) }&#xA;&#xA;x &amp;lt;- b$wait_for(p)&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some methods in Chromote and ChromoteSession objects which are written using asynchronous method calls, but conditionally use &lt;code&gt;wait_for()&lt;/code&gt; so that they can be called either synchronously or asynchronously. The &lt;code&gt;$screenshot()&lt;/code&gt; method works this way, for example. You can call &lt;code&gt;b$screenshot(wait_=TRUE)&lt;/code&gt; (which is the default) for synchronous behavior, or &lt;code&gt;b$screenshot(wait_=FALSE)&lt;/code&gt; for async behavior.&lt;/p&gt; &#xA;&lt;p&gt;If you want to write a function that can be called in either sync or async mode, you can use this basic structure: First, construct a promise chain by calling the CDP methods with &lt;code&gt;wait_=FALSE&lt;/code&gt;. Then, at the end, if the user used &lt;code&gt;wait_=TRUE&lt;/code&gt;, wait for the promise to resolve; otherwise, simply return the promise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;getBoxModel &amp;lt;- function(b, selector = &#34;html&#34;, wait_ = TRUE) {&#xA;  p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;    { b$DOM$querySelector(.$root$nodeId, selector, wait_ = FALSE) } %...&amp;gt;%&#xA;    { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) }&#xA;&#xA;  if (wait_) {&#xA;    b$wait_for(p)&#xA;  } else {&#xA;    p&#xA;  }&#xA;}&#xA;&#xA;# Synchronous call&#xA;str(getBoxModel(b, &#34;.sidebar&#34;))&#xA;&#xA;# Asynchronous call&#xA;getBoxModel(b, &#34;.sidebar&#34;, wait_ = FALSE) %...&amp;gt;%&#xA;  str()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But, you might be wondering, if we want a synchronous API, why not simply write the synchronous code by calling the individual methods synchronously, and using a normal pipe to connect them, as in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument() %&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;) } %&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId) } %&amp;gt;%&#xA;  str()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two reasons for this. The first is that this would require a duplication of all the code for the sync and async code paths. Another reason is that the internal async code can be written to send multiple independent command chains to the ChromoteSession (or multiple ChromoteSessions), and they will be executed concurrently. If there are multiple promise chains, you can do something like the following to wait for all of them to resolve:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Starting with promises p1, p2, and p3, create a promise that resolves only&#xA;# after they have all been resolved.&#xA;p &amp;lt;- promise_all(p1, p2, p3)&#xA;b$wait_for(p)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Async events&lt;/h2&gt; &#xA;&lt;p&gt;In addition to &lt;em&gt;commands&lt;/em&gt; The Chrome DevTools Protocol also has &lt;em&gt;events&lt;/em&gt;. These are messages that are sent from the browser to the R process when various browser events happen.&lt;/p&gt; &#xA;&lt;p&gt;As an example, it can be a bit tricky to find out when to take a screenshot. When you send the browser a command to navigate to a page, it sends a response immediately, but it may take several more seconds for it to actually finish loading that page. When it does, the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event will be fired.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# Navigate and wait for Page.loadEventFired.&#xA;# Note: these lines are put in a single code block to ensure that there is no&#xA;# idle time in between.&#xA;{&#xA;  b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;  str(b$Page$loadEventFired())&#xA;}&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the synchronous API, the call to &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt; will block until Chromote receives a &lt;code&gt;Page.loadEventFired&lt;/code&gt; message from the browser. However, with the async promise API, you would write it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE) %...&amp;gt;%&#xA;  { b$Page$loadEventFired(wait_ = FALSE) } %...&amp;gt;%&#xA;  { str(.) }&#xA;&#xA;# Or, more verbosely:&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Page$loadEventFired(wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    str(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There will be a short delay after running the code before the value is printed.&lt;/p&gt; &#xA;&lt;p&gt;If you want to schedule a chain of promises and then wait for them to resolve, you can once again use the &lt;code&gt;wait_for()&lt;/code&gt; method. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Page$loadEventFired(wait_ = FALSE)&#xA;  })&#xA;&#xA;# wait_for returns the last value in the chain, so we can call str() on it&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This particular example has a twist to it: After sending the &lt;code&gt;Page.navigate&lt;/code&gt; command, the R process doesn’t really need to wait for browser’s response before it starts waiting for the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event. So instead of chaining, you could just do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- promise(function(resolve, reject) {&#xA;  b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;  resolve(b$Page$loadEventFired(wait_ = FALSE))&#xA;})&#xA;&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Essentially, the &lt;code&gt;Page.navigate&lt;/code&gt; command gets sent off and we don’t need to wait for the browser’s reply. We can tell R to immediately start waiting for the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;p&gt;We can simplify it by not wrapping both method calls in a promise. We can just fire off the navigation command, and then directly use the promise that’s returned by the event method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;p &amp;lt;- b$Page$loadEventFired(wait_ = FALSE)&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And we can make it yet simpler by firing off the navigation command and then calling &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt; in synchronous mode (with the default &lt;code&gt;wait_=TRUE&lt;/code&gt;), which already calls &lt;code&gt;wait_for()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;x &amp;lt;- b$Page$loadEventFired()&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; The Chrome DevTools Protocol itself does not automatically enable event notifications. Normally, you would have to call the &lt;code&gt;Page.enable&lt;/code&gt; method to turn on event notifications for the Page domain. However, Chromote saves you from needing to do this step by keeping track of how many callbacks there are for each domain. When the number of event callbacks for a domain goes from 0 to 1, Chromote automatically calls &lt;code&gt;$enable()&lt;/code&gt; for that domain, and when it goes from 1 to 0, it it calls &lt;code&gt;$disable()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In addition to async events with promises, they can also be used with regular callbacks. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$loadEventFired(callback_ = str)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells Chromote to call &lt;code&gt;str()&lt;/code&gt; (which prints to the console) on the message value every single time that a &lt;code&gt;Page.loadEventFired&lt;/code&gt; event message is received. It will continue doing this indefinitely. (Calling an event method this way also increments the event callback counter.)&lt;/p&gt; &#xA;&lt;p&gt;When an event method is called with a callback, the return value is a function which will cancel the callback, so that it will no longer fire. (The canceller function also decrements the event callback counter. If you lose the canceller function, there is no way to decrement the callback counter back to 0.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cancel_load_event_callback &amp;lt;- b$Page$loadEventFired(callback_ = str)&#xA;&#xA;# Each of these will cause the callback to fire.&#xA;n1 &amp;lt;- b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;n2 &amp;lt;- b$Page$navigate(&#34;https://cran.r-project.org/&#34;)&#xA;&#xA;cancel_load_event_callback()&#xA;&#xA;# No longer causes the callback to fire.&#xA;n3 &amp;lt;- b$Page$navigate(&#34;https://www.rstudio.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resource cleanup and garbage collection&lt;/h2&gt; &#xA;&lt;p&gt;When Chromote starts a Chrome process, it calls &lt;code&gt;Chrome$new()&lt;/code&gt;. This launches the Chrome process it using &lt;code&gt;processx::process()&lt;/code&gt;, and enables a supervisor for the process. This means that if the R process stops, the supervisor will detect this and shut down any Chrome processes that were registered with the supervisor. This prevents the proliferation of Chrome processes that are no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;The Chromote package will, by default, use a single Chrome process and a single &lt;code&gt;Chromote&lt;/code&gt; object, and each time &lt;code&gt;ChromoteSession$new()&lt;/code&gt; is called, it will spawn them from the &lt;code&gt;Chromote&lt;/code&gt; object. See &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#the-chromote-object-model&#34;&gt;The Chromote object model&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Specifying which browser to use&lt;/h2&gt; &#xA;&lt;p&gt;Chromote will look in specific places for the Chrome web browser, depending on platform. This is done by the &lt;code&gt;chromote:::find_chrome()&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use a different browser from the default, you can set the &lt;code&gt;CHROMOTE_CHROME&lt;/code&gt; environment variable, either with &lt;code&gt;Sys.setenv(CHROMOTE_CHROME=&#34;/path/to/browser&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Sys.setenv(CHROMOTE_CHROME = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way is create a &lt;code&gt;Chromote&lt;/code&gt; object and explicitly specify the browser, then spawn &lt;code&gt;ChromoteSession&lt;/code&gt;s from it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m &amp;lt;- Chromote$new(&#xA;  browser = Chrome$new(path = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;)&#xA;&#xA;# Spawn a ChromoteSession from the Chromote object&#xA;b &amp;lt;- m$new_session()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yet another way is to create a &lt;code&gt;Chromote&lt;/code&gt; object with a specified browser, then set it as the default Chromote object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m &amp;lt;- Chromote$new(&#xA;  browser = Chrome$new(path = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;)&#xA;&#xA;# Set this Chromote object as the default. Then any&#xA;# ChromoteSession$new() will be spawned from it.&#xA;set_default_chromote_object(m)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chrome on remote hosts&lt;/h2&gt; &#xA;&lt;p&gt;Chromote can control a browser running on a remote host. To start the browser, open a terminal on the remote host and run one of the following, depending on your platform:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning: Depending on how the remote machine is configured, the Chrome debug server might be accessible to anyone on the Internet. Proceed with caution.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Mac&#xA;&#34;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&#34; --headless \&#xA;  --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&#xA;# Linux&#xA;google-chrome --headless --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&#xA;# Windows&#xA;&#34;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&#34;  --headless \&#xA;  --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in your local R session, create a Chromote object with the &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; (you will need to use the correct IP address). Once it’s created, you can spawn a session off of it which you can control as normal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;r &amp;lt;- Chromote$new(&#xA;  browser = ChromeRemote$new(host = &#34;10.0.0.5&#34;, port = 9222)&#xA;)&#xA;&#xA;b &amp;lt;- r$new_session()&#xA;&#xA;b$Browser$getVersion()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;b$Page$loadEventFired()&#xA;b$screenshot(&#34;browser.png&#34;)&#xA;b$screenshot(&#34;browser_string.png&#34;, selector = &#34;.string-major&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you use &lt;code&gt;$view()&lt;/code&gt; on the remote browser, your local browser may block scripts for security reasons, which means that you won’t be able to view the remote browser. If your local browser is Chrome, there will be a shield-shaped icon in the location bar that you can click in order to enable loading the scripts. (Note: Some browsers don’t seem to work at all with the viewer.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; There seem to be some timing issues with remote browsers. In the example above, the browser may finish navigating to the web site before the R process receives the response message for &lt;code&gt;$navigate()&lt;/code&gt;, and therefore before R starts waiting for &lt;code&gt;Page.loadEventFired&lt;/code&gt;. In order to avoid these timing problems, it may be better to write code like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;  b$Page$loadEventFired()&#xA;}&#xA;b$screenshot(&#34;browser.png&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells it to fire off the &lt;code&gt;Page.navigate&lt;/code&gt; command and &lt;em&gt;not&lt;/em&gt; wait for it, and then immediately start waiting for &lt;code&gt;Page.loadEventFired&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;Attaching to existing tabs&lt;/h3&gt; &#xA;&lt;p&gt;In the examples above, we connected to an existing browser, but created a new tab to attach to. It’s also possible to attach to an existing browser &lt;em&gt;and&lt;/em&gt; and existing tab. In Chrome debugging terminology a tab is called a “Target”, and there is a command to retrieve the list of current Targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;r$Target$getTargets()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every target has a unique identifier string associated with it called the &lt;code&gt;targetId&lt;/code&gt;; &lt;code&gt;&#34;9DAE349A3A533718ED9E17441BA5159B&#34;&lt;/code&gt; is an example of one.&lt;/p&gt; &#xA;&lt;p&gt;Here we define a function that retrieves the ID of the first Target (tab) from a Chromote object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;first_id &amp;lt;- function(r) {&#xA;  ts &amp;lt;- r$Target$getTargets()$targetInfos&#xA;  stopifnot(length(ts) &amp;gt; 0)&#xA;  r$Target$getTargets()$targetInfos[[1]]$targetId&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following code shows an alert box in the first tab, whatever it is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rc &amp;lt;- ChromeRemote$new(host = &#34;localhost&#34;, port = 9222)&#xA;r &amp;lt;- Chromote$new(browser = rc)&#xA;tid &amp;lt;- first_id(r)&#xA;b &amp;lt;- r$new_session(targetId = tid)&#xA;b$Runtime$evaluate(&#39;alert(&#34;this is the first tab&#34;)&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Taking a screenshot of a web page&lt;/h3&gt; &#xA;&lt;p&gt;Take a screenshot of the viewport and display it using the &lt;a href=&#34;https://github.com/r-lib/showimage#readme&#34;&gt;showimage&lt;/a&gt; package. This uses Chromote’s &lt;code&gt;$screenshot()&lt;/code&gt; method, which wraps up many calls to the Chrome DevTools Protocol.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# ==== Synchronous version ====&#xA;# Run the next two lines together, without any delay in between.&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;b$Page$loadEventFired()&#xA;&#xA;b$screenshot(show = TRUE)  # Saves to screenshot.png and displays in viewer&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$screenshot(show = TRUE)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also possible to use selectors to specify what to screenshot, as well as the region (“content”, “border”, “padding”, or “margin”).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Using CSS selectors, choosing the region, and using scaling&#xA;b$screenshot(&#34;s1.png&#34;, selector = &#34;.sidebar&#34;)&#xA;b$screenshot(&#34;s2.png&#34;, selector = &#34;.sidebar&#34;, region = &#34;margin&#34;)&#xA;b$screenshot(&#34;s3.png&#34;, selector = &#34;.page&#34;, region = &#34;margin&#34;, scale = 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a vector is passed to &lt;code&gt;selector&lt;/code&gt;, it will take a screenshot with a rectangle that encompasses all the DOM elements picked out by the selectors. Similarly, if a selector picks out multiple DOM elements, all of them will be in the screenshot region.&lt;/p&gt; &#xA;&lt;h3&gt;Taking a screenshot of a web page after interacting with it&lt;/h3&gt; &#xA;&lt;p&gt;Headless Chrome provides a remote debugging UI which you can use to interact with the web page. The ChromoteSession’s &lt;code&gt;$view()&lt;/code&gt; method opens a regular browser and navigates to the remote debugging UI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.google.com&#34;) # Or just type the URL in the navigation bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, you can interact with the web page by typing in text and clicking on things.&lt;/p&gt; &#xA;&lt;p&gt;Then take a screenshot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Taking screenshots of web pages in parallel&lt;/h3&gt; &#xA;&lt;p&gt;With async code, it’s possible to navigate to and take screenshots of multiple websites in parallel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(promises)&#xA;library(chromote)&#xA;urls &amp;lt;- c(&#xA;  &#34;https://www.r-project.org/&#34;,&#xA;  &#34;https://github.com/&#34;,&#xA;  &#34;https://news.ycombinator.com/&#34;&#xA;)&#xA;&#xA;screenshot_p &amp;lt;- function(url, filename = NULL) {&#xA;  if (is.null(filename)) {&#xA;    filename &amp;lt;- gsub(&#34;^.*://&#34;, &#34;&#34;, url)&#xA;    filename &amp;lt;- gsub(&#34;/&#34;, &#34;_&#34;, filename)&#xA;    filename &amp;lt;- gsub(&#34;\\.&#34;, &#34;_&#34;, filename)&#xA;    filename &amp;lt;- sub(&#34;_$&#34;, &#34;&#34;, filename)&#xA;    filename &amp;lt;- paste0(filename, &#34;.png&#34;)&#xA;  }&#xA;&#xA;  b &amp;lt;- ChromoteSession$new()&#xA;  b$Page$navigate(url, wait_ = FALSE)&#xA;  b$Page$loadEventFired(wait_ = FALSE)$&#xA;    then(function(value) {&#xA;      b$screenshot(filename, wait_ = FALSE)&#xA;    })$&#xA;    then(function(value) {&#xA;      message(filename)&#xA;    })$&#xA;    finally(function() {&#xA;      b$close()&#xA;    })&#xA;}&#xA;&#xA;# Screenshot multiple simultaneously&#xA;ps &amp;lt;- lapply(urls, screenshot_p)&#xA;pa &amp;lt;- promise_all(.list = ps)$then(function(value) {&#xA;  message(&#34;Done!&#34;)&#xA;})&#xA;&#xA;# Block the console until the screenshots finish (optional)&#xA;cm &amp;lt;- default_chromote_object()&#xA;cm$wait_for(pa)&#xA;#&amp;gt; www_r-project_org.png&#xA;#&amp;gt; github_com.png&#xA;#&amp;gt; news_ycombinator_com.png&#xA;#&amp;gt; Done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting custom headers&lt;/h3&gt; &#xA;&lt;p&gt;Currently setting custom headers requires a little extra work because it requires &lt;code&gt;Network.enable&lt;/code&gt; be called before using it. In the future we’ll streamline things so that it will happen automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;# Currently need to manually enable Network domain notifications. Calling&#xA;# b$Network$enable() would do it, but calling it directly will bypass the&#xA;# callback counting and the notifications could get automatically disabled by a&#xA;# different Network event. We&#39;ll enable notifications for the Network domain by&#xA;# listening for a particular event. We&#39;ll also store a callback that will&#xA;# decrement the callback counter, so that we can disable notifications ater.&#xA;disable_network_notifications &amp;lt;- b$Network$responseReceived(function (msg) NULL)&#xA;b$Network$setExtraHTTPHeaders(headers = list(&#xA;  foo = &#34;bar&#34;,&#xA;  header1 = &#34;value1&#34;&#xA;))&#xA;&#xA;# Visit a web page that prints out the request headers&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# Unset extra headers. Note that `list(a=1)[0]` creates an empty _named_ list;&#xA;# an empty unnamed list will cause an error because they&#39;re converted to JSON&#xA;# differently. A named list becomes &#34;{}&#34;, but an unnamed list becomes &#34;[]&#34;.&#xA;b$Network$setExtraHTTPHeaders(headers = list(a=1)[0])&#xA;&#xA;# Request again&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# Disable extra headers entirely, by decrementing Network callback counter,&#xA;# which will disable Network notifications.&#xA;disable_network_notifications()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom User-Agent&lt;/h3&gt; &#xA;&lt;p&gt;Synchronous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Network$setUserAgentOverride(userAgent = &#34;My fake browser&#34;)&#xA;&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Network$setUserAgentOverride(userAgent = &#34;My fake browser&#34;, wait_ = FALSE)&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$screenshot(show = TRUE)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extracting text from a web page&lt;/h3&gt; &#xA;&lt;p&gt;One way to extract text from a page is to tell the browser to run JavaScript code that does it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&#xA;# Run JavaScript to extract text from the page&#xA;x &amp;lt;- b$Runtime$evaluate(&#39;document.querySelector(&#34;.corset .string-major a&#34;).innerText&#39;)&#xA;x$result$value&#xA;#&amp;gt; [1] &#34;Chrome 75 on macOS (Mojave)&#34;&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Runtime$evaluate(&#xA;      &#39;document.querySelector(&#34;.corset .string-major a&#34;).innerText&#39;&#xA;    )&#xA;  })$&#xA;  then(function(value) {&#xA;    print(value$result$value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way is to use CDP commands to extract content from the DOM. This does not require executing JavaScript in the browser’s context, but it is also not as flexible as JavaScript.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;x &amp;lt;- b$DOM$getDocument()&#xA;x &amp;lt;- b$DOM$querySelector(x$root$nodeId, &#34;.corset .string-major a&#34;)&#xA;b$DOM$getOuterHTML(x$nodeId)&#xA;#&amp;gt; $outerHTML&#xA;#&amp;gt; [1] &#34;&amp;lt;a href=\&#34;/detect/what-version-of-chrome-do-i-have\&#34;&amp;gt;Chrome 75 on macOS (Mojave)&amp;lt;/a&amp;gt;&#34;&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$DOM$getDocument()&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$querySelector(value$root$nodeId, &#34;.corset .string-major a&#34;)&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$getOuterHTML(value$nodeId)&#xA;  })$&#xA;  then(function(value) {&#xA;    print(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Websites that require authentication&lt;/h3&gt; &#xA;&lt;p&gt;For websites that require authentication, you can use Chromote to get screenshots by doing the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log in interactively and navigate to the page.&lt;/li&gt; &#xA; &lt;li&gt;Capture cookies from the page and save them.&lt;/li&gt; &#xA; &lt;li&gt;In a later R session, load the cookies.&lt;/li&gt; &#xA; &lt;li&gt;Use the cookies in Chromote and navigate to the page.&lt;/li&gt; &#xA; &lt;li&gt;Take a screenshot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;There are two ways to capture the cookies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; The first method uses the headless browser’s viewer. This can be a bit inconvenient because it requires going through the entire login process, even if you have already logged in with a normal browser.&lt;/p&gt; &#xA;&lt;p&gt;First navigate to the page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, log in interactively via the viewer. Once that’s done, use Chromote to capture the cookies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cookies &amp;lt;- b$Network$getCookies()&#xA;str(cookies)&#xA;saveRDS(cookies, &#34;cookies.rds&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After saving the cookies, you can restart R and navigate to the page, using the cookies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;cookies &amp;lt;- readRDS(&#34;cookies.rds&#34;)&#xA;b$Network$setCookies(cookies = cookies$cookies)&#xA;# Navigate to the app that requires a login&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; The second method captures the cookies using a normal browser. This is can be more convenient because, if you are already logged in, you don’t need to do it again. This requires a Chromium-based browser, and it requires running DevTools-in-DevTools on that browser.&lt;/p&gt; &#xA;&lt;p&gt;First, navigate to the page in your browser. Then press CMD-Option-I (Mac) or Ctrl-Shift-I (Windows/Linux). The developer tools panel will open. Make sure to undock the developer tools so that they are in their own window. Then press CMD-Option-I or Ctrl-Shift-I again. A second developer tools window will open. (See &lt;a href=&#34;https://stackoverflow.com/questions/12291138/how-do-you-inspect-the-web-inspector-in-chrome/12291163#12291163&#34;&gt;this SO answer&lt;/a&gt; for detailed instructions.)&lt;/p&gt; &#xA;&lt;p&gt;In the second developer tools window, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var cookies = await Main.sendOverProtocol(&#39;Network.getCookies&#39;, {})&#xA;JSON.stringify(cookies)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will return a JSON string representing the cookies for that page. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[{&#34;cookies&#34;:[{&#34;name&#34;:&#34;AWSALB&#34;,&#34;value&#34;:&#34;T3dNdcdnMasdf/cNn0j+JHMVkZ3RI8mitnAggd9AlPsaWJdsfoaje/OowIh0qe3dDPiHc0mSafe5jNH+1Aeinfalsd30AejBZDYwE&#34;,&#34;domain&#34;:&#34;beta.rstudioconnect.com&#34;,&#34;path&#34;:&#34;/&#34;,&#34;expires&#34;:1594632233.96943,&#34;size&#34;:130,&#34;httpOnly&#34;:false,&#34;secure&#34;:false,&#34;session&#34;:false}]}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy that string to the clipboard. In your R session, you can paste it to this code, surrounded by single-quotes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cookie_json &amp;lt;- &#39;[{&#34;cookies&#34;:[{&#34;name&#34;:&#34;AWSALB&#34;,&#34;value&#34;:&#34;T3dNdcdnMasdf/cNn0j+JHMVkZ3RI8mitnAggd9AlPsaWJdsfoaje/OowIh0qe3dDPiHc0mSafe5jNH+1Aeinfalsd30AejBZDYwE&#34;,&#34;domain&#34;:&#34;beta.rstudioconnect.com&#34;,&#34;path&#34;:&#34;/&#34;,&#34;expires&#34;:1594632233.96943,&#34;size&#34;:130,&#34;httpOnly&#34;:false,&#34;secure&#34;:false,&#34;session&#34;:false}]}]&#39;&#xA;&#xA;cookies &amp;lt;- jsonlite::fromJSON(cookie_json, simplifyVector = FALSE)[[1]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can use Chromote to navigate to the page and take a screenshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Network$setCookies(cookies = cookies$cookies)&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>sparklyr/sparklyr</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/sparklyr/sparklyr</id>
    <link href="https://github.com/sparklyr/sparklyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R interface for Apache Spark&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sparklyr: R interface for Apache Spark&lt;/h1&gt; &#xA;&lt;!-- README.md is generated from README.Rmd. Please edit that file --&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sparklyr/sparklyr/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/sparklyr/sparklyr/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sparklyr/sparklyr/actions/workflows/spark-tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/sparklyr/sparklyr/actions/workflows/spark-tests.yaml/badge.svg?sanitize=true&#34; alt=&#34;Spark-Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=sparklyr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/sparklyr&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/sparklyr/sparklyr?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/sparklyr/sparklyr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/sparklyr-diagram.png&#34; width=&#34;320&#34; align=&#34;right&#34; style=&#34;margin-left: 20px; margin-right: 20px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install and connect to &lt;a href=&#34;https://spark.apache.org/&#34;&gt;Spark&lt;/a&gt; using YARN, Mesos, Livy or Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#using-dplyr&#34;&gt;dplyr&lt;/a&gt; to filter and aggregate Spark datasets and &lt;a href=&#34;https://spark.rstudio.com/guides/streaming/&#34;&gt;streams&lt;/a&gt; then bring them into R for analysis and visualization.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#machine-learning&#34;&gt;MLlib&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#using-h2o&#34;&gt;H2O&lt;/a&gt;, &lt;a href=&#34;https://spark.rstudio.com/packages/sparkxgb/latest/&#34;&gt;XGBoost&lt;/a&gt; and &lt;a href=&#34;https://spark.rstudio.com/packages/graphframes/latest/&#34;&gt;GraphFrames&lt;/a&gt; to train models at scale in Spark.&lt;/li&gt; &#xA; &lt;li&gt;Create interoperable machine learning &lt;a href=&#34;https://spark.rstudio.com/guides/pipelines.html&#34;&gt;pipelines&lt;/a&gt; and productionize them with &lt;a href=&#34;https://spark.rstudio.com/packages/mleap/latest/&#34;&gt;MLeap&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#extensions&#34;&gt;extensions&lt;/a&gt; that call the full Spark API or run &lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#distributed-r&#34;&gt;distributed R&lt;/a&gt; code to support new functionality.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#connecting-to-spark&#34;&gt;Connecting to Spark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#using-dplyr&#34;&gt;Using dplyr&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#window-functions&#34;&gt;Window Functions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#using-sql&#34;&gt;Using SQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#machine-learning&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#reading-and-writing-data&#34;&gt;Reading and Writing Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#distributed-r&#34;&gt;Distributed R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#table-utilities&#34;&gt;Table Utilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#connection-utilities&#34;&gt;Connection Utilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#rstudio-ide&#34;&gt;RStudio IDE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#using-h2o&#34;&gt;Using H2O&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#connecting-through-livy&#34;&gt;Connecting through Livy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/#connecting-through-databricks-connect&#34;&gt;Connecting through Databricks Connect&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the &lt;strong&gt;sparklyr&lt;/strong&gt; package from &lt;a href=&#34;https://CRAN.r-project.org&#34;&gt;CRAN&lt;/a&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;sparklyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should also install a local version of Spark for development purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(sparklyr)&#xA;spark_install()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade to the latest version of sparklyr, run the following command and restart your r session:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;sparklyr/sparklyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connecting to Spark&lt;/h2&gt; &#xA;&lt;p&gt;You can connect to both local instances of Spark as well as remote Spark clusters. Here we’ll connect to a local instance of Spark via the &lt;a href=&#34;https://spark.rstudio.com/packages/sparklyr/latest/reference/spark-connections.html&#34;&gt;spark_connect&lt;/a&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(sparklyr)&#xA;sc &amp;lt;- spark_connect(master = &#34;local&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The returned Spark connection (&lt;code&gt;sc&lt;/code&gt;) provides a remote dplyr data source to the Spark cluster.&lt;/p&gt; &#xA;&lt;p&gt;For more information on connecting to remote Spark clusters see the &lt;a href=&#34;https://spark.rstudio.com/deployment.html&#34;&gt;Deployment&lt;/a&gt; section of the sparklyr website.&lt;/p&gt; &#xA;&lt;h2&gt;Using dplyr&lt;/h2&gt; &#xA;&lt;p&gt;We can now use all of the available dplyr verbs against the tables within the cluster.&lt;/p&gt; &#xA;&lt;p&gt;We’ll start by copying some datasets from R into the Spark cluster (note that you may need to install the nycflights13 and Lahman packages in order to execute this code):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(c(&#34;nycflights13&#34;, &#34;Lahman&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;iris_tbl &amp;lt;- copy_to(sc, iris, overwrite = TRUE)&#xA;flights_tbl &amp;lt;- copy_to(sc, nycflights13::flights, &#34;flights&#34;, overwrite = TRUE)&#xA;batting_tbl &amp;lt;- copy_to(sc, Lahman::Batting, &#34;batting&#34;, overwrite = TRUE)&#xA;src_tbls(sc)&#xA;#&amp;gt; [1] &#34;batting&#34; &#34;flights&#34; &#34;iris&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start with here’s a simple filtering example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# filter by departure delay and print the first few records&#xA;flights_tbl %&amp;gt;% filter(dep_delay == 2)&#xA;#&amp;gt; # Source: spark&amp;lt;?&amp;gt; [?? x 19]&#xA;#&amp;gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time&#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;&#xA;#&amp;gt;  1  2013     1     1      517            515         2      830            819&#xA;#&amp;gt;  2  2013     1     1      542            540         2      923            850&#xA;#&amp;gt;  3  2013     1     1      702            700         2     1058           1014&#xA;#&amp;gt;  4  2013     1     1      715            713         2      911            850&#xA;#&amp;gt;  5  2013     1     1      752            750         2     1025           1029&#xA;#&amp;gt;  6  2013     1     1      917            915         2     1206           1211&#xA;#&amp;gt;  7  2013     1     1      932            930         2     1219           1225&#xA;#&amp;gt;  8  2013     1     1     1028           1026         2     1350           1339&#xA;#&amp;gt;  9  2013     1     1     1042           1040         2     1325           1326&#xA;#&amp;gt; 10  2013     1     1     1231           1229         2     1523           1529&#xA;#&amp;gt; # … with more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;, carrier &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;, air_time &amp;lt;dbl&amp;gt;,&#xA;#&amp;gt; #   distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spark.rstudio.com/guides/dplyr.html&#34;&gt;Introduction to dplyr&lt;/a&gt; provides additional &lt;code&gt;dplyr&lt;/code&gt; examples you can try. For example, consider the last example from the tutorial which plots data on flight delays:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;delay &amp;lt;- flights_tbl %&amp;gt;%&#xA;  group_by(tailnum) %&amp;gt;%&#xA;  summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %&amp;gt;%&#xA;  filter(count &amp;gt; 20, dist &amp;lt; 2000, !is.na(delay)) %&amp;gt;%&#xA;  collect()&#xA;&#xA;# plot delays&#xA;library(ggplot2)&#xA;ggplot(delay, aes(dist, delay)) +&#xA;  geom_point(aes(size = count), alpha = 1/2) +&#xA;  geom_smooth() +&#xA;  scale_size_area(max_size = 2)&#xA;#&amp;gt; `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &#34;cs&#34;)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/dplyr-ggplot2-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Window Functions&lt;/h3&gt; &#xA;&lt;p&gt;dplyr &lt;a href=&#34;https://spark.rstudio.com/guides/dplyr.html#grouping&#34;&gt;window functions&lt;/a&gt; are also supported, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;batting_tbl %&amp;gt;%&#xA;  select(playerID, yearID, teamID, G, AB:H) %&amp;gt;%&#xA;  arrange(playerID, yearID, teamID) %&amp;gt;%&#xA;  group_by(playerID) %&amp;gt;%&#xA;  filter(min_rank(desc(H)) &amp;lt;= 2 &amp;amp; H &amp;gt; 0)&#xA;#&amp;gt; # Source:     spark&amp;lt;?&amp;gt; [?? x 7]&#xA;#&amp;gt; # Groups:     playerID&#xA;#&amp;gt; # Ordered by: playerID, yearID, teamID&#xA;#&amp;gt;    playerID  yearID teamID     G    AB     R     H&#xA;#&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&#xA;#&amp;gt;  1 aaronha01   1959 ML1      154   629   116   223&#xA;#&amp;gt;  2 aaronha01   1963 ML1      161   631   121   201&#xA;#&amp;gt;  3 abbotji01   1999 MIL       20    21     0     2&#xA;#&amp;gt;  4 abnersh01   1992 CHA       97   208    21    58&#xA;#&amp;gt;  5 abnersh01   1990 SDN       91   184    17    45&#xA;#&amp;gt;  6 acklefr01   1963 CHA        2     5     0     1&#xA;#&amp;gt;  7 acklefr01   1964 CHA        3     1     0     1&#xA;#&amp;gt;  8 acunaro01   2019 ATL      156   626   127   175&#xA;#&amp;gt;  9 acunaro01   2018 ATL      111   433    78   127&#xA;#&amp;gt; 10 adamecr01   2016 COL      121   225    25    49&#xA;#&amp;gt; # … with more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For additional documentation on using dplyr with Spark see the &lt;a href=&#34;https://spark.rstudio.com/dplyr.html&#34;&gt;dplyr&lt;/a&gt; section of the sparklyr website.&lt;/p&gt; &#xA;&lt;h2&gt;Using SQL&lt;/h2&gt; &#xA;&lt;p&gt;It’s also possible to execute SQL queries directly against tables within a Spark cluster. The &lt;code&gt;spark_connection&lt;/code&gt; object implements a &lt;a href=&#34;https://github.com/r-dbi/DBI&#34;&gt;DBI&lt;/a&gt; interface for Spark, so you can use &lt;code&gt;dbGetQuery()&lt;/code&gt; to execute SQL and return the result as an R data frame:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(DBI)&#xA;iris_preview &amp;lt;- dbGetQuery(sc, &#34;SELECT * FROM iris LIMIT 10&#34;)&#xA;iris_preview&#xA;#&amp;gt;    Sepal_Length Sepal_Width Petal_Length Petal_Width Species&#xA;#&amp;gt; 1           5.1         3.5          1.4         0.2  setosa&#xA;#&amp;gt; 2           4.9         3.0          1.4         0.2  setosa&#xA;#&amp;gt; 3           4.7         3.2          1.3         0.2  setosa&#xA;#&amp;gt; 4           4.6         3.1          1.5         0.2  setosa&#xA;#&amp;gt; 5           5.0         3.6          1.4         0.2  setosa&#xA;#&amp;gt; 6           5.4         3.9          1.7         0.4  setosa&#xA;#&amp;gt; 7           4.6         3.4          1.4         0.3  setosa&#xA;#&amp;gt; 8           5.0         3.4          1.5         0.2  setosa&#xA;#&amp;gt; 9           4.4         2.9          1.4         0.2  setosa&#xA;#&amp;gt; 10          4.9         3.1          1.5         0.1  setosa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;You can orchestrate machine learning algorithms in a Spark cluster via the &lt;a href=&#34;https://spark.apache.org/docs/latest/mllib-guide.html&#34;&gt;machine learning&lt;/a&gt; functions within &lt;strong&gt;sparklyr&lt;/strong&gt;. These functions connect to a set of high-level APIs built on top of DataFrames that help you create and tune machine learning workflows.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example where we use &lt;a href=&#34;https://spark.rstudio.com/packages/sparklyr/latest/reference/ml_linear_regression/&#34;&gt;ml_linear_regression&lt;/a&gt; to fit a linear regression model. We’ll use the built-in &lt;code&gt;mtcars&lt;/code&gt; dataset, and see if we can predict a car’s fuel consumption (&lt;code&gt;mpg&lt;/code&gt;) based on its weight (&lt;code&gt;wt&lt;/code&gt;), and the number of cylinders the engine contains (&lt;code&gt;cyl&lt;/code&gt;). We’ll assume in each case that the relationship between &lt;code&gt;mpg&lt;/code&gt; and each of our features is linear.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# copy mtcars into spark&#xA;mtcars_tbl &amp;lt;- copy_to(sc, mtcars, overwrite = TRUE)&#xA;&#xA;# transform our data set, and then partition into &#39;training&#39;, &#39;test&#39;&#xA;partitions &amp;lt;- mtcars_tbl %&amp;gt;%&#xA;  filter(hp &amp;gt;= 100) %&amp;gt;%&#xA;  mutate(cyl8 = cyl == 8) %&amp;gt;%&#xA;  sdf_partition(training = 0.5, test = 0.5, seed = 1099)&#xA;&#xA;# fit a linear model to the training dataset&#xA;fit &amp;lt;- partitions$training %&amp;gt;%&#xA;  ml_linear_regression(response = &#34;mpg&#34;, features = c(&#34;wt&#34;, &#34;cyl&#34;))&#xA;fit&#xA;#&amp;gt; Formula: mpg ~ wt + cyl&#xA;#&amp;gt; &#xA;#&amp;gt; Coefficients:&#xA;#&amp;gt; (Intercept)          wt         cyl &#xA;#&amp;gt;  37.1464554  -4.3408005  -0.5830515&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For linear regression models produced by Spark, we can use &lt;code&gt;summary()&lt;/code&gt; to learn a bit more about the quality of our fit, and the statistical significance of each of our predictors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(fit)&#xA;#&amp;gt; Deviance Residuals:&#xA;#&amp;gt;     Min      1Q  Median      3Q     Max &#xA;#&amp;gt; -2.5134 -0.9158 -0.1683  1.1503  2.1534 &#xA;#&amp;gt; &#xA;#&amp;gt; Coefficients:&#xA;#&amp;gt; (Intercept)          wt         cyl &#xA;#&amp;gt;  37.1464554  -4.3408005  -0.5830515 &#xA;#&amp;gt; &#xA;#&amp;gt; R-Squared: 0.9428&#xA;#&amp;gt; Root Mean Squared Error: 1.409&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Spark machine learning supports a wide array of algorithms and feature transformations and as illustrated above it’s easy to chain these functions together with dplyr pipelines. To learn more see the &lt;a href=&#34;https://spark.rstudio.com/mlib/&#34;&gt;machine learning&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Reading and Writing Data&lt;/h2&gt; &#xA;&lt;p&gt;You can read and write data in CSV, JSON, and Parquet formats. Data can be stored in HDFS, S3, or on the local filesystem of cluster nodes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;temp_csv &amp;lt;- tempfile(fileext = &#34;.csv&#34;)&#xA;temp_parquet &amp;lt;- tempfile(fileext = &#34;.parquet&#34;)&#xA;temp_json &amp;lt;- tempfile(fileext = &#34;.json&#34;)&#xA;&#xA;spark_write_csv(iris_tbl, temp_csv)&#xA;iris_csv_tbl &amp;lt;- spark_read_csv(sc, &#34;iris_csv&#34;, temp_csv)&#xA;&#xA;spark_write_parquet(iris_tbl, temp_parquet)&#xA;iris_parquet_tbl &amp;lt;- spark_read_parquet(sc, &#34;iris_parquet&#34;, temp_parquet)&#xA;&#xA;spark_write_json(iris_tbl, temp_json)&#xA;iris_json_tbl &amp;lt;- spark_read_json(sc, &#34;iris_json&#34;, temp_json)&#xA;&#xA;src_tbls(sc)&#xA;#&amp;gt; [1] &#34;batting&#34;      &#34;flights&#34;      &#34;iris&#34;         &#34;iris_csv&#34;     &#34;iris_json&#34;   &#xA;#&amp;gt; [6] &#34;iris_parquet&#34; &#34;mtcars&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Distributed R&lt;/h2&gt; &#xA;&lt;p&gt;You can execute arbitrary r code across your cluster using &lt;code&gt;spark_apply()&lt;/code&gt;. For example, we can apply &lt;code&gt;rgamma&lt;/code&gt; over &lt;code&gt;iris&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_apply(iris_tbl, function(data) {&#xA;  data[1:4] + rgamma(1,2)&#xA;})&#xA;#&amp;gt; # Source: spark&amp;lt;?&amp;gt; [?? x 4]&#xA;#&amp;gt;    Sepal_Length Sepal_Width Petal_Length Petal_Width&#xA;#&amp;gt;           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;&#xA;#&amp;gt;  1         6.45        4.85         2.75        1.55&#xA;#&amp;gt;  2         6.25        4.35         2.75        1.55&#xA;#&amp;gt;  3         6.05        4.55         2.65        1.55&#xA;#&amp;gt;  4         5.95        4.45         2.85        1.55&#xA;#&amp;gt;  5         6.35        4.95         2.75        1.55&#xA;#&amp;gt;  6         6.75        5.25         3.05        1.75&#xA;#&amp;gt;  7         5.95        4.75         2.75        1.65&#xA;#&amp;gt;  8         6.35        4.75         2.85        1.55&#xA;#&amp;gt;  9         5.75        4.25         2.75        1.55&#xA;#&amp;gt; 10         6.25        4.45         2.85        1.45&#xA;#&amp;gt; # … with more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also group by columns to perform an operation over each group of rows and make use of any package within the closure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_apply(&#xA;  iris_tbl,&#xA;  function(e) broom::tidy(lm(Petal_Width ~ Petal_Length, e)),&#xA;  columns = c(&#34;term&#34;, &#34;estimate&#34;, &#34;std.error&#34;, &#34;statistic&#34;, &#34;p.value&#34;),&#xA;  group_by = &#34;Species&#34;&#xA;)&#xA;#&amp;gt; # Source: spark&amp;lt;?&amp;gt; [?? x 6]&#xA;#&amp;gt;   Species    term         estimate std.error statistic  p.value&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 versicolor (Intercept)   -0.0843    0.161     -0.525 6.02e- 1&#xA;#&amp;gt; 2 versicolor Petal_Length   0.331     0.0375     8.83  1.27e-11&#xA;#&amp;gt; 3 virginica  (Intercept)    1.14      0.379      2.99  4.34e- 3&#xA;#&amp;gt; 4 virginica  Petal_Length   0.160     0.0680     2.36  2.25e- 2&#xA;#&amp;gt; 5 setosa     (Intercept)   -0.0482    0.122     -0.396 6.94e- 1&#xA;#&amp;gt; 6 setosa     Petal_Length   0.201     0.0826     2.44  1.86e- 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;The facilities used internally by sparklyr for its &lt;code&gt;dplyr&lt;/code&gt; and machine learning interfaces are available to extension packages. Since Spark is a general purpose cluster computing system there are many potential applications for extensions (e.g.&amp;nbsp;interfaces to custom machine learning pipelines, interfaces to 3rd party Spark packages, etc.).&lt;/p&gt; &#xA;&lt;p&gt;Here’s a simple example that wraps a Spark text file line counting function with an R function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# write a CSV&#xA;tempfile &amp;lt;- tempfile(fileext = &#34;.csv&#34;)&#xA;write.csv(nycflights13::flights, tempfile, row.names = FALSE, na = &#34;&#34;)&#xA;&#xA;# define an R interface to Spark line counting&#xA;count_lines &amp;lt;- function(sc, path) {&#xA;  spark_context(sc) %&amp;gt;%&#xA;    invoke(&#34;textFile&#34;, path, 1L) %&amp;gt;%&#xA;      invoke(&#34;count&#34;)&#xA;}&#xA;&#xA;# call spark to count the lines of the CSV&#xA;count_lines(sc, tempfile)&#xA;#&amp;gt; [1] 336777&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about creating extensions see the &lt;a href=&#34;https://spark.rstudio.com/guides/extensions.html&#34;&gt;Extensions&lt;/a&gt; section of the sparklyr website.&lt;/p&gt; &#xA;&lt;h2&gt;Table Utilities&lt;/h2&gt; &#xA;&lt;p&gt;You can cache a table into memory with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tbl_cache(sc, &#34;batting&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and unload from memory using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tbl_uncache(sc, &#34;batting&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connection Utilities&lt;/h2&gt; &#xA;&lt;p&gt;You can view the Spark web console using the &lt;code&gt;spark_web()&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_web(sc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can show the log using the &lt;code&gt;spark_log()&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_log(sc, n = 10)&#xA;#&amp;gt; 22/05/25 15:05:25 INFO BlockManagerInfo: Removed broadcast_84_piece0 on localhost:58163 in memory (size: 9.2 KiB, free: 912.1 MiB)&#xA;#&amp;gt; 22/05/25 15:05:25 INFO BlockManagerInfo: Removed broadcast_87_piece0 on localhost:58163 in memory (size: 18.4 KiB, free: 912.1 MiB)&#xA;#&amp;gt; 22/05/25 15:05:25 INFO BlockManagerInfo: Removed broadcast_77_piece0 on localhost:58163 in memory (size: 16.7 KiB, free: 912.1 MiB)&#xA;#&amp;gt; 22/05/25 15:05:25 INFO Executor: Finished task 0.0 in stage 67.0 (TID 83). 1004 bytes result sent to driver&#xA;#&amp;gt; 22/05/25 15:05:25 INFO TaskSetManager: Finished task 0.0 in stage 67.0 (TID 83) in 244 ms on localhost (executor driver) (1/1)&#xA;#&amp;gt; 22/05/25 15:05:25 INFO TaskSchedulerImpl: Removed TaskSet 67.0, whose tasks have all completed, from pool &#xA;#&amp;gt; 22/05/25 15:05:25 INFO DAGScheduler: ResultStage 67 (count at NativeMethodAccessorImpl.java:0) finished in 0.259 s&#xA;#&amp;gt; 22/05/25 15:05:25 INFO DAGScheduler: Job 49 is finished. Cancelling potential speculative or zombie tasks for this job&#xA;#&amp;gt; 22/05/25 15:05:25 INFO TaskSchedulerImpl: Killing all running tasks in stage 67: Stage finished&#xA;#&amp;gt; 22/05/25 15:05:25 INFO DAGScheduler: Job 49 finished: count at NativeMethodAccessorImpl.java:0, took 0.268655 s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, we disconnect from Spark:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;  spark_disconnect(sc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;RStudio IDE&lt;/h2&gt; &#xA;&lt;p&gt;The latest RStudio &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;Preview Release&lt;/a&gt; of the RStudio IDE includes integrated support for Spark and the sparklyr package, including tools for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating and managing Spark connections&lt;/li&gt; &#xA; &lt;li&gt;Browsing the tables and columns of Spark DataFrames&lt;/li&gt; &#xA; &lt;li&gt;Previewing the first 1,000 rows of Spark DataFrames&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you’ve installed the sparklyr package, you should find a new &lt;strong&gt;Spark&lt;/strong&gt; pane within the IDE. This pane includes a &lt;strong&gt;New Connection&lt;/strong&gt; dialog which can be used to make connections to local or remote Spark instances:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/spark-connect.png&#34; class=&#34;screenshot&#34; width=&#34;389&#34;&gt; &#xA;&lt;p&gt;Once you’ve connected to Spark you’ll be able to browse the tables contained within the Spark cluster and preview Spark DataFrames using the standard RStudio data viewer:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/spark-dataview.png&#34; class=&#34;screenshot&#34; width=&#34;639&#34;&gt; &#xA;&lt;p&gt;You can also connect to Spark through &lt;a href=&#34;https://livy.apache.org/&#34;&gt;Livy&lt;/a&gt; through a new connection dialog:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/spark-connect-livy.png&#34; class=&#34;screenshot&#34; width=&#34;389&#34;&gt; &#xA;&lt;div style=&#34;margin-bottom: 15px;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The RStudio IDE features for sparklyr are available now as part of the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;RStudio Preview Release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using H2O&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=rsparkling&#34;&gt;rsparkling&lt;/a&gt; is a CRAN package from &lt;a href=&#34;https://h2o.ai/&#34;&gt;H2O&lt;/a&gt; that extends &lt;a href=&#34;https://spark.rstudio.com/&#34;&gt;sparklyr&lt;/a&gt; to provide an interface into &lt;a href=&#34;https://github.com/h2oai/sparkling-water&#34;&gt;Sparkling Water&lt;/a&gt;. For instance, the following example installs, configures and runs &lt;a href=&#34;https://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/glm.html&#34;&gt;h2o.glm&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(rsparkling)&#xA;library(sparklyr)&#xA;library(dplyr)&#xA;library(h2o)&#xA;&#xA;sc &amp;lt;- spark_connect(master = &#34;local&#34;, version = &#34;2.3.2&#34;)&#xA;mtcars_tbl &amp;lt;- copy_to(sc, mtcars, &#34;mtcars&#34;, overwrite = TRUE)&#xA;&#xA;mtcars_h2o &amp;lt;- as_h2o_frame(sc, mtcars_tbl, strict_version_check = FALSE)&#xA;&#xA;mtcars_glm &amp;lt;- h2o.glm(x = c(&#34;wt&#34;, &#34;cyl&#34;),&#xA;                      y = &#34;mpg&#34;,&#xA;                      training_frame = mtcars_h2o,&#xA;                      lambda_search = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_glm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; Model Details:&#xA;#&amp;gt; ==============&#xA;#&amp;gt;&#xA;#&amp;gt; H2ORegressionModel: glm&#xA;#&amp;gt; Model ID:  GLM_model_R_1527265202599_1&#xA;#&amp;gt; GLM Model: summary&#xA;#&amp;gt;     family     link                              regularization&#xA;#&amp;gt; 1 gaussian identity Elastic Net (alpha = 0.5, lambda = 0.1013 )&#xA;#&amp;gt;                                                                lambda_search&#xA;#&amp;gt; 1 nlambda = 100, lambda.max = 10.132, lambda.min = 0.1013, lambda.1se = -1.0&#xA;#&amp;gt;   number_of_predictors_total number_of_active_predictors&#xA;#&amp;gt; 1                          2                           2&#xA;#&amp;gt;   number_of_iterations                                training_frame&#xA;#&amp;gt; 1                  100 frame_rdd_31_ad5c4e88ec97eb8ccedae9475ad34e02&#xA;#&amp;gt;&#xA;#&amp;gt; Coefficients: glm coefficients&#xA;#&amp;gt;       names coefficients standardized_coefficients&#xA;#&amp;gt; 1 Intercept    38.941654                 20.090625&#xA;#&amp;gt; 2       cyl    -1.468783                 -2.623132&#xA;#&amp;gt; 3        wt    -3.034558                 -2.969186&#xA;#&amp;gt;&#xA;#&amp;gt; H2ORegressionMetrics: glm&#xA;#&amp;gt; ** Reported on training data. **&#xA;#&amp;gt;&#xA;#&amp;gt; MSE:  6.017684&#xA;#&amp;gt; RMSE:  2.453097&#xA;#&amp;gt; MAE:  1.940985&#xA;#&amp;gt; RMSLE:  0.1114801&#xA;#&amp;gt; Mean Residual Deviance :  6.017684&#xA;#&amp;gt; R^2 :  0.8289895&#xA;#&amp;gt; Null Deviance :1126.047&#xA;#&amp;gt; Null D.o.F. :31&#xA;#&amp;gt; Residual Deviance :192.5659&#xA;#&amp;gt; Residual D.o.F. :29&#xA;#&amp;gt; AIC :156.2425&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_disconnect(sc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connecting through Livy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudera/livy&#34;&gt;Livy&lt;/a&gt; enables remote connections to Apache Spark clusters. However, please notice that connecting to Spark clusters through Livy is much slower than any other connection method.&lt;/p&gt; &#xA;&lt;p&gt;Before connecting to Livy, you will need the connection information to an existing service running Livy. Otherwise, to test &lt;code&gt;livy&lt;/code&gt; in your local environment, you can install it and run it locally as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;livy_install()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;livy_service_start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect, use the Livy service address as &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;method = &#34;livy&#34;&lt;/code&gt; in &lt;code&gt;spark_connect()&lt;/code&gt;. Once connection completes, use &lt;code&gt;sparklyr&lt;/code&gt; as usual, for instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sc &amp;lt;- spark_connect(master = &#34;http://localhost:8998&#34;, method = &#34;livy&#34;, version = &#34;3.0.0&#34;)&#xA;copy_to(sc, iris, overwrite = TRUE)&#xA;&#xA;spark_disconnect(sc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you are done using &lt;code&gt;livy&lt;/code&gt; locally, you should stop this service with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;livy_service_stop()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect to remote &lt;code&gt;livy&lt;/code&gt; clusters that support basic authentication connect as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;config &amp;lt;- livy_config(username=&#34;&amp;lt;username&amp;gt;&#34;, password=&#34;&amp;lt;password&amp;gt;&#34;)&#xA;sc &amp;lt;- spark_connect(master = &#34;&amp;lt;address&amp;gt;&#34;, method = &#34;livy&#34;, config = config)&#xA;spark_disconnect(sc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connecting through Databricks Connect&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.databricks.com/dev-tools/databricks-connect.html#databricks-connect&#34;&gt;Databricks Connect&lt;/a&gt; allows you to connect sparklyr to a remote Databricks Cluster. You can install &lt;a href=&#34;https://pypi.org/project/databricks-connect/&#34;&gt;Databricks Connect python package&lt;/a&gt; and use it to submit Spark jobs written in sparklyr APIs and have them execute remotely on a Databricks cluster instead of in the local Spark session.&lt;/p&gt; &#xA;&lt;p&gt;To use sparklyr with Databricks Connect first launch a Cluster on Databricks. Then follow &lt;a href=&#34;https://docs.databricks.com/dev-tools/databricks-connect.html#client-setup&#34;&gt;these instructions&lt;/a&gt; to setup the client:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure pyspark is not installed&lt;/li&gt; &#xA; &lt;li&gt;Install the Databricks Connect python package. The latest supported version is 6.4.1.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;databricks-connect configure&lt;/code&gt; and provide the configuration information &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Databricks account URL of the form &lt;code&gt;https://&amp;lt;account&amp;gt;.cloud.databricks.com&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.databricks.com/dev-tools/api/latest/authentication.html#token-management&#34;&gt;User token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cluster ID&lt;/li&gt; &#xA;   &lt;li&gt;Port (default port number is &lt;code&gt;15001&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To configure &lt;code&gt;sparklyr&lt;/code&gt; with Databricks Connect, set the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export SPARK_VERSION=2.4.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now simply create a spark connection as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_home &amp;lt;- system(&#34;databricks-connect get-spark-home&#34;)&#xA;sc &amp;lt;- spark_connect(method = &#34;databricks&#34;,&#xA;                    spark_home = spark_home)&#xA;copy_to(sc, iris, overwrite = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sparklyr/sparklyr/main/tools/readme/databricks-connect.png&#34; class=&#34;screenshot&#34; width=&#34;750&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;spark_disconnect(sc)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>thomasp85/patchwork</title>
    <updated>2022-06-01T01:51:40Z</updated>
    <id>tag:github.com,2022-06-01:/thomasp85/patchwork</id>
    <link href="https://github.com/thomasp85/patchwork" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Composer of ggplots&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;patchwork &lt;a href=&#34;https://patchwork.data-imaginist.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thomasp85/patchwork/master/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;131.5&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thomasp85/patchwork/actions&#34;&gt;&lt;img src=&#34;https://github.com/thomasp85/patchwork/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=patchwork&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version-ago/patchwork&#34; alt=&#34;CRAN_Release_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=patchwork&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/patchwork&#34; alt=&#34;CRAN_Download_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tidyverse.org/lifecycle/#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/thomasp85/patchwork?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/thomasp85/patchwork/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of &lt;code&gt;patchwork&lt;/code&gt; is to make it ridiculously simple to combine separate ggplots into the same graphic. As such it tries to solve the same problem as &lt;code&gt;gridExtra::grid.arrange()&lt;/code&gt; and &lt;code&gt;cowplot::plot_grid&lt;/code&gt; but using an API that incites exploration and iteration, and scales to arbitrily complex layouts.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install patchwork from CRAN using &lt;code&gt;install.packages(&#39;patchwork&#39;)&lt;/code&gt;. Alternatively you can grab the development version from github using devtools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;thomasp85/patchwork&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic example&lt;/h2&gt; &#xA;&lt;p&gt;The usage of &lt;code&gt;patchwork&lt;/code&gt; is simple: just add plots together!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;library(patchwork)&#xA;&#xA;p1 &amp;lt;- ggplot(mtcars) + geom_point(aes(mpg, disp))&#xA;p2 &amp;lt;- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))&#xA;&#xA;p1 + p2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thomasp85/patchwork/master/man/figures/README-example-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;patchwork provides rich support for arbitrarily complex layouts with full alignment. As an example, check out this very readable code for nesting three plots on top of a third:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p3 &amp;lt;- ggplot(mtcars) + geom_smooth(aes(disp, qsec))&#xA;p4 &amp;lt;- ggplot(mtcars) + geom_bar(aes(carb))&#xA;&#xA;(p1 | p2 | p3) /&#xA;      p4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thomasp85/patchwork/master/man/figures/README-unnamed-chunk-2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;patchwork can do so much more. Check out the guides for learning everything there is to know about all the different features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patchwork.data-imaginist.com/articles/patchwork.html&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patchwork.data-imaginist.com/articles/guides/assembly.html&#34;&gt;Assembling Plots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patchwork.data-imaginist.com/articles/guides/layout.html&#34;&gt;Defining Layouts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patchwork.data-imaginist.com/articles/guides/annotation.html&#34;&gt;Adding Annotation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patchwork.data-imaginist.com/articles/guides/multipage.html&#34;&gt;Aligning across pages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the patchwork project is released with a &lt;a href=&#34;https://patchwork.data-imaginist.com/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
</feed>