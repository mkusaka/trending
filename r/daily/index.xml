<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-06T01:47:31Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cardiomoon/processR</title>
    <updated>2023-06-06T01:47:31Z</updated>
    <id>tag:github.com,2023-06-06:/cardiomoon/processR</id>
    <link href="https://github.com/cardiomoon/processR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R package processR &lt;img src=&#34;https://raw.githubusercontent.com/cardiomoon/processR/master/inst/figures/imgfile.png&#34; align=&#34;right&#34; height=&#34;120&#34; width=&#34;103.6&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=processR&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/processR&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;processR&lt;/code&gt; package aims to be a user-friendly way to perform moderation, mediation, moderated mediation and moderated moderation in R. This package is inspired from famous PROCESS macro for SPSS and SAS created by Andrew Hayes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;processR is under the GPL-3 license. For a commercial license, please [contact me](mailto: &lt;a href=&#34;mailto:cardiomoon@gmail.com&#34;&gt;cardiomoon@gmail.com&lt;/a&gt;).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PROCESS macro and R package &lt;code&gt;processR&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Andrew F. Hayes was not involved in the development of this R package or application and cannot attest to the quality of the computations implemented in the code you are using. Use at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the &lt;code&gt;processR&lt;/code&gt; package from github.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(devtools)) install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;cardiomoon/processR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What does this package cover ?&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;processR&lt;/code&gt; package covers moderation, mediation, moderated mediation and moderated moderation with R. Supporting models are as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(processR)&#xA;sort(pmacro$no)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt; [1]  0.0  1.0  2.0  3.0  4.0  4.2  5.0  6.0  6.3  6.4  7.0  8.0  9.0 10.0&#xA;[15] 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0&#xA;[29] 28.0 29.0 30.0 31.0 35.0 36.0 40.0 41.0 45.0 49.0 50.0 58.0 59.0 60.0&#xA;[43] 61.0 62.0 63.0 64.0 65.0 66.0 67.0 74.0 75.0 76.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently, 52 models are supported.&lt;/p&gt; &#xA;&lt;h2&gt;Example: Moderated Mediation (PROCESS macro model 8)&lt;/h2&gt; &#xA;&lt;p&gt;I will explain functions of processR package by a example.&lt;/p&gt; &#xA;&lt;h2&gt;Concept Diagram and Statistical Diagram&lt;/h2&gt; &#xA;&lt;p&gt;You can draw concept diagram and statistical diagram easily. For example, you can draw the concept diagram for PROCESS macro model 8.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pmacroModel(8)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/cardiomoon/processR/raw/master/figure/fig1.png?raw=true&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;You can draw statistical diagram of this model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;statisticalDiagram(8)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/cardiomoon/processR/raw/master/figure/fig2.png?raw=true&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h2&gt;Full vignette&lt;/h2&gt; &#xA;&lt;p&gt;You can see full vignette for model 8 at &lt;a href=&#34;http://rpubs.com/cardiomoon/468602&#34;&gt;http://rpubs.com/cardiomoon/468602&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shiny App&lt;/h2&gt; &#xA;&lt;p&gt;I have developed a shiny app. You can test the app at &lt;a href=&#34;https://cardiomoon.shinyapps.io/processR&#34;&gt;https://cardiomoon.shinyapps.io/processR&lt;/a&gt;. I will appreciate any comment.&lt;/p&gt; &#xA;&lt;h2&gt;How to perform this analysis with shiny app&lt;/h2&gt; &#xA;&lt;p&gt;You can see how to perform this analysis at &lt;a href=&#34;http://rpubs.com/cardiomoon/468600&#34;&gt;http://rpubs.com/cardiomoon/468600&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sample powerpoint file&lt;/h2&gt; &#xA;&lt;p&gt;In the shiny app, you can download the analysis results as a powerpoint file. You can download the sample file &lt;a href=&#34;https://github.com/cardiomoon/processRDocs/raw/master/model8/model8.pptx?raw=true&#34;&gt;model8.pptx&lt;/a&gt; - view with &lt;a href=&#34;https://view.officeapps.live.com/op/view.aspx?src=https://github.com/cardiomoon/processRDocs/raw/master/model8/model8.pptx?raw=true&#34;&gt;office web viewer&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>califano-lab/PISCES</title>
    <updated>2023-06-06T01:47:31Z</updated>
    <id>tag:github.com,2023-06-06:/califano-lab/PISCES</id>
    <link href="https://github.com/califano-lab/PISCES" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package for Protein activity analysis of single-cell RNAseq.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;title: &#34;PISCES Tutorial&#34; authors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lukas Vlahos&lt;/li&gt; &#xA; &lt;li&gt;Aleksandar Obradovic&lt;/li&gt; &#xA; &lt;li&gt;Pasquale Laise&lt;/li&gt; &#xA; &lt;li&gt;Andrea Califano&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Authors:&lt;/strong&gt; Lukas Vlahos, Aleksandar Obradovic, Pasquale Laise, Andrea Califano&lt;br&gt; &lt;strong&gt;Contacts:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lukas Vlahos: &lt;a href=&#34;mailto:lv2395@cumc.columbia.edu&#34;&gt;lv2395@cumc.columbia.edu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Aleksandar Obradovic: &lt;a href=&#34;mailto:azo2104@cumc.columbia.edu&#34;&gt;azo2104@cumc.columbia.edu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;The pipeline for Protein Activity Inference in Single Cells (PISCES) is a regulatory-network-based methdology for the analysis of single cell gene expression profiles.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the PISCES manuscript is available on bioRxiv: &lt;a href=&#34;https://doi.org/10.1101/2021.05.20.445002&#34;&gt;https://doi.org/10.1101/2021.05.20.445002&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: This version of the pipeline is a newer iteration, implementing new algorithms developed by the Califano lab. An updated manuscript and more robust set of vignettes for the newer iteration of the pipeline is forthcoming.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s how you can install the PISCES package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# install cran packages&#xA;install.packages(&#34;abind&#34;, &#34;BiocManager&#34;, &#34;circlize&#34;, &#34;cluster&#34;, &#34;devtools&#34;, &#xA;                 &#34;ggplot2&#34;, &#34;ggpubr&#34;, &#34;ggrepel&#34;, &#34;grDevices&#34;, &#34;Matrix&#34;, &#xA;                 &#34;RColorBrewer&#34;, &#34;RSpectra&#34;, &#34;Seurat&#34;, &#34;uwot&#34;)&#xA;# install bioconductor packages&#xA;BiocManager::install(&#34;biomaRt&#34;)&#xA;BiocManager::install(&#34;ComplexHeatmap&#34;)&#xA;# install PISCES&#xA;devtools::install_github(&#34;califano-lab/PISCES&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then learn about how to use PISCES with our vignettes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(PISCES)&#xA;browseVignettes(package = &#34;PISCES&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some other features we&#39;re working on right now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vignette demonstating the functionality of MWKMeans for analyzing trajectories&lt;/li&gt; &#xA; &lt;li&gt;RCPP ARACNe for easier network generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=======&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Lachmann, A., et al., &lt;em&gt;ARACNe-AP: gene network reverse engineering through adaptive partitioning inference of mutual information&lt;/em&gt;. Bioinformatics, 2016. 32(14): p. 2233-5.&lt;/li&gt; &#xA; &lt;li&gt;Califano, H.D.a.A., &lt;em&gt;iterClust: Iterative Clustering&lt;/em&gt;. R package version 1.4.0. 2018: &lt;a href=&#34;https://github.com/hd2326/iterClust&#34;&gt;https://github.com/hd2326/iterClust&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ding, H., et al., &lt;em&gt;Quantitative assessment of protein activity in orphan tissues and single cells using the metaVIPER algorithm&lt;/em&gt;. Nat Commun, 2018. 9(1): p. 1471.&lt;/li&gt; &#xA; &lt;li&gt;Rosseeuw, P.J., &lt;em&gt;Journal of Computational and Applied Mathematics&lt;/em&gt; 20 (1987) 53-65&lt;/li&gt; &#xA; &lt;li&gt;Izenman, A.J., &lt;em&gt;Modern Multivariate Statistical Techniques. Regression, Classification, and Manifold Learning&lt;/em&gt;. Springer text in statistics, 2008 (Chapter 12)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Acknowledgements&lt;/h4&gt; &#xA;&lt;p&gt;Jeremy Dooley - for his advice and expertise in single cell sequencing experiments.&lt;br&gt; Hongxu Ding - whose work in the Califano laid the groundwork for the development of this pipeline.&lt;br&gt; Evan Paull - for help with software and tutorial development and testing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Merck/boxly</title>
    <updated>2023-06-06T01:47:31Z</updated>
    <id>tag:github.com,2023-06-06:/Merck/boxly</id>
    <link href="https://github.com/Merck/boxly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Interactive box plot for clinical trial analysis&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;boxly &lt;img src=&#34;https://raw.githubusercontent.com/Merck/boxly/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Merck/boxly/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Merck/boxly/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/Merck/boxly?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Merck/boxly/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The boxly package creates interactive box plots for clinical trial analysis &amp;amp; reporting.&lt;/p&gt; &#xA;&lt;video src=&#34;https://user-images.githubusercontent.com/85646030/242961824-13439ec6-afa8-43c2-8257-22b1de3d80a0.mp4&#34; data-canonical-src=&#34;https://user-images.githubusercontent.com/85646030/242961824-13439ec6-afa8-43c2-8257-22b1de3d80a0.mp4&#34; controls=&#34;controls&#34; muted class=&#34;d-block rounded-bottom-2 width-fit&#34; style=&#34;max-height:640px;max-width:66%&#34;&gt; &#xA;&lt;/video&gt; &#xA;&lt;p&gt;We assume ADaM datasets are ready for analysis and leverage &lt;a href=&#34;https://merck.github.io/metalite/&#34;&gt;metalite&lt;/a&gt; data structure to define inputs and outputs.&lt;/p&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;The general workflow is:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use &lt;code&gt;meta_boxly()&lt;/code&gt; or metalite package to construct input metadata from ADaM datasets. For example,.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;prepare_boxly()&lt;/code&gt; to prepare datasets for interactive box plot.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;boxly()&lt;/code&gt; to generate an interactive box plot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here is a quick example using an example dataset:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#34;boxly&#34;)&#xA;&#xA;meta_boxly(&#xA;  boxly_adsl,&#xA;  boxly_adlb,&#xA;  population_term = &#34;apat&#34;,&#xA;  observation_term = &#34;wk12&#34;,&#xA;  observation_subset = AVISITN &amp;lt;= 12 &amp;amp; !is.na(CHG)&#xA;) |&amp;gt;&#xA;  prepare_boxly() |&amp;gt;&#xA;  boxly()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Highlighted features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parameter selection: Drop-down menu to select parameter of interest.&lt;/li&gt; &#xA; &lt;li&gt;Interactivity: Display summary statistics and outlier information interactively.&lt;/li&gt; &#xA; &lt;li&gt;Listing: Provide detailed information in interactive listing.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>