<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-04T01:40:45Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>josegabrielnb/logistic_growth</title>
    <updated>2023-12-04T01:40:45Z</updated>
    <id>tag:github.com,2023-12-04:/josegabrielnb/logistic_growth</id>
    <link href="https://github.com/josegabrielnb/logistic_growth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R scripts for a reproducible analysis of logistic growth&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>kaneplusplus/bis620.2023</title>
    <updated>2023-12-04T01:40:45Z</updated>
    <id>tag:github.com,2023-12-04:/kaneplusplus/bis620.2023</id>
    <link href="https://github.com/kaneplusplus/bis620.2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://kaneplusplus.github.io/bis620.2023/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bis620.2023&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kaneplusplus/bis620.2023/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/kaneplusplus/bis620.2023/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of bis620.2023 is to …&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of bis620.2023 from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;kaneplusplus/bis620.2023&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;This is a basic example which shows you how to solve a common problem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(bis620.2023)&#xA;accel |&amp;gt; &#xA;  head(100) |&amp;gt; &#xA;  plot_accel()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kaneplusplus/bis620.2023/main/man/figures/README-example-1.png&#34; width=&#34;100%&#34;&gt;</summary>
  </entry>
  <entry>
    <title>ropenscilabs/deposits</title>
    <updated>2023-12-04T01:40:45Z</updated>
    <id>tag:github.com,2023-12-04:/ropenscilabs/deposits</id>
    <link href="https://github.com/ropenscilabs/deposits" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Client for access to multiple data repository services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;deposits&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/deposits/actions?query=workflow%3AR-CMD-check&#34;&gt;&lt;img src=&#34;https://github.com/ropenscilabs/deposits/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ropenscilabs/deposits&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ropenscilabs/deposits/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#wip&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/wip.svg?sanitize=true&#34; alt=&#34;Project Status: Concept&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The deposits R package is a universal client for depositing and accessing research data in a variety of online deposition services. Currently supported services are &lt;a href=&#34;https://zenodo.org&#34;&gt;zenodo&lt;/a&gt; and &lt;a href=&#34;https://figshare.com&#34;&gt;figshare&lt;/a&gt;. These two systems have fundamentally different interfaces (“API”s, or Application Programming Interfaces), and access to these and indeed all deposition services has traditionally been enabled through individual software clients. The deposits package aims to be a universal client offering access to a variety of deposition services, without users having to know any specific details of the APIs for each service.&lt;/p&gt; &#xA;&lt;p&gt;The deposits package works seamlessly with &lt;a href=&#34;https://frictionlessdata.io/&#34;&gt;the “frictionless” data workflow&lt;/a&gt;, to enable unified documentation of all aspects of datasets in one place. Instructions for installing and setting up the package are in the &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/install-setup.html&#34;&gt;installation vignette&lt;/a&gt;. This README gives a brief overview of package usage, with more detail in the &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/deposits.html&#34;&gt;introductory vignette&lt;/a&gt;. For those who prefer to jump straight in to a workflow, there is also a deposits &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/workflow.html&#34;&gt;workflow vignette&lt;/a&gt; demonstrating a full workflow from data generation and documentation to publication.&lt;/p&gt; &#xA;&lt;h2&gt;Data Repositories&lt;/h2&gt; &#xA;&lt;p&gt;The list of data repositories currently supported is accessible by the &lt;code&gt;deposits_services()&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library (deposits)&#xA;deposits_services ()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;##             name                           docs                    api_base_url&#xA;## 1         zenodo https://developers.zenodo.org/         https://zenodo.org/api/&#xA;## 2 zenodo-sandbox https://developers.zenodo.org/ https://sandbox.zenodo.org/api/&#xA;## 3       figshare     https://docs.figshare.com/    https://api.figshare.com/v2/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://zenodo.org&#34;&gt;&lt;code&gt;zenodo&lt;/code&gt;&lt;/a&gt; “sandbox” environment offers an ideal environment for testing the functionality of this package.&lt;/p&gt; &#xA;&lt;h2&gt;The “frictionless” data workflow&lt;/h2&gt; &#xA;&lt;p&gt;Prior to describing the deposits workflow, it is useful to understand the &lt;a href=&#34;https://frictionlessdata.io/&#34;&gt;“frictionless” data workflow&lt;/a&gt;, which provides a standardised way to document the contents and structure of data files through a separate metadata file. The deposits package links directly with &lt;a href=&#34;https://docs.ropensci.org/frictionless&#34;&gt;rOpenSci’s &lt;code&gt;frictionless&lt;/code&gt; package&lt;/a&gt; for writing, editing, and reading frictionless metadata files.&lt;/p&gt; &#xA;&lt;p&gt;The deposits package nevertheless aims to make this integration as seamless and painless as possible. No knowledge of the frictionless workflow is necessary, and the deposits workflow should “just work” in many cases, appropriately constructing frictionless metadata files and uploading them to deposits services. It is of course also possible to use the deposits package without frictionless metadata.&lt;/p&gt; &#xA;&lt;h2&gt;The deposits workflow&lt;/h2&gt; &#xA;&lt;p&gt;We now provide a brief overview of the deposits workflow. A more complete description is given in the &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/deposits.html&#34;&gt;main package vignette&lt;/a&gt;, and demonstrated step-by-step in &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/workflow.html&#34;&gt;the workflow vignette&lt;/a&gt;. The deposits package uses &lt;a href=&#34;https://github.com/r-lib/R6&#34;&gt;the &lt;code&gt;R6&lt;/code&gt; package&lt;/a&gt; to create &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html&#34;&gt;a &lt;code&gt;depositsClient&lt;/code&gt;&lt;/a&gt; used to call all methods needed in a deposits workflow. A &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/deposits-R6.html&#34;&gt;separate vignette&lt;/a&gt; describes the &lt;code&gt;R6&lt;/code&gt; system for those unfamiliar with it.&lt;/p&gt; &#xA;&lt;p&gt;A typical deposits workflow, and associated methods, involves the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new deposits client&lt;/li&gt; &#xA; &lt;li&gt;Fill the client with metadata, either as part of Step 1 through using the &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-new-&#34;&gt;&lt;code&gt;new()&lt;/code&gt; method&lt;/a&gt;, or afterward by using the &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-depositsClient-deposit_fill_metadata&#34;&gt;&lt;code&gt;deposit_fill_metadata()&lt;/code&gt;&lt;/a&gt; method;&lt;/li&gt; &#xA; &lt;li&gt;Create a new deposit on the nominated service using the &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposit-new-&#34;&gt;&lt;code&gt;deposit_new()&lt;/code&gt;&lt;/a&gt; method; and&lt;/li&gt; &#xA; &lt;li&gt;Upload files for the deposit using the &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposit-upload-file-&#34;&gt;&lt;code&gt;deposit_upload_file()&lt;/code&gt;&lt;/a&gt; method.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The following sections describe each of these steps in more detail.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Create a new client&lt;/h3&gt; &#xA;&lt;p&gt;All deposits operations start with a client constructed with the &lt;code&gt;new()&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli &amp;lt;- depositsClient$new (service = &#34;zenodo&#34;, sandbox = TRUE)&#xA;print (cli)&#xA;#&amp;gt; &amp;lt;deposits client&amp;gt;&#xA;#&amp;gt;  deposits service : zenodo&#xA;#&amp;gt;            sandbox: TRUE&#xA;#&amp;gt;          url_base : https://sandbox.zenodo.org/api/&#xA;#&amp;gt;  Current deposits : &amp;lt;none&amp;gt;&#xA;#&amp;gt;&#xA;#&amp;gt;    hostdata : &amp;lt;none&amp;gt;&#xA;#&amp;gt;    metadata : &amp;lt;none&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The upper section of information shown by calling &lt;code&gt;print (cli)&lt;/code&gt; to print the client describes general information, and aspects of the specified service, and the profile of the user (identified through the locally-stored token, as described in &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/install-setup.html#setup-api-tokens&#34;&gt;the “Installation and Setup” vignette&lt;/a&gt;). The lower section contains information on the current deposit held within the client. A new client initially contains no information on a deposit, and so these lower sections are empty.&lt;/p&gt; &#xA;&lt;p&gt;The code above demonstrates how &lt;code&gt;R6&lt;/code&gt; objects work, through calling “methods” or functions on the main “object” via the &lt;code&gt;$&lt;/code&gt; symbol. The “new” method must be called on &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html&#34;&gt;a &lt;code&gt;depositsClient&lt;/code&gt; object&lt;/a&gt;. From that point on, all other methods are called on that object itself. For example, the following calls lists all methods implemented by the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$deposits_methods ()&#xA;#&amp;gt; List of methods for a deposits client:&#xA;#&amp;gt;&#xA;#&amp;gt;    - deposit_add_resource&#xA;#&amp;gt;    - deposit_delete&#xA;#&amp;gt;    - deposit_delete_file&#xA;#&amp;gt;    - deposit_download_file&#xA;#&amp;gt;    - deposit_embargo&#xA;#&amp;gt;    - deposit_fill_metadata&#xA;#&amp;gt;    - deposit_new&#xA;#&amp;gt;    - deposit_prereserve_doi&#xA;#&amp;gt;    - deposit_publish&#xA;#&amp;gt;    - deposit_retrieve&#xA;#&amp;gt;    - deposit_service&#xA;#&amp;gt;    - deposit_update&#xA;#&amp;gt;    - deposit_upload_file&#xA;#&amp;gt;    - deposit_version&#xA;#&amp;gt;    - deposits_list&#xA;#&amp;gt;    - deposits_methods&#xA;#&amp;gt;    - deposits_search&#xA;#&amp;gt;&#xA;#&amp;gt;  see `?depositsClient` for full details of all methods.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All of the methods listed by &lt;a href=&#34;thos://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposits-methods-&#34;&gt;&lt;code&gt;cli$deposits_methods()&lt;/code&gt;&lt;/a&gt; then work similarly, by calling &lt;code&gt;cli$&amp;lt;method&amp;gt;(&amp;lt;parameters&amp;gt;)&lt;/code&gt;. Note that R6 functions are called directly on the client, with the object itself (&lt;code&gt;cli&lt;/code&gt;) updated by the call. For example, &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposit-fill-metadata-&#34;&gt;the &lt;code&gt;deposit_fill_metadata()&lt;/code&gt; method&lt;/a&gt; described below can be used to specify metadata for a deposit. This works by simply calling,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$deposit_fill_metadata (metadata)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;cli&lt;/code&gt; object is then updated by this call, without needing to be assigned to a return value (so there is no need to use &lt;code&gt;cli &amp;lt;- cli$&amp;lt;method&amp;gt;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Fill client with metadata&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;em&gt;metadata&lt;/em&gt; of a deposit describe the nature and properties of the data being deposited. A deposit is first created by uploading metadata to a deposits service; only then can actual data be uploaded and associated with the deposit described by the metadata. The deposits package works with two main types of metadata:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Metadata which describe a deposit and associated properties, such as author names and affiliations, deposit titles and descriptions, dates, keywords, links to other deposits or publications, and many other terms.&lt;/li&gt; &#xA; &lt;li&gt;Frictionless metadata which describe the actual contents of the data to be deposited. These kinds of metadata are (optionally) generated and (always) handled here by &lt;a href=&#34;https://docs.ropensci.org/frictionless&#34;&gt;the &lt;code&gt;frictionless&lt;/code&gt; package&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;(Note that there are actually three main types of metadata, as described in the &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/deposits.html&#34;&gt;introductory vignette&lt;/a&gt;, but the third may generally be ignored, and is intended as “read-only” metadata provided by host services.) As explained at the outset, the deposits package can be used without knowing or understanding anything about &lt;a href=&#34;https://docs.ropensci.org/frictionless&#34;&gt;the &lt;code&gt;frictionless&lt;/code&gt; package&lt;/a&gt; or &lt;a href=&#34;https://frictionlessdata.io&#34;&gt;frictionless workflows&lt;/a&gt;. Most of this present section therefore concerns the first of these two kinds of metadata, referred to throughout all package documentation as “metadata”. Brief demonstrations are also given of the second kind, to illustrate how the frictionless workflow integrates with the general deposits workflow. These kinds of metadata are always referred to as “frictionless metadata.”&lt;/p&gt; &#xA;&lt;p&gt;A separate vignette describes in detail &lt;a href=&#34;https://docs.ropensci.org/deposits/articles/metadata.html&#34;&gt;how to specify and include metadata in a deposits client&lt;/a&gt;. This section briefly demonstrates the process. An example of deposits metadata is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;metadata &amp;lt;- list (&#xA;    title = &#34;New Title&#34;,&#xA;    abstract = &#34;This is the abstract&#34;,&#xA;    creator = list (list (name = &#34;A. Person&#34;), list (name = &#34;B. Person&#34;))&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The “creator” field is a list-of-lists, to allow individual creator entries to have multiple fields in addition to “name”. These data can be used in construction of a new client by passing a &lt;code&gt;metadata&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli &amp;lt;- depositsClient$new (&#xA;    service = &#34;zenodo&#34;,&#xA;    sandbox = TRUE,&#xA;    metadata = metadata&#xA;)&#xA;print (cli)&#xA;#&amp;gt; &amp;lt;deposits client&amp;gt;&#xA;#&amp;gt;  deposits service : zenodo&#xA;#&amp;gt;            sandbox: TRUE&#xA;#&amp;gt;          url_base : https://sandbox.zenodo.org/api/&#xA;#&amp;gt;  Current deposits : &amp;lt;none&amp;gt;&#xA;#&amp;gt;&#xA;#&amp;gt;    hostdata : &amp;lt;none&amp;gt;&#xA;#&amp;gt;    metadata : 3 terms (see &#39;metadata&#39; element for details)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The “metadata” component of the client now holds 3 terms. Equivalently, metadata can be added to an existing client with &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-depositsClient-deposit_fill_metadata&#34;&gt;the &lt;code&gt;deposit_fill_metadata()&lt;/code&gt; function&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli &amp;lt;- depositsClient$new (service = &#34;zenodo&#34;, sandbox = TRUE)&#xA;cli$deposit_fill_metadata (metadata)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At that stage, the metadata are only associated with the local client. The following section describes how to use those metadata to initiate a deposit on an external service.&lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Create a new deposit&lt;/h3&gt; &#xA;&lt;p&gt;The metadata filled with the above steps can then be used to initiate a new deposit on the associated server using &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposit-new-&#34;&gt;the &lt;code&gt;deposit_new()&lt;/code&gt; method&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$deposit_new ()&#xA;#&amp;gt; ID of new deposit : 1065666&#xA;print (cli)&#xA;#&amp;gt; &amp;lt;deposits client&amp;gt;&#xA;#&amp;gt;  deposits service : zenodo&#xA;#&amp;gt;            sandbox: TRUE&#xA;#&amp;gt;          url_base : https://sandbox.zenodo.org/api/&#xA;#&amp;gt;  Current deposits : &amp;lt;none&amp;gt;&#xA;#&amp;gt;&#xA;#&amp;gt;  url_service : https://sandbox.zenodo.org/deposit/1065666&#xA;#&amp;gt;   deposit id : 1065666&#xA;#&amp;gt;     hostdata : list with 14  elements&#xA;#&amp;gt;     metadata : 4 terms (see &#39;metadata&#39; element for details)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The client now includes several additional elements, notably a “deposit id” (stored in &lt;code&gt;cli$id&lt;/code&gt;) giving the unique identifier for the new deposit, and a “hostdata” item with, in this case, 14 elements as specified by the host service. The &lt;code&gt;url_service&lt;/code&gt; is the URL for the newly-created deposit. (Viewing in a web browser will require logging in for all private and sandbox deposits). The “metadata” item also includes an additional “identifier” element containing a pre-reserved DOI provided by the deposits service.&lt;/p&gt; &#xA;&lt;h3&gt;Step 4: Upload (or download) files&lt;/h3&gt; &#xA;&lt;p&gt;A deposit is really about data, not just metadata. Data can be uploaded to a deposit with &lt;a href=&#34;https://docs.ropensci.org/deposits/reference/depositsClient.html#method-deposit-upload-file-&#34;&gt;the &lt;code&gt;deposit_upload_file()&lt;/code&gt; method&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$deposit_upload_file (path = &#34;&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/my-data.dat&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Details of files associated with deposits are stored in a &lt;code&gt;data.frame&lt;/code&gt; stored as part of the “hostdata” of a deposits client, in the &lt;code&gt;cli$hostdata$files&lt;/code&gt; item. Prior to uploading, &lt;code&gt;cli$hostdata$files&lt;/code&gt; will be empty, but after uploading it will be a &lt;code&gt;data.frame&lt;/code&gt; including one row with an item whose “filename” will be “my-data.dat”.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$hostdata$files&#xA;#&amp;gt;                           checksum    filename filesize&#xA;#&amp;gt; 1 5955bb96a8fee3bc89549bde9ef9b470 my-data.dat      829&#xA;#&amp;gt;                                     id&#xA;#&amp;gt; 1 618ae9b9-af48-4b86-aa37-7b4e767dccb7&#xA;#&amp;gt;                                                 links.download&#xA;#&amp;gt; 1 https://sandbox.zenodo.org/api/files/&amp;lt;file-hash&amp;gt;/my-data.dat&#xA;#&amp;gt;                                                                links.self&#xA;#&amp;gt; 1 https://sandbox.zenodo.org/api/deposit/depositions/1065666/files/&amp;lt;hash&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;deposit_download_file()&lt;/code&gt; function does the reverse:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cli$deposit_download_file (&#34;my-data.dat&#34;)&#xA;#&amp;gt; &#39;/&amp;lt;loca&amp;gt;/&amp;lt;directory&amp;gt;/my-data.dat&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Files are by default downloaded to the current working directory, or elsewhere specified by an additional &lt;code&gt;path&lt;/code&gt; parameter. (Note that this method returns the full local path to the downloaded file, unlike most methods for deposit clients, which invisibly return an updated version of the client.)&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this package is released with a &lt;a href=&#34;https://ropensci.org/code-of-conduct/&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;p&gt;All contributions to this project are gratefully acknowledged using the &lt;a href=&#34;https://github.com/ropenscilabs/allcontributors&#34;&gt;&lt;code&gt;allcontributors&lt;/code&gt; package&lt;/a&gt; following the &lt;a href=&#34;https://allcontributors.org&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mpadge&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/6697851?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/commits?author=mpadge&#34;&gt;mpadge&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Issues&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/collinschwantes&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/6107885?u=414bad1b3dd9499b3dc60180fc411f1fb18de24e&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3Acollinschwantes&#34;&gt;collinschwantes&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Bisaloo&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/10783929?u=38e3754466eaa200e20f0609709467b6331cdfbe&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3ABisaloo&#34;&gt;Bisaloo&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/maelle&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/8360597?u=824f03caa87c92420352e3dd9a05470320a67412&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3Amaelle&#34;&gt;maelle&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/joelnitta&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/13459362?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3Ajoelnitta&#34;&gt;joelnitta&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/noamross&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/571752?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3Anoamross&#34;&gt;noamross&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/peterdesmet&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/600993?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ropenscilabs/deposits/issues?q=is%3Aissue+author%3Apeterdesmet&#34;&gt;peterdesmet&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>