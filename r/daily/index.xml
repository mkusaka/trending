<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-27T01:41:38Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alexyermanos/Platypus</title>
    <updated>2023-05-27T01:41:38Z</updated>
    <id>tag:github.com,2023-05-27:/alexyermanos/Platypus</id>
    <link href="https://github.com/alexyermanos/Platypus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R package for the analysis of single-cell immune repertoires&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/297313954/10e0a180-713e-11eb-9a23-ef93a9d86e8b&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://alexyermanos.github.io/Platypus/index.html&#34; title=&#34;Platypus and PlatypusDB homepage&#34;&gt;==&amp;gt; Platypus and PlatypusDB homepage&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;Platypus&lt;/h1&gt; &#xA;&lt;p&gt;Platypus is an R toolkit designed to facilitate the data analysis of single-cell immune repertoire sequencing experiments. The manuscript corresponding to Platypus v2 can be found here at Yermanos et al NARGAB 2021 &lt;a href=&#34;https://doi.org/10.1093/nargab/lqab023&#34;&gt;https://doi.org/10.1093/nargab/lqab023&lt;/a&gt; and the updated manuscript concerning the v3 Platypus ecosystem can be found here: &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2022.09.28.509709v1&#34;&gt;https://www.biorxiv.org/content/10.1101/2022.09.28.509709v1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ongoing updates in the Platypus pipeline (v3)&lt;/h1&gt; &#xA;&lt;p&gt;Due to the recent changes of the default clonotyping strategy in Cellranger (version 5 and version 6) we have rebuild of Platypus to revolve around the VDJ_GEX_matrix function. This function integrates both repertoire and transcriptome information and will serve as the input to all secondary functions in future iterations of the package. The advantage of this is having all repertoire and transcriptome information at a per-cell level.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore we developed PlatypusDB, a publicly available database that facilitates the download, integration, and analysis of hundred thousands of single-cells that contain GEX information, VDJ information or both. With a single line of code, PlatypusDB allows users to either download and explore available datasets or integrate existing experiments with their own datasets. Collectively, PlatypusDB serves as a database for the scientific community interested in exploration of single cell immune repertoire sequencing experiments from mouse and human.&lt;/p&gt; &#xA;&lt;p&gt;Stay tuned for updates &lt;a href=&#34;https://twitter.com/AlexYermanos&#34;&gt;https://twitter.com/AlexYermanos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alexyermanos/Platypus/master/images/PlatypusV3_abstract.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;System requirements&lt;/h1&gt; &#xA;&lt;p&gt;Platypus has been successfully installed on MacOS X (v10.14.6) and Windows 10 Pro (v1909), and used on R versions 4.0.0 and 3.6.1&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Platypus can easily be installed from CRAN or Github. As changes and bugfixes are made regularly, the Github version may be more recent.&lt;/p&gt; &#xA;&lt;p&gt;Please scroll down for instructions on how to install the necessary dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;### Removing any previous versions of the package&#xA;# First we will ensure that there is no previous version installed locally&#xA;#detach(&#34;package:Platypus&#34;, unload=TRUE)&#xA;#remove.packages(&#34;Platypus&#34;)&#xA;&#xA;### Downloading and installing Platypus from CRAN&#xA;&#xA;install.packages(&#34;Platypus&#34;)&#xA;&#xA;### Downloading and installing Platypus from Github&#xA;&#xA;# First we need to download the most recent version from the master branch at https://github.com/alexyermanos/Platypus we can install the package using the following command. &#xA;# WARNING: This needs to be replaced with your own directory where the downloaded package is found&#xA;# For MacOS users it may look like this&#xA;install.packages(&#34;~/Downloads/Platypus_3.4.1.tar.gz&#34;, repos = NULL, type=&#34;source&#34;)&#xA;# For windows it will likely look something like this. &#xA;# WARNING: You will need to replace &#39;YourPCName&#39; with your user name for the windows account in the directory. &#xA;install.packages(&#34;C:/Users/YourPCName/Downloads/Platypus_3.4.1.tar.gz&#34;, repos = NULL, type=&#34;source&#34;)&#xA;&#xA;# The individual R functions can additionally be found on the github in the Functions branch. Within this branch, there is a folder &#34;R&#34; which contains the individual functions. This can similarly be downloaded and loaded into the R environment incase not all functions are desired. Similarly, these functions are actively updated and may include more features than the in current CRAN version. &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Platypus uses a number of different R packages, some of which need prior installation. These can be installed either from CRAN, Bioconductor:&lt;/p&gt; &#xA;&lt;h2&gt;CRAN&lt;/h2&gt; &#xA;&lt;p&gt;Code to install the packages from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#Essential packages&#xA;install.packages(&#34;tidyverse&#34;)&#xA;install.packages(&#34;Seurat&#34;)&#xA;install.packages(&#34;utils&#34;)&#xA;&#xA;#Optional packages needed for some individual functions&#xA;install.packages(&#34;ape&#34;)&#xA;install.packages(&#34;circlize&#34;)&#xA;install.packages(&#34;do&#34;)&#xA;install.packages(&#34;dplyr&#34;)&#xA;install.packages(&#34;ggplot2&#34;)&#xA;install.packages(&#34;ggseqlogo&#34;)&#xA;install.packages(&#34;igraph&#34;)&#xA;install.packages(&#34;jsonlite&#34;)&#xA;install.packages(&#34;phytools&#34;)&#xA;install.packages(&#34;reshape2&#34;)&#xA;install.packages(&#34;seqinr&#34;)&#xA;install.packages(&#34;stringdist&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GitHub&lt;/h2&gt; &#xA;&lt;h3&gt;Harmony (but not required if not using the Harmony integration method)&lt;/h3&gt; &#xA;&lt;p&gt;Code for installing harmony:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;devtools&#34;)&#xA;library(devtools)&#xA;install_github(&#34;immunogenomics/harmony&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;##Bioconductor Code for installing the packages from Bioconductor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&#34;BiocManager&#34;, quietly = TRUE))&#xA;    install.packages(&#34;BiocManager&#34;)&#xA;    &#xA;BiocManager::install(&#34;Biostrings&#34;)&#xA;BiocManager::install(&#34;org.Mm.eg.db&#34;)&#xA;BiocManager::install(&#34;edgeR&#34;)&#xA;BiocManager::install(&#34;fgsea&#34;)&#xA;BiocManager::install(&#34;msa&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please post any questions or issues in the respecitve github section: &lt;a href=&#34;https://github.com/alexyermanos/Platypus/issues&#34;&gt;https://github.com/alexyermanos/Platypus/issues&lt;/a&gt; Please reach out to us with any questions or if you would like to contribute.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cidm-ph/ggautomap</title>
    <updated>2023-05-27T01:41:38Z</updated>
    <id>tag:github.com,2023-05-27:/cidm-ph/ggautomap</id>
    <link href="https://github.com/cidm-ph/ggautomap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create ggplot maps from a column of place names&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggautomap&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cidm-ph.r-universe.dev&#34;&gt;&lt;img src=&#34;https://cidm-ph.r-universe.dev/badges/ggautomap&#34; alt=&#34;ggautomap status badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cidm-ph/ggautomap/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/cidm-ph/ggautomap/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;code&gt;ggautomap&lt;/code&gt; provides &lt;code&gt;{ggplot2}&lt;/code&gt; geometries that make use of &lt;code&gt;{cartographer}&lt;/code&gt;, a framework for matching place names with map data. With &lt;code&gt;ggautomap&lt;/code&gt; your input dataset doesn’t need to be spatially aware: the geometries will automatically attach the map data (providing it’s been registered with &lt;code&gt;{cartographer}&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://cidm-ph.github.io/ggautomap/articles/ggautomap.html&#34;&gt;the ‘Getting started’ article&lt;/a&gt;, &lt;code&gt;vignette(&#34;ggautomap&#34;)&lt;/code&gt;, for some recipes for different types of plots.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install ggautomap like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# CRAN release&#xA;install.packages(&#39;ggautomap&#39;)&#xA;&#xA;# development version&#xA;install.packages(&#39;ggautomap&#39;, repos = c(&#39;https://cidm-ph.r-universe.dev&#39;, &#39;https://cloud.r-project.org&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Let’s use the example dataset from &lt;code&gt;{cartographer}&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(cartographer)&#xA;&#xA;head(nc_type_example_2)&#xA;#&amp;gt;      county type&#xA;#&amp;gt; 1    MARTIN    A&#xA;#&amp;gt; 2  ALAMANCE    B&#xA;#&amp;gt; 3    BERTIE    A&#xA;#&amp;gt; 4   CHATHAM    B&#xA;#&amp;gt; 5   CHATHAM    B&#xA;#&amp;gt; 6 HENDERSON    B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A possible workflow is to use &lt;code&gt;cartographer::add_geometry()&lt;/code&gt; to convert this into a spatial data frame and then use &lt;code&gt;ggplot2::geom_sf()&lt;/code&gt; to draw it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ggautomap&lt;/code&gt; instead provides geoms that do this transparently as needed, so you don’t need to do a lot of boilerplate to wrangle the data into the right form before handing it off to the plotting code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;library(ggautomap)&#xA;&#xA;ggplot(nc_type_example_2, aes(location = county)) +&#xA;  geom_boundaries(feature_type = &#34;sf.nc&#34;) +&#xA;  geom_geoscatter(aes(colour = type), size = 0.5) +&#xA;  coord_automap(feature_type = &#34;sf.nc&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cidm-ph/ggautomap/main/man/figures/README-example-basic-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(nc_type_example_2, aes(location = county)) +&#xA;  geom_choropleth() +&#xA;  geom_boundaries(feature_type = &#34;sf.nc&#34;) +&#xA;  scale_fill_steps(low = &#34;#e6f9ff&#34;, high = &#34;#00394d&#34;, na.value = &#34;white&#34;) +&#xA;  coord_automap(feature_type = &#34;sf.nc&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cidm-ph/ggautomap/main/man/figures/README-example-basic-2.png&#34; width=&#34;100%&#34;&gt;</summary>
  </entry>
</feed>