<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-25T01:36:06Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ropensci-review-tools/goodpractice</title>
    <updated>2024-06-25T01:36:06Z</updated>
    <id>tag:github.com,2024-06-25:/ropensci-review-tools/goodpractice</id>
    <link href="https://github.com/ropensci-review-tools/goodpractice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Advice on R Package Building&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;goodpractice &lt;img src=&#34;https://raw.githubusercontent.com/ropensci-review-tools/goodpractice/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;20%&#34; height=&#34;20%&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ropensci-review-tools/goodpractice/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci-review-tools/goodpractice/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=goodpractice&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/goodpractice&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.r-pkg.org/pkg/goodpractice&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/goodpractice&#34; alt=&#34;CRAN RStudio mirror downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ropensci-review-tools/goodpractice?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ropensci-review-tools/goodpractice/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Advice on R Package Building&lt;/h2&gt; &#xA;&lt;p&gt;Give advice about good practices when building R packages. Advice includes functions and syntax to avoid, package structure, code complexity, code formatting, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the release version from CRAN&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;goodpractice&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and the development version from GitHub&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;ropensci-review-tools/goodpractice&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(goodpractice)&#xA;gp(&#34;&amp;lt;my-package&amp;gt;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(goodpractice)&#xA;# use example package contained in the goodpractice package&#xA;pkg_path &amp;lt;- system.file(&#34;bad1&#34;, package = &#34;goodpractice&#34;)&#xA;g &amp;lt;- gp(pkg_path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; ── R CMD build ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────&#xA;#&amp;gt;      checking for file ‘/tmp/RtmpjAXJO4/remotes2649f3077b5d9/badpackage/DESCRIPTION’ ...  ✔&#xA;#&amp;gt;   ─  i Preparing ‘badpackage’:&#xA;#&amp;gt;   ─  checking DESCRIPTION meta-information ...  ✔&#xA;#&amp;gt;   ─  checking vignette meta-information ...  ✔&#xA;#&amp;gt;   ─  checking for LF line-endings in source and make files and shell scripts (362ms)&#xA;#&amp;gt;   ─  checking for empty or unneeded directories&#xA;#&amp;gt;   ─  building ‘badpackage_1.0.0.tar.gz’&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; ── GP badpackage ───────────────────────────────────────────────────────────────&#xA;#&amp;gt; &#xA;#&amp;gt; It is good practice to&#xA;#&amp;gt; &#xA;#&amp;gt;   ✖ not use &#34;Depends&#34; in DESCRIPTION, as it can cause name clashes, and&#xA;#&amp;gt;     poor interaction with other packages. Use &#34;Imports&#34; instead.&#xA;#&amp;gt;   ✖ omit &#34;Date&#34; in DESCRIPTION. It is not required and it gets invalid&#xA;#&amp;gt;     quite often. A build date will be added to the package when you&#xA;#&amp;gt;     perform `R CMD build` on it.&#xA;#&amp;gt;   ✖ add a &#34;URL&#34; field to DESCRIPTION. It helps users find information&#xA;#&amp;gt;     about your package online. If your package does not have a&#xA;#&amp;gt;     homepage, add an URL to GitHub, or the CRAN package package page.&#xA;#&amp;gt;   ✖ add a &#34;BugReports&#34; field to DESCRIPTION, and point it to a bug&#xA;#&amp;gt;     tracker. Many online code hosting services provide bug trackers for&#xA;#&amp;gt;     free, https://github.com, https://gitlab.com, etc.&#xA;#&amp;gt;   ✖ omit trailing semicolons from code lines. They are not needed and&#xA;#&amp;gt;     most R coding standards forbid them&#xA;#&amp;gt; &#xA;#&amp;gt;     R/semicolons.R:4:30&#xA;#&amp;gt;     R/semicolons.R:5:29&#xA;#&amp;gt;     R/semicolons.R:9:38&#xA;#&amp;gt; &#xA;#&amp;gt;   ✖ not import packages as a whole, as this can cause name clashes&#xA;#&amp;gt;     between the imported packages. Instead, import only the specific&#xA;#&amp;gt;     functions you need.&#xA;#&amp;gt;   ✖ fix this R CMD check ERROR: VignetteBuilder package not declared:&#xA;#&amp;gt;     ‘knitr’ See section ‘The DESCRIPTION file’ in the ‘Writing R&#xA;#&amp;gt;     Extensions’ manual.&#xA;#&amp;gt;   ✖ avoid &#39;T&#39; and &#39;F&#39;, as they are just variables which are set to the&#xA;#&amp;gt;     logicals &#39;TRUE&#39; and &#39;FALSE&#39; by default, but are not reserved words&#xA;#&amp;gt;     and hence can be overwritten by the user.  Hence, one should always&#xA;#&amp;gt;     use &#39;TRUE&#39; and &#39;FALSE&#39; for the logicals.&#xA;#&amp;gt; &#xA;#&amp;gt;     R/tf.R:NA:NA&#xA;#&amp;gt;     R/tf.R:NA:NA&#xA;#&amp;gt;     R/tf.R:NA:NA&#xA;#&amp;gt;     R/tf.R:NA:NA&#xA;#&amp;gt;     R/tf.R:NA:NA&#xA;#&amp;gt;     ... and 4 more lines&#xA;#&amp;gt; &#xA;#&amp;gt; ────────────────────────────────────────────────────────────────────────────────&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# show all available checks&#xA;# all_checks()&#xA;&#xA;# run only a specific check&#xA;g_url &amp;lt;- gp(pkg_path, checks = &#34;description_url&#34;)&#xA;g_url&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; ── GP badpackage ───────────────────────────────────────────────────────────────&#xA;#&amp;gt; &#xA;#&amp;gt; It is good practice to&#xA;#&amp;gt; &#xA;#&amp;gt;   ✖ add a &#34;URL&#34; field to DESCRIPTION. It helps users find information&#xA;#&amp;gt;     about your package online. If your package does not have a&#xA;#&amp;gt;     homepage, add an URL to GitHub, or the CRAN package package page.&#xA;#&amp;gt; ────────────────────────────────────────────────────────────────────────────────&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# which checks were carried out?&#xA;checks(g_url)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; [1] &#34;description_url&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# which checks failed?&#xA;failed_checks(g)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; [1] &#34;no_description_depends&#34;                &#xA;#&amp;gt; [2] &#34;no_description_date&#34;                   &#xA;#&amp;gt; [3] &#34;description_url&#34;                       &#xA;#&amp;gt; [4] &#34;description_bugreports&#34;                &#xA;#&amp;gt; [5] &#34;lintr_trailing_semicolon_linter&#34;       &#xA;#&amp;gt; [6] &#34;no_import_package_as_a_whole&#34;          &#xA;#&amp;gt; [7] &#34;rcmdcheck_package_dependencies_present&#34;&#xA;#&amp;gt; [8] &#34;truefalse_not_tf&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# show the first 5 checks carried out and their results&#xA;results(g)[1:5,]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt;                    check result&#xA;#&amp;gt; 1                   covr     NA&#xA;#&amp;gt; 2              cyclocomp   TRUE&#xA;#&amp;gt; 3 no_description_depends  FALSE&#xA;#&amp;gt; 4    no_description_date  FALSE&#xA;#&amp;gt; 5        description_url  FALSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © 2022 Ascent Digital Services UK Limited&lt;/p&gt;</summary>
  </entry>
</feed>