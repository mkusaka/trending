<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-19T01:37:13Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lionel-/codegrip</title>
    <updated>2022-11-19T01:37:13Z</updated>
    <id>tag:github.com,2022-11-19:/lionel-/codegrip</id>
    <link href="https://github.com/lionel-/codegrip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reshaping and navigation commands for R code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;codegrip&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codecov.io/gh/lionel-/codegrip?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/lionel-/codegrip/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lionel-/codegrip/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/lionel-/codegrip/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;codegrip provides &lt;a href=&#34;http://rstudio.github.io/rstudioaddins/&#34;&gt;RStudio addins&lt;/a&gt; and Emacs commands for reshaping R code and navigating across syntactic constructs.&lt;/p&gt; &#xA;&lt;h3&gt;Reshaping&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;addin_reshape&lt;/code&gt; lets you cycle between different shapes of function calls. For instance, reshaping transforms code from wide to long shape and vice versa.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lionel-/codegrip/main/man/figures/README/reshape-call.svg?sanitize=true&#34;&gt; &#xA;&lt;p&gt;Note that for function definitions, &lt;code&gt;addin_reshape&lt;/code&gt; cycles through two different long shapes. The traditional L form uses more horizontal space whereas the flat form uses less horizontal space and the arguments are always aligned at double indent:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lionel-/codegrip/main/man/figures/README/reshape-def.svg?sanitize=true&#34;&gt; &#xA;&lt;h3&gt;Navigating&lt;/h3&gt; &#xA;&lt;p&gt;There are currently two motions implemented in codegrip: outwards and inwards.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;addin_move_inside&lt;/code&gt; finds the first opening delimiter (&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, or &lt;code&gt;{&lt;/code&gt;) &lt;em&gt;after&lt;/em&gt; your cursor and steps inside it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;addin_move_outside&lt;/code&gt; finds the first opening delimiter &lt;em&gt;before&lt;/em&gt; your cursor and steps outside it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lionel-/codegrip/main/man/figures/README/move.svg?sanitize=true&#34;&gt; &#xA;&lt;p&gt;These motions are handy for quick navigation across to quickly jump from a function argument to the corresponding function call. From there, you can reshape the whole call using &lt;code&gt;addin_reshape&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lionel-/codegrip/main/man/figures/README/move-reshape.svg?sanitize=true&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The package is not yet on CRAN but you can install the development version from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;lionel-/codegrip&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Suggested keybindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt + Tab&lt;/code&gt;: &lt;code&gt;addin_reshape&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt + 3&lt;/code&gt;: &lt;code&gt;addin_move_outside&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt + 4&lt;/code&gt;: &lt;code&gt;addin_move_inside&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Not yet implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt + 1&lt;/code&gt;: &lt;code&gt;addin_move_backwards&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt + 2&lt;/code&gt;: &lt;code&gt;addin_move_forwards&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Forward and backward motions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adding arguments to a function call using forward backward motions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reshaping of repeated calls like &lt;code&gt;foo(...)(...)&lt;/code&gt;. This will help reshaping data.table pipelines, e.g. &lt;code&gt;DT[...][...]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reshaping of &lt;code&gt;{&lt;/code&gt; expressions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reshaping of pipelines of binary operations, including pipes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Columnar formatting of &lt;code&gt;tibble::tribble()&lt;/code&gt; calls.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Selection of syntactic constructs, such as function arguments.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;codegrip currently uses the R parser to figure out the structure of your code. Because of this, it doesn&#39;t work with malformed or partially written code. Your whole file must be valid R code for codegrip commands to work.&lt;/p&gt;</summary>
  </entry>
</feed>