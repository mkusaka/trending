<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-22T01:42:23Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BlishLab/scriabin</title>
    <updated>2023-05-22T01:42:23Z</updated>
    <id>tag:github.com,2023-05-22:/BlishLab/scriabin</id>
    <link href="https://github.com/BlishLab/scriabin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Analysis of cell-cell communication at single-cell resolution&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scriabin&lt;/h1&gt; &#xA;&lt;p&gt;Single-cell resolution interaction analysis through binning&lt;/p&gt; &#xA;&lt;h2&gt;Goal&lt;/h2&gt; &#xA;&lt;p&gt;Scriabin aims to provide a comprehensive view of cell-cell communication (CCC) at the single-cell level without requiring subsampling or aggregation.&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;Scriabin is a computational framework for analysis of cell-cell communication at single-cell resolution. Scriabin consists of 3 main workflows depending on dataset size and analytical goals: 1. the cell-cell interaction matrix workflow, optimal for smaller datasets, analyzes communication methods used for each cell-cell pair in the dataset; 2. the summarized interaction graph workflow, designed for large comparative analyses, identifies cell-cell pairs with different total communicative potential between samples; and, 3) the interaction program discovery workflow, suitable for any dataset size, finds modules of co-expressed ligand-receptor pairs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Scriabin is implemented in R. To install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;devtools::install_github(&#34;BlishLab/scriabin&#34;, ref = &#34;main&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vignettes&lt;/h2&gt; &#xA;&lt;p&gt;Vignettes are available in the vignettes directory of this repo.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RSGInc/RSGHB</title>
    <updated>2023-05-22T01:42:23Z</updated>
    <id>tag:github.com,2023-05-22:/RSGInc/RSGHB</id>
    <link href="https://github.com/RSGInc/RSGHB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Functions for Hierarchical Bayesian Estimation: A Flexible Approach&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;This Site Has Changed!&lt;/h1&gt; &#xA;&lt;p&gt;The RSGHB model examples have moved to their own GitHub site: &lt;a href=&#34;https://github.com/RSGInc/RSGHB_Examples&#34;&gt;https://github.com/RSGInc/RSGHB_Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The 2014 ART Forum poster code has moved to its own GitHub site: &lt;a href=&#34;https://github.com/RSGInc/ART2014_RSGHB&#34;&gt;https://github.com/RSGInc/ART2014_RSGHB&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The RSGHB Package&lt;/h1&gt; &#xA;&lt;p&gt;This package can be used to estimate models using a hierarchical Bayesian framework. The flexibility comes in allowing the user to specify the likelihood function directly instead of assuming predetermined model structures. Types of models that can be estimated with this code include the family of discrete choice models (Multinomial Logit, Mixed Logit, Nested Logit, Error Components Logit and Latent Class) as well ordered response models like ordered probit and ordered logit. In addition, the package allows for flexibility in specifying parameters as either fixed (non-varying across individuals) or random with continuous distributions. Parameter distributions supported include normal, positive log-normal, negative log-normal, positive truncated normal and the Johnson SB distribution.&lt;/p&gt; &#xA;&lt;p&gt;Kenneth Train&#39;s Matlab and Gauss code for doing hierarchical Bayesian estimation has served as the basis for a few of the functions included in this package. These Matlab/Gauss functions have been rewritten to be optimized within R. Considerable code has been added to increase the flexibility and usability of the code base.&lt;/p&gt; &#xA;&lt;p&gt;Train&#39;s original Gauss and Matlab code can be found here: &lt;a href=&#34;http://elsa.berkeley.edu/Software/abstracts/train1006mxlhb.html&#34;&gt;http://elsa.berkeley.edu/Software/abstracts/train1006mxlhb.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See Train&#39;s chapter on HB in Discrete Choice with Simulation here: &lt;a href=&#34;http://elsa.berkeley.edu/books/choice2.html&#34;&gt;http://elsa.berkeley.edu/books/choice2.html&lt;/a&gt;;&lt;/p&gt; &#xA;&lt;p&gt;and his paper on using HB with non-normal distributions here: &lt;a href=&#34;http://elsa.berkeley.edu/~train/trainsonnier.pdf&#34;&gt;http://elsa.berkeley.edu/~train/trainsonnier.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RSGHB and all its example files are covered by the GPL 3 license.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/jeffdumont/RSGHB/raw/master/LICENSE&#34;&gt;https://github.com/jeffdumont/RSGHB/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The authors would also like to thank the invaluable contributions of Stephane Hess and the Choice Modelling Centre: &lt;a href=&#34;https://cmc.leeds.ac.uk/&#34;&gt;https://cmc.leeds.ac.uk/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;RSGHB and its examples are covered by the GPL-3 license. See &lt;a href=&#34;https://github.com/RSGInc/RSGHB/raw/master/LICENSE&#34;&gt;https://github.com/RSGInc/RSGHB/blob/master/LICENSE&lt;/a&gt; for more detail.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mlampros/OpenImageR</title>
    <updated>2023-05-22T01:42:23Z</updated>
    <id>tag:github.com,2023-05-22:/mlampros/OpenImageR</id>
    <link href="https://github.com/mlampros/OpenImageR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Image processing Toolkit in R&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mlampros/OpenImageR/actions&#34;&gt;&lt;img src=&#34;https://github.com/mlampros/OpenImageR/workflows/tic/badge.svg?branch=master&#34; alt=&#34;tic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/mlampros/OpenImageR?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/github/mlampros/OpenImageR/coverage.svg?branch=master&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cran.r-project.org/package=OpenImageR&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/OpenImageR&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.r-pkg.org/pkg/OpenImageR&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/OpenImageR?color=blue&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/VY0x8snyh&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;21px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/mlampros/openimager&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/automated/mlampros/openimager.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=OpenImageR&#34;&gt;&lt;img src=&#34;https://tinyverse.netlify.com/badge/OpenImageR&#34; alt=&#34;Dependencies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenImageR&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;The OpenImageR package is an image processing library. It includes functions for image preprocessing, filtering and image recognition. More details on the functionality of OpenImageR can be found in the &lt;a href=&#34;http://mlampros.github.io/2016/07/08/OpenImageR/&#34;&gt;first&lt;/a&gt;, &lt;a href=&#34;http://mlampros.github.io/2018/08/08/Gabor_Feature_Extraction/&#34;&gt;second&lt;/a&gt; and &lt;a href=&#34;http://mlampros.github.io/2018/11/09/Image_Segmentation_Superpixels_Clustering/&#34;&gt;third&lt;/a&gt; blog-posts, and in the package Documentation ( &lt;em&gt;scroll down for information on how to use the&lt;/em&gt; &lt;strong&gt;docker image&lt;/strong&gt; ) &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE 06-11-2018&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As of version 1.1.2 the &lt;em&gt;OpenImageR&lt;/em&gt; package allows R package maintainers to perform &lt;strong&gt;linking between packages at a C++ code (Rcpp) level&lt;/strong&gt;. This means that the Rcpp functions of the &lt;em&gt;OpenImageR&lt;/em&gt; package can be called in the C++ files of another package. In the next lines I&#39;ll give detailed explanations on how this can be done:&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Assumming that an R package (&#39;PackageA&#39;) calls one of the &lt;em&gt;OpenImageR&lt;/em&gt; Rcpp functions. Then the maintainer of &#39;PackageA&#39; has to :&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;1st.&lt;/strong&gt; install the &lt;em&gt;OpenImageR&lt;/em&gt; package to take advantage of the new functionality either from CRAN using,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;install.packages(&#34;OpenImageR&#34;)&#xA; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;or download the latest version from Github using the &lt;em&gt;devtools&lt;/em&gt; package,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;devtools::install_github(&#39;mlampros/OpenImageR&#39;)&#xA; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2nd.&lt;/strong&gt; update the &lt;strong&gt;DESCRIPTION&lt;/strong&gt; file of &#39;PackageA&#39; and especially the &lt;em&gt;LinkingTo&lt;/em&gt; field by adding the &lt;em&gt;OpenImageR&lt;/em&gt; package (besides any other packages),&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;LinkingTo: OpenImageR&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;3rd.&lt;/strong&gt; open a &lt;strong&gt;new C++ file&lt;/strong&gt; (for instance in Rstudio) and at the top of the file add the following &#39;headers&#39;, &#39;depends&#39; and &#39;plugins&#39;,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;# include &amp;lt;RcppArmadillo.h&amp;gt;&#xA;# include &amp;lt;OpenImageRheader.h&amp;gt;&#xA;// [[Rcpp::depends(&#34;RcppArmadillo&#34;)]]&#xA;// [[Rcpp::depends(OpenImageR)]]&#xA;// [[Rcpp::plugins(cpp11)]]&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;The available C++ classes (&lt;em&gt;Utility_functions&lt;/em&gt;, &lt;em&gt;Gabor_Features&lt;/em&gt;, &lt;em&gt;Gabor_Features_Rcpp&lt;/em&gt;, &lt;em&gt;HoG_features&lt;/em&gt;, &lt;em&gt;Image_Hashing&lt;/em&gt;) can be found in the &lt;strong&gt;inst/include/OpenImageRheader.h&lt;/strong&gt; file.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;A &lt;em&gt;complete minimal example&lt;/em&gt; would be :&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;# include &amp;lt;RcppArmadillo.h&amp;gt;&#xA;# include &amp;lt;OpenImageRheader.h&amp;gt;&#xA;// [[Rcpp::depends(&#34;RcppArmadillo&#34;)]]&#xA;// [[Rcpp::depends(OpenImageR)]]&#xA;// [[Rcpp::plugins(cpp11)]]&#xA;&#xA;&#xA;// [[Rcpp::export]]&#xA;arma::mat rgb_2gray_exp(arma::cube RGB_image) {&#xA;&#xA;  oimageR::Utility_functions UTLF;&#xA;  return UTLF.rgb_2gray_rcpp(RGB_image);&#xA;}&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Then, by opening an R file a user can call the &lt;em&gt;rgb_2gray_exp&lt;/em&gt; function using,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;Rcpp::sourceCpp(&#39;example.cpp&#39;)              # assuming that the previous Rcpp code is included in &#39;example.cpp&#39; &#xA;             &#xA;set.seed(1)&#xA;im_rgb = array(runif(30000), c(100, 100, 3))&#xA;&#xA;im_grey = rgb_2gray_exp(im_rgb)&#xA;&#xA;str(im_grey)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Use the following link to report bugs/issues, &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mlampros/OpenImageR/issues&#34;&gt;https://github.com/mlampros/OpenImageR/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE 29-11-2019&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker images&lt;/strong&gt; of the &lt;em&gt;OpenImageR&lt;/em&gt; package are available to download from my &lt;a href=&#34;https://hub.docker.com/r/mlampros/openimager&#34;&gt;dockerhub&lt;/a&gt; account. The images come with &lt;em&gt;Rstudio&lt;/em&gt; and the &lt;em&gt;R-development&lt;/em&gt; version (latest) installed. The whole process was tested on Ubuntu 18.04. To &lt;strong&gt;pull&lt;/strong&gt; &amp;amp; &lt;strong&gt;run&lt;/strong&gt; the image do the following,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;docker pull mlampros/openimager:rstudiodev&#xA;&#xA;docker run -d --name rstudio_dev -e USER=rstudio -e PASSWORD=give_here_your_password --rm -p 8787:8787 mlampros/openimager:rstudiodev&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;The user can also &lt;strong&gt;bind&lt;/strong&gt; a home directory / folder to the image to use its files by specifying the &lt;strong&gt;-v&lt;/strong&gt; command,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;docker run -d --name rstudio_dev -e USER=rstudio -e PASSWORD=give_here_your_password --rm -p 8787:8787 -v /home/YOUR_DIR:/home/rstudio/YOUR_DIR mlampros/openimager:rstudiodev&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;In the latter case you might have first give permission privileges for write access to &lt;strong&gt;YOUR_DIR&lt;/strong&gt; directory (not necessarily) using,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;&#xA;chmod -R 777 /home/YOUR_DIR&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;The &lt;strong&gt;USER&lt;/strong&gt; defaults to &lt;em&gt;rstudio&lt;/em&gt; but you have to give your &lt;strong&gt;PASSWORD&lt;/strong&gt; of preference (see &lt;a href=&#34;https://rocker-project.org/&#34;&gt;https://rocker-project.org/&lt;/a&gt; for more information).&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Open your web-browser and depending where the docker image was &lt;em&gt;build / run&lt;/em&gt; give,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;1st. Option&lt;/strong&gt; on your personal computer,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;http://0.0.0.0:8787 &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;2nd. Option&lt;/strong&gt; on a cloud instance,&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;http://Public DNS:8787&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;to access the Rstudio console in order to give your username and password.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Citation:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you use the code of this repository in your paper or research please cite both &lt;strong&gt;OpenImageR&lt;/strong&gt; and the &lt;strong&gt;original articles / software&lt;/strong&gt; &lt;code&gt;https://CRAN.R-project.org/package=OpenImageR&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;@Manual{,&#xA;  title = {{OpenImageR}: An Image Processing Toolkit},&#xA;  author = {Lampros Mouselimis},&#xA;  year = {2023},&#xA;  note = {R package version 1.2.9},&#xA;  url = {https://CRAN.R-project.org/package=OpenImageR},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt;</summary>
  </entry>
</feed>