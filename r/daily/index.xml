<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-11T01:41:18Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gaospecial/ggVennDiagram</title>
    <updated>2024-01-11T01:41:18Z</updated>
    <id>tag:github.com,2024-01-11:/gaospecial/ggVennDiagram</id>
    <link href="https://github.com/gaospecial/ggVennDiagram" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A &#39;ggplot2&#39; implement of Venn Diagram.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggVennDiagram&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=ggVennDiagram&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/ggVennDiagram&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggVennDiagram&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/last-month/ggVennDiagram&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.3389/fgene.2021.706907&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/doi-10.3389/fgene.2021.706907-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggVennDiagram&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggVennDiagram?color=green&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gaospecial/ggVennDiagram&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/devel%20version-1.4.13-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/gaospecial/ggVennDiagram&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/gaospecial/ggVennDiagram/branch/master/graph/badge.svg?token=c365345d-e34c-40f6-b2c0-881b5b2841e7&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;‘&lt;code&gt;ggVennDiagram&lt;/code&gt;’ enables fancy Venn plot with 2-7 sets and generates publication quality figure. It also support upset plot with unlimited number of sets from version 1.4.4.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the released version of ggVennDiagram from &lt;a href=&#34;https://CRAN.R-project.org&#34;&gt;CRAN&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;ggVennDiagram&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the development version from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;gaospecial/ggVennDiagram&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find &lt;strong&gt;ggVennDiagram&lt;/strong&gt; is useful and used it in academic papers, you may cite this package as:&lt;/p&gt; &#xA;&lt;p&gt;Gao, C.-H., Yu, G., and Cai, P. (2021). ggVennDiagram: An Intuitive, Easy-to-Use, and Highly Customizable R Package to Generate Venn Diagram. Frontiers in Genetics 12, 1598. doi: &lt;a href=&#34;https://www.frontiersin.org/articles/10.3389/fgene.2021.706907/full&#34;&gt;10.3389/fgene.2021.706907&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ggVennDiagram&lt;/code&gt; maps the fill color of each region to quantity, allowing us to visually observe the differences between different parts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggVennDiagram)&#xA;genes &amp;lt;- paste(&#34;gene&#34;,1:1000,sep=&#34;&#34;)&#xA;set.seed(20231214)&#xA;x &amp;lt;- list(A=sample(genes,300),&#xA;          B=sample(genes,525),&#xA;          C=sample(genes,440),&#xA;          D=sample(genes,350))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ggVennDiagram&lt;/code&gt; return a &lt;code&gt;ggplot&lt;/code&gt; object, the fill/edge colors can be further modified with &lt;code&gt;ggplot&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;ggVennDiagram(x) + scale_fill_gradient(low=&#34;grey90&#34;,high = &#34;red&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggVennDiagram(x, set_color = c(&#34;blue&#34;,&#34;red&#34;,&#34;green&#34;,&#34;purple&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-4-2.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;ggVennDiagram&lt;/code&gt; support 2-7 dimension Venn plot. The generated figure is generally ready for publish. The main function &lt;code&gt;ggVennDiagram()&lt;/code&gt; will check how many items in the first parameter and call corresponding function automatically.&lt;/p&gt; &#xA;&lt;p&gt;The parameter &lt;code&gt;category.names&lt;/code&gt; is set names. And the parameter &lt;code&gt;label&lt;/code&gt; can label how many items are included in each parts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggVennDiagram(x,category.names = c(&#34;Stage 1&#34;,&#34;Stage 2&#34;,&#34;Stage 3&#34;, &#34;Stage4&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-5-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;ggVennDiagram(x,category.names = c(&#34;Stage 1&#34;,&#34;Stage 2&#34;,&#34;Stage 3&#34;, &#34;Stage4&#34;), label = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-5-2.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;p&gt;Set &lt;code&gt;label_alpha = 0&lt;/code&gt; to remove label background.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggVennDiagram(x, label_alpha=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-6-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;h2&gt;Showing intersection values&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: you need to install the GitHub version to enable these functions.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;We implemented the &lt;code&gt;process_region_data()&lt;/code&gt; to get intersection values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;y &amp;lt;- list(&#xA;  A = sample(letters, 8),&#xA;  B = sample(letters, 8),&#xA;  C = sample(letters, 8),&#xA;  D = sample(letters, 8)&#xA;)&#xA;&#xA;process_region_data(Venn(y))&#xA;#&amp;gt; # A tibble: 15 × 4&#xA;#&amp;gt;    id      name    item      count&#xA;#&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;list&amp;gt;    &amp;lt;int&amp;gt;&#xA;#&amp;gt;  1 1       A       &amp;lt;chr [3]&amp;gt;     3&#xA;#&amp;gt;  2 2       B       &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt;  3 3       C       &amp;lt;chr [3]&amp;gt;     3&#xA;#&amp;gt;  4 4       D       &amp;lt;chr [0]&amp;gt;     0&#xA;#&amp;gt;  5 1/2     A/B     &amp;lt;chr [0]&amp;gt;     0&#xA;#&amp;gt;  6 1/3     A/C     &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt;  7 1/4     A/D     &amp;lt;chr [2]&amp;gt;     2&#xA;#&amp;gt;  8 2/3     B/C     &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt;  9 2/4     B/D     &amp;lt;chr [3]&amp;gt;     3&#xA;#&amp;gt; 10 3/4     C/D     &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt; 11 1/2/3   A/B/C   &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt; 12 1/2/4   A/B/D   &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt; 13 1/3/4   A/C/D   &amp;lt;chr [0]&amp;gt;     0&#xA;#&amp;gt; 14 2/3/4   B/C/D   &amp;lt;chr [1]&amp;gt;     1&#xA;#&amp;gt; 15 1/2/3/4 A/B/C/D &amp;lt;chr [0]&amp;gt;     0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If only several items were included, intersections may also be viewed interactively by &lt;code&gt;plotly&lt;/code&gt; method (if you have two many items, this is useless).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggVennDiagram(y, show_intersect = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In web browser or RStudio, you will get:&lt;/p&gt; &#xA;&lt;img src=&#34;https://vnote-1251564393.cos.ap-chengdu.myqcloud.com/typora-img/intersection.gif&#34; width=&#34;90%&#34;&gt; &#xA;&lt;h1&gt;Customizing your plot&lt;/h1&gt; &#xA;&lt;p&gt;There are three components in a Venn plot: 1) the set labels; 2) the edge of sets; and 3) the filling regions and labels (optional) of each parts. We separately stored these data in a structured &lt;code&gt;VennPlotData&lt;/code&gt; object, in which labels, edges and regions are stored as data frames.&lt;/p&gt; &#xA;&lt;p&gt;In general, &lt;code&gt;ggVennDiagram()&lt;/code&gt; plot a Venn in three steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;get the coordinates of a applicable shape from internal &lt;code&gt;shapes&lt;/code&gt; datasets.&lt;/li&gt; &#xA; &lt;li&gt;calculate sub regions of sets, including both the shape regions and sets members, and return a &lt;code&gt;VennPlotData&lt;/code&gt; object that includes all necessary definitions. We implement a number of set operations functions to do this job.&lt;/li&gt; &#xA; &lt;li&gt;plot using &lt;code&gt;ggplot2&lt;/code&gt; functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check &lt;code&gt;vignette(&#34;fully-customed&#34;, package = &#34;ggVennDiagram&#34;)&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h1&gt;Venn Diagram for more than four sets&lt;/h1&gt; &#xA;&lt;p&gt;If you have reviewed my codes, you may find it is easy to support Venn Diagram for more than four sets, as soon as you find a ideal parameter to generate more circles or ellipses in the plot. The key point is to let the generated ellipses have exactly one intersection for each combination.&lt;/p&gt; &#xA;&lt;h2&gt;Venn Diagram of up to seven sets&lt;/h2&gt; &#xA;&lt;p&gt;From v1.0, &lt;code&gt;ggVennDiagram&lt;/code&gt; can plot up to seven dimension Venn plot. Please note that the shapes for this five sets diagram, as well as those for six and seven sets, are imported from the original package “venn”, authored by Adrian Dușa.&lt;/p&gt; &#xA;&lt;p&gt;However, Venn Diagram for more than four sets may be meaningless in some conditions, as some parts may be omitted in such ellipses. Therefore, it is only useful in specific conditions. For example, if the set intersection of all group are extremely large, you may use several ellipses to draw a “flower” to show that.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- list(A=sample(genes,300),&#xA;          B=sample(genes,525),&#xA;          C=sample(genes,440),&#xA;          D=sample(genes,350),&#xA;          E=sample(genes,200),&#xA;          F=sample(genes,150),&#xA;          G=sample(genes,100))&#xA;&#xA;# two dimension Venn plot&#xA;ggVennDiagram(x[1:2],label = &#34;none&#34;)&#xA;&#xA;# three dimension Venn plot&#xA;ggVennDiagram(x[1:3],label = &#34;none&#34;)&#xA;&#xA;# four dimension Venn plot&#xA;ggVennDiagram(x[1:4],label = &#34;none&#34;)&#xA;&#xA;# five dimension Venn plot&#xA;ggVennDiagram(x[1:5],label = &#34;none&#34;)&#xA;&#xA;# six dimension Venn plot&#xA;ggVennDiagram(x[1:6],label = &#34;none&#34;)&#xA;&#xA;# seven dimension Venn plot&#xA;ggVennDiagram(x,label = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-11-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;h2&gt;Native support of upset plot&lt;/h2&gt; &#xA;&lt;p&gt;From version 1.4.4, &lt;code&gt;ggVennDiagram&lt;/code&gt; supports unlimited number of sets, as it can draw a plain upset plot automatically when number of sets is more than 7.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# add an extra member in list&#xA;x$H = sample(genes,500)&#xA;ggVennDiagram(x)&#xA;#&amp;gt; Warning in ggVennDiagram(x): Only support 2-7 dimension Venn diagram. Will give&#xA;#&amp;gt; a plain upset plot instead.&#xA;#&amp;gt; Warning: Removed 1 rows containing missing values (`position_stack()`).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-12-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;p&gt;Upset plot can also be used by setting &lt;code&gt;force_upset = TRUE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggVennDiagram(x[1:4], force_upset = TRUE, order.set.by = &#34;name&#34;, order.intersect.by = &#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-13-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;p&gt;Since upset plot is consisted with upper panel and lower panel, and left panel and right panel, the appearance should be adjusted with different conditions. We provide two parameters, which are &lt;code&gt;relative_height&lt;/code&gt; and &lt;code&gt;relative_width&lt;/code&gt; to do this.&lt;/p&gt; &#xA;&lt;p&gt;For example, if we want to give more space to lower panel, just change the &lt;code&gt;relative_height&lt;/code&gt; from 3 (the default) to 2.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;venn = Venn(x)&#xA;plot_upset(venn, nintersects = 30, relative_height = 2, relative_width = 0.3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/gaospecial/ggVennDiagram/master/man/figures/README-unnamed-chunk-14-1.png&#34; width=&#34;90%&#34;&gt; &#xA;&lt;h1&gt;Reference&lt;/h1&gt; &#xA;&lt;p&gt;Adrian Dușa (2024) &lt;em&gt;venn: Draw Venn Diagrams&lt;/em&gt;, R package version 1.12. &lt;a href=&#34;https://CRAN.R-project.org/package=venn&#34;&gt;https://CRAN.R-project.org/package=venn&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>