<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-08T01:40:30Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>isinaltinkaya/gptchatteR</title>
    <updated>2022-12-08T01:40:30Z</updated>
    <id>tag:github.com,2022-12-08:/isinaltinkaya/gptchatteR</id>
    <link href="https://github.com/isinaltinkaya/gptchatteR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An experimental and unofficial wrapper for interacting with ChatGPT in R.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gptchatteR&lt;/h1&gt; &#xA;&lt;p&gt;An experimental and unofficial wrapper for interacting with ChatGPT in R.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;→ Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Install the devtools and openai packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;install.packages(c(&#34;devtools&#34;, &#34;openai&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load the &lt;code&gt;devtools&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;library(devtools)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;→ Install the gptchatteR package&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install_github(&#34;isinaltinkaya/gptchatteR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;→ Prepare the chatter&lt;/h3&gt; &#xA;&lt;p&gt;Load the gptchatteR package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;library(gptchatteR)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Authenticate the chatter with your openai API key using the &lt;code&gt;chatter.auth&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;chatter.auth(&#34;sk-qGTnjsCI8mZkCtvXVe6SUSEYOUROWNKEY&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a new chatter session with &lt;code&gt;chatter.create&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chatter.create()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your chatter is now ready for use!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;library(gptchatteR)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;→ Casual chat&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;chatter.chat&lt;/code&gt; function to send messages to ChatGPT and receive responses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;chatter.chat(&#34;Hello, ChatGPT!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;→ Plot with chatter&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;chatter.plot&lt;/code&gt; function can be used to generate plots based on the input data and the ChatGPT response. For example, to create a scatterplot of a dataframe named df with columns A and B, you could use the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;chatter.feed(&#34;I have a dataframe named df. It has two columns: A and B&#34;)&#xA;cp &amp;lt;- chatter.plot(&#34;Plot a scatterplot where x axis is A, y is B&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the plot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;cp$plot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the R code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;cp$command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;→ Feed the chatter&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;chatter.feed&lt;/code&gt; function can be used to provide the chatter session with information that can be used in future responses. This can be useful if you want the chatter to have access to specific data or context when generating a response.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;chatter.chat&lt;/code&gt; function with &lt;code&gt;feed=TRUE&lt;/code&gt; to make the chatter remember the information in your message for future use. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# Use the chatter.chat function with the feed argument set to TRUE &#xA;# to make the chatter remember this information for future use&#xA;# and respond at the same time.&#xA;chatter.chat(&#34;I have a dataframe named df. It has two columns: A and B. What are my column names?&#34;,feed=TRUE)&#xA;&#xA;# This will make the chatter remember that the dataframe has two &#xA;# columns named A and B, and it will use this information when generating &#xA;# its response to the question.&#xA;cp &amp;lt;- chatter.plot(&#34;Plot a scatterplot with x axis A and y axis B.&#34;)&#xA;&#xA;# View the plot&#xA;cp$plot&#xA;&#xA;# View the code&#xA;cp$command&#xA;&#xA;# Make chatter run the plot code. This saves time if you are just&#xA;# trying it, but will not save the command returned by the chatter.&#xA;chatter.plot(&#34;Plot a scatterplot with x axis A and y axis B.&#34;, run=TRUE)&#xA;&#xA;&#xA;# Alternatively, just do both at the same time!&#xA;cp &amp;lt;- chatter.plot(&#34;Plot a scatterplot with x axis A and y axis B.&#34;, run=TRUE)&#xA;# Plot is also displayed, as well as saved to cp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# Create a test data frame&#xA;library(tidyverse)&#xA;rt &amp;lt;- rnorm(1000, mean=700, sd=100) # Generate RT data&#xA;df &amp;lt;- tibble(RT = rt, group = rep(c(&#34;low&#34;, &#34;high&#34;), each=500))&#xA;&#xA;# Feed the data frame information to the chat session&#xA;chatter.feed(&#34;I have a dataframe df&#34;)&#xA;&#xA;# Use the chatter.plot function to create a histogram&#xA;chatter.plot(&#34;plot histogram of rt using ggplot with df&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This package uses OpenAI&#39;s ChatGPT model, which is an implementation of the GPT-3 architecture. Thank you to OpenAI for making this technology available to the public. Special thanks to ChatGPT for helping me write this file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Chishio318/Peanuts-Data-Project</title>
    <updated>2022-12-08T01:40:30Z</updated>
    <id>tag:github.com,2022-12-08:/Chishio318/Peanuts-Data-Project</id>
    <link href="https://github.com/Chishio318/Peanuts-Data-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Peanuts Data Project&lt;/h1&gt; &#xA;&lt;h3&gt;1. Objective&lt;/h3&gt; &#xA;&lt;p&gt;このプロジェクトは、朝ごはんが成績とどのような関係を持っているかを、Peanutsの登場キャラクターのデータを用いて分析する。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;好物であるパンケーキを朝ごはんに食べることは、よい成績と相関があるか&lt;/li&gt; &#xA; &lt;li&gt;アレルギーのもとになる&#34;dog flake&#34;を朝ごはんに食べることは、悪い成績と関連しているか&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Chishio318/Peanuts-Data-Project/master/00_cover/images/dogflakes.jpg&#34; alt=&#34;drawing&#34; width=&#34;300&#34;&gt; &#xA;&lt;h3&gt;2. Outputs&lt;/h3&gt; &#xA;&lt;p&gt;このプロジェクトの分析結果は、この&lt;a href=&#34;https://raw.githubusercontent.com/Chishio318/Peanuts-Data-Project/master/05_report/draft/pdf/Peanuts_Data_Project.pdf&#34;&gt;報告書&lt;/a&gt;に説明されている。&lt;/p&gt; &#xA;&lt;h3&gt;3. Inputs&lt;/h3&gt; &#xA;&lt;p&gt;このプロジェクトは、以下の３つのデータセットを用いている。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chishio318/Peanuts-Data-Project/tree/master/02_raw/breakfast/docs/readme.md&#34;&gt;breakfast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chishio318/Peanuts-Data-Project/tree/master/02_raw/test_score/docs/readme.md&#34;&gt;test scores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chishio318/Peanuts-Data-Project/tree/master/02_raw/student_id/docs/readme.md&#34;&gt;student ID&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Process&lt;/h3&gt; &#xA;&lt;p&gt;全体を統合する&lt;code&gt;R script&lt;/code&gt;は、&lt;a href=&#34;https://github.com/Chishio318/Peanuts-Data-Project/raw/master/01_admin/00_master&#34;&gt;master&lt;/a&gt;フォルダーの&lt;code&gt;admin.R&lt;/code&gt;に整理されている。こちらを実行することで、データ分析を再現できる。&lt;/p&gt; &#xA;&lt;h3&gt;5. Details&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Chishio318/Peanuts-Data-Project/wiki&#34;&gt;&lt;code&gt;Wiki&lt;/code&gt;&lt;/a&gt;にプログラムのステップを説明してある。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.overleaf.com/read/sybhtxktnrhj&#34;&gt;Overleaf&lt;/a&gt;のページから、文書を確認できる。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6. Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;このプログラムは、外部プログラムなどに依存せずに実行することができる。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>robjhyndman/forecast</title>
    <updated>2022-12-08T01:40:30Z</updated>
    <id>tag:github.com,2022-12-08:/robjhyndman/forecast</id>
    <link href="https://github.com/robjhyndman/forecast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;forecast package for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;forecast &lt;img src=&#34;https://raw.githubusercontent.com/robjhyndman/forecast/master/man/figures/logo.png&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/robjhyndman/forecast/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt; &lt;a href=&#34;https://cran.r-project.org/package=forecast&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/forecast&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_forecast.html&#34;&gt;&lt;img src=&#34;https://badges.cranchecks.info/worst/forecast.svg?sanitize=true&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#retired&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-retired-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: retired&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=forecast&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/forecast&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/licence-GPL--3-blue.svg?sanitize=true&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The R package &lt;em&gt;forecast&lt;/em&gt; provides methods and tools for displaying and analysing univariate time series forecasts including exponential smoothing via state space models and automatic ARIMA modelling.&lt;/p&gt; &#xA;&lt;p&gt;This package is now retired in favour of the &lt;a href=&#34;http://fable.tidyverts.org/&#34;&gt;fable&lt;/a&gt; package. The forecast package will remain in its current state, and maintained with bug fixes only. For the latest features and development, we recommend forecasting with the fable package.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the &lt;strong&gt;stable&lt;/strong&gt; version from &lt;a href=&#34;https://cran.r-project.org/package=forecast&#34;&gt;CRAN&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-s&#34;&gt;install.packages(&#39;forecast&#39;, dependencies = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the &lt;strong&gt;development&lt;/strong&gt; version from &lt;a href=&#34;https://github.com/robjhyndman/forecast&#34;&gt;Github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-s&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;robjhyndman/forecast&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-s&#34;&gt;library(forecast)&#xA;library(ggplot2)&#xA;&#xA;# ETS forecasts&#xA;USAccDeaths %&amp;gt;%&#xA;  ets() %&amp;gt;%&#xA;  forecast() %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;# Automatic ARIMA forecasts&#xA;WWWusage %&amp;gt;%&#xA;  auto.arima() %&amp;gt;%&#xA;  forecast(h=20) %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;# ARFIMA forecasts&#xA;library(fracdiff)&#xA;x &amp;lt;- fracdiff.sim( 100, ma=-.4, d=.3)$series&#xA;arfima(x) %&amp;gt;%&#xA;  forecast(h=30) %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;# Forecasting with STL&#xA;USAccDeaths %&amp;gt;%&#xA;  stlm(modelfunction=ar) %&amp;gt;%&#xA;  forecast(h=36) %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;AirPassengers %&amp;gt;%&#xA;  stlf(lambda=0) %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;USAccDeaths %&amp;gt;%&#xA;  stl(s.window=&#39;periodic&#39;) %&amp;gt;%&#xA;  forecast() %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;# TBATS forecasts&#xA;USAccDeaths %&amp;gt;%&#xA;  tbats() %&amp;gt;%&#xA;  forecast() %&amp;gt;%&#xA;  autoplot()&#xA;&#xA;taylor %&amp;gt;%&#xA;  tbats() %&amp;gt;%&#xA;  forecast() %&amp;gt;%&#xA;  autoplot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For more information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get started in forecasting with the online textbook at &lt;a href=&#34;http://OTexts.org/fpp2/&#34;&gt;http://OTexts.org/fpp2/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the Hyndsight blog at &lt;a href=&#34;https://robjhyndman.com/hyndsight/&#34;&gt;https://robjhyndman.com/hyndsight/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ask forecasting questions on &lt;a href=&#34;http://stats.stackexchange.com/tags/forecasting&#34;&gt;http://stats.stackexchange.com/tags/forecasting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ask R questions on &lt;a href=&#34;http://stackoverflow.com/tags/forecasting+r&#34;&gt;http://stackoverflow.com/tags/forecasting+r&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join the International Institute of Forecasters: &lt;a href=&#34;http://forecasters.org/&#34;&gt;http://forecasters.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This package is free and open source software, licensed under GPL-3.&lt;/p&gt;</summary>
  </entry>
</feed>