<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-07T01:45:16Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AweKevin/MLIIC</title>
    <updated>2023-07-07T01:45:16Z</updated>
    <id>tag:github.com,2023-07-07:/AweKevin/MLIIC</id>
    <link href="https://github.com/AweKevin/MLIIC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Artificial intelligence learning landscape of triple-negative breast cancer uncovers new opportunities for enhancing outcomes and immunotherapy responses&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MLIIC&lt;/h1&gt; &#xA;&lt;p&gt;Artificial intelligence learning landscape of triple-negative breast cancer uncovers new opportunities for enhancing outcomes and immunotherapy responses&lt;/p&gt; &#xA;&lt;h2&gt;MLIIC signature construction&lt;/h2&gt; &#xA;&lt;p&gt;A MLIIC signature was determined by a comprehensive analysis of purified immune cells, TNBC cell lines, and TNBC solid tumor tissues using an innovative computational framework according to a series of sequential ML algorithms.&lt;/p&gt; &#xA;&lt;p&gt;(1) The highest 15% expressed RNAs of each immune cell line were extracted as potential screening immune-related RNAs.&lt;/p&gt; &#xA;&lt;p&gt;(2) The tissue specificity index (TSI) was employed to determine the specificity of the above candidate RNA expression per immune cell. The TSI varied from 0 to 1, where when the value was 0, the RNA was defined as immune cell-general RNA, and when the value was 1, the RNA was defined as immune cell-specific RNA. The highly expressed RNAs in all immune cell types were authenticated as immune-related generic RNAs (igRNAs).&lt;/p&gt; &#xA;&lt;p&gt;(3) Differentially expressed igRNAs that showed a pattern of both upregulations in multiple immune cell lines and downregulation in TNBC cell lines were determined as IIC-RNAs.&lt;/p&gt; &#xA;&lt;p&gt;(4) ML algorithms for classification were further used for classification. This step aimed to filter worthwhile IIC-RNAs by extracting the intersected IIC-RNAs identified by ML algorithms for classification.&lt;/p&gt; &#xA;&lt;p&gt;(5) IIC-RNAs with prognostic potential were then screened in the TCGA TNBC dataset using univariate Cox regression analysis.&lt;/p&gt; &#xA;&lt;p&gt;(6) Next, ML algorithms for survival were subsequently applied to assess the significance of the prognostic IIC-RNAs and conduct the dimensionality reduction accordingly.&lt;/p&gt; &#xA;&lt;p&gt;(7) ML algorithms for scoring were used to determine the most reliable model.&lt;/p&gt; &#xA;&lt;p&gt;(8) The MLIIC signature was established according to the prognostic IIC-RNAs via performing the RSF algorithm.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison of published signatures&lt;/h2&gt; &#xA;&lt;p&gt;Due to the rapid advancements in omics technologies, numerous studies have been reported to construct and analyze signatures based on specific gene combinations with promising predictive efficacy. We then aimed to systematically compare these relevant signatures with our MLIIC signature in the past decade. After a detailed investigation, we included a total of 148 signatures in terms of RNA signatures. It should be noted that the MLIIC signature exhibited superior performance with respect to C-index in the TCGA TNBC, METABRIC, GSE96058, and GSE103091 datasets, compared to nearly all of the previous models.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cran/chemdeg</title>
    <updated>2023-07-07T01:45:16Z</updated>
    <id>tag:github.com,2023-07-07:/cran/chemdeg</id>
    <link href="https://github.com/cran/chemdeg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;❗ This is a read-only mirror of the CRAN R package repository. chemdeg — Analysis of Chemical Degradation Kinetic Data. Homepage: https://github.com/migliomatte/chemdeg, https://migliomatte.github.io/chemdeg/ Report bugs for this package: https://github.com/migliomatte/chemdeg/issues&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chemdeg&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/migliomatte/chemdeg/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/migliomatte/chemdeg/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;chemdeg is a package developed to assist food chemists in the objective selection of degradation kinetic models of foods and parameters estimation. The software implements a two-step method to this purpose. First, experimental data are analyzed in the so-called phase space which allows for the estimation of the order of the reaction; then the data are fitted with the appropriate standard kinetic model to estimate the reaction rate. The whole procedure is driven by rigorous statistical analyses of the results. The package also provides a routine to fit a non-standard kinetic degradation model named first-order multi-target model (FOMT).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of chemdeg like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# from CRAN&#xA;install.packages(&#34;chemdeg&#34;)&#xA;&#xA;# from GitHub&#xA;library(devtools)&#xA;devtools::install_github(&#34;migliomatte/chemdeg&#34;,&#xA;                          dependencies = TRUE, build_vignettes = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chemdeg)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Determination of the reaction order&lt;/h4&gt; &#xA;&lt;p&gt;The determination of the reaction order of a generic degradation kinetic model is often prone to subjectivity. By analyzing the phase space of the kinetic system it is possible to statistically determine the reaction order. This information can then be used to determine the reaction rate constant. In the package &lt;code&gt;chemdeg&lt;/code&gt; the whole analysis can be performed with the function &lt;code&gt;det_order()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;res &amp;lt;- det_order(ord1)&#xA;#&amp;gt; Reaction order estimated: 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;ord1&lt;/code&gt; is a built in function for 1&lt;sup&gt;st&lt;/sup&gt;-order kinetic model data.&lt;/p&gt; &#xA;&lt;p&gt;The function &lt;code&gt;results&lt;/code&gt; returns statistics and parameters estimates:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;results(res)&#xA;#&amp;gt; &#xA;#&amp;gt; Linear regression in the phase space: &#xA;#&amp;gt; log(dx/dt)= 0.97 log(x) + ( -0.46 )&#xA;#&amp;gt; &#xA;#&amp;gt; Estimate of n:&#xA;#&amp;gt; &#xA;#&amp;gt;     Estimate   Std. Error      t value     Pr(&amp;gt;|t|) &#xA;#&amp;gt; 9.701806e-01 4.235714e-03 2.290477e+02 1.835114e-07 &#xA;#&amp;gt; &#xA;#&amp;gt; Confidence interval of n: &#xA;#&amp;gt;     2.5 %    97.5 % &#xA;#&amp;gt; 0.9567007 0.9836605 &#xA;#&amp;gt; &#xA;#&amp;gt; Statistical analysis indicates that an order 1 degradation kineitc model is likely to describe the data.&#xA;#&amp;gt; The null hypothesis H0:&#xA;#&amp;gt; &#34;The process is described by an order 1kinetic model&#34;&#xA;#&amp;gt;  cannot be rejected.&#xA;#&amp;gt; &#xA;#&amp;gt; Non-linear least squares regression was performed with an order  1  kinetic model:&#xA;#&amp;gt;  &#xA;#&amp;gt;  Estimate of k: &#xA;#&amp;gt;    Estimate  Std. Error  t value     Pr(&amp;gt;|t|)&#xA;#&amp;gt; k 0.6878765 0.002626997 261.8489 1.541636e-11&#xA;#&amp;gt; In attesa che venga eseguita la profilazione...&#xA;#&amp;gt; Confidence interval of k: &#xA;#&amp;gt;      2.5%     97.5% &#xA;#&amp;gt; 0.6812276 0.6947116 &#xA;#&amp;gt; &#xA;#&amp;gt; Goodness-of-fit:&#xA;#&amp;gt;                  Value&#xA;#&amp;gt; AIC:        -11.933893&#xA;#&amp;gt; AICc:       -10.933893&#xA;#&amp;gt; BIC:        -12.350374&#xA;#&amp;gt; RMSE:         2.002812&#xA;#&amp;gt; Chi-sq_red:   5.379602&#xA;#&amp;gt; -----------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Plots of the data in both the phase space and the normal concentration vs time space along with their best fits with model equations can be accessed with &lt;code&gt;plot_ord()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_ord(res)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cran/chemdeg/main/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;100%&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cran/chemdeg/main/man/figures/README-unnamed-chunk-4-2.png&#34; width=&#34;100%&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;First-order multi-target model fitting&lt;/h4&gt; &#xA;&lt;p&gt;The following is an example of first-order multi-target (FOMT) model. The &lt;code&gt;FOMT()&lt;/code&gt; function can be used to perform the fit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fit_fomt &amp;lt;- FOMT(fomtdata)&#xA;summary(fit_fomt)&#xA;#&amp;gt; &#xA;#&amp;gt; Formula: y ~ 1 - (1 - exp(-k * t))^n&#xA;#&amp;gt; &#xA;#&amp;gt; Parameters:&#xA;#&amp;gt;   Estimate Std. Error t value Pr(&amp;gt;|t|)    &#xA;#&amp;gt; k 0.056836   0.008206   6.926 0.000449 ***&#xA;#&amp;gt; n 9.478174   3.926148   2.414 0.052280 .  &#xA;#&amp;gt; ---&#xA;#&amp;gt; Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1&#xA;#&amp;gt; &#xA;#&amp;gt; Residual standard error: 0.04243 on 6 degrees of freedom&#xA;#&amp;gt; &#xA;#&amp;gt; Number of iterations to convergence: 10 &#xA;#&amp;gt; Achieved convergence tolerance: 3.98e-06&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;fomtdata&lt;/code&gt; is an example data-frame provided with the package.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;FOMT()&lt;/code&gt; function does not converge, it is possible to use the &lt;code&gt;nls&lt;/code&gt; function from &lt;code&gt;stats&lt;/code&gt; package as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fit_fomt1 &amp;lt;- nls(y ~ FOMTm(t, k, n),&#xA;  data = list(y = fomtdata$tCQA_AA, t = fomtdata$time_h),&#xA;  start = list(n = 10, k = 0.05)&#xA;)&#xA;summary(fit_fomt1)&#xA;#&amp;gt; &#xA;#&amp;gt; Formula: y ~ FOMTm(t, k, n)&#xA;#&amp;gt; &#xA;#&amp;gt; Parameters:&#xA;#&amp;gt;   Estimate Std. Error t value Pr(&amp;gt;|t|)    &#xA;#&amp;gt; n 9.478163   3.926141   2.414 0.052280 .  &#xA;#&amp;gt; k 0.056836   0.008206   6.926 0.000449 ***&#xA;#&amp;gt; ---&#xA;#&amp;gt; Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1&#xA;#&amp;gt; &#xA;#&amp;gt; Residual standard error: 0.04243 on 6 degrees of freedom&#xA;#&amp;gt; &#xA;#&amp;gt; Number of iterations to convergence: 9 &#xA;#&amp;gt; Achieved convergence tolerance: 5.453e-06&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Goodness-of-fit statistics&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;chemdeg&lt;/code&gt; implements the chi-squared reduced statistics ($\chi^2_{red}=\chi^2/df$ where $df$ are the degrees of freedom) and the Akaike Information Criterion with correction for small sample size (AICc) as goodness of fit measures. These can be accessed with the functions &lt;code&gt;chiquad_red()&lt;/code&gt;and &lt;code&gt;AICC()&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;p&gt;To access the full table comprising the Bayesian Information Criterion (BIC), Akaike Information Criterion (AIC), AICc, Root Means Squared Error (RMSE) and $\chi^2_{red}$ (from both package &lt;code&gt;stats&lt;/code&gt; and &lt;code&gt;chemdeg&lt;/code&gt;) call the function &lt;code&gt;goodness_of_fit()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;goodness_of_fit(fit_fomt)&#xA;#&amp;gt;                    Value&#xA;#&amp;gt; AIC:        -24.15681095&#xA;#&amp;gt; AICc:       -21.75681095&#xA;#&amp;gt; BIC:        -23.91848633&#xA;#&amp;gt; RMSE:         0.04243006&#xA;#&amp;gt; Chi-sq_red:           NA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details see&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vignette(&#34;chemdeg_basics&#34;,&#34;chemdeg&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>PPBDS/r4ds.tutorials</title>
    <updated>2023-07-07T01:45:16Z</updated>
    <id>tag:github.com,2023-07-07:/PPBDS/r4ds.tutorials</id>
    <link href="https://github.com/PPBDS/r4ds.tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tutorials for &lt;em&gt;R for Data Science (2e)&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PPBDS/r4ds.tutorials/actions&#34;&gt;&lt;img src=&#34;https://github.com/PPBDS/r4ds.tutorials/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;About this package&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;r4ds.tutorials&lt;/strong&gt; provides tutorials for &lt;a href=&#34;https://r4ds.hadley.nz/&#34;&gt;&lt;em&gt;R for Data Science (2e)&lt;/em&gt;&lt;/a&gt; by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund. These tutorials assume that you have some experience working with the tools provided by the &lt;strong&gt;&lt;a href=&#34;https://ppbds.github.io/tutorial.helpers/&#34;&gt;tutorial.helpers&lt;/a&gt;&lt;/strong&gt; package. As long as you have completed the “Getting Started” tutorial from that package, you should be fine.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;PPBDS/r4ds.tutorials&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If R offers you the option to update some packages, you should do so. For packages that need compilation, feel free to answer “no”.&lt;/p&gt; &#xA;&lt;p&gt;Then &lt;strong&gt;restart your R session&lt;/strong&gt; or &lt;strong&gt;restart RStudio&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Accessing tutorials&lt;/h2&gt; &#xA;&lt;p&gt;In order to access the tutorials, start by loading the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(r4ds.tutorials)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can access the tutorials via the Tutorial tab in the top right (Environment) pane in RStudio.&lt;/p&gt; &#xA;&lt;p&gt;If either of the following is happening to you&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; Cannot find the Tutorial pane &lt;/li&gt; &#xA; &lt;li&gt; Cannot find any r4ds tutorials &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then &lt;strong&gt;remember to restart your R session&lt;/strong&gt; after installing the package.&lt;/p&gt; &#xA;&lt;p&gt;Because tutorials within the Tutorial pane are sorted in alphabetical order by the name of the package, the &lt;strong&gt;r4ds.tutorials&lt;/strong&gt; will be toward the bottom. If you don’t see any tutorials, try clicking the “Home” button – the little house symbol with the thin red roof in the upper right.&lt;/p&gt; &#xA;&lt;p&gt;In order to expand the window, you can drag and enlarge the tutorial pane inside RStudio. In order to open a pop-up window, click the “Show in New Window” icon next to the home icon.&lt;/p&gt; &#xA;&lt;p&gt;You may notice that the Jobs tab in the lower left will create output as the tutorial is starting up. This is because RStudio is running the code to create the tutorial. If you accidentally clicked “Start Tutorial” and would like to stop the job from running, you can click the back arrow in the Jobs tab, and then press the red stop sign icon. Your work will be saved between RStudio sessions, meaning that you can complete a tutorial in multiple sittings. Once you have completed a tutorial, follow the instructions on the tutorial &lt;code&gt;Submit&lt;/code&gt; page and, if you’re a student, submit your answers as instructed.&lt;/p&gt;</summary>
  </entry>
</feed>