<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-08T01:53:40Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>erblast/easyalluvial</title>
    <updated>2022-07-08T01:53:40Z</updated>
    <id>tag:github.com,2022-07-08:/erblast/easyalluvial</id>
    <link href="https://github.com/erblast/easyalluvial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;create alluvial plots with a single line of code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;easyalluvial &lt;a href=&#34;https://erblast.github.io/easyalluvial&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/easyalluvial/master/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/erblast/easyalluvial&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/erblast/easyalluvial?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/erblast/easyalluvial/actions&#34;&gt;&lt;img src=&#34;https://github.com/erblast/easyalluvial/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/erblast/easyalluvial?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/erblast/easyalluvial/master.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=easyalluvial&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/last-release/easyalluvial&#34; alt=&#34;CRAN last release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=easyalluvial&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/easyalluvial&#34; alt=&#34;CRAN total downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=easyalluvial&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/easyalluvial&#34; alt=&#34;CRAN monthly downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alluvial plots are similar to &lt;a href=&#34;https://en.wikipedia.org/wiki/Sankey_diagram&#34;&gt;sankey diagrams&lt;/a&gt; and visualise categorical data over multiple dimensions as flows. &lt;a href=&#34;https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0008694&#34;&gt;Rosval et. al.&amp;nbsp;2010&lt;/a&gt; Their graphical grammar however is a bit more complex then that of a regular x/y plots. The &lt;a href=&#34;http://corybrunson.github.io/ggalluvial/&#34;&gt;&lt;code&gt;ggalluvial&lt;/code&gt;&lt;/a&gt; package made a great job of translating that grammar into &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt; syntax and gives you many option to tweak the appearance of an alluvial plot, however there still remains a multi-layered complexity that makes it difficult to use ‘ggalluvial’ for explorative data analysis. ‘easyalluvial’ provides a simple interface to this package that allows you to produce a decent alluvial plot from any dataframe in either long or wide format from a single line of code while also handling continuous data. It is meant to allow a quick visualisation of entire dataframes with a focus on different colouring options that can make alluvial plots a great tool for data exploration.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;plot alluvial graph with a single line of code of a given dataframe&lt;/li&gt; &#xA; &lt;li&gt;support for wide and long data format &lt;a href=&#34;https://en.wikipedia.org/wiki/Wide_and_narrow_data&#34;&gt;(wiki, wide vs.&amp;nbsp;long/narrow data)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;automatically transforms numerical to categorical data&lt;/li&gt; &#xA; &lt;li&gt;helper functions for variable selection&lt;/li&gt; &#xA; &lt;li&gt;convenient parameters for coloring and ordering&lt;/li&gt; &#xA; &lt;li&gt;marginal histograms&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;model agnostic partial dependence and model response alluvial plots with 4 dimensions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://erblast.github.io/parcats/articles/parcats.html&#34;&gt;interactive plots with &lt;code&gt;easyalluvial&lt;/code&gt; and &lt;code&gt;parcats&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CRAN&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#39;easyalluvial&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development Version&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;erblast/easyalluvial&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://erblast.github.io/easyalluvial/&#34;&gt;pkgdown website&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://erblast.github.io/easyalluvial/articles/data_exploration.html&#34;&gt;Data Exploration with Alluvial Plots&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://erblast.github.io/easyalluvial/articles/model_response.html&#34;&gt;Visualising Model Response&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://erblast.github.io/easyalluvial/articles/parcats.html&#34;&gt;Interactive Plots with parcats&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressPackageStartupMessages( require(tidyverse) )&#xA;suppressPackageStartupMessages( require(easyalluvial) )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alluvial from data in wide format&lt;/h3&gt; &#xA;&lt;h4&gt;Sample Data&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;knitr::kable( head(mtcars2) )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;cyl&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;vs&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;am&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;gear&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;carb&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ids&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;160&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;110&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.620&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;16.46&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;V&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;manual&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mazda RX4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;160&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;110&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.875&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.02&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;V&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;manual&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mazda RX4 Wag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22.8&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;108&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;93&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.85&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.320&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.61&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;S&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;manual&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Datsun 710&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;21.4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;258&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;110&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.08&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.215&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.44&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;S&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;automatic&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hornet 4 Drive&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.7&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;360&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;175&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.15&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.440&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.02&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;V&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;automatic&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hornet Sportabout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;225&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;105&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.76&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.460&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;20.22&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;S&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;automatic&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Valiant&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Plot&lt;/h4&gt; &#xA;&lt;p&gt;Continuous Variables will be automatically binned as follows.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High, High (HH)&lt;/li&gt; &#xA; &lt;li&gt;Medium, High (MH)&lt;/li&gt; &#xA; &lt;li&gt;Medium (M)&lt;/li&gt; &#xA; &lt;li&gt;Medium, Low (ML)&lt;/li&gt; &#xA; &lt;li&gt;Low, Low (LL)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;alluvial_wide( data = mtcars2&#xA;                , max_variables = 5&#xA;                , fill_by = &#39;first_variable&#39; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/easyalluvial/master/man/figures/README-wide_plot-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alluvial from data in long format&lt;/h3&gt; &#xA;&lt;h4&gt;Sample Data&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;knitr::kable( head(quarterly_flights) )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;tailnum&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;carrier&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;origin&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;dest&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;qu&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;mean_arr_delay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N0EGMQ LGA BNA MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LGA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BNA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;on_time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N0EGMQ LGA BNA MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LGA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BNA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;on_time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N0EGMQ LGA BNA MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LGA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BNA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;on_time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N0EGMQ LGA BNA MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LGA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BNA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;on_time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N11150 EWR MCI EV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EWR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;late&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;N11150 EWR MCI EV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EWR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Q2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;late&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Plot&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;alluvial_long( quarterly_flights&#xA;               , key = qu&#xA;               , value = mean_arr_delay&#xA;               , id = tailnum&#xA;               , fill = carrier )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/easyalluvial/master/man/figures/README-plot_long-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Marginal Histograms&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;alluvial_wide( data = mtcars2&#xA;                , max_variables = 5&#xA;                , fill_by = &#39;first_variable&#39; ) %&amp;gt;%&#xA;  add_marginal_histograms(mtcars2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/easyalluvial/master/man/figures/README-unnamed-chunk-3-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Graphs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressPackageStartupMessages( require(parcats) )&#xA;&#xA;p = alluvial_wide(mtcars2, max_variables = 5)&#xA;&#xA;parcats(p, marginal_histograms = TRUE, data_input = mtcars2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/parcats/master/man/figures/demo1.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://erblast.github.io/parcats/articles/parcats.html&#34;&gt;Live Widget&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Partial Dependence Alluvial Plots&lt;/h3&gt; &#xA;&lt;p&gt;Alluvial plots are capable of displaying higher dimensional data on a plane, thus lend themselves to plot the response of a statistical model to changes in the input data across multiple dimensions. The practical limit here is 4 dimensions while conventional partial dependence plots are limited to 2 dimensions.&lt;/p&gt; &#xA;&lt;p&gt;Briefly the 4 variables with the highest feature importance for a given model are selected and 5 values spread over the variable range are selected for each. Then a grid of all possible combinations is created. All none-plotted variables are set to the values found in the first row of the training data set. Using this artificial data space model predictions are being generated. This process is then repeated for each row in the training data set and the overall model response is averaged in the end. Each of the possible combinations is plotted as a flow which is coloured by the bin corresponding to the average model response generated by that particular combination.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://christophm.github.io/interpretable-ml-book/&#34;&gt;more on partial dependence plots (ebook)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.datisticsblog.com/2019/04/visualising-model-response-with-easyalluvial/&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;easyalluvial&lt;/code&gt; contains wrappers for &lt;code&gt;parsnip&lt;/code&gt; and &lt;code&gt;caret&lt;/code&gt; models. Custom Wrappers for other models can easily be created.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df = select(mtcars2, -ids)&#xA;&#xA;m = parsnip::rand_forest(mode = &#34;regression&#34;) %&amp;gt;%&#xA;  parsnip::set_engine(&#34;randomForest&#34;) %&amp;gt;%&#xA;  parsnip::fit(disp ~ ., df)&#xA;&#xA;p = alluvial_model_response_parsnip(m, df, degree = 4, method = &#34;pdp&#34;)&#xA;#&amp;gt; Getting partial dependence plot preditions. This can take a while. See easyalluvial::get_pdp_predictions() `Details` on how to use multiprocessing&#xA;&#xA;p_grid = add_marginal_histograms(p, df, plot = F) %&amp;gt;%&#xA;  add_imp_plot(p, df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/easyalluvial/master/man/figures/README-unnamed-chunk-5-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Partial Dependence Plot&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parcats(p, marginal_histograms = TRUE, imp = TRUE, data_input = df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/erblast/parcats/master/man/figures/demo2.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://erblast.github.io/parcats/articles/parcats.html&#34;&gt;Live Widget&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ClinicoPath {jamovi} Module&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sbalci/ClinicoPathJamoviModule&#34;&gt;ClinicoPath jamovi Module&lt;/a&gt; (thanks to Serdar Balci) adds &lt;code&gt;easyalluvial&lt;/code&gt; plots to &lt;code&gt;jamovi&lt;/code&gt;a spreadsheet interface for doing statistics with &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Similar Packages&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/corybrunson/ggalluvial/&#34;&gt;&lt;code&gt;ggalluvial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mbojan/alluvial&#34;&gt;&lt;code&gt;alluvial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/christophergandrud/networkD3&#34;&gt;&lt;code&gt;networkD3&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davidsjoberg/ggbump&#34;&gt;&lt;code&gt;ggbump&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>