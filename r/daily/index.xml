<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-23T01:50:40Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ropensci/rtweet</title>
    <updated>2022-06-23T01:50:40Z</updated>
    <id>tag:github.com,2022-06-23:/ropensci/rtweet</id>
    <link href="https://github.com/ropensci/rtweet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê¶ R client for interacting with Twitter&#39;s [stream and REST] APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rtweet &lt;img src=&#34;https://raw.githubusercontent.com/ropensci/rtweet/master/man/figures/logo.png&#34; width=&#34;160px&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ropensci/rtweet/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci/rtweet/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=rtweet&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/rtweet&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ropensci/rtweet?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ropensci/rtweet/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/rtweet&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/64161359&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/64161359.svg?sanitize=true&#34; alt=&#34;ZENODO&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ropensci/software-review/issues/302&#34;&gt;&lt;img src=&#34;https://badges.ropensci.org/302_status.svg?sanitize=true&#34; alt=&#34;rOpenSci&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.21105/joss.01829&#34;&gt;&lt;img src=&#34;https://joss.theoj.org/papers/10.21105/joss.01829/status.svg?sanitize=true&#34; alt=&#34;JOSS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Use twitter from R. Get started by reading &lt;code&gt;vignette(&#34;rtweet&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get the current released version from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;rtweet&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the development version of rtweet from GitHub with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;rtweet&#34;, repos = &#39;https://ropensci.r-universe.dev&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;All users must be authenticated to interact with Twitter‚Äôs APIs. The easiest way to authenticate is to use your personal twitter account - this will happen automatically (via a browser popup) the first time you use an rtweet function. See &lt;code&gt;auth_setup_default()&lt;/code&gt; for details. Using your personal account is fine for casual use, but if you are trying to collect a lot of data it‚Äôs a good idea to authentication with your own Twitter ‚Äúapp‚Äù. See &lt;code&gt;vignette(&#34;auth&#34;, package = &#34;rtweet&#34;)&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(rtweet)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;rtweet should be used in strict accordance with Twitter‚Äôs &lt;a href=&#34;https://developer.twitter.com/en/developer-terms/more-on-restricted-use-cases&#34;&gt;developer terms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Search tweets or users&lt;/h3&gt; &#xA;&lt;p&gt;Search for up to 1000 tweets containing #rstats, the common hashtag used to refer to the R language, excluding retweets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rt &amp;lt;- search_tweets(&#34;#rstats&#34;, n = 1000, include_rts = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Twitter rate limits cap the number of search results returned to 18,000 every 15 minutes. To request more than that, set &lt;code&gt;retryonratelimit = TRUE&lt;/code&gt; and rtweet will wait for rate limit resets for you.&lt;/p&gt; &#xA;&lt;p&gt;Search for 200 users with the #rstats in their profile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;useRs &amp;lt;- search_users(&#34;#rstats&#34;, n = 200)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stream tweets&lt;/h3&gt; &#xA;&lt;p&gt;Randomly sample (approximately 1%) from the live stream of all tweets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;random_stream &amp;lt;- stream_tweets(&#34;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stream all geo-located tweets from London for 60 seconds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;stream_london &amp;lt;- stream_tweets(location = lookup_coords(&#34;london&#34;), timeout = 60)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get friends and followers&lt;/h3&gt; &#xA;&lt;p&gt;Get all accounts followed by a user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## get user IDs of accounts followed by R Foundation&#xA;R_Foundation_fds &amp;lt;- get_friends(&#34;_R_Foundation&#34;)&#xA;&#xA;## lookup data on those accounts&#xA;R_Foundation_fds_data &amp;lt;- lookup_users(R_Foundation_fds$to_id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get all accounts following a user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## get user IDs of accounts following R Foundation&#xA;R_Foundation_flw &amp;lt;- get_followers(&#34;_R_Foundation&#34;, n = 100)&#xA;R_Foundation_flw_data &amp;lt;- lookup_users(R_Foundation_flw$from_id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want &lt;em&gt;all&lt;/em&gt; followers, you‚Äôll need you‚Äôll need to set &lt;code&gt;n = Inf&lt;/code&gt; and &lt;code&gt;retryonratelimit = TRUE&lt;/code&gt; but be warned that this might take a &lt;em&gt;long&lt;/em&gt; time.&lt;/p&gt; &#xA;&lt;h3&gt;Get timelines&lt;/h3&gt; &#xA;&lt;p&gt;Get the most recent 200 tweets from R Foundation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## get user IDs of accounts followed by R Foundation&#xA;tmls &amp;lt;- get_timeline(&#34;_R_Foundation&#34;, n = 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get favorites&lt;/h3&gt; &#xA;&lt;p&gt;Get the 10 most recently favorited statuses by R Foundation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;favs &amp;lt;- get_favorites(&#34;_R_Foundation&#34;, n = 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Communicating with Twitter‚Äôs APIs relies on an internet connection, which can sometimes be inconsistent.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, or needs an example or want to share a &lt;a href=&#34;https://ropensci.org/usecases/&#34;&gt;use case&lt;/a&gt;, you can post them on &lt;a href=&#34;https://discuss.ropensci.org/&#34;&gt;rOpenSci‚Äôs discuss&lt;/a&gt;. Were you can &lt;a href=&#34;https://discuss.ropensci.org/tags/c/usecases/10/rtweet&#34;&gt;browse uses of rtweet&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;p&gt;With that said, if you encounter an obvious bug for which there is not already an active &lt;a href=&#34;https://github.com/ropensci/rtweet/issues&#34;&gt;issue&lt;/a&gt;, please &lt;a href=&#34;https://github.com/ropensci/rtweet/issues/new&#34;&gt;create a new issue&lt;/a&gt; with all code used (preferably a reproducible example) on Github.&lt;/p&gt; &#xA;&lt;h1&gt;Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;Please note that this package is released with a &lt;a href=&#34;https://ropensci.org/code-of-conduct/&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-spatial/mapview</title>
    <updated>2022-06-23T01:50:40Z</updated>
    <id>tag:github.com,2022-06-23:/r-spatial/mapview</id>
    <link href="https://github.com/r-spatial/mapview" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Interactive viewing of spatial data in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mapview&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-spatial/mapview/actions&#34;&gt;&lt;img src=&#34;https://github.com/r-spatial/mapview/workflows/tic/badge.svg?branch=master&#34; alt=&#34;tic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_mapview.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/mapview&#34; alt=&#34;cran checks&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/mapview&#34; alt=&#34;monthly&#34;&gt; &lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/mapview&#34; alt=&#34;total&#34;&gt; &lt;a href=&#34;https://cran.r-project.org/package=mapview&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/mapview?color=009999&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL%20%28%3E=%203%29-lightgrey.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/r-spatial/mapview?branch=develop&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/r-spatial/mapview/develop.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=mapview&#34;&gt;&lt;img src=&#34;https://tinyverse.netlify.com/badge/mapview&#34; alt=&#34;status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h3&gt;Interactive viewing of spatial data in R&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tim-salabim/mvl&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://github.com/tim-salabim/mvl/raw/cstriestohelp/imagery/animated/box_anim.gif?raw=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;mapview&lt;/strong&gt; provides functions to very quickly and conveniently create interactive visualisations of spatial data. It‚Äôs main goal is to fill the gap of quick (not presentation grade) interactive plotting to examine and visually investigate both aspects of spatial data, the geometries and their attributes. It can also be considered a data-driven API for the &lt;a href=&#34;https://cran.r-project.org/package=leaflet&#34;&gt;&lt;strong&gt;leaflet&lt;/strong&gt;&lt;/a&gt; package as it will automatically render correct map types, depending on the type of the data (points, lines, polygons, raster). In addition, it makes use of some advanced rendering functionality that will enable viewing of much larger data than is possible with &lt;strong&gt;leaflet&lt;/strong&gt;. Furthermore, if you‚Äôre a fan of &lt;a href=&#34;https://cran.r-project.org/package=mapdeck&#34;&gt;&lt;strong&gt;mapdeck&lt;/strong&gt;&lt;/a&gt; (which you should!), you can choose to use it as the rendering platform instead of &lt;strong&gt;leaflet&lt;/strong&gt; by setting &lt;code&gt;mapviewOptions(platform = &#34;mapdeck&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The main user relevant functions are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mapview&lt;/code&gt; - view (multiple) spatial objects on a set of background maps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;viewExtent&lt;/code&gt; - view extent / bounding box of spatial objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;viewRGB&lt;/code&gt; - view RGB true- or false-color images of raster objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mapshot&lt;/code&gt; - easily save maps (including leaflet maps) as &lt;code&gt;html&lt;/code&gt; and/or &lt;code&gt;png&lt;/code&gt; (or other image formats)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Functions that have been deprecated/deleted recently:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;addHomeButton&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addLogo&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addFeatures&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addMouseCoordinates&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addExtent&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addImageQuery&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafem&#34;&gt;leafem&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latticeView&lt;/code&gt; &amp;amp; &lt;code&gt;sync&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafsync&#34;&gt;leafsync&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;slideView&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=slideview&#34;&gt;slideview&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cubeView&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=cubeview&#34;&gt;cubeview&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;plainview&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=plainview&#34;&gt;plainview&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;popupTable&lt;/code&gt;, &lt;code&gt;popupGraph&lt;/code&gt; &amp;amp; &lt;code&gt;popupImage&lt;/code&gt; - deprecated, use package &lt;a href=&#34;https://CRAN.R-project.org/package=leafpop&#34;&gt;leafpop&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addLargeFeatures&lt;/code&gt; - use &lt;a href=&#34;https://CRAN.R-project.org/package=leafgl&#34;&gt;leafgl&lt;/a&gt;&lt;code&gt;::addGL*&lt;/code&gt; functions instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Objects of the following spatial classes are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=sf&#34;&gt;sf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=raster&#34;&gt;raster&lt;/a&gt; (Layer, Stack, Brick and SpatialPixels* / SpatialGridDataFrame)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=stars&#34;&gt;stars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=sp&#34;&gt;sp&lt;/a&gt; (Points, Polygons, Lines and their DataFrame version)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/package=satellite&#34;&gt;satellite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;For CRAN release version of &lt;strong&gt;mapview&lt;/strong&gt; use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;mapview&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the development version you can install the &lt;a href=&#34;https://cran.r-project.org/package=remotes&#34;&gt;remotes&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; As of version 2.9.1 development will happen on the &lt;code&gt;master&lt;/code&gt; branch. Please consider the &lt;code&gt;develop&lt;/code&gt; branch obsolete.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;r-spatial/mapview&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The most basic call&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mapview(breweries)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will produce a web map visualisation of the breweries data with the following components:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/r-spatial/mapview/master/man/figures/basic_small.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Please file bug reports and feature requests at &lt;a href=&#34;https://github.com/r-spatial/mapview/issues&#34;&gt;https://github.com/r-spatial/mapview/issues&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coolbutuseless/isocubes</title>
    <updated>2022-06-23T01:50:40Z</updated>
    <id>tag:github.com,2022-06-23:/coolbutuseless/isocubes</id>
    <link href="https://github.com/coolbutuseless/isocubes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;isocubes &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;230/&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/cool-useless-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/coolbutuseless/isocubes/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/coolbutuseless/isocubes/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;code&gt;{isocubes}&lt;/code&gt; is an isometric rendering canvas with cubes as the only graphics primitive.&lt;/p&gt; &#xA;&lt;h2&gt;What‚Äôs in the box&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;isocubesGrob()&lt;/code&gt; to convert 3d integer coordinates into a grob for plotting&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coord_heightmap()&lt;/code&gt; to create coordinates for a heightmap from a matrix and (optional) colour information&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coord_sphere()&lt;/code&gt; to create coordinates for all isocubes within a sphere&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Coordinate system&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The size and positioning of the isometric coordinate system is controlled by arguments &lt;code&gt;isocubesGrob(coords, max_y, xo, yo)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xo&lt;/code&gt; and &lt;code&gt;yo&lt;/code&gt; give the positition of the origin of the isometric view within the graphics window. These are fractional values which will be interpreted as &lt;code&gt;snpc&lt;/code&gt; units i.e.&amp;nbsp;fractional width and height of the graphics devices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;max_y&lt;/code&gt; is the main control for cube sizing. This value is the number of cubes that can be stacked to fill the vertical extents of the window. Higher values of &lt;code&gt;max_y&lt;/code&gt; means smaller cubes.&lt;/li&gt; &#xA; &lt;li&gt;The isometric view is a left-handed coordinate system with &lt;code&gt;y&lt;/code&gt; vertical.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;(x, y, z)&lt;/code&gt; coordinates given to position the cubes will be rounded to the nearest integer. There is no fractional positioning of cubes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/coordinate-system.png&#34;&gt; &#xA;&lt;h4&gt;Why isometric?&lt;/h4&gt; &#xA;&lt;p&gt;Isometric cubes have advantages over other axonometric and perspective coordinate systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No perspective correction needed.&lt;/li&gt; &#xA; &lt;li&gt;No foreshortening along different dimensions.&lt;/li&gt; &#xA; &lt;li&gt;The cube is just a hexagon with each third shaded differently, and the polygons for each face are trivial to calculate and draw.&lt;/li&gt; &#xA; &lt;li&gt;The rules for occlusion are simple i.e.&amp;nbsp;it‚Äôs easy to cull cubes from the drawing process if they‚Äôre hidden behind other cubes and won‚Äôt be seen. Fewer cubes mean a faster rendering time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install from &lt;a href=&#34;https://github.com/coolbutuseless/isocubes&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.package(&#39;remotes&#39;)&#xA;remotes::install_github(&#39;coolbutuseless/isocubes&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚ÄòR‚Äô in isocubes&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(grid)&#xA;library(purrr)&#xA;library(isocubes)&#xA;&#xA;x &amp;lt;- c(9, 8, 7, 6, 5, 4, 3, 2, 10, 9, 3, 2, 11, 10, 3, 2, 11, 10, &#xA;3, 2, 11, 10, 3, 2, 11, 10, 3, 2, 10, 9, 3, 2, 9, 8, 7, 6, 5, &#xA;4, 3, 2, 10, 9, 3, 2, 11, 10, 3, 2, 11, 10, 3, 2, 11, 10, 3, &#xA;2, 11, 10, 3, 2, 11, 10, 3, 2, 11, 10, 3, 2)&#xA;&#xA;y &amp;lt;- c(15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 13, 13, 13, &#xA;13, 12, 12, 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9, 9, 9, &#xA;9, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, &#xA;4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1)&#xA;&#xA;coords &amp;lt;- data.frame(x = x, y = y, z = 0)&#xA;cubes  &amp;lt;- isocubesGrob(coords, max_y = 25)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-example-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Colour the cubes with rainbow&#xA;cubes &amp;lt;- isocubesGrob(coords, fill = rainbow(nrow(coords)), max_y = 25)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-example-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# VaporWave palette&#xA;cubes &amp;lt;- isocubesGrob(coords, fill = &#39;#ff71ce&#39;, fill_left = &#39;#01cdfe&#39;,&#xA;                      fill_right = &#39;#05ffa1&#39;, max_y = 25)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-example-3.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Nightmare palette&#xA;cubes &amp;lt;- isocubesGrob(coords, &#xA;                      fill = rainbow(nrow(coords)), &#xA;                      fill_left = &#39;hotpink&#39;,&#xA;                      fill_right = viridisLite::inferno(nrow(coords)), &#xA;                      max_y = 25, col = NA)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-example-4.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Calculate isocubes within a sphere&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(grid)&#xA;library(isocubes)&#xA;&#xA;N      &amp;lt;- 13&#xA;coords &amp;lt;- expand.grid(x=seq(-N, N), y = seq(-N, N), z = seq(-N, N))&#xA;keep   &amp;lt;- with(coords, sqrt(x * x + y * y + z * z)) &amp;lt; N&#xA;coords &amp;lt;- coords[keep,]&#xA;&#xA;cubes &amp;lt;- isocubesGrob(coords, max_y = 35, xo = 0.5, yo = 0.5)&#xA;grid.newpage()&#xA;grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-sphere-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Random rainbow volume of isocubes&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(isocubes)&#xA;&#xA;N      &amp;lt;- 15&#xA;coords &amp;lt;- expand.grid(x=0:N, y=0:N, z=0:N)&#xA;coords &amp;lt;- coords[sample(nrow(coords), 0.66 * nrow(coords)),]&#xA;fill   &amp;lt;- rgb(red = 1 - coords$x / N, coords$y /N, 1 - coords$z/N, maxColorValue = 1)&#xA;&#xA;cubes &amp;lt;- isocubesGrob(coords, fill, max_y = 40, occlusion_depth = 4)&#xA;grid.newpage()&#xA;grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-rainbow-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Heightmap as isocubes&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# Prepare a matrix of values&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;mat &amp;lt;- volcano&#xA;&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# An optional matrix of colours&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;val &amp;lt;- as.vector(mat)&#xA;val &amp;lt;- round(255 * (val - min(val)) / diff(range(val)))&#xA;col &amp;lt;- viridisLite::viridis(256)[val + 1L]&#xA;dim(col) &amp;lt;- dim(mat) &#xA;&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# Find the (integer) coordiinates of the cubes in the heightmap&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;coords &amp;lt;- coords_heightmap(mat - min(mat), col = col, scale = 0.3)&#xA;&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# Convert the coordinates into a grob&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;cubes  &amp;lt;- isocubesGrob(coords, max_y = 100, fill = coords$col, xo = 0.8)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-unnamed-chunk-2-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Image as isocubes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Treat image to a heightmap&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# Load image and convert to a matrix of heights&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;img &amp;lt;- png::readPNG(&#34;man/figures/Rlogo-small-blur.png&#34;)&#xA;ht        &amp;lt;- round( 10 * (1 - img[,,2]) ) # Use Green channel intensity as height&#xA;ht[,1]    &amp;lt;- 0 # image editing to remove some artefacts&#xA;&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# A matrix of colours extracted from the image&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;col       &amp;lt;- rgb(img[,,1], img[,,2], img[,,3])&#xA;dim(col)  &amp;lt;- dim(ht) &#xA;&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;# convert to cubes and draw&#xA;#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;coords &amp;lt;- coords_heightmap(ht, col = col, ground = &#39;xy&#39;)&#xA;cubes  &amp;lt;- isocubesGrob(coords, max_y = 130, fill = coords$col, col = NA)&#xA;grid.newpage(); grid.draw(cubes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/isocubes/main/man/figures/README-unnamed-chunk-3-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Technical Bits&lt;/h2&gt; &#xA;&lt;h4&gt;Cube occlusion&lt;/h4&gt; &#xA;&lt;p&gt;In an isometric view, a cube at position &lt;code&gt;(x, y, z)&lt;/code&gt; will block the view of any cube at &lt;code&gt;(x + n, y - n, z + n)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since cube positions must be integer values, hashes of cube positions are calculated as &lt;code&gt;x + (y * 256) + (z * 256^2)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For each initial cube position, calculate the hash or coordinates of several occluded cubes. Then remove any initial cubes which match the occluded cube hashes.&lt;/p&gt; &#xA;&lt;h4&gt;Cube sort&lt;/h4&gt; &#xA;&lt;p&gt;Arrange cubes by &lt;code&gt;-x&lt;/code&gt;, &lt;code&gt;-z&lt;/code&gt; then &lt;code&gt;y&lt;/code&gt; to ensure cubes are drawn in the correct ordering such that cubes in front are drawn over the top of cubes which are behind.&lt;/p&gt; &#xA;&lt;h4&gt;grob&lt;/h4&gt; &#xA;&lt;p&gt;All the faces of all the cubes are then calculated as polygons - each with 4 vertices.&lt;/p&gt; &#xA;&lt;p&gt;The data for all polygons is then concatenated into a single &lt;code&gt;polygonGrob()&lt;/code&gt; call with an appropiate vector for &lt;code&gt;id.lengths&lt;/code&gt; to split the data.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R Core for developing and maintaining the language.&lt;/li&gt; &#xA; &lt;li&gt;CRAN maintainers, for patiently shepherding packages onto CRAN and maintaining the repository&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>