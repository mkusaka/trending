<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-05T01:39:15Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>garrettgman/shiny-styling-demo</title>
    <updated>2024-02-05T01:39:15Z</updated>
    <id>tag:github.com,2024-02-05:/garrettgman/shiny-styling-demo</id>
    <link href="https://github.com/garrettgman/shiny-styling-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository accompanies a demo on how to style a basic Shiny app.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shiny-styling-demo&lt;/h1&gt; &#xA;&lt;p&gt;This repository accompanies a demo on how to style a basic Shiny app.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/rvest</title>
    <updated>2024-02-05T01:39:15Z</updated>
    <id>tag:github.com,2024-02-05:/tidyverse/rvest</id>
    <link href="https://github.com/tidyverse/rvest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple web scraping for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rvest &lt;a href=&#34;https://rvest.tidyverse.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/rvest/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;138&#34; alt=&#34;rvest website&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=rvest&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/rvest&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/rvest/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/rvest/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/rvest?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/rvest/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;rvest helps you scrape (or harvest) data from web pages. It is designed to work with &lt;a href=&#34;https://github.com/tidyverse/magrittr&#34;&gt;magrittr&lt;/a&gt; to make it easy to express common web scraping tasks, inspired by libraries like &lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/&#34;&gt;beautiful soup&lt;/a&gt; and &lt;a href=&#34;http://robobrowser.readthedocs.io/en/latest/readme.html&#34;&gt;RoboBrowser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you’re scraping multiple pages, I highly recommend using rvest in concert with &lt;a href=&#34;https://dmi3kno.github.io/polite/&#34;&gt;polite&lt;/a&gt;. The polite package ensures that you’re respecting the &lt;a href=&#34;https://en.wikipedia.org/wiki/Robots_exclusion_standard&#34;&gt;robots.txt&lt;/a&gt; and not hammering the site with too many requests.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get rvest is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just rvest:&#xA;install.packages(&#34;rvest&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(rvest)&#xA;&#xA;# Start by reading a HTML page with read_html():&#xA;starwars &amp;lt;- read_html(&#34;https://rvest.tidyverse.org/articles/starwars.html&#34;)&#xA;&#xA;# Then find elements that match a css selector or XPath expression&#xA;# using html_elements(). In this example, each &amp;lt;section&amp;gt; corresponds&#xA;# to a different film&#xA;films &amp;lt;- starwars %&amp;gt;% html_elements(&#34;section&#34;)&#xA;films&#xA;#&amp;gt; {xml_nodeset (7)}&#xA;#&amp;gt; [1] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;1&#34;&amp;gt;\nThe Phantom Menace\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 1999 ...&#xA;#&amp;gt; [2] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;2&#34;&amp;gt;\nAttack of the Clones\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 20 ...&#xA;#&amp;gt; [3] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;3&#34;&amp;gt;\nRevenge of the Sith\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 200 ...&#xA;#&amp;gt; [4] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;4&#34;&amp;gt;\nA New Hope\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 1977-05-25\n ...&#xA;#&amp;gt; [5] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;5&#34;&amp;gt;\nThe Empire Strikes Back\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: ...&#xA;#&amp;gt; [6] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;6&#34;&amp;gt;\nReturn of the Jedi\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 1983 ...&#xA;#&amp;gt; [7] &amp;lt;section&amp;gt;&amp;lt;h2 data-id=&#34;7&#34;&amp;gt;\nThe Force Awakens\n&amp;lt;/h2&amp;gt;\n&amp;lt;p&amp;gt;\nReleased: 2015- ...&#xA;&#xA;# Then use html_element() to extract one element per film. Here&#xA;# we the title is given by the text inside &amp;lt;h2&amp;gt;&#xA;title &amp;lt;- films %&amp;gt;% &#xA;  html_element(&#34;h2&#34;) %&amp;gt;% &#xA;  html_text2()&#xA;title&#xA;#&amp;gt; [1] &#34;The Phantom Menace&#34;      &#34;Attack of the Clones&#34;   &#xA;#&amp;gt; [3] &#34;Revenge of the Sith&#34;     &#34;A New Hope&#34;             &#xA;#&amp;gt; [5] &#34;The Empire Strikes Back&#34; &#34;Return of the Jedi&#34;     &#xA;#&amp;gt; [7] &#34;The Force Awakens&#34;&#xA;&#xA;# Or use html_attr() to get data out of attributes. html_attr() always&#xA;# returns a string so we convert it to an integer using a readr function&#xA;episode &amp;lt;- films %&amp;gt;% &#xA;  html_element(&#34;h2&#34;) %&amp;gt;% &#xA;  html_attr(&#34;data-id&#34;) %&amp;gt;% &#xA;  readr::parse_integer()&#xA;episode&#xA;#&amp;gt; [1] 1 2 3 4 5 6 7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the page contains tabular data you can convert it directly to a data frame with &lt;code&gt;html_table()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;html &amp;lt;- read_html(&#34;https://en.wikipedia.org/w/index.php?title=The_Lego_Movie&amp;amp;oldid=998422565&#34;)&#xA;&#xA;html %&amp;gt;% &#xA;  html_element(&#34;.tracklist&#34;) %&amp;gt;% &#xA;  html_table()&#xA;#&amp;gt; # A tibble: 29 × 4&#xA;#&amp;gt;    No.   Title                       `Performer(s)`                       Length&#xA;#&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;                       &amp;lt;chr&amp;gt;                                &amp;lt;chr&amp;gt; &#xA;#&amp;gt;  1 1.    &#34;\&#34;Everything Is Awesome\&#34;&#34; &#34;Tegan and Sara featuring The Lonel… 2:43  &#xA;#&amp;gt;  2 2.    &#34;\&#34;Prologue\&#34;&#34;              &#34;&#34;                                   2:28  &#xA;#&amp;gt;  3 3.    &#34;\&#34;Emmett&#39;s Morning\&#34;&#34;      &#34;&#34;                                   2:00  &#xA;#&amp;gt;  4 4.    &#34;\&#34;Emmett Falls in Love\&#34;&#34;  &#34;&#34;                                   1:11  &#xA;#&amp;gt;  5 5.    &#34;\&#34;Escape\&#34;&#34;                &#34;&#34;                                   3:26  &#xA;#&amp;gt;  6 6.    &#34;\&#34;Into the Old West\&#34;&#34;     &#34;&#34;                                   1:00  &#xA;#&amp;gt;  7 7.    &#34;\&#34;Wyldstyle Explains\&#34;&#34;    &#34;&#34;                                   1:21  &#xA;#&amp;gt;  8 8.    &#34;\&#34;Emmett&#39;s Mind\&#34;&#34;         &#34;&#34;                                   2:17  &#xA;#&amp;gt;  9 9.    &#34;\&#34;The Transformation\&#34;&#34;    &#34;&#34;                                   1:46  &#xA;#&amp;gt; 10 10.   &#34;\&#34;Saloons and Wagons\&#34;&#34;    &#34;&#34;                                   3:38  &#xA;#&amp;gt; # ℹ 19 more rows&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>