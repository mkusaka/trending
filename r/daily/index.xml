<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-16T01:46:58Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>corybrunson/ggalluvial</title>
    <updated>2023-06-16T01:46:58Z</updated>
    <id>tag:github.com,2023-06-16:/corybrunson/ggalluvial</id>
    <link href="https://github.com/corybrunson/ggalluvial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ggplot2 extension for alluvial plots&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggalluvial&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/corybrunson/ggalluvial&#34;&gt;&lt;img src=&#34;https://travis-ci.org/corybrunson/ggalluvial.svg?branch=main&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggalluvial&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/ggalluvial&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggalluvial&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/ggalluvial&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.3836748&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.3836748.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.21105/joss.02017&#34;&gt;&lt;img src=&#34;https://joss.theoj.org/papers/10.21105/joss.02017/status.svg?sanitize=true&#34; alt=&#34;JOSS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://exts.ggplot2.tidyverse.org/&#34;&gt;&lt;strong&gt;ggplot2&lt;/strong&gt; extension&lt;/a&gt; for alluvial plots.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The alluvial plots implemented here can be used to visualize frequency distributions over time or frequency tables involving several categorical variables. The design is inspired by the &lt;a href=&#34;https://github.com/mbojan/alluvial&#34;&gt;&lt;strong&gt;alluvial&lt;/strong&gt;&lt;/a&gt; package, but the &lt;strong&gt;ggplot2&lt;/strong&gt; framework induced several conspicuous differences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;alluvial&lt;/strong&gt; understands a variety of inputs (vectors, lists, data frames), whereas &lt;strong&gt;ggalluvial&lt;/strong&gt; requires a single data frame;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;alluvial&lt;/strong&gt; uses each variable of these inputs as a dimension of the data, whereas &lt;strong&gt;ggalluvial&lt;/strong&gt; requires the user to specify the dimensions, either as separate aesthetics or as &lt;a href=&#34;https://tidyr.tidyverse.org/&#34;&gt;key-value pairs&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;alluvial&lt;/strong&gt; produces both the &lt;em&gt;alluvia&lt;/em&gt;, which link cohorts across multiple dimensions, and (what are here called) the &lt;em&gt;strata&lt;/em&gt;, which partition the data along each dimension, in a single function; whereas &lt;strong&gt;ggalluvial&lt;/strong&gt; relies on separate layers (stats and geoms) to produce strata, alluvia, and alluvial segments called &lt;em&gt;lodes&lt;/em&gt; and &lt;em&gt;flows&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, &lt;strong&gt;ggalluvial&lt;/strong&gt; arranges these layers vertically without gaps, so that the secondary plotting axis indicates the cumulative values of the strata at each dimension.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The latest stable release can be installed from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;ggalluvial&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/corybrunson/ggalluvial/tree/cran&#34;&gt;&lt;code&gt;cran&lt;/code&gt; branch&lt;/a&gt; will contain the version most recently submitted to &lt;a href=&#34;https://cran.r-project.org/package=ggalluvial&#34;&gt;CRAN&lt;/a&gt;. It is duplicated in the &lt;code&gt;master&lt;/code&gt; branch, from which source the &lt;a href=&#34;https://corybrunson.github.io/ggalluvial/&#34;&gt;website&lt;/a&gt; is built.&lt;/p&gt; &#xA;&lt;p&gt;The development version can be installed from the (default) &lt;code&gt;main&lt;/code&gt; branch on GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;corybrunson/ggalluvial@main&#34;, build_vignettes = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that, in order to build the vignettes, the imported packages &lt;strong&gt;alluvial&lt;/strong&gt;, &lt;strong&gt;ggfittext&lt;/strong&gt;, and &lt;strong&gt;ggrepel&lt;/strong&gt; must be installed. To skip this step, leave &lt;code&gt;build_vignettes&lt;/code&gt; unspecified or set it to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/corybrunson/ggalluvial/tree/optimization&#34;&gt;&lt;code&gt;optimization&lt;/code&gt; branch&lt;/a&gt; contains a development version with experimental functions to reduce the number or area of alluvial overlaps (see issue &lt;a href=&#34;https://github.com/corybrunson/ggalluvial/issues/6&#34;&gt;#6&lt;/a&gt;). Install it as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;corybrunson/ggalluvial&#34;, ref = &#34;optimization&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note, however, that this branch has not kept pace with the &lt;code&gt;main&lt;/code&gt; branch or with recent upgrades on CRAN.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;Here is how to generate an alluvial plot representation of the multi-dimensional categorical dataset of passengers on the Titanic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;titanic_wide &amp;lt;- data.frame(Titanic)&#xA;head(titanic_wide)&#xA;#&amp;gt;   Class    Sex   Age Survived Freq&#xA;#&amp;gt; 1   1st   Male Child       No    0&#xA;#&amp;gt; 2   2nd   Male Child       No    0&#xA;#&amp;gt; 3   3rd   Male Child       No   35&#xA;#&amp;gt; 4  Crew   Male Child       No    0&#xA;#&amp;gt; 5   1st Female Child       No    0&#xA;#&amp;gt; 6   2nd Female Child       No    0&#xA;ggplot(data = titanic_wide,&#xA;       aes(axis1 = Class, axis2 = Sex, axis3 = Age,&#xA;           y = Freq)) +&#xA;  scale_x_discrete(limits = c(&#34;Class&#34;, &#34;Sex&#34;, &#34;Age&#34;), expand = c(.2, .05)) +&#xA;  xlab(&#34;Demographic&#34;) +&#xA;  geom_alluvium(aes(fill = Survived)) +&#xA;  geom_stratum() +&#xA;  geom_text(stat = &#34;stratum&#34;, aes(label = after_stat(stratum))) +&#xA;  theme_minimal() +&#xA;  ggtitle(&#34;passengers on the maiden voyage of the Titanic&#34;,&#xA;          &#34;stratified by demographics and survival&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/corybrunson/ggalluvial/main/man/figures/README-unnamed-chunk-6-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;The data is in “wide” format, but &lt;strong&gt;ggalluvial&lt;/strong&gt; also recognizes data in “long” format and can convert between the two:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;titanic_long &amp;lt;- to_lodes_form(data.frame(Titanic),&#xA;                              key = &#34;Demographic&#34;,&#xA;                              axes = 1:3)&#xA;head(titanic_long)&#xA;#&amp;gt;   Survived Freq alluvium Demographic stratum&#xA;#&amp;gt; 1       No    0        1       Class     1st&#xA;#&amp;gt; 2       No    0        2       Class     2nd&#xA;#&amp;gt; 3       No   35        3       Class     3rd&#xA;#&amp;gt; 4       No    0        4       Class    Crew&#xA;#&amp;gt; 5       No    0        5       Class     1st&#xA;#&amp;gt; 6       No    0        6       Class     2nd&#xA;ggplot(data = titanic_long,&#xA;       aes(x = Demographic, stratum = stratum, alluvium = alluvium,&#xA;           y = Freq, label = stratum)) +&#xA;  geom_alluvium(aes(fill = Survived)) +&#xA;  geom_stratum() + geom_text(stat = &#34;stratum&#34;) +&#xA;  theme_minimal() +&#xA;  ggtitle(&#34;passengers on the maiden voyage of the Titanic&#34;,&#xA;          &#34;stratified by demographics and survival&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/corybrunson/ggalluvial/main/man/figures/README-unnamed-chunk-7-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;For detailed discussion of the data formats recognized by &lt;strong&gt;ggalluvial&lt;/strong&gt; and several examples that illustrate its flexibility and limitations, read the technical vignette:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vignette(topic = &#34;ggalluvial&#34;, package = &#34;ggalluvial&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Several additional vignettes offer detailed solutions to specific needs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;“Labeling small strata” (&lt;code&gt;&#34;labels&#34;&lt;/code&gt;) for how to elegantly label strata of a wide range of heights in an alluvial plot;&lt;/li&gt; &#xA; &lt;li&gt;“The Order of the Rectangles” (&lt;code&gt;&#34;order-rectangles&#34;&lt;/code&gt;) for how to control the positioning of strata and lodes in an alluvial plot; and&lt;/li&gt; &#xA; &lt;li&gt;“Tooltips for ggalluvial plots in Shiny apps” (&lt;code&gt;&#34;shiny&#34;&lt;/code&gt;) for how to incorporate alluvial plots into interactive apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The object documentation includes several more examples. Use &lt;code&gt;help()&lt;/code&gt; to call forth more detail on&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;any layer (&lt;code&gt;stat_*&lt;/code&gt; or &lt;code&gt;geom_*&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;the conversion functions (&lt;code&gt;to_*_form&lt;/code&gt;), and&lt;/li&gt; &#xA; &lt;li&gt;the data sets installed with the package (&lt;code&gt;vaccinations&lt;/code&gt; and &lt;code&gt;majors&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Short form&lt;/h3&gt; &#xA;&lt;p&gt;For some more digestible guidance on using &lt;strong&gt;ggalluvial&lt;/strong&gt;, check out three cheat sheets and demos by students in Joyce Robbins’s &lt;a href=&#34;https://jtr13.github.io/cc21fall2/index.html&#34;&gt;Exploratory Data Analysis and Visualization Community Contribution Project&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;an &lt;a href=&#34;https://jtr13.github.io/cc21fall2/ggalluvial-cheatsheet.html&#34;&gt;introduction&lt;/a&gt; by Meggie Wen (Chapter 33)&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://cheatography.com/seleven/cheat-sheets/ggalluvial/&#34;&gt;cheat sheet&lt;/a&gt; by Qingyi Zhang (Chapter 14)&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://medium.com/@arnavsaxena96/all-about-alluvial-diagrams-21da1505520b&#34;&gt;blog about how this package implements alluvial plots&lt;/a&gt; by Arnav Saxena (Chapter 134)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;p&gt;Development of this package benefitted from the use of equipment and the support of colleagues at &lt;a href=&#34;https://health.uconn.edu/&#34;&gt;UConn Health&lt;/a&gt; and at &lt;a href=&#34;https://ufhealth.org/&#34;&gt;UF Health&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute&lt;/h3&gt; &#xA;&lt;p&gt;Contributions in any form are more than welcome! Pretty much every fix and feature of this package derives from a problem or question posed by someone with datasets or design goals i hadn’t anticipated. See the &lt;a href=&#34;https://github.com/corybrunson/ggalluvial/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for guidance, and please respect the &lt;a href=&#34;https://github.com/corybrunson/ggalluvial/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cite&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;strong&gt;ggalluvial&lt;/strong&gt;-generated figures in publication, i’d be grateful to hear about it! You can also cite the package according to &lt;code&gt;citation(&#34;ggalluvial&#34;)&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dankoc/groHMM</title>
    <updated>2023-06-16T01:46:58Z</updated>
    <id>tag:github.com,2023-06-16:/dankoc/groHMM</id>
    <link href="https://github.com/dankoc/groHMM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;General analysis package for short read data. Provides a specific emphasis on GRO-seq analysis.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>cran/nonrandom</title>
    <updated>2023-06-16T01:46:58Z</updated>
    <id>tag:github.com,2023-06-16:/cran/nonrandom</id>
    <link href="https://github.com/cran/nonrandom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;❗ This is a read-only mirror of the CRAN R package repository. nonrandom — Stratification and matching by the propensity score&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>