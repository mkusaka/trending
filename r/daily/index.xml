<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-08T01:50:25Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gadenbuie/grkstyle</title>
    <updated>2022-08-08T01:50:25Z</updated>
    <id>tag:github.com,2022-08-08:/gadenbuie/grkstyle</id>
    <link href="https://github.com/gadenbuie/grkstyle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Tidy R Code Style&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;grkstyle&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gadenbuie.r-universe.dev&#34;&gt;&lt;img src=&#34;https://gadenbuie.r-universe.dev/badges/grkstyle&#34; alt=&#34;grkstyle status badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gadenbuie/grkstyle/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/gadenbuie/grkstyle/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;code&gt;grkstyle&lt;/code&gt; is an extension package for &lt;a href=&#34;https://styler.r-lib.org&#34;&gt;styler&lt;/a&gt; that holds my personal code style preferences.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install grkstyle from my &lt;a href=&#34;https://gadenbuie.r-universe.dev&#34;&gt;r-universe&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;options(repos = c(&#xA;&#x9;gadenbuie = &#34;https://gadenbuie.r-universe.dev&#34;,&#xA;&#x9;getOption(&#34;repos&#34;)&#xA;))&#xA;&#xA;# Download and install grkstyle in R&#xA;install.packages(&#34;grkstyle&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can install grkstyle directly from Github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;gadenbuie/grkstyle&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use &lt;code&gt;grkstyle&lt;/code&gt; by default in styler functions and addins&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Set default code style for {styler} functions&#xA;grkstyle::use_grk_style()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or add the following to your &lt;code&gt;~/.Rprofile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;options(styler.addins_style_transformer = &#34;grkstyle::grk_style_transformer()&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;A few examples drawn from the &lt;a href=&#34;https://style.tidyverse.org&#34;&gt;tidyverse style guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tabs vs Spaces&lt;/h3&gt; &#xA;&lt;p&gt;I‚Äôve been staunchly committed to indentation by two spaces, but I‚Äôve recently come to realize that indentation with tabs is objectively better. Primarily &lt;a href=&#34;https://alexandersandberg.com/articles/default-to-tabs-instead-of-spaces-for-an-accessible-first-environment/&#34;&gt;it‚Äôs about accessibility&lt;/a&gt;. Using tabs allows others to choose their preferred indentation levels, it accommodates more code authors in a wider variety of scenarios, and it‚Äôs better for Braille code readers:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The main reason I would like to see this change is for refreshable braille displays that are used by blind programmers a lot. Each space wastes one braille cell and takes away valuable braille realestate. So if the default indentation of a project is 4 spaces per level, a 3rd level indentation wastes 12 braille cells before code starts.&lt;br&gt; ‚Äî &lt;a href=&#34;https://github.com/prettier/prettier/issues/7475#issuecomment-668544890&#34;&gt;Comment&lt;/a&gt; by &lt;a href=&#34;https://github.com/MarcoZehe&#34;&gt;MarcoZehe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;All of the &lt;code&gt;grk_style_text()&lt;/code&gt;, &lt;code&gt;grk_style_file()&lt;/code&gt;, &lt;code&gt;grk_style_dir()&lt;/code&gt; and &lt;code&gt;grk_style_pkg()&lt;/code&gt; functions will by default automatically detect the &lt;code&gt;UseTabsForSpaces&lt;/code&gt; setting the RStudio project file. You can switch to tabs by updating the RStudio project settings to disable ‚ÄúInsert spaces for tab‚Äù (Tools &amp;gt; Project Options &amp;gt; Code Editing &amp;gt; &lt;em&gt;Insert spaces for tab&lt;/em&gt;) and then running one of the above functions. Alternatively, you can set &lt;code&gt;grkstyle.use_tabs = TRUE&lt;/code&gt; in the &lt;code&gt;.Rprofile&lt;/code&gt; file in your home directory or your project directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;unstyled&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fruits &amp;lt;- c(&#xA;  &#34;apple&#34;,&#xA;  &#34;banana&#34;,&#xA;  &#34;mango&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;grkstyle&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fruits &amp;lt;- c(&#xA;&#x9;&#34;apple&#34;,&#xA;&#x9;&#34;banana&#34;,&#xA;&#x9;&#34;mango&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you‚Äôd like to quickly transition &lt;strong&gt;to tabs&lt;/strong&gt; throughout your package code, you can use the &lt;code&gt;grk_reindent_tabs_*()&lt;/code&gt; helper functions. These function apply &lt;em&gt;only&lt;/em&gt; the styler indentation rules and should only affect the indentation of your code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# re-indent your package code using tabs&#xA;grk_reindent_tabs_pkg()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are equivalent helper functions to standardize around spaces, e.g.&amp;nbsp;&lt;code&gt;grk_reindent_spaces_*()&lt;/code&gt;, or to use the RStudio project option, e.g.&amp;nbsp;&lt;code&gt;grk_reindent_auto_*()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Line Breaks Inside Function Calls&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;unstyled&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;do_something_very_complicated(something = &#34;that&#34;, requires = many,&#xA;                              arguments = &#34;some of which may be long&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;grkstyle&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;do_something_very_complicated(&#xA;&#x9;something = &#34;that&#34;,&#xA;&#x9;requires = many,&#xA;&#x9;arguments = &#34;some of which may be long&#34;&#xA;) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;styler::tidyverse_style&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;do_something_very_complicated(&#xA;  something = &#34;that&#34;, requires = many,&#xA;  arguments = &#34;some of which may be long&#34;&#xA;) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Indentation of Function Arguments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;unstyled&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;long_function_name &amp;lt;- function(a = &#34;a long argument&#34;,&#xA;                               b = &#34;another argument&#34;,&#xA;                               c = &#34;another long argument&#34;) {&#xA;  # As usual code is indented by two spaces.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;grkstyle&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;long_function_name &amp;lt;- function(&#xA;&#x9;a = &#34;a long argument&#34;,&#xA;&#x9;b = &#34;another argument&#34;,&#xA;&#x9;c = &#34;another long argument&#34;&#xA;) {&#xA;&#x9;# As usual code is indented by two spaces.&#xA;} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;styler::tidyverse_style&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;long_function_name &amp;lt;- function(a = &#34;a long argument&#34;,&#xA;                               b = &#34;another argument&#34;,&#xA;                               c = &#34;another long argument&#34;) {&#xA;  # As usual code is indented by two spaces.&#xA;} &#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>matt-dray/quartostamp</title>
    <updated>2022-08-08T01:50:25Z</updated>
    <id>tag:github.com,2022-08-08:/matt-dray/quartostamp</id>
    <link href="https://github.com/matt-dray/quartostamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìúüíÆ RStudio Addin: insert (&#39;stamp&#39;) useful Quarto elements [WIP]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;{quartostamp}&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.repostatus.org/#wip&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/wip.svg?sanitize=true&#34; alt=&#34;Project Status: WIP ‚Äì Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/matt-dray/quartostamp/actions&#34;&gt;&lt;img src=&#34;https://github.com/matt-dray/quartostamp/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;An R package containing an &lt;a href=&#34;https://rstudio.github.io/rstudioaddins/&#34;&gt;RStudio Addin&lt;/a&gt; to insert useful little divs and classes for documents made with &lt;a href=&#34;https://quarto.org/&#34;&gt;Quarto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://matt-dray.github.io/quartostamp/&#34;&gt;package website&lt;/a&gt; for the &lt;a href=&#34;https://matt-dray.github.io/quartostamp/reference/index.html&#34;&gt;full list of available functions&lt;/a&gt; and &lt;a href=&#34;https://quarto.org/docs/guide/&#34;&gt;Quarto website&lt;/a&gt; for full documentation&lt;/p&gt; &#xA;&lt;p&gt;Why &#39;quartostamp&#39;? You can physically stamp some pre-written type into a &lt;a href=&#34;https://en.wikipedia.org/wiki/Quarto&#34;&gt;literal quarto document&lt;/a&gt;; you can digitally stamp some pre-written elements into your qmd file.&lt;/p&gt; &#xA;&lt;p&gt;To install this package, run the following and then restart RStudio:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;remotes&#34;)  # if not yet installed&#xA;remotes::install_github(&#34;matt-dray/quartostamp&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Put the cursor in your Quarto file where you&#39;d like to insert a div or class&lt;/li&gt; &#xA; &lt;li&gt;Click the &#39;RStudio Addins&#39; dropdown at the top of the RStudio IDE&lt;/li&gt; &#xA; &lt;li&gt;Scroll/search for &#39;QUARTOSTAMP&#39; and click the function you want&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can create &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts-in-the-RStudio-IDE&#34;&gt;custom RStudio keyboard shortcuts&lt;/a&gt; for these functions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &#39;Tools&#39;&lt;/li&gt; &#xA; &lt;li&gt;Go to &#39;Modify Keyboard Shortcuts...&#39;&lt;/li&gt; &#xA; &lt;li&gt;Scroll or search for the {quartostamp} function you want to give a keyboard shortcut&lt;/li&gt; &#xA; &lt;li&gt;Click in the &#39;Shortcut&#39; column and type the key combination you want to use&lt;/li&gt; &#xA; &lt;li&gt;Click &#39;Apply&#39;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>u-brite/team_papaki</title>
    <updated>2022-08-08T01:50:25Z</updated>
    <id>tag:github.com,2022-08-08:/u-brite/team_papaki</id>
    <link href="https://github.com/u-brite/team_papaki" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrating multi-omics data with autoencoders for breast cancer survival prediction.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cancer survival prediction and integration of multi-omics integration with Supervised Autoencoders, Stacked Autoencoders and Concrete Supervised Autoencoders for multiple correlated driver genes&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Performance of multi-omics measurements and prediction for cancer survival integrating harmonized RNA sequencing from the ROSMAP cohort using supervised autoencoders with paralledged generative adversarial networks (GAN) based manifold omics analysis without priors. The most significant parameter during cancer therapy is survival analysis for revealing clinically significant biomarkers to stratify biological agents. Supervised encoders could facilitate accurate diagnosis of complex diseases and survival progression at multiple genetic levels. Multi-stage dimensionality based models may scale up time execution in comparison to state-of-the-art alternatives.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#Content&#34;&gt;Content&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#Background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#data&#34;&gt;Data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#results&#34;&gt;Results&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/u-brite/team_papaki/main/#team-members&#34;&gt;Team Members&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;Breast cancer is the second most common cancer among women in the United States. Breast cancer is highly heterogeneous, composed of different subtypes, with different clinical, pathological, and molecular characteristics, as well as prognostic and therapeutic significance. Considering the significant variance in breast cancer outcomes, it is important to accurately predict the survival and prognosis of the breast cancer patients. Prediction of survival or prognosis can facilitate precision medicine of breast cancer. Many deep learning methods have been proposed to cancer prognosis prediction using genomic information, but most of them focus on a single-layer of omics data, where gene expression (mRNA) is most commonly used. Currently, there are some existing tools using autoencoders to intergrate multi-omics data for cancer prognosis prediction. Our team aims to compare these existing algorisms and advance and optimize the methods for better utilities [1].&lt;/p&gt; &#xA;&lt;p&gt;[1] Chai, H., Zhou, X., Zhang, Z., Rao, J., Zhao, H., &amp;amp; Yang, Y. (2021). Integrating multi-omics data through deep learning for accurate cancer prognosis prediction. Computers in biology and medicine, 134, 104481.&lt;/p&gt; &#xA;&lt;h2&gt;Framework and workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/u-brite/team_papaki/raw/main/Pipeline%20Workflow.png&#34; alt=&#34;Workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data&lt;/h2&gt; &#xA;&lt;p&gt;The breast cancer datasets are publicly available on the Cancer Genome Atlas (TCGA) (&lt;a href=&#34;https://tcga-data.nci.nih.gov/tcga/&#34;&gt;https://tcga-data.nci.nih.gov/tcga/&lt;/a&gt;). The datasets could be downloaded through the R package ‚ÄúTCGAassembler 2‚Äù v2.0.6. The datasets contained four types of multi-omics data: mRNA, miRNA, DNA methylation, and copy number variation.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to take a look at the jupyter notebook and the instructions of forked repositories.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;All the requirements for python scripts are located in &lt;code&gt;requirements.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Has been tested in Linux (ubuntu) and Windows 11.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Jupyter Notebooks&lt;/li&gt; &#xA; &lt;li&gt;R&lt;/li&gt; &#xA; &lt;li&gt;DeepProg package&lt;/li&gt; &#xA; &lt;li&gt;DCAP autoencoders&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;p&gt;This project field the need for more robust cancer subtype diagnosis using deep learning methods such as DCAP (A framework to integrate multi-omics data by Denoising Autoencoder for Accurate cancer prognosis prediction) concluding mRNA performance better in comparisson to miRNA, methylation and following CNV (Copy Number Variation). These constructed models could distinguish high-risk patients from low-risk by identifying at the same time breast cancer related biomarkers. Room for performance and improvements still exists while this empirical results might be utilized to impact hitherto patients.&lt;/p&gt; &#xA;&lt;h2&gt;Team Members&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vasileios Alevizos | &lt;a href=&#34;mailto:vasileios.alevizos@ki.se&#34;&gt;vasileios.alevizos@ki.se&lt;/a&gt;, &lt;a href=&#34;mailto:valevizos@iknowhow.com&#34;&gt;valevizos@iknowhow.com&lt;/a&gt;| Karolinska Institutet, iKnowHow | Team Leader&lt;/li&gt; &#xA; &lt;li&gt;Vanessa Xiao | &lt;a href=&#34;mailto:vzxiao@mit.edu&#34;&gt;vzxiao@mit.edu&lt;/a&gt; | MIT | Team Member&lt;/li&gt; &#xA; &lt;li&gt;Yishu Qu | &lt;a href=&#34;mailto:YishuQu2024@u.northwestern.edu&#34;&gt;YishuQu2024@u.northwestern.edu&lt;/a&gt; | Northwestern University | Team Member&lt;/li&gt; &#xA; &lt;li&gt;Alexus Acton | &lt;a href=&#34;mailto:actonam@uab.edu&#34;&gt;actonam@uab.edu&lt;/a&gt; | UAB | Team Member&lt;/li&gt; &#xA; &lt;li&gt;Zongliang Yue | &lt;a href=&#34;mailto:zongyue@uab.edu&#34;&gt;zongyue@uab.edu&lt;/a&gt; | UAB | Team Member&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>