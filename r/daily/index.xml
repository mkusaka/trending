<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-12T01:44:19Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ropensci/dynamite</title>
    <updated>2023-02-12T01:44:19Z</updated>
    <id>tag:github.com,2023-02-12:/ropensci/dynamite</id>
    <link href="https://github.com/ropensci/dynamite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bayesian Inference of Complex Panel Data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dynamite &lt;a href=&#34;https://docs.ropensci.org/dynamite/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ropensci/dynamite/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ropensci/dynamite/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci/dynamite/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ropensci/dynamite?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ropensci/dynamite/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ropensci/software-review/issues/554&#34;&gt;&lt;img src=&#34;https://badges.ropensci.org/554_status.svg?sanitize=true&#34; alt=&#34;Status at rOpenSci Software Peer Review&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ropensci.r-universe.dev&#34;&gt;&lt;img src=&#34;https://ropensci.r-universe.dev/badges/dynamite&#34; alt=&#34;dynamite status badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=dynamite&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/dynamite&#34; alt=&#34;dynamite CRAN badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The &lt;code&gt;dynamite&lt;/code&gt; &lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt; package provides an easy-to-use interface for Bayesian inference of complex panel (time series) data comprising of multiple measurements per multiple individuals measured in time. The main features distinguishing the package and the underlying methodology from many other approaches are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for regular time-invariant effects, group-level random effects, and time-varying effects modeled via Bayesian P-splines.&lt;/li&gt; &#xA; &lt;li&gt;Joint modeling of multiple measurements per individual (multiple channels) based directly on the assumed data generating process.&lt;/li&gt; &#xA; &lt;li&gt;Support for non-Gaussian observations: Currently Gaussian, Categorical, Poisson, Bernoulli, Binomial, Negative Binomial, Gamma, Exponential, and Beta distributions are available and these can be mixed arbitrarily in multichannel models.&lt;/li&gt; &#xA; &lt;li&gt;Allows evaluating realistic long-term counterfactual predictions which take into account the dynamic structure of the model by posterior predictive distribution simulation.&lt;/li&gt; &#xA; &lt;li&gt;Transparent quantification of parameter and predictive uncertainty due to a fully Bayesian approach.&lt;/li&gt; &#xA; &lt;li&gt;User-friendly and efficient R interface with state-of-the-art estimation via Stan. Both &lt;code&gt;rstan&lt;/code&gt; and &lt;code&gt;cmdstanr&lt;/code&gt; backends are supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;dynamite&lt;/code&gt; package is developed with the support of Academy of Finland grant 331817 (&lt;a href=&#34;https://sites.utu.fi/predlife/en/&#34;&gt;PREDLIFE&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the stable version of &lt;code&gt;dynamite&lt;/code&gt; from &lt;a href=&#34;https://cran.r-project.org/package=dynamite&#34;&gt;CRAN&lt;/a&gt;, and the development version from &lt;a href=&#34;https://r-universe.dev/search/&#34;&gt;R-universe&lt;/a&gt; by running one the following lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;dynamite&#34;, repos = &#34;https://ropensci.r-universe.dev&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;A single-channel model with time-invariant effect of &lt;code&gt;z&lt;/code&gt;, time-varying effect of &lt;code&gt;x&lt;/code&gt;, lagged value of the response variable &lt;code&gt;y&lt;/code&gt; and a group-specific random intercepts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(1)&#xA;library(dynamite)&#xA;gaussian_example_fit &amp;lt;- dynamite(&#xA;  obs(y ~ -1 + z + varying(~ x + lag(y)) + random(~1), family = &#34;gaussian&#34;) +&#xA;    splines(df = 20),&#xA;  data = gaussian_example, time = &#34;time&#34;, group = &#34;id&#34;,&#xA;  iter = 2000, chains = 2, cores = 2, refresh = 0&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Summary of the model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gaussian_example_fit&#xA;#&amp;gt; Model:&#xA;#&amp;gt;   Family   Formula                                       &#xA;#&amp;gt; y gaussian y ~ -1 + z + varying(~x + lag(y)) + random(~1)&#xA;#&amp;gt; &#xA;#&amp;gt; Correlated random effects added for response(s): y&#xA;#&amp;gt; &#xA;#&amp;gt; Data: gaussian_example (Number of observations: 1450)&#xA;#&amp;gt; Grouping variable: id (Number of groups: 50)&#xA;#&amp;gt; Time index variable: time (Number of time points: 30)&#xA;#&amp;gt; &#xA;#&amp;gt; Smallest bulk-ESS: 687 (sigma_nu_y_alpha)&#xA;#&amp;gt; Smallest tail-ESS: 931 (sigma_nu_y_alpha)&#xA;#&amp;gt; Largest Rhat: 1.006 (nu_y_alpha_id4)&#xA;#&amp;gt; &#xA;#&amp;gt; Elapsed time (seconds):&#xA;#&amp;gt;         warmup sample&#xA;#&amp;gt; chain:1  4.913  2.755&#xA;#&amp;gt; chain:2  4.842  2.859&#xA;#&amp;gt; &#xA;#&amp;gt; Summary statistics of the time-invariant parameters&#xA;#&amp;gt; (excluding random effects):&#xA;#&amp;gt; # A tibble: 6 × 10&#xA;#&amp;gt;   variable        mean median      sd     mad     q5   q95  rhat ess_b…¹ ess_t…²&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 beta_y_z      1.97   1.97   0.0118  0.0123  1.95   1.99   1.00   2613.   1696.&#xA;#&amp;gt; 2 sigma_nu_y_a… 0.0941 0.0936 0.0114  0.0113  0.0767 0.114  1.00    687.    931.&#xA;#&amp;gt; 3 sigma_y       0.198  0.198  0.00386 0.00368 0.192  0.204  1.00   2697.   1510.&#xA;#&amp;gt; 4 tau_alpha_y   0.208  0.202  0.0451  0.0412  0.145  0.290  1.00   1270.   1452.&#xA;#&amp;gt; 5 tau_y_x       0.362  0.352  0.0673  0.0604  0.268  0.490  1.00   2103.   1725.&#xA;#&amp;gt; 6 tau_y_y_lag1  0.107  0.103  0.0217  0.0204  0.0768 0.146  1.00   1739.   1184.&#xA;#&amp;gt; # … with abbreviated variable names ¹​ess_bulk, ²​ess_tail&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Posterior estimates of time-varying effects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_deltas(gaussian_example_fit, scales = &#34;free&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ropensci/dynamite/main/man/figures/README-unnamed-chunk-7-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;And group-specific intercepts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_nus(gaussian_example_fit, groups = 1:10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ropensci/dynamite/main/man/figures/README-unnamed-chunk-8-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;Traceplots and density plots:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(gaussian_example_fit, type = &#34;beta&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ropensci/dynamite/main/man/figures/README-unnamed-chunk-9-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;Posterior predictive samples for the first 4 groups (samples based on the posterior distribution of model parameters and observed data on first time point):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;pred &amp;lt;- predict(gaussian_example_fit, n_draws = 100)&#xA;pred |&amp;gt;&#xA;  dplyr::filter(id &amp;lt; 5) |&amp;gt;&#xA;  ggplot(aes(time, y_new, group = .draw)) +&#xA;  geom_line(alpha = 0.25) +&#xA;  # observed values&#xA;  geom_line(aes(y = y), colour = &#34;tomato&#34;) +&#xA;  facet_wrap(~id) +&#xA;  theme_bw()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ropensci/dynamite/main/man/figures/README-unnamed-chunk-10-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;For more examples, see the package vignette and the &lt;a href=&#34;https://ropensci.org/blog/2023/01/31/dynamite-r-package/&#34;&gt;blog post about dynamite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;dynamite&lt;/code&gt; package uses Stan via &lt;a href=&#34;https://CRAN.R-project.org/package=rstan&#34;&gt;&lt;code&gt;rstan&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://mc-stan.org/cmdstanr/&#34;&gt;&lt;code&gt;cmdstanr&lt;/code&gt;&lt;/a&gt; (see also &lt;a href=&#34;https://mc-stan.org&#34;&gt;https://mc-stan.org&lt;/a&gt;), which is a probabilistic programming language for general Bayesian modelling.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://CRAN.R-project.org/package=brms&#34;&gt;&lt;code&gt;brms&lt;/code&gt;&lt;/a&gt; package also uses Stan, and can be used to fit various complex multilevel models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Regression modeling with time-varying coefficients based on kernel smoothing and least squares estimation is available in package &lt;a href=&#34;https://CRAN.R-project.org/package=tvReg&#34;&gt;&lt;code&gt;tvReg&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&#34;https://CRAN.R-project.org/package=tvem&#34;&gt;&lt;code&gt;tvem&lt;/code&gt;&lt;/a&gt; package provides similar functionality for gaussian, binomial and poisson responses with &lt;a href=&#34;https://CRAN.R-project.org/package=mgcv&#34;&gt;&lt;code&gt;mgcv&lt;/code&gt;&lt;/a&gt; backend.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=plm&#34;&gt;&lt;code&gt;plm&lt;/code&gt;&lt;/a&gt; contains various methods to estimate linear models for panel data, e.g.&amp;nbsp;the fixed effect models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=lavaan&#34;&gt;&lt;code&gt;lavaan&lt;/code&gt;&lt;/a&gt; provides tools for structural equation modeling, and as such can be used to model various panel data models as well.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome, see &lt;a href=&#34;https://github.com/ropensci/dynamite/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for general guidelines.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>insightsengineering/teal.data</title>
    <updated>2023-02-12T01:44:19Z</updated>
    <id>tag:github.com,2023-02-12:/insightsengineering/teal.data</id>
    <link href="https://github.com/insightsengineering/teal.data" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data model for teal applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;teal.data&lt;/h1&gt; &#xA;&lt;!-- start badges --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insightsengineering/teal.data/actions/workflows/check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/insightsengineering/teal.data/actions/workflows/check.yaml/badge.svg?sanitize=true&#34; alt=&#34;Check 🛠&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://insightsengineering.github.io/teal.data/&#34;&gt;&lt;img src=&#34;https://github.com/insightsengineering/teal.data/actions/workflows/docs.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docs 📚&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/insightsengineering/teal.data/_xml_coverage_reports/data/main/coverage.xml&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/insightsengineering/teal.data/_xml_coverage_reports/data/main/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage 📔&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/forks/insightsengineering/teal.data?style=social&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/insightsengineering/teal.data?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/insightsengineering/teal.data&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/insightsengineering/teal.data&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/insightsengineering/teal.data&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/insightsengineering/teal.data&#34; alt=&#34;GitHub pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/insightsengineering/teal.data&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/count/insightsengineering/teal.data&#34; alt=&#34;GitHub language count&#34;&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/insightsengineering/teal.data/tree/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/r-package/v/insightsengineering/teal.data/main?color=purple&amp;amp;label=package%20version&#34; alt=&#34;Current Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/insightsengineering/teal.data/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/insightsengineering/teal.data?color=red&amp;amp;label=open%20issues&#34; alt=&#34;Open Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- end badges --&gt; &#xA;&lt;p&gt;This package is used to create the data needed for &lt;code&gt;teal&lt;/code&gt; applications. This data can be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Independent data frames&lt;/li&gt; &#xA; &lt;li&gt;CDISC data (for clinical trial reporting)&lt;/li&gt; &#xA; &lt;li&gt;Relational data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MultiAssayExperiment&lt;/code&gt; objects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This package provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the mechanism for pulling data from existing systems&lt;/li&gt; &#xA; &lt;li&gt;the ability to mutate (i.e. pre-process) the data&lt;/li&gt; &#xA; &lt;li&gt;record the operations used to create the data to enable reproducibility&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;For releases from August 2022 it is recommended that you &lt;a href=&#34;https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;create and use a Github PAT&lt;/a&gt; to install the latest version of this package. Once you have the PAT, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Sys.setenv(GITHUB_PAT = &#34;your_access_token_here&#34;)&#xA;if (!require(&#34;remotes&#34;)) install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;insightsengineering/teal.data@*release&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A stable release of all &lt;code&gt;NEST&lt;/code&gt; packages from June 2022 is also available &lt;a href=&#34;https://github.com/insightsengineering/depository#readme&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See package vignettes &lt;code&gt;browseVignettes(package = &#34;teal.data&#34;)&lt;/code&gt; for usage of this package.&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers and Forkers&lt;/h2&gt; &#xA;&lt;h3&gt;Stargazers over time&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/insightsengineering/teal.data&#34;&gt;&lt;img src=&#34;https://starchart.cc/insightsengineering/teal.data.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Stargazers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insightsengineering/teal.data/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/insightsengineering/teal.data&#34; alt=&#34;Stargazers repo roster for @insightsengineering/teal.data&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forkers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insightsengineering/teal.data/network/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/insightsengineering/teal.data&#34; alt=&#34;Forkers repo roster for @insightsengineering/teal.data&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>