<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-19T01:54:21Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>junjunlab/scRNAtoolVis</title>
    <updated>2022-07-19T01:54:21Z</updated>
    <id>tag:github.com,2022-07-19:/junjunlab/scRNAtoolVis</id>
    <link href="https://github.com/junjunlab/scRNAtoolVis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Useful functions to make your scRNA-seq plot more cool!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scRNAtoolVis&lt;/h1&gt; &#xA;&lt;p&gt;Some useful function to make your scRNA-seq plot more beautiful.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;install.packages(&#39;devtools&#39;)&#xA;devtools::install_github(&#39;junjunlab/scRNAtoolVis&#39;)&#xA;&#xA;library(scRNAtoolVis)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More examples see&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/junjunlab/scRNAtoolVis/wiki/scRNAtoolVis-documentation.&#34;&gt;https://github.com/junjunlab/scRNAtoolVis/wiki/scRNAtoolVis-documentation. &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/junjunlab/scRNAtoolVis/wiki/scRNAtoolVis-Version-0.0.3-documentation&#34;&gt;https://github.com/junjunlab/scRNAtoolVis/wiki/scRNAtoolVis-Version-0.0.3-documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/64965509/175869959-c952e536-f7b6-47af-9941-7756dcabedb7.png&#34; alt=&#34;wallhaven-3kwmry_1280x640&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eliocamp/ggdatasaver</title>
    <updated>2022-07-19T01:54:21Z</updated>
    <id>tag:github.com,2022-07-19:/eliocamp/ggdatasaver</id>
    <link href="https://github.com/eliocamp/ggdatasaver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically save data associated with a &#39;ggplot2&#39; plot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggdatasaver&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=ggdatasaver&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggdatasaver&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of ggdatasaver is to automatically save the data associated with your plots for you to share as supplementary material. Other people can then use that data instead of digitising your plots. Because only the data already being published as a plot is saved, there should be fewer privacy or legal complications.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of ggdatasaver like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;eliocamp/ggdatasaver&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;ggdatasaver works automatically with knitr. The only thing you need to do is to define the directory where the data is saved with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggdatasaver::save_plot_data_in(&#34;plot-data&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, just create your ggplot2 figures as always. Using a chunk label is encouraged because it will be used to name the file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;ggplot(mtcars, aes(mpg, disp)) +&#xA;  geom_point() +&#xA;  geom_smooth()&#xA;#&amp;gt; `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eliocamp/ggdatasaver/main/man/figures/README-mpg-1.png&#34; title=&#34;Scatterplot of mpg vs disp with a fitted smooth line showing a decreasing relationship.&#34; alt=&#34;Scatterplot of mpg vs disp with a fitted smooth line showing a decreasing relationship.&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;After you knit, you will have a (possibly new) directory with zip files with the data of each plot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fs::dir_tree(&#34;plot-data&#34;)&#xA;#&amp;gt; plot-data&#xA;#&amp;gt; └── mpg-1.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inside that zip file there will be a csv file for each layer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Unzip the contents of mpg.zip into a temporary directory. &#xA;dir &amp;lt;- file.path(tempdir(), &#34;mpg&#34;)&#xA;utils::unzip(&#34;plot-data/mpg-1.zip&#34;, exdir = dir)&#xA;fs::dir_tree(dir)&#xA;#&amp;gt; /tmp/RtmpY8W9DL/mpg&#xA;#&amp;gt; ├── GeomPoint.csv&#xA;#&amp;gt; ├── GeomSmooth.csv&#xA;#&amp;gt; └── layout.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data of each layer is only the one used to draw the geometry. For example, GeomSmooth.csv has the coordinates of the fit and some other aesthetic information&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;smooth &amp;lt;- read.csv(file.path(dir, &#34;GeomSmooth.csv&#34;))&#xA;knitr::kable(head(smooth))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;x&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;y&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;ymin&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;ymax&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;se&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;flipped_aes&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;PANEL&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;group&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;colour&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;fill&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;size&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;linetype&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;weight&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;alpha&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.40000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;465.4006&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;380.6647&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;550.1365&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;41.25442&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.69747&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;455.8367&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;378.8003&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;532.8731&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;37.50585&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.99494&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;446.3856&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;376.3085&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;516.4627&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;34.11767&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.29241&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;437.0484&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;373.1735&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;500.9234&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;31.09807&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.58987&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;427.8262&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;369.3829&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;486.2694&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;28.45362&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.88734&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;418.7198&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;364.9320&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;472.5076&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;26.18707&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;#3366FF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;grey60&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;And the line can be reconstructed exactly from these data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(smooth, aes(x, y)) + &#xA;  geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = I(fill), alpha = I(alpha))) +&#xA;  geom_line(aes(colour = I(colour), size = I(size)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eliocamp/ggdatasaver/main/man/figures/README-unnamed-chunk-6-1.png&#34; title=&#34;The same figure from before but only the smooth fit.&#34; alt=&#34;The same figure from before but only the smooth fit.&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;(Setting &lt;code&gt;plot_data_dir&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; will suppress data-saving for that chunk.)&lt;/p&gt; &#xA;&lt;p&gt;As you can see, only the coordinates of each geom are saved, not the underlying data. For a more dramatic example, take this controur plot of the Old Faithful Geyser Data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(faithful, aes(x = eruptions, y = waiting)) +&#xA;  geom_density_2d()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eliocamp/ggdatasaver/main/man/figures/README-faithful-density-1.png&#34; title=&#34;2D density contours of eruptions vs. waiting shoing two distinct areas of high density, one centered at ~4.5 eruptions and ~80 waiting and one at 2 eruptions and 55 waiting.&#34; alt=&#34;2D density contours of eruptions vs. waiting shoing two distinct areas of high density, one centered at ~4.5 eruptions and ~80 waiting and one at 2 eruptions and 55 waiting.&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;(Now there are two zip files in the &lt;code&gt;plot-data&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fs::dir_tree(&#34;plot-data&#34;)&#xA;#&amp;gt; plot-data&#xA;#&amp;gt; ├── faithful-density-1.zip&#xA;#&amp;gt; └── mpg-1.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;ggdatasaver will save the coordinates that defined the contours, not the observations from which they were computed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dir &amp;lt;- file.path(tempdir(), &#34;faithful-density&#34;)&#xA;utils::unzip(&#34;plot-data/faithful-density-1.zip&#34;, exdir = dir)&#xA;&#xA;density &amp;lt;- read.csv(file.path(dir, &#34;GeomDensity2d.csv&#34;))&#xA;&#xA;ggplot(density, aes(x, y)) +&#xA;  geom_path(aes(group = group))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eliocamp/ggdatasaver/main/man/figures/README-unnamed-chunk-8-1.png&#34; title=&#34;The same plot from before.&#34; alt=&#34;The same plot from before.&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;This makes it safe to share these data, as it doesn’t include any more information than what’s in the plot you are already sharing.&lt;/p&gt; &#xA;&lt;p&gt;The panel specification of each plot is saved in layout.csv, which holds the location (ROW and COLumn) information of each panel as well as the value of the variables&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, cty)) +&#xA;  geom_point() +&#xA;  facet_grid(drv ~ cyl)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eliocamp/ggdatasaver/main/man/figures/README-mpg-facets-1.png&#34; title=&#34;Scatterplot of displ vs cty with 12 panels organised in 2 rows and 4 columns according to the values of drv and cyl.&#34; alt=&#34;Scatterplot of displ vs cty with 12 panels organised in 2 rows and 4 columns according to the values of drv and cyl.&#34; width=&#34;50%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dir &amp;lt;- file.path(tempdir(), &#34;mpg-facets&#34;)&#xA;utils::unzip(&#34;plot-data/mpg-facets-1.zip&#34;, exdir = dir)&#xA;&#xA;layout &amp;lt;- read.csv(file.path(dir, &#34;layout.csv&#34;))&#xA;&#xA;head(layout)&#xA;#&amp;gt;   PANEL ROW COL drv cyl SCALE_X SCALE_Y&#xA;#&amp;gt; 1     1   1   1   4   4       1       1&#xA;#&amp;gt; 2     2   1   2   4   5       1       1&#xA;#&amp;gt; 3     3   1   3   4   6       1       1&#xA;#&amp;gt; 4     4   1   4   4   8       1       1&#xA;#&amp;gt; 5     5   2   1   f   4       1       1&#xA;#&amp;gt; 6     6   2   2   f   5       1       1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;h3&gt;Accessibilty&lt;/h3&gt; &#xA;&lt;p&gt;Academic journals almost never have any infrastructure that allows for alt text for figures. For blind people, having access to the raw data is better than nothing.&lt;/p&gt; &#xA;&lt;p&gt;With the data they could print a tactile version (for simple plots), compute statistics to get a better sense of the relationships, or just read the raw data. For fitted curves, which usually are not adequately described in text, they could get the data, fit the curve and read the curve parameters.&lt;/p&gt; &#xA;&lt;h3&gt;Reproducibilty&lt;/h3&gt; &#xA;&lt;p&gt;An important aspect of reproducibility is having access to data, but this is easier said than done. Huge data is expensive to store and serve, and many types of data carry privacy concerns (such as patient data) or licencing issues (like secret data). Another barrier to data sharing is organising it in useful way (see &lt;a href=&#34;https://the-turing-way.netlify.app/reproducible-research/open/open-data.html#barriers-to-data-sharing&#34;&gt;The Turing Way’s Guide to Reproducible Research&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;While not perfect, sharing the small snippets of data that are the coordinates of plot geometries can be a good compromise. These data are generally small and already in a tabular format, so it’s technically easy to share in a repository or as supplemental material. And because is data that is already implicitly shared as an image, it doesn’t carry privacy and licencing concerns. (I’m not a lawyer, so don’t take that as legal advice.)&lt;/p&gt; &#xA;&lt;p&gt;And even when the raw data is shared, sharing also the plot data can be useful for researchers that want to reproduce or reanalise small chunks of your results but don’t want or can’t download the original data and run the code.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;ggdatasaver has only been tested on simple plots although there’s no reason it should work work with more complicated ones. However, patchwork / cowplot plots probably won’t work as expected.&lt;/p&gt; &#xA;&lt;p&gt;When using ggdatasaver plots are built twice; once when saving the data and once when drawing the plot. This shouldn’t be an issue most of the time unless your plot requires heavy computation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PoisonAlien/basegraphics</title>
    <updated>2022-07-19T01:54:21Z</updated>
    <id>tag:github.com,2022-07-19:/PoisonAlien/basegraphics</id>
    <link href="https://github.com/PoisonAlien/basegraphics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pretty plots using pure base graphics in R&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Do you like Data Visualization and &lt;code&gt;#Rstats&lt;/code&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Base graphics in R is a powerful, blazing fast, and offers extremely customization data visualization solutions. Unfortunately, in the world of &lt;code&gt;ggplot2&lt;/code&gt;, base graphics is largely ignored due to lack proper documentations and howtos.&lt;/p&gt; &#xA;&lt;p&gt;This repository demonstrates the usage of base R graphics (along with code and datasets) to generate visually appealing plots, without any dependencies what so ever.&lt;/p&gt; &#xA;&lt;p&gt;This repository is for those who like to learn and customize base R plotting functions. &lt;code&gt;#BaseisBeautiful&lt;/code&gt; :)&lt;/p&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://poisonalien.github.io/basegraphics/index.html&#34;&gt;Home page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://poisonalien.github.io/basegraphics/baseplots.html&#34;&gt;Code and plots&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data and code&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raw data is stored under &lt;a href=&#34;https://github.com/PoisonAlien/basegraphics/tree/main/data&#34;&gt;data&lt;/a&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;Individual code for each plot is stored under &lt;a href=&#34;https://github.com/PoisonAlien/basegraphics/tree/main/code&#34;&gt;code&lt;/a&gt; directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Twitter&lt;/h2&gt; &#xA;&lt;p&gt;I also tweet plots &lt;a href=&#34;https://twitter.com/baseRgraphics&#34;&gt;@baseRgraphics&lt;/a&gt;. Make sure to follow the account for updates :)&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;img width=&#34;1273&#34; alt=&#34;plots&#34; src=&#34;https://user-images.githubusercontent.com/8164062/177695856-58bfe9bb-667a-4c52-a7d4-51168671980e.png&#34;&gt;</summary>
  </entry>
</feed>