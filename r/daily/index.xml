<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-01T01:40:01Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Robinlovelace/opengeohub2023</title>
    <updated>2023-09-01T01:40:01Z</updated>
    <id>tag:github.com,2023-09-01:/Robinlovelace/opengeohub2023</id>
    <link href="https://github.com/Robinlovelace/opengeohub2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Content for lecture at OpenGeoHub 2023 on spatial data and the tidyverse&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenGeoHub Summer School 2023&lt;/h1&gt; &#xA;&lt;div&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Robinlovelace/opengeohub2023/actions/workflows/publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/Robinlovelace/opengeohub2023/actions/workflows/publish.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Quarto Publish&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This repo contains code to support sessions that I will deliver for the OpenGeoHub Summer School 2023.&lt;/p&gt; &#xA;&lt;p&gt;As shown in the course &lt;a href=&#34;https://pretalx.earthmonitor.org/opengeohub-summer-school-2023/schedule/&#34;&gt;schedule&lt;/a&gt; I will deliver the following sessions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pretalx.earthmonitor.org/opengeohub-summer-school-2023/talk/7JN3FV/&#34;&gt;Tidy geographic data with sf, dplyr, ggplot2, geos and friends&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2023-08-28, 11:00–12:30, Room 21 (Sala 21)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pretalx.earthmonitor.org/opengeohub-summer-school-2023/talk/SRMZVJ&#34;&gt;Processing large OpenStreetMap datasets for geocomputation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2023-09-01, 09:00–10:30, Room 18 (Sala 18)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Abstracts for these sessions are provided below.&lt;/p&gt; &#xA;&lt;h2&gt;Reproducibility&lt;/h2&gt; &#xA;&lt;p&gt;You can reproduce all of the results and run all the code in this repo. The quickest way to get started if you don’t already have the dependencies is with codespaces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/Robinlovelace/opengeohub2023&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If it works you should see something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Robinlovelace/opengeohub2023/main/images/paste-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the code locally download the code, e.g.&amp;nbsp;with the following command after installing GitHub’s CLI tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gh repo clone Robinlovelace/opengeohub2023&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open the project in RStudio, VS Code, and start looking at and running the code. You should be able to reproduce the rendered website interactively with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quarto preview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run the code in this repo in the Docker image hosted at &lt;a href=&#34;https://github.com/Robinlovelace/opengeohub2023/pkgs/container/opengeohub2023&#34;&gt;https://github.com/Robinlovelace/opengeohub2023/pkgs/container/opengeohub2023&lt;/a&gt; as follows, with the -v flag to mount the current directory in the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it -v $(pwd):/workspace opengeohub2023:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have VS Code installed you should be able to ‘Reopen in Container’ (not fully tested locally).&lt;/p&gt; &#xA;&lt;h2&gt;Tidy geographic data with sf, dplyr, ggplot2, geos and friends&lt;/h2&gt; &#xA;&lt;!-- ### Abstract --&gt; &#xA;&lt;p&gt;This lecture will provide an introduction to working with geographic data using R in a ‘tidy’ way. It will focus on using the &lt;code&gt;sf&lt;/code&gt; package to read, write, manipulate, and plot geographic data in combination with the &lt;code&gt;tidyverse&lt;/code&gt; metapackage. Why use the &lt;code&gt;sf&lt;/code&gt; package with the &lt;code&gt;tidyverse&lt;/code&gt;? The lecture will outline some of the ideas underlying the &lt;code&gt;tidyverse&lt;/code&gt; and how they can speed-up data analysis pipelines, while making data analysis code easier to read and write. We will see how the following lines&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(sf)&#xA;library(tidyverse)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;can provide a foundation on which the many geographic data analysis problems can be solved. The lecture will also cover on more recently developed packages that integrate with the &lt;code&gt;tidyverse&lt;/code&gt; to a greater and lesser extent. We will look at how the &lt;code&gt;geos&lt;/code&gt; package, which provides a simple and high-performance interface to the GEOS library for performing geometric operations on geographic data, integrates with the &lt;code&gt;tidyverse&lt;/code&gt;. The &lt;code&gt;tidyverse&lt;/code&gt; is not the right tool for every data analysis task and we touch on alternatives for working with raster data, with reference to the &lt;code&gt;terra&lt;/code&gt; package, and alternative frameworks such as &lt;code&gt;data.table&lt;/code&gt;. Finally, we will also look at how the ‘tidy’ philosophy could be implemented in other programming languages, such as Python.&lt;/p&gt; &#xA;&lt;p&gt;The focus throughout will be on practical skills and using packages effectively within the wider context of project management tools, integrated development environments (we recommend VS Code with appropriate extensions or RStudio), and version control systems.&lt;/p&gt; &#xA;&lt;h2&gt;Processing large OpenStreetMap datasets for geocomputation&lt;/h2&gt; &#xA;&lt;p&gt;OpenStreetMap (OSM) is a free and openly editable map of the world. Like Wikipedia and unlike government or corperation maintained datasets, OSM is created and maintained by a community of volunteers, making it the premier decentralized and fastest evolving source of geographic vector data focussed on features relevant to human activity (e.g.&amp;nbsp;roads, buildings, cafes) on planet Earth. Unlike Wikipedia, every data point in OSM has a geographic location and attributes must be structured as key-value pairs. OSM is a rich source of data for geocomputation, but the decentralized nature of the project and the sheer volume of data. ‘Planet.osm’ now has more nodes than there are people on Earth, with more than 8 billion &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Node&#34;&gt;nodes&lt;/a&gt;, and the rate of data creation is increasing as the community grows, to &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Stats&#34;&gt;10 million users&lt;/a&gt; in early 2023. The size and rapid evolution of OSM are great strengths, democratising geographic knowledge and ensuring resilience. However, these features can make it difficult to work with OSM data.&lt;/p&gt; &#xA;&lt;p&gt;This lecture will provide an introduction to working with OSM and will cover the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How and where to download OSM data&lt;/li&gt; &#xA; &lt;li&gt;How to process small amounts of OSM data using the &lt;code&gt;osmdata&lt;/code&gt; R package&lt;/li&gt; &#xA; &lt;li&gt;How to process large OSM ‘extracts’ data with the &lt;code&gt;osmextract&lt;/code&gt; R package&lt;/li&gt; &#xA; &lt;li&gt;Other command line tools for working with OSM data, including the mature and widely used &lt;code&gt;osmium&lt;/code&gt; tool, the &lt;code&gt;pyrosm&lt;/code&gt; Python package and the &lt;a href=&#34;https://github.com/a-b-street/osm2streets&#34;&gt;&lt;code&gt;osm2streets&lt;/code&gt;&lt;/a&gt; web application and Rust codebase&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Finally, the lecture will outline ideas for using OSM data. It will conclude with a call to action, inspiring the use of this rich resource to support policy objectives such as the fast and fair decarbonisation of the global economy as societies transition away from inefficient, polluting and costly fossil fuels.&lt;/p&gt; &#xA;&lt;!-- ## Using geocomputation in government&#xA;&amp;#10;TBC --&gt; &#xA;&lt;h2&gt;Reproducibility&lt;/h2&gt; &#xA;&lt;p&gt;To install the dependencies for this repo, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;robinlovelace/opengeohub2023&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repo also uses the &lt;code&gt;renv&lt;/code&gt; package to manage dependencies. We saved the dependencies with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;renv::snapshot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Code was generated from the &lt;code&gt;.qmd&lt;/code&gt; files using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;f = c(&#34;tidy.qmd&#34;, &#34;osm.qmd&#34;)&#xA;f_r = gsub(&#34;.qmd&#34;, &#34;.R&#34;, f)&#xA;for(i in seq_along(f)) {&#xA;  knitr::purl(f[i], f_r[i])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>