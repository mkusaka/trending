<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-22T01:45:16Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iramosgutierrez/phyloshapeR</title>
    <updated>2024-04-22T01:45:16Z</updated>
    <id>tag:github.com,2024-04-22:/iramosgutierrez/phyloshapeR</id>
    <link href="https://github.com/iramosgutierrez/phyloshapeR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Package to plot phylogenies with custom shapes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;phyloshapeR&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iramosgutierrez/phyloshapeR/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/iramosgutierrez/phyloshapeR/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active - The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hits.dwyl.com/iramosgutierrez/phyloshapeR&#34;&gt;&lt;img src=&#34;https://hits.dwyl.com/iramosgutierrez/phyloshapeR.svg?style=flat-square&#34; alt=&#34;HitCount&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hits.dwyl.com/iramosgutierrez/phyloshapeR&#34;&gt;&lt;img src=&#34;https://hits.dwyl.com/iramosgutierrez/phyloshapeR.svg?style=flat-square&amp;amp;show=unique&#34; alt=&#34;HitCount&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/phyloshapeR.png&#34; width=&#34;140px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;phyloshapeR&lt;/code&gt; is a package to plot phylogenies in a custom shape&lt;/p&gt; &#xA;&lt;h2&gt;1. Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;strong&gt;phyloshapeR&lt;/strong&gt; from GitHub, you might need to install the &lt;em&gt;devtools&lt;/em&gt; package. Once you have it, you just have to specify the repository and install!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;iramosgutierrez/phyloshapeR&#34;)&#xA;library(&#34;phyloshapeR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to clone the repository, you can find the code &lt;a href=&#34;https://github.com/iramosgutierrez/phyloshapeR&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.1 The phyloshapeR package&lt;/h3&gt; &#xA;&lt;p&gt;The aim of this package is to create visual plots of phylogenies, but never to create phylogenetic trees to be used for analyses. The workflow of this package is to use an existing phylogenetic tree (or create a new one) and modify its branch lengths to match a particular shape. Originally it was designed to be used with administrative boundaries. It must be noted that depending on the contour of the desired shape, results may vary (more or less rounded shapes work better than long ones). However, several predefined shapes (as diamond, heart, star or polygons) have been added too.&lt;/p&gt; &#xA;&lt;h3&gt;1.2 Preparing the data&lt;/h3&gt; &#xA;&lt;p&gt;The only files we need to use &lt;code&gt;pyloshapeR&lt;/code&gt; are a shapefile (spatial vector) and a phylogenetic tree. However, both of them can be loaded or created internally.&lt;/p&gt; &#xA;&lt;h4&gt;Loading an own shapefile&lt;/h4&gt; &#xA;&lt;p&gt;Shapefiles are spatial vectors that must be loaded using the &lt;code&gt;terra&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(terra)&#xA;shape &amp;lt;- terra::vect(&#34;files/country_boundary.shp&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case we lack a shapefile including the geometries we want to use, we can use a predefined map loaded in &lt;code&gt;phyloshapeR&lt;/code&gt;. However, we must do some post-processing to select the corect geomentries, as unique countries have several polygons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;shape &amp;lt;- terra::vect(phyloshapeR::world)&#xA;shape &amp;lt;- shape[shape$name==&#34;Australia&#34;,] #We select all the territories from Australia&#39;s country&#xA;shape &amp;lt;- get_territory(shape, order = 1) #we select the biggest one  (mainland Australia)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case you don’t want to shape your phylogeny using a country border, but want to use a predefined form, you can alternatively use function &lt;code&gt;getshape&lt;/code&gt; (see below).&lt;/p&gt; &#xA;&lt;h4&gt;Loading an own phylogeny&lt;/h4&gt; &#xA;&lt;p&gt;In case you want to use a specific tree to be plotted, it must be loaded using &lt;code&gt;ape&#39;s&lt;/code&gt; package &lt;code&gt;read.tree&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ape)&#xA;tree &amp;lt;- ape::read.tree(&#34;example_tree.tre&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that this tree, if has too many tips may be pruned afterwords (i.e.&amp;nbsp;some of the tips may be randomly eliminated). In case you want to use the complete tree, you will have to specify in the function afterwords to use the same tips for the shape as your tree has!&lt;/p&gt; &#xA;&lt;h2&gt;2. phyloshapeR functions&lt;/h2&gt; &#xA;&lt;h3&gt;getshape() function&lt;/h3&gt; &#xA;&lt;p&gt;This function is needed only if you don’t have an own shapefile to be used and want to plot a phylogeny using some predefined forms. The options to be selected (i.e.&amp;nbsp;the &lt;code&gt;type&lt;/code&gt; argument) are diamond, star, heart, or a polygon of the desired number of sides (to be specified in the &lt;code&gt;sides&lt;/code&gt; argument). Additionally, you can rotate the output shape using the &lt;code&gt;rotate&lt;/code&gt; argument, specifying a number of degrees to rotate in a counter-clockwise direction.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;heart &amp;lt;- getshape(type=&#34;heart&#34;)&#xA;star &amp;lt;- getshape(type=&#34;star&#34;)&#xA;hexagon &amp;lt;- getshape(type=&#34;polygon&#34;, sides = 6)&#xA;rot.hexagon &amp;lt;- getshape(type=&#34;polygon&#34;, sides = 6, rotate = 30)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-createshapes_plot-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;In case you alternatively want to use a country border to shape your phylogeny, you might use the world map included in phyloshapeR. However, as most have more than one geometry (due to islands or other administrative separations), we have to select which geometry we want to use. This can be done manually, selecting the geometry we want to use one by one, or selecting the one with the biggest expanse (which is generally in the one of interest) using the accessory function &lt;code&gt;get_territory&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;world &amp;lt;- terra::vect(phyloshapeR::world)&#xA;australia &amp;lt;- world[world$name==&#34;Australia&#34;,] #We select all the territories from Australia&#39;s country&#xA;mainland.aus &amp;lt;- get_territory(australia, 1) #we select the biggest one  (mainland Australia)&#xA;tasmania &amp;lt;- get_territory(australia, 2) #we select the second biggest one  (Tasmania)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-australia_plot-1.png&#34; width=&#34;100%&#34;&gt; Please bear in mind that depending on the selected shape the results may vary. Using very linear shapes (as the border of Chile, for example), or borders with bends and turns (as the case of Great Britain) may result in strange outputs. &#xA;&lt;h3&gt;phyloshape() function&lt;/h3&gt; &#xA;&lt;p&gt;Once we have our shape loaded or created, and optionally the phylogenetic tree to use, we have to calculate distances of the branches to plot afterwards. In case the tree is not specified, a random phylogen will be created, using the number of tips specified in parameter &lt;code&gt;ntips&lt;/code&gt;. If a tree is specified, and has more tips than the specified, some of them will be randomply pruned to match the specified argument value.&lt;/p&gt; &#xA;&lt;p&gt;There are different approaches to the calculation of branch lengths, which are specified in parameter &lt;code&gt;method&lt;/code&gt;. Method “extend” will use the internal branch length values, and extend the length just in the branches over the tips. Contrarily, method “fill” (default) will re-calculate internal branch lengths. To do so, it sets the splitting point within nodes at a depth specified in argument &lt;code&gt;depth&lt;/code&gt;. Values near to 1 will result in very long internal branches, splitting nnear the tips, while values near to 0 ill split near the root.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ext.tree  &amp;lt;- phyloshape(mainland.aus, exampletree, ntips =120, method = &#34;extend&#34;)&#xA;fill.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120, method = &#34;fill&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-methods_plot-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;depth.025.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120, depth.k = 0.25)&#xA;depth.099.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120, depth.k = 0.99)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-depths_plot-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;Ultimately, we can select the coordinates where we want to set the root of our tree, specifying a Spatial Vector point in the &lt;code&gt;point&lt;/code&gt; argument, using the auxiliar &lt;code&gt;coords_to_point()&lt;/code&gt; function. It must be noted that the specified point must be included within the shape extent. The default value to use (if &lt;code&gt;point&lt;/code&gt; is not specified) will be the centroid of the geometry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;point1 &amp;lt;- coords_to_point(x=125, y= -22)&#xA;point2 &amp;lt;- coords_to_point(x=145, y= -28)&#xA;&#xA;&#xA;centroid.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120)&#xA;point1.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120,  point = point1)&#xA;point2.tree &amp;lt;- phyloshape(mainland.aus, exampletree, ntips=120,  point = point2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-points_plot-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;phylomap() function&lt;/h3&gt; &#xA;&lt;p&gt;The last function is a custom plot to be used with the results of phyloshape() function. However, it is only a simplification of some parameters of &lt;code&gt;ape&#39;s&lt;/code&gt; &lt;code&gt;plot.phylo()&lt;/code&gt; possibilities, proposed here. In case you are familiar with phylogeny plotting, you may prefer to custmize the parameters to your preferred options.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;phylomap()&lt;/code&gt; has a set of editable parameters (&lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;cex&lt;/code&gt;, &lt;code&gt;pch&lt;/code&gt;, &lt;code&gt;tip.label.col&lt;/code&gt;) that will affect to the plotting of the tips as labels (namely the distance from the tree, the character size, the character used to plot them, and the colour). Additional parameters can be passed through plot.phylo() function, always with the nomenclature used therein (you can use &lt;code&gt;?ape::plot.phylo&lt;/code&gt; to see the possibilities!).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;par(mfrow=c(1,3), mar=c(10,0,10,0))&#xA;phylomap(centroid.tree, main=&#34;Default output&#34;)&#xA;phylomap(centroid.tree, offset = 0.5, cex = 0.5, pch=&#34;o&#34;, tip.label.col = &#34;#d22030&#34;, main =&#34;Changing tip label options&#34;)&#xA;phylomap(centroid.tree, edge.width=2, edge.color=&#34;#01954b&#34;, main =&#34;Changing tree options&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iramosgutierrez/phyloshapeR/main/man/figures/README-plotting-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;To cite package &#39;phyloshapeR&#39; in publications use:&#xA;&#xA;  Ramos-Gutierrez I (2024). _phyloshapeR: plot phylogenies as maps_.&#xA;  &amp;lt;https://github.com/iramosgutierrez/phyloshapeR&amp;gt;.&#xA;&#xA;A BibTeX entry for LaTeX users is&#xA;&#xA;  @Manual{,&#xA;    title = {phyloshapeR: plot phylogenies as maps},&#xA;    author = {Ignacio Ramos-Gutierrez},&#xA;    year = {2024},&#xA;    url = {https://github.com/iramosgutierrez/phyloshapeR},&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ashlab11/ReplicationGames</title>
    <updated>2024-04-22T01:45:16Z</updated>
    <id>tag:github.com,2024-04-22:/ashlab11/ReplicationGames</id>
    <link href="https://github.com/ashlab11/ReplicationGames" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code for Brown Replication Games, 2024&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ReplicationGames&lt;/h1&gt; &#xA;&lt;p&gt;Code for Brown Replication Games, 2024&lt;/p&gt; &#xA;&lt;p&gt;See our notes in Google doc &lt;a href=&#34;https://docs.google.com/document/d/1KEnIjR83KPIZOM0HCzhpIJ9N0QK56v6huDgQ25rQXAY/edit#heading=h.owdoxw8hubnz&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our Quarto writeup is hosted &lt;a href=&#34;https://raw.githubusercontent.com/ashlab11/ReplicationGames/main/ashlab11.github.io/ReplicationGames/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>