<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-07T01:41:02Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>renatosv1988/eleicao</title>
    <updated>2022-11-07T01:41:02Z</updated>
    <id>tag:github.com,2022-11-07:/renatosv1988/eleicao</id>
    <link href="https://github.com/renatosv1988/eleicao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;eleicao 2022 passe livre&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>ThomasChln/mastodon</title>
    <updated>2022-11-07T01:41:02Z</updated>
    <id>tag:github.com,2022-11-07:/ThomasChln/mastodon</id>
    <link href="https://github.com/ThomasChln/mastodon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R based Mastodon client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastodon&lt;/h1&gt; &#xA;&lt;h2&gt;Installation in R&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;strong&gt;devtools&lt;/strong&gt; R package to install from Github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#39;ThomasChln/mastodon&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;A docker image with the package installed is also available&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;docker run -it thomaschln/mastodon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Login and posts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mastodon)&#xA;token = login(&#39;https://framapiaf.org/&#39;, &#39;user@mail.org&#39;, &#39;password&#39;)&#xA;post_status(token, &#39;Status text&#39;)&#xA;post_media(token, &#39;Image caption&#39;, file = &#39;/home/user/file.png&#39;)&#xA;post_ggplot(token, &#39;Mastodon instances and users&#39;, ggplot_instances_info())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Timelines and hashtags&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df = get_timeline(token, &#39;home&#39;)&#xA;df = get_timeline(token, &#39;local&#39;)&#xA;df = get_timeline(token, &#39;fediverse&#39;)&#xA;df = get_hashtag(token, &#39;rstats&#39;)&#xA;&#xA;# Get more toots (default rate limit: 2 second sleep for each 20 toots)&#xA;df = get_timeline(token, &#39;fediverse&#39;, n = 30)&#xA;df = get_hashtag(token, &#39;mastodon&#39;, n = 30)&#xA;&#xA;# Get toots before a specific id&#xA;df = get_timeline(token, &#39;fediverse&#39;, max_id = 26432)&#xA;df = get_hashtag(token, &#39;mastodon&#39;, max_id = 26432)&#xA;&#xA;# Get hashtag only on local instance&#xA;df = get_hashtag(token, &#39;rstats&#39;, local = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Searches&lt;/h3&gt; &#xA;&lt;p&gt;Search for a string or a username&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df = search(token, &#39;thchln&#39;)&#xA;&#xA;# don&#39;t resolve non-local accounts&#xA;df = search(token, &#39;thchln&#39;, local = TRUE)&#xA;&#xA;df = search_username(token, &#39;thchln&#39;)&#xA;df = search_username(token, &#39;thchln&#39;, limit = 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get an account or a toot by id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;account = get_account(token, 475)&#xA;toot = get_status(token, 26432)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fediverse info and plots&lt;/h3&gt; &#xA;&lt;p&gt;Number of users per instances&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot_instances_info()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://framapiaf.org/media/NcR7nokUey2YYumJgUA&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Participation by hours&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Use a large server&#xA;token = login(&#39;https://mastodon.xyz/&#39;, &#39;user@mail.org&#39;, &#39;password&#39;)&#xA;df_toots = get_timeline(token, &#39;fed&#39;, n = 7e4)&#xA;toots_by_hours(df_toots) %&amp;gt;% ggplot_toots_by_hours(token$instance)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://framapiaf.org/media/gPGdhk2WHa-znyR-bds&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Participation of top 6 instances&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;toots_by_instances(df_toots) %&amp;gt;% ggplot_toots_by_instances(token$instance)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://framapiaf.org/media/JBmR1YZcmX0sAnCVzzI&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Login, posts, and users per instances plot: &lt;a href=&#34;https://pastebin.com/XBiJmbNV&#34;&gt;pastebin script&lt;/a&gt; by &lt;a href=&#34;https://mastodon.cloud/@milvus&#34;&gt;@milvus@mastodon.cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Participation per instances plots: &lt;a href=&#34;http://vintagedata.org/mastodon/cultural_genesis_1.html&#34;&gt;HTML-Rmd vignette&lt;/a&gt; by &lt;a href=&#34;https://mastodon.social/@Dorialexander&#34;&gt;@Dorialexander@mastodon.social&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This package is free and open source software, licensed under GPL-3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pharmaverse/admiral.test</title>
    <updated>2022-11-07T01:41:02Z</updated>
    <id>tag:github.com,2022-11-07:/pharmaverse/admiral.test</id>
    <link href="https://github.com/pharmaverse/admiral.test" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Test SDTM data for use with admiral&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;admiral.test&lt;/h1&gt; &#xA;&lt;p&gt;Test data for the &lt;code&gt;{admiral}&lt;/code&gt; package taken from the &lt;a href=&#34;https://github.com/cdisc-org/sdtm-adam-pilot-project&#34;&gt;CDISC pilot project&lt;/a&gt; and renamed with &lt;code&gt;admiral_&lt;/code&gt; prefix for clarity. As this mostly contains safety data only, we extend this as needed by adding further test data required such as for PK and TA-specific efficacy analyses. See the &#34;How To Update&#34; section below for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The package is available from CRAN and can be installed by running &lt;code&gt;install.packages(&#34;admiral.test&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest development version of the package directly from GitHub use the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&#34;remotes&#34;, quietly = TRUE)) {&#xA;  install.packages(&#34;remotes&#34;)&#xA;}&#xA;&#xA;remotes::install_github(&#34;pharmaverse/admiral.test&#34;, ref = &#34;devel&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;How To Update&lt;/h1&gt; &#xA;&lt;p&gt;Firstly, make a GitHub issue in this repo with the planned updates and tag &lt;code&gt;@pharmaverse/admiral&lt;/code&gt; so that one of the development core team can sanity check the request. Then there are two main ways to extend the test data, either by adding new datasets or extending existing datasets with new records/variables.&lt;/p&gt; &#xA;&lt;h2&gt;Adding New SDTM Datasets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the output dataset name in &lt;code&gt;R/data.R&lt;/code&gt; in the form &lt;code&gt;admiral_&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create a program at &lt;code&gt;inst/data_scripts&lt;/code&gt; named &lt;code&gt;&amp;lt;name&amp;gt;.R&lt;/code&gt; (e.g. &lt;code&gt;rs.R&lt;/code&gt;) to generate the test data and output as &lt;code&gt;admiral_&amp;lt;name&amp;gt;&lt;/code&gt;. Use CDISC pilot data such as &lt;code&gt;admiral_dm&lt;/code&gt; as input in this program in order to create realistic synthetic data that remains consistent with other domains. Note that &lt;strong&gt;no personal data should be used&lt;/strong&gt; as part of this package, even if anonymised.&lt;/li&gt; &#xA; &lt;li&gt;Add the output dataset to &lt;code&gt;data&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;devtools::document()&lt;/code&gt; and include the updated &lt;code&gt;NAMESPACE&lt;/code&gt; and &lt;code&gt;.Rd&lt;/code&gt; files in &lt;code&gt;man/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Existing SDTM Datasets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rename the source dataset as &lt;code&gt;raw_&amp;lt;name&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;raw_ds&lt;/code&gt;) and reflect this change in &lt;code&gt;R/data.R&lt;/code&gt; by including both &lt;code&gt;raw_&amp;lt;name&amp;gt;&lt;/code&gt; and &lt;code&gt;admiral_&amp;lt;name&amp;gt;&lt;/code&gt; here.&lt;/li&gt; &#xA; &lt;li&gt;Create a program at &lt;code&gt;inst/data_scripts&lt;/code&gt; named &lt;code&gt;update_&amp;lt;name&amp;gt;.R&lt;/code&gt; to read in &lt;code&gt;raw_&amp;lt;name&amp;gt;&lt;/code&gt;, make the updates, and output as &lt;code&gt;admiral_&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add the output dataset to &lt;code&gt;data&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;devtools::document()&lt;/code&gt; and include the updated &lt;code&gt;NAMESPACE&lt;/code&gt; and &lt;code&gt;.Rd&lt;/code&gt; files in &lt;code&gt;man/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>