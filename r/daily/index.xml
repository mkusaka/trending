<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-02T01:30:35Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>R-ArcGIS/arcgisplaces</title>
    <updated>2024-05-02T01:30:35Z</updated>
    <id>tag:github.com,2024-05-02:/R-ArcGIS/arcgisplaces</id>
    <link href="https://github.com/R-ArcGIS/arcgisplaces" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;arcgisplaces&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;arcgisplaces is an R package to interface with &lt;a href=&#34;https://developers.arcgis.com/rest/places/&#34;&gt;ArcGIS Places Service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The places service is a ready-to-use location service that can search for businesses and geographic locations around the world. It allows you to find, locate, and discover detailed information about each place.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In order to use &lt;code&gt;{arcgisplaces}&lt;/code&gt; you will need an ArcGIS Developers account. &lt;a href=&#34;https://developers.arcgis.com/documentation/mapping-apis-and-services/get-started/&#34;&gt;Get started here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install a binary of the development version of arcgisplaces from &lt;a href=&#34;https://r-arcgis.r-universe.dev/arcgisplaces&#34;&gt;r-universe&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;arcgisgeocode&#34;, repos = &#34;https://r-arcgis.r-universe.dev&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also need the development version of &lt;a href=&#34;https://github.com/R-ArcGIS/arcgisutils&#34;&gt;&lt;code&gt;{arcgisutils}&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&#34;pak&#34;)) install.packages(&#34;pak&#34;)&#xA;pak::pak(&#34;r-arcgis/arcgisutils&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;Or, you can install the development version from &lt;a href=&#34;https://github.com/r-arcgis/arcgisplaces&#34;&gt;GitHub&lt;/a&gt;. Note the development version requires an installation of Rust. See &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt; for instructions to install Rust.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (requireNamespace(&#34;pak&#34;)) install.packages(&#34;pak&#34;)&#xA;pak::pak(&#34;r-arcgis/arcgisplaces&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Finding places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;near_point()&lt;/code&gt;: search for places near a location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;within_extent()&lt;/code&gt;: search for places within an extent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;place_details()&lt;/code&gt;: get detailed information about the places returned from &lt;code&gt;near_point()&lt;/code&gt; or &lt;code&gt;within_extent()&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note: see &lt;code&gt;fields&lt;/code&gt; for the possible attributes to return for place details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Understanding categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;categories()&lt;/code&gt;: find categories by name or ID.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;category_details()&lt;/code&gt;: get detailed information about the categories returned from &lt;code&gt;categories()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Find place attributes such as name, address, description, opening hours, price ratings, user ratings, and social links.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;arcgisutils&lt;/code&gt; is needed for authentication. The Places API supports either using an API key via &lt;code&gt;auth_key()&lt;/code&gt; or one generated via OAuth2 using either &lt;code&gt;auth_client()&lt;/code&gt; or &lt;code&gt;auth_code()&lt;/code&gt;. See &lt;a href=&#34;https://developers.arcgis.com/rest/places/#authentication&#34;&gt;API documentation&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(arcgisutils)&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;arcgisutils&#39;&#xA;#&amp;gt; The following object is masked from &#39;package:base&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     %||%&#xA;library(arcgisplaces)&#xA;&#xA;# Authenticate with a Developer Account API Key&#xA;token &amp;lt;- auth_key()&#xA;set_arc_token(token)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Place search&lt;/h2&gt; &#xA;&lt;p&gt;You can &lt;strong&gt;search for places near a location&lt;/strong&gt; with &lt;code&gt;near_point()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;coffee &amp;lt;- near_point(x = -122.334, y = 47.655, search_text = &#34;Coffee&#34;)&#xA;coffee&#xA;#&amp;gt; Simple feature collection with 6 features and 5 fields&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: -1122.334 ymin: -952.345 xmax: 877.666 ymax: 1047.655&#xA;#&amp;gt; Geodetic CRS:  WGS 84&#xA;#&amp;gt;                           place_id                                 name&#xA;#&amp;gt; 1 f6059fc575735b5e3f558c96ab69e6f6 Irwin&#39;s Neighborhood Bakery and Cafe&#xA;#&amp;gt; 2 88a10ccf031f02ef2697591f72e1e169                          Fuel Coffee&#xA;#&amp;gt; 3 a8c6da1aa0d08fe96e5d80d0f3b3de03                     Friday Afternoon&#xA;#&amp;gt; 4 906da2fe5164619199a2f2ba9c99a650                            Starbucks&#xA;#&amp;gt; 5 d49bac9ae79ebfc88dc2c070ad0ee91c                    HHD Heuk Hwa Dang&#xA;#&amp;gt; 6 4bdfa82268e67a698d0b8ea3d2df3853                          A Muddy Cup&#xA;#&amp;gt;   distance   categories icon                   geometry&#xA;#&amp;gt; 1     97.0 c(&#34;13002.... &amp;lt;NA&amp;gt; POINT (-122.3328 47.65539)&#xA;#&amp;gt; 2    723.8 c(&#34;13035.... &amp;lt;NA&amp;gt; POINT (-122.3369 47.66122)&#xA;#&amp;gt; 3    740.8 c(&#34;13036.... &amp;lt;NA&amp;gt;  POINT (-122.342 47.65895)&#xA;#&amp;gt; 4    767.3 13035, C.... &amp;lt;NA&amp;gt; POINT (-122.3361 47.66175)&#xA;#&amp;gt; 5    964.1 13033, B.... &amp;lt;NA&amp;gt; POINT (-122.3425 47.66153)&#xA;#&amp;gt; 6    964.2 c(&#34;13035.... &amp;lt;NA&amp;gt; POINT (-122.3255 47.66149)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Locations are returned as an sf object with the place ID, the place name, distance from the search point, a character vector of categories.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;arcgisplaces&lt;/code&gt; will return an sf object, but the sf package is not required to work with the package. The &lt;code&gt;sf&lt;/code&gt; print method will not be used unless the package is loaded. If package size is a consideration—i.e.&amp;nbsp;deploying an app in a Docker container—consider using &lt;code&gt;wk&lt;/code&gt; or &lt;code&gt;rsgeo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Details for the places can be fetched using &lt;code&gt;place_details()&lt;/code&gt;. The possible fields are &lt;a href=&#34;https://developers.arcgis.com/rest/places/place-id-get/#requestedfields&#34;&gt;documented online&lt;/a&gt; as well as contained in the exported vector &lt;code&gt;fields&lt;/code&gt;. Because pricing is dependent upon which fields are requested, it is a required argument.&lt;/p&gt; &#xA;&lt;p&gt;To get the add &lt;code&gt;requested_fields = &#34;hours&#34;&lt;/code&gt;. Note, that the other possible fields will still be present in the result, but completely empty.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;details &amp;lt;- place_details(&#xA;  coffee$place_id,&#xA;  requested_fields = &#34;rating&#34;,&#xA;  .progress = FALSE # remove progress bar&#xA;)&#xA;&#xA;details[c(&#34;price&#34;, &#34;user&#34;)]&#xA;#&amp;gt; Simple feature collection with 6 features and 2 fields&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: Inf ymin: Inf xmax: -Inf ymax: -Inf&#xA;#&amp;gt; Geodetic CRS:  WGS 84&#xA;#&amp;gt;      price user    location&#xA;#&amp;gt; 1    Cheap  4.0 POINT EMPTY&#xA;#&amp;gt; 2    Cheap  3.9 POINT EMPTY&#xA;#&amp;gt; 3 Moderate   NA POINT EMPTY&#xA;#&amp;gt; 4    Cheap  3.4 POINT EMPTY&#xA;#&amp;gt; 5     &amp;lt;NA&amp;gt;   NA POINT EMPTY&#xA;#&amp;gt; 6    Cheap  3.9 POINT EMPTY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can search for places within a bounding box using &lt;code&gt;within_extent()&lt;/code&gt;. This could be quite handy for searching within current map bounds, for example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bakeries &amp;lt;- within_extent(&#xA;  -70.356, 43.588, -70.176, 43.7182,&#xA;  category_id = &#34;13002&#34;&#xA;)&#xA;&#xA;bakeries[c(&#34;name&#34;)]&#xA;#&amp;gt; Simple feature collection with 29 features and 1 field&#xA;#&amp;gt; Geometry type: POINT&#xA;#&amp;gt; Dimension:     XY&#xA;#&amp;gt; Bounding box:  xmin: -70.356 ymin: 43.588 xmax: -70.176 ymax: 43.7182&#xA;#&amp;gt; Geodetic CRS:  WGS 84&#xA;#&amp;gt; First 10 features:&#xA;#&amp;gt;                       name                   geometry&#xA;#&amp;gt; 1           Crumbl Cookies POINT (-70.33067 43.67675)&#xA;#&amp;gt; 2       Electric Bike Cafe  POINT (-70.2864 43.63655)&#xA;#&amp;gt; 3  Gross Confection Bakery POINT (-70.25428 43.65763)&#xA;#&amp;gt; 4           Dina’s Cuisine POINT (-70.28725 43.67695)&#xA;#&amp;gt; 5           Lolli and Pops POINT (-70.33512 43.63377)&#xA;#&amp;gt; 6    C Salt Gourmet Market  POINT (-70.2271 43.59174)&#xA;#&amp;gt; 7          Bread &amp;amp; Friends POINT (-70.25693 43.65514)&#xA;#&amp;gt; 8     BenReuben’s Knishery POINT (-70.25299 43.63748)&#xA;#&amp;gt; 9        Katie Made Bakery POINT (-70.24992 43.66449)&#xA;#&amp;gt; 10           Cinnamon Girl POINT (-70.27412 43.68086)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>