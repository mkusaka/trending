<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-18T01:38:08Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nidiavanessacr/Practica_21</title>
    <updated>2023-10-18T01:38:08Z</updated>
    <id>tag:github.com,2023-10-18:/nidiavanessacr/Practica_21</id>
    <link href="https://github.com/nidiavanessacr/Practica_21" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Practica_21&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>nicucalcea/Ra11y</title>
    <updated>2023-10-18T01:38:08Z</updated>
    <id>tag:github.com,2023-10-18:/nicucalcea/Ra11y</id>
    <link href="https://github.com/nicucalcea/Ra11y" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of accessibility functions for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ra11y: A collection of accessibilty features for ggplot2 charts&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/#colour-blindness&#34;&gt;Colour blindness&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/#alt-text&#34;&gt;Alt text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/#contrast&#34;&gt;Contrast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/#todo&#34;&gt;Todo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are a few functions here that I wrote for personal/professional use. Feel free to use them or &lt;a href=&#34;https://github.com/nicucalcea/ggspell/issues&#34;&gt;suggest new ones&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;nicucalcea/Ra11y&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then load it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(Ra11y)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Colour blindness&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Ra11y&lt;/code&gt; includes a function that automatically extracts geom &lt;code&gt;fill&lt;/code&gt; and &lt;code&gt;colour&lt;/code&gt; properties and checks if they’re safe to use together. If they are not, it will print out the possibly unsafe combinations to the console and suggest a simulation of what the plot looks like with different types of colour blindness.&lt;/p&gt; &#xA;&lt;p&gt;Let’s look at an example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;starwars &amp;lt;- dplyr::starwars |&amp;gt; &#xA;  tidyr::drop_na(height, mass, gender)&#xA;&#xA;starwars_plot &amp;lt;- starwars |&amp;gt;&#xA;  ggplot(aes(x = height, y = mass, colour = gender)) +&#xA;  geom_point(size = 4) +&#xA;  scale_colour_manual(values = c(&#34;red&#34;, &#34;darkgreen&#34;))&#xA;&#xA;starwars_plot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm/unnamed-chunk-4-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;This chart uses two colours, &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;darkgreen&lt;/code&gt;. While those colours look very distinct to most people, they could look similar for some with colour blindness, in this case, protanomaly.&lt;/p&gt; &#xA;&lt;p&gt;Let’s test that theory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;test_plot(starwars_plot, test = &#34;cvd&#34;) # CVD stands for Colour Vision Deficiency&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm//unnamed-chunk-5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt; If you run the suggested command (you’ll need a &lt;a href=&#34;https://github.com/clauswilke/colorblindr&#34;&gt;separate package&lt;/a&gt; for that), you can see exactly where the problem is. The protanomaly version of the chart has nearly identical colours for both sets of dots.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;colorblindr::cvd_grid(starwars_plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm/unnamed-chunk-6-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should change the colours to something a bit easier to differentiate.&lt;/p&gt; &#xA;&lt;p&gt;Note that the warning is just a suggestions, colours that are deemed unsafe could be okay to use if, for example, the difference is shown with another dimension (shape, size, etc). This is just a reminder to check.&lt;/p&gt; &#xA;&lt;h1&gt;Alt text&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; &lt;a href=&#34;https://github.com/tidyverse/ggplot2/issues/4477&#34;&gt;has some rudimentary support&lt;/a&gt; for &lt;a href=&#34;https://en.wikipedia.org/wiki/Alt_attribute&#34;&gt;alt text&lt;/a&gt;. So far, it gets automatically embedded in R Markdown (what you’re reading now) and Quarto documents and outputed to HTML. This function nudges you to add alt text if you don’t have it, and displays it in the console if you do.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;test_plot(starwars_plot, test = &#34;alt&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm//unnamed-chunk-7.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let’s add some alt text.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;starwars_plot &amp;lt;- starwars_plot +&#xA;  labs(alt = paste0(&#34;Scatter plot of Star Wars characters, with height plotted on the x-axis and mass on the y-axis. The dots are coloured by gender. Generally-speaking, height and mass are correlated. The heaviest character is &#34;, starwars$name[starwars$mass == max(starwars$mass)], &#34;.&#34;))&#xA;&#xA;test_plot(starwars_plot, test = &#34;alt&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm//unnamed-chunk-8.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;My particular use case is to have a reminder to write good, descriptive alt text for charts that end up being published online.&lt;/p&gt; &#xA;&lt;p&gt;Of course, you can run both tests in one go.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;test_plot(starwars_plot)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm//unnamed-chunk-9.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, I would recommend checking your plot’s spelling (including the alt text) with &lt;a href=&#34;https://github.com/nicucalcea/ggspell&#34;&gt;&lt;code&gt;ggspell&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contrast&lt;/h1&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;contrast()&lt;/code&gt; to automatically set the text colour so that it’s legible on your background.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;contrast(&#34;darkred&#34;) # returns white&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;white&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;contrast(&#34;yellow&#34;, dark_col = &#34;#222222&#34;) # returns off-black&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;#222222&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use this nifty shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;grid_data &amp;lt;- expand.grid(X = LETTERS[1:10], Y = paste0(&#34;var&#34;, seq(1, 10)))&#xA;grid_data$Z &amp;lt;- runif(100, 0, 5)&#xA;&#xA;ggplot(grid_data, aes(X, Y, fill = Z)) + &#xA;  geom_tile() +&#xA;  geom_text(aes(label = Y, !!!autocontrast))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicucalcea/Ra11y/main/README_files/figure-gfm/unnamed-chunk-11-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check for minimum text size&lt;/li&gt; &#xA; &lt;li&gt;Implement a &lt;a href=&#34;https://marijohannessen.github.io/color-contrast-checker/&#34;&gt;contrast check for plots&lt;/a&gt;. Here’s an &lt;a href=&#34;https://github.com/jasonday/color-contrast&#34;&gt;example for HTML&lt;/a&gt; and &lt;a href=&#34;https://github.com/csstools/postcss-wcag-contrast&#34;&gt;one for CSS&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check if alt text is too short, too long, doesn’t contain certain keywords (chart, graph, graphic, plot, etc.). Perhaps only activated with a &lt;code&gt;strict&lt;/code&gt; param.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>