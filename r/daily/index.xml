<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-02T01:35:33Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>frankiethull/kuzco</title>
    <updated>2025-06-02T01:35:33Z</updated>
    <id>tag:github.com,2025-06-02:/frankiethull/kuzco</id>
    <link href="https://github.com/frankiethull/kuzco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LLM image classification library using ollama in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kuzco &lt;img src=&#34;https://raw.githubusercontent.com/frankiethull/kuzco/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;108&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;{kuzco} is a simple vision boilerplate built for ollama in R, on top of {ollamar} &amp;amp; {ellmer}. {kuzco} is designed as a computer vision assistant, giving local models guidance on classifying images and return structured data. The goal is to standardize outputs for image classification and use LLMs as an alternative option to keras or torch.&lt;/p&gt; &#xA;&lt;p&gt;{kuzco} currently supports: classification, recognition, sentiment, and text extraction.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of kuzco like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;frankiethull/kuzco&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;This is a basic example which shows you how to use kuzco.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(kuzco)&#xA;library(ollamar)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;here we have an image and want to learn about it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;test_img &amp;lt;- file.path(system.file(package = &#34;kuzco&#34;), &#34;img/test_img.jpg&#34;) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frankiethull/kuzco/refs/heads/main/inst/img/test_img.jpg&#34; alt=&#34;picture of puppy odin circa 2019.&#34;&gt; &#xA; &lt;figcaption aria-hidden=&#34;true&#34;&gt;&#xA;  picture of puppy odin circa 2019.&#xA; &lt;/figcaption&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h3&gt;llm for image classification:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;llm_results &amp;lt;- llm_image_classification(llm_model = &#34;qwen2.5vl&#34;, image = test_img, &#xA;                                        backend = &#39;ollamar&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;llm_results |&amp;gt; tibble::as_tibble()&#xA;#&amp;gt; # A tibble: 1 × 7&#xA;#&amp;gt;   image_classification primary_object secondary_object image_description        &#xA;#&amp;gt;   &amp;lt;chr&amp;gt;                &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;                    &#xA;#&amp;gt; 1 puppy                puppy          face             a close-up of a puppy wi…&#xA;#&amp;gt; # ℹ 3 more variables: image_colors &amp;lt;chr&amp;gt;, image_proba_names &amp;lt;list&amp;gt;,&#xA;#&amp;gt; #   image_proba_values &amp;lt;list&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;llm_results |&amp;gt; str()&#xA;#&amp;gt; &#39;data.frame&#39;:    1 obs. of  7 variables:&#xA;#&amp;gt;  $ image_classification: chr &#34;puppy&#34;&#xA;#&amp;gt;  $ primary_object      : chr &#34;puppy&#34;&#xA;#&amp;gt;  $ secondary_object    : chr &#34;face&#34;&#xA;#&amp;gt;  $ image_description   : chr &#34;a close-up of a puppy with a mix of black and white fur, looking directly at the camera with a curious expression.&#34;&#xA;#&amp;gt;  $ image_colors        : chr &#34;#000000, #FFFFFF, #808080&#34;&#xA;#&amp;gt;  $ image_proba_names   :List of 1&#xA;#&amp;gt;   ..$ : chr &#34;puppy, puppy face, fur, eyes, nose&#34;&#xA;#&amp;gt;  $ image_proba_values  :List of 1&#xA;#&amp;gt;   ..$ : chr &#34;0.7, 0.2, 0.05, 0.05, 0.05&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;llm for image sentiment:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;llm_emotion &amp;lt;- llm_image_sentiment(llm_model = &#34;qwen2.5vl&#34;, image = test_img)&#xA;&#xA;llm_emotion |&amp;gt; str()&#xA;#&amp;gt; &#39;data.frame&#39;:    1 obs. of  4 variables:&#xA;#&amp;gt;  $ image_sentiment      : chr &#34;positive&#34;&#xA;#&amp;gt;  $ image_score          : num 0.9&#xA;#&amp;gt;  $ sentiment_description: chr &#34;The image evokes a very positive emotional response, particularly warmth and joy due to the adorable puppy.&#34;&#xA;#&amp;gt;  $ image_keywords       : chr &#34;cute, fluffy, happy&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;llm for image recognition:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;llm_detection &amp;lt;- llm_image_recognition(llm_model = &#34;qwen2.5vl&#34;, &#xA;                                       image = test_img,&#xA;                                       recognize_object = &#34;nose&#34;,&#xA;                                       backend  = &#34;ollamar&#34;)&#xA;&#xA;llm_detection |&amp;gt; str()&#xA;#&amp;gt; &#39;data.frame&#39;:    1 obs. of  4 variables:&#xA;#&amp;gt;  $ object_recognized : chr &#34;yes&#34;&#xA;#&amp;gt;  $ object_count      : int 1&#xA;#&amp;gt;  $ object_description: chr &#34;The nose is black and is located in the center of the image, slightly below the eyes.&#34;&#xA;#&amp;gt;  $ object_location   : chr &#34;center&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>