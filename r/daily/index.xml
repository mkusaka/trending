<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-31T01:54:17Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>petergandenberger/dashboard-builder</title>
    <updated>2022-07-31T01:54:17Z</updated>
    <id>tag:github.com,2022-07-31:/petergandenberger/dashboard-builder</id>
    <link href="https://github.com/petergandenberger/dashboard-builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dashboard-builder&lt;/h1&gt; &#xA;&lt;p&gt;The dashboard-builder is still in development. If you have any questions or feedback please don&#39;t hesitate to reach out to me via email or github.&lt;/p&gt; &#xA;&lt;h2&gt;pre-requisits&lt;/h2&gt; &#xA;&lt;p&gt;To run the dashboard-builder and any exported dashboards you need to install the gridstackeR package &lt;code&gt;devtools::install_github(&#34;https://github.com/petergandenberger/gridstackeR&#34;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://pega.shinyapps.io/dashboard-builder/&#34;&gt;demo available online&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;There are four steps in creating shiny apps with the dashboard builder&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Import data&lt;/li&gt; &#xA; &lt;li&gt;Create Elements&lt;/li&gt; &#xA; &lt;li&gt;Export the Dashboard&lt;/li&gt; &#xA; &lt;li&gt;Improve and Extend&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;p&gt;Please have a look at &lt;a href=&#34;https://sched.co/11ibG&#34;&gt;my talk at rstudio::conf(2022) introducing the dashboard-builder&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hoga-it/leafdown</title>
    <updated>2022-07-31T01:54:17Z</updated>
    <id>tag:github.com,2022-07-31:/hoga-it/leafdown</id>
    <link href="https://github.com/hoga-it/leafdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;leafdown: drilldown functionality for leaflet choropleths&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;leafdown &lt;a&gt;&lt;img id=&#34;leafdown-hex&#34; src=&#34;https://raw.githubusercontent.com/hoga-it/leafdown/master/man/figures/hex-leafdown.png&#34; align=&#34;right&#34; height=&#34;139px&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hoga-it/leafdown/actions&#34;&gt;&lt;img src=&#34;https://github.com/hoga-it/leafdown/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The leafdown package provides drilldown functionality for leaflet choropleths in R Shiny apps.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hoga-it/leafdown/master/man/figures/select_drilldown.PNG&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the released version of leafdown from &lt;a href=&#34;https://CRAN.R-project.org&#34;&gt;CRAN&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;leafdown&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the development version from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;hoga-it/leafdown&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation &lt;a href=&#34;https://hoga-it.github.io/leafdown/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adds drilldown functionality for &lt;a href=&#34;https://rstudio.github.io/leaflet/choropleths.html&#34;&gt;leaflet choropleths&lt;/a&gt; maps.&lt;/li&gt; &#xA; &lt;li&gt;Allows the selection of regions/shapes.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use and well-integrated into syntax of the &lt;a href=&#34;https://rstudio.github.io/leaflet/&#34;&gt;leaflet&lt;/a&gt; R package.&lt;/li&gt; &#xA; &lt;li&gt;Allows communication of the map with other shiny elements (e.g.&amp;nbsp;graphs).&lt;/li&gt; &#xA; &lt;li&gt;Computationally efficient as drilldown is only executed for selected regions of interest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Showcase - Election Map&lt;/h2&gt; &#xA;&lt;p&gt;To showcase the features of the &lt;code&gt;leafdown&lt;/code&gt; package we have created a demo app. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This app shows the 2016 us presidential election results as well as some demographic information.&lt;br&gt; Click here for the &lt;a href=&#34;https://pega.shinyapps.io/election16/&#34;&gt;full demo app&lt;/a&gt; and here for the &lt;a href=&#34;https://hoga-it.github.io/leafdown/articles/Showcase_electionapp.html&#34;&gt;documentation&lt;/a&gt;. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hoga-it/leafdown/master/man/figures/app_election_map.png&#34;&gt; &#xA;&lt;h2&gt;Showcase - healthdown&lt;/h2&gt; &#xA;&lt;p&gt;The healthdown app allows interactive comparison of various health factors at the U.S. state and county level. It was honored as “Runners up” in the Shiny Contest 2021.&lt;/p&gt; &#xA;&lt;p&gt;Link to healthdown: &lt;a href=&#34;https://hoga.shinyapps.io/healthdown/&#34;&gt;https://hoga.shinyapps.io/healthdown/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code: &lt;a href=&#34;https://github.com/hoga-it/healthdown&#34;&gt;https://github.com/hoga-it/healthdown&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hoga-it/leafdown/master/man/figures/healthdown_app.jpg&#34;&gt;</summary>
  </entry>
  <entry>
    <title>coolbutuseless/anotherworld</title>
    <updated>2022-07-31T01:54:17Z</updated>
    <id>tag:github.com,2022-07-31:/coolbutuseless/anotherworld</id>
    <link href="https://github.com/coolbutuseless/anotherworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AnotherWorld ported to R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;AnotherWorld&lt;/code&gt; playable game in R&lt;/h1&gt; &#xA;&lt;p&gt;This is the full code for a playable R version of the 16-bit game &lt;a href=&#34;https://en.wikipedia.org/wiki/Another_World_(video_game)&#34;&gt;&lt;code&gt;AnotherWorld&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The game plays in realtime using 2 key packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/nara&#34;&gt;&lt;code&gt;{nara}&lt;/code&gt;&lt;/a&gt; for manipulation of &lt;em&gt;nativeRaster&lt;/em&gt; images as a fast in-memory drawing canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/eventloop&#34;&gt;&lt;code&gt;{eventloop}&lt;/code&gt;&lt;/a&gt; for event-driven interaction - allowing for keyboard feedback while rendering the game with sound.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;You can play this game &lt;em&gt;today&lt;/em&gt; in R!!&lt;/h3&gt; &#xA;&lt;p&gt;However, there are still some graphics bugs etc to work out.&lt;/p&gt; &#xA;&lt;p&gt;Please file an issue on github if you think something is definitely wrong!&lt;/p&gt; &#xA;&lt;h2&gt;Gameplay in R&lt;/h2&gt; &#xA;&lt;p&gt;A live capture of playing the game in R&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/anotherworld.gif&#34; width=&#34;70%&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/nara&#34;&gt;&lt;code&gt;{nara}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coolbutuseless/eventloop&#34;&gt;&lt;code&gt;{eventloop}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Retrieve the anotherworld game code from &lt;a href=&#34;https://github.com/coolbutuseless/anotherworld&#34;&gt;github&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that this is &lt;em&gt;not&lt;/em&gt; a package, but just a collection of R scripts and code. This should make it easier to hack on, extend and adapt.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(remotes)&#xA;&#xA;# Install dependencies&#xA;remotes::install_github(&#39;coolbutuseless/eventloop&#39;)&#xA;remotes::install_github(&#39;coolbutuseless/nara&#39;)&#xA;&#xA;# Install packages&#xA;install.packages(&#39;audio&#39;)&#xA;install.packages(&#39;beepr&#39;)&#xA;&#xA;# Grab a copy of the code (this is not distributed as a package)&#xA;system(&#34;git clone https://github.com/coolbutuseless/anotherworld&#34;)&#xA;setwd(&#39;anotherworld&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Controls&lt;/h2&gt; &#xA;&lt;p&gt;After your experiment on Earth goes awry, you are transported to &lt;em&gt;another world&lt;/em&gt; where you must survive and, hopefully, escape!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run game with &lt;code&gt;source(&#39;game.R&#39;)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;PART&lt;/code&gt; variable first to the section you want to play.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Control game with arrow keys and space bar (for action)&lt;/li&gt; &#xA; &lt;li&gt;Press &#39;p&#39; to pause&lt;/li&gt; &#xA; &lt;li&gt;Press &#39;ESC&#39; to quit&lt;/li&gt; &#xA; &lt;li&gt;When you finish a section the game does not automatically advance to the next section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Play the game&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;16001&lt;/strong&gt; &#34;Introduction&#34;: cinematic introduction. No user interactivity&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16002&lt;/strong&gt; &#34;Water&#34;: If you want to get to playing the game, this is the section to run. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hint: Press &#34;Up&#34; at the start when it looks like you&#39;re underwater.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16003&lt;/strong&gt; &#34;Jail&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16004&lt;/strong&gt; &#34;City&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16005&lt;/strong&gt; &#34;Arena&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16006&lt;/strong&gt; &#34;Luxe&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16007&lt;/strong&gt; &#34;Final&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;PART &amp;lt;- 16001  # &amp;lt;------- select the part of the game to play&#xA;source(&#39;game.R&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GamePlay&lt;/h2&gt; &#xA;&lt;h4&gt;Game walkthrough on the Amiga&lt;/h4&gt; &#xA;&lt;p&gt;This looks pretty similar to the R version as it&#39;s running on the same in-game virtual machine.&lt;/p&gt; &#xA;&lt;p&gt;Click the image below to watch it on youtube.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=utrxk5_PeEY&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/utrxk5_PeEY/0.jpg&#34; alt=&#34;AnotherWorld gameplay&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Screenshots of the R version&lt;/h4&gt; &#xA;&lt;div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/01.png&#34;&gt;&#xA; &lt;/div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/02.png&#34;&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/03.png&#34;&gt;&#xA; &lt;/div&gt; &#xA; &lt;div style=&#34;float: left; width: 45%;&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/anotherworld/main/image/04.png&#34;&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;ToDo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Audio not yet working on Unix. Help needed. What&#39;s a good command line audio playback utility that everyone can install easily?&lt;/li&gt; &#xA; &lt;li&gt;Controls still feel a bit &#34;sticky&#34;. This feels like a bug in my code.&lt;/li&gt; &#xA; &lt;li&gt;Incorporate display of pre-rendered bitmaps which are part of the in-game data &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You&#39;ll notice some scenes are a little blank because these bitmaps aren&#39;t drawn yet.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Still some rendering anomalies&lt;/li&gt; &#xA; &lt;li&gt;See if I can get sound playback with &lt;code&gt;{audio}&lt;/code&gt; package working correctly&lt;/li&gt; &#xA; &lt;li&gt;While there are sound effects in the R version, there is currently no music.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running this on macOS requires &lt;a href=&#34;https://www.xquartz.org/&#34;&gt;XQuartz&lt;/a&gt; to have been installed in order to support the &lt;code&gt;x11()&lt;/code&gt; device.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;R needs to have been compiled with &lt;code&gt;x11()&lt;/code&gt; and Cairo support.&lt;/p&gt; &#xA;&lt;h2&gt;Limitation - WindowsOS&lt;/h2&gt; &#xA;&lt;p&gt;The WindowsOS version of R does not currently have support for the &lt;code&gt;onIdle&lt;/code&gt; callback and therefore does not support event-driven interactive graphics as implemented in the &lt;code&gt;{eventloop}&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are a windows developer capable of adding support for an &lt;code&gt;onIdle&lt;/code&gt; callback to R itself, please get in touch!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Limitation - Flickering Cursor&lt;/h2&gt; &#xA;&lt;p&gt;The cursor icon in an &lt;code&gt;{eventloop}&lt;/code&gt; window will flicker because of some hard-coded behaviour in R&#39;s double-buffered &lt;code&gt;x11()&lt;/code&gt; graphics device.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{eventloop}&lt;/code&gt; makes use of the &lt;code&gt;x11()&lt;/code&gt; graphics device with a double-buffered backend based on Cairo (&lt;code&gt;x11(type = &#39;dbcairo&#39;)&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The double-buffering within the graphics device is coordinated through use of &lt;code&gt;dev.hold()&lt;/code&gt; and &lt;code&gt;dev.flush()&lt;/code&gt; calls.&lt;/p&gt; &#xA;&lt;p&gt;Whenever &lt;code&gt;dev.hold()&lt;/code&gt; is called, the cursor will be set to the busy cursor (usually a stopwatch on macOS), and when &lt;code&gt;dev.flush()&lt;/code&gt; is called the cursor reverts to a normal pointer arrow.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;code&gt;dev.hold()&lt;/code&gt; and &lt;code&gt;dev.flush()&lt;/code&gt; are called when drawing every single frame, the cursor will flicker between these two images.&lt;/p&gt; &#xA;&lt;p&gt;The interim solution is to not have the cursor over the window when interacting with the app. This only really works when the app solely relies on keyboard feedback (like this game of AnotherWorld).&lt;/p&gt; &#xA;&lt;p&gt;The more complicated solution will involve crafting a patch to R itself to make the cursor change behaviour user-configurable rather than hard-coded.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are are an R developer capable of crafting such a patch to R , please get in touch with me!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference Source Code&lt;/h2&gt; &#xA;&lt;p&gt;The reference code for this port was the JavaScript code from &lt;a href=&#34;https://github.com/cyxx/another_js&#34;&gt;github/cyxx/another_js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Further details have been extracted from the C code from &lt;a href=&#34;https://github.com/fabiensanglard/Another-World-Bytecode-Interpreter&#34;&gt;Fabien&#39;s C++ Interpreter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Challenges&lt;/h2&gt; &#xA;&lt;h3&gt;0-based vs 1-based indexing&lt;/h3&gt; &#xA;&lt;p&gt;Javascript and C code used for reference both use 0-based indexing, whereas R uses 1-based indexing.&lt;/p&gt; &#xA;&lt;p&gt;To try and avoid editing all references to array indexint to &lt;code&gt;+1&lt;/code&gt;, I created a new class &lt;code&gt;cindex&lt;/code&gt; which has 1-based indexing in R.&lt;/p&gt; &#xA;&lt;p&gt;There still a lot of refacoring to do, and many structures are still indexed by a character string representation of the hexadecimal version of the index or address i.e. ugly.&lt;/p&gt; &#xA;&lt;h3&gt;bitwise operations&lt;/h3&gt; &#xA;&lt;p&gt;JS and C both use &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; for bitwise operations, whereas R uses them for logical operations.&lt;/p&gt; &#xA;&lt;p&gt;I created a set of infix operators (&lt;code&gt;%|%&lt;/code&gt; etc) to mimic the bitwise operators in C.&lt;/p&gt; &#xA;&lt;h3&gt;&#39;Bytekiller&#39; compression&lt;/h3&gt; &#xA;&lt;p&gt;Data in the original game is compressed with &#39;bytekiller&#39; which is a very very old skool data compression algorithm.&lt;/p&gt;</summary>
  </entry>
</feed>