<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-23T01:57:14Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stemangiola/tidyHeatmap</title>
    <updated>2024-10-23T01:57:14Z</updated>
    <id>tag:github.com,2024-10-23:/stemangiola/tidyHeatmap</id>
    <link href="https://github.com/stemangiola/tidyHeatmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Draw heatmap simply using a tidy data frame&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tidyHeatmap&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-maturing-blue.svg?sanitize=true&#34; alt=&#34;Lifecycle:maturing&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.21105/joss.02472&#34;&gt;&lt;img src=&#34;https://joss.theoj.org/papers/10.21105/joss.02472/status.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Mangiola et al., (2020). tidyHeatmap: an R package for modular heatmap production based on tidy principles. Journal of Open Source Software, 5(52), 2472, &lt;a href=&#34;https://doi.org/10.21105/joss.02472&#34;&gt;https://doi.org/10.21105/joss.02472&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please have a look also to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stemangiola/tidygate/&#34;&gt;tidygate&lt;/a&gt; for adding custom gate information to your tibble&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stemangiola.github.io/tidySingleCellExperiment/&#34;&gt;tidySingleCellExperiment&lt;/a&gt; for tidy manipulation of Seurat objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stemangiola.github.io/tidyseurat/&#34;&gt;tidyseurat&lt;/a&gt; for tidy manipulation of Seurat objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stemangiola.github.io/tidybulk/&#34;&gt;tidybulk&lt;/a&gt; for tidy high-level data analysis and manipulation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stemangiola.github.io/tidySummarizedExperiment/&#34;&gt;tidySummarizedExperiment&lt;/a&gt; for heatmaps produced with tidy principles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;website: &lt;a href=&#34;https://stemangiola.github.io/tidyHeatmap/&#34;&gt;stemangiola.github.io/tidyHeatmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tidyHeatmap&lt;/code&gt; is a package that introduces tidy principles to the creation of information-rich heatmaps. This package uses &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/ComplexHeatmap.html&#34;&gt;ComplexHeatmap&lt;/a&gt; as graphical engine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modular annotation with just specifying column names&lt;/li&gt; &#xA; &lt;li&gt;Custom grouping of rows is easy to specify providing a grouped tbl. For example &lt;code&gt;df |&amp;gt; group_by(...)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Labels size adjusted by row and column total number&lt;/li&gt; &#xA; &lt;li&gt;Default use of Brewer and Viridis palettes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Functions/utilities available&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;heatmap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Plots base heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;group_by&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr&lt;/code&gt; function - groups heatpmap rows/columns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;annotation_tile&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds tile annotation to the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;annotation_point&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds point annotation to the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;annotation_bar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds bar annotation to the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;annotation_line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds line annotation to the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add layer of text on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_point&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_square&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_diamond&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_arrow_up&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_arrow_down&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_star&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layer_asterisk&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add layer of symbols on top of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;split_rows&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Splits the rows based on the dendogram&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;split_columns&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Splits the columns based on the dendogram&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;save_pdf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Saves the PDF of the heatmap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrate heatmaps side-by-side&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;as_ComplexHeatmap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Convert the tidyHeatmap output to ComplexHeatmap for non-standard “drawing”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;wrap_heatmap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows the integration with the &lt;code&gt;patchwork&lt;/code&gt; package&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the most up-to-date version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;stemangiola/tidyHeatmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the most stable version (however please keep in mind that this package is under a maturing lifecycle stage)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;tidyHeatmap&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to the software, report issues or problems with the software or seek support please open an issue &lt;a href=&#34;https://github.com/stemangiola/tidyHeatmap/issues&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Input data frame&lt;/h2&gt; &#xA;&lt;p&gt;The heatmaps visualise a multi-element, multi-feature dataset, annotated with independent variables. Each observation is a element-feature pair (e.g., person-physical characteristics).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;element&lt;/th&gt; &#xA;   &lt;th&gt;feature&lt;/th&gt; &#xA;   &lt;th&gt;value&lt;/th&gt; &#xA;   &lt;th&gt;independent_variables&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;chr&lt;/code&gt; or &lt;code&gt;fctr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;chr&lt;/code&gt; or &lt;code&gt;fctr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;…&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Let’s transform the mtcars dataset into a tidy “element-feature-independent variables” data frame. Where the independent variables in this case are ‘hp’ and ‘vs’.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy &amp;lt;- &#xA;    mtcars |&amp;gt; &#xA;    as_tibble(rownames=&#34;Car name&#34;) |&amp;gt; &#xA;    &#xA;    # Scale&#xA;    mutate_at(vars(-`Car name`, -hp, -vs), scale) |&amp;gt;&#xA;    &#xA;    # tidyfy&#xA;    pivot_longer(cols = -c(`Car name`, hp, vs), names_to = &#34;Property&#34;, values_to = &#34;Value&#34;)&#xA;&#xA;mtcars_tidy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 288 × 5&#xA;##    `Car name`       hp    vs Property Value[,1]&#xA;##    &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;&#xA;##  1 Mazda RX4       110     0 mpg          0.151&#xA;##  2 Mazda RX4       110     0 cyl         -0.105&#xA;##  3 Mazda RX4       110     0 disp        -0.571&#xA;##  4 Mazda RX4       110     0 drat         0.568&#xA;##  5 Mazda RX4       110     0 wt          -0.610&#xA;##  6 Mazda RX4       110     0 qsec        -0.777&#xA;##  7 Mazda RX4       110     0 am           1.19 &#xA;##  8 Mazda RX4       110     0 gear         0.424&#xA;##  9 Mazda RX4       110     0 carb         0.735&#xA;## 10 Mazda RX4 Wag   110     0 mpg          0.151&#xA;## # ℹ 278 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plotting&lt;/h2&gt; &#xA;&lt;p&gt;For plotting, you simply pipe the input data frame into heatmap, specifying:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The rows, cols relative column names (mandatory)&lt;/li&gt; &#xA; &lt;li&gt;The value column name (mandatory)&lt;/li&gt; &#xA; &lt;li&gt;The annotations column name(s)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;mtcars&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_heatmap &amp;lt;- &#xA;    mtcars_tidy |&amp;gt; &#xA;    heatmap(`Car name`, Property, Value,    scale = &#34;row&#34;   ) |&amp;gt;&#xA;    annotation_tile(hp)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Warning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0.&#xA;## ℹ Please use one dimensional logical vectors instead.&#xA;## ℹ The deprecated feature was likely used in the tidyHeatmap package.&#xA;##   Please report the issue at &amp;lt;https://github.com/stemangiola/tidyHeatmap&amp;gt;.&#xA;## This warning is displayed once every 8 hours.&#xA;## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was&#xA;## generated.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_heatmap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/heatmap-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Saving&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_heatmap |&amp;gt; save_pdf(&#34;mtcars_heatmap.pdf&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Clustering&lt;/h2&gt; &#xA;&lt;p&gt;Choose alternative clustering distance and methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyHeatmap::pasilla |&amp;gt;&#xA;    &#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;,&#xA;        &#xA;        # Arguments passed to ComplexHeatmap &#xA;        clustering_distance_rows = &#34;manhattan&#34;,&#xA;        clustering_distance_columns = &#34;manhattan&#34;,&#xA;        clustering_method_rows = &#34;ward.D&#34;,&#xA;        clustering_method_columns = &#34;ward.D&#34;&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/distance-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Grouping and splitting&lt;/h2&gt; &#xA;&lt;p&gt;We can easily group the data (one group per dimension maximum, at the moment only the vertical dimension is supported) with dplyr, and the heatmap will be grouped accordingly&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Make up more groupings&#xA;mtcars_tidy_groupings = &#xA;    mtcars_tidy |&amp;gt;&#xA;    mutate(property_group = if_else(Property %in% c(&#34;cyl&#34;, &#34;disp&#34;), &#34;Engine&#34;, &#34;Other&#34;))&#xA;&#xA;mtcars_tidy_groupings |&amp;gt; &#xA;    group_by(vs, property_group) |&amp;gt;&#xA;    heatmap(`Car name`, Property, Value,    scale = &#34;row&#34;   ) |&amp;gt;&#xA;    annotation_tile(hp)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/grouping-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can provide colour palettes to groupings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy_groupings |&amp;gt; &#xA;    group_by(vs, property_group) |&amp;gt;&#xA;    heatmap(&#xA;        `Car name`, Property, Value ,   &#xA;        scale = &#34;row&#34;,&#xA;        palette_grouping = list(&#xA;            &#xA;            # For first grouping (vs)&#xA;            c(&#34;#66C2A5&#34;, &#34;#FC8D62&#34;), &#xA;            &#xA;            # For second grouping (property_group)&#xA;            c(&#34;#b58b4c&#34;, &#34;#74a6aa&#34;)&#xA;        )&#xA;    ) |&amp;gt;&#xA;    annotation_tile(hp)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/grouping2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can split based on the cladogram&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(`Car name`, Property, Value,    scale = &#34;row&#34;   ) |&amp;gt;&#xA;    split_rows(2) |&amp;gt;&#xA;    split_columns(2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/split-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can split on kmean clustering (using ComplexHeatmap options, it is stochastic)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;,&#xA;        row_km = 2,&#xA;        column_km = 2&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/split2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom palettes&lt;/h2&gt; &#xA;&lt;p&gt;We can easily use custom palette, using strings, hexadecimal color character vector,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, &#xA;        Property, &#xA;        Value,  &#xA;        scale = &#34;row&#34;,&#xA;        palette_value = c(&#34;red&#34;, &#34;white&#34;, &#34;blue&#34;)&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/custom-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;A better-looking blue-to-red palette&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, &#xA;        Property, &#xA;        Value,  &#xA;        scale = &#34;row&#34;,&#xA;        palette_value = circlize::colorRamp2(&#xA;            seq(-2, 2, length.out = 11), &#xA;            RColorBrewer::brewer.pal(11, &#34;RdBu&#34;)&#xA;        )&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/redblue-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or a grid::colorRamp2 function for higher flexibility&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, &#xA;        Property, &#xA;        Value,  &#xA;        scale = &#34;row&#34;,&#xA;        palette_value = circlize::colorRamp2(c(-2, -1, 0, 1, 2), viridis::magma(5))&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/flexible-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can use custom colors for tile annotation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, &#xA;        Property, &#xA;        Value,  &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt;&#xA;    add_tile(&#xA;        hp, &#xA;        palette = c(&#34;red&#34;, &#34;white&#34;, &#34;blue&#34;)&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Warning: `add_tile()` was deprecated in tidyHeatmap 1.9.0.&#xA;## ℹ Please use `annotation_tile()` instead&#xA;## This warning is displayed once every 8 hours.&#xA;## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was&#xA;## generated.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/customtile-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can use grid::colorRamp2 function for tile annotation for specific color scales&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, &#xA;        Property, &#xA;        Value,  &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt;&#xA;    annotation_tile(&#xA;        hp, &#xA;        palette = circlize::colorRamp2(c(0, 100, 200, 300), viridis::magma(4))&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/customtile2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Multiple groupings and annotations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyHeatmap::pasilla |&amp;gt;&#xA;    group_by(location, type) |&amp;gt;&#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt;&#xA;    annotation_tile(condition) |&amp;gt;&#xA;    annotation_tile(activation)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/multiple-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;Remove legends, adding aesthetics to annotations in a modular fashion, using &lt;code&gt;ComplexHeatmap&lt;/code&gt; arguments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyHeatmap::pasilla |&amp;gt;&#xA;    group_by(location, type) |&amp;gt;&#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;,&#xA;        show_heatmap_legend = FALSE&#xA;    ) |&amp;gt;&#xA;    annotation_tile(condition, show_legend = FALSE) |&amp;gt;&#xA;    annotation_tile(activation, show_legend = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/nolegend-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Annotation types&lt;/h2&gt; &#xA;&lt;p&gt;“tile”, “point”, “bar” and “line” are available&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Create some more data points&#xA;pasilla_plus &amp;lt;- &#xA;    tidyHeatmap::pasilla |&amp;gt;&#xA;    dplyr::mutate(act = activation) |&amp;gt; &#xA;    tidyr::nest(data = -sample) |&amp;gt;&#xA;    dplyr::mutate(size = rnorm(n(), 4,0.5)) |&amp;gt;&#xA;    dplyr::mutate(age = runif(n(), 50, 200)) |&amp;gt;&#xA;    tidyr::unnest(data) &#xA;&#xA;# Plot&#xA;pasilla_plus |&amp;gt;&#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt;&#xA;    annotation_tile(condition) |&amp;gt;&#xA;    annotation_point(activation) |&amp;gt;&#xA;    annotation_tile(act) |&amp;gt;&#xA;    annotation_bar(size) |&amp;gt;&#xA;    annotation_line(age)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/manyannotations-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Annotation size&lt;/h2&gt; &#xA;&lt;p&gt;We can customise annotation sizes using the &lt;code&gt;grid::unit()&lt;/code&gt;, and the size of their names using in-built &lt;code&gt;ComplexHeatmap&lt;/code&gt; arguments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pasilla_plus |&amp;gt;&#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt;&#xA;    annotation_tile(condition, size = unit(0.3, &#34;cm&#34;),  annotation_name_gp= gpar(fontsize = 8)) |&amp;gt;&#xA;    annotation_point(activation, size = unit(0.3, &#34;cm&#34;),    annotation_name_gp= gpar(fontsize = 8)) |&amp;gt;&#xA;    annotation_tile(act, size = unit(0.3, &#34;cm&#34;),    annotation_name_gp= gpar(fontsize = 8)) |&amp;gt;&#xA;    annotation_bar(size, size = unit(0.3, &#34;cm&#34;),    annotation_name_gp= gpar(fontsize = 8)) |&amp;gt;&#xA;    annotation_line(age, size = unit(0.3, &#34;cm&#34;),    annotation_name_gp= gpar(fontsize = 8))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/size-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Layer symbol&lt;/h1&gt; &#xA;&lt;p&gt;Add a layer on top of the heatmap&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyHeatmap::pasilla |&amp;gt;&#xA;    &#xA;    # filter&#xA;    filter(symbol %in% head(unique(tidyHeatmap::pasilla$symbol), n = 10)) |&amp;gt;&#xA;    &#xA;    # Add dynamic size&#xA;    mutate(my_size = runif(n(), 1,5)) |&amp;gt; &#xA;    &#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt; &#xA;    layer_point(&#xA;        `count normalised adjusted log` &amp;gt; 6 &amp;amp; sample == &#34;untreated3&#34;&#xA;    ) |&amp;gt;&#xA;    layer_square(&#xA;        `count normalised adjusted log` &amp;gt; 6 &amp;amp; sample == &#34;untreated2&#34;,&#xA;        .size = my_size&#xA;    ) |&amp;gt;&#xA;    layer_arrow_up(&#xA;        `count normalised adjusted log` &amp;gt; 6 &amp;amp; sample == &#34;untreated1&#34;,&#xA;        .size = 4&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/layer-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Layer text&lt;/h1&gt; &#xA;&lt;p&gt;Add a text layer on top of the heatmap&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyHeatmap::pasilla |&amp;gt;&#xA;    &#xA;    # filter&#xA;    filter(symbol %in% head(unique(tidyHeatmap::pasilla$symbol), n = 10)) |&amp;gt;&#xA;    &#xA;    # Add dynamic text&#xA;    mutate(my_text = &#34;mt&#34;, my_size = 7) |&amp;gt; &#xA;    &#xA;    # Plot&#xA;    heatmap(&#xA;        .column = sample,&#xA;        .row = symbol,&#xA;        .value = `count normalised adjusted`,   &#xA;        scale = &#34;row&#34;&#xA;    ) |&amp;gt; &#xA;    layer_text(&#xA;        `count normalised adjusted log` &amp;gt; 6 &amp;amp; sample == &#34;untreated3&#34;, &#xA;        .value = &#34;a&#34;, &#xA;        .size = 15&#xA;    ) |&amp;gt; &#xA;    layer_text(&#xA;    `count normalised adjusted log` &amp;gt; 6 &amp;amp; sample == &#34;untreated2&#34;, &#xA;    .value = my_text,&#xA;    .size = my_size&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/layertext-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Adding heatmap side-by-side&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p_heatmap = heatmap(mtcars_tidy, `Car name`, Property, Value, scale = &#34;row&#34;) &#xA;&#xA;p_heatmap + p_heatmap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/sidebyside-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ComplexHeatmap further styling&lt;/h1&gt; &#xA;&lt;h2&gt;Add cell borders&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;        rect_gp = grid::gpar(col = &#34;#161616&#34;, lwd = 0.5)&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/borders-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Drop row clustering&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;        cluster_rows = FALSE&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/droprow-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reorder rows elements&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(forcats)&#xA;mtcars_tidy |&amp;gt; &#xA;    mutate(`Car name` = fct_reorder(`Car name`, `Car name`, .desc = TRUE)) %&amp;gt;% &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;        cluster_rows = FALSE&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/reorder-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Size of dendrograms&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    mutate(`Car name` = fct_reorder(`Car name`, `Car name`, .desc = TRUE)) %&amp;gt;% &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;        column_dend_height = unit(0.2, &#34;cm&#34;), &#xA;        row_dend_width = unit(0.2, &#34;cm&#34;)&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/sizedendro-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Size of rows/columns titles and names&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    mutate(`Car name` = fct_reorder(`Car name`, `Car name`, .desc = TRUE)) %&amp;gt;% &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;        row_names_gp = gpar(fontsize = 7),&#xA;        column_names_gp = gpar(fontsize = 7),&#xA;        column_title_gp = gpar(fontsize = 7),&#xA;        row_title_gp = gpar(fontsize = 7)&#xA;    ) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/sizecolumns-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;External &lt;code&gt;ComplexHeatmap&lt;/code&gt; functionalities&lt;/h2&gt; &#xA;&lt;p&gt;ComplexHeatmap has some graphical functionalities that are not included in the standard functional framework. We can use &lt;code&gt;as_ComplexHeatmap&lt;/code&gt; to convert our output before applying drawing options.&lt;/p&gt; &#xA;&lt;h3&gt;Chainging side of legends&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;heatmap(mtcars_tidy, `Car name`, Property, Value, scale = &#34;row&#34; ) %&amp;gt;%&#xA;    as_ComplexHeatmap() %&amp;gt;%&#xA;    ComplexHeatmap::draw(heatmap_legend_side = &#34;left&#34;   )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/sidelegend-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add title using &lt;code&gt;draw&lt;/code&gt; from &lt;code&gt;ComplexHeatmap&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(`Car name`, Property, Value,    scale = &#34;row&#34;   ) |&amp;gt;&#xA;    as_ComplexHeatmap() |&amp;gt;&#xA;    ComplexHeatmap::draw(&#xA;        column_title = &#34;TITLE&#34;, &#xA;        column_title_gp = gpar(fontsize = 16)&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/title-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using patchwork to integrate heatmaps&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;library(patchwork)&#xA;&#xA;p_heatmap =&#xA;    mtcars_tidy |&amp;gt; &#xA;    heatmap(&#xA;        `Car name`, Property, Value,    &#xA;        scale = &#34;row&#34;, &#xA;            show_heatmap_legend = FALSE,&#xA;        row_names_gp = gpar(fontsize = 7)&#xA;    ) &#xA;&#xA;p_ggplot = data.frame(value = 1:10) |&amp;gt; ggplot(aes(value)) + geom_density()&#xA;&#xA;wrap_heatmap(p_heatmap) + &#xA;    p_ggplot +&#xA;    &#xA;    # Add padding for better aesthetics&#xA;    wrap_heatmap(&#xA;        p_heatmap,&#xA;        padding = grid::unit(c(-30, -0, -0, -10), &#34;points&#34; ),&#xA;        clip = FALSE&#xA;    ) + &#xA;    plot_layout(width = c(1, 0.3, 1))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/patchworkintegrate-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add title using &lt;code&gt;ggtitle&lt;/code&gt; from &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars_tidy |&amp;gt; &#xA;    heatmap(`Car name`, Property, Value,  scale = &#34;row&#34; ) |&amp;gt;&#xA;    wrap_heatmap() +&#xA;        ggplot2::ggtitle(&#34;TITLE&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stemangiola/tidyHeatmap/master/man/fragments/figures/title2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt;</summary>
  </entry>
</feed>