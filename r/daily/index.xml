<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:42:43Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DPIRD-FSI/extractOz</title>
    <updated>2023-10-01T01:42:43Z</updated>
    <id>tag:github.com,2023-10-01:/DPIRD-FSI/extractOz</id>
    <link href="https://github.com/DPIRD-FSI/extractOz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;{extractOz}: Get local attribute information from GPS points for Australian agricultural research&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;{extractOz}: A Unified Approach to Extracting Data About Australian Locations Using GPS Points &lt;img src=&#34;https://raw.githubusercontent.com/DPIRD-FSI/extractOz/main/man/figures/logo.png&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DPIRD-FSI/extractOz/actions&#34;&gt;&lt;img src=&#34;https://github.com/adamhsparks/extractOz/workflows/tic/badge.svg?branch=main&#34; alt=&#34;tic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/DPIRD-FSI/extractOz&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/DPIRD-FSI/extractOz/branch/main/graph/badge.svg?token=PBtL3rNIYb&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Extract the GRDC agroecological zone, major soil order and weather data from your GPS sampling points. Datasets for the GRDC agroecological zones and functions that automatically download modified data from the Digital Atlas of Australian Soils are included in this package for ease of use. You may also use your own geospatial vector format file to extract similar information using the generic function, &lt;code&gt;extract_area()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;You can install {extractOz} like so.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!require(&#34;remotes&#34;)) {&#xA;  install.packages(&#34;remotes&#34;)&#xA;}&#xA;&#xA;remotes::install_github(&#34;DPIRD-FSI/extractOz&#34;, build_vignettes = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load the packages necessary to execute the examples that follow.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(extractOz)&#xA;library(dplyr)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## &#xA;## Attaching package: &#39;dplyr&#39;&#xA;&#xA;## The following objects are masked from &#39;package:stats&#39;:&#xA;## &#xA;##     filter, lag&#xA;&#xA;## The following objects are masked from &#39;package:base&#39;:&#xA;## &#xA;##     intersect, setdiff, setequal, union&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create locations in WA and NSW&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;locs &amp;lt;- list(&#xA;  &#34;Merredin&#34; = c(x = 118.28, y = -31.48),&#xA;  &#34;Corrigin&#34; = c(x = 117.87, y = -32.33),&#xA;  &#34;Tamworth&#34; = c(x = 150.84, y = -31.07)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extract the GRDC AgroEcological Zones&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;?extract_ae_zone()&lt;/code&gt; for more help on how to use this function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;z &amp;lt;- extract_ae_zone(x = locs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extract the soil order&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;?extract_soil_order()&lt;/code&gt; for more help on how to use this function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;s &amp;lt;- extract_daas_soil_order(x = locs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Reading layer `soilAtlas2M_ASC_Conversion&#39; from data source &#xA;##   `/private/var/folders/ch/8fqkzddj1kj_qb5ddfdd3p1w0000gn/T/RtmpePjwxl/SoilAtlas2M_ASC_Conversion_v01&#39; &#xA;##   using driver `ESRI Shapefile&#39;&#xA;## Simple feature collection with 22584 features and 7 fields&#xA;## Geometry type: POLYGON&#xA;## Dimension:     XY&#xA;## Bounding box:  xmin: 112.8959 ymin: -43.63287 xmax: 153.6362 ymax: -10.49096&#xA;## Geodetic CRS:  GDA94&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get Weather Data for these Locations in 2020&lt;/h2&gt; &#xA;&lt;p&gt;Using the previously used list of GPS points, fetch weather data from SILO for 2020. This is just a non-working example, replace &lt;code&gt;your_api_key&lt;/code&gt; with your email address below. See &lt;code&gt;?extract_patched_point()&lt;/code&gt; for more help on how to use this function.&lt;/p&gt; &#xA;&lt;h3&gt;A Note on API Keys&lt;/h3&gt; &#xA;&lt;p&gt;The examples in this README assume that you have stored your API key in your .Renviron file. See &lt;a href=&#34;https://rstats.wtf/r-startup.html#renviron&#34;&gt;Chapter 8&lt;/a&gt; in “What They Forgot to Teach You About R” by Bryan &lt;em&gt;et al.&lt;/em&gt; for more on storing details in your .Renviron if you are unfamiliar.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;three_sites &amp;lt;-&#xA;  extract_patched_point(&#xA;    x = locs,&#xA;    start_date = &#34;20200101&#34;,&#xA;    end_date = &#34;20201231&#34;,&#xA;    api_key = Sys.getenv(&#34;SILO_API_KEY&#34;)&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## You have requested station observation data but some rows in this&#xA;## dataset have data codes for interpolated data.&#xA;## Check the &#39;data_source&#39; columns and `get_patched_point()` or&#xA;## `get_data_drill()` documentation for further details on codes and&#xA;## references.&#xA;## &#xA;## You have requested station observation data but some rows in this&#xA;## dataset have data codes for interpolated data.&#xA;## Check the &#39;data_source&#39; columns and `get_patched_point()` or&#xA;## `get_data_drill()` documentation for further details on codes and&#xA;## references.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Join the Weather Data with AE Zone, Soil Order and Site Information&lt;/h2&gt; &#xA;&lt;p&gt;Now using &lt;code&gt;dplyr::left_join()&lt;/code&gt;, create a single &lt;code&gt;data.frame()&lt;/code&gt; of the location, GPS coordinates, agroecological zone and weather data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;left_join(z, three_sites, by = c(&#xA;  &#34;location&#34; = &#34;location&#34;,&#xA;  &#34;x&#34; = &#34;x&#34;,&#xA;  &#34;y&#34; = &#34;y&#34;&#xA;)) %&amp;gt;%&#xA;  left_join(s)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Joining with `by = join_by(location, x, y)`&#xA;&#xA;##       location      x      y       ae_zone station_code station_name month  day&#xA;##    1: Corrigin 117.87 -32.33    WA Central       010536           NA  2020 2020&#xA;##    2: Corrigin 117.87 -32.33    WA Central       010536           NA  2020 2020&#xA;##    3: Corrigin 117.87 -32.33    WA Central       010536           NA  2020 2020&#xA;##    4: Corrigin 117.87 -32.33    WA Central       010536           NA  2020 2020&#xA;##    5: Corrigin 117.87 -32.33    WA Central       010536           NA  2020 2020&#xA;##   ---                                                                          &#xA;## 1094: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325           NA  2020 2020&#xA;## 1095: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325           NA  2020 2020&#xA;## 1096: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325           NA  2020 2020&#xA;## 1097: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325           NA  2020 2020&#xA;## 1098: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325           NA  2020 2020&#xA;##             date air_tmax air_tmax_source air_tmin air_tmin_source  elev_m&#xA;##    1: 2020-01-01     37.4              25     15.3              25 295.0 m&#xA;##    2: 2020-01-02     23.0               0     16.0              25 295.0 m&#xA;##    3: 2020-01-03     26.0               0     12.5               0 295.0 m&#xA;##    4: 2020-01-04     34.0               0      8.0               0 295.0 m&#xA;##    5: 2020-01-05     38.0               0     12.0               0 295.0 m&#xA;##   ---                                                                     &#xA;## 1094: 2020-12-27     29.8               0     15.0               0 394.9 m&#xA;## 1095: 2020-12-28     26.8               0     18.3               0 394.9 m&#xA;## 1096: 2020-12-29     28.9               0     17.5               0 394.9 m&#xA;## 1097: 2020-12-30     29.4               0     14.9               0 394.9 m&#xA;## 1098: 2020-12-31     30.0               0     16.1               0 394.9 m&#xA;##       et_morton_actual et_morton_actual_source et_morton_potential&#xA;##    1:              3.1                      26                10.8&#xA;##    2:              5.0                      26                 5.0&#xA;##    3:              2.8                      26                 6.9&#xA;##    4:              4.0                      26                 8.0&#xA;##    5:              7.9                      26                 9.2&#xA;##   ---                                                             &#xA;## 1094:              5.8                      26                 7.1&#xA;## 1095:              3.7                      26                 4.6&#xA;## 1096:              2.6                      26                 5.4&#xA;## 1097:              4.0                      26                 4.7&#xA;## 1098:              3.0                      26                 6.0&#xA;##       et_morton_potential_source et_morton_wet et_morton_wet_source&#xA;##    1:                         26           7.0                   26&#xA;##    2:                         26           5.0                   26&#xA;##    3:                         26           4.8                   26&#xA;##    4:                         26           6.0                   26&#xA;##    5:                         26           8.5                   26&#xA;##   ---                                                              &#xA;## 1094:                         26           6.5                   26&#xA;## 1095:                         26           4.1                   26&#xA;## 1096:                         26           4.0                   26&#xA;## 1097:                         26           4.4                   26&#xA;## 1098:                         26           4.5                   26&#xA;##       et_short_crop et_short_crop_source et_tall_crop et_tall_crop_source&#xA;##    1:           7.9                   26         10.2                  26&#xA;##    2:           3.6                   26          3.9                  26&#xA;##    3:           5.1                   26          6.4                  26&#xA;##    4:           6.7                   26          8.7                  26&#xA;##    5:           7.5                   26          9.2                  26&#xA;##   ---                                                                    &#xA;## 1094:           5.4                   26          6.4                  26&#xA;## 1095:           3.3                   26          4.0                  26&#xA;## 1096:           3.8                   26          4.8                  26&#xA;## 1097:           3.6                   26          4.3                  26&#xA;## 1098:           4.4                   26          5.6                  26&#xA;##       evap_comb evap_comb_source evap_morton_lake evap_morton_lake_source&#xA;##    1:       9.5               25              7.9                      26&#xA;##    2:      10.4                0              5.1                      26&#xA;##    3:       8.0                0              5.5                      26&#xA;##    4:       8.0                0              6.8                      26&#xA;##    5:      10.6                0              8.8                      26&#xA;##   ---                                                                    &#xA;## 1094:       5.5               25              6.7                      26&#xA;## 1095:       3.6               25              4.2                      26&#xA;## 1096:       2.6               25              4.0                      26&#xA;## 1097:       4.3               25              4.4                      26&#xA;## 1098:       5.0               25              4.6                      26&#xA;##       evap_pan evap_pan_source evap_syn evap_syn_source  extracted&#xA;##    1:      9.5              25     11.0              26 2023-08-24&#xA;##    2:     10.4               0      6.4              26 2023-08-24&#xA;##    3:      8.0               0      7.9              26 2023-08-24&#xA;##    4:      8.0               0      9.8              26 2023-08-24&#xA;##    5:     10.6               0     10.6              26 2023-08-24&#xA;##   ---                                                             &#xA;## 1094:      5.5              25      6.9              26 2023-08-24&#xA;## 1095:      3.6              25      4.3              26 2023-08-24&#xA;## 1096:      2.6              25      5.1              26 2023-08-24&#xA;## 1097:      4.3              25      5.0              26 2023-08-24&#xA;## 1098:      5.0              25      5.9              26 2023-08-24&#xA;##       station_latitude station_longitude   mslp mslp_source radiation&#xA;##    1:         -32.3292          117.8733 1012.7          25      30.1&#xA;##    2:         -32.3292          117.8733 1010.8           0      21.1&#xA;##    3:         -32.3292          117.8733 1017.2           0      24.1&#xA;##    4:         -32.3292          117.8733 1020.9           0      28.5&#xA;##    5:         -32.3292          117.8733 1015.9           0      32.2&#xA;##   ---                                                                &#xA;## 1094:         -31.0742          150.8362 1015.7           0      26.2&#xA;## 1095:         -31.0742          150.8362 1012.7           0      14.2&#xA;## 1096:         -31.0742          150.8362 1011.4           0      14.3&#xA;## 1097:         -31.0742          150.8362 1014.2           0      15.1&#xA;## 1098:         -31.0742          150.8362 1015.8           0      17.0&#xA;##       radiation_source rainfall rainfall_source rh_tmax rh_tmax_source rh_tmin&#xA;##    1:               25      0.0               0    22.6             26    83.5&#xA;##    2:               25      0.0               0    71.2             26   100.0&#xA;##    3:               25      0.0               0    37.5             26    87.0&#xA;##    4:               25      0.0               0    26.3             26   100.0&#xA;##    5:               25      0.0               0    33.4             26   100.0&#xA;##   ---                                                                         &#xA;## 1094:               25      2.0               0    46.5             26   100.0&#xA;## 1095:               25     10.2               0    61.9             26   100.0&#xA;## 1096:               25      1.0               0    50.0             26    99.6&#xA;## 1097:               25     18.8               0    52.7             26   100.0&#xA;## 1098:               25      0.0               0    44.5             26   100.0&#xA;##       rh_tmin_source   vp vp_deficit vp_deficit_source vp_source&#xA;##    1:             26 14.5       32.7                26        25&#xA;##    2:             26 20.0        5.2                26         0&#xA;##    3:             26 12.6       14.9                26         0&#xA;##    4:             26 14.0       22.7                26         0&#xA;##    5:             26 22.1       24.1                26         0&#xA;##   ---                                                           &#xA;## 1094:             26 19.5       14.3                26         0&#xA;## 1095:             26 21.8        9.3                26         0&#xA;## 1096:             26 19.9       13.8                26         0&#xA;## 1097:             26 21.6       11.6                26         0&#xA;## 1098:             26 18.9       15.8                26         0&#xA;##       daas_soil_order&#xA;##    1:         Sodosol&#xA;##    2:         Sodosol&#xA;##    3:         Sodosol&#xA;##    4:         Sodosol&#xA;##    5:         Sodosol&#xA;##   ---                &#xA;## 1094:        Dermosol&#xA;## 1095:        Dermosol&#xA;## 1096:        Dermosol&#xA;## 1097:        Dermosol&#xA;## 1098:        Dermosol&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the {extractOz} project is released with a &lt;a href=&#34;https://contributor-covenant.org/version/2/0/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>beniaminogreen/zoomerjoin</title>
    <updated>2023-10-01T01:42:43Z</updated>
    <id>tag:github.com,2023-10-01:/beniaminogreen/zoomerjoin</id>
    <link href="https://github.com/beniaminogreen/zoomerjoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Superlatively-fast fuzzy-joins in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zoomerjoin &lt;img src=&#34;https://raw.githubusercontent.com/beniaminogreen/zoomerjoin/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.21105/joss.05693&#34;&gt;&lt;img src=&#34;https://joss.theoj.org/papers/10.21105/joss.05693/status.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/beniaminogreen/zoomerjoin?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/beniaminogreen/zoomerjoin/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;zoomerjoin is an R package that empowers you to fuzzy-join massive datasets rapidly, and with little memory consumption. It is powered by high-performance implementations of &lt;a href=&#34;https://en.wikipedia.org/wiki/Locality-sensitive_hashing&#34;&gt;Locality Sensitive Hashing&lt;/a&gt;, an algorithm that finds the matches records between two datasets without having to compare all possible pairs of observations. In practice, this means zoomerjoin can fuzzily-join datasets days, or even years faster than other matching packages. zoomerjoin has been used in-production to join datasets of hundreds of millions of names in a few hours.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Installing from R-Universe:&lt;/h3&gt; &#xA;&lt;p&gt;This package is distributed using &lt;a href=&#34;https://r-universe.dev/search/&#34;&gt;r-universe&lt;/a&gt;, which provides pre-compiled binaries for common operating systems and recent versions of R. To install with r-universe, you can use the following command in R:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#xA;  &#39;zoomerjoin&#39;,&#xA;  repos = c(&#39;https://beniaminogreen.r-universe.dev&#39;, getOption(&#34;repos&#34;))&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing Rust&lt;/h3&gt; &#xA;&lt;p&gt;If your operating system or version of R is not installed, you must have the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust compiler&lt;/a&gt; installed to compile this package from sources. After the package is compiled, Rust is no longer required, and can be safely uninstalled.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Rust on Linux or Mac:&lt;/h4&gt; &#xA;&lt;p&gt;To install Rust on Linux or Mac, you can simply run the following snippet in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing Rust on Windows:&lt;/h4&gt; &#xA;&lt;p&gt;To install Rust on windows, you can use the Rust installation wizard, &lt;code&gt;rustup-init.exe&lt;/code&gt;, found &lt;a href=&#34;https://forge.rust-lang.org/infra/other-installation-methods.html&#34;&gt;at this site&lt;/a&gt;. Depending on your version of Windows, you may see an error that looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;error: toolchain &#39;stable-x86_64-pc-windows-gnu&#39; is not installed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, you should run &lt;code&gt;rustup install stable-x86_64-pc_windows-gnu&lt;/code&gt; to install the missing toolchain. If you’re missing another toolchain, simply type this in the place of &lt;code&gt;stable-x86_64-pc_windows-gnu&lt;/code&gt; in the command above.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Package from Github:&lt;/h3&gt; &#xA;&lt;p&gt;Once you have rust installed Rust, you should be able to install the package with either the install.packages function as above, or using the &lt;code&gt;install_github&lt;/code&gt; function from the &lt;code&gt;devtools&lt;/code&gt; package or with the &lt;code&gt;pkg_install&lt;/code&gt; function from the &lt;code&gt;pak&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Install with devtools&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;beniaminogreen/zoomerjoin&#34;)&#xA;&#xA;## Install with pak&#xA;# install.packages(&#34;pak&#34;)&#xA;pak::pkg_install(&#34;beniaminogreen/zoomerjoin&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading The Package&lt;/h3&gt; &#xA;&lt;p&gt;Once the package is installed, you can load it into memory as usual by typing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(zoomerjoin)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;p&gt;The flagship feature of zoomerjoins are the jaccard_join and euclidean family of functions, which are designed to be near drop-ins for the corresponding dplyr/fuzzyjoin commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;jaccard_left_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jaccard_right_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jaccard_inner_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jaccard_full_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;euclidean_left_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;euclidean_right_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;euclidean_inner_join()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;euclidean_full_join()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;jaccard_join&lt;/code&gt; family of functions provide fast fuzzy-joins for strings using the Jaccard distance while the &lt;code&gt;euclidean_join&lt;/code&gt; family provides fuzzy-joins for points or vectors using the Euclidean distance.&lt;/p&gt; &#xA;&lt;h3&gt;Example: Joining rows of the Database on Ideology, Money in Politics, and Elections&lt;/h3&gt; &#xA;&lt;p&gt;(DIME)&lt;/p&gt; &#xA;&lt;p&gt;Here’s a snippet showing off how to use the &lt;code&gt;lhs_inner_join()&lt;/code&gt; merge two datasets of political donors in the &lt;a href=&#34;https://data.stanford.edu/dime&#34;&gt;Database on Ideology, Money in Politics, and Elections (DIME)&lt;/a&gt;. You can see a more detailed example of this vignette in the &lt;a href=&#34;https://beniaminogreen.github.io/zoomerjoin/articles/guided_tour.html&#34;&gt;introductory vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I start with two corpuses I would like to combine, &lt;code&gt;corpus_1&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;corpus_1 &amp;lt;- dime_data %&amp;gt;%&#xA;    head(500000)&#xA;names(corpus_1) &amp;lt;- c(&#34;a&#34;, &#34;field&#34;)&#xA;corpus_1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 500,000 × 2&#xA;##        a field                                                                  &#xA;##    &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;                                                                  &#xA;##  1     1 ufwa cope committee                                                    &#xA;##  2     2 committee to re elect charles e. bennett                               &#xA;##  3     3 montana democratic party non federal account                           &#xA;##  4     4 mississippi power &amp;amp; light company management political action and educ…&#xA;##  5     5 napus pac for postmasters                                              &#xA;##  6     6 aminoil good government fund                                           &#xA;##  7     7 national women&#39;s political caucus of california                        &#xA;##  8     8 minnesota gun owners&#39; political victory fund                           &#xA;##  9     9 metropolitan detroit afl cio cope committee                            &#xA;## 10    10 carpenters legislative improvement committee united brotherhood of car…&#xA;## # ℹ 499,990 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;corpus_2&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;corpus_2 &amp;lt;- dime_data %&amp;gt;%&#xA;    tail(500000)&#xA;names(corpus_2) &amp;lt;- c(&#34;b&#34;, &#34;field&#34;)&#xA;corpus_2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 500,000 × 2&#xA;##         b field                               &#xA;##     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;                               &#xA;##  1 832471 avrp studios inc                    &#xA;##  2 832472 avrd design                         &#xA;##  3 832473 avenales cattle co                  &#xA;##  4 832474 auto dealers of michigan political a&#xA;##  5 832475 atty &amp;amp; counselor at law             &#xA;##  6 832476 at&amp;amp;t united way                     &#xA;##  7 832477 ashland food &amp;amp; liquors              &#xA;##  8 832478 arvance turkey ranch inc            &#xA;##  9 832479 arizona federation of teachers      &#xA;## 10 832480 arianas restaurant                  &#xA;## # ℹ 499,990 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Both corpuses have an observation ID column, and a donor name column. We would like to join the two datasets on the donor names column, but the two can’t be directly joined because of misspellings. Because of this, we will use the jaccard_inner_join function to fuzzily join the two on the donor name column.&lt;/p&gt; &#xA;&lt;p&gt;Importantly, Locality Sensitive Hashing is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Randomized_algorithm&#34;&gt;probabilistic algorithm&lt;/a&gt;, so it may fail to identify some matches by random chance. I adjust the hyperparameters &lt;code&gt;n_bands&lt;/code&gt; and &lt;code&gt;band_width&lt;/code&gt; until the chance of true matches being dropped is negligible. By default, the package will issue a warning if the chance of a true match being discovered is less than 95%. You can use the &lt;code&gt;jaccard_probability&lt;/code&gt; and &lt;code&gt;jaccard_hyper_grid_search&lt;/code&gt; to help understand the probability any true matches will be discarded by the algorithm.&lt;/p&gt; &#xA;&lt;p&gt;More details and a more thorough description of how to tune the hyperparameters can be can be found in the &lt;a href=&#34;https://beniaminogreen.github.io/zoomerjoin/articles/guided_tour.html&#34;&gt;guided tour vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(1)&#xA;start_time &amp;lt;- Sys.time()&#xA;join_out &amp;lt;- jaccard_inner_join(corpus_1, corpus_2, n_gram_width=6, n_bands=20, band_width=6)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Warning in jaccard_join(a, b, mode = &#34;inner&#34;, by = by, salt_by = block_by, : A pair of records at the threshold (0.7) have only a 92% chance of being compared.&#xA;## Please consider changing `n_bands` and `band_width`.&#xA;&#xA;## Joining by &#39;field&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;print(Sys.time() - start_time)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Time difference of 5.446871 secs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;print(join_out)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 190,943 × 4&#xA;##         a field.x                                                      b field.y&#xA;##     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;                                                    &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &#xA;##  1 397635 ym international inc                                    1.14e6 gfa in…&#xA;##  2  79992 rural friends of electric cooperatives                  9.38e5 rural …&#xA;##  3  70563 american electric power co tx committee for responsibl… 8.48e5 the am…&#xA;##  4 110462 lapeer county democratic party                          1.18e6 turner…&#xA;##  5  60444 unitedhealth group inc. political fund                  8.89e5 united…&#xA;##  6 200215 gring fee, pamela                                       1.31e6 gring …&#xA;##  7 119519 19th senate district democrat-farmer-labor              1.05e6 47th s…&#xA;##  8  14656 carbon county democratic central cmte                   1.17e6 willia…&#xA;##  9  55487 iupat political action together                         9.01e5 iupat …&#xA;## 10 248039 b2b brokerage inc                                       1.28e6 k-b br…&#xA;## # ℹ 190,933 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ZoomerJoin finds and joins on the matching rows in just a few seconds.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Thanks for your interest in contributing to Zoomerjoin!&lt;/p&gt; &#xA;&lt;p&gt;I am using a gitub-centric workflow to manage the package; You can file a bug report, request a new feature, or ask a question about the package by &lt;a href=&#34;https://github.com/beniaminogreen/zoomerjoin/issues&#34;&gt;filing an issue on the issues page&lt;/a&gt;, where you will also find a range of templates to help you out. If you’d like to make changes to the code, you can write and file a &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests&#34;&gt;pull request&lt;/a&gt; on &lt;a href=&#34;https://github.com/beniaminogreen/zoomerjoin/pulls&#34;&gt;this page&lt;/a&gt;. I’ll try to respond to all of these in a timely manner (within a week) although occasionally I may take longer to respond to a complicated question or issue.&lt;/p&gt; &#xA;&lt;p&gt;Please also be aware of the &lt;a href=&#34;https://github.com/beniaminogreen/zoomerjoin/raw/main/CONTRIBUTING.md&#34;&gt;contributor code of conduct&lt;/a&gt; for contributing to the repository.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments:&lt;/h2&gt; &#xA;&lt;p&gt;The Zoomerjoin was made using &lt;a href=&#34;https://commons.wikimedia.org/wiki/File:SQL_Join_-_08_A_Cross_Join_B.svg&#34;&gt;this SQL join illustration&lt;/a&gt; by &lt;a href=&#34;https://commons.wikimedia.org/wiki/User:GermanX&#34;&gt;Germanx&lt;/a&gt; and &lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Speed_limit_75_sign.svg&#34;&gt;this speed limit sign&lt;/a&gt; from the Federal Highway Administration - MUTCD.&lt;/p&gt; &#xA;&lt;h2&gt;References:&lt;/h2&gt; &#xA;&lt;p&gt;Bonica, Adam. 2016. Database on Ideology, Money in Politics, and Elections: Public version 2.0 [Computer file]. Stanford, CA: Stanford University Libraries.&lt;/p&gt; &#xA;&lt;p&gt;Jure Leskovec, Anand Rajaraman, and Jeffrey David Ullman. 2014. Mining of Massive Datasets (2nd. ed.). Cambridge University Press, USA.&lt;/p&gt; &#xA;&lt;p&gt;Broder, Andrei Z. (1997), “On the resemblance and containment of documents”, Compression and Complexity of Sequences: Proceedings. Positano, Salerno, Italy&lt;/p&gt;</summary>
  </entry>
</feed>