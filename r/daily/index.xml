<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:50:29Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>easystats/easystats</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/easystats/easystats</id>
    <link href="https://github.com/easystats/easystats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌌 The R easystats-project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;em&gt;easystats&lt;/em&gt;: Jump in the Easyverse&lt;/h1&gt; &#xA;&lt;h1&gt;What is &lt;em&gt;easystats&lt;/em&gt;?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;easystats&lt;/strong&gt; is a collection of R packages, which aims to provide a unifying and consistent framework to tame, discipline, and harness the scary R statistics and their pesky models.&lt;/p&gt; &#xA;&lt;p&gt;However, there is not (yet) an &lt;em&gt;unique&lt;/em&gt; “easystats” way of doing data analysis. Instead, start with one package and, when you’ll face a new challenge, do check if there is an &lt;em&gt;easystats&lt;/em&gt; answer for it in other packages. You will slowly uncover how using them together facilitates your life. And, who knows, you might even end up using them all. &lt;em&gt;&lt;strong&gt;Gotta catch ’em all!&lt;/strong&gt;&lt;/em&gt; &#xA; &lt;!--&#xA;&#39;tis a pokémon reference for y&#39;all grandpas --&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/logo_wall.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://easystats.r-universe.dev&#34;&gt;&lt;img src=&#34;https://easystats.r-universe.dev/badges/:registry&#34; alt=&#34;:registry status badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://easystats.r-universe.dev&#34;&gt;&lt;img src=&#34;https://easystats.r-universe.dev/badges/:total&#34; alt=&#34;:total status badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The whole &lt;code&gt;easystats&lt;/code&gt; suite can be installed &lt;em&gt;at once&lt;/em&gt; with the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;easystats&#34;, repos = &#34;https://easystats.r-universe.dev&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then load the entire ecosystem by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#34;easystats&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The package is currently not available on CRAN, but we are working on submitting it there soon.&lt;/p&gt; &#xA;&lt;p&gt;Finally, as &lt;em&gt;easystats&lt;/em&gt; sometimes depends on some additional packages for specific functions that are not downloaded by default. If you want to benefit from the &lt;strong&gt;full &lt;em&gt;easystats&lt;/em&gt; experience&lt;/strong&gt; without any hiccups, simply run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;easystats::install_suggested()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;Do you wish to cite &lt;em&gt;easystats&lt;/em&gt;? ❤️&lt;/p&gt; &#xA;&lt;p&gt;Have a look at this article on how you can do so! &lt;a href=&#34;https://easystats.github.io/easystats/articles/citation.html&#34;&gt;https://easystats.github.io/easystats/articles/citation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;Each &lt;strong&gt;easystats&lt;/strong&gt; package has a different scope and purpose. This means your &lt;strong&gt;best way to start&lt;/strong&gt; is to explore and pick the one(s) that you feel might be useful to you. However, as they are built with a “bigger picture” in mind, you will realize that using more of them creates a smooth workflow, as these packages are meant to work together. Ideally, these packages work in unison to cover all aspects of statistical analysis and data visualization.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/report&#34;&gt;&lt;strong&gt;report&lt;/strong&gt;&lt;/a&gt;: 📜 🎉 Automated statistical reporting of objects in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/correlation&#34;&gt;&lt;strong&gt;correlation&lt;/strong&gt;&lt;/a&gt;: 🔗 Your all-in-one package to run correlations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/modelbased&#34;&gt;&lt;strong&gt;modelbased&lt;/strong&gt;&lt;/a&gt;: 📈 Estimate effects, group averages and contrasts between groups based on statistical models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/bayestestR&#34;&gt;&lt;strong&gt;bayestestR&lt;/strong&gt;&lt;/a&gt;: 👻 Great for beginners or experts of Bayesian statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/parameters&#34;&gt;&lt;strong&gt;parameters&lt;/strong&gt;&lt;/a&gt;: 📊 Obtain a table containing all information about the parameters of your models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/performance&#34;&gt;&lt;strong&gt;performance&lt;/strong&gt;&lt;/a&gt;: 💪 Models’ quality and performance metrics (R2, ICC, LOO, AIC, BF, …)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/effectsize&#34;&gt;&lt;strong&gt;effectsize&lt;/strong&gt;&lt;/a&gt;: 🐉 Compute, convert, interpret and work with indices of effect size and standardized parameters&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/insight&#34;&gt;&lt;strong&gt;insight&lt;/strong&gt;&lt;/a&gt;: 🔮 For developers, a package to help you work with different models and packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/see&#34;&gt;&lt;strong&gt;see&lt;/strong&gt;&lt;/a&gt;: 🎨 The plotting companion to create beautiful results visualizations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/datawizard&#34;&gt;&lt;strong&gt;datawizard&lt;/strong&gt;&lt;/a&gt;: 🧙 Magic potions to clean and transform your data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Frequently Asked Questions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;How is &lt;em&gt;easystats&lt;/em&gt; different from the &lt;em&gt;tidyverse&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You’ve probably already heard about the &lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;&lt;strong&gt;tidyverse&lt;/strong&gt;&lt;/a&gt;, another very popular collection of packages (&lt;em&gt;ggplot&lt;/em&gt;, &lt;em&gt;dplyr&lt;/em&gt;, &lt;em&gt;tidyr&lt;/em&gt;, …) that also makes using R easier. So, should you pick the &lt;em&gt;tidyverse&lt;/em&gt; or &lt;em&gt;easystats&lt;/em&gt;? &lt;strong&gt;Pick both!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Indeed, these two ecosystems have been designed with very different goals in mind. The &lt;em&gt;tidyverse&lt;/em&gt; packages are primarily made to create a new R experience, where data manipulation and exploration is intuitive and consistent. On the other hand, &lt;strong&gt;easystats&lt;/strong&gt; focuses more on the final stretch of the analysis: understanding and interpreting your results and reporting them in a manuscript or a report, while following best practices. You can definitely use the &lt;em&gt;easystats&lt;/em&gt; functions in a &lt;em&gt;tidyverse&lt;/em&gt; workflow!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;easystats + tidyverse =&lt;/strong&gt; ❤️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can &lt;em&gt;easystats&lt;/em&gt; be useful to advanced users and/or developers?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Yes, definitely! &lt;strong&gt;easystats&lt;/strong&gt; is built in terms of modules that are general enough to be used inside other packages. For instance, the &lt;em&gt;insight&lt;/em&gt; package is made to easily implement support for post-processing of pretty much all regression model packages under the sun. We use it in all the &lt;em&gt;easystats&lt;/em&gt; packages, but it is also used in other non-easystats packages, such as &lt;a href=&#34;https://github.com/IndrajeetPatil/ggstatsplot&#34;&gt;&lt;strong&gt;ggstatsplot&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/vincentarelbundock/modelsummary/&#34;&gt;&lt;strong&gt;modelsummary&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/strengejacke/ggeffects&#34;&gt;&lt;strong&gt;ggeffects&lt;/strong&gt;&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;So why not in yours&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Moreover, the &lt;em&gt;easystats&lt;/em&gt; packages are very lightweight, with a minimal set of dependencies, which again makes it great if you want to rely on them.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;h2&gt;Websites&lt;/h2&gt; &#xA;&lt;p&gt;Each &lt;code&gt;easystats&lt;/code&gt; package has a dedicated website.&lt;/p&gt; &#xA;&lt;p&gt;For example, website for &lt;code&gt;parameters&lt;/code&gt; is &lt;a href=&#34;https://easystats.github.io/parameters/&#34;&gt;https://easystats.github.io/parameters/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blog&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the websites containing documentation for these packages, you can also read posts from &lt;code&gt;easystats&lt;/code&gt; blog: &lt;a href=&#34;https://easystats.github.io/blog/posts/&#34;&gt;https://easystats.github.io/blog/posts/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other learning resources&lt;/h2&gt; &#xA;&lt;p&gt;In addition to these websites and blog posts, you can also check out the following presentations and talks to learn more about this ecosystem:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://easystats.github.io/easystats/articles/resources.html&#34;&gt;https://easystats.github.io/easystats/articles/resources.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Most &lt;em&gt;easystats&lt;/em&gt; packages are very lightweight, &lt;em&gt;i.e.&lt;/em&gt;, they don’t rely nor import any other packages! This means that you can safely use them as dependencies in your own packages, without the risk of a butterfly effect, where a small change in a distant downstream dependency with unexpected upstream consequences.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/depnetwork-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;As we can see, the only exception is the &lt;a href=&#34;http://easystats.github.io/see&#34;&gt;&lt;strong&gt;see&lt;/strong&gt;&lt;/a&gt; package, one of our high-level packages that is responsible for plotting and creating figures, relying thus on other packages such as &lt;em&gt;ggplot2&lt;/em&gt;, which has a substantial number of dependencies.&lt;/p&gt; &#xA;&lt;h1&gt;Downloads&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Total&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;insight&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;bayestestR&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;parameters&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;performance&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;effectsize&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;datawizard&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;correlation&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;see&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;modelbased&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;report&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;easystats&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8,247,518&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2,554,616&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,216,935&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,181,903&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,109,543&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;924,090&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;702,059&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;233,734&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;209,393&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;80,984&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;34,261&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Trend&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-8-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Cumulative downloads&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-9-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Average monthly downloads&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-10-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h1&gt;Versioning&lt;/h1&gt; &#xA;&lt;p&gt;Package version numbers indicate following: &lt;code&gt;MAJOR.MINOR.PATCH.DEVELOPMENT&lt;/code&gt;. Here are key steps to keep in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;As long as packages are in a more or less rapidly developing and changing state, the &lt;strong&gt;major&lt;/strong&gt; version number is typically &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once we think we will have a stable base that will likely not change dramatically or soon, the major version number will be set to &lt;code&gt;1&lt;/code&gt;, and will be increased for following major changes that probably break the current API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When new features are added or (re)moved, we typically increase the &lt;strong&gt;minor&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minimal changes or bug fixes only are indicated by increasing the &lt;strong&gt;patch&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Current development versions of our packages (i.e.&amp;nbsp;master/main branch from GitHub) additionally have a &lt;strong&gt;development&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We are happy to receive bug reports, suggestions, questions, and (most of all) contributions to fix problems and add features. Pull Requests for contributions are encouraged.&lt;/p&gt; &#xA;&lt;p&gt;Here are some simple ways in which you can contribute (in the increasing order of commitment):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read and correct any inconsistencies in the documentation&lt;/li&gt; &#xA; &lt;li&gt;Raise issues about bugs or wanted features&lt;/li&gt; &#xA; &lt;li&gt;Review code&lt;/li&gt; &#xA; &lt;li&gt;Add new functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;Please note that the ‘easystats’ project is released with a &lt;a href=&#34;https://easystats.github.io/easystats/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kassambara/ggpubr</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/kassambara/ggpubr</id>
    <link href="https://github.com/kassambara/ggpubr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#39;ggplot2&#39; Based Publication Ready Plots&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/kassambara/ggpubr&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/kassambara/ggpubr.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggpubr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggpubr&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggpubr&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/ggpubr&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggpubr&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/ggpubr?color=orange&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ggpubr: &#39;ggplot2&#39; Based Publication Ready Plots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;ggplot2, by Hadley Wickham,&lt;/a&gt; is an excellent and flexible package for elegant data visualization in R. However the default generated plots requires some formatting before we can send them for publication. Furthermore, to customize a ggplot, the syntax is opaque and this raises the level of difficulty for researchers with no advanced R programming skills.&lt;/p&gt; &#xA;&lt;p&gt;The &#39;ggpubr&#39; package provides some easy-to-use functions for creating and customizing &#39;ggplot2&#39;- based publication ready plots.&lt;/p&gt; &#xA;&lt;p&gt;Find out more at &lt;a href=&#34;https://rpkgs.datanovia.com/ggpubr&#34;&gt;https://rpkgs.datanovia.com/ggpubr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and loading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install from &lt;a href=&#34;https://cran.r-project.org/package=ggpubr&#34;&gt;CRAN&lt;/a&gt; as follow:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;ggpubr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Or, install the latest version from &lt;a href=&#34;https://github.com/kassambara/ggpubr&#34;&gt;GitHub&lt;/a&gt; as follow:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install&#xA;if(!require(devtools)) install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;kassambara/ggpubr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Distribution&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggpubr)&#xA;#&amp;gt; Loading required package: ggplot2&#xA;#&amp;gt; Loading required package: magrittr&#xA;# Create some data format&#xA;# :::::::::::::::::::::::::::::::::::::::::::::::::::&#xA;set.seed(1234)&#xA;wdata = data.frame(&#xA;   sex = factor(rep(c(&#34;F&#34;, &#34;M&#34;), each=200)),&#xA;   weight = c(rnorm(200, 55), rnorm(200, 58)))&#xA;head(wdata, 4)&#xA;#&amp;gt;   sex   weight&#xA;#&amp;gt; 1   F 53.79293&#xA;#&amp;gt; 2   F 55.27743&#xA;#&amp;gt; 3   F 56.08444&#xA;#&amp;gt; 4   F 52.65430&#xA;&#xA;# Density plot with mean lines and marginal rug&#xA;# :::::::::::::::::::::::::::::::::::::::::::::::::::&#xA;# Change outline and fill colors by groups (&#34;sex&#34;)&#xA;# Use custom palette&#xA;ggdensity(wdata, x = &#34;weight&#34;,&#xA;   add = &#34;mean&#34;, rug = TRUE,&#xA;   color = &#34;sex&#34;, fill = &#34;sex&#34;,&#xA;   palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ggpubr-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Histogram plot with mean lines and marginal rug&#xA;# :::::::::::::::::::::::::::::::::::::::::::::::::::&#xA;# Change outline and fill colors by groups (&#34;sex&#34;)&#xA;# Use custom color palette&#xA;gghistogram(wdata, x = &#34;weight&#34;,&#xA;   add = &#34;mean&#34;, rug = TRUE,&#xA;   color = &#34;sex&#34;, fill = &#34;sex&#34;,&#xA;   palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ggpubr-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Box plots and violin plots&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load data&#xA;data(&#34;ToothGrowth&#34;)&#xA;df &amp;lt;- ToothGrowth&#xA;head(df, 4)&#xA;#&amp;gt;    len supp dose&#xA;#&amp;gt; 1  4.2   VC  0.5&#xA;#&amp;gt; 2 11.5   VC  0.5&#xA;#&amp;gt; 3  7.3   VC  0.5&#xA;#&amp;gt; 4  5.8   VC  0.5&#xA;&#xA;# Box plots with jittered points&#xA;# :::::::::::::::::::::::::::::::::::::::::::::::::::&#xA;# Change outline colors by groups: dose&#xA;# Use custom color palette&#xA;# Add jitter points and change the shape by groups&#xA; p &amp;lt;- ggboxplot(df, x = &#34;dose&#34;, y = &#34;len&#34;,&#xA;                color = &#34;dose&#34;, palette =c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;),&#xA;                add = &#34;jitter&#34;, shape = &#34;dose&#34;)&#xA; p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ggpubr-box-plot-dot-plots-strip-charts-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; &#xA; # Add p-values comparing groups&#xA; # Specify the comparisons you want&#xA;my_comparisons &amp;lt;- list( c(&#34;0.5&#34;, &#34;1&#34;), c(&#34;1&#34;, &#34;2&#34;), c(&#34;0.5&#34;, &#34;2&#34;) )&#xA;p + stat_compare_means(comparisons = my_comparisons)+ # Add pairwise comparisons p-value&#xA;  stat_compare_means(label.y = 50)                   # Add global p-value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ggpubr-box-plot-dot-plots-strip-charts-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA; &#xA;# Violin plots with box plots inside&#xA;# :::::::::::::::::::::::::::::::::::::::::::::::::::&#xA;# Change fill color by groups: dose&#xA;# add boxplot with white fill color&#xA;ggviolin(df, x = &#34;dose&#34;, y = &#34;len&#34;, fill = &#34;dose&#34;,&#xA;         palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;),&#xA;         add = &#34;boxplot&#34;, add.params = list(fill = &#34;white&#34;))+&#xA;  stat_compare_means(comparisons = my_comparisons, label = &#34;p.signif&#34;)+ # Add significance levels&#xA;  stat_compare_means(label.y = 50)                                      # Add global the p-value &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ggpubr-box-plot-dot-plots-strip-charts-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bar plots&lt;/h2&gt; &#xA;&lt;h3&gt;Demo data set&lt;/h3&gt; &#xA;&lt;p&gt;Load and prepare data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load data&#xA;data(&#34;mtcars&#34;)&#xA;dfm &amp;lt;- mtcars&#xA;# Convert the cyl variable to a factor&#xA;dfm$cyl &amp;lt;- as.factor(dfm$cyl)&#xA;# Add the name colums&#xA;dfm$name &amp;lt;- rownames(dfm)&#xA;# Inspect the data&#xA;head(dfm[, c(&#34;name&#34;, &#34;wt&#34;, &#34;mpg&#34;, &#34;cyl&#34;)])&#xA;#&amp;gt;                                name    wt  mpg cyl&#xA;#&amp;gt; Mazda RX4                 Mazda RX4 2.620 21.0   6&#xA;#&amp;gt; Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0   6&#xA;#&amp;gt; Datsun 710               Datsun 710 2.320 22.8   4&#xA;#&amp;gt; Hornet 4 Drive       Hornet 4 Drive 3.215 21.4   6&#xA;#&amp;gt; Hornet Sportabout Hornet Sportabout 3.440 18.7   8&#xA;#&amp;gt; Valiant                     Valiant 3.460 18.1   6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ordered bar plots&lt;/h3&gt; &#xA;&lt;p&gt;Change the fill color by the grouping variable &#34;cyl&#34;. Sorting will be done globally, but not by groups.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggbarplot(dfm, x = &#34;name&#34;, y = &#34;mpg&#34;,&#xA;          fill = &#34;cyl&#34;,               # change fill color by cyl&#xA;          color = &#34;white&#34;,            # Set bar border colors to white&#xA;          palette = &#34;jco&#34;,            # jco journal color palett. see ?ggpar&#xA;          sort.val = &#34;desc&#34;,          # Sort the value in dscending order&#xA;          sort.by.groups = FALSE,     # Don&#39;t sort inside each group&#xA;          x.text.angle = 90           # Rotate vertically x axis texts&#xA;          )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ordered-bar-plots-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sort bars inside each group. Use the argument &lt;strong&gt;sort.by.groups = TRUE&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggbarplot(dfm, x = &#34;name&#34;, y = &#34;mpg&#34;,&#xA;          fill = &#34;cyl&#34;,               # change fill color by cyl&#xA;          color = &#34;white&#34;,            # Set bar border colors to white&#xA;          palette = &#34;jco&#34;,            # jco journal color palett. see ?ggpar&#xA;          sort.val = &#34;asc&#34;,           # Sort the value in dscending order&#xA;          sort.by.groups = TRUE,      # Sort inside each group&#xA;          x.text.angle = 90           # Rotate vertically x axis texts&#xA;          )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-ordered-bar-plots-by-groups-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deviation graphs&lt;/h3&gt; &#xA;&lt;p&gt;The deviation graph shows the deviation of quantitatives values to a reference value. In the R code below, we&#39;ll plot the mpg z-score from the mtcars dataset.&lt;/p&gt; &#xA;&lt;p&gt;Calculate the z-score of the mpg data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Calculate the z-score of the mpg data&#xA;dfm$mpg_z &amp;lt;- (dfm$mpg -mean(dfm$mpg))/sd(dfm$mpg)&#xA;dfm$mpg_grp &amp;lt;- factor(ifelse(dfm$mpg_z &amp;lt; 0, &#34;low&#34;, &#34;high&#34;), &#xA;                     levels = c(&#34;low&#34;, &#34;high&#34;))&#xA;# Inspect the data&#xA;head(dfm[, c(&#34;name&#34;, &#34;wt&#34;, &#34;mpg&#34;, &#34;mpg_z&#34;, &#34;mpg_grp&#34;, &#34;cyl&#34;)])&#xA;#&amp;gt;                                name    wt  mpg      mpg_z mpg_grp cyl&#xA;#&amp;gt; Mazda RX4                 Mazda RX4 2.620 21.0  0.1508848    high   6&#xA;#&amp;gt; Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0  0.1508848    high   6&#xA;#&amp;gt; Datsun 710               Datsun 710 2.320 22.8  0.4495434    high   4&#xA;#&amp;gt; Hornet 4 Drive       Hornet 4 Drive 3.215 21.4  0.2172534    high   6&#xA;#&amp;gt; Hornet Sportabout Hornet Sportabout 3.440 18.7 -0.2307345     low   8&#xA;#&amp;gt; Valiant                     Valiant 3.460 18.1 -0.3302874     low   6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create an ordered barplot, colored according to the level of mpg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggbarplot(dfm, x = &#34;name&#34;, y = &#34;mpg_z&#34;,&#xA;          fill = &#34;mpg_grp&#34;,           # change fill color by mpg_level&#xA;          color = &#34;white&#34;,            # Set bar border colors to white&#xA;          palette = &#34;jco&#34;,            # jco journal color palett. see ?ggpar&#xA;          sort.val = &#34;asc&#34;,           # Sort the value in ascending order&#xA;          sort.by.groups = FALSE,     # Don&#39;t sort inside each group&#xA;          x.text.angle = 90,          # Rotate vertically x axis texts&#xA;          ylab = &#34;MPG z-score&#34;,&#xA;          xlab = FALSE,&#xA;          legend.title = &#34;MPG Group&#34;&#xA;          )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-deviation-graphs-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rotate the plot: use rotate = TRUE and sort.val = &#34;desc&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggbarplot(dfm, x = &#34;name&#34;, y = &#34;mpg_z&#34;,&#xA;          fill = &#34;mpg_grp&#34;,           # change fill color by mpg_level&#xA;          color = &#34;white&#34;,            # Set bar border colors to white&#xA;          palette = &#34;jco&#34;,            # jco journal color palett. see ?ggpar&#xA;          sort.val = &#34;desc&#34;,          # Sort the value in descending order&#xA;          sort.by.groups = FALSE,     # Don&#39;t sort inside each group&#xA;          x.text.angle = 90,          # Rotate vertically x axis texts&#xA;          ylab = &#34;MPG z-score&#34;,&#xA;          legend.title = &#34;MPG Group&#34;,&#xA;          rotate = TRUE,&#xA;          ggtheme = theme_minimal()&#xA;          )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-deviation-graphs-horizontal-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dot charts&lt;/h2&gt; &#xA;&lt;h3&gt;Lollipop chart&lt;/h3&gt; &#xA;&lt;p&gt;Lollipop chart is an alternative to bar plots, when you have a large set of values to visualize.&lt;/p&gt; &#xA;&lt;p&gt;Lollipop chart colored by the grouping variable &#34;cyl&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggdotchart(dfm, x = &#34;name&#34;, y = &#34;mpg&#34;,&#xA;           color = &#34;cyl&#34;,                                # Color by groups&#xA;           palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;), # Custom color palette&#xA;           sorting = &#34;ascending&#34;,                        # Sort value in descending order&#xA;           add = &#34;segments&#34;,                             # Add segments from y = 0 to dots&#xA;           ggtheme = theme_pubr()                        # ggplot2 theme&#xA;           )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-lollipop-chart-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sort in decending order. &lt;strong&gt;sorting = &#34;descending&#34;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Rotate the plot vertically, using &lt;strong&gt;rotate = TRUE&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Sort the mpg value inside each group by using &lt;strong&gt;group = &#34;cyl&#34;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;strong&gt;dot.size&lt;/strong&gt; to 6.&lt;/li&gt; &#xA; &lt;li&gt;Add mpg values as label. &lt;strong&gt;label = &#34;mpg&#34;&lt;/strong&gt; or &lt;strong&gt;label = round(dfm$mpg)&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggdotchart(dfm, x = &#34;name&#34;, y = &#34;mpg&#34;,&#xA;           color = &#34;cyl&#34;,                                # Color by groups&#xA;           palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;), # Custom color palette&#xA;           sorting = &#34;descending&#34;,                       # Sort value in descending order&#xA;           add = &#34;segments&#34;,                             # Add segments from y = 0 to dots&#xA;           rotate = TRUE,                                # Rotate vertically&#xA;           group = &#34;cyl&#34;,                                # Order by groups&#xA;           dot.size = 6,                                 # Large dot size&#xA;           label = round(dfm$mpg),                        # Add mpg values as dot labels&#xA;           font.label = list(color = &#34;white&#34;, size = 9, &#xA;                             vjust = 0.5),               # Adjust label parameters&#xA;           ggtheme = theme_pubr()                        # ggplot2 theme&#xA;           )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-lollipop-chart-rotate-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Deviation graph:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use y = &#34;mpg_z&#34;&lt;/li&gt; &#xA; &lt;li&gt;Change segment color and size: add.params = list(color = &#34;lightgray&#34;, size = 2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggdotchart(dfm, x = &#34;name&#34;, y = &#34;mpg_z&#34;,&#xA;           color = &#34;cyl&#34;,                                # Color by groups&#xA;           palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;), # Custom color palette&#xA;           sorting = &#34;descending&#34;,                       # Sort value in descending order&#xA;           add = &#34;segments&#34;,                             # Add segments from y = 0 to dots&#xA;           add.params = list(color = &#34;lightgray&#34;, size = 2), # Change segment color and size&#xA;           group = &#34;cyl&#34;,                                # Order by groups&#xA;           dot.size = 6,                                 # Large dot size&#xA;           label = round(dfm$mpg_z,1),                        # Add mpg values as dot labels&#xA;           font.label = list(color = &#34;white&#34;, size = 9, &#xA;                             vjust = 0.5),               # Adjust label parameters&#xA;           ggtheme = theme_pubr()                        # ggplot2 theme&#xA;           )+&#xA;  geom_hline(yintercept = 0, linetype = 2, color = &#34;lightgray&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-lollipop-chart-deviation-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cleveland&#39;s dot plot&lt;/h3&gt; &#xA;&lt;p&gt;Color y text by groups. Use y.text.col = TRUE.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggdotchart(dfm, x = &#34;name&#34;, y = &#34;mpg&#34;,&#xA;           color = &#34;cyl&#34;,                                # Color by groups&#xA;           palette = c(&#34;#00AFBB&#34;, &#34;#E7B800&#34;, &#34;#FC4E07&#34;), # Custom color palette&#xA;           sorting = &#34;descending&#34;,                       # Sort value in descending order&#xA;           rotate = TRUE,                                # Rotate vertically&#xA;           dot.size = 2,                                 # Large dot size&#xA;           y.text.col = TRUE,                            # Color y text by groups&#xA;           ggtheme = theme_pubr()                        # ggplot2 theme&#xA;           )+&#xA;  theme_cleveland()                                      # Add dashed grids&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/ggpubr/master/tools/README-cleveland-dot-plots-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;p&gt;Find out more at &lt;a href=&#34;https://rpkgs.datanovia.com/ggpubr&#34;&gt;https://rpkgs.datanovia.com/ggpubr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blog posts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A. Kassambara. &lt;a href=&#34;http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/&#34;&gt;ggpubr R Package: ggplot2-Based Publication Ready Plots&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>r-lib/devtools</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/r-lib/devtools</id>
    <link href="https://github.com/r-lib/devtools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tools to make an R developer&#39;s life easier&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;devtools &lt;img src=&#34;https://raw.githubusercontent.com/r-lib/devtools/main/man/figures/logo.svg?sanitize=true&#34; align=&#34;right&#34; height=&#34;150/&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/devtools/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/r-lib/devtools/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/r-lib/devtools?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-lib/devtools/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=devtools&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/devtools&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The aim of devtools is to make package development easier by providing R functions that simplify and expedite common tasks. &lt;a href=&#34;https://r-pkgs.org/&#34;&gt;R Packages&lt;/a&gt; is a book based around this workflow.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install devtools from CRAN&#xA;install.packages(&#34;devtools&#34;)&#xA;&#xA;# Or the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;r-lib/devtools&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rawgit.com/rstudio/cheatsheets/main/package-development.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/batpigandme/cheatsheets/1c942c36846559b3e8efbd40d023bc351aeed6ba/pngs/thumbnails/package-development-thumbs.png&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;All devtools functions accept a path as an argument, e.g. &lt;code&gt;load_all(&#34;path/to/mypkg&#34;)&lt;/code&gt;. If you don&#39;t specify a path, devtools will look in the current working directory - this is a recommended practice.&lt;/p&gt; &#xA;&lt;h3&gt;Frequent development tasks:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;load_all()&lt;/code&gt; simulates installing and reloading your package, loading R code in &lt;code&gt;R/&lt;/code&gt;, compiled shared objects in &lt;code&gt;src/&lt;/code&gt; and data files in &lt;code&gt;data/&lt;/code&gt;. During development you would usually want to access all functions (even un-exported internal ones) so &lt;code&gt;load_all()&lt;/code&gt; works as if all functions were exported in the package &lt;code&gt;NAMESPACE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;document()&lt;/code&gt; updates generated documentation in &lt;code&gt;man/&lt;/code&gt;, file collation and &lt;code&gt;NAMESPACE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test()&lt;/code&gt; reloads your code with &lt;code&gt;load_all()&lt;/code&gt;, then runs all &lt;code&gt;testthat&lt;/code&gt; tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test_coverage()&lt;/code&gt; runs test coverage on your package with &lt;a href=&#34;https://github.com/r-lib/covr&#34;&gt;covr&lt;/a&gt;. This makes it easy to see what parts of your package could use more tests!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building and installing:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;install()&lt;/code&gt; reinstalls the package, detaches the currently loaded version then reloads the new version with &lt;code&gt;library()&lt;/code&gt;. Reloading a package is not guaranteed to work: see the documentation for &lt;code&gt;unload()&lt;/code&gt; for caveats.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;build()&lt;/code&gt; builds a package file from package sources. You can use it to build a binary version of your package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;install_*&lt;/code&gt; functions install an R package:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_github()&lt;/code&gt; from GitHub&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_gitlab()&lt;/code&gt; from GitLab&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_bitbucket()&lt;/code&gt; from Bitbucket&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_url()&lt;/code&gt; from an arbitrary url&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_git()&lt;/code&gt; and &lt;code&gt;install_svn()&lt;/code&gt; from an arbitrary git or SVN repository&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_local()&lt;/code&gt; from a local file on disk&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install_version()&lt;/code&gt; from a specific version on CRAN&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;update_packages()&lt;/code&gt; updates a package to the latest version. This works both on packages installed from CRAN as well as those installed from any of the &lt;code&gt;install_*&lt;/code&gt; functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Check and release:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;check()&lt;/code&gt; updates the documentation, then builds and checks the package locally. &lt;code&gt;check_win()&lt;/code&gt; checks a package using &lt;a href=&#34;https://win-builder.r-project.org/&#34;&gt;win-builder&lt;/a&gt;, and &lt;code&gt;check_rhub()&lt;/code&gt; checks a package using &lt;a href=&#34;https://log.r-hub.io/&#34;&gt;r-hub&lt;/a&gt;. This allows you to easily check your package on all systems CRAN uses before submission.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;release()&lt;/code&gt; makes sure everything is ok with your package (including asking you a number of questions), then builds and uploads to CRAN.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learning more&lt;/h2&gt; &#xA;&lt;p&gt;R package development can be intimidating, however there are now a number of valuable resources to help!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://r-pkgs.org&#34;&gt;&lt;img src=&#34;http://r-pkgs.org/images/cover.png&#34; height=&#34;252&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;R Packages is a book that gives a comprehensive treatment of all common parts of package development and uses devtools throughout.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The first edition is available at &lt;a href=&#34;https://r-pkgs.org/&#34;&gt;https://r-pkgs.org/&lt;/a&gt;, but note that it has grown somewhat out of sync with the current version of devtools.&lt;/li&gt; &#xA;   &lt;li&gt;A second edition is under development and is evolving to reflect the current state of devtools. It is available at &lt;a href=&#34;https://r-pkgs.org&#34;&gt;https://r-pkgs.org&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://r-pkgs.org/whole-game.html&#34;&gt;Whole Game&lt;/a&gt; and &lt;a href=&#34;https://r-pkgs.org/package-structure-state.html&#34;&gt;Package structure&lt;/a&gt; chapters make great places to start.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.rstudio.com/c/package-development/11&#34;&gt;RStudio community - package development&lt;/a&gt; is a great place to ask specific questions related to package development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://devguide.ropensci.org/&#34;&gt;rOpenSci packages&lt;/a&gt; has extensive documentation on best practices for R packages looking to be contributed to rOpenSci, but also very useful general recommendations for package authors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There are a number of fantastic blog posts on writing your first package, including&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&#34;&gt;Writing an R package from scratch - Hilary Parker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://masalmon.eu/2017/12/11/goodrpackages/&#34;&gt;How to develop good R packages - Maëlle Salmon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tinyheero.github.io/jekyll/update/2015/07/26/making-your-first-R-package.html&#34;&gt;Making your first R package - Fong Chun Chan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://r-mageddon.netlify.app/post/writing-an-r-package-from-scratch/&#34;&gt;Writing an R package from scratch - Tomas Westlake&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/doc/manuals/r-release/R-exts.html&#34;&gt;Writing R Extensions&lt;/a&gt; is the exhaustive, canonical reference for writing R packages, maintained by the R core developers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Conscious uncoupling&lt;/h2&gt; &#xA;&lt;p&gt;devtools started off as a lean-and-mean package to facilitate local package development, but over the years it accumulated more and more functionality. devtools has undergone a &lt;a href=&#34;https://web.archive.org/web/20140326060230/https://www.goop.com/journal/be/conscious-uncoupling&#34;&gt;conscious uncoupling&lt;/a&gt; to split out functionality into smaller, more tightly focussed packages. This includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/testthat&#34;&gt;testthat&lt;/a&gt;: Writing and running tests (i.e. &lt;code&gt;test()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/roxygen2&#34;&gt;roxygen2&lt;/a&gt;: Function and package documentation (i.e. &lt;code&gt;document()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/remotes&#34;&gt;remotes&lt;/a&gt;: Installing packages (i.e. &lt;code&gt;install_github()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/pkgbuild&#34;&gt;pkgbuild&lt;/a&gt;: Building binary packages (including checking if build tools are available) (i.e. &lt;code&gt;build()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/pkgload&#34;&gt;pkgload&lt;/a&gt;: Simulating package loading (i.e. &lt;code&gt;load_all()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/rcmdcheck&#34;&gt;rcmdcheck&lt;/a&gt;: Running R CMD check and reporting the results (i.e. &lt;code&gt;check()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/revdepcheck&#34;&gt;revdepcheck&lt;/a&gt;: Running R CMD check on all reverse dependencies, and figuring out what&#39;s changed since the last CRAN release (i.e. &lt;code&gt;revdep_check()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;: R session info (i.e. &lt;code&gt;session_info()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/usethis&#34;&gt;usethis&lt;/a&gt;: Automating package setup (i.e. &lt;code&gt;use_test()&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generally, you would not need to worry about these different packages, because devtools installs all of them automatically. You will need to care, however, if you&#39;re filing a bug because reporting it at the correct place will lead to a speedier resolution.&lt;/p&gt; &#xA;&lt;p&gt;You may also need to care if you are trying to use some devtools functionality in your own package or deployed application. Generally in these cases it is better to depend on the particular package directly rather than depend on devtools, e.g. use &lt;code&gt;sessioninfo::session_info()&lt;/code&gt; rather than &lt;code&gt;devtools::session_info()&lt;/code&gt;, or &lt;code&gt;remotes::install_github()&lt;/code&gt; vs &lt;code&gt;devtools::install_github()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However for day to day development we recommend you continue to use &lt;code&gt;library(devtools)&lt;/code&gt; to quickly load all needed development tools, just like &lt;code&gt;library(tidyverse)&lt;/code&gt; quickly loads all the tools necessary for data exploration and visualization.&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the devtools project is released with a &lt;a href=&#34;https://github.com/r-lib/devtools/raw/main/.github/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r-lib/remotes</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/r-lib/remotes</id>
    <link href="https://github.com/r-lib/remotes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Install R packages from GitHub, GitLab, Bitbucket, git, svn repositories, URLs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;remotes&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Install R Packages from remote or local repositories, including GitHub, GitLab, Bitbucket, and Bioconductor&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/r-lib/remotes/actions&#34;&gt;&lt;img src=&#34;https://github.com/r-lib/remotes/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/r-lib/remotes?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/r-lib/remotes/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.r-pkg.org/pkg/remotes&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/remotes&#34; alt=&#34;CRAN RStudio mirror downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.r-pkg.org/pkg/remotes&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/remotes&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Download and install R packages stored in GitHub, GitLab, Bitbucket, Bioconductor, or plain subversion or git repositories. This package is a lightweight replacement of the &lt;code&gt;install_*&lt;/code&gt; functions in &lt;a href=&#34;https://github.com/r-lib/devtools&#34;&gt;&lt;code&gt;devtools&lt;/code&gt;&lt;/a&gt;. Indeed most of the code was copied over from &lt;code&gt;devtools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install packages with their dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Install from GitHub, GitLab, Bitbucket.&lt;/li&gt; &#xA;   &lt;li&gt;Install from git and subversion repositories.&lt;/li&gt; &#xA;   &lt;li&gt;Install from local files or URLs.&lt;/li&gt; &#xA;   &lt;li&gt;Install the dependencies of a local package tree.&lt;/li&gt; &#xA;   &lt;li&gt;Install specific package versions from CRAN.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://bioconductor.org/&#34;&gt;Bioconductor&lt;/a&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;code&gt;Remotes&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;. See more in the &lt;a href=&#34;https://github.com/r-lib/remotes/raw/HEAD/vignettes/dependencies.Rmd&#34;&gt;dependencies&lt;/a&gt; vignette.&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;code&gt;Additional_repositories&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Can install itself from GitHub (see below).&lt;/li&gt; &#xA; &lt;li&gt;Does not depend on other R packages.&lt;/li&gt; &#xA; &lt;li&gt;Does not contain compiled code, so no compiler is needed.&lt;/li&gt; &#xA; &lt;li&gt;Does not need any external software (for most of the functionality at least).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the released version of remotes from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;remotes&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Note that most of the examples here use GitHub. See below for other supported repository types.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest version of a package in the default branch from GitHub, you can use the &lt;code&gt;user/repo&lt;/code&gt; form. Note that &lt;code&gt;user&lt;/code&gt; can also be an organization:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;r-lib/conflicted&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the R package is inside a subdirectory of the root directory, then give this subdirectory as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# build = FALSE because of some specificities of XGBoost package&#xA;install_github(&#34;dmlc/xgboost/R-package&#34;, build = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a certain branch or commit or tag, append it to the repo name, after an &lt;code&gt;@&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;gaborcsardi/pkgconfig@v2.0.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the latest release, append &lt;code&gt;@*release&lt;/code&gt; to the repo name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;gaborcsardi/pkgconfig@*release&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a pull request, append &lt;code&gt;#&lt;/code&gt; and the id (an integer number) of the pull request to the repo name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;r-lib/pkgconfig#7&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Dependencies are automatically installed from CRAN. By default, outdated dependencies are automatically upgraded. In interactive sessions you can select a subset of the dependencies to upgrade.&lt;/p&gt; &#xA;&lt;h4&gt;Dependencies on GitHub&lt;/h4&gt; &#xA;&lt;p&gt;It is also possible to install dependencies from GitHub or other supported repositories. For this you need to add a &lt;code&gt;Remotes&lt;/code&gt; field to the &lt;code&gt;DESCRIPTION&lt;/code&gt; file. Its format is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Remotes: [remote::]repo_spec, [remote::]repo_spec, ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;repo_spec&lt;/code&gt; is any repository specification the corresponding &lt;code&gt;install_()&lt;/code&gt; function can handle. If &lt;code&gt;remote::&lt;/code&gt; is missing, &lt;code&gt;github::&lt;/code&gt; is assumed. Other possible values: &lt;code&gt;gitlab::&lt;/code&gt;,&lt;code&gt;bitbucket::&lt;/code&gt;, &lt;code&gt;git::&lt;/code&gt;, &lt;code&gt;local::&lt;/code&gt;, &lt;code&gt;svn::&lt;/code&gt;, &lt;code&gt;url::&lt;/code&gt;, &lt;code&gt;version::&lt;/code&gt;, &lt;code&gt;cran::&lt;/code&gt;, &lt;code&gt;bioc::&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See more about the &lt;code&gt;Remotes&lt;/code&gt; field in this &lt;a href=&#34;https://remotes.r-lib.org/articles/dependencies.html&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Additional repositories&lt;/h4&gt; &#xA;&lt;p&gt;remotes supports the &lt;code&gt;Additional_repositories&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;. This is a way to specify dependencies from non-CRAN package repositories. See the &lt;a href=&#34;https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-Dependencies&#34;&gt;Writing R extensions&lt;/a&gt; manual for details.&lt;/p&gt; &#xA;&lt;h4&gt;Bioconductor packages&lt;/h4&gt; &#xA;&lt;p&gt;Bioconductor packages are automatically detected and their dependencies are installed from Bioconductor.&lt;/p&gt; &#xA;&lt;h4&gt;Currently supported remote types&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub repositories via &lt;code&gt;install_github&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bitbucket repositories via &lt;code&gt;install_bitbucket&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generic git repositories via &lt;code&gt;install_git&lt;/code&gt;. They need either a system git installation, or the &lt;a href=&#34;https://github.com/ropensci/git2r&#34;&gt;git2r&lt;/a&gt; R package.&lt;/li&gt; &#xA; &lt;li&gt;Local directories or package archive files via &lt;code&gt;install_local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Remote package archive files via &lt;code&gt;install_url&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Packages in subversion repositories via &lt;code&gt;install_svn&lt;/code&gt;. They need a system subversion installation.&lt;/li&gt; &#xA; &lt;li&gt;Specific package versions from CRAN or other CRAN-like repositories via &lt;code&gt;install_version&lt;/code&gt;. This includes outdated and archived packages as well.&lt;/li&gt; &#xA; &lt;li&gt;All dependencies of a package in a local directory via &lt;code&gt;install_deps&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For R older than 3.2, the curl package is required as remotes falls back to &lt;code&gt;curl::curl_download&lt;/code&gt; in that case&lt;/li&gt; &#xA; &lt;li&gt;For R newer than 3.3, default &lt;code&gt;download.file()&lt;/code&gt; method is used. (&lt;code&gt;method = &#34;auto&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;For in between versions, &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;method = &#34;wininet&#34;&lt;/code&gt; is used on windows OS&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;method = &#34;libcurl&#34;&lt;/code&gt; is used on other OS, if available.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;code&gt;help(&#34;download.file&#34;)&lt;/code&gt; for informations on these methods and for setting proxies if needed.&lt;/p&gt; &#xA;&lt;h3&gt;Standalone mode&lt;/h3&gt; &#xA;&lt;p&gt;remotes will use the curl, git2r and pkgbuild packages if they are installed to provide faster implementations for some aspects of the install process. However if you are using remotes to install or update these packages (or their reverse dependencies) using them during installation may fail (particularly on Windows).&lt;/p&gt; &#xA;&lt;p&gt;If you set the environment variable &lt;code&gt;R_REMOTES_STANDALONE=&#34;true&#34;&lt;/code&gt; (e.g. in R &lt;code&gt;Sys.setenv(R_REMOTES_STANDALONE=&#34;true&#34;)&lt;/code&gt;) you can force remotes to operate in standalone mode and use only its internal R implementations. This will allow successful installation of these packages.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;remotes uses the following standard R options, see &lt;code&gt;?options&lt;/code&gt; for their details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;download.file.method&lt;/code&gt; for the default download method. See &lt;code&gt;?download.file&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;pkgType&lt;/code&gt; for the package type (source or binary, see manual) to install, download or look up dependencies for.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;repos&lt;/code&gt; for the locations of the user&#39;s standard CRAN(-like) repositories.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It also uses some remotes specific options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BioC_git&lt;/code&gt; for the URL of the default Bioconductor git mirror.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BioC_mirror&lt;/code&gt; for the URL of the Bioconductor mirror.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;unzip&lt;/code&gt; for the path of the external &lt;code&gt;unzip&lt;/code&gt; program.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;BITBUCKET_USER&lt;/code&gt; and &lt;code&gt;BITBUCKET_PASSWORD&lt;/code&gt; environment variables are used for the default Bitbucket user name and password, in &lt;code&gt;install_bitbucket()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;GITHUB_PAT&lt;/code&gt; environment variable is used as the default GitHub personal access token for all GitHub API queries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_BIOC_MIRROR&lt;/code&gt; environment variable can be used to specify an alternative Bioconductor mirror. (The &lt;code&gt;BioC_mirror&lt;/code&gt; option takes precedence over this.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_BIOC_VERSION&lt;/code&gt; environment variable can be used to force a Bioconductor version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;R_REMOTES_UPGRADE&lt;/code&gt; environment variable can be used to set a default preferred value for the &lt;code&gt;upgrade =&lt;/code&gt; argument accepted by the various &lt;code&gt;install_*()&lt;/code&gt; functions. For example, you can set &lt;code&gt;R_REMOTES_UPGRADE=&#34;always&#34;&lt;/code&gt; to upgrade dependent packages without asking the user.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting &lt;code&gt;R_REMOTES_STANDALONE=&#34;true&#34;&lt;/code&gt; forces remotes to work in standalone mode and avoid loading its optional dependencies (curl, git2 and pkgbuild currently. See &#34;Standalone mode&#34; above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting &lt;code&gt;R_REMOTES_NO_ERRORS_FROM_WARNINGS=&#34;false&#34;&lt;/code&gt; will cause warning messages during calls to &lt;code&gt;install.packages()&lt;/code&gt; to become errors. Often warning messages are caused by dependencies failing to install.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL (&amp;gt;= 2) © Mango Solutions, RStudio&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zizroc/villager</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/zizroc/villager</id>
    <link href="https://github.com/zizroc/villager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;villager is an extensible agent based modeling (ABM) framework for the R language. It supports agents, agent aggregations and their associated resources, as well as flexible data management.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;villager &lt;img src=&#34;https://raw.githubusercontent.com/zizroc/villager/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=villager&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/villager?color=green&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/293921124&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/293921124.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zizroc/villager/actions&#34;&gt;&lt;img src=&#34;https://github.com/zizroc/villager/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/zizroc/villager?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/zizroc/villager/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;villager is a framework for creating and running agent based models in R. Its purpose is to provide an extensible framework where modeling can be done in native R.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extensible data output system (csv, excel sheets, sqlite)&lt;/li&gt; &#xA; &lt;li&gt;Built in support for agents and resources&lt;/li&gt; &#xA; &lt;li&gt;Easy to use time management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;villager&lt;/em&gt; can be installed from CRAN by running the following,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;install.packages(&#34;villager&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Takeaways&lt;/h2&gt; &#xA;&lt;p&gt;When reading though the Readme and vignettes, it&#39;s important to take note of a few concepts&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Villages are the highest aggregate; they contain villages which in turn contain agents (winiks)&lt;/li&gt; &#xA; &lt;li&gt;Agents and resources can be subclassed to support additional properties&lt;/li&gt; &#xA; &lt;li&gt;The data_writer class can be subclassed when writing to data sources other than csv&lt;/li&gt; &#xA; &lt;li&gt;Models are functions that are added to villages; each village can exhibit different behavior&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using villager&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;villager&lt;/code&gt; is about modeling populations with (optional) associated resources. It supports a community level aggregation of agents, referred to as &lt;em&gt;villages&lt;/em&gt; or an individual &lt;em&gt;village&lt;/em&gt;. Agents, which are referred to as gender-neutral &lt;em&gt;winiks&lt;/em&gt;, are members of community level aggregations.&lt;/p&gt; &#xA;&lt;p&gt;villager compliant models &lt;em&gt;must&lt;/em&gt; conform to the function template below. The &lt;code&gt;winik_mgr&lt;/code&gt; and &lt;code&gt;resource_mgr&lt;/code&gt; are responsible for interacting with the individual agents and resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;test_model &amp;lt;- function(current_state, previous_state, model_data, winik_mgr, resource_mgr) {&#xA;  ...&#xA;  ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating &amp;amp; Managing Agents&lt;/h3&gt; &#xA;&lt;p&gt;Agents are created by instantiating the &lt;code&gt;winik&lt;/code&gt; class. There are a number of winik properties that can be passed to the constructor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;test_model &amp;lt;- function(current_state, previous_state, model_data, winik_mgr, resource_mgr) {&#xA;  mother &amp;lt;- winik$new(first_name=&#34;Kirsten&#34;, last_name=&#34;Taylor&#34;, age=9125)&#xA;  father &amp;lt;- winik$new(first_name=&#34;Joshua&#34;, last_name=&#34;Thompson&#34;, age=7300)&#xA;  daughter &amp;lt;- winik$new(first_name=&#34;Mariylyyn&#34;, last_name=&#34;Thompson&#34;, age=10220)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To add winiks to the simulation, use the provided &lt;code&gt;winik_mgr&lt;/code&gt; object to call &lt;code&gt;add_winik&lt;/code&gt;. Because the classes are R6, the object can be modified after being added to the manager and the changes will be persisted without needing to re-add the villager. For example, setting a daughter&#39;s mother and her father below. Note that the standard way is to modify the properties &lt;em&gt;beforehand&lt;/em&gt;, although not strictly necessary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;test_model &amp;lt;- function(current_state, previous_state, model_data, winik_mgr, resource_mgr) {&#xA;  winik_mgr &amp;lt;- winik_manager$new()&#xA;  winik_mgr$add_winik(mother)&#xA;  winik_mgr$add_winik(father)&#xA;  winik_mgr$add_winik(daughter)&#xA;  daughter$mother_id &amp;lt;- mother$identifier&#xA;  daughter$father_id &amp;lt;- father$identifier&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The winik manager can also be used to pair winiks, representitive of a relationship or social bond.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;winik_mgr$winik_mgr$connect_winiks(mother, father)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating &amp;amp; Managing Resources&lt;/h3&gt; &#xA;&lt;p&gt;Resources are similar to winiks in that they&#39;re both R6 classes, are instantiated similarly, and are also managed by an object passed into the model. An example of creating resources and adding them to the simualtion is given below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;test_model &amp;lt;- function(current_state, previous_state, model_data, winik_mgr, resource_mgr) {&#xA;  corn_resource &amp;lt;- resource$new(name=&#34;corn&#34;, quantity = 10)&#xA;  fish_resource &amp;lt;- resource$new(name=&#34;fish&#34;, quantity = 15)&#xA;  corn_resource$quantity=5&#xA;  &#xA;  resource_mgr &amp;lt;- resource_manager$new()&#xA;  resource_mgr$add_resource(corn_resource)&#xA;  resource_mgr$add_resource(fish_resource)&#xA;  fish_resource$quantity=5&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;State&lt;/h3&gt; &#xA;&lt;p&gt;Objects of type &lt;code&gt;village&lt;/code&gt;, &lt;code&gt;winik&lt;/code&gt;, and &lt;code&gt;resource&lt;/code&gt;have particular states at a particular time. As the simulation progresses, the state of these change based on model logic. At the end of each time step, the state of each object is saved, giving a complete record of the system&#39;s evolution. The essence of any agent based model is changing the state at each time step. villager provides a mechanim for defining the initial state and for changing the state throughout the simulation.&lt;/p&gt; &#xA;&lt;h3&gt;Managing the Initial State&lt;/h3&gt; &#xA;&lt;p&gt;Creating the initial state is done by creating a function that resembles model functions from above. The manager classes are used to populate the village with an initial population of agents and resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;initial_condition &amp;lt;- function(current_state, model_data, winik_mgr, resource_mgr) {&#xA;  # Create the initial villagers&#xA;  mother &amp;lt;- winik$new(first_name=&#34;Kirsten&#34;, last_name=&#34;Taylor&#34;, age=9125)&#xA;  father &amp;lt;- winik$new(first_name=&#34;Joshua&#34;, last_name=&#34;Thompson&#34;, age=7300)&#xA;  daughter &amp;lt;- winik$new(first_name=&#34;Mariylyyn&#34;, last_name=&#34;Thompson&#34;, age=10220)&#xA;  daughter$mother_id &amp;lt;- mother$identifier&#xA;  daughter$father_id &amp;lt;- father$identifier&#xA;  &#xA;  # Add the winiks to the manager&#xA;  winik_mgr$connect_winiks(mother, father)&#xA;  winik_mgr$add_winik(mother)&#xA;  winik_mgr$add_winik(father)&#xA;  winik_mgr$add_winik(daughter)&#xA;  &#xA;  # Create the resources&#xA;  corn_resource &amp;lt;- resource$new(name=&#34;corn&#34;, quantity = 10)&#xA;  fish_resource &amp;lt;- resource$new(name=&#34;fish&#34;, quantity = 15)&#xA;  &#xA;  # Add the resources to the manager&#xA;  resource_mgr$add_resource(corn_resource)&#xA;  resource_mgr$add_resource(fish_resource)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating Villages and Running Models&lt;/h2&gt; &#xA;&lt;p&gt;Models are tied to particular village instances. This binding is done when villages are created, shown below. Models can have names and must always be paired with an initial condition function and a model function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;small_village &amp;lt;- village$new(&#34;Test Model 1&#34;, initial_condition, test_model)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;simulator&lt;/code&gt; class is responsible for running simulations. It encapsulates &lt;em&gt;all&lt;/em&gt; of the villages and controls the duration of the simulation. The simulator below runs for 100 time steps: roughly 13 years. The simulator can be paired with any number of villages, in the case of the simulator below, there&#39;s only a single village.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;simulator &amp;lt;- simulation$new(100, list(small_village))&#xA;simulator$run_model()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example: A small village with a single family&lt;/h3&gt; &#xA;&lt;p&gt;We can combine the examples above into a full simulation that...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Starts with an initial population of three villagers&lt;/li&gt; &#xA; &lt;li&gt;Increases the age of each villager at the start of each day&lt;/li&gt; &#xA; &lt;li&gt;Runs for 4745 days&lt;/li&gt; &#xA; &lt;li&gt;Sets the villager profession after age 12&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(villager)&#xA;initial_condition &amp;lt;- function(current_state, model_data, winik_mgr, resource_mgr) {&#xA;  # Create the initial villagers&#xA;  mother &amp;lt;- winik$new(first_name=&#34;Kirsten&#34;, last_name=&#34;Taylor&#34;, age=9125)&#xA;  father &amp;lt;- winik$new(first_name=&#34;Joshua&#34;, last_name=&#34;Thompson&#34;, age=7300)&#xA;  daughter &amp;lt;- winik$new(first_name=&#34;Mariylyyn&#34;, last_name=&#34;Thompson&#34;, age=10220)&#xA;  daughter$mother_id &amp;lt;- mother$identifier&#xA;  daughter$father_id &amp;lt;- father$identifier&#xA;  &#xA;  # Add the winiks to the manager&#xA;  winik_mgr$connect_winiks(mother, father)&#xA;  winik_mgr$add_winik(mother)&#xA;  winik_mgr$add_winik(father)&#xA;  winik_mgr$add_winik(daughter)&#xA;  &#xA;  # Create the resources&#xA;  corn_resource &amp;lt;- resource$new(name=&#34;corn&#34;, quantity = 10)&#xA;  fish_resource &amp;lt;- resource$new(name=&#34;fish&#34;, quantity = 15)&#xA;  &#xA;  # Add the resources to the manager&#xA;  resource_mgr$add_resource(corn_resource)&#xA;  resource_mgr$add_resource(fish_resource)&#xA;}&#xA;&#xA;test_model &amp;lt;- function(current_state, previous_state, model_data, winik_mgr, resource_mgr) {&#xA;print(paste(&#34;Step:&#34;, current_state$step))&#xA;  for (winik in winik_mgr$get_living_winiks()) {&#xA;    winik$age &amp;lt;- winik$age+1&#xA;    if (winik$age &amp;gt;= 4383) {&#xA;      winik$profession &amp;lt;- &#34;Farmer&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;small_village &amp;lt;- village$new(&#34;Test Model&#34;, initial_condition, test_model)&#xA;simulator &amp;lt;- simulation$new(4745, list(small_village))&#xA;simulator$run_model()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example: Creating new villagers&lt;/h3&gt; &#xA;&lt;p&gt;To demonstrate programatically creating villagers, consider the model below that has the following logic.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Starts with 10 villagers&lt;/li&gt; &#xA; &lt;li&gt;Every even day, two new villagers are created&lt;/li&gt; &#xA; &lt;li&gt;Every odd day, one villager dies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(villager)&#xA;    current_day &amp;lt;- current_state$step&#xA;    print(current_day)&#xA;    if((current_day%%2) == 0) {&#xA;      # Then it&#39;s an even day&#xA;      # Create two new winiks whose first names are random numbers&#xA;      for (i in 1:2) {&#xA;        name &amp;lt;- runif(1, 0.0, 100)&#xA;        new_winik &amp;lt;- winik$new(first_name &amp;lt;- name, last_name &amp;lt;- &#34;Smith&#34;)&#xA;        winik_mgr$add_winik(new_winik)&#xA;      }&#xA;    } else {&#xA;      # It&#39;s an odd day&#xA;      living_winiks &amp;lt;- winik_mgr$get_living_winiks()&#xA;      # Kill the first one&#xA;      living_winiks[[1]]$alive &amp;lt;- FALSE&#xA;    }&#xA;  }&#xA;  coastal_village &amp;lt;- village$new(&#34;Test village&#34;, initial_condition, model)&#xA;  simulator &amp;lt;- simulation$new(4, villages = list(coastal_village))&#xA;  simulator$run_model()&#xA;  mgr &amp;lt;- simulator$villages[[1]]$winik_mgr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;In the examples above, the default properties of agents and resources were used. It&#39;s possible that these won&#39;t cover all the needs for more diverse models. There are vignettes on extending the agent and resource classes to handle these situations.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Code contributions are welcome as pull requests to the &lt;code&gt;develop&lt;/code&gt; branch. Bugs, comments, and questions can be submitted as Github Issues.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>slowkow/ggrepel</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/slowkow/ggrepel</id>
    <link href="https://github.com/slowkow/ggrepel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📍 Repel overlapping text labels away from each other.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggrepel &lt;img src=&#34;https://raw.githubusercontent.com/slowkow/ggrepel/master/man/figures/logo.svg?sanitize=true&#34; width=&#34;181px&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/slowkow/ggrepel/actions?query=workflow%3AR-CMD-check&#34;&gt;&lt;img src=&#34;https://github.com/slowkow/ggrepel/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=ggrepel&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggrepel?color=blue&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cranlogs.r-pkg.org&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/ggrepel&#34; alt=&#34;CRAN_Downloads_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ggrepel provides geoms for &lt;a href=&#34;https://ggplot2.tidyverse.org&#34;&gt;ggplot2&lt;/a&gt; to repel overlapping text labels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;geom_text_repel()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;geom_label_repel()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Text labels repel away from each other, away from data points, and away from edges of the plotting area.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggrepel)&#xA;ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +&#xA;  geom_text_repel() +&#xA;  geom_point(color = &#39;red&#39;) +&#xA;  theme_classic(base_size = 16)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://imgur.com/ii9ova8.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get ggrepel is to install it from CRAN:&#xA;install.packages(&#34;ggrepel&#34;)&#xA;&#xA;# Or get the the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;slowkow/ggrepel&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://ggrepel.slowkow.com/articles/examples.html&#34;&gt;examples&lt;/a&gt; page to learn more about how to use ggrepel in your project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/slowkow/ggrepel/issues&#34;&gt;submit an issue&lt;/a&gt; to report bugs or ask questions.&lt;/p&gt; &#xA;&lt;p&gt;Please contribute bug fixes or new features with a &lt;a href=&#34;https://help.github.com/articles/using-pull-requests/&#34;&gt;pull request&lt;/a&gt; to this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/renv</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/rstudio/renv</id>
    <link href="https://github.com/rstudio/renv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;renv: Project environments for R.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;renv&lt;a href=&#34;https://rstudio.github.io/renv/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/renv/main/man/figures/logo.svg?sanitize=true&#34; align=&#34;right&#34; height=&#34;115&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Lifecycle: stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=renv&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/renv&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rstudio/renv/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/renv/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/rstudio/renv&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/rstudio/renv?branch=main&amp;amp;svg=true&#34; alt=&#34;AppVeyor build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/rstudio/renv?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rstudio/renv/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;renv&lt;/code&gt; package helps you create &lt;strong&gt;r&lt;/strong&gt;eproducible &lt;strong&gt;env&lt;/strong&gt;ironments for your R projects. Use &lt;code&gt;renv&lt;/code&gt; to make your R projects more:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Isolated&lt;/strong&gt;: Installing a new or updated package for one project won&#39;t break your other projects, and vice versa. That&#39;s because &lt;code&gt;renv&lt;/code&gt; gives each project its own private package library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Portable&lt;/strong&gt;: Easily transport your projects from one computer to another, even across different platforms. &lt;code&gt;renv&lt;/code&gt; makes it easy to install the packages your project depends on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Reproducible&lt;/strong&gt;: &lt;code&gt;renv&lt;/code&gt; records the exact package versions you depend on, and ensures those exact versions are the ones that get installed wherever you go.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the latest version of &lt;code&gt;renv&lt;/code&gt; from CRAN with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;renv&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;renv::init()&lt;/code&gt; to initialize &lt;code&gt;renv&lt;/code&gt; with a new or existing project. This will set up your project with a private library, and also make sure to install all of the packages you&#39;re using into that library. The packages used in your project will be recorded into a &lt;em&gt;lockfile&lt;/em&gt;, called &lt;code&gt;renv.lock&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As you work in your project, you may need to install or upgrade different packages. As these packages are installed, &lt;code&gt;renv&lt;/code&gt; will automatically write &lt;code&gt;renv.lock&lt;/code&gt; for you. The &lt;code&gt;renv.lock&lt;/code&gt; lockfile records the state of your project&#39;s private library, and can be used to restore the state of that library as required.&lt;/p&gt; &#xA;&lt;p&gt;Later, if you need to port your project to a new machine, you can call &lt;code&gt;renv::restore()&lt;/code&gt; to reinstall all of the packages as declared in the lockfile.&lt;/p&gt; &#xA;&lt;h2&gt;Learning More&lt;/h2&gt; &#xA;&lt;p&gt;You can browse the package documentation online at &lt;a href=&#34;https://rstudio.github.io/renv/&#34;&gt;https://rstudio.github.io/renv/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If this is your first time using &lt;code&gt;renv&lt;/code&gt;, we strongly recommend reading the &lt;a href=&#34;https://rstudio.github.io/renv/articles/renv.html&#34;&gt;Introduction to renv&lt;/a&gt; vignette.&lt;/p&gt; &#xA;&lt;p&gt;If you have a question about &lt;code&gt;renv&lt;/code&gt;, please first check the &lt;a href=&#34;https://rstudio.github.io/renv/articles/faq.html&#34;&gt;FAQ&lt;/a&gt; to see whether your question has already been addressed. If it hasn&#39;t, please feel free to either ask on the &lt;a href=&#34;https://community.rstudio.com&#34;&gt;RStudio Community forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you believe you&#39;ve found a bug in &lt;code&gt;renv&lt;/code&gt;, please file a bug (and, if possible, a &lt;a href=&#34;https://reprex.tidyverse.org&#34;&gt;reproducible example&lt;/a&gt;) at &lt;a href=&#34;https://github.com/rstudio/renv/issues&#34;&gt;https://github.com/rstudio/renv/issues&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kassambara/survminer</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/kassambara/survminer</id>
    <link href="https://github.com/kassambara/survminer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Survival Analysis and Visualization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kassambara/survminer/actions&#34;&gt;&lt;img src=&#34;https://github.com/kassambara/survminer/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/survminer&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/survminer&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/survminer?color=orange&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#survminer-survival-analysis-and-visualization&#34;&gt;survminer: Survival Analysis and Visualization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#installation-and-loading&#34;&gt;Installation and loading&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#ggsurvplot-drawing-survival-curves&#34;&gt;ggsurvplot: Drawing survival curves&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#fitting-survival-curves&#34;&gt;Fitting survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#basic-plots&#34;&gt;Basic plots&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#computing-and-passin-p-values&#34;&gt;Computing and passing p-values&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#customized-survival-curves&#34;&gt;Customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#more-customized-survival-curves&#34;&gt;More customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-customized-survival-curves&#34;&gt;Uber customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-platinum-customized-survival-curves&#34;&gt;Uber platinum customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#uber-platinum-premium-customized-survival-curves&#34;&gt;Uber platinum premium customized survival curves&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/#blog-posts&#34;&gt;Blog posts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;survminer: Survival Analysis and Visualization&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;survminer&lt;/strong&gt; R package provides functions for facilitating &lt;strong&gt;survival analysis&lt;/strong&gt; and &lt;strong&gt;visualization&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The main functions, in the package, are organized in different categories as follow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Survival Curves&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggsurvplot&lt;/strong&gt;(): Draws survival curves with the ‘number at risk’ table, the cumulative number of events table and the cumulative number of censored subjects table.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;arrange_ggsurvplots&lt;/strong&gt;(): Arranges multiple ggsurvplots on the same page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggsurvevents&lt;/strong&gt;(): Plots the distribution of event’s times.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;surv_summary&lt;/strong&gt;(): Summary of a survival curve. Compared to the default summary() function, surv_summary() creates a data frame containing a nice summary from survfit results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;surv_cutpoint&lt;/strong&gt;(): Determines the optimal cutpoint for one or multiple continuous variables at once. Provides a value of a cutpoint that correspond to the most significant relation with survival.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pairwise_survdiff&lt;/strong&gt;(): Multiple comparisons of survival curves. Calculate pairwise comparisons between group levels with corrections for multiple testing.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Diagnostics of Cox Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxzph&lt;/strong&gt;(): Graphical test of proportional hazards. Displays a graph of the scaled Schoenfeld residuals, along with a smooth curve using ggplot2. Wrapper around plot.cox.zph().&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxdiagnostics&lt;/strong&gt;(): Displays diagnostics graphs presenting goodness of Cox Proportional Hazards Model fit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxfunctional&lt;/strong&gt;(): Displays graphs of continuous explanatory variable against martingale residuals of null cox proportional hazards model. It helps to properly choose the functional form of continuous variable in cox model.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Summary of Cox Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggforest&lt;/strong&gt;(): Draws forest plot for CoxPH model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ggcoxadjustedcurves&lt;/strong&gt;(): Plots adjusted survival curves for coxph model.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Competing Risks&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ggcompetingrisks&lt;/strong&gt;(): Plots cumulative incidence curves for competing risks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Find out more at &lt;a href=&#34;https://rpkgs.datanovia.com/survminer/&#34; class=&#34;uri&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://rpkgs.datanovia.com/survminer/&#34;&gt;https://rpkgs.datanovia.com/survminer/&lt;/a&gt;, and check out the documentation and usage examples of each of the functions in survminer package.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation and loading&lt;/h2&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://cran.r-project.org/package=survminer&#34;&gt;CRAN&lt;/a&gt; as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;survminer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, install the latest version from &lt;a href=&#34;https://github.com/kassambara/survminer&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(devtools)) install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;kassambara/survminer&#34;, build_vignettes = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load survminer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#34;survminer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ggsurvplot: Drawing survival curves&lt;/h2&gt; &#xA;&lt;h3&gt;Fitting survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(&#34;survival&#34;)&#xA;fit &amp;lt;- survfit(Surv(time, status) ~ sex, data = lung)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic plots&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(fit, data = lung)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-basic-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Censor shape can be changed as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(fit, data = lung, censor.shape=&#34;|&#34;, censor.size = 4)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customized survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(&#xA;  fit, &#xA;  data = lung, &#xA;  size = 1,                 # change line size&#xA;  palette = &#xA;    c(&#34;#E7B800&#34;, &#34;#2E9FDF&#34;),# custom color palettes&#xA;  conf.int = TRUE,          # Add confidence interval&#xA;  pval = TRUE,              # Add p-value&#xA;  risk.table = TRUE,        # Add risk table&#xA;  risk.table.col = &#34;strata&#34;,# Risk table color by groups&#xA;  legend.labs = &#xA;    c(&#34;Male&#34;, &#34;Female&#34;),    # Change legend labels&#xA;  risk.table.height = 0.25, # Useful to change when you have multiple groups&#xA;  ggtheme = theme_bw()      # Change ggplot2 theme&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that, additional arguments are available to customize the main title, axis labels, the font style, axis limits, legends and the number at risk table.&lt;/p&gt; &#xA;&lt;h3&gt;More customized survival curves&lt;/h3&gt; &#xA;&lt;p&gt;Focus on &lt;code&gt;xlim&lt;/code&gt; and &lt;code&gt;break.time.by&lt;/code&gt; parameters which do not change the calculations of estimates of survival surves. Also note &lt;code&gt;risk.table.y.text.col = TRUE&lt;/code&gt; and &lt;code&gt;risk.table.y.text = FALSE&lt;/code&gt; that provide bars instead of names in text annotations of the legend of risk table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurvplot(&#xA;   fit,                     # survfit object with calculated statistics.&#xA;   data = lung,             # data used to fit survival curves.&#xA;   risk.table = TRUE,       # show risk table.&#xA;   pval = TRUE,             # show p-value of log-rank test.&#xA;   conf.int = TRUE,         # show confidence intervals for &#xA;                            # point estimates of survival curves.&#xA;   xlim = c(0,500),         # present narrower X axis, but not affect&#xA;                            # survival estimates.&#xA;   xlab = &#34;Time in days&#34;,   # customize X axis label.&#xA;   break.time.by = 100,     # break X axis in time intervals by 500.&#xA;   ggtheme = theme_light(), # customize plot and risk table with a theme.&#xA; risk.table.y.text.col = T, # colour risk table text annotations.&#xA;  risk.table.y.text = FALSE # show bars instead of names in text annotations&#xA;                            # in legend of risk table&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-more-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Uber customized survival curves&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsurv &amp;lt;- ggsurvplot(&#xA;           fit,                     # survfit object with calculated statistics.&#xA;           data = lung,             # data used to fit survival curves.&#xA;           risk.table = TRUE,       # show risk table.&#xA;           pval = TRUE,             # show p-value of log-rank test.&#xA;           conf.int = TRUE,         # show confidence intervals for &#xA;                                    # point estimates of survival curves.&#xA;           palette = c(&#34;#E7B800&#34;, &#34;#2E9FDF&#34;),&#xA;           xlim = c(0,500),         # present narrower X axis, but not affect&#xA;                                    # survival estimates.&#xA;           xlab = &#34;Time in days&#34;,   # customize X axis label.&#xA;           break.time.by = 100,     # break X axis in time intervals by 500.&#xA;           ggtheme = theme_light(), # customize plot and risk table with a theme.&#xA;          risk.table.y.text.col = T,# colour risk table text annotations.&#xA;          risk.table.height = 0.25, # the height of the risk table&#xA;          risk.table.y.text = FALSE,# show bars instead of names in text annotations&#xA;                                    # in legend of risk table.&#xA;          ncensor.plot = TRUE,      # plot the number of censored subjects at time t&#xA;          ncensor.plot.height = 0.25,&#xA;          conf.int.style = &#34;step&#34;,  # customize style of confidence intervals&#xA;          surv.median.line = &#34;hv&#34;,  # add the median survival pointer.&#xA;          legend.labs = &#xA;            c(&#34;Male&#34;, &#34;Female&#34;)    # change legend labels.&#xA;        )&#xA;ggsurv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Uber platinum customized survival curves&lt;/h3&gt; &#xA;&lt;p&gt;Helper function to customize plot labels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;customize_labels &amp;lt;- function (p, font.title = NULL,&#xA;                              font.subtitle = NULL, font.caption = NULL,&#xA;                              font.x = NULL, font.y = NULL, font.xtickslab = NULL, font.ytickslab = NULL)&#xA;{&#xA;  original.p &amp;lt;- p&#xA;  if(is.ggplot(original.p)) list.plots &amp;lt;- list(original.p)&#xA;  else if(is.list(original.p)) list.plots &amp;lt;- original.p&#xA;  else stop(&#34;Can&#39;t handle an object of class &#34;, class (original.p))&#xA;  .set_font &amp;lt;- function(font){&#xA;    font &amp;lt;- ggpubr:::.parse_font(font)&#xA;    ggtext::element_markdown (size = font$size, face = font$face, colour = font$color)&#xA;  }&#xA;  for(i in 1:length(list.plots)){&#xA;    p &amp;lt;- list.plots[[i]]&#xA;    if(is.ggplot(p)){&#xA;      if (!is.null(font.title)) p &amp;lt;- p + theme(plot.title = .set_font(font.title))&#xA;      if (!is.null(font.subtitle)) p &amp;lt;- p + theme(plot.subtitle = .set_font(font.subtitle))&#xA;      if (!is.null(font.caption)) p &amp;lt;- p + theme(plot.caption = .set_font(font.caption))&#xA;      if (!is.null(font.x)) p &amp;lt;- p + theme(axis.title.x = .set_font(font.x))&#xA;      if (!is.null(font.y)) p &amp;lt;- p + theme(axis.title.y = .set_font(font.y))&#xA;      if (!is.null(font.xtickslab)) p &amp;lt;- p + theme(axis.text.x = .set_font(font.xtickslab))&#xA;      if (!is.null(font.ytickslab)) p &amp;lt;- p + theme(axis.text.y = .set_font(font.ytickslab))&#xA;      list.plots[[i]] &amp;lt;- p&#xA;    }&#xA;  }&#xA;  if(is.ggplot(original.p)) list.plots[[1]]&#xA;  else list.plots&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customized plot labels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Changing Labels&#xA;# %%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Labels for Survival Curves (plot)&#xA;ggsurv$plot &amp;lt;- ggsurv$plot + labs(&#xA;  title    = &#34;Survival curves&#34;,                     &#xA;  subtitle = &#34;Based on Kaplan-Meier estimates&#34;,  &#xA;  caption  = &#34;created with survminer&#34;             &#xA;  )&#xA;&#xA;# Labels for Risk Table &#xA;ggsurv$table &amp;lt;- ggsurv$table + labs(&#xA;  title    = &#34;Note the risk set sizes&#34;,          &#xA;  subtitle = &#34;and remember about censoring.&#34;, &#xA;  caption  = &#34;source code: website.com&#34;        &#xA;  )&#xA;&#xA;# Labels for ncensor plot &#xA;ggsurv$ncensor.plot &amp;lt;- ggsurv$ncensor.plot + labs( &#xA;  title    = &#34;Number of censorings&#34;, &#xA;  subtitle = &#34;over the time.&#34;,&#xA;  caption  = &#34;source code: website.com&#34;&#xA;  )&#xA;&#xA;# Changing the font size, style and color&#xA;# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Applying the same font style to all the components of ggsurv:&#xA;# survival curves, risk table and censor part&#xA;&#xA;ggsurv &amp;lt;- customize_labels(&#xA;  ggsurv,&#xA;  font.title    = c(16, &#34;bold&#34;, &#34;darkblue&#34;),         &#xA;  font.subtitle = c(15, &#34;bold.italic&#34;, &#34;purple&#34;), &#xA;  font.caption  = c(14, &#34;plain&#34;, &#34;orange&#34;),        &#xA;  font.x        = c(14, &#34;bold.italic&#34;, &#34;red&#34;),          &#xA;  font.y        = c(14, &#34;bold.italic&#34;, &#34;darkred&#34;),      &#xA;  font.xtickslab = c(12, &#34;plain&#34;, &#34;darkgreen&#34;)&#xA;)&#xA;&#xA;ggsurv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-platinium-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Uber platinum premium customized survival curves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Using specific fonts for risk table and ncensor plots&#xA;#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&#xA;# Font for Risk Table&#xA;ggsurv$table &amp;lt;- customize_labels(&#xA;  ggsurv$table,&#xA;  font.title    = c(13, &#34;bold.italic&#34;, &#34;green&#34;),&#xA;  font.subtitle = c(15, &#34;bold&#34;, &#34;pink&#34;),&#xA;  font.caption  = c(11, &#34;plain&#34;, &#34;darkgreen&#34;),&#xA;  font.x        = c(8, &#34;bold.italic&#34;, &#34;orange&#34;),&#xA;  font.y        = c(11, &#34;bold.italic&#34;, &#34;darkgreen&#34;),&#xA;  font.xtickslab = c(9, &#34;bold&#34;, &#34;red&#34;)&#xA;)&#xA;&#xA;&#xA;# Font for ncensor plot&#xA;ggsurv$ncensor.plot &amp;lt;- customize_labels(&#xA;  ggsurv$ncensor.plot,&#xA;  font.title    = c(13, &#34;bold.italic&#34;, &#34;green&#34;),&#xA;  font.subtitle = c(15, &#34;bold&#34;, &#34;pink&#34;),&#xA;  font.caption  = c(11, &#34;plain&#34;, &#34;darkgreen&#34;),&#xA;  font.x        = c(8, &#34;bold.italic&#34;, &#34;orange&#34;),&#xA;  font.y        = c(11, &#34;bold.italic&#34;, &#34;darkgreen&#34;),&#xA;  font.xtickslab = c(9, &#34;bold&#34;, &#34;red&#34;)&#xA;)&#xA;&#xA;print(ggsurv)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kassambara/survminer/master/tools/README-ggplot2-uber-platinium-premium-customized-survival-plot-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blog posts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT January 2017. &lt;a href=&#34;http://r-addict.com/2017/02/09/Fancy-Survival-Plots.html&#34;&gt;Comparing (Fancy) Survival Curves with Weighted Log-rank Tests&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT January 2017. &lt;a href=&#34;http://r-addict.com/2017/01/15/Too-Far-With-Survival-Plots.html&#34;&gt;When You Went too Far with Survival Plots During the survminer 1st Anniversary&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/survival-analysis-basics&#34;&gt;Survival Analysis Basics: Curves and Logrank Tests&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/cox-proportional-hazards-model&#34;&gt;Cox Proportional Hazards Model&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA December 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/cox-model-assumptions&#34;&gt;Cox Model Assumptions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT November 2016. &lt;a href=&#34;http://r-addict.com/2016/11/21/Optimal-Cutpoint-maxstat.html&#34;&gt;Determine optimal cutpoints for numerical variables in survival plots&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;M. Kosiński. R-ADDICT May 2016. &lt;a href=&#34;http://r-addict.com/2016/05/23/Informative-Survival-Plots.html&#34;&gt;Survival plots have never been so informative&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A. Kassambara. STHDA January 2016. &lt;a href=&#34;http://www.sthda.com/english/wiki/survminer-r-package-survival-data-analysis-and-visualization&#34;&gt;survminer R package: Survival Data Analysis and Visualization&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hadley/r4ds</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/hadley/r4ds</id>
    <link href="https://github.com/hadley/r4ds" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R for data science: a book&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R for Data Science&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hadley/r4ds/actions/workflows/build_book.yaml&#34;&gt;&lt;img src=&#34;https://github.com/hadley/r4ds/actions/workflows/build_book.yaml/badge.svg?sanitize=true&#34; alt=&#34;build_book&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;This repository contains the source of &lt;a href=&#34;http://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt; book. The book is built using &lt;a href=&#34;https://github.com/rstudio/bookdown&#34;&gt;bookdown&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The R packages used in this book can be installed via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;devtools::install_github(&#34;hadley/r4ds&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;h3&gt;Omnigraffle drawings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Font: 12pt Ubuntu mono&lt;/li&gt; &#xA; &lt;li&gt;Export as 300 dpi png.&lt;/li&gt; &#xA; &lt;li&gt;Website font is 18 px = 13.5 pt, so scale dpi to match font sizes: 270 = 300 * 12 / 13.5&lt;/li&gt; &#xA; &lt;li&gt;Verified sizes are visually equivalent by screenshotting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- --&gt; &#xA;&lt;pre&gt;&lt;code&gt;#| echo: FALSE&#xA;#| out.width: NULL&#xA;knitr::include_graphics(&#34;diagrams/transform.png&#34;, dpi = 270)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that r4ds uses a &lt;a href=&#34;https://contributor-covenant.org/version/2/0/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this book, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jbkunst/klassets</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/jbkunst/klassets</id>
    <link href="https://github.com/jbkunst/klassets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;klassets&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jbkunst/klassets/actions&#34;&gt;&lt;img src=&#34;https://github.com/jbkunst/klassets/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jbkunst/klassets&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jbkunst/klassets.svg?style=social&amp;amp;label=Github&#34; alt=&#34;Github stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The &lt;code&gt;{klassets}&lt;/code&gt; package is a collection of functions to simulate data sets to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Teach how some Statistics Models and Machine Learning algorithms works.&lt;/li&gt; &#xA; &lt;li&gt;Illustrate certain some particular events such as heteroskedasticity or the Simpson’s paradox&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jbkunst/klassets/main/man/figures/animation_quasi_anscombre.gif&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(klassets)&#xA;&#xA;set.seed(123)&#xA;&#xA;df &amp;lt;- sim_quasianscombe_set_1(n = 500, beta0 = 3, beta1 = 0.5)&#xA;&#xA;plot(df) +&#xA;  ggplot2::labs(subtitle = &#34;Very similar to the given parameters (3 and 0.5)&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jbkunst/klassets/main/man/figures/README-unnamed-chunk-3-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(patchwork)&#xA;&#xA;df2 &amp;lt;- sim_quasianscombe_set_2(df, fun = sin)&#xA;df6 &amp;lt;- sim_quasianscombe_set_6(df, groups = 2, b1_factor = -1)&#xA;&#xA;plot(df2) + plot(df6)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jbkunst/klassets/main/man/figures/README-unnamed-chunk-4-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;Another example of what can be done with &lt;code&gt;{klassets}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jbkunst/klassets/main/man/figures/animation_kmeans_iterations.gif&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Where to start&lt;/h2&gt; &#xA;&lt;p&gt;You can check:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;vignette(&#34;Quasi-Anscombe-data-sets&#34;)&lt;/code&gt; to know more about &lt;code&gt;sim_quasianscombe_set*&lt;/code&gt; functions family.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vignette(&#34;Clustering&#34;)&lt;/code&gt; to see clustering functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of klassets from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;jbkunst/klassets&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why the name Klassets?&lt;/h2&gt; &#xA;&lt;p&gt;Just a weird merge for Class/Klass and sets.&lt;/p&gt; &#xA;&lt;h2&gt;Inspiration/Similar Ideas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jumpingrivers.github.io/datasauRus/&#34;&gt;https://jumpingrivers.github.io/datasauRus/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eliocamp.github.io/metamer/&#34;&gt;https://eliocamp.github.io/metamer/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.econometricsbysimulation.com/2019/03/the-importance-of-graphing-your-data.html&#34;&gt;http://www.econometricsbysimulation.com/2019/03/the-importance-of-graphing-your-data.html&lt;/a&gt; This is almost the same, but the approach it’s different.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/lubridate</title>
    <updated>2022-06-03T01:50:29Z</updated>
    <id>tag:github.com,2022-06-03:/tidyverse/lubridate</id>
    <link href="https://github.com/tidyverse/lubridate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make working with dates in R just that little bit easier&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lubridate &lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/lubridate/main/man/figures/logo.png&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=lubridate&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/lubridate&#34; alt=&#34;CRAN version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/lubridate/actions&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/lubridate/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/tidyverse/lubridate&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/lubridate/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=lubridate&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/lubridate&#34; alt=&#34;CRAN RStudio mirror downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/lubridate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/devel-1.7.4.9000-orange.svg?sanitize=true&#34; alt=&#34;Development version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Date-time data can be frustrating to work with in R. R commands for date-times are generally unintuitive and change depending on the type of date-time object being used. Moreover, the methods we use with date-times must be robust to time zones, leap days, daylight savings times, and other time related quirks, and R lacks these capabilities in some situations. Lubridate makes it easier to do the things R does with date-times and possible to do the things R does not.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to lubridate, the best place to start is the &lt;a href=&#34;https://r4ds.had.co.nz/dates-and-times.html&#34;&gt;date and times chapter&lt;/a&gt; in R for data science.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get lubridate is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just lubridate:&#xA;install.packages(&#34;lubridate&#34;)&#xA;&#xA;# Or the the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/lubridate&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rawgit.com/rstudio/cheatsheets/main/lubridate.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/main/pngs/thumbnails/lubridate-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lubridate, warn.conflicts = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy and fast parsing of date-times: &lt;code&gt;ymd()&lt;/code&gt;, &lt;code&gt;ymd_hms&lt;/code&gt;, &lt;code&gt;dmy()&lt;/code&gt;, &lt;code&gt;dmy_hms&lt;/code&gt;, &lt;code&gt;mdy()&lt;/code&gt;, …&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ymd(20101215)&#xA;#&amp;gt; [1] &#34;2010-12-15&#34;&#xA;mdy(&#34;4/1/17&#34;)&#xA;#&amp;gt; [1] &#34;2017-04-01&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Simple functions to get and set components of a date-time, such as &lt;code&gt;year()&lt;/code&gt;, &lt;code&gt;month()&lt;/code&gt;, &lt;code&gt;mday()&lt;/code&gt;, &lt;code&gt;hour()&lt;/code&gt;, &lt;code&gt;minute()&lt;/code&gt; and &lt;code&gt;second()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bday &amp;lt;- dmy(&#34;14/10/1979&#34;)&#xA;month(bday)&#xA;#&amp;gt; [1] 10&#xA;wday(bday, label = TRUE)&#xA;#&amp;gt; [1] Sun&#xA;#&amp;gt; Levels: Sun &amp;lt; Mon &amp;lt; Tue &amp;lt; Wed &amp;lt; Thu &amp;lt; Fri &amp;lt; Sat&#xA;&#xA;year(bday) &amp;lt;- 2016&#xA;wday(bday, label = TRUE)&#xA;#&amp;gt; [1] Fri&#xA;#&amp;gt; Levels: Sun &amp;lt; Mon &amp;lt; Tue &amp;lt; Wed &amp;lt; Thu &amp;lt; Fri &amp;lt; Sat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Helper functions for handling time zones: &lt;code&gt;with_tz()&lt;/code&gt;, &lt;code&gt;force_tz()&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;time &amp;lt;- ymd_hms(&#34;2010-12-13 15:30:30&#34;)&#xA;time&#xA;#&amp;gt; [1] &#34;2010-12-13 15:30:30 UTC&#34;&#xA;&#xA;# Changes printing&#xA;with_tz(time, &#34;America/Chicago&#34;)&#xA;#&amp;gt; [1] &#34;2010-12-13 09:30:30 CST&#34;&#xA;&#xA;# Changes time&#xA;force_tz(time, &#34;America/Chicago&#34;)&#xA;#&amp;gt; [1] &#34;2010-12-13 15:30:30 CST&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Lubridate also expands the type of mathematical operations that can be performed with date-time objects. It introduces three new time span classes borrowed from &lt;a href=&#34;https://www.joda.org&#34;&gt;https://www.joda.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;durations&lt;/code&gt;, which measure the exact amount of time between two points&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;periods&lt;/code&gt;, which accurately track clock times despite leap years, leap seconds, and day light savings time&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;intervals&lt;/code&gt;, a protean summary of the time information between two points&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the lubridate project is released with a &lt;a href=&#34;https://lubridate.tidyverse.org/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
</feed>