<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-16T01:38:03Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jonocarroll/ntfy</title>
    <updated>2022-11-16T01:38:03Z</updated>
    <id>tag:github.com,2022-11-16:/jonocarroll/ntfy</id>
    <link href="https://github.com/jonocarroll/ntfy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight Wrapper to the ntfy.sh Service&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ntfy &lt;img src=&#34;https://raw.githubusercontent.com/jonocarroll/ntfy/master/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;102&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;strong&gt;ntfy&lt;/strong&gt; (pronounce: &lt;em&gt;notify&lt;/em&gt;) is a simple HTTP-based pub-sub notification service. It allows you to send notifications to your phone or desktop via scripts from any computer, entirely without signup, cost or setup. It‚Äôs also &lt;a href=&#34;https://github.com/binwiederhier/ntfy&#34;&gt;open source&lt;/a&gt; if you want to run your own. Visit &lt;a href=&#34;https://ntfy.sh&#34;&gt;ntfy.sh&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;{ntfy} is a lightweight R wrapper for this service. The magic sauce is just &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; calls equivalent to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -d &#34;Process Complete üòÄ&#34; ntfy.sh/yourSecretTopic &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but made to work nicely in an R workflow.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of ntfy like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;jonocarroll/ntfy&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Functionality&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instructions at &lt;a href=&#34;https://ntfy.sh&#34;&gt;ntfy.sh&lt;/a&gt; to install any of the mobile apps or use the web app. No sign-up or account is necessary.&lt;/p&gt; &#xA;&lt;p&gt;Choose a topic (note: this isn‚Äôt a password-protected service, so choose something obscure) and subscribe to it on your device.&lt;/p&gt; &#xA;&lt;p&gt;Add the topic as an environment variable, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;usethis::edit_r_environ()&#xA;&#xA;[...]&#xA;&#xA;NTFY_TOPIC=&#39;yourSecretTopic&#39;&#xA;#NTFY_SERVER=&#39;https://ntfy.sh&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server will automatically be set to &lt;a href=&#34;https://ntfy.sh&#34;&gt;https://ntfy.sh&lt;/a&gt; unless you specify another.&lt;/p&gt; &#xA;&lt;p&gt;This can be confirmed with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ntfy_server()&#xA;#&amp;gt; [1] &#34;https://ntfy.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the package loaded, you can now send notifications which should appear on your device&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ntfy)&#xA;ntfy_send(&#34;test from R!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Response [http://ntfy.sh/yourSecretTopic]&#xA;  Date: 2022-11-09 06:57&#xA;  Status: 200&#xA;  Content-Type: application/json&#xA;  Size: 103 B&#xA;{&#34;id&#34;:&#34;SLnGohKykeR8&#34;,&#34;time&#34;:1667977077,&#34;event&#34;:&#34;message&#34;,&#34;topic&#34;:&#34;yourSecretTopic&#34;,&#34;message&#34;:&#34;&#39;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be used in many ways. One would be to notify the completion of a process. The &lt;code&gt;ntfy_done()&lt;/code&gt; function sends a notification with the (default) body&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Process completed at &amp;lt;Sys.time()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;slow_process &amp;lt;- function(x) {&#xA;  Sys.sleep(8) # sleep for 8 seconds&#xA;  x&#xA;}&#xA;&#xA;mtcars |&amp;gt; &#xA;  head() |&amp;gt; &#xA;  slow_process() |&amp;gt; &#xA;  ntfy_done()&#xA;#&amp;gt;                    mpg cyl disp  hp drat    wt  qsec vs am gear carb&#xA;#&amp;gt; Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4&#xA;#&amp;gt; Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4&#xA;#&amp;gt; Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1&#xA;#&amp;gt; Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1&#xA;#&amp;gt; Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2&#xA;#&amp;gt; Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which results in a notification on subscribed devices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Process completed at 2022-11-09 17:31:03&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When using the base R pipe &lt;code&gt;|&amp;gt;&lt;/code&gt; the piped commands are composed together by the parser, so&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;f() |&amp;gt; &#xA;  g() |&amp;gt; &#xA;    h()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;becomes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;h(g(f()))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can use this fact to time the running of a process if the last function (above, &lt;code&gt;h()&lt;/code&gt;) is &lt;code&gt;system.time()&lt;/code&gt;. The &lt;code&gt;ntfy_done_with_timing()&lt;/code&gt; function does exactly this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars |&amp;gt; &#xA;  head() |&amp;gt; &#xA;  slow_process() |&amp;gt; &#xA;  ntfy_done_with_timing()&#xA;#&amp;gt;                    mpg cyl disp  hp drat    wt  qsec vs am gear carb&#xA;#&amp;gt; Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4&#xA;#&amp;gt; Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4&#xA;#&amp;gt; Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1&#xA;#&amp;gt; Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1&#xA;#&amp;gt; Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2&#xA;#&amp;gt; Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which sends the notification&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Process completed in 8.003s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: the {magrittr} pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt; works differently and does not compose the same way, so this will result in a very short time report. Wrapping an entire pipeline with &lt;code&gt;ntfy_done_with_timing()&lt;/code&gt; will work, though&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(magrittr)&#xA;#&amp;gt; Warning: package &#39;magrittr&#39; was built under R version 4.2.0&#xA;ntfy_done_with_timing(&#xA;  mtcars %&amp;gt;%&#xA;    head() %&amp;gt;% &#xA;    slow_process()&#xA;)&#xA;#&amp;gt;                    mpg cyl disp  hp drat    wt  qsec vs am gear carb&#xA;#&amp;gt; Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4&#xA;#&amp;gt; Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4&#xA;#&amp;gt; Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1&#xA;#&amp;gt; Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1&#xA;#&amp;gt; Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2&#xA;#&amp;gt; Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;sends&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Process completed in 8.004s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The history of the notifications sent can be retrieved as well, with control over how far back to search&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ntfy_history(since = &#34;1h&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt;             id       time   event           topic&#xA;#&amp;gt; 1 0oDpk4oisfNO 1667988383 message yourSecretTopic&#xA;#&amp;gt; 2 4Fcy9kIL0m6Z 1667988413 message yourSecretTopic&#xA;#&amp;gt; 3 AGXn4q0CirFT 1667990983 message yourSecretTopic&#xA;#&amp;gt;                                    message&#xA;#&amp;gt; 1                             test from R!&#xA;#&amp;gt; 2 Process completed at 2022-11-09 17:31:03&#xA;#&amp;gt; 3              Process completed in 8.003s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar Services&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/RPushbullet/index.html&#34;&gt;{Rpushbullet}&lt;/a&gt; offers similar functionality, but requires sign-up / an API key&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/beepr/index.html&#34;&gt;{beepr}&lt;/a&gt; can play a sound when a process completes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ifttt.com/docs/connect_api&#34;&gt;IFTTT&lt;/a&gt; has an API and can be configured to send messages with e.g.&amp;nbsp;&lt;a href=&#34;https://github.com/hrbrmstr/nifffty&#34;&gt;nifffty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rviews.rstudio.com/2020/06/18/how-to-have-r-notify-you/&#34;&gt;This blog post&lt;/a&gt; details many ways to send notifications, via email, text, Slack, and MS Teams&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;Q: &lt;em&gt;‚ÄúWill you know what topics exist, can you spy on me?‚Äù&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: Refer to the &lt;a href=&#34;https://ntfy.sh/docs/faq/#will-you-know-what-topics-exist-can-you-spy-on-me&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If this service is useful to you, consider donating to &lt;a href=&#34;https://github.com/sponsors/binwiederhier&#34;&gt;the developer&lt;/a&gt; via GitHub sponsors. If this package is useful to you, &lt;a href=&#34;https://github.com/sponsors/jonocarroll&#34;&gt;I also accept donations&lt;/a&gt; via GitHub sponsors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lbenz730/world_cup_2022</title>
    <updated>2022-11-16T01:38:03Z</updated>
    <id>tag:github.com,2022-11-16:/lbenz730/world_cup_2022</id>
    <link href="https://github.com/lbenz730/world_cup_2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modeling and simulations for the 2022 FIFA World Cup&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FIFA World Cup 2022&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Modeling and simulation of the 2022 FIFA World Cup&lt;/p&gt; &#xA;&lt;h4&gt;Model Script&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;fit_model.R:&lt;/strong&gt; Estimates Bayesian bivariate Poisson model. For more details, see Equation (2) of &lt;a href=&#34;https://link.springer.com/content/pdf/10.1007/s10182-021-00413-9.pdf&#34;&gt;Benz and Lopez, 2021&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Simulations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;run_sim.R:&lt;/strong&gt; Run 10,000 simulations of the tournament&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;helpers.R:&lt;/strong&gt; Helper functions for sims.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;game_preds.R&lt;/strong&gt; Save out predictions for indivdual games.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Data&lt;/h4&gt; &#xA;&lt;p&gt;Data (&lt;strong&gt;internation_soccer_score.csv&lt;/strong&gt;) courtesy &lt;a href=&#34;https://www.kaggle.com/martj42/international-football-results-from-1872-to-2017&#34;&gt;Kaggle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flag figures courtesy of &lt;a href=&#34;https://www.flaticon.com/&#34;&gt;Flaticon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Pre-Tournament Predictions&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lbenz730/world_cup_2022/main/figures/pre_wc2022.png&#34; alt=&#34;sim-results&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>