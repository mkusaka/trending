<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T01:50:59Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Raymo111/Raymo111</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/Raymo111/Raymo111</id>
    <link href="https://github.com/Raymo111/Raymo111" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My awesome profile README&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raymond.li/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Raymo111/Raymo111/master/intro.gif&#34; alt=&#34;👋 Hi there! I&#39;m (Raymo(111|nd Li)|https://raymond.li)&#34; title=&#34;👋 Hi there! I&#39;m (Raymo(111|nd Li)|https://raymond.li)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://visitor-badge-reloaded.herokuapp.com/badge?page_id=Raymo111.Raymo111&amp;amp;color=00cf00&#34; alt=&#34;visitors&#34;&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;**Raymo111/Raymo111** is a ✨ _special_ ✨ repository because its `README.md` (this file) appears on your GitHub profile.&#xA;&#xA;Here are some ideas to get you started:&#xA;&#xA;- 🔭 I’m currently working on ...&#xA;- 🌱 I’m currently learning ...&#xA;- 👯 I’m looking to collaborate on ...&#xA;- 🤔 I’m looking for help with ...&#xA;- 💬 Ask me about ...&#xA;- 📫 How to reach me: ...&#xA;- 😄 Pronouns: ...&#xA;- ⚡ Fun fact: ...&#xA;--&gt; &#xA;&lt;!--&#xA;&lt;table&gt;&#xA;&#x9;&lt;tr&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;&#x9;&#x9;&lt;th&gt;&#xA;&#x9;&#x9;&#x9;&lt;h2&gt;&lt;code&gt;𝚂𝚙𝚎𝚌𝚒𝚊𝚕&lt;/code&gt;: 𝙸&#39;𝚖 𝚙𝚊𝚛𝚝𝚒𝚌𝚒𝚙𝚊𝚝𝚒𝚗𝚐 𝚒𝚗 𝙷𝚊𝚌𝚔𝚝𝚘𝚋𝚎𝚛𝚏𝚎𝚜𝚝!&lt;/h2&gt;&#xA;&#x9;&#x9;&#x9;𝙰𝚗𝚢𝚘𝚗𝚎 𝚠𝚑𝚘 𝚠𝚊𝚗𝚝𝚜 𝚝𝚘 𝚒𝚜 𝚠𝚎𝚕𝚌𝚘𝚖𝚎 𝚝𝚘 𝚙𝚊𝚛𝚝𝚒𝚌𝚒𝚙𝚊𝚝𝚎! 𝙹𝚞𝚜𝚝 𝚜𝚒𝚐𝚗 𝚞𝚙 𝚊𝚝 &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚑𝚊𝚌𝚔𝚝𝚘𝚋𝚎𝚛𝚏𝚎𝚜𝚝.𝚍𝚒𝚐𝚒𝚝𝚊𝚕𝚘𝚌𝚎𝚊𝚗.𝚌𝚘𝚖/&lt;/a&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&lt;br&gt;𝙱𝚊𝚜𝚒𝚌𝚊𝚕𝚕𝚢, 𝚖𝚊𝚔𝚎 𝟺 𝙿𝚁𝚜 𝚝𝚘 𝙶𝚒𝚝𝙷𝚞𝚋 𝚛𝚎𝚙𝚘𝚜 𝚊𝚗𝚍 𝚐𝚎𝚝 𝚝𝚑𝚎𝚖 𝚖𝚎𝚛𝚐𝚎𝚍 𝚘𝚛 𝚝𝚊𝚐𝚐𝚎𝚍 &lt;code&gt;hacktoberfest-accepted&lt;/code&gt; 𝚠𝚒𝚕𝚕 𝚐𝚎𝚝 𝚌𝚘𝚘𝚕&amp;nbsp𝚜𝚠𝚊𝚐!&#xA;&#x9;&#x9;&lt;/th&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;&#x9;&#x9;&lt;td&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;b&gt;𝙻𝚒𝚜𝚝 𝚘𝚏 𝚖𝚢 𝚛𝚎𝚙𝚘𝚜 𝚙𝚊𝚛𝚝𝚒𝚌𝚒𝚙𝚊𝚝𝚒𝚗𝚐 𝚒𝚗 𝚝𝚑𝚒𝚜 𝚊𝚠𝚎𝚜𝚘𝚖𝚎 𝚎𝚟𝚎𝚗𝚝:&lt;b&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;ul&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;li&gt;&lt;a href=&#34;https://github.com/Raymo111/emoji&#34;&gt;𝚁𝚊𝚢𝚖𝚘𝟷𝟷𝟷/𝚎𝚖𝚘𝚓𝚒&lt;/a&gt;&lt;/li&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;li&gt;&lt;a href=&#34;https://github.com/Raymo111/drracket-customization&#34;&gt;𝚁𝚊𝚢𝚖𝚘𝟷𝟷𝟷/𝚍𝚛𝚛𝚊𝚌𝚔𝚎𝚝-𝚌𝚞𝚜𝚝𝚘𝚖𝚒𝚣𝚊𝚝𝚒𝚘𝚗&lt;/a&gt;&lt;/li&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;li&gt;&lt;a href=&#34;https://github.com/Raymo111/i3lock-color&#34;&gt;𝚁𝚊𝚢𝚖𝚘𝟷𝟷𝟷/𝚒𝟹𝚕𝚘𝚌𝚔-𝚌𝚘𝚕𝚘𝚛&lt;/a&gt;&lt;/li&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/ul&gt;&#xA;&#x9;&#x9;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;--&gt; &#xA;&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; 𝙰𝚋𝚘𝚞𝚝 𝙼𝚎&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🖥 𝙵𝚞𝚕𝚕-𝚜𝚝𝚊𝚌𝚔 𝚜𝚘𝚏𝚝𝚠𝚊𝚛𝚎 𝚍𝚎𝚟𝚎𝚕𝚘𝚙𝚎𝚛&lt;/li&gt; &#xA; &lt;li&gt;💼 𝙵𝚘𝚞𝚗𝚍𝚎𝚛 𝚘𝚏 &lt;a href=&#34;https://edgeprim.com&#34;&gt;&lt;img src=&#34;https://edgeprim.com/assets/images/EdgePrim.svg?sanitize=true&#34; height=&#34;30em&#34; align=&#34;center&#34; alt=&#34;EdgePrim&#34; title=&#34;EdgePrim&#34;&gt;&lt;/a&gt; 𝚊𝚗𝚍 &lt;a href=&#34;https://youthhax.com&#34;&gt;&lt;img src=&#34;https://youthhax.com/images/yh.png&#34; height=&#34;30em&#34; align=&#34;center&#34; alt=&#34;YouthHax&#34; title=&#34;YouthHax&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎓 𝚂𝚝𝚞𝚍𝚢𝚒𝚗𝚐 𝙷𝚘𝚗𝚘𝚞𝚛𝚜 𝙲𝚘𝚖𝚙𝚞𝚝𝚎𝚛 𝚂𝚌𝚒𝚎𝚗𝚌𝚎 𝚠𝚒𝚝𝚑 𝙲𝚘-𝚘𝚙 𝚊𝚝 𝚝𝚑𝚎 𝚄𝚗𝚒𝚟𝚎𝚛𝚜𝚒𝚝𝚢 𝚘𝚏 𝚆𝚊𝚝𝚎𝚛𝚕𝚘𝚘, 𝚌𝚕𝚊𝚜𝚜 𝚘𝚏 𝟸0𝟸𝟻&lt;/li&gt; &#xA; &lt;li&gt;🌐 𝚈𝚘𝚞 𝚌𝚊𝚗 𝚊𝚌𝚌𝚎𝚜𝚜 𝚊𝚕𝚕 𝚖𝚢 𝚘𝚙𝚎𝚗-𝚜𝚘𝚞𝚛𝚌𝚎 𝚙𝚛𝚘𝚓𝚎𝚌𝚝𝚜 𝚑𝚎𝚛𝚎 𝚘𝚗 𝙶𝚒𝚝𝙷𝚞𝚋 𝚘𝚛 𝚘𝚗 𝚝𝚑𝚎 &lt;a href=&#34;https://aur.archlinux.org/packages/?SeB=M&amp;amp;K=Raymo111&#34;&gt;𝙰𝚄𝚁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;𝚋𝚝𝚠 𝙸 𝚞𝚜𝚎 𝙰𝚛𝚌𝚑 &lt;a href=&#34;https://archlinux.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Raymo111/Raymo111/master/socials/arch.svg?sanitize=true&#34; height=&#34;30em&#34; align=&#34;center&#34; alt=&#34;Arch Linux Logo&#34; title=&#34;Arch Linux Logo&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⬆ 𝚆𝚑𝚊𝚝 𝙸&#39;𝚖 𝚞𝚙 𝚝𝚘&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔨 𝙸&#39;𝚖 𝚌𝚞𝚛𝚛𝚎𝚗𝚝𝚕𝚢...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Developing the CS 136L course (and the PS5 Control Center!)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- - 🔨 𝙸&#39;𝚖 𝚌𝚞𝚛𝚛𝚎𝚗𝚝𝚕𝚢 𝚍𝚘𝚒𝚗𝚐 𝚊𝚗 𝚒𝚗𝚝𝚎𝚛𝚗𝚜𝚑𝚒𝚙 𝚊𝚝 𝚂𝚘𝚗𝚢 𝙿𝚕𝚊𝚢𝚜𝚝𝚊𝚝𝚒𝚘𝚗! --&gt; &#xA;&lt;!-- - 🔨 𝙸’𝚖 𝚌𝚞𝚛𝚛𝚎𝚗𝚝𝚕𝚢 𝚠𝚘𝚛𝚔𝚒𝚗𝚐 𝚘𝚗 𝚊 𝚗𝚎𝚠 [**𝚒𝟹𝚕𝚘𝚌𝚔-𝚌𝚘𝚕𝚘𝚛**](https://github.com/Raymo111/i3lock-color) 𝚛𝚎𝚕𝚎𝚊𝚜𝚎 --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎯 𝙸𝚗 𝚝𝚑𝚎 𝚗𝚎𝚊𝚛 𝚏𝚞𝚝𝚞𝚛𝚎, 𝙸 𝚙𝚕𝚊𝚗 𝚝𝚘... &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;𝙰𝚍𝚍 𝚓𝚊𝚟𝚊𝚜𝚌𝚛𝚒𝚙𝚝 𝚌𝚘𝚙𝚢 𝚝𝚘 &lt;a href=&#34;https://github.com/Raymo111/emoji&#34;&gt;&lt;strong&gt;𝚎𝚖𝚘𝚓𝚒&lt;/strong&gt;&lt;/a&gt; 𝚊𝚗𝚍 𝚖𝚊𝚔𝚎 𝚒𝚝 𝚒𝚗𝚝𝚘 𝚊 𝙱𝚎𝚝𝚝𝚎𝚛𝙳𝚒𝚜𝚌𝚘𝚛𝚍 𝚙𝚕𝚞𝚐𝚒𝚗&lt;/li&gt; &#xA;   &lt;li&gt;𝙰𝚍𝚍 𝚖𝚢 𝚕𝚊𝚝𝚎𝚜𝚝 𝙸𝚗𝚜𝚝𝚊𝚐𝚛𝚊𝚖 𝚙𝚘𝚜𝚝𝚜 𝚊𝚗𝚍 𝚕𝚘𝚌𝚊𝚕 𝚠𝚎𝚊𝚝𝚑𝚎𝚛 𝚝𝚘 𝚝𝚑𝚒𝚜 𝚁𝙴𝙰𝙳𝙼𝙴&lt;/li&gt; &#xA;   &lt;li&gt;𝙼𝚊𝚔𝚎 &lt;a href=&#34;https://github.com/Raymo111/kahoot-answer-bot&#34;&gt;&lt;strong&gt;𝙺𝚊𝚑𝚘𝚘𝚝 𝙱𝚘𝚝&lt;/strong&gt;&lt;/a&gt; 𝚠𝚘𝚛𝚔 𝚠𝚒𝚝𝚑 𝚝𝚑𝚎 𝚗𝚎𝚠 𝙺𝚊𝚑𝚘𝚘𝚝 𝚁𝙴𝚂𝚃 𝚏𝚘𝚛𝚖𝚊𝚝 𝚏𝚘𝚛 𝙰𝚜𝚜𝚒𝚐𝚗𝚎𝚍 𝙺𝚊𝚑𝚘𝚘𝚝𝚜&lt;/li&gt; &#xA;   &lt;li&gt;𝙸𝚗𝚝𝚎𝚐𝚛𝚊𝚝𝚎 &lt;code&gt;youtube-dl.py&lt;/code&gt; 𝚒𝚗𝚝𝚘 &lt;a href=&#34;https://github.com/Raymo111/movie-dl&#34;&gt;&lt;strong&gt;𝚖𝚘𝚟𝚒𝚎-𝚍𝚕&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🤞 𝙾𝚗𝚎 𝚍𝚊𝚢 𝙸 𝚑𝚘𝚙𝚎 𝚝𝚘... &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;𝙶𝚘 𝚜𝚔𝚢𝚍𝚒𝚟𝚒𝚗𝚐!&lt;/li&gt; &#xA;   &lt;li&gt;𝙲𝚘𝚗𝚝𝚛𝚒𝚋𝚞𝚝𝚎 𝚌𝚘𝚍𝚎 𝚝𝚘 𝚝𝚑𝚎 &lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;𝙻𝚒𝚗𝚞𝚡 𝚔𝚎𝚛𝚗𝚎𝚕&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;𝙰𝚍𝚍 𝚒𝟹𝚕𝚘𝚌𝚔-𝚌𝚘𝚕𝚘𝚛 𝚝𝚘 𝙳𝚎𝚋𝚒𝚊𝚗, 𝚄𝚋𝚞𝚗𝚝𝚞, 𝚊𝚗𝚍 𝚁𝚎𝚍 𝙷𝚊𝚝/𝙵𝚎𝚍𝚘𝚛𝚊&lt;/li&gt; &#xA;   &lt;li&gt;𝙸𝚗𝚜𝚝𝚊𝚕𝚕 𝙶𝚎𝚗𝚝𝚘𝚘 (𝚒𝚝 𝚒𝚜 𝚋𝚎𝚢𝚘𝚗𝚍 𝚖𝚢 𝚙𝚘𝚠𝚎𝚛 𝚗𝚘𝚠... 𝙸 𝚖𝚞𝚜𝚝 𝚝𝚛𝚊𝚒𝚗 𝚑𝚊𝚛𝚍...)&lt;/li&gt; &#xA;   &lt;li&gt;𝙶𝚎𝚝 𝚊 𝙵𝙰𝙰𝙽𝙶𝙼+ 𝚒𝚗𝚝𝚎𝚛𝚗𝚜𝚑𝚒𝚙 (𝚒𝚏 𝚢𝚘𝚞 𝚑𝚊𝚟𝚎 𝚝𝚑𝚒𝚜 𝚙𝚘𝚠𝚎𝚛 𝚝𝚘 𝚙𝚕𝚎𝚊𝚜𝚎 𝚑𝚒𝚛𝚎 𝚖𝚎)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🤔 𝙻𝚒𝚜𝚝 𝚘𝚏 𝚒𝚜𝚜𝚞𝚎𝚜 𝙸 𝚗𝚎𝚎𝚍 𝚑𝚎𝚕𝚙 𝚠𝚒𝚝𝚑: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Raymo111/i3lock-color/issues/136&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚁𝚊𝚢𝚖𝚘𝟷𝟷𝟷/𝚒𝟹𝚕𝚘𝚌𝚔-𝚌𝚘𝚕𝚘𝚛/𝚒𝚜𝚜𝚞𝚎𝚜/𝟷𝟹𝟼&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Raymo111/i3lock-color/issues/159&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚁𝚊𝚢𝚖𝚘𝟷𝟷𝟷/𝚒𝟹𝚕𝚘𝚌𝚔-𝚌𝚘𝚕𝚘𝚛/𝚒𝚜𝚜𝚞𝚎𝚜/𝟷𝟻𝟿&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔔 𝙼𝚢 𝙻𝚊𝚝𝚎𝚜𝚝 𝙶𝚒𝚝𝙷𝚞𝚋 𝙰𝚌𝚝𝚒𝚟𝚒𝚝𝚢&lt;/h2&gt; &#xA;&lt;!--START_SECTION:activity--&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🗣 Commented on &lt;a href=&#34;https://github.com/vdukhovni/postfix/issues/13&#34;&gt;#13&lt;/a&gt; in &lt;a href=&#34;https://github.com/vdukhovni/postfix&#34;&gt;vdukhovni/postfix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎉 Merged PR &lt;a href=&#34;https://github.com/Raymo111/cs135-drtools/pull/15&#34;&gt;#15&lt;/a&gt; in &lt;a href=&#34;https://github.com/Raymo111/cs135-drtools&#34;&gt;Raymo111/cs135-drtools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💪 Opened PR &lt;a href=&#34;https://github.com/microsoft/vscode/pull/149509&#34;&gt;#149509&lt;/a&gt; in &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;microsoft/vscode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;❗️ Opened issue &lt;a href=&#34;https://github.com/microsoft/vscode/issues/149508&#34;&gt;#149508&lt;/a&gt; in &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;microsoft/vscode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎉 Merged PR &lt;a href=&#34;https://github.com/Raymo111/match-3/pull/1&#34;&gt;#1&lt;/a&gt; in &lt;a href=&#34;https://github.com/Raymo111/match-3&#34;&gt;Raymo111/match-3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!--END_SECTION:activity--&gt; &#xA;&lt;!--&#xA;## 🔔 𝙼𝚢 𝙻𝚊𝚝𝚎𝚜𝚝 𝚃𝚠𝚎𝚎𝚝&#xA;&lt;a href=&#34;https://twitter.com/Raym0111&#34; target=&#34;_blank&#34;&gt;&#xA;&#x9;&lt;img src=&#34;https://github.com/Raymo111/Raymo111/raw/master/tweet.png&#34; width=&#34;70%&#34; align=&#34;center&#34; alt=&#34;Click to view on Twitter&#34; title=&#34;My latest tweet, as an image&#34;/&gt;&#xA;&lt;/a&gt;&#xA;--&gt; &#xA;&lt;h2&gt;🔔 𝙼𝚢 𝙻𝚊𝚝𝚎𝚜𝚝 𝙶𝚒𝚝𝙷𝚞𝚋 𝙼𝚎𝚝𝚛𝚒𝚌𝚜&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://metrics.lecoq.io/Raymo111?template=classic&amp;amp;base.header=0&amp;amp;gists=1&amp;amp;lines=1&amp;amp;config.timezone=America%2FToronto&#34; alt=&#34;Metrics&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📫 𝙷𝚘𝚠 𝚝𝚘 𝚛𝚎𝚊𝚌𝚑 𝚖𝚎:&lt;/h2&gt; &#xA;&lt;p&gt;𝚈𝚘𝚞 𝚌𝚊𝚗 𝚛𝚎𝚊𝚌𝚑 𝚖𝚎 𝚊𝚝 𝚝𝚑𝚎 𝚎𝚖𝚊𝚒𝚕 𝚒𝚗 𝚖𝚢 𝚐𝚒𝚝𝚑𝚞𝚋 𝚙𝚛𝚘𝚏𝚒𝚕𝚎. 𝙵𝚘𝚕𝚕𝚘𝚠 𝚖𝚢 𝚜𝚘𝚌𝚒𝚊𝚕𝚜!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://linkedin.com/in/Raymo111&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Raymo111/Raymo111/master/socials/linkedin.png&#34; height=&#34;40em&#34; align=&#34;center&#34; alt=&#34;Follow Raymo111 on LinkedIn&#34; title=&#34;Follow Raymo111 on LinkedIn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Raym0111&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Raymo111/Raymo111/master/socials/twitter.svg?sanitize=true&#34; height=&#34;40em&#34; align=&#34;center&#34; alt=&#34;Follow Raym0111 on Twitter&#34; title=&#34;Follow Raymo111 on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://instagram.com/Raymo111&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Raymo111/Raymo111/master/socials/instagram.svg?sanitize=true&#34; height=&#34;40em&#34; align=&#34;center&#34; alt=&#34;Follow Raymo111 on Instagram&#34; title=&#34;Follow Raymo111 on Instagram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚡ 𝙻𝚒𝚜𝚝 𝚘𝚏 𝚌𝚘𝚘𝚕 𝚝𝚑𝚒𝚗𝚐𝚜 𝚝𝚑𝚊𝚝 𝚠𝚎𝚗𝚝 𝚒𝚗𝚝𝚘 𝚝𝚑𝚒𝚜 𝚙𝚛𝚘𝚏𝚒𝚕𝚎 𝚁𝙴𝙰𝙳𝙼𝙴&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;𝚃𝚢𝚙𝚎𝙸𝚝, 𝚅𝚞𝚎 𝙿𝚊𝚛𝚝𝚒𝚌𝚕𝚎𝙹𝚜 𝚊𝚗𝚍 𝚅𝚞𝚎.𝚓𝚜 𝚏𝚘𝚛 𝚝𝚑𝚎 𝚝𝚢𝚙𝚒𝚗𝚐 𝚒𝚗𝚝𝚛𝚘: &lt;a href=&#34;https://codesandbox.io/s/readme-introgif-9fjo5&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚌𝚘𝚍𝚎𝚜𝚊𝚗𝚍𝚋𝚘𝚡.𝚒𝚘/𝚜/𝚛𝚎𝚊𝚍𝚖𝚎-𝚒𝚗𝚝𝚛𝚘𝚐𝚒𝚏-𝟿𝚏𝚓𝚘𝟻&lt;/a&gt; &#xA;  &lt;!-- Thanks to @matyo91&#39;s helpful comments in their profile README! --&gt;&lt;/li&gt; &#xA; &lt;li&gt;𝙿𝚛𝚘𝚏𝚒𝚕𝚎 𝚟𝚒𝚜𝚒𝚝 𝚌𝚘𝚞𝚗𝚝 𝚏𝚛𝚘𝚖 &lt;a href=&#34;https://github.com/Nathan13888/VisitorBadgeReloaded&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝙽𝚊𝚝𝚑𝚊𝚗𝟷𝟹𝟾𝟾𝟾/𝚅𝚒𝚜𝚒𝚝𝚘𝚛𝙱𝚊𝚍𝚐𝚎𝚁𝚎𝚕𝚘𝚊𝚍𝚎𝚍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;𝙼𝚘𝚗𝚘𝚜𝚙𝚊𝚌𝚎𝚍 𝚝𝚎𝚡𝚝 𝚏𝚛𝚘𝚖 &lt;a href=&#34;https://yaytext.com/monospace/&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚢𝚊𝚢𝚝𝚎𝚡𝚝.𝚌𝚘𝚖/𝚖𝚘𝚗𝚘𝚜𝚙𝚊𝚌𝚎/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;𝙶𝚒𝚝𝙷𝚞𝚋 𝚊𝚌𝚝𝚒𝚟𝚒𝚝𝚢 𝚊𝚌𝚝𝚒𝚘𝚗 𝚏𝚛𝚘𝚖 &lt;a href=&#34;https://github.com/jamesgeorge007/github-activity-readme&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚓𝚊𝚖𝚎𝚜𝚐𝚎𝚘𝚛𝚐𝚎00𝟽/𝚐𝚒𝚝𝚑𝚞𝚋-𝚊𝚌𝚝𝚒𝚟𝚒𝚝𝚢-𝚛𝚎𝚊𝚍𝚖𝚎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;𝙶𝚒𝚝𝙷𝚞𝚋 𝙼𝚎𝚝𝚛𝚒𝚌𝚜 𝚏𝚛𝚘𝚖 &lt;a href=&#34;https://github.com/lowlighter/metrics&#34;&gt;𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚕𝚘𝚠𝚕𝚒𝚐𝚑𝚝𝚎𝚛/𝚖𝚎𝚝𝚛𝚒𝚌𝚜&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--&#xA;- 𝙻𝚊𝚝𝚎𝚜𝚝 𝚝𝚠𝚎𝚎𝚝 𝚊𝚌𝚝𝚒𝚘𝚗 𝚏𝚛𝚘𝚖 [𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚣𝚑𝚒𝚒𝚒𝚢𝚊𝚗𝚐/𝚣𝚑𝚒𝚒𝚒𝚢𝚊𝚗𝚐](https://github.com/zhiiiyang/zhiiiyang)&#xA;- 𝙻𝚊𝚝𝚎𝚜𝚝 𝙸𝚗𝚜𝚝𝚊𝚐𝚛𝚊𝚖 𝚙𝚘𝚜𝚝𝚜 𝚊𝚗𝚍 𝚠𝚎𝚊𝚝𝚑𝚎𝚛 𝚏𝚛𝚘𝚖 [𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚝𝚑𝚖𝚜𝚐𝚋𝚛𝚝/𝚝𝚑𝚖𝚜𝚐𝚋𝚛𝚝](https://github.com/thmsgbrt/thmsgbrt)&#xA;- 𝙰𝚕𝚕-𝚝𝚒𝚖𝚎 𝙶𝚒𝚝𝙷𝚞𝚋 𝚜𝚝𝚊𝚝𝚜 𝚏𝚛𝚘𝚖 [𝚑𝚝𝚝𝚙𝚜://𝚐𝚒𝚝𝚑𝚞𝚋.𝚌𝚘𝚖/𝚖𝚊𝚛𝚔𝚎𝚝𝚙𝚕𝚊𝚌𝚎/𝚊𝚌𝚝𝚒𝚘𝚗𝚜/𝚙𝚛𝚘𝚏𝚒𝚕𝚎-𝚛𝚎𝚊𝚍𝚖𝚎-𝚜𝚝𝚊𝚝𝚜](https://github.com/marketplace/actions/profile-readme-stats)&#xA;--&gt;</summary>
  </entry>
  <entry>
    <title>rmcelreath/stat_rethinking_2022</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/rmcelreath/stat_rethinking_2022</id>
    <link href="https://github.com/rmcelreath/stat_rethinking_2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Statistical Rethinking course winter 2022&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rmcelreath/stat_rethinking_2022/main/title.gif&#34; width=&#34;500&#34;&gt; &#xA;&lt;h1&gt;Statistical Rethinking (2022 Edition)&lt;/h1&gt; &#xA;&lt;p&gt;Instructor: Richard McElreath&lt;/p&gt; &#xA;&lt;p&gt;Lectures: Uploaded &amp;lt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&#34;&gt;Playlist&lt;/a&gt;&amp;gt; and pre-recorded, two per week&lt;/p&gt; &#xA;&lt;p&gt;Discussion: Online, Fridays 3pm-4pm Central European Time&lt;/p&gt; &#xA;&lt;h1&gt;Purpose&lt;/h1&gt; &#xA;&lt;p&gt;This course teaches data analysis, but it focuses on scientific models first. The unfortunate truth about data is that nothing much can be done with it, until we say what caused it. We will prioritize conceptual, causal models and precise questions about those models. We will use Bayesian data analysis to connect scientific models to evidence. And we will learn powerful computational tools for coping with high-dimension, imperfect data of the kind that biologists and social scientists face.&lt;/p&gt; &#xA;&lt;h1&gt;Format&lt;/h1&gt; &#xA;&lt;p&gt;Online, flipped instruction. The lectures are pre-recorded. We&#39;ll meet online once a week for an hour to work through the solutions to the assigned problems.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll use the 2nd edition of my book, &amp;lt;&lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;Statistical Rethinking&lt;/a&gt;&amp;gt;. I&#39;ll provide a PDF of the book to enrolled students.&lt;/p&gt; &#xA;&lt;p&gt;Registration: Please sign up via &amp;lt;[COURSE IS FULL SORRY]&amp;gt;. I&#39;ve also set aside 100 audit tickets at the same link, for people who want to participate, but who don&#39;t need graded work and course credit.&lt;/p&gt; &#xA;&lt;h1&gt;Calendar &amp;amp; Topical Outline&lt;/h1&gt; &#xA;&lt;p&gt;There are 10 weeks of instruction. Links to lecture recordings will appear in this table. Weekly problem sets are assigned on Fridays and due the next Friday, when we discuss the solutions in the weekly online meeting.&lt;/p&gt; &#xA;&lt;p&gt;Lecture playlist on Youtube: &amp;lt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&#34;&gt;Statistical Rethinking 2022&lt;/a&gt;&amp;gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Week ##&lt;/th&gt; &#xA;   &lt;th&gt;Meeting date&lt;/th&gt; &#xA;   &lt;th&gt;Reading&lt;/th&gt; &#xA;   &lt;th&gt;Lectures&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 01&lt;/td&gt; &#xA;   &lt;td&gt;07 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 1, 2 and 3&lt;/td&gt; &#xA;   &lt;td&gt;[1] &amp;lt;&lt;a href=&#34;https://youtu.be/cclUd_HoRlo&#34;&gt;The Golem of Prague&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-01&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [2] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=guTdrfycW2Q&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=2&#34;&gt;Bayesian Inference&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-02&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 02&lt;/td&gt; &#xA;   &lt;td&gt;14 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 4 and 5&lt;/td&gt; &#xA;   &lt;td&gt;[3] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=zYYBtxHWE0A&#34;&gt;Basic Regression&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-03&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [4] &amp;lt;&lt;a href=&#34;https://youtu.be/QiHKdvAbYII&#34;&gt;Categories &amp;amp; Curves&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-04&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 03&lt;/td&gt; &#xA;   &lt;td&gt;21 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 5 and 6&lt;/td&gt; &#xA;   &lt;td&gt;[5] &amp;lt;&lt;a href=&#34;https://youtu.be/UpP-_mBvECI&#34;&gt;Elemental Confounds&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-05&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [6] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=NSuTaeW6Orc&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=6&#34;&gt;Good &amp;amp; Bad Controls&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-06&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 04&lt;/td&gt; &#xA;   &lt;td&gt;28 January&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 7, 8 and 9&lt;/td&gt; &#xA;   &lt;td&gt;[7] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=odGAAJDlgp8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=7&#34;&gt;Overfitting&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-07&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [8] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=Qqz5AJjyugM&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=8&amp;amp;pp=sAQB&#34;&gt;Markov chain Monte Carlo&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-08&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 05&lt;/td&gt; &#xA;   &lt;td&gt;04 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 10 and 11&lt;/td&gt; &#xA;   &lt;td&gt;[9] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=nPi5yGbfxuo&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=9&#34;&gt;Logistic and Binomial GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-09&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [10] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=YrwL6t0kW2I&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=10&#34;&gt;Sensitivity and Poisson GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-10&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 06&lt;/td&gt; &#xA;   &lt;td&gt;11 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 12 and 13&lt;/td&gt; &#xA;   &lt;td&gt;[11] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=-397DMPooR8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=11&#34;&gt;Ordered Categories&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-11&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [12] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=SocRgsf202M&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=12&#34;&gt;Multilevel Models&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-12&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 07&lt;/td&gt; &#xA;   &lt;td&gt;18 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 13 and 14&lt;/td&gt; &#xA;   &lt;td&gt;[13] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=n2aJYtuGu54&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=13&#34;&gt;Multi-Multilevel Models&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-13&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [14] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=XDoAglqd7ss&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=14&#34;&gt;Correlated varying effects&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-14&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 08&lt;/td&gt; &#xA;   &lt;td&gt;25 February&lt;/td&gt; &#xA;   &lt;td&gt;Chapter 14&lt;/td&gt; &#xA;   &lt;td&gt;[15] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=L_QumFUv7C8&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=15&#34;&gt;Social Networks&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-15&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [16] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=PIuqxOBJqLU&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=16&#34;&gt;Gaussian Processes&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-16&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 09&lt;/td&gt; &#xA;   &lt;td&gt;04 March&lt;/td&gt; &#xA;   &lt;td&gt;Chapter 15&lt;/td&gt; &#xA;   &lt;td&gt;[17] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=lTFAB6QmwHM&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=17&#34;&gt;Measurement Error&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-17&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [18] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=oMiSb8GKR0o&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=18&#34;&gt;Missing Data&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-18&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Week 10&lt;/td&gt; &#xA;   &lt;td&gt;11 March&lt;/td&gt; &#xA;   &lt;td&gt;Chapters 16 and 17&lt;/td&gt; &#xA;   &lt;td&gt;[19] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=Doaod09YitA&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=19&#34;&gt;Beyond GLMs&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-19&#34;&gt;(Slides)&lt;/a&gt;&amp;gt; &lt;br&gt; [20] &amp;lt;&lt;a href=&#34;https://www.youtube.com/watch?v=qV3eos7maGs&amp;amp;list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN&amp;amp;index=20&#34;&gt;Horoscopes&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://speakerdeck.com/rmcelreath/statistical-rethinking-2022-lecture-20&#34;&gt;(Slides)&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Coding&lt;/h1&gt; &#xA;&lt;p&gt;This course involves a lot of scripting. Students can engage with the material using either the original R code examples or one of several conversions to other computing environments. The conversions are not always exact, but they are rather complete. Each option is listed below. I also list conversions &amp;lt;&lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;here&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Original R Flavor&lt;/h2&gt; &#xA;&lt;p&gt;For those who want to use the original R code examples in the print book, you need to install the &lt;code&gt;rethinking&lt;/code&gt; R package. The code is all on github &lt;a href=&#34;https://github.com/rmcelreath/rethinking/&#34;&gt;https://github.com/rmcelreath/rethinking/&lt;/a&gt; and there are additional details about the package there, including information about using the more-up-to-date &lt;code&gt;cmdstanr&lt;/code&gt; instead of &lt;code&gt;rstan&lt;/code&gt; as the underlying MCMC engine.&lt;/p&gt; &#xA;&lt;h2&gt;R + Tidyverse + ggplot2 + brms&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://bookdown.org/content/4857/&#34;&gt;Tidyverse/brms&lt;/a&gt;&amp;gt; conversion is very high quality and complete through Chapter 14.&lt;/p&gt; &#xA;&lt;h2&gt;Python: PyMC3 and NumPyro and more&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://github.com/pymc-devs/resources/tree/master/Rethinking_2&#34;&gt;Python/PyMC3&lt;/a&gt;&amp;gt; conversion is quite complete. There are also at least two NumPyro conversions: &amp;lt;&lt;a href=&#34;https://github.com/asuagar/statrethink-course-numpyro-2019&#34;&gt;NumPyro1&lt;/a&gt;&amp;gt; &amp;lt;&lt;a href=&#34;https://fehiepsi.github.io/rethinking-numpyro/&#34;&gt;NumPyro2&lt;/a&gt;&amp;gt;. And there is this &amp;lt;&lt;a href=&#34;https://github.com/ksachdeva/rethinking-tensorflow-probability&#34;&gt;TensorFlow Probability&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Julia and Turing&lt;/h2&gt; &#xA;&lt;p&gt;The &amp;lt;&lt;a href=&#34;https://github.com/StatisticalRethinkingJulia&#34;&gt;Julia/Turing&lt;/a&gt;&amp;gt; conversion is not as complete, but is growing fast and presents the Rethinking examples in multiple Julia engines, including the great &amp;lt;&lt;a href=&#34;https://github.com/StatisticalRethinkingJulia/TuringModels.jl&#34;&gt;TuringLang&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;p&gt;The are several other conversions. See the full list at &lt;a href=&#34;https://xcelab.net/rm/statistical-rethinking/&#34;&gt;https://xcelab.net/rm/statistical-rethinking/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Homework and solutions&lt;/h1&gt; &#xA;&lt;p&gt;I will also post problem sets and solutions. Check the folders at the top of the repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookexperimental/Robyn</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/facebookexperimental/Robyn</id>
    <link href="https://github.com/facebookexperimental/Robyn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Robyn is an experimental, automated and open-sourced Marketing Mix Modeling (MMM) package from Facebook Marketing Science. It uses various machine learning techniques (Ridge regression, multi-objective evolutionary algorithm for hyperparameter optimisation, gradient-based optimisation for budget allocation etc.) to define media channel efficienc…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project Robyn - Continuous &amp;amp; Semi-Automated MMM &lt;img src=&#34;https://raw.githubusercontent.com/facebookexperimental/Robyn/main/R/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139px&#34;&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;The Open Source Marketing Mix Model Package from Meta Marketing Science&lt;/h3&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Robyn&lt;/strong&gt;: Robyn is an experimental, semi-automated and open-sourced Marketing Mix Modeling (MMM) package from Meta Marketing Science. It uses various machine learning techniques (Ridge regression, multi-objective evolutionary algorithm for hyperparameter optimization, time-series decomposition for trend &amp;amp; season, gradient-based optimization for budget allocation etc.) to define media channel efficiency and effectivity, explore adstock rates and saturation curves. It&#39;s built for granular datasets with many independent variables and therefore especially suitable for digital and direct response advertisers with rich data sources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why are we doing this&lt;/strong&gt;: MMM used to be a resource-intensive technique that was only affordable for &#34;big players&#34;. As the privacy needs of the measurement landscape evolve, there&#39;s a clear trend of increasing demand for modern MMM as a privacy-safe solution. At Meta Marketing Science, our mission is to help all businesses grow by transforming marketing practices grounded in data and science. It&#39;s highly aligned with our mission to democratising MMM and making it accessible for advertisers of all sizes. With Project Robyn, we want to contribute to the measurement landscape, inspire the industry and build a community for exchange and innovation around the future of MMM and Marketing Science in general.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start (R only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Installing the package&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Robyn latest package version:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;## CRAN VERSION&#xA;install.packages(&#34;Robyn&#34;)&#xA;&#xA;## DEV VERSION&#xA;# If you don&#39;t have remotes installed yet, first run: install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;facebookexperimental/Robyn/R&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If it&#39;s taking too long to download, you have a slow or unstable internet connection, and have &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/issues/309&#34;&gt;issues&lt;/a&gt; while installing the package, try setting &lt;code&gt;options(timeout=400)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Robyn requires the Python library &lt;a href=&#34;https://facebookresearch.github.io/nevergrad/&#34;&gt;Nevergrad&lt;/a&gt;. If encountering Python-related error during installation, please check out the &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/raw/main/demo/demo.R&#34;&gt;step-by-step guide&lt;/a&gt; as well as this &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/issues/189&#34;&gt;issue&lt;/a&gt; to get more info.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Windows, if you get openssl error, please see instructions &lt;a href=&#34;https://stackoverflow.com/questions/54558389/how-to-solve-this-error-while-installing-python-packages-in-rstudio/54566647&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://dev.to/danilovieira/installing-openssl-on-windows-and-adding-to-path-3mbf&#34;&gt;here&lt;/a&gt; to install and update openssl.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Getting started&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use this &lt;a href=&#34;https://github.com/facebookexperimental/Robyn/tree/main/demo/demo.R&#34;&gt;demo.R&lt;/a&gt; script as step-by-step guide that is intended to cover most common use-cases. Test the package using simulated dataset provided in the package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit our &lt;a href=&#34;https://facebookexperimental.github.io/Robyn/&#34;&gt;website&lt;/a&gt; to explore more details about Project Robyn.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Join our &lt;a href=&#34;https://www.facebook.com/groups/robynmmm/&#34;&gt;public group&lt;/a&gt; to exchange with other users and interact with team Robyn.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start (Python): TBA&lt;/h2&gt; &#xA;&lt;p&gt;Work in progress. Expect a Python wrapper soon.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Meta Robyn MMM R script is MIT licensed, as found in the LICENSE file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Terms of Use - &lt;a href=&#34;https://opensource.facebook.com/legal/terms&#34;&gt;https://opensource.facebook.com/legal/terms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Privacy Policy - &lt;a href=&#34;https://opensource.facebook.com/legal/privacy&#34;&gt;https://opensource.facebook.com/legal/privacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Defensive Publication - &lt;a href=&#34;https://www.tdcommons.org/dpubs_series/4627/&#34;&gt;https://www.tdcommons.org/dpubs_series/4627/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:gufeng@fb.com&#34;&gt;gufeng@fb.com&lt;/a&gt;, Gufeng Zhou, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:leonelsentana@fb.com&#34;&gt;leonelsentana@fb.com&lt;/a&gt;, Leonel Sentana, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:igorskokan@fb.com&#34;&gt;igorskokan@fb.com&lt;/a&gt;, Igor Skokan, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:bernardolares@fb.com&#34;&gt;bernardolares@fb.com&lt;/a&gt;, Bernardo Lares, Marketing Science Partner&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:kylegoldberg@fb.com&#34;&gt;kylegoldberg@fb.com&lt;/a&gt;, Kyle Goldberg, Marketing Science Partner&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hadley/r4ds</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/hadley/r4ds</id>
    <link href="https://github.com/hadley/r4ds" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R for data science: a book&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R for Data Science&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hadley/r4ds/actions/workflows/build_book.yaml&#34;&gt;&lt;img src=&#34;https://github.com/hadley/r4ds/actions/workflows/build_book.yaml/badge.svg?sanitize=true&#34; alt=&#34;build_book&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;This repository contains the source of &lt;a href=&#34;http://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt; book. The book is built using &lt;a href=&#34;https://github.com/rstudio/bookdown&#34;&gt;bookdown&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The R packages used in this book can be installed via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;devtools::install_github(&#34;hadley/r4ds&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;h3&gt;Omnigraffle drawings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Font: 12pt Ubuntu mono&lt;/li&gt; &#xA; &lt;li&gt;Export as 300 dpi png.&lt;/li&gt; &#xA; &lt;li&gt;Website font is 18 px = 13.5 pt, so scale dpi to match font sizes: 270 = 300 * 12 / 13.5&lt;/li&gt; &#xA; &lt;li&gt;Verified sizes are visually equivalent by screenshotting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- --&gt; &#xA;&lt;pre&gt;&lt;code&gt;#| echo: FALSE&#xA;#| out.width: NULL&#xA;knitr::include_graphics(&#34;diagrams/transform.png&#34;, dpi = 270)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that r4ds uses a &lt;a href=&#34;https://contributor-covenant.org/version/2/0/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this book, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JaseZiv/worldfootballR</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/JaseZiv/worldfootballR</id>
    <link href="https://github.com/JaseZiv/worldfootballR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A wrapper for extracting world football (soccer) data from FBref, Transfermark, Understat and fotmob&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;worldfootballR &lt;img src=&#34;https://raw.githubusercontent.com/JaseZiv/worldfootballR/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;181&#34; height=&#34;201&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JaseZiv/worldfootballR/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/r-package/v/JaseZiv/worldfootballR?label=worldfootballR%20(Dev)&#34; alt=&#34;Version-Number&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR/actions&#34;&gt;&lt;img src=&#34;https://github.com/JaseZiv/worldfootballR/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/JaseZiv/worldfootballR&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/JaseZiv/worldfootballR/branch/main/graph/badge.svg?token=WGLU5J34VL&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=worldfootballR&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version-last-release/worldfootballR?style=for-the-badge&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=worldfootballR&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/worldfootballR&#34; alt=&#34;CRAN downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=worldfootballR&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/worldfootballR&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This package is designed to allow users to extract various world football results and player statistics from the following popular football (soccer) data sites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fbref.com/en/&#34;&gt;FBref&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.transfermarkt.com/&#34;&gt;Transfermarkt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://understat.com/&#34;&gt;Understat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fotmob.com/&#34;&gt;Fotmob&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the CRAN version of &lt;a href=&#34;https://CRAN.R-project.org/package=worldfootballR&#34;&gt;&lt;strong&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;worldfootballR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the released version of &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR/&#34;&gt;&lt;strong&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; from &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;JaseZiv/worldfootballR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(worldfootballR)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Package vignettes have been built to help you get started with the package.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For functions to extract data from FBref, see &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fbref-data.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For functions to extract data from Transfermarkt, see &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-transfermarkt-data.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For functions to extract data from Understat, see &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-understat-data.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For functions to extract data from fotmob, see &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fotmob-data.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For functions to extract data for international matches from FBref, see &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/fbref-data-internationals.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;To stay up-to-date with the latest changes, see the package &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/news/index.html&#34;&gt;change log&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Leagues and Seasons&lt;/h2&gt; &#xA;&lt;h3&gt;Fbref&lt;/h3&gt; &#xA;&lt;p&gt;For FBref.com data (match and season data), a list of leagues and seasons included in the package can be found in the &lt;code&gt;worldfootballR_data&lt;/code&gt; repository and can be found &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR_data/raw/master/raw-data/all_leages_and_cups/all_competitions.csv&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Transfermarkt&lt;/h3&gt; &#xA;&lt;p&gt;For transfermarkt.com data (valuations and transfers), a list of leagues and seasons included in the package can be found in the &lt;code&gt;worldfootballR_data&lt;/code&gt; repository and can be found &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR_data/raw/master/raw-data/transfermarkt_leagues/main_comp_seasons.csv&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Understat&lt;/h3&gt; &#xA;&lt;p&gt;The following leagues are currently supported by Understat (these values can be passed in to the &lt;code&gt;league&lt;/code&gt; arguments of most &lt;code&gt;understat_&lt;/code&gt; functions):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;“EPL”&lt;/li&gt; &#xA; &lt;li&gt;“La liga”&lt;/li&gt; &#xA; &lt;li&gt;“Bundesliga”&lt;/li&gt; &#xA; &lt;li&gt;“Serie A”&lt;/li&gt; &#xA; &lt;li&gt;“Ligue 1”&lt;/li&gt; &#xA; &lt;li&gt;“RFPL”&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Attribute the Source&lt;/h2&gt; &#xA;&lt;p&gt;When using the functions in the package, &lt;strong&gt;please ensure you attribute the source of the data based on the function you use&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Data providers are listed below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fbref.com/en/&#34;&gt;StatsBomb via FBref&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.transfermarkt.com/&#34;&gt;Transfermarkt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://understat.com/&#34;&gt;Understat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fotmob.com/&#34;&gt;Fotmob&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;Special mention goes out to &lt;a href=&#34;https://github.com/ewenme&#34;&gt;Ewan Henderson’s&lt;/a&gt; awesome &lt;a href=&#34;https://github.com/ewenme/understatr&#34;&gt;&lt;code&gt;understatr&lt;/code&gt;&lt;/a&gt; library for the inspiration and internal code for the &lt;code&gt;understat_&lt;/code&gt; functions contained in this package.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Issues and Improvements&lt;/h3&gt; &#xA;&lt;p&gt;When creating an issue, please include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reproducible examples&lt;/li&gt; &#xA; &lt;li&gt;A brief description of what the expected results are&lt;/li&gt; &#xA; &lt;li&gt;If applicable, the fbref.com, transfermarkt.com or understat.com page the observed behaviour is occurring on&lt;/li&gt; &#xA; &lt;li&gt;For improvement suggestions, what features are being requested and their purpose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to get in touch via email or twitter &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;https://twitter.com/jaseziv&lt;/a&gt; if you aren’t able to create an issue.&lt;/p&gt; &#xA;&lt;h3&gt;Show your support&lt;/h3&gt; &#xA;&lt;p&gt;Follow me on Twitter (&lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;jaseziv&lt;/a&gt;) for updates&lt;/p&gt; &#xA;&lt;p&gt;If this package helps you, all I ask is that you star this repo&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/shiny</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/rstudio/shiny</id>
    <link href="https://github.com/rstudio/shiny" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy interactive web applications with R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shiny &lt;img src=&#34;https://raw.githubusercontent.com/rstudio/shiny/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34; height=&#34;139&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=shiny&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/shiny&#34; alt=&#34;CRAN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rstudio/shiny/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/shiny/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.rstudio.com/new-topic?category=shiny&amp;amp;tags=shiny&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/community-shiny-blue?style=social&amp;amp;logo=rstudio&amp;amp;logoColor=75AADB&#34; alt=&#34;RStudio community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Easily build rich and productive interactive web apps in R — no HTML/CSS/JavaScript required.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An intuitive and extensible &lt;a href=&#34;https://en.wikipedia.org/wiki/Reactive_programming&#34;&gt;reactive programming&lt;/a&gt; model which makes it easy to transform existing R code into a &#34;live app&#34; where outputs automatically react to new user input. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compared to event-based programming, reactivity allows Shiny to do the minimum amount of work when input(s) change, and allows humans to more easily reason about complex &lt;a href=&#34;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&#34;&gt;MVC logic&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A prebuilt set of highly sophisticated, customizable, and easy-to-use widgets (e.g., plots, tables, sliders, dropdowns, date pickers, and more).&lt;/li&gt; &#xA; &lt;li&gt;An attractive default look based on &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; which can also be easily customized with the &lt;a href=&#34;https://github.com/rstudio/bslib&#34;&gt;bslib&lt;/a&gt; package or avoided entirely with more direct R bindings to HTML/CSS/JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;Seamless integration with &lt;a href=&#34;https://shiny.rstudio.com/articles/interactive-docs.html&#34;&gt;R Markdown&lt;/a&gt;, making it easy to embed numerous applications natively within a larger dynamic document.&lt;/li&gt; &#xA; &lt;li&gt;Tools for improving and monitoring performance, including native support for &lt;a href=&#34;https://blog.rstudio.com/2018/06/26/shiny-1-1-0/&#34;&gt;async programming&lt;/a&gt;, &lt;a href=&#34;https://talks.cpsievert.me/20201117&#34;&gt;caching&lt;/a&gt;, &lt;a href=&#34;https://rstudio.github.io/shinyloadtest/&#34;&gt;load testing&lt;/a&gt;, and &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/231874748-Scaling-and-Performance-Tuning-in-RStudio-Connect&#34;&gt;more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Modules&lt;/a&gt;: a framework for reducing code duplication and complexity.&lt;/li&gt; &#xA; &lt;li&gt;An ability to &lt;a href=&#34;https://shiny.rstudio.com/articles/bookmarking-state.html&#34;&gt;bookmark application state&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/rstudio/shinymeta&#34;&gt;generate code to reproduce output(s)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A rich ecosystem of extension packages for more &lt;a href=&#34;http://www.htmlwidgets.org/&#34;&gt;custom widgets&lt;/a&gt;, &lt;a href=&#34;https://github.com/rstudio/shinyvalidate&#34;&gt;input validation&lt;/a&gt;, &lt;a href=&#34;https://github.com/rstudio/shinytest&#34;&gt;unit testing&lt;/a&gt;, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the stable version from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;shiny&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, load the library and run an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(shiny)&#xA;# Launches an app, with the app&#39;s source code included&#xA;runExample(&#34;06_tabsets&#34;)&#xA;# Lists more prepackaged examples&#xA;runExample()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples and inspiration, check out the &lt;a href=&#34;https://shiny.rstudio.com/gallery/&#34;&gt;Shiny User Gallery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For help with learning fundamental Shiny programming concepts, check out the &lt;a href=&#34;https://mastering-shiny.org/&#34;&gt;Mastering Shiny&lt;/a&gt; book and the &lt;a href=&#34;https://shiny.rstudio.com/tutorial/&#34;&gt;Shiny Tutorial&lt;/a&gt;. The former is currently more up-to-date with modern Shiny features, whereas the latter takes a deeper, more visual, dive into fundamental concepts.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;To ask a question about Shiny, please use the &lt;a href=&#34;https://community.rstudio.com/new-topic?category=shiny&amp;amp;tags=shiny&#34;&gt;RStudio Community website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For bug reports, please use the &lt;a href=&#34;https://github.com/rstudio/shiny/issues&#34;&gt;issue tracker&lt;/a&gt; and also keep in mind that by &lt;a href=&#34;https://github.com/rstudio/shiny/wiki/Writing-Good-Bug-Reports&#34;&gt;writing a good bug report&lt;/a&gt;, you&#39;re more likely to get help with your problem.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the &lt;strong&gt;shiny&lt;/strong&gt; package. Please see our &lt;a href=&#34;https://github.com/rstudio/shiny/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for detailed guidelines of how to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The shiny package as a whole is licensed under the GPLv3. See the &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/shiny/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h2&gt;R version support&lt;/h2&gt; &#xA;&lt;p&gt;Shiny is supported on the latest release version of R, as well as the previous four minor release versions of R. For example, if the latest release R version is 4.1, then that version is supported, as well as 4.0, 3.6, 3.5, and 3.4.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leedrake5/Russia-Ukraine</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/leedrake5/Russia-Ukraine</id>
    <link href="https://github.com/leedrake5/Russia-Ukraine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Equipment Loss Tracking&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Russia-Ukraine War&lt;/h1&gt; &#xA;&lt;p&gt;Using data from &lt;a href=&#34;https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html&#34;&gt;Oryx&#39;s site&lt;/a&gt;, I&#39;ve put together a quick tracker to visualize equipment losses since &lt;a href=&#34;https://en.wikipedia.org/wiki/Russo-Ukrainian_War&#34;&gt;Russia&#39;s February 24th invasion of Ukraine&lt;/a&gt;. This is only equipment that is independently verified, as noted by Oryx:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This list only includes destroyed vehicles and equipment of which photo or videographic evidence is available. Therefore, the amount of equipment destroyed is significantly higher than recorded here. Small arms, munitions, civilian vehicles, trailers and derelict equipment (including aircraft) are not included in this list. All possible effort has gone into discerning the status of equipment between captured or abandoned. Many of the entries listed as &#39;abandoned&#39; will likely end up captured or destroyed. Similarly, some of the captured equipment might be destroyed if it can&#39;t be recovered. ATGMs and MANPADS are included in the list but not included in the ultimate count. The Soviet flag is used when the equipment in question was produced prior to 1991.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Data is drawn from &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1bngHbR0YPS7XH1oSA1VxoL4R34z60SJcR3NxguZM9GI/edit?usp=sharing&#34;&gt;this public google sheet&lt;/a&gt; which is updated based on the last update for each day. As such it is a lagging indicator, dependent not just on when equipment is lost, but when it is discovered and documented.&lt;/p&gt; &#xA;&lt;p&gt;Data is pulled daily from Oryx&#39;s site using &lt;a href=&#34;https://github.com/scarnecchia&#34;&gt;Daniel Scarnecchia&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/scarnecchia/scrape_oryx&#34;&gt;scraper tool&lt;/a&gt;, and then pushed to the public google sheet, where synthetic calculations are performed for equipment categories (to presere transparency).&lt;/p&gt; &#xA;&lt;p&gt;Points (red = Russia, blue = Ukraine) represent cumulative losses for each day, bars represent daily losses. The line repreents a general additive model smooth on cumulative losses to date; the shaded grey band represents the 95% confidence interval based on extant variation (e.g. point scatter). A wider grey band means more uncertainty, a narrower grey band means less uncertainty.&lt;/p&gt; &#xA;&lt;p&gt;Please keep in mind that this is empirical, not inteptetive, analysis. A concern raised about the available data is that it undercounts Ukrainian losses. This is possible not just because of bias (note pro-Russian sources are monitered as well) but because areas under Russian control are less likely to have photo documentation. Fog of war is very real. There is no attempt here to use a modifier to adjust numbers - analysis is strictly empirical. Any bias in the origional data will be reflected in the following analyses.&lt;/p&gt; &#xA;&lt;h2&gt;Total Equipment Losses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_total.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranian and Russian equipment losses started off equivalent, but Russians quickly began to lose more equipment by the third day of the war.&lt;/p&gt; &#xA;&lt;h2&gt;Maps&lt;/h2&gt; &#xA;&lt;p&gt;Map data is provided using a google maps base layer with troop locations from &lt;a href=&#34;https://twitter.com/HN_Schlottman&#34;&gt;Henry Schlottman&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/simonhuwiler/uawardata&#34;&gt;GitHub repo&lt;/a&gt;. Fire data comes from &lt;a href=&#34;https://firms.modaps.eosdis.nasa.gov&#34;&gt;NASA FIRMS&lt;/a&gt; VIIRS sattelite.&lt;/p&gt; &#xA;&lt;h2&gt;Battle of Kyiv&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Maps/battleofkyiv.gif?&#34; alt=&#34;alt text&#34;&gt; The [Battle of Kyiv](&lt;a href=&#34;https://en.wikipedia.org/wiki/Battle_of_Kyiv_(2022)&#34;&gt;https://en.wikipedia.org/wiki/Battle_of_Kyiv_(2022)&lt;/a&gt; concluded at the beginning of April 2022 in a Ukrainan victory. NASA FIRMS analysis indicates that the majority of detectible fire from fighting was in the last two weeks of the conflict (March 15th - April 1st).&lt;/p&gt; &#xA;&lt;h2&gt;Donbas and Kharkiv&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Maps/donbas_map.jpg?&#34; alt=&#34;alt text&#34;&gt; Russia has concentrated most of its combat forces in the Donbas attempting to breakthrough Ukranian lines established in 2014. FIRMS fire data indicates battles around Izyum, with some progress for Russia to the west.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Maps/battleofdonbas.gif?&#34; alt=&#34;alt text&#34;&gt; The [Battle of the Donbas](&lt;a href=&#34;https://en.wikipedia.org/wiki/Battle_of_Donbas_(2022)&#34;&gt;https://en.wikipedia.org/wiki/Battle_of_Donbas_(2022)&lt;/a&gt; has only shown a distinct FIRMS signature since the first week of May, indicating heavy fires all around.&lt;/p&gt; &#xA;&lt;h2&gt;Kherson&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Maps/kherson_map.jpg?&#34; alt=&#34;alt text&#34;&gt; Kherson is an occupied city where the Russian advance was halted. FIRMS data does not indicate heavy combat in the area currently.&lt;/p&gt; &#xA;&lt;h2&gt;FIRMS Summary&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/firms_summary_plot.jpg?&#34; alt=&#34;alt text&#34;&gt; Summing megawatts of energy radiated from regions of Ukraine helps highlight the independent war record. The Battle of Kyiv is clearly visible, with detectable fires concentrated in the last two weeks (March 15th - April 1st). The Battle of Donbas, following a repositioning of Russian forces, shows a more brief but just as intense spike in radiation confined to the first two weeks of May.&lt;/p&gt; &#xA;&lt;h2&gt;Destroyed Equipment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_destroyed.jpg?&#34; alt=&#34;alt text&#34;&gt; Destroyed Russian equipment outpaced destroyed Ukranian equipment by the second day of the war, though there are signs it is starting to taper.&lt;/p&gt; &#xA;&lt;h2&gt;Abandoned Equipment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_abandoned.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranians abandoned equipment more readily in the early days fo the war, but by the third day this rate plateaued. Russian abandonments increased sharply on the third day, and began to taper at the end of the first week.&lt;/p&gt; &#xA;&lt;h2&gt;Captured Equipment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_captured.jpg?&#34; alt=&#34;alt text&#34;&gt; Russians have seen a much higher rate of equipment capture since the start of the war, with a sharp increase in the second week, though this has begun to taper by the start of the third week.&lt;/p&gt; &#xA;&lt;p&gt;The degree to which Russians have lost more equipment (in every category type) is very striking. It is certaintly possible this is a product of Ukranians focusing on documenting Russian losses, though this can&#39;t be a complete explanation.&lt;/p&gt; &#xA;&lt;h2&gt;Equipment Net Changes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_absolute_total.jpg?&#34; alt=&#34;alt text&#34;&gt; This calculation subtracts units captured by each combatant with their other loss types (destroyed, damaged, and abandoned). It is arguable if a proportion of abandonded should be included as captures. Ukraine has a net positive change in equipment - meaning they&#39;ve captured more than they&#39;ve lost. Russia however has lost many more units than it has aquired from Ukraine.&lt;/p&gt; &#xA;&lt;h2&gt;Ratios&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/ratio_grid.jpg?&#34; alt=&#34;alt text&#34;&gt; This plot shows the ratios of losses (e.g. proportion of total) for Russia and Ukraine for each loss type.&lt;/p&gt; &#xA;&lt;h1&gt;Refugees&lt;/h1&gt; &#xA;&lt;p&gt;These data are gathered by the United Nations High Commissioner on Refugees (UNHCR) operational data portal (ODP) &lt;a href=&#34;https://data2.unhcr.org/en/situations/ukraine&#34;&gt;here&lt;/a&gt;. The line represents total refugees, while the bars below indicate daily totals.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/refugees_total.jpg?&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Refugee outflows peaked on the 7th of March, but migration continues to be heavy. Refugees are primarily destined for Poland initially, though other nearby countries such as Moldova and Hungary are taking large numbers as well. This only counts migration out of Ukraine - internal displacement of &lt;a href=&#34;https://displacement.iom.int/reports/ukraine-internal-displacement-report-general-population-survey-round-2-24-march-1-april&#34;&gt;7.1 million people&lt;/a&gt; has occured since the conflict began. All together over 25% of Ukraine&#39;s population, or more than 1 out of every 4 Ukrainians, has had to move since the war began.&lt;/p&gt; &#xA;&lt;h1&gt;Raw Equipment Losses&lt;/h1&gt; &#xA;&lt;p&gt;&#34;Raw&#34; refers to a specific type of vehicle, such as a tank or armored personell carrier&lt;/p&gt; &#xA;&lt;h2&gt;Tanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_tanks.jpg?&#34; alt=&#34;alt text&#34;&gt; Tank losses were equivalent in the first four days of the war, with Russian tank loses increasing sharpely thereafter, though a jump in Ukranian tank losses can be seen at the start of the second week of the war.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_total_tanks.jpg?&#34; alt=&#34;alt text&#34;&gt; This graph, however, highlights the challenges Ukraine still faces. When the sheer scale of &lt;a href=&#34;https://inews.co.uk/news/world/russia-tanks-how-many-putin-armoured-forces-ukraine-nato-explained-1504470&#34;&gt;Russian tanks&lt;/a&gt; are considered (13,300 vs. 2,100 for Ukraine), the steep Russian losses are not yet bringing parity. In general, Ukraine loses 1 tank for every 3 it takes from Russia. This ratio has to get to 4 or higher to be sustainble. Note that this estimate factors in verified tank captures by both Russia and Ukraine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_deployed_tanks.jpg?&#34; alt=&#34;alt text&#34;&gt; If we consider estimates of &lt;a href=&#34;https://en.as.com/en/2022/02/24/latest_news/1645729870_894320.html&#34;&gt;deployed Russian tanks&lt;/a&gt; instead of their total (2,840 vs. 2,100 for Ukraine), the picture is not as dire for Ukraine. This estimate likely is closer to the battlefont picture, as not all Russian tanks could be deployed at once, though Russia can sustain attrition longer than Ukraine. Note that this estimate factors in verified tank captures by both Russia and Ukraine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_total_tanks_baseline.jpg?&#34; alt=&#34;alt text&#34;&gt; If we consider estimates of &lt;a href=&#34;https://en.as.com/en/2022/02/24/latest_news/1645729870_894320.html&#34;&gt;deployed Russian tanks&lt;/a&gt; fixed to their total inventory, it is clear that Ukraine is adding to its tank fleet near the rate Russia is losing theirs. Though note that this measure assumes Russia has the capability to use all 13,300 of its tanks in Ukraine if needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_deployed_tanks_baseline.jpg?&#34; alt=&#34;alt text&#34;&gt; If we consider estimates of &lt;a href=&#34;https://en.as.com/en/2022/02/24/latest_news/1645729870_894320.html&#34;&gt;deployed Russian tanks&lt;/a&gt; fixed to their starting number, the picture is considerably more positive for Ukraine. Instead of recording only losses, this fixes the baseline (2,840 for Russia vs. 2,100 for Ukraine) and factors both tank losses and gains (e.g. captures). By this metric Russia has lost well over 5% of its tanks while Ukraine has supplemented its by 2% (e.g. captured more than it has lost).&lt;/p&gt; &#xA;&lt;h2&gt;Armored Fighting Vehicles (AFV)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_afv.jpg?&#34; alt=&#34;alt text&#34;&gt; Armored Fighting Vehicles also see parity in losses in the first 4 days of the war, though Russian losses increase less dramatically than is seen with tanks. Note that this estimate factors in verified AFV captures by both Russia and Ukraine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_afv.jpg?&#34; alt=&#34;alt text&#34;&gt; When normalized to standing inventory, Russia&#39;s losses are a less significant fraction of their total inventory compared to Ukraine. This higlhights the steep challenge Ukraine faces. In general, Ukraine loses 1 AFV for every 3 it takes from Russia. This ratio has to get to 4 or higher to be sustainble.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_total_afv_baseline.jpg?&#34; alt=&#34;alt text&#34;&gt; If we consider estimates of &lt;a href=&#34;https://en.as.com/en/2022/02/24/latest_news/1645729870_894320.html&#34;&gt;deployed Russian AFV&lt;/a&gt; fixed to their total inventory, Ukraine is adding modestly to its AFV inventory at the same rate which Russia is losing its AFV.&lt;/p&gt; &#xA;&lt;h2&gt;Artillery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_artillery.jpg?&#34; alt=&#34;alt text&#34;&gt; The ratio of Russian to Ukrainian artillery losses is 3:1, though Russia&#39;s losses have plateued since the first week of April.&lt;/p&gt; &#xA;&lt;h2&gt;Infantry Fighting Vehicles (IFV)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_ifv.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranian&#39;s lost more Infrantry Fighting Vehicles in the first two days of the war, with Russian losses acellerating linearly until the end of the second week.&lt;/p&gt; &#xA;&lt;h2&gt;Armored Personel Carriers (APC)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_apc.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranian&#39;s lost more Armored Personel Carriers in the first two days of the war, with Russian losses acellerating linearly until the end of the second week, though the differential is less dramatic than with AFVs.&lt;/p&gt; &#xA;&lt;h2&gt;Infantry Mobility Vehicles (IMV)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_imv.jpg?&#34; alt=&#34;alt text&#34;&gt; Infantry Mobility Vehicle losses are more or less equivalent between Ukranian and Russian forces through the first two weeks of the war.&lt;/p&gt; &#xA;&lt;h1&gt;Synthetic Equipment Losses&lt;/h1&gt; &#xA;&lt;p&gt;&#34;Synthetic&#34; refers to a combination of vehicle types to form a theme - such as aircraft (fighters + helicopters + drones) or anti-aircraft (SAM + MANPADS), etc.&lt;/p&gt; &#xA;&lt;h2&gt;Aircraft&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_aircraft.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranians have lost aircraft linearly, while Russians lost them almost exponentially in teh first two weeks of the war, though there are signs this is tapering sharpely. This calculation includes fighters, helicotpers, and drones.&lt;/p&gt; &#xA;&lt;h2&gt;Anti-air&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_antiair.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranians sustained higher rates of loss of anti-air systems through the first week of the war, though Russian losses have since outpaced them by the second week of the war. This calculation includes MANPADS, SAMs, self-propelled anti-aircraft guns, radar, and jamming systems.&lt;/p&gt; &#xA;&lt;h2&gt;Armor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_armor.jpg?&#34; alt=&#34;alt text&#34;&gt; Russian and Ukranian armor losses were equivalent in the first three days of the war, with Russian losses significantly outpacing Ukranians since. This calculaton includes both tanks and armored fighting vehicles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_percent_total_armor_baseline.jpg?&#34; alt=&#34;alt text&#34;&gt; If we consider estimates of &lt;a href=&#34;https://en.as.com/en/2022/02/24/latest_news/1645729870_894320.html&#34;&gt;deployed Russian armor&lt;/a&gt; fixed to their total inventory, Ukraine is adding modestly to its armor inventory at the same rate which Russia is losing its Armor.&lt;/p&gt; &#xA;&lt;h2&gt;Infantry&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_infantry.jpg?&#34; alt=&#34;alt text&#34;&gt; Infantry losses were higher among Ukranians at the start of the war, with Russian losses increasing sharply since then. Ukranian losses taper in the second week. This calculation includes infantry fighting vehicles, armored personell carriers, and infantry mobility vehicles.&lt;/p&gt; &#xA;&lt;h2&gt;Vehicles (standard transportation)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_vehicles.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranians lost more vehicles on the first day, with Russian losses accelerating since then. This calculation includes all non-specialized vehicle types.&lt;/p&gt; &#xA;&lt;h2&gt;Logistics Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_logistics.jpg?&#34; alt=&#34;alt text&#34;&gt; Ukranians have lost few logistics systems, while Russian losses increased linearly until the end of the second when they began to taper. This calculation includes engineering and communications vehicles.&lt;/p&gt; &#xA;&lt;p&gt;#Analysis By grouping synthetic vehicles, we can see how different systems have been prioritized by Russian or Ukranians, providing a glimpse into strategy.&lt;/p&gt; &#xA;&lt;h2&gt;Loss Type&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_loss_type.jpg?&#34; alt=&#34;alt text&#34;&gt; These ratio plots use Russian equipment losses as the numerator and Ukranian losses as the denominator. The higher the bar, the higher the proportion of Russian losses. While Russians have abandoned vehicles at a higher rate, destructions remain the highest differential between the two armies.&lt;/p&gt; &#xA;&lt;h2&gt;Unit Type&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leedrake5/Russia-Ukraine/master/Plots/current_unit_type.jpg?&#34; alt=&#34;alt text&#34;&gt; Here, Ukranian strategy is abundantly clear. It has targeted Russian logistics operations (higher bar = more Russian losses) to an overwhelming degree. Russians have focused on anti-air systems (lower bar = more Ukranian losses), though remarkably despite this focus Ukranian&#39;s still have an almost 2-1 edge on taking these systems out.&lt;/p&gt; &#xA;&lt;h1&gt;Conclusions&lt;/h1&gt; &#xA;&lt;p&gt;I am not a military expert, but by the second week of the war it is clear that the Russian objective of suppressing Ukranian aircraft and anti-air failed, leading to contested airspace. In contrast, Ukranian&#39;s succeeded in interfering with Russian logistics, evidenced by their focus on logistics vehicles and fuel lines. This has ground the Russian advance to a halt by the third day, with limited change since then.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/ggplot2</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/tidyverse/ggplot2</id>
    <link href="https://github.com/tidyverse/ggplot2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of the Grammar of Graphics in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggplot2 &lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tidyverse/ggplot2/actions&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/ggplot2/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/ggplot2?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/ggplot2/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggplot2&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggplot2&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href=&#34;https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448/ref=as_li_ss_tl&#34;&gt;The Grammar of Graphics&lt;/a&gt;. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get ggplot2 is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just ggplot2:&#xA;install.packages(&#34;ggplot2&#34;)&#xA;&#xA;# Or the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/ggplot2&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a deep philosophy of visualisation. However, in most cases you start with &lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales (like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like &lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;ggplot(mpg, aes(displ, hwy, colour = class)) + &#xA;  geom_point()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/README-example-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lifecycle&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;lifecycle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of people to make millions of plots. That means, by-and-large, ggplot2 itself changes relatively little. When we do make changes, they will be generally to add new functions or arguments rather than changing the behaviour of existing functions, and if we do make changes to existing behaviour we will do them for compelling reasons.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of extensions. See a community maintained list at &lt;a href=&#34;https://exts.ggplot2.tidyverse.org/gallery/&#34;&gt;https://exts.ggplot2.tidyverse.org/gallery/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learning ggplot2&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic introduction, rather than trying to learn from reading individual documentation pages. Currently, there are three good places to start:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://r4ds.had.co.nz/data-visualisation.html&#34;&gt;Data Visualisation&lt;/a&gt; and &lt;a href=&#34;https://r4ds.had.co.nz/graphics-for-communication.html&#34;&gt;Graphics for communication&lt;/a&gt; chapters in &lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt;. R for Data Science is designed to give you a comprehensive introduction to the &lt;a href=&#34;https://www.tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;, and these two chapters will get you up to speed with the essentials of ggplot2 as quickly as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to take an online course, try &lt;a href=&#34;https://learning.oreilly.com/videos/data-visualization-in/9781491963661/&#34;&gt;Data Visualization in R With ggplot2&lt;/a&gt; by Kara Woo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to follow a webinar, try &lt;a href=&#34;https://youtu.be/h29g21z0a68&#34;&gt;Plotting Anything with ggplot2&lt;/a&gt; by Thomas Lin Pedersen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to dive into making common graphics as quickly as possible, I recommend &lt;a href=&#34;https://r-graphics.org&#34;&gt;The R Graphics Cookbook&lt;/a&gt; by Winston Chang. It provides a set of recipes to solve common graphics problems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href=&#34;https://ggplot2-book.org&#34;&gt;ggplot2: Elegant Graphics for Data Analysis&lt;/a&gt;. It describes the theoretical underpinnings of ggplot2 and shows you how all the pieces fit together. This book helps you understand the theory that underpins ggplot2, and will help you create new types of graphics specifically tailored to your needs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;RStudio community&lt;/a&gt; is a friendly place to ask any questions about ggplot2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50&#34;&gt;Stack Overflow&lt;/a&gt; is a great source of answers to common ggplot2 questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dieghernan/tidyterra</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/dieghernan/tidyterra</id>
    <link href="https://github.com/dieghernan/tidyterra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tidyverse and ggplot2 methods for terra spatial objects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tidyterra &lt;a href=&#34;https://dieghernan.github.io/tidyterra/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/tidyterra&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/web/checks/check_results_tidyterra.html&#34;&gt;&lt;img src=&#34;https://cranchecks.info/badges/worst/tidyterra&#34; alt=&#34;CRAN results&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/tidyterra&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dieghernan/tidyterra/actions/workflows/check-full.yaml&#34;&gt;&lt;img src=&#34;https://github.com/dieghernan/tidyterra/actions/workflows/check-full.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/dieghernan/tidyterra&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dieghernan/tidyterra/branch/main/graph/badge.svg?token=blvDmRjcfb&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dieghernan.r-universe.dev/&#34;&gt;&lt;img src=&#34;https://dieghernan.r-universe.dev/badges/tidyterra&#34; alt=&#34;r-universe&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.6572471&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/DOI-10.5281/zenodo.6572471-blue&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of {tidyterra} is to provide common methods of the &lt;a href=&#34;https://www.tidyverse.org/packages/&#34;&gt;tidyverse packages&lt;/a&gt; for objects created with the &lt;a href=&#34;https://CRAN.R-project.org/package=terra&#34;&gt;{terra}&lt;/a&gt; package: SpatRaster and SpatVector. It also provides geoms for plotting these objects with &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;{ggplot2}&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;{tidyverse} methods implemented on {tidyterra} works differently depending on the type of Spat* object:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;SpatVector: the methods are implemented taking advantage of the tidyverse implementation on {sf}. The SpatVector object is converted first to sf via &lt;code&gt;sf::st_as_sf()&lt;/code&gt;, then the method (or function) is applied and finally the object is converted back to SpatVector with &lt;code&gt;terra::vect()&lt;/code&gt;. Hence, rows correspond to geometries and columns correspond to attributes of the geometry.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SpatRaster: The implementation on SpatRaster objects differs, since the methods could be applied to layers or to cells. {tidyterra} overall approach is to treat the layers as columns of a tibble and the cells as rows (i.e. &lt;code&gt;select(SpatRaster, 1)&lt;/code&gt; would select the first layer of a SpatRaster).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The methods implemented return the same type of object used as input, unless the expected behavior of the method is to return another type of object, (for example, &lt;code&gt;as_tibble()&lt;/code&gt; would return a tibble).&lt;/p&gt; &#xA;&lt;p&gt;Current methods and functions provided by {tidyterra} are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;tidyverse method&lt;/th&gt; &#xA;   &lt;th&gt;SpatVector&lt;/th&gt; &#xA;   &lt;th&gt;SpatRaster&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tibble::as_tibble()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::select()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Select layers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::mutate()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Create /modify layers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::transmute()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::filter()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Modify cells values and (additionally) remove outer cells.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::slice()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Additional methods for slicing by row and column.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::pull()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::rename()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dplyr::relocate()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tidyr::drop_na()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; Remove cell values with &lt;code&gt;NA&lt;/code&gt; on any layer. Additionally, outer cells with &lt;code&gt;NA&lt;/code&gt; are removed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tidyr::replace_na()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ggplot2::geom_*()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; &lt;code&gt;geom_spatvector()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt; &lt;code&gt;geom_spatraster()&lt;/code&gt; and &lt;code&gt;geom_spatraster_rgb()&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;❗&lt;/span&gt; A note on performance&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} is conceived as a user-friendly wrapper of {terra} using the {tidyverse} methods and verbs. This approach therefore has a &lt;strong&gt;cost in terms of performance&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a &lt;strong&gt;heavy user of {terra}&lt;/strong&gt; or you need to work with &lt;strong&gt;big raster files&lt;/strong&gt;, {terra} is much more focused on terms of performance. When possible, each function of {tidyterra} references to its equivalent on {terra}.&lt;/p&gt; &#xA;&lt;p&gt;As a rule of thumb if your raster has less than 10.000.000 data slots counting cells and layers (i.e.&amp;nbsp;&lt;code&gt;terra::ncell(your_rast)*terra::nlyr(your_rast) &amp;lt; 10e6&lt;/code&gt;) you are good to go with {tidyterra}.&lt;/p&gt; &#xA;&lt;p&gt;When plotting rasters, resampling is performed automatically (as &lt;code&gt;terra::plot()&lt;/code&gt; does, see the help page). You can adjust this with the &lt;code&gt;maxcell&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install {tidyterra} from &lt;a href=&#34;https://CRAN.R-project.org/package=tidyterra&#34;&gt;&lt;strong&gt;CRAN&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the development version of {tidyterra} like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;dieghernan/tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can install {tidyterra} using the &lt;a href=&#34;https://dieghernan.r-universe.dev/ui#builds&#34;&gt;r-universe&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Enable this universe&#xA;options(repos = c(&#xA;  dieghernan = &#34;https://dieghernan.r-universe.dev&#34;,&#xA;  CRAN = &#34;https://cloud.r-project.org&#34;&#xA;))&#xA;install.packages(&#34;tidyterra&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;This is a basic example which shows you how to manipulate and plot SpatRaster objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyterra)&#xA;#&amp;gt; ── Attaching packages ────────────────────────────────── tidyterra 0.1.0.9000 ──&#xA;#&amp;gt; &#xA;#&amp;gt; Suppress this startup message by setting Sys.setenv(tidyterra.quiet = TRUE)&#xA;#&amp;gt; ✔ tibble 3.1.7     ✔ dplyr  1.0.9&#xA;#&amp;gt; ✔ tidyr  1.2.0&#xA;&#xA;library(terra)&#xA;#&amp;gt; terra 1.5.21&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;terra&#39;&#xA;#&amp;gt; The following object is masked from &#39;package:dplyr&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     src&#xA;#&amp;gt; The following object is masked from &#39;package:tidyr&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     extract&#xA;&#xA;&#xA;# Temperatures&#xA;f &amp;lt;- system.file(&#34;extdata/cyl_temp.tif&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;rastertemp &amp;lt;- rast(f)&#xA;&#xA;library(ggplot2)&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;ggplot2&#39;&#xA;#&amp;gt; The following object is masked from &#39;package:terra&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     arrow&#xA;&#xA;# Facet all layers&#xA;&#xA;ggplot() +&#xA;  geom_spatraster(data = rastertemp) +&#xA;  facet_wrap(~lyr, ncol = 2) +&#xA;  scale_fill_terrain_c(labels = scales::label_number(suffix = &#34;º&#34;)) +&#xA;  labs(fill = &#34;Avg temperature&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/README-example-temp-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# Create maximum differences&#xA;&#xA;variation &amp;lt;- rastertemp %&amp;gt;%&#xA;  mutate(&#xA;    diff = tavg_06 - tavg_04&#xA;  ) %&amp;gt;%&#xA;  select(var_apr_jun = diff)&#xA;&#xA;# Add also a overlay of a SpatVector&#xA;f_vect &amp;lt;- system.file(&#34;extdata/cyl.gpkg&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;prov &amp;lt;- vect(f_vect)&#xA;&#xA;ggplot() +&#xA;  geom_spatraster(data = variation) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  scale_fill_gradientn(&#xA;    colors = hcl.colors(10, &#34;RdBu&#34;, rev = TRUE),&#xA;    na.value = NA,&#xA;    labels = scales::label_number(suffix = &#34;º&#34;)&#xA;  ) +&#xA;  theme_minimal() +&#xA;  coord_sf(crs = 25830) +&#xA;  labs(&#xA;    fill = &#34;Difference&#34;,&#xA;    title = &#34;Variation of temperature in Castille and Leon (Spain)&#34;,&#xA;    subtitle = &#34;(Average) temperatures in June vs. April&#34;&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/README-example-temp-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;{tidyterra} also provide a geom for plotting RGB SpatRaster tiles with {ggplot2}&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;f_tile &amp;lt;- system.file(&#34;extdata/cyl_tile.tif&#34;, package = &#34;tidyterra&#34;)&#xA;&#xA;rgb_tile &amp;lt;- rast(f_tile)&#xA;&#xA;&#xA;ggplot() +&#xA;  geom_spatraster_rgb(data = rgb_tile) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  theme_light()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/README-example-tile-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Recognizes coord_sf()&#xA;&#xA;ggplot() +&#xA;  geom_spatraster_rgb(data = rgb_tile) +&#xA;  geom_spatvector(data = prov, fill = NA) +&#xA;  theme_light() +&#xA;  # Change crs and datum (for relabeling graticules)&#xA;  coord_sf(crs = 3035, datum = 3035)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dieghernan/tidyterra/main/man/figures/README-example-tile-2.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;I need your feedback&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} is currently on development mode. Please leave your feedback or open an issue on &lt;a href=&#34;https://github.com/dieghernan/tidyterra/issues&#34;&gt;https://github.com/dieghernan/tidyterra/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;To cite ‘tidyterra’ in publications use:&lt;/p&gt; &#xA;&lt;p&gt;Hernangomez D (2022). &lt;em&gt;tidyterra: tidyverse Methods and ggplot2 Utils for terra Objects&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5281/zenodo.6572471&#34;&gt;https://doi.org/10.5281/zenodo.6572471&lt;/a&gt;, &lt;a href=&#34;https://dieghernan.github.io/tidyterra/&#34;&gt;https://dieghernan.github.io/tidyterra/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A BibTeX entry for LaTeX users is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@Manual{R-tidyterra,&#xA;  title = {{tidyterra}: tidyverse Methods and ggplot2 Utils for terra Objects},&#xA;  doi = {10.5281/zenodo.6572471},&#xA;  author = {Diego Hernangómez},&#xA;  year = {2022},&#xA;  version = {0.1.0.9000},&#xA;  url = {https://dieghernan.github.io/tidyterra/},&#xA;  abstract = {Extension of the tidyverse for SpatRaster and SpatVector objects of the terra package. It includes also new geom_ functions that provide a convenient way of visualizing terra objects with ggplot2.},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;{tidyterra} ggplot2 geoms are based on &lt;a href=&#34;https://github.com/paleolimbot/ggspatial&#34;&gt;{ggspatial}&lt;/a&gt; implementation, by &lt;a href=&#34;https://github.com/paleolimbot&#34;&gt;Dewey Dunnington&lt;/a&gt; and &lt;a href=&#34;https://github.com/paleolimbot/ggspatial/graphs/contributors&#34;&gt;ggspatial contributors&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/keras</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/rstudio/keras</id>
    <link href="https://github.com/rstudio/keras" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Interface to Keras&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R interface to Keras&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/keras.io/img/keras-logo-2018-large-1200.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/keras/actions?workflow=R-CMD-check&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/keras/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=keras&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/keras&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/keras-team/keras/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://keras.io/&#34;&gt;Keras&lt;/a&gt; is a high-level neural networks API developed with a focus on enabling fast experimentation. &lt;em&gt;Being able to go from idea to result with the least possible delay is key to doing good research.&lt;/em&gt; Keras has the following key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Allows the same code to run on CPU or on GPU, seamlessly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User-friendly API which makes it easy to quickly prototype deep learning models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in support for convolutional networks (for computer vision), recurrent networks (for sequence processing), and any combination of both.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports arbitrary network architectures: multi-input or multi-output models, layer sharing, model sharing, etc. This means that Keras is appropriate for building essentially any deep learning model, from a memory network to a neural Turing machine.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the package website at &lt;a href=&#34;https://tensorflow.rstudio.com&#34;&gt;https://tensorflow.rstudio.com&lt;/a&gt; for complete documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>swirldev/swirl_courses</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/swirldev/swirl_courses</id>
    <link href="https://github.com/swirldev/swirl_courses" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎓 A collection of interactive courses for the swirl R package.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;swirl courses&lt;/h1&gt; &#xA;&lt;p&gt;This is a collection of interactive courses for use with the &lt;a href=&#34;http://swirlstats.com&#34;&gt;swirl R package&lt;/a&gt;. You&#39;ll find instructions for installing courses further down on this page. Some courses are still in development and we&#39;d love to hear any &lt;a href=&#34;https://github.com/swirldev/swirl_courses/issues/new&#34;&gt;suggestions&lt;/a&gt; you have as you work through them.&lt;/p&gt; &#xA;&lt;p&gt;For more information regarding swirl, visit &lt;a href=&#34;http://swirlstats.com&#34;&gt;swirlstats.com&lt;/a&gt; or the &lt;a href=&#34;https://github.com/swirldev/swirl&#34;&gt;swirl GitHub repository&lt;/a&gt;. If you&#39;d like to write your own interactive content, please visit the &lt;a href=&#34;http://swirlstats.com/instructors.html&#34;&gt;Instructors page&lt;/a&gt; of our website.&lt;/p&gt; &#xA;&lt;p&gt;Here are our current offerings, organized by level of difficulty:&lt;/p&gt; &#xA;&lt;h4&gt;Beginner&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;R Programming&lt;/strong&gt;: The basics of programming in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swirldev/R_Programming_E&#34;&gt;&lt;strong&gt;R Programming E&lt;/strong&gt;&lt;/a&gt;: Same as the original, but modified slightly for in-class use (see below ***)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swirlstats.com/scn/rpe.html&#34;&gt;&lt;strong&gt;The R Programming Environment&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - **Data Analysis**: Basic ideas in statistics and data visualization --&gt; &#xA;&lt;!-- - **Mathematical Biostatistics Boot Camp**: One- and two-sample t-tests, power, and sample size --&gt; &#xA;&lt;!-- - **Open Intro**: A very basic introduction to statistics, data analysis, and data visualization --&gt; &#xA;&lt;p&gt;*** &lt;em&gt;R Programming E is identical to R Programming, except we&#39;ve eliminated the prompts for Coursera credentials at the end of each lesson and instead give students the option to send an email to their instructor notifying them of completion. Admittedly, it&#39;s sort of a hack until we come up with a more robust solution for in-class use (i.e. an instructor &#34;dashboard&#34;).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Intermediate&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Regression Models&lt;/strong&gt;: The basics of regression modeling in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Getting and Cleaning Data&lt;/strong&gt;: dplyr, tidyr, lubridate, oh my!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Advanced&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statistical Inference&lt;/strong&gt;: This intermediate to advanced level course closely follows the &lt;a href=&#34;https://www.coursera.org/course/statinference&#34;&gt;Statistical Inference course&lt;/a&gt; of the Johns Hopkins &lt;a href=&#34;https://www.coursera.org/specialization/jhudatascience/1&#34;&gt;Data Science Specialization&lt;/a&gt; on Coursera. It introduces the student to basic concepts of statistical inference including probability, hypothesis testing, confidence intervals and p-values. It concludes with an initiation to topics of particular relevance to big data, issues of multiple testing and resampling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swirlstats.com/scn/arp.html&#34;&gt;&lt;strong&gt;Advanced R Programming&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since our users come from a variety backgrounds, it&#39;s very hard to label material as &lt;strong&gt;Beginner&lt;/strong&gt;, &lt;strong&gt;Intermediate&lt;/strong&gt;, or &lt;strong&gt;Advanced&lt;/strong&gt;. If you find something that is labelled &lt;strong&gt;Beginner&lt;/strong&gt; to be challenging, please don&#39;t be discouraged. The first step of learning anything is to acknowledge that you are capable of understanding it. True understanding will come with time and practice.&lt;/p&gt; &#xA;&lt;h4&gt;Course Authors&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Writing swirl Courses&lt;/strong&gt;: An interactive guides and example for swirl course authors. The first group of lessons cover basics. The rest cover special topics useful primarily as samples--points of departure for one&#39;s own material. For more comprehensive documentation about writing your own swirl courses see &lt;a href=&#34;http://swirlstats.com/swirlify/&#34;&gt;http://swirlstats.com/swirlify/&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install and run a course automatically from swirl&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is the preferred method of installing courses.&lt;/strong&gt; It automates the process by allowing you to do everything right from the R console.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have a recent version version of swirl:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;install.packages(&#34;swirl&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Enter the following from the R console, &lt;strong&gt;substituting the name of the course&lt;/strong&gt; that you wish to install:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;library(swirl)&#xA;install_course(&#34;Course Name Here&#34;)&#xA;swirl()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;install_course(&#34;R Programming&#34;)&lt;/code&gt; will install the R Programming course. &lt;strong&gt;Please note that course names are case sensitive!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If that doesn&#39;t work for you...&lt;/p&gt; &#xA;&lt;h2&gt;Install and run a course manually&lt;/h2&gt; &#xA;&lt;p&gt;If the automatic course installation method outlined above does not work for you, then there&#39;s a simple alternative.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find the course you want to install on the &lt;a href=&#34;https://swirlstats.com/scn/title.html&#34;&gt;Swirl Course network website&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow the manual installation instructions on the course page.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If that does not work for you, consider taking a look at the &lt;a href=&#34;https://github.com/swirldev/swirl_courses/wiki/Legacy-Manual-Install-Instructions-for-Swirl-Courses&#34;&gt;legacy manual install instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstall a course&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to remove a course at any time, you can use &lt;code&gt;uninstall_course(&#34;Course Name Here&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using swirl in the classroom&lt;/h2&gt; &#xA;&lt;p&gt;Instructors around the world are using swirl in their classrooms. We think this is awesome. If you&#39;re an instructor, please feel free to do the same -- free of charge. While your students may be paying to take your course or attend your institution, we simply ask that you don&#39;t charge people &lt;em&gt;directly&lt;/em&gt; for the use of our software or instructional content.&lt;/p&gt; &#xA;&lt;p&gt;If you are not sure about a particular use case, don&#39;t hesitate to post a question to our &lt;a href=&#34;https://groups.google.com/forum/#!forum/swirl-discuss&#34;&gt;Google Group&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>easystats/easystats</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/easystats/easystats</id>
    <link href="https://github.com/easystats/easystats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌌 The R easystats-project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;em&gt;easystats&lt;/em&gt;: Jump in the Easyverse&lt;/h1&gt; &#xA;&lt;h1&gt;What is &lt;em&gt;easystats&lt;/em&gt;?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;easystats&lt;/strong&gt; is a collection of R packages, which aims to provide a unifying and consistent framework to tame, discipline, and harness the scary R statistics and their pesky models.&lt;/p&gt; &#xA;&lt;p&gt;However, there is not (yet) an &lt;em&gt;unique&lt;/em&gt; “easystats” way of doing data analysis. Instead, start with one package and, when you’ll face a new challenge, do check if there is an &lt;em&gt;easystats&lt;/em&gt; answer for it in other packages. You will slowly uncover how using them together facilitates your life. And, who knows, you might even end up using them all. &lt;em&gt;&lt;strong&gt;Gotta catch ’em all!&lt;/strong&gt;&lt;/em&gt; &#xA; &lt;!--&#xA;&#39;tis a pokémon reference for y&#39;all grandpas --&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/logo_wall.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://easystats.r-universe.dev&#34;&gt;&lt;img src=&#34;https://easystats.r-universe.dev/badges/:registry&#34; alt=&#34;:registry status badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://easystats.r-universe.dev&#34;&gt;&lt;img src=&#34;https://easystats.r-universe.dev/badges/:total&#34; alt=&#34;:total status badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The whole &lt;code&gt;easystats&lt;/code&gt; suite can be installed &lt;em&gt;at once&lt;/em&gt; with the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;easystats&#34;, repos = &#34;https://easystats.r-universe.dev&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then load the entire ecosystem by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#34;easystats&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The package is currently not available on CRAN, but we are working on submitting it there soon.&lt;/p&gt; &#xA;&lt;p&gt;Finally, as &lt;em&gt;easystats&lt;/em&gt; sometimes depends on some additional packages for specific functions that are not downloaded by default. If you want to benefit from the &lt;strong&gt;full &lt;em&gt;easystats&lt;/em&gt; experience&lt;/strong&gt; without any hiccups, simply run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;easystats::install_suggested()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;Do you wish to cite &lt;em&gt;easystats&lt;/em&gt;? ❤️&lt;/p&gt; &#xA;&lt;p&gt;Have a look at this article on how you can do so! &lt;a href=&#34;https://easystats.github.io/easystats/articles/citation.html&#34;&gt;https://easystats.github.io/easystats/articles/citation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;Each &lt;strong&gt;easystats&lt;/strong&gt; package has a different scope and purpose. This means your &lt;strong&gt;best way to start&lt;/strong&gt; is to explore and pick the one(s) that you feel might be useful to you. However, as they are built with a “bigger picture” in mind, you will realize that using more of them creates a smooth workflow, as these packages are meant to work together. Ideally, these packages work in unison to cover all aspects of statistical analysis and data visualization.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/report&#34;&gt;&lt;strong&gt;report&lt;/strong&gt;&lt;/a&gt;: 📜 🎉 Automated statistical reporting of objects in R&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/correlation&#34;&gt;&lt;strong&gt;correlation&lt;/strong&gt;&lt;/a&gt;: 🔗 Your all-in-one package to run correlations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/modelbased&#34;&gt;&lt;strong&gt;modelbased&lt;/strong&gt;&lt;/a&gt;: 📈 Estimate effects, group averages and contrasts between groups based on statistical models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/bayestestR&#34;&gt;&lt;strong&gt;bayestestR&lt;/strong&gt;&lt;/a&gt;: 👻 Great for beginners or experts of Bayesian statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/parameters&#34;&gt;&lt;strong&gt;parameters&lt;/strong&gt;&lt;/a&gt;: 📊 Obtain a table containing all information about the parameters of your models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/performance&#34;&gt;&lt;strong&gt;performance&lt;/strong&gt;&lt;/a&gt;: 💪 Models’ quality and performance metrics (R2, ICC, LOO, AIC, BF, …)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/effectsize&#34;&gt;&lt;strong&gt;effectsize&lt;/strong&gt;&lt;/a&gt;: 🐉 Compute, convert, interpret and work with indices of effect size and standardized parameters&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/insight&#34;&gt;&lt;strong&gt;insight&lt;/strong&gt;&lt;/a&gt;: 🔮 For developers, a package to help you work with different models and packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/see&#34;&gt;&lt;strong&gt;see&lt;/strong&gt;&lt;/a&gt;: 🎨 The plotting companion to create beautiful results visualizations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easystats/datawizard&#34;&gt;&lt;strong&gt;datawizard&lt;/strong&gt;&lt;/a&gt;: 🧙 Magic potions to clean and transform your data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Frequently Asked Questions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;How is &lt;em&gt;easystats&lt;/em&gt; different from the &lt;em&gt;tidyverse&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You’ve probably already heard about the &lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;&lt;strong&gt;tidyverse&lt;/strong&gt;&lt;/a&gt;, another very popular collection of packages (&lt;em&gt;ggplot&lt;/em&gt;, &lt;em&gt;dplyr&lt;/em&gt;, &lt;em&gt;tidyr&lt;/em&gt;, …) that also makes using R easier. So, should you pick the &lt;em&gt;tidyverse&lt;/em&gt; or &lt;em&gt;easystats&lt;/em&gt;? &lt;strong&gt;Pick both!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Indeed, these two ecosystems have been designed with very different goals in mind. The &lt;em&gt;tidyverse&lt;/em&gt; packages are primarily made to create a new R experience, where data manipulation and exploration is intuitive and consistent. On the other hand, &lt;strong&gt;easystats&lt;/strong&gt; focuses more on the final stretch of the analysis: understanding and interpreting your results and reporting them in a manuscript or a report, while following best practices. You can definitely use the &lt;em&gt;easystats&lt;/em&gt; functions in a &lt;em&gt;tidyverse&lt;/em&gt; workflow!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;easystats + tidyverse =&lt;/strong&gt; ❤️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can &lt;em&gt;easystats&lt;/em&gt; be useful to advanced users and/or developers?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Yes, definitely! &lt;strong&gt;easystats&lt;/strong&gt; is built in terms of modules that are general enough to be used inside other packages. For instance, the &lt;em&gt;insight&lt;/em&gt; package is made to easily implement support for post-processing of pretty much all regression model packages under the sun. We use it in all the &lt;em&gt;easystats&lt;/em&gt; packages, but it is also used in other non-easystats packages, such as &lt;a href=&#34;https://github.com/IndrajeetPatil/ggstatsplot&#34;&gt;&lt;strong&gt;ggstatsplot&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/vincentarelbundock/modelsummary/&#34;&gt;&lt;strong&gt;modelsummary&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/strengejacke/ggeffects&#34;&gt;&lt;strong&gt;ggeffects&lt;/strong&gt;&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;So why not in yours&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Moreover, the &lt;em&gt;easystats&lt;/em&gt; packages are very lightweight, with a minimal set of dependencies, which again makes it great if you want to rely on them.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;h2&gt;Websites&lt;/h2&gt; &#xA;&lt;p&gt;Each &lt;code&gt;easystats&lt;/code&gt; package has a dedicated website.&lt;/p&gt; &#xA;&lt;p&gt;For example, website for &lt;code&gt;parameters&lt;/code&gt; is &lt;a href=&#34;https://easystats.github.io/parameters/&#34;&gt;https://easystats.github.io/parameters/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blog&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the websites containing documentation for these packages, you can also read posts from &lt;code&gt;easystats&lt;/code&gt; blog: &lt;a href=&#34;https://easystats.github.io/blog/posts/&#34;&gt;https://easystats.github.io/blog/posts/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other learning resources&lt;/h2&gt; &#xA;&lt;p&gt;In addition to these websites and blog posts, you can also check out the following presentations and talks to learn more about this ecosystem:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://easystats.github.io/easystats/articles/resources.html&#34;&gt;https://easystats.github.io/easystats/articles/resources.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Most &lt;em&gt;easystats&lt;/em&gt; packages are very lightweight, &lt;em&gt;i.e.&lt;/em&gt;, they don’t rely nor import any other packages! This means that you can safely use them as dependencies in your own packages, without the risk of a butterfly effect, where a small change in a distant downstream dependency with unexpected upstream consequences.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/depnetwork-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;p&gt;As we can see, the only exception is the &lt;a href=&#34;http://easystats.github.io/see&#34;&gt;&lt;strong&gt;see&lt;/strong&gt;&lt;/a&gt; package, one of our high-level packages that is responsible for plotting and creating figures, relying thus on other packages such as &lt;em&gt;ggplot2&lt;/em&gt;, which has a substantial number of dependencies.&lt;/p&gt; &#xA;&lt;h1&gt;Downloads&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Total&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;insight&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;bayestestR&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;parameters&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;performance&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;effectsize&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;datawizard&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;correlation&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;see&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;modelbased&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;report&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;easystats&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8,247,518&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2,554,616&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,216,935&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,181,903&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1,109,543&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;924,090&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;702,059&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;233,734&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;209,393&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;80,984&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;34,261&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Trend&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-8-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Cumulative downloads&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-9-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Average monthly downloads&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/easystats/easystats/master/man/figures/unnamed-chunk-10-1.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h1&gt;Versioning&lt;/h1&gt; &#xA;&lt;p&gt;Package version numbers indicate following: &lt;code&gt;MAJOR.MINOR.PATCH.DEVELOPMENT&lt;/code&gt;. Here are key steps to keep in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;As long as packages are in a more or less rapidly developing and changing state, the &lt;strong&gt;major&lt;/strong&gt; version number is typically &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once we think we will have a stable base that will likely not change dramatically or soon, the major version number will be set to &lt;code&gt;1&lt;/code&gt;, and will be increased for following major changes that probably break the current API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When new features are added or (re)moved, we typically increase the &lt;strong&gt;minor&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minimal changes or bug fixes only are indicated by increasing the &lt;strong&gt;patch&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Current development versions of our packages (i.e.&amp;nbsp;master/main branch from GitHub) additionally have a &lt;strong&gt;development&lt;/strong&gt; version number.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We are happy to receive bug reports, suggestions, questions, and (most of all) contributions to fix problems and add features. Pull Requests for contributions are encouraged.&lt;/p&gt; &#xA;&lt;p&gt;Here are some simple ways in which you can contribute (in the increasing order of commitment):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read and correct any inconsistencies in the documentation&lt;/li&gt; &#xA; &lt;li&gt;Raise issues about bugs or wanted features&lt;/li&gt; &#xA; &lt;li&gt;Review code&lt;/li&gt; &#xA; &lt;li&gt;Add new functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;Please note that the ‘easystats’ project is released with a &lt;a href=&#34;https://easystats.github.io/easystats/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>selva86/datasets</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/selva86/datasets</id>
    <link href="https://github.com/selva86/datasets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of datasets of ML problem solving&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datasets&lt;/h1&gt; &#xA;&lt;h3&gt;Datasets collected from R packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mlbench&lt;/li&gt; &#xA; &lt;li&gt;kernlab&lt;/li&gt; &#xA; &lt;li&gt;klaR&lt;/li&gt; &#xA; &lt;li&gt;car&lt;/li&gt; &#xA; &lt;li&gt;reshape2&lt;/li&gt; &#xA; &lt;li&gt;hflights&lt;/li&gt; &#xA; &lt;li&gt;ISLR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The original source repositories are:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;ftp://ftp.ics.uci.edu/pub/machine-learning-databases&#34;&gt;ftp://ftp.ics.uci.edu/pub/machine-learning-databases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ics.uci.edu/~mlearn/MLRepository.html&#34;&gt;http://www.ics.uci.edu/~mlearn/MLRepository.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kdd.ics.uci.edu&#34;&gt;http://kdd.ics.uci.edu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.liacs.nl/~putten/library/cc2000/&#34;&gt;http://www.liacs.nl/~putten/library/cc2000/&lt;/a&gt; (ticdata)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/blogdown</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/rstudio/blogdown</id>
    <link href="https://github.com/rstudio/blogdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create Blogs and Websites with R Markdown&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;blogdown&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/blogdown/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/blogdown&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/rstudio/blogdown?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rstudio/blogdown/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;The goal of the blogdown package is to provide a powerful and customizable website output format for &lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;R Markdown&lt;/a&gt;. Use dynamic R Markdown documents to build webpages featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;R code (or other programming languages that &lt;a href=&#34;https://yihui.org/knitr/&#34;&gt;knitr&lt;/a&gt; supports),&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;automatically rendered output such as graphics, tables, analysis results, and HTML widgets, and&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;technical writing elements such as citations, footnotes, and LaTeX math, enabled by the &lt;a href=&#34;https://pkgs.rstudio.com/bookdown/&#34;&gt;bookdown package&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, blogdown uses &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, a popular open-source static website generator, which provides a fast and flexible way to build your site content to be shared online. Other website generators like Jekyll and Hexo are also supported.&lt;/p&gt; &#xA;&lt;p&gt;A useful feature of blogdown sites, compared to other R Markdown-based &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/rmarkdown-site.html&#34;&gt;websites&lt;/a&gt;, is that you may organize your website content (including R Markdown files) within subdirectories. This makes blogdown a good solution not just for blogging or sites about R — it can also be used to create general-purpose websites to communicate about data science, statistics, data visualization, programming, or education.&lt;/p&gt; &#xA;&lt;h2&gt;Book&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;&lt;img class=&#34;book&#34; src=&#34;https://bookdown.org/yihui/blogdown/images/cover.png&#34; alt=&#34;blogdown: Creating Websites with R Markdown&#34; height=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via CRAN as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#39;blogdown&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the development version of the &lt;strong&gt;blogdown&lt;/strong&gt; package, you can install the package from GitHub via the &lt;a href=&#34;https://remotes.r-lib.org&#34;&gt;&lt;strong&gt;remotes&lt;/strong&gt; package&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#39;rstudio/blogdown&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You may create a new site via the function &lt;code&gt;blogdown::new_site()&lt;/code&gt; under an &lt;em&gt;empty&lt;/em&gt; directory. It will create a skeleton site, download a Hugo theme from Github, add some sample content, launch a web browser and you will see the new site. The sample blog post &lt;code&gt;hello-world.Rmd&lt;/code&gt; should be opened automatically, and you can edit it. The website will be automatically rebuilt and the page will be refreshed after you save the file.&lt;/p&gt; &#xA;&lt;p&gt;If you use RStudio, you can create a new RStudio project for your website from the menu &lt;code&gt;File -&amp;gt; New Project -&amp;gt; New Directory -&amp;gt; Website using blogdown&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The function &lt;code&gt;blogdown::serve_site()&lt;/code&gt; may be the most frequently used function in this package. It builds the website, loads it into your web browser, and automatically refreshes the browser when you update the Markdown or R Markdown files. Do not use the command line &lt;code&gt;hugo server&lt;/code&gt; to build or serve the site. It only understands plain Markdown files, and cannot build R Markdown.&lt;/p&gt; &#xA;&lt;p&gt;You may not be satisfied with the default site created from &lt;code&gt;new_site()&lt;/code&gt;. There are two things you may want to do after your first successful experiment with &lt;strong&gt;blogdown&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pick a Hugo theme that you like from &lt;a href=&#34;https://themes.gohugo.io&#34;&gt;https://themes.gohugo.io&lt;/a&gt;. All you need is its Github user and repository name, to be passed to the &lt;code&gt;theme&lt;/code&gt; argument of &lt;code&gt;new_site()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add more content (pages or posts), or migrate your existing website.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://community.rstudio.com/tags/c/R-Markdown/10/blogdown&#34;&gt;RStudio community&lt;/a&gt; is a friendly place to ask any questions about &lt;strong&gt;blogdown&lt;/strong&gt;. Be sure to use the &lt;code&gt;blogdown&lt;/code&gt; tag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/blogdown&#34;&gt;Stack Overflow&lt;/a&gt; is a great source of answers to common &lt;strong&gt;blogdown&lt;/strong&gt; questions. Use the tags &lt;a href=&#34;https://stackoverflow.com/questions/tagged/blogdown+r&#34;&gt;&lt;code&gt;[r][blogdown]&lt;/code&gt;&lt;/a&gt; if you ask a question.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the blogdown project is released with a &lt;a href=&#34;https://pkgs.rstudio.com/blogdown/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CheyneyComputerScience/CREMA-D</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/CheyneyComputerScience/CREMA-D</id>
    <link href="https://github.com/CheyneyComputerScience/CREMA-D" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Crowd Sourced Emotional Multimodal Actors Dataset (CREMA-D)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;CREMA-D (Crowd-sourced Emotional Multimodal Actors Dataset)&lt;/h2&gt; &#xA;&lt;h4&gt;Summary&lt;/h4&gt; &#xA;&lt;p&gt;CREMA-D is a data set of 7,442 original clips from 91 actors. These clips were from 48 male and 43 female actors between the ages of 20 and 74 coming from a variety of races and ethnicities (African America, Asian, Caucasian, Hispanic, and Unspecified).&lt;/p&gt; &#xA;&lt;p&gt;Actors spoke from a selection of 12 sentences. The sentences were presented using one of six different emotions (Anger, Disgust, Fear, Happy, Neutral and Sad) and four different emotion levels (Low, Medium, High and Unspecified).&lt;/p&gt; &#xA;&lt;p&gt;Participants rated the emotion and emotion levels based on the combined audiovisual presentation, the video alone, and the audio alone. Due to the large number of ratings needed, this effort was crowd-sourced and a total of 2443 participants each rated 90 unique clips, 30 audio, 30 visual, and 30 audio-visual. 95% of the clips have more than 7 ratings.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;description&lt;/em&gt; below specifies the data made availabe in this repository.&lt;/p&gt; &#xA;&lt;p&gt;For a more complete description of how CREMA-D was created use &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4313618/&#34;&gt;this link&lt;/a&gt; or the link below to the paper.&lt;/p&gt; &#xA;&lt;h4&gt;Access&lt;/h4&gt; &#xA;&lt;p&gt;If you access the GitHub repository, please fill out &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSdvOR994_Hsx7OkBU3oCzluXcmxw2P1nr-zBxcPgVBNLdD9Eg/viewform?usp=sf_link&#34;&gt;this form&lt;/a&gt;. That way we can keep a record of the community of CREMA-D users.&lt;/p&gt; &#xA;&lt;h4&gt;Contact/Questions&lt;/h4&gt; &#xA;&lt;p&gt;If you have questions about this data set, please submit a new issue to the repository or contact &lt;a href=&#34;mailto:dcooper@wcupa.edu&#34;&gt;dcooper@wcupa.edu&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Storage requirements&lt;/h4&gt; &#xA;&lt;p&gt;Note: This repository uses Git Large File Storage, &lt;a href=&#34;https://git-lfs.github.com&#34;&gt;git-lfs&lt;/a&gt;. You will need to install it on top of your git installation in order to get the video and audio files. If you just download the zip file (~24MB zipped, ~163MB unzipped) then all of the video and audio files will just be links to the git-lfs file. For more information &lt;a href=&#34;https://git-lfs.github.com&#34;&gt;go here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;zip download:&lt;/strong&gt; Downloading the repository as a zip will get you all of the R scripts and csv files as well as stubs for all of the audio and video files. The zipped size is ~24MB, and the unzipped size is ~163MB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;git clone:&lt;/strong&gt; ~7.55GB is required to clone the whole repository. In addition to the R scripts and csv files, there is audio and video from 7442 recordings as flash video, mp3, and wav files as described below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;This Directory holds files used in the paper:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4313618/&#34;&gt;Cao H, Cooper DG, Keutmann MK, Gur RC, Nenkova A, Verma R. CREMA-D: Crowd-sourced Emotional Multimodal Actors Dataset. IEEE transactions on affective computing. 2014;5(4):377-390. doi:10.1109/TAFFC.2014.2336244.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;The collection of the videos is described in this paper:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/24719265&#34;&gt;Keutmann, M. K., Moore, S. L., Savitt, A., &amp;amp; Gur, R. C. (2015). Generating an item pool for translational social cognition research: methodology and initial validation. Behavior research methods, 47(1), 228-234.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;License:&lt;/h4&gt; &#xA;&lt;p&gt;This Crowd-sourced Emotional Mutimodal Actors Dataset (CREMA-D) is made available under the Open Database License: &lt;a href=&#34;http://opendatacommons.org/licenses/odbl/1.0/&#34;&gt;http://opendatacommons.org/licenses/odbl/1.0/&lt;/a&gt;. Any rights in individual contents of the database are licensed under the Database Contents License: &lt;a href=&#34;http://opendatacommons.org/licenses/dbcl/1.0/&#34;&gt;http://opendatacommons.org/licenses/dbcl/1.0/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Description&lt;/h4&gt; &#xA;&lt;h5&gt;Text Data Files:&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;SentenceFilenames.csv - list of movie files used in study&lt;/li&gt; &#xA; &lt;li&gt;finishedEmoResponses.csv - the first emotional response with timing.&lt;/li&gt; &#xA; &lt;li&gt;finishedResponses.csv - the final emotional Responses with emotion levels with repeated and practice responses removed, used to tabulate the votes&lt;/li&gt; &#xA; &lt;li&gt;finisedResponsesWithRepeatWithPractice.csv - the final emotional responses with emotion levels with repeated and practice responses in tact. Used to observe repeated responses and practice responses.&lt;/li&gt; &#xA; &lt;li&gt;processedResults/tabulatedVotes.csv - the tabulated votes for each movie file.&lt;/li&gt; &#xA; &lt;li&gt;VideoDemographics.csv - a mapping of ActorID (the first 4 digits of each video file) to Age, Sex, Race, and Ethicity.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;R Scripts&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;processFinishedResponses.R - converts the finisedResponses.csv to the tabulated&lt;/li&gt; &#xA; &lt;li&gt;readTabulatedVotes.R - reads processedResults/tabulatedVotes.csv&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Finished Responses Columns &lt;br&gt;(finishedResponses.csv and&lt;br&gt; finishedResponsesWithRepeatWithPractice.csv)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;localid&#34; - a participant identifier&lt;/li&gt; &#xA; &lt;li&gt;&#34;pos&#34; - the original log file order for the participant&lt;/li&gt; &#xA; &lt;li&gt;&#34;ans&#34; - the emotion character with level separated by an underscore&lt;/li&gt; &#xA; &lt;li&gt;&#34;ttr&#34; - the response time in milliseconds&lt;/li&gt; &#xA; &lt;li&gt;&#34;queryType&#34; - a numeric value specifying the type of stimulus: 1. - voice only, 2. face only, 3. audio-visual&lt;/li&gt; &#xA; &lt;li&gt;&#34;numTries&#34; - number of extra emotion clicks.&lt;/li&gt; &#xA; &lt;li&gt;&#34;clipNum&#34; - the file order of the clip from SentenceFilenames.csv&lt;/li&gt; &#xA; &lt;li&gt;&#34;questNum&#34; - the order of questions for the query type&lt;/li&gt; &#xA; &lt;li&gt;&#34;subType&#34; - the type of response in the logs, all values are 4 for the final emotion response&lt;/li&gt; &#xA; &lt;li&gt;&#34;clipName&#34; - the name of the video file&lt;/li&gt; &#xA; &lt;li&gt;&#34;sessionNums&#34; - the distinct number for the session&lt;/li&gt; &#xA; &lt;li&gt;&#34;respEmo&#34; - the emotion response&lt;/li&gt; &#xA; &lt;li&gt;&#34;respLevel&#34; - the emotion level response&lt;/li&gt; &#xA; &lt;li&gt;&#34;dispEmo&#34; - the displayed emotion&lt;/li&gt; &#xA; &lt;li&gt;&#34;dispVal&#34; - the displayed value&lt;/li&gt; &#xA; &lt;li&gt;&#34;dispLevel&#34; - a numeric representation of the displayed value, 20 for low, 50 for med, 80 for hi.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Finished EmoResponses Columns &lt;br&gt; (finishedEmoResponses.csv)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;localid&#34; - a participant identifier&lt;/li&gt; &#xA; &lt;li&gt;&#34;sessionNums&#34; - the distinct number for the session&lt;/li&gt; &#xA; &lt;li&gt;&#34;queryType&#34; - a numeric value specifying the type of stimulus: 1. - voice only, 2. face only, 3. audio-visual&lt;/li&gt; &#xA; &lt;li&gt;&#34;questNum&#34; - the order of questions for the query type&lt;/li&gt; &#xA; &lt;li&gt;&#34;pos&#34; - the original log file order for the participant&lt;/li&gt; &#xA; &lt;li&gt;&#34;ttr&#34; - the response time in milliseconds&lt;/li&gt; &#xA; &lt;li&gt;&#34;numTries&#34; - number of extra emotion clicks.&lt;/li&gt; &#xA; &lt;li&gt;&#34;clipNum&#34; - the file order of the clip from SentenceFilenames.csv&lt;/li&gt; &#xA; &lt;li&gt;&#34;clipName&#34; - the name of the video file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Summary Table Columns &lt;br&gt; processedResults/summaryTable.csv&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;fileName&#34; - name of the movie file rated&lt;/li&gt; &#xA; &lt;li&gt;&#34;VoiceVote&#34; - the emotion (or emotions separated by a colon) with the majority vote for Voice ratings. (A, D, F, H, N, or S)&lt;/li&gt; &#xA; &lt;li&gt;&#34;VoiceLevel&#34; - the numeric rating (or ratings separated by a colon) corresponding to the emotion(s) listed in &#34;VoiceVote&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;FaceVote&#34; - the emotion (or emotions separated by a colon) with the majority vote for Face ratings. (A, D, F, H, N, or S)&lt;/li&gt; &#xA; &lt;li&gt;&#34;FaceLevel&#34; - the numeric rating (or ratings separated by a colon) corresponding to the emotion(s) listed in &#34;FaceVote&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;MultiModalVote&#34; - the emotion (or emotions separated by a colon) with the majority vote for MultiModal ratings. (A, D, F, H, N, or S)&lt;/li&gt; &#xA; &lt;li&gt;&#34;MultiModalLevel&#34; - the numeric rating (or ratings separated by a colon) corresponding to the emotion(s) listed in &#34;MultiModalVote&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Tabulated Votes Columns &lt;br&gt; processedResults/tabulatedVotes.csv&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;A&#34; - count of Anger Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;D&#34; - count of Disgust Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;F&#34; - count of Fear Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;H&#34; - count of Happy Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;N&#34; - count of Neutral Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;S&#34; - count of Sad Responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;fileName&#34; - name of the movie file rated&lt;/li&gt; &#xA; &lt;li&gt;&#34;numResponses&#34; - total number of responses&lt;/li&gt; &#xA; &lt;li&gt;&#34;agreement&#34; - proportion of agreement&lt;/li&gt; &#xA; &lt;li&gt;&#34;emoVote&#34; - the majority vote agreement&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanEmoResp&#34; - the mean of all emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanAngerResp&#34; - the mean of the anger levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanDisgustResp&#34; - the mean of the disgust levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanFearResp&#34; - the mean of the fear levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanHappyResp&#34; - the mean of the happy levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanNeutralResp&#34; - the mean of the neutral levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanSadResp&#34; - the mean of the sad levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;medianEmoResp&#34; - the median of all emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanEmoRespNorm&#34; - the normalized mean of all emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanAngerRespNorm&#34; - the normalized mean of anger emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanDisgustRespNorm&#34; - the normalized mean of disgust emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanFearRespNorm&#34; - the normalized mean of fear emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanHappyRespNorm&#34; - the normalized mean of happy emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanNeutralRespNorm&#34; - the normalized mean of neutral emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;meanSadRespNorm&#34; - the normalized mean of sad emotion levels&lt;/li&gt; &#xA; &lt;li&gt;&#34;medianEmoRespNorm&#34; - the normalized median of all emotion levels&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Video Demographics Columns &lt;br&gt; VideoDemographics.csv&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;ActorID&#34; - the first 4 digits of the video/audio file that identifies the actor in the video.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Age&#34; - the age in years of the actor at the time of the recording&lt;/li&gt; &#xA; &lt;li&gt;&#34;Sex&#34; - the binary sex that the actor identified&lt;/li&gt; &#xA; &lt;li&gt;&#34;Race&#34; - African American, Asian, Caucasian, or Unspecified&lt;/li&gt; &#xA; &lt;li&gt;&#34;Ethnicity&#34; - Hispanic or Not Hispanic&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Filename labeling conventions&lt;/h5&gt; &#xA;&lt;p&gt;The Actor id is a 4 digit number at the start of the file. Each subsequent identifier is separated by an underscore (_).&lt;/p&gt; &#xA;&lt;p&gt;Actors spoke from a selection of 12 sentences (in parentheses is the three letter acronym used in the second part of the filename):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It&#39;s eleven o&#39;clock (IEO).&lt;/li&gt; &#xA; &lt;li&gt;That is exactly what happened (TIE).&lt;/li&gt; &#xA; &lt;li&gt;I&#39;m on my way to the meeting (IOM).&lt;/li&gt; &#xA; &lt;li&gt;I wonder what this is about (IWW).&lt;/li&gt; &#xA; &lt;li&gt;The airplane is almost full (TAI).&lt;/li&gt; &#xA; &lt;li&gt;Maybe tomorrow it will be cold (MTI).&lt;/li&gt; &#xA; &lt;li&gt;I would like a new alarm clock (IWL)&lt;/li&gt; &#xA; &lt;li&gt;I think I have a doctor&#39;s appointment (ITH).&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t forget a jacket (DFA).&lt;/li&gt; &#xA; &lt;li&gt;I think I&#39;ve seen this before (ITS).&lt;/li&gt; &#xA; &lt;li&gt;The surface is slick (TSI).&lt;/li&gt; &#xA; &lt;li&gt;We&#39;ll stop in a couple of minutes (WSI).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The sentences were presented using different emotion (in parentheses is the three letter code used in the third part of the filename):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anger (ANG)&lt;/li&gt; &#xA; &lt;li&gt;Disgust (DIS)&lt;/li&gt; &#xA; &lt;li&gt;Fear (FEA)&lt;/li&gt; &#xA; &lt;li&gt;Happy/Joy (HAP)&lt;/li&gt; &#xA; &lt;li&gt;Neutral (NEU)&lt;/li&gt; &#xA; &lt;li&gt;Sad (SAD)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and emotion level (in parentheses is the two letter code used in the fourth part of the filename):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Low (LO)&lt;/li&gt; &#xA; &lt;li&gt;Medium (MD)&lt;/li&gt; &#xA; &lt;li&gt;High (HI)&lt;/li&gt; &#xA; &lt;li&gt;Unspecified (XX)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The suffix of the filename is based on the type of file, flv for flash video used for presentation of both the video only, and the audio-visual clips. mp3 is used for the audio files used for the audio-only presentation of the clips. wav is used for files used for computational audio processing.&lt;/p&gt; &#xA;&lt;h5&gt;Video Files&lt;/h5&gt; &#xA;&lt;p&gt;Flash Video Files used for presentation to the Raters are stored in the VideoFlash directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The following files were missing audio until Dec. 16, 2020. Updated versions were made using the &lt;strong&gt;Processed Audio&lt;/strong&gt; WAV files. Thanks to Maximo Cobos, Ph.D. of Universitat de València for letting us know about this discrepency and combining the audio back with the video for these files:&lt;/p&gt; &#xA;&lt;p&gt;1005_IWW_DIS_XX.flv&lt;br&gt; 1007_IWL_HAP_XX.flv&lt;br&gt; 1037_DFA_ANG_XX.flv&lt;br&gt; 1037_WSI_DIS_XX.flv&lt;br&gt; 1037_WSI_FEA_XX.flv&lt;br&gt; 1037_WSI_SAD_XX.flv&lt;br&gt; 1039_IWL_SAD_XX.flv&lt;br&gt; 1039_WSI_SAD_XX.flv&lt;br&gt; 1045_ITS_HAP_XX.flv&lt;br&gt; 1045_WSI_DIS_XX.flv&lt;br&gt; 1046_TIE_HAP_XX.flv&lt;br&gt; 1058_IEO_SAD_HI.flv&lt;br&gt; 1061_TIE_ANG_XX.flv&lt;br&gt; 1063_IEO_DIS_HI.flv&lt;br&gt; 1067_IEO_FEA_LO.flv&lt;br&gt; 1068_IEO_SAD_MD.flv&lt;br&gt; 1070_IWL_SAD_XX.flv&lt;br&gt; 1071_WSI_ANG_XX.flv&lt;br&gt; 1072_WSI_ANG_XX.flv&lt;br&gt; 1073_MTI_SAD_XX.flv&lt;br&gt; 1075_IWW_DIS_XX.flv&lt;br&gt; 1075_WSI_DIS_XX.flv&lt;br&gt; 1076_ITH_HAP_XX.flv&lt;br&gt; 1076_ITH_NEU_XX.flv&lt;br&gt; 1076_TAI_NEU_XX.flv&lt;br&gt; 1079_IWL_ANG_XX.flv&lt;br&gt; 1079_TAI_DIS_XX.flv&lt;br&gt; 1091_IWW_FEA_XX.flv&lt;/p&gt; &#xA;&lt;h5&gt;Audio Files&lt;/h5&gt; &#xA;&lt;p&gt;MP3 Audio files used for presentation to the Raters are stored in the AudioMP3 directory.&lt;/p&gt; &#xA;&lt;h5&gt;Processed Audio&lt;/h5&gt; &#xA;&lt;p&gt;WAV Audio files converted from the original video into a format appropriate for computational audio processing are stored in the AudioWAV directory.&lt;/p&gt; &#xA;&lt;h5&gt;Funding Sources&lt;/h5&gt; &#xA;&lt;p&gt;All data collection and method development was supported by the following funding sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NIH R01 MH073174 (Computational quantification of emotion in faces and voice for neuropsychiatry) from National Institute of Mental Health (NIMH)&lt;/li&gt; &#xA; &lt;li&gt;NIH R34 MH105248 (Developing CBT-informed social enactment training curricula for CHR youths) from NIMH&lt;/li&gt; &#xA; &lt;li&gt;NIH R01 MH107235 (Multimodal brain maturation indices modulating psychopathology and neurocognition) from NIMH&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/chromote</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/rstudio/chromote</id>
    <link href="https://github.com/rstudio/chromote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chrome Remote Interface for R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chromote: Headless Chrome Remote Interface&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/chromote/actions&#34;&gt;&lt;img src=&#34;https://github.com/rstudio/chromote/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=chromote&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/chromote&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Chromote is an R implementation of the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt;. It works with Chrome, Chromium, Opera, Vivaldi, and other browsers based on &lt;a href=&#34;https://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt;. By default it uses Google Chrome (which must already be installed on the system). To use a different browser, see &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#specifying-which-browser-to-use&#34;&gt;Specifying which browser to use&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Chromote is not the only R package that implements the Chrome DevTools Protocol. Here are some others:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RLesur/crrri&#34;&gt;crrri&lt;/a&gt; by Romain Lesur and Christophe Dervieux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/decapitated/&#34;&gt;decapitated&lt;/a&gt; by Bob Rudis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/milesmcbain/chradle&#34;&gt;chradle&lt;/a&gt; by Miles McBain&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The interface to Chromote is similar to &lt;a href=&#34;https://github.com/cyrus-and/chrome-remote-interface&#34;&gt;chrome-remote-interface&lt;/a&gt; for node.js.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# CRAN&#xA;install.packages(&#34;chromote&#34;)&#xA;&#xA;# Development&#xA;remotes::install_github(&#34;rstudio/chromote&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;This will start a headless browser and open an interactive viewer for it in a normal browser, so that you can see what the headless browser is doing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;&#xA;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# In a web browser, open a viewer for the headless browser. Works best with&#xA;# Chromium-based browsers.&#xA;b$view()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The browser can be given &lt;em&gt;commands&lt;/em&gt;, as specified by the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt;. For example, &lt;code&gt;$Browser$getVersion()&lt;/code&gt; (which corresponds to the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Browser/#method-getVersion&#34;&gt;Browser.getVersion&lt;/a&gt; in the API docs) will query the browser for version information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Browser$getVersion()&#xA;#&amp;gt; $protocolVersion&#xA;#&amp;gt; [1] &#34;1.3&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $product&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $revision&#xA;#&amp;gt; [1] &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $userAgent&#xA;#&amp;gt; [1] &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $jsVersion&#xA;#&amp;gt; [1] &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have the viewer open and run the following, you’ll see the web page load in the viewer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the official Chrome DevTools Protocol (CDP) documentation, this is the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-navigate&#34;&gt;&lt;code&gt;Page.navigate&lt;/code&gt;&lt;/a&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;In addition to full support of the CDP, &lt;code&gt;ChromoteSession&lt;/code&gt; objects also some convenience methods, like &lt;code&gt;$screenshot()&lt;/code&gt;. (See the Examples section below for more information about screenshots.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Saves to screenshot.png&#xA;b$screenshot()&#xA;&#xA;# Takes a screenshot of elements picked out by CSS selector&#xA;b$screenshot(&#34;sidebar.png&#34;, selector = &#34;.sidebar&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/man/figures/sidebar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All members of &lt;code&gt;Chromote&lt;/code&gt; and &lt;code&gt;ChromoteSession&lt;/code&gt; objects which start with a capital letter (like &lt;code&gt;b$Page&lt;/code&gt;, &lt;code&gt;b$DOM&lt;/code&gt;, and &lt;code&gt;b$Browser&lt;/code&gt;) correspond to domains from the Chrome DevTools Protocol, and are documented in the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;official CDP site&lt;/a&gt;. All members which start with a lower-case letter (like &lt;code&gt;b$screenshot&lt;/code&gt; and &lt;code&gt;b$close&lt;/code&gt;) are not part of the Chrome DevTools Protocol, and are specific to &lt;code&gt;Chromote&lt;/code&gt; and &lt;code&gt;ChromoteSession&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of how to use Chromote to find the position of a DOM element using &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/DOM/#method-getBoxModel&#34;&gt;DOM.getBoxModel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- b$DOM$getDocument()&#xA;x &amp;lt;- b$DOM$querySelector(x$root$nodeId, &#34;.sidebar&#34;)&#xA;x &amp;lt;- b$DOM$getBoxModel(x$nodeId)&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can do the same thing by chaining commands together with a magrittr pipe:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument() %&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;) } %&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId) } %&amp;gt;%&#xA;  str()&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating new tabs and managing the process&lt;/h3&gt; &#xA;&lt;p&gt;To create a new tab/window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1 &amp;lt;- b$new_session()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it’s created, you can perform operations with the new tab without affecting the first one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$view()&#xA;b1$Page$navigate(&#34;https://github.com/rstudio/chromote&#34;)&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;714439EBDD663E597658503C86F77B0B&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;F39339CBA7D1ACB83618FEF40C3C7467&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close a browser tab/window, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is different from shutting down the browser process. If you call &lt;code&gt;b$close()&lt;/code&gt;, the browser process will still be running, even if all tabs have been closed. If all tabs have been closed, you can still create a new tab by calling &lt;code&gt;b1$new_session()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To shut down the process, call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1$parent$close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;b1$parent&lt;/code&gt; is a &lt;code&gt;Chromote&lt;/code&gt; object (as opposed to &lt;code&gt;ChromoteSession&lt;/code&gt;), which represents the browser as a whole. This is explained in &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#the-chromote-object-model&#34;&gt;The Chromote object model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Commands and Events&lt;/h3&gt; &#xA;&lt;p&gt;The Chrome DevTools Protocol has two types of methods: &lt;em&gt;commands&lt;/em&gt; and &lt;em&gt;events&lt;/em&gt;. The methods used in the previous examples are commands. That is, they tell the browser to do something; the browser does it, and then sends back some data.&lt;/p&gt; &#xA;&lt;p&gt;Events are quite different from commands. When, for example, you run &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt;, it does not send a message to the browser. Rather, this method tells the R process to wait until it receives a &lt;code&gt;Page.loadEventFired&lt;/code&gt; message from the browser.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of how that event can be used. Note that these two lines of code must be run together, without any delay at all (this can be enforced by wrapping both lines of code in &lt;code&gt;{ .... }&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Send a command to navigate to a page&#xA;b$Page$navigate(&#34;https://www.r-project.org&#34;)&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;0ADE3CFBAF764B0308ADE1ACCC33358B&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;112AF4AC0C13FF4A95BED8173C3F4C7F&#34;&#xA;&#xA;# Wait for the Page.loadEventFired event&#xA;b$Page$loadEventFired()&#xA;#&amp;gt; $timestamp&#xA;#&amp;gt; [1] 680.7603&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running these two lines, the R process will be blocked. While it’s blocked, the browser will load the page, and then send a message to the R process saying that the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event has occurred. The message looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;method&#34;:&#34;Page.loadEventFired&#34;,&#34;params&#34;:{&#34;timestamp&#34;:699232.345338}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the R process receives this message, the function returns the value, which looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$timestamp&#xA;[1] 699232.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; Chromote insulates the user from some of the details of how the CDP implements event notifications. Event notifications are not sent from the browser to the R process by default; you must first send a command to enable event notifications for a domain. For example &lt;code&gt;Page.enable&lt;/code&gt; enables event notifications for the &lt;code&gt;Page&lt;/code&gt; domain – the browser will send messages for &lt;em&gt;all&lt;/em&gt; &lt;code&gt;Page&lt;/code&gt; events. (See the Events section in &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/tot/Page/&#34;&gt;this page&lt;/a&gt;). These notifications will continue to be sent until the browser receives a &lt;code&gt;Page.disable&lt;/code&gt; command.&lt;/p&gt; &#xA; &lt;p&gt;By default, Chromote hides this implementation detail. When you call &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt;, Chromote sends a &lt;code&gt;Page.enable&lt;/code&gt; command automatically, and then waits until it receives the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event notification. Then it sends a &lt;code&gt;Page.disable&lt;/code&gt; command.&lt;/p&gt; &#xA; &lt;p&gt;Note that in asynchronous mode, the behavior is slightly more sophisticated: it maintains a counter of how many outstanding events it is waiting for in a given domain. When that count goes from 0 to 1, it sends the &lt;code&gt;X.enable&lt;/code&gt; command; when the count goes from 1 to 0, it sends the &lt;code&gt;X.disable&lt;/code&gt; command. For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#async-events&#34;&gt;Async events&lt;/a&gt; section.&lt;/p&gt; &#xA; &lt;p&gt;If you do not want automatic event enabling and disabling, then when creating the ChromoteSession object, use &lt;code&gt;ChromoteSession$new(auto_events = FALSE)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;The Chromote object model&lt;/h3&gt; &#xA;&lt;p&gt;There are two R6 classes that are used to represent the Chrome browser. One is &lt;code&gt;Chromote&lt;/code&gt;, and the other is &lt;code&gt;ChromoteSession&lt;/code&gt;. A &lt;code&gt;Chromote&lt;/code&gt; object represents the browser as a whole, and it can have multiple &lt;em&gt;targets&lt;/em&gt;, which each represent a browser tab. In the Chrome DevTools Protocol, each target can have one or more debugging &lt;em&gt;sessions&lt;/em&gt; to control it. A &lt;code&gt;ChromoteSession&lt;/code&gt; object represents a single &lt;em&gt;session&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When a &lt;code&gt;ChromoteSession&lt;/code&gt; object is instantiated, a target is created, then a session is attached to that target, and the &lt;code&gt;ChromoteSession&lt;/code&gt; object represents the session. (It is possible, though not very useful, to have multiple &lt;code&gt;ChromoteSession&lt;/code&gt; objects connected to the same target, each with a different session.)&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;Chromote&lt;/code&gt; object can have any number of &lt;code&gt;ChromoteSession&lt;/code&gt; objects as children. It is not necessary to create a &lt;code&gt;Chromote&lt;/code&gt; object manually. You can simply call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and it will automatically create a &lt;code&gt;Chromote&lt;/code&gt; object if one has not already been created. The Chromote package will then designate that &lt;code&gt;Chromote&lt;/code&gt; object as the &lt;em&gt;default&lt;/em&gt; Chromote object for the package, so that any future calls to &lt;code&gt;ChromoteSession$new()&lt;/code&gt; will automatically use the same &lt;code&gt;Chromote&lt;/code&gt;. This is so that it doesn’t start a new browser for every &lt;code&gt;ChromoteSession&lt;/code&gt; object that is created.&lt;/p&gt; &#xA;&lt;p&gt;In the Chrome DevTools Protocol, most commands can be sent to individual sessions using the &lt;code&gt;ChromoteSession&lt;/code&gt; object, but there are some commands which can only be sent to the overall browser, using the &lt;code&gt;Chromote&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;To access the parent &lt;code&gt;Chromote&lt;/code&gt; object from a &lt;code&gt;ChromoteSession&lt;/code&gt;, you can simply use &lt;code&gt;$parent&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;m &amp;lt;- b$parent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With a &lt;code&gt;Chromote&lt;/code&gt; object, you can get a list containing all the &lt;code&gt;ChromoteSession&lt;/code&gt;s, with &lt;code&gt;$get_sessions()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m$get_sessions()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, subsequent calls to &lt;code&gt;ChromoteSession$new()&lt;/code&gt; will use the existing &lt;code&gt;Chromote&lt;/code&gt; object. However, if you want to start a new browser process, you can manually create a &lt;code&gt;Chromote&lt;/code&gt; object, then spawn a session from it; or you can pass the new &lt;code&gt;Chromote&lt;/code&gt; object to &lt;code&gt;ChromoteSession$new()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cm &amp;lt;- Chromote$new()&#xA;b1 &amp;lt;- cm$new_session()&#xA;&#xA;# Or:&#xA;b1 &amp;lt;- ChromoteSession$new(parent = cm)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if you use either of these methods, the new &lt;code&gt;Chromote&lt;/code&gt; object will &lt;em&gt;not&lt;/em&gt; be set as the default that is used by future calls to &lt;code&gt;ChromoteSesssion$new()&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#specifying-which-browser-to-use&#34;&gt;Specifying which browser to use&lt;/a&gt; for information on setting the default &lt;code&gt;Chromote&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;There are also the following classes which represent the browser at a lower level:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Browser&lt;/code&gt;: This represents an instance of a browser that supports the Chrome DevTools Protocol. It contains information about how to communicate with the Chrome browser. A &lt;code&gt;Chromote&lt;/code&gt; object contains one of these.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Chrome&lt;/code&gt;: This is a subclass of &lt;code&gt;Browser&lt;/code&gt; that represents a local browser. It extends the &lt;code&gt;Browser&lt;/code&gt; class with a &lt;code&gt;processx::process&lt;/code&gt; object, which represents the browser’s system process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ChromeRemote&lt;/code&gt;: This is a subclass of &lt;code&gt;Browser&lt;/code&gt; that represents a browser running on a remote system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;b$debug_messages(TRUE)&lt;/code&gt; will enable the printing of all the JSON messages sent between R and Chrome. This can be very helpful for understanding how the Chrome DevTools Protocol works.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;b$parent$debug_messages(TRUE)&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;#&amp;gt; SEND {&#34;method&#34;:&#34;Page.navigate&#34;,&#34;params&#34;:{&#34;url&#34;:&#34;https://www.r-project.org/&#34;},&#34;id&#34;:53,&#34;sessionId&#34;:&#34;12CB6B044A379DA0BDCFBBA55318247C&#34;}&#xA;#&amp;gt; $frameId&#xA;#&amp;gt; [1] &#34;BAAC175C67E55886207BADE1776E7B1F&#34;&#xA;#&amp;gt;&#xA;#&amp;gt; $loaderId&#xA;#&amp;gt; [1] &#34;66DED3DF9403DA4A307444765FDE828E&#34;&#xA;&#xA;# Disable debug messages&#xA;b$parent$debug_messages(FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Synchronous vs.&amp;nbsp;asynchronous usage&lt;/h3&gt; &#xA;&lt;p&gt;By default, when you call methods from a &lt;code&gt;Chromote&lt;/code&gt; or &lt;code&gt;ChromoteSession&lt;/code&gt; object, it operates in &lt;em&gt;synchronous&lt;/em&gt; mode. For example, when you call a command function (like &lt;code&gt;b$Page$navigate()&lt;/code&gt;), a command message is sent to the headless browser, the headless browser executes that command, and it sends a response message back. When the R process receives the response, it converts it from JSON to an R object and the function returns that value. During this time, the R process is blocked; no other R code can execute.&lt;/p&gt; &#xA;&lt;p&gt;The methods in Chromote/ChromoteSession objects can also be called in &lt;em&gt;asynchronous&lt;/em&gt; mode. In async mode, a command function fires off a message to the browser, and then the R process continues running other code; when the response comes back at some time in the future, the R process calls another function and passes the response value to it.&lt;/p&gt; &#xA;&lt;p&gt;There are two different ways of using async with Chromote. The first is with &lt;a href=&#34;https://rstudio.github.io/promises/&#34;&gt;promises&lt;/a&gt; (note that these are not the regular R-language promises; these are similar to JavaScript promises for async programming.) The second way is with callbacks: you call methods with a &lt;code&gt;callback_&lt;/code&gt; argument. Although callbacks are initially easier to use than promises, once you start writing more complex code, managing callbacks becomes very difficult, especially when error handling is involved. For this reason, this document will focus mostly on promises instead of callback-style programming.&lt;/p&gt; &#xA;&lt;p&gt;When Chromote methods are called in synchronous mode, under the hood, they are implemented with asynchronous functions, and then waiting for the asynchronous functions to resolve.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note about the event loop&lt;/strong&gt;: When methods are called asynchronously, the R process will run callbacks and promises using an event loop provided by the &lt;a href=&#34;https://github.com/r-lib/later&#34;&gt;later&lt;/a&gt; package. This event loop is very similar to the one used in JavaScript, which is explained in depth by &lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&#34;&gt;this article&lt;/a&gt;. One important difference between JavaScript’s event loop and the one provided by &lt;strong&gt;later&lt;/strong&gt;’s is that in JavaScript, the event loop only runs when the call stack is empty (essentially, when the JS runtime is idle); with &lt;strong&gt;later&lt;/strong&gt; the event loop similarly runs when the call stack is empty (when the R console is idle), but it can also be run at any point by calling &lt;code&gt;later::run_now()&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;There is another important difference between the JS event loop and the one used by Chromote: Chromote uses &lt;em&gt;private event loops&lt;/em&gt; provided by &lt;a href=&#34;https://github.com/r-lib/later&#34;&gt;later&lt;/a&gt;. Running the private event loop with &lt;code&gt;run_now()&lt;/code&gt; will not interfere with the global event loop. This is crucial for being able to run asynchronous code in a way that appears synchronous.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Why async?&lt;/h4&gt; &#xA;&lt;p&gt;The synchronous API is easier to use than the asynchronous one. So why would you want to use the async API? Here are some reasons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The async API allows you to send commands to the browser that may take some time for the browser to complete, and they will not block the R process from doing other work while the browser executes the command.&lt;/li&gt; &#xA; &lt;li&gt;The async API lets you send commands to multiple browser “tabs” and let them work in parallel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the other hand, async programming can make it difficult to write code that proceeds in a straightforward, linear manner. Async programming may be difficult to use in, say, an analysis script.&lt;/p&gt; &#xA;&lt;p&gt;When using Chromote interactively at the R console, it’s usually best to just call methods synchronously. This fits well with a iterative, interactive data analysis workflow.&lt;/p&gt; &#xA;&lt;p&gt;When you are &lt;em&gt;programming&lt;/em&gt; with Chromote instead of using it interactively, it is in many cases better to call the methods asynchronously, because it allows for better performance. In a later section, we’ll see how to write asynchronous code with Chromote that can be run either synchronously or asynchronously. This provides the best of both worlds.&lt;/p&gt; &#xA;&lt;h4&gt;Async commands&lt;/h4&gt; &#xA;&lt;p&gt;When a method is called in synchronous mode, it blocks until the browser sends back a response, and then it returns the value, converted from JSON to an R object. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Synchronous&#xA;str(b$Browser$getVersion())&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In async mode, there are two ways to use the value that the browser sends to the R process. One is to use the &lt;code&gt;callback_&lt;/code&gt; argument with &lt;code&gt;wait_=FALSE&lt;/code&gt;. The &lt;code&gt;wait_=FALSE&lt;/code&gt; tells it to run the command in async mode; instead of returning the value from the browser, it returns a promise. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Async with callback&#xA;b$Browser$getVersion(wait_ = FALSE, callback_ = str)&#xA;#&amp;gt; &amp;lt;Promise [pending]&amp;gt;&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the function returned &lt;code&gt;&amp;lt;Promise [pending]&amp;gt;&lt;/code&gt;, and then it printed out the data. We’ll come back to the promise part.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; When you pass a function as &lt;code&gt;callback_&lt;/code&gt;, that function is used as the first step in the promise chain that is returned.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you run the command in a code block (or a function), the entire code block will finish executing before the callback can be executed. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  b$Browser$getVersion(wait_ = FALSE, callback_ = str)&#xA;  1+1&#xA;}&#xA;#&amp;gt; [1] 2&#xA;#&amp;gt; List of 5&#xA;#&amp;gt;  $ protocolVersion: chr &#34;1.3&#34;&#xA;#&amp;gt;  $ product        : chr &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;#&amp;gt;  $ revision       : chr &#34;@273bf7ac8c909cde36982d27f66f3c70846a3718&#34;&#xA;#&amp;gt;  $ userAgent      : chr &#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/98.0.4758.102 Safari/537.36&#34;&#xA;#&amp;gt;  $ jsVersion      : chr &#34;9.8.177.11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the code above, it executes the &lt;code&gt;1+1&lt;/code&gt; and returns the value before the &lt;code&gt;str&lt;/code&gt; callback can be executed on the message from the browser.&lt;/p&gt; &#xA;&lt;p&gt;If you want to store the value from the browser, you can write a callback that stores the value like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# This will extract the product field&#xA;product &amp;lt;- NULL&#xA;b$Browser$getVersion(wait_ = FALSE, callback_ = function(msg) {&#xA;  product &amp;lt;&amp;lt;- msg$product&#xA;})&#xA;#&amp;gt; &amp;lt;Promise [pending]&amp;gt;&#xA;# Wait for a moment, then run:&#xA;product&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But to get the value, you need to wait for the callback to execute before you can use the value. Waiting for a value is simple when running R interactively – you can just add a &lt;code&gt;message(&#34;message arrived&#34;)&lt;/code&gt; call in the callback and wait for it before running the next line of code – but waiting for the value is not easy to do using ordinary straight-line coding. Fortunately, Chromote has a way to wait for async operations, which we’ll see later.&lt;/p&gt; &#xA;&lt;p&gt;The other way of using the value is to use &lt;em&gt;promises&lt;/em&gt;. If &lt;code&gt;wait_=FALSE&lt;/code&gt; and no &lt;code&gt;callback_&lt;/code&gt; is passed to the command, then it will simply return a promise. Promises have many advantages over plain old callbacks: they are easier to chain, and they provide better error-handling capabilities. You can &lt;em&gt;chain&lt;/em&gt; more steps to the promise: when the promise resolves – that is, when the message is received from the browser – it will run the next step in the promise chain.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example that uses promises to print out the version information. Note that the surrounding curly braces are there to indicate that this whole thing must be run as a block without any idle time in between the function calls – if you were to run the code in the R console line-by-line, the browser would send back the message and the promise would resolve before you called &lt;code&gt;p$then()&lt;/code&gt;, which is where you tell the promise what to do with the return value. (The curly braces aren’t strictly necessary – you could run the code inside the braces in a single paste operation and have the same effect.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  p &amp;lt;- b$Browser$getVersion(wait_ = FALSE)&#xA;  p$then(function(value) {&#xA;    print(value$product)&#xA;  })&#xA;}&#xA;# Wait for a moment, then prints:&#xA;#&amp;gt; [1] &#34;HeadlessChrome/98.0.4758.102&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are some progressively more concise ways of achieving the same thing. As you work with promises, you will see these various forms of promise chaining. For more information, see the &lt;a href=&#34;https://rstudio.github.io/promises/&#34;&gt;promises documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(promises)&#xA;&#xA;# Regular function pipe to then()&#xA;b$Browser$getVersion(wait_ = FALSE) %&amp;gt;% then(function(value) {&#xA;  print(value$product)&#xA;})&#xA;&#xA;# Promise-pipe to anonymous function, which must be wrapped in parens&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% (function(value) {&#xA;  print(value$product)&#xA;})&#xA;&#xA;# Promise-pipe to an expression (which gets converted to a function with the first argument `.`)&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% { print(.$product) }&#xA;&#xA;# Promise-pipe to a named function, with parentheses&#xA;print_product &amp;lt;- function(msg) print(msg$product)&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% print_product()&#xA;&#xA;# Promise-pipe to a named function, without parentheses&#xA;b$Browser$getVersion(wait_ = FALSE) %...&amp;gt;% print_product&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The earlier example where we found the dimensions of a DOM element using CSS selectors was done with the synchronous API and &lt;code&gt;%&amp;gt;%&lt;/code&gt; pipes. The same can be done in async mode by switching from the regular pipe to the promise-pipe, and calling all the methods with &lt;code&gt;wait_=FALSE&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) } %...&amp;gt;%&#xA;  str()&#xA;&#xA;&#xA;# Or, more verbosely:&#xA;b$DOM$getDocument(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$DOM$querySelector(value$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$getBoxModel(value$nodeId, wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    str(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each step in the promise chain uses the value from the previous step, via &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt;. Note that not all asynchronous code works in such a linear, straightforward way. Sometimes it is necessary to save data from intermediate steps in a broader-scoped variable, if it is to be used in a later step in the promise chain.&lt;/p&gt; &#xA;&lt;h4&gt;Turning asynchronous code into synchronous code&lt;/h4&gt; &#xA;&lt;p&gt;There may be times, especially when programming with Chromote, where you want to wait for a promise to resolve before continuing. To do this, you can use the Chromote or ChromoteSession’s &lt;code&gt;wait_for()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# A promise chain&#xA;p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) } %...&amp;gt;%&#xA;  str()&#xA;&#xA;b$wait_for(p)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This documentation will refer to this technique as &lt;em&gt;synchronizing&lt;/em&gt; asynchronous code. The way that &lt;code&gt;wait_for()&lt;/code&gt; works is that it runs the Chromote object’s private event loop until the promise has resolved. Because the event loop is &lt;em&gt;private&lt;/em&gt;, running it will not interfere with the global event loop, which, for example, may used by Shiny to serve a web application.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;$wait_for()&lt;/code&gt; method will return the value from the promise, so instead of putting the &lt;code&gt;str()&lt;/code&gt; in the chain, you call &lt;code&gt;str()&lt;/code&gt; on the value returned by &lt;code&gt;$wait_for()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;, wait_ = FALSE) } %...&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) }&#xA;&#xA;x &amp;lt;- b$wait_for(p)&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ model:List of 6&#xA;#&amp;gt;   ..$ content:List of 8&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 292&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 128&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ padding:List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ border :List of 8&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   .. ..$ : num 112&#xA;#&amp;gt;   .. ..$ : num 988&#xA;#&amp;gt;   ..$ margin :List of 8&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : int 28&#xA;#&amp;gt;   .. ..$ : num 308&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   .. ..$ : int 15&#xA;#&amp;gt;   .. ..$ : num 1030&#xA;#&amp;gt;   ..$ width  : int 195&#xA;#&amp;gt;   ..$ height : int 960&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some methods in Chromote and ChromoteSession objects which are written using asynchronous method calls, but conditionally use &lt;code&gt;wait_for()&lt;/code&gt; so that they can be called either synchronously or asynchronously. The &lt;code&gt;$screenshot()&lt;/code&gt; method works this way, for example. You can call &lt;code&gt;b$screenshot(wait_=TRUE)&lt;/code&gt; (which is the default) for synchronous behavior, or &lt;code&gt;b$screenshot(wait_=FALSE)&lt;/code&gt; for async behavior.&lt;/p&gt; &#xA;&lt;p&gt;If you want to write a function that can be called in either sync or async mode, you can use this basic structure: First, construct a promise chain by calling the CDP methods with &lt;code&gt;wait_=FALSE&lt;/code&gt;. Then, at the end, if the user used &lt;code&gt;wait_=TRUE&lt;/code&gt;, wait for the promise to resolve; otherwise, simply return the promise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;getBoxModel &amp;lt;- function(b, selector = &#34;html&#34;, wait_ = TRUE) {&#xA;  p &amp;lt;- b$DOM$getDocument(wait_ = FALSE) %...&amp;gt;%&#xA;    { b$DOM$querySelector(.$root$nodeId, selector, wait_ = FALSE) } %...&amp;gt;%&#xA;    { b$DOM$getBoxModel(.$nodeId, wait_ = FALSE) }&#xA;&#xA;  if (wait_) {&#xA;    b$wait_for(p)&#xA;  } else {&#xA;    p&#xA;  }&#xA;}&#xA;&#xA;# Synchronous call&#xA;str(getBoxModel(b, &#34;.sidebar&#34;))&#xA;&#xA;# Asynchronous call&#xA;getBoxModel(b, &#34;.sidebar&#34;, wait_ = FALSE) %...&amp;gt;%&#xA;  str()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But, you might be wondering, if we want a synchronous API, why not simply write the synchronous code by calling the individual methods synchronously, and using a normal pipe to connect them, as in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$DOM$getDocument() %&amp;gt;%&#xA;  { b$DOM$querySelector(.$root$nodeId, &#34;.sidebar&#34;) } %&amp;gt;%&#xA;  { b$DOM$getBoxModel(.$nodeId) } %&amp;gt;%&#xA;  str()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two reasons for this. The first is that this would require a duplication of all the code for the sync and async code paths. Another reason is that the internal async code can be written to send multiple independent command chains to the ChromoteSession (or multiple ChromoteSessions), and they will be executed concurrently. If there are multiple promise chains, you can do something like the following to wait for all of them to resolve:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Starting with promises p1, p2, and p3, create a promise that resolves only&#xA;# after they have all been resolved.&#xA;p &amp;lt;- promise_all(p1, p2, p3)&#xA;b$wait_for(p)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Async events&lt;/h2&gt; &#xA;&lt;p&gt;In addition to &lt;em&gt;commands&lt;/em&gt; The Chrome DevTools Protocol also has &lt;em&gt;events&lt;/em&gt;. These are messages that are sent from the browser to the R process when various browser events happen.&lt;/p&gt; &#xA;&lt;p&gt;As an example, it can be a bit tricky to find out when to take a screenshot. When you send the browser a command to navigate to a page, it sends a response immediately, but it may take several more seconds for it to actually finish loading that page. When it does, the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event will be fired.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# Navigate and wait for Page.loadEventFired.&#xA;# Note: these lines are put in a single code block to ensure that there is no&#xA;# idle time in between.&#xA;{&#xA;  b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;  str(b$Page$loadEventFired())&#xA;}&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the synchronous API, the call to &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt; will block until Chromote receives a &lt;code&gt;Page.loadEventFired&lt;/code&gt; message from the browser. However, with the async promise API, you would write it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE) %...&amp;gt;%&#xA;  { b$Page$loadEventFired(wait_ = FALSE) } %...&amp;gt;%&#xA;  { str(.) }&#xA;&#xA;# Or, more verbosely:&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Page$loadEventFired(wait_ = FALSE)&#xA;  })$&#xA;  then(function(value) {&#xA;    str(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There will be a short delay after running the code before the value is printed.&lt;/p&gt; &#xA;&lt;p&gt;If you want to schedule a chain of promises and then wait for them to resolve, you can once again use the &lt;code&gt;wait_for()&lt;/code&gt; method. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Page$loadEventFired(wait_ = FALSE)&#xA;  })&#xA;&#xA;# wait_for returns the last value in the chain, so we can call str() on it&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This particular example has a twist to it: After sending the &lt;code&gt;Page.navigate&lt;/code&gt; command, the R process doesn’t really need to wait for browser’s response before it starts waiting for the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event. So instead of chaining, you could just do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- promise(function(resolve, reject) {&#xA;  b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;  resolve(b$Page$loadEventFired(wait_ = FALSE))&#xA;})&#xA;&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Essentially, the &lt;code&gt;Page.navigate&lt;/code&gt; command gets sent off and we don’t need to wait for the browser’s reply. We can tell R to immediately start waiting for the &lt;code&gt;Page.loadEventFired&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;p&gt;We can simplify it by not wrapping both method calls in a promise. We can just fire off the navigation command, and then directly use the promise that’s returned by the event method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;p &amp;lt;- b$Page$loadEventFired(wait_ = FALSE)&#xA;str(b$wait_for(p))&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And we can make it yet simpler by firing off the navigation command and then calling &lt;code&gt;b$Page$loadEventFired()&lt;/code&gt; in synchronous mode (with the default &lt;code&gt;wait_=TRUE&lt;/code&gt;), which already calls &lt;code&gt;wait_for()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;x &amp;lt;- b$Page$loadEventFired()&#xA;str(x)&#xA;#&amp;gt; List of 1&#xA;#&amp;gt;  $ timestamp: num 683&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; The Chrome DevTools Protocol itself does not automatically enable event notifications. Normally, you would have to call the &lt;code&gt;Page.enable&lt;/code&gt; method to turn on event notifications for the Page domain. However, Chromote saves you from needing to do this step by keeping track of how many callbacks there are for each domain. When the number of event callbacks for a domain goes from 0 to 1, Chromote automatically calls &lt;code&gt;$enable()&lt;/code&gt; for that domain, and when it goes from 1 to 0, it it calls &lt;code&gt;$disable()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In addition to async events with promises, they can also be used with regular callbacks. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$Page$loadEventFired(callback_ = str)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells Chromote to call &lt;code&gt;str()&lt;/code&gt; (which prints to the console) on the message value every single time that a &lt;code&gt;Page.loadEventFired&lt;/code&gt; event message is received. It will continue doing this indefinitely. (Calling an event method this way also increments the event callback counter.)&lt;/p&gt; &#xA;&lt;p&gt;When an event method is called with a callback, the return value is a function which will cancel the callback, so that it will no longer fire. (The canceller function also decrements the event callback counter. If you lose the canceller function, there is no way to decrement the callback counter back to 0.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cancel_load_event_callback &amp;lt;- b$Page$loadEventFired(callback_ = str)&#xA;&#xA;# Each of these will cause the callback to fire.&#xA;n1 &amp;lt;- b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;n2 &amp;lt;- b$Page$navigate(&#34;https://cran.r-project.org/&#34;)&#xA;&#xA;cancel_load_event_callback()&#xA;&#xA;# No longer causes the callback to fire.&#xA;n3 &amp;lt;- b$Page$navigate(&#34;https://www.rstudio.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resource cleanup and garbage collection&lt;/h2&gt; &#xA;&lt;p&gt;When Chromote starts a Chrome process, it calls &lt;code&gt;Chrome$new()&lt;/code&gt;. This launches the Chrome process it using &lt;code&gt;processx::process()&lt;/code&gt;, and enables a supervisor for the process. This means that if the R process stops, the supervisor will detect this and shut down any Chrome processes that were registered with the supervisor. This prevents the proliferation of Chrome processes that are no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;The Chromote package will, by default, use a single Chrome process and a single &lt;code&gt;Chromote&lt;/code&gt; object, and each time &lt;code&gt;ChromoteSession$new()&lt;/code&gt; is called, it will spawn them from the &lt;code&gt;Chromote&lt;/code&gt; object. See &lt;a href=&#34;https://raw.githubusercontent.com/rstudio/chromote/main/#the-chromote-object-model&#34;&gt;The Chromote object model&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Specifying which browser to use&lt;/h2&gt; &#xA;&lt;p&gt;Chromote will look in specific places for the Chrome web browser, depending on platform. This is done by the &lt;code&gt;chromote:::find_chrome()&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use a different browser from the default, you can set the &lt;code&gt;CHROMOTE_CHROME&lt;/code&gt; environment variable, either with &lt;code&gt;Sys.setenv(CHROMOTE_CHROME=&#34;/path/to/browser&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Sys.setenv(CHROMOTE_CHROME = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way is create a &lt;code&gt;Chromote&lt;/code&gt; object and explicitly specify the browser, then spawn &lt;code&gt;ChromoteSession&lt;/code&gt;s from it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m &amp;lt;- Chromote$new(&#xA;  browser = Chrome$new(path = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;)&#xA;&#xA;# Spawn a ChromoteSession from the Chromote object&#xA;b &amp;lt;- m$new_session()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yet another way is to create a &lt;code&gt;Chromote&lt;/code&gt; object with a specified browser, then set it as the default Chromote object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;m &amp;lt;- Chromote$new(&#xA;  browser = Chrome$new(path = &#34;/Applications/Chromium.app/Contents/MacOS/Chromium&#34;)&#xA;)&#xA;&#xA;# Set this Chromote object as the default. Then any&#xA;# ChromoteSession$new() will be spawned from it.&#xA;set_default_chromote_object(m)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chrome on remote hosts&lt;/h2&gt; &#xA;&lt;p&gt;Chromote can control a browser running on a remote host. To start the browser, open a terminal on the remote host and run one of the following, depending on your platform:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning: Depending on how the remote machine is configured, the Chrome debug server might be accessible to anyone on the Internet. Proceed with caution.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Mac&#xA;&#34;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&#34; --headless \&#xA;  --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&#xA;# Linux&#xA;google-chrome --headless --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&#xA;# Windows&#xA;&#34;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&#34;  --headless \&#xA;  --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in your local R session, create a Chromote object with the &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; (you will need to use the correct IP address). Once it’s created, you can spawn a session off of it which you can control as normal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;r &amp;lt;- Chromote$new(&#xA;  browser = ChromeRemote$new(host = &#34;10.0.0.5&#34;, port = 9222)&#xA;)&#xA;&#xA;b &amp;lt;- r$new_session()&#xA;&#xA;b$Browser$getVersion()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;b$Page$loadEventFired()&#xA;b$screenshot(&#34;browser.png&#34;)&#xA;b$screenshot(&#34;browser_string.png&#34;, selector = &#34;.string-major&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you use &lt;code&gt;$view()&lt;/code&gt; on the remote browser, your local browser may block scripts for security reasons, which means that you won’t be able to view the remote browser. If your local browser is Chrome, there will be a shield-shaped icon in the location bar that you can click in order to enable loading the scripts. (Note: Some browsers don’t seem to work at all with the viewer.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Technical note:&lt;/strong&gt; There seem to be some timing issues with remote browsers. In the example above, the browser may finish navigating to the web site before the R process receives the response message for &lt;code&gt;$navigate()&lt;/code&gt;, and therefore before R starts waiting for &lt;code&gt;Page.loadEventFired&lt;/code&gt;. In order to avoid these timing problems, it may be better to write code like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;{&#xA;  b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;  b$Page$loadEventFired()&#xA;}&#xA;b$screenshot(&#34;browser.png&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells it to fire off the &lt;code&gt;Page.navigate&lt;/code&gt; command and &lt;em&gt;not&lt;/em&gt; wait for it, and then immediately start waiting for &lt;code&gt;Page.loadEventFired&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;Attaching to existing tabs&lt;/h3&gt; &#xA;&lt;p&gt;In the examples above, we connected to an existing browser, but created a new tab to attach to. It’s also possible to attach to an existing browser &lt;em&gt;and&lt;/em&gt; and existing tab. In Chrome debugging terminology a tab is called a “Target”, and there is a command to retrieve the list of current Targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;r$Target$getTargets()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every target has a unique identifier string associated with it called the &lt;code&gt;targetId&lt;/code&gt;; &lt;code&gt;&#34;9DAE349A3A533718ED9E17441BA5159B&#34;&lt;/code&gt; is an example of one.&lt;/p&gt; &#xA;&lt;p&gt;Here we define a function that retrieves the ID of the first Target (tab) from a Chromote object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;first_id &amp;lt;- function(r) {&#xA;  ts &amp;lt;- r$Target$getTargets()$targetInfos&#xA;  stopifnot(length(ts) &amp;gt; 0)&#xA;  r$Target$getTargets()$targetInfos[[1]]$targetId&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following code shows an alert box in the first tab, whatever it is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rc &amp;lt;- ChromeRemote$new(host = &#34;localhost&#34;, port = 9222)&#xA;r &amp;lt;- Chromote$new(browser = rc)&#xA;tid &amp;lt;- first_id(r)&#xA;b &amp;lt;- r$new_session(targetId = tid)&#xA;b$Runtime$evaluate(&#39;alert(&#34;this is the first tab&#34;)&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Taking a screenshot of a web page&lt;/h3&gt; &#xA;&lt;p&gt;Take a screenshot of the viewport and display it using the &lt;a href=&#34;https://github.com/r-lib/showimage#readme&#34;&gt;showimage&lt;/a&gt; package. This uses Chromote’s &lt;code&gt;$screenshot()&lt;/code&gt; method, which wraps up many calls to the Chrome DevTools Protocol.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;# ==== Synchronous version ====&#xA;# Run the next two lines together, without any delay in between.&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;)&#xA;b$Page$loadEventFired()&#xA;&#xA;b$screenshot(show = TRUE)  # Saves to screenshot.png and displays in viewer&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.r-project.org/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$screenshot(show = TRUE)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also possible to use selectors to specify what to screenshot, as well as the region (“content”, “border”, “padding”, or “margin”).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Using CSS selectors, choosing the region, and using scaling&#xA;b$screenshot(&#34;s1.png&#34;, selector = &#34;.sidebar&#34;)&#xA;b$screenshot(&#34;s2.png&#34;, selector = &#34;.sidebar&#34;, region = &#34;margin&#34;)&#xA;b$screenshot(&#34;s3.png&#34;, selector = &#34;.page&#34;, region = &#34;margin&#34;, scale = 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a vector is passed to &lt;code&gt;selector&lt;/code&gt;, it will take a screenshot with a rectangle that encompasses all the DOM elements picked out by the selectors. Similarly, if a selector picks out multiple DOM elements, all of them will be in the screenshot region.&lt;/p&gt; &#xA;&lt;h3&gt;Taking a screenshot of a web page after interacting with it&lt;/h3&gt; &#xA;&lt;p&gt;Headless Chrome provides a remote debugging UI which you can use to interact with the web page. The ChromoteSession’s &lt;code&gt;$view()&lt;/code&gt; method opens a regular browser and navigates to the remote debugging UI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;&#xA;b$view()&#xA;b$Page$navigate(&#34;https://www.google.com&#34;) # Or just type the URL in the navigation bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, you can interact with the web page by typing in text and clicking on things.&lt;/p&gt; &#xA;&lt;p&gt;Then take a screenshot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Taking screenshots of web pages in parallel&lt;/h3&gt; &#xA;&lt;p&gt;With async code, it’s possible to navigate to and take screenshots of multiple websites in parallel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(promises)&#xA;library(chromote)&#xA;urls &amp;lt;- c(&#xA;  &#34;https://www.r-project.org/&#34;,&#xA;  &#34;https://github.com/&#34;,&#xA;  &#34;https://news.ycombinator.com/&#34;&#xA;)&#xA;&#xA;screenshot_p &amp;lt;- function(url, filename = NULL) {&#xA;  if (is.null(filename)) {&#xA;    filename &amp;lt;- gsub(&#34;^.*://&#34;, &#34;&#34;, url)&#xA;    filename &amp;lt;- gsub(&#34;/&#34;, &#34;_&#34;, filename)&#xA;    filename &amp;lt;- gsub(&#34;\\.&#34;, &#34;_&#34;, filename)&#xA;    filename &amp;lt;- sub(&#34;_$&#34;, &#34;&#34;, filename)&#xA;    filename &amp;lt;- paste0(filename, &#34;.png&#34;)&#xA;  }&#xA;&#xA;  b &amp;lt;- ChromoteSession$new()&#xA;  b$Page$navigate(url, wait_ = FALSE)&#xA;  b$Page$loadEventFired(wait_ = FALSE)$&#xA;    then(function(value) {&#xA;      b$screenshot(filename, wait_ = FALSE)&#xA;    })$&#xA;    then(function(value) {&#xA;      message(filename)&#xA;    })$&#xA;    finally(function() {&#xA;      b$close()&#xA;    })&#xA;}&#xA;&#xA;# Screenshot multiple simultaneously&#xA;ps &amp;lt;- lapply(urls, screenshot_p)&#xA;pa &amp;lt;- promise_all(.list = ps)$then(function(value) {&#xA;  message(&#34;Done!&#34;)&#xA;})&#xA;&#xA;# Block the console until the screenshots finish (optional)&#xA;cm &amp;lt;- default_chromote_object()&#xA;cm$wait_for(pa)&#xA;#&amp;gt; www_r-project_org.png&#xA;#&amp;gt; github_com.png&#xA;#&amp;gt; news_ycombinator_com.png&#xA;#&amp;gt; Done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting custom headers&lt;/h3&gt; &#xA;&lt;p&gt;Currently setting custom headers requires a little extra work because it requires &lt;code&gt;Network.enable&lt;/code&gt; be called before using it. In the future we’ll streamline things so that it will happen automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- ChromoteSession$new()&#xA;# Currently need to manually enable Network domain notifications. Calling&#xA;# b$Network$enable() would do it, but calling it directly will bypass the&#xA;# callback counting and the notifications could get automatically disabled by a&#xA;# different Network event. We&#39;ll enable notifications for the Network domain by&#xA;# listening for a particular event. We&#39;ll also store a callback that will&#xA;# decrement the callback counter, so that we can disable notifications ater.&#xA;disable_network_notifications &amp;lt;- b$Network$responseReceived(function (msg) NULL)&#xA;b$Network$setExtraHTTPHeaders(headers = list(&#xA;  foo = &#34;bar&#34;,&#xA;  header1 = &#34;value1&#34;&#xA;))&#xA;&#xA;# Visit a web page that prints out the request headers&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# Unset extra headers. Note that `list(a=1)[0]` creates an empty _named_ list;&#xA;# an empty unnamed list will cause an error because they&#39;re converted to JSON&#xA;# differently. A named list becomes &#34;{}&#34;, but an unnamed list becomes &#34;[]&#34;.&#xA;b$Network$setExtraHTTPHeaders(headers = list(a=1)[0])&#xA;&#xA;# Request again&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# Disable extra headers entirely, by decrementing Network callback counter,&#xA;# which will disable Network notifications.&#xA;disable_network_notifications()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom User-Agent&lt;/h3&gt; &#xA;&lt;p&gt;Synchronous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Network$setUserAgentOverride(userAgent = &#34;My fake browser&#34;)&#xA;&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;)&#xA;b$screenshot(show = TRUE)&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Network$setUserAgentOverride(userAgent = &#34;My fake browser&#34;, wait_ = FALSE)&#xA;b$Page$navigate(&#34;http://scooterlabs.com/echo&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$screenshot(show = TRUE)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extracting text from a web page&lt;/h3&gt; &#xA;&lt;p&gt;One way to extract text from a page is to tell the browser to run JavaScript code that does it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;&#xA;# Run JavaScript to extract text from the page&#xA;x &amp;lt;- b$Runtime$evaluate(&#39;document.querySelector(&#34;.corset .string-major a&#34;).innerText&#39;)&#xA;x$result$value&#xA;#&amp;gt; [1] &#34;Chrome 75 on macOS (Mojave)&#34;&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$Runtime$evaluate(&#xA;      &#39;document.querySelector(&#34;.corset .string-major a&#34;).innerText&#39;&#xA;    )&#xA;  })$&#xA;  then(function(value) {&#xA;    print(value$result$value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way is to use CDP commands to extract content from the DOM. This does not require executing JavaScript in the browser’s context, but it is also not as flexible as JavaScript.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ==== Synchronous version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;)&#xA;x &amp;lt;- b$DOM$getDocument()&#xA;x &amp;lt;- b$DOM$querySelector(x$root$nodeId, &#34;.corset .string-major a&#34;)&#xA;b$DOM$getOuterHTML(x$nodeId)&#xA;#&amp;gt; $outerHTML&#xA;#&amp;gt; [1] &#34;&amp;lt;a href=\&#34;/detect/what-version-of-chrome-do-i-have\&#34;&amp;gt;Chrome 75 on macOS (Mojave)&amp;lt;/a&amp;gt;&#34;&#xA;&#xA;&#xA;# ==== Async version ====&#xA;b$Page$navigate(&#34;https://www.whatismybrowser.com/&#34;, wait_ = FALSE)&#xA;b$Page$loadEventFired(wait_ = FALSE)$&#xA;  then(function(value) {&#xA;    b$DOM$getDocument()&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$querySelector(value$root$nodeId, &#34;.corset .string-major a&#34;)&#xA;  })$&#xA;  then(function(value) {&#xA;    b$DOM$getOuterHTML(value$nodeId)&#xA;  })$&#xA;  then(function(value) {&#xA;    print(value)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Websites that require authentication&lt;/h3&gt; &#xA;&lt;p&gt;For websites that require authentication, you can use Chromote to get screenshots by doing the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log in interactively and navigate to the page.&lt;/li&gt; &#xA; &lt;li&gt;Capture cookies from the page and save them.&lt;/li&gt; &#xA; &lt;li&gt;In a later R session, load the cookies.&lt;/li&gt; &#xA; &lt;li&gt;Use the cookies in Chromote and navigate to the page.&lt;/li&gt; &#xA; &lt;li&gt;Take a screenshot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;There are two ways to capture the cookies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; The first method uses the headless browser’s viewer. This can be a bit inconvenient because it requires going through the entire login process, even if you have already logged in with a normal browser.&lt;/p&gt; &#xA;&lt;p&gt;First navigate to the page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, log in interactively via the viewer. Once that’s done, use Chromote to capture the cookies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cookies &amp;lt;- b$Network$getCookies()&#xA;str(cookies)&#xA;saveRDS(cookies, &#34;cookies.rds&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After saving the cookies, you can restart R and navigate to the page, using the cookies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;cookies &amp;lt;- readRDS(&#34;cookies.rds&#34;)&#xA;b$Network$setCookies(cookies = cookies$cookies)&#xA;# Navigate to the app that requires a login&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; The second method captures the cookies using a normal browser. This is can be more convenient because, if you are already logged in, you don’t need to do it again. This requires a Chromium-based browser, and it requires running DevTools-in-DevTools on that browser.&lt;/p&gt; &#xA;&lt;p&gt;First, navigate to the page in your browser. Then press CMD-Option-I (Mac) or Ctrl-Shift-I (Windows/Linux). The developer tools panel will open. Make sure to undock the developer tools so that they are in their own window. Then press CMD-Option-I or Ctrl-Shift-I again. A second developer tools window will open. (See &lt;a href=&#34;https://stackoverflow.com/questions/12291138/how-do-you-inspect-the-web-inspector-in-chrome/12291163#12291163&#34;&gt;this SO answer&lt;/a&gt; for detailed instructions.)&lt;/p&gt; &#xA;&lt;p&gt;In the second developer tools window, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var cookies = await Main.sendOverProtocol(&#39;Network.getCookies&#39;, {})&#xA;JSON.stringify(cookies)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will return a JSON string representing the cookies for that page. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[{&#34;cookies&#34;:[{&#34;name&#34;:&#34;AWSALB&#34;,&#34;value&#34;:&#34;T3dNdcdnMasdf/cNn0j+JHMVkZ3RI8mitnAggd9AlPsaWJdsfoaje/OowIh0qe3dDPiHc0mSafe5jNH+1Aeinfalsd30AejBZDYwE&#34;,&#34;domain&#34;:&#34;beta.rstudioconnect.com&#34;,&#34;path&#34;:&#34;/&#34;,&#34;expires&#34;:1594632233.96943,&#34;size&#34;:130,&#34;httpOnly&#34;:false,&#34;secure&#34;:false,&#34;session&#34;:false}]}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy that string to the clipboard. In your R session, you can paste it to this code, surrounded by single-quotes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cookie_json &amp;lt;- &#39;[{&#34;cookies&#34;:[{&#34;name&#34;:&#34;AWSALB&#34;,&#34;value&#34;:&#34;T3dNdcdnMasdf/cNn0j+JHMVkZ3RI8mitnAggd9AlPsaWJdsfoaje/OowIh0qe3dDPiHc0mSafe5jNH+1Aeinfalsd30AejBZDYwE&#34;,&#34;domain&#34;:&#34;beta.rstudioconnect.com&#34;,&#34;path&#34;:&#34;/&#34;,&#34;expires&#34;:1594632233.96943,&#34;size&#34;:130,&#34;httpOnly&#34;:false,&#34;secure&#34;:false,&#34;session&#34;:false}]}]&#39;&#xA;&#xA;cookies &amp;lt;- jsonlite::fromJSON(cookie_json, simplifyVector = FALSE)[[1]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can use Chromote to navigate to the page and take a screenshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(chromote)&#xA;b &amp;lt;- ChromoteSession$new()&#xA;b$view()&#xA;b$Network$setCookies(cookies = cookies$cookies)&#xA;b$Page$navigate(&#34;https://beta.rstudioconnect.com/content/123456/&#34;)&#xA;b$screenshot()&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dcomtois/summarytools</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/dcomtois/summarytools</id>
    <link href="https://github.com/dcomtois/summarytools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;R Package to Quickly and Neatly Summarize Data&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=summarytools&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/summarytools&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cran.rstudio.com/web/packages/summarytools/index.html&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/summarytools&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cran.rstudio.com/web/packages/summarytools/index.html&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/summarytools&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;span class=&#34;badge-paypal&#34;&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=HMN3QJR7UMT7S&amp;amp;item_name=Help+scientists,+data+scientists+and+analysts+around+the+globe&amp;amp;currency_code=CAD&amp;amp;source=url&#34; title=&#34;Donate to this project using Paypal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PayPal-Donate-blue&#34; alt=&#34;PayPal donate button&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/img/st-banner-fuzzy.png&#34; alt=&#34;package-design-image3&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Summarytools 1.0 is out!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;summarytools&lt;/strong&gt; is a an &lt;a href=&#34;https://www.r-project.org&#34;&gt;&lt;em&gt;R&lt;/em&gt;&lt;/a&gt; package for data cleaning, exploring, and simple reporting. The package was developed with the following objectives in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a coherent set of easy-to-use descriptive functions that are akin to those included in commercial statistical software suites such as SAS, SPSS, and Stata&lt;/li&gt; &#xA; &lt;li&gt;Offer flexibility in terms of output format &amp;amp; content&lt;/li&gt; &#xA; &lt;li&gt;Integrate well with commonly used software &amp;amp; tools for reporting (the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/&#34;&gt;RStudio&lt;/a&gt; IDE, &lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown&lt;/a&gt;, and &lt;a href=&#34;https://yihui.org/knitr/&#34;&gt;knitr&lt;/a&gt;) while also allowing for standalone, simple report generation from any R interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On a more personal level, I simply wish to share with the R community and the scientific community at large the functions I first developed for myself, that I ultimately realized would benefit a lot of people who are looking for the same thing I was seeking in the first place.&lt;/p&gt; &#xA;&lt;h2&gt;Support &lt;em&gt;summarytools&lt;/em&gt;’ Development&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;strong&gt;summarytools&lt;/strong&gt; helps you get things done, please consider making a donation. By doing so now, you’ll help me feel useful, but more importantly contribute to the package’s development and help other people like you who benefit from its current and &lt;em&gt;future features&lt;/em&gt;. I regularly receive feature requests, and when I receive donations, I set aside some time to work on them, making summarytools even more relevant for data scientists, students and researchers around the world. No matter how small the amount is, I always appreciate the gesture. A list of sponsors can be found &lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#sponsors&#34;&gt;further below&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=HMN3QJR7UMT7S&amp;amp;item_name=Help+scientists,+data+scientists+and+analysts+around+the+globe&amp;amp;currency_code=CAD&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/img/paypal-blue.svg?sanitize=true&#34; width=&#34;210&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Package Documentation&lt;/h1&gt; &#xA;&lt;p&gt;The bulk of the technical documentation can now be found in the following vignettes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/dcomtois/summarytools/raw/master/doc/introduction.html&#34;&gt;&lt;strong&gt;Introduction to summarytools&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://cran.r-project.org/package=summarytools/vignettes/introduction.html&#34;&gt;CRAN version&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/dcomtois/summarytools/raw/master/doc/rmarkdown.html&#34;&gt;&lt;strong&gt;Summarytools in R Markdown&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://cran.r-project.org/packages=summarytools/vignettes/rmarkdown.html&#34;&gt;CRAN Version&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://cran.r-project.org/web/packages/summarytools/summarytools.pdf&#34;&gt;&lt;strong&gt;PDF Manual&lt;/strong&gt;&lt;/a&gt; (automatically generated by CRAN)&lt;/p&gt; &#xA;&lt;h1&gt;Installing summarytools&lt;/h1&gt; &#xA;&lt;h3&gt;Required Software&lt;/h3&gt; &#xA;&lt;p&gt;Additional software is used by &lt;strong&gt;summarytools&lt;/strong&gt; for fine-tuning graphics as well as offering interactive functionality. If you are installing &lt;strong&gt;summarytools&lt;/strong&gt; for the first time, click on the relevant link to get OS-specific instructions. On Windows, no additional software is required.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#required-mac-os&#34;&gt;Mac OS X&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#required-debian&#34;&gt;Ubuntu / Debian / Mint&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#required--older-ubuntu&#34;&gt;Older Ubuntu (14 and 16)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#required-fedora&#34;&gt;Fedora / Red Hat / CentOS&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#required-solaris&#34;&gt;Solaris&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installing From GitHub&lt;/h3&gt; &#xA;&lt;p&gt;This method has the advantage of benefiting from minor fixes and improvements that are added between CRAN releases. Its main drawback is that you won’t be noticed when a new version is available. You can either check this page from time to time, or best, use a package that checks for package updates on various repositories, such as &lt;a href=&#34;https://github.com/hrbrmstr/dtupdate&#34;&gt;dtupdate&lt;/a&gt; and &lt;a href=&#34;https://dirk.eddelbuettel.com/code/drat.html&#34;&gt;Drat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;remotes&#34;)        # Using devtools is also possible&#xA;library(remotes)&#xA;install_github(&#34;rapporter/pander&#34;) # Strongly recommended&#xA;install_github(&#34;dcomtois/summarytools&#34;, build_vignettes = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing From CRAN&lt;/h3&gt; &#xA;&lt;p&gt;CRAN versions are stable but are not updated as often as the GitHub versions. On the plus side, they can be easier to install on some systems.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;summarytools&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Latest Changes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;dfSummary()&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is now possible to control which statistics to show in the &lt;em&gt;Freqs / Values&lt;/em&gt; column (see &lt;code&gt;help(&#34;st_options&#34;, &#34;summarytools&#34;)&lt;/code&gt; for examples)&lt;/li&gt; &#xA;   &lt;li&gt;In &lt;em&gt;html&lt;/em&gt; outputs, tables are better aligned horizontally (categories &amp;gt;&amp;gt; counts &amp;gt;&amp;gt; charts); if misalignment occurs, adjusting &lt;code&gt;graph.magnif&lt;/code&gt; should resolve it&lt;/li&gt; &#xA;   &lt;li&gt;List-type columns and &lt;code&gt;Inf&lt;/code&gt; values are handled properly&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;descr()&lt;/code&gt; and &lt;code&gt;ctable()&lt;/code&gt; several display glitches were corrected&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Selected heading elements can be totally omitted on an individual basis&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Improved functionality for customized terms / translations&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details, see &lt;code&gt;vignette(&#34;introduction&#34;, &#34;summarytools&#34;)&lt;/code&gt; as well as &lt;code&gt;news(package = &#34;summarytools&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Additional Software Installations&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;required-mac-os&#34;&gt;&lt;/a&gt;Required Software on Mac OS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Magick++/&#34;&gt;&lt;strong&gt;Magick++&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open a terminal window and enter the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install imagemagick@6&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you do not have &lt;strong&gt;brew&lt;/strong&gt; installed, simply enter this command in the terminal:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.xquartz.org/&#34;&gt;&lt;strong&gt;XQuartz&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you’re using Mac OS X version 10.8 (Mountain Lion) or more recent versions, you’ll need to download the &lt;em&gt;.dmg&lt;/em&gt; image from &lt;a href=&#34;https://www.xquartz.org/&#34;&gt;xquartz.org&lt;/a&gt; and add it to your Applications folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#installing-from-github&#34;&gt;Back to installation instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;required-debian&#34;&gt;&lt;/a&gt;Required Software for Debian / Ubuntu / Linux Mint&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Magick++/&#34;&gt;&lt;strong&gt;Magick++&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;code&gt;sudo apt install libmagick++-dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#installing-from-github&#34;&gt;Back to installation instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;required-older-ubuntu&#34;&gt;&lt;/a&gt;Required Software for Older Ubuntu Versions&lt;/h3&gt; &#xA;&lt;p&gt;This applies only if you are using Ubuntu Trusty (14.04) or Xenial (16.04).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Magick++/&#34;&gt;&lt;strong&gt;Magick++&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository -y ppa:opencpu/imagemagick&#xA;sudo apt-get update&#xA;sudo apt-get install -y libmagick++-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#installing-from-github&#34;&gt;Back to installation instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;required-fedora&#34;&gt;&lt;/a&gt;Required Software for Fedora / Red Had / CentOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Magick++/&#34;&gt;&lt;strong&gt;Magick++&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;code&gt;sudo yum install ImageMagick-c++-devel&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#installing-from-github&#34;&gt;Back to installation instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;required-solaris&#34;&gt;&lt;/a&gt;Required Software for Solaris&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Magick++/&#34;&gt;&lt;strong&gt;Magick++&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkgadd -d http://get.opencsw.org/now&#xA;/opt/csw/bin/pkgutil -U&#xA;/opt/csw/bin/pkgutil -y -i imagemagick &#xA;/usr/sbin/pkgchk -L CSWimagemagick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#installing-from-github&#34;&gt;Back to installation instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a id=&#34;sponsors&#34;&gt;&lt;/a&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;A big thanks to the following people who made donations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ashirwad Barnwal&lt;/li&gt; &#xA; &lt;li&gt;David Thomas&lt;/li&gt; &#xA; &lt;li&gt;Peter Nilsson&lt;/li&gt; &#xA; &lt;li&gt;Ross Dunne&lt;/li&gt; &#xA; &lt;li&gt;Igor Rubets&lt;/li&gt; &#xA; &lt;li&gt;Joerg Sahlmann&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;summarytools&lt;/strong&gt; is the result of &lt;strong&gt;many&lt;/strong&gt; hours of work. If you find the package brings value to your work, please take a moment to make a small donation. Just a few dollars goes a long way in making me feel motivated and happy to continue bringing my modest contribution to the world of Science.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=HMN3QJR7UMT7S&amp;amp;item_name=Help+scientists,+data+scientists+and+analysts+around+the+globe&amp;amp;currency_code=CAD&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/img/paypal-blue.svg?sanitize=true&#34; width=&#34;210&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The package comes with no guarantees. It is a work in progress and feedback is always welcome. Please open an &lt;a href=&#34;https://github.com/dcomtois/summarytools/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or wish to submit a feature request.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dcomtois/summarytools/master/#top&#34;&gt;Back to top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/dplyr</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/tidyverse/dplyr</id>
    <link href="https://github.com/tidyverse/dplyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dplyr: A grammar of data manipulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dplyr &lt;a href=&#34;https://dplyr.tidyverse.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/dplyr/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=dplyr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/dplyr&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/dplyr?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/dplyr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;dplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; adds new variables that are functions of existing variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select()&lt;/code&gt; picks variables based on their names.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; picks cases based on their values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;summarise()&lt;/code&gt; reduces multiple values down to a single summary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; changes the ordering of the rows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These all combine naturally with &lt;code&gt;group_by()&lt;/code&gt; which allows you to perform any operation “by group”. You can learn more about them in &lt;code&gt;vignette(&#34;dplyr&#34;)&lt;/code&gt;. As well as these single-table verbs, dplyr also provides a variety of two-table verbs, which you can learn about in &lt;code&gt;vignette(&#34;two-table&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to dplyr, the best place to start is the &lt;a href=&#34;https://r4ds.had.co.nz/transform.html&#34;&gt;data transformation chapter&lt;/a&gt; in R for data science.&lt;/p&gt; &#xA;&lt;h2&gt;Backends&lt;/h2&gt; &#xA;&lt;p&gt;In addition to data frames/tibbles, dplyr makes working with other computational backends accessible and efficient. Below is a list of alternative backends:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dtplyr.tidyverse.org/&#34;&gt;dtplyr&lt;/a&gt;: for large, in-memory datasets. Translates your dplyr code to high performance &lt;a href=&#34;https://rdatatable.gitlab.io/data.table/&#34;&gt;data.table&lt;/a&gt; code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dbplyr.tidyverse.org/&#34;&gt;dbplyr&lt;/a&gt;: for data stored in a relational database. Translates your dplyr code to SQL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://spark.rstudio.com&#34;&gt;sparklyr&lt;/a&gt;: for very large datasets stored in &lt;a href=&#34;https://spark.apache.org&#34;&gt;Apache Spark&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get dplyr is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just dplyr:&#xA;install.packages(&#34;dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development version&lt;/h3&gt; &#xA;&lt;p&gt;To get a bug fix or to use a feature from the development version, you can install the development version of dplyr from GitHub.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheat Sheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/main/data-transformation.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/main/pngs/thumbnails/data-transformation-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;&#xA;starwars %&amp;gt;% &#xA;  filter(species == &#34;Droid&#34;)&#xA;#&amp;gt; # A tibble: 6 × 14&#xA;#&amp;gt;   name   height  mass hair_color skin_color  eye_color birth_year sex   gender  &#xA;#&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &#xA;#&amp;gt; 1 C-3PO     167    75 &amp;lt;NA&amp;gt;       gold        yellow           112 none  masculi…&#xA;#&amp;gt; 2 R2-D2      96    32 &amp;lt;NA&amp;gt;       white, blue red               33 none  masculi…&#xA;#&amp;gt; 3 R5-D4      97    32 &amp;lt;NA&amp;gt;       white, red  red               NA none  masculi…&#xA;#&amp;gt; 4 IG-88     200   140 none       metal       red               15 none  masculi…&#xA;#&amp;gt; 5 R4-P17     96    NA none       silver, red red, blue         NA none  feminine&#xA;#&amp;gt; # … with 1 more row, and 5 more variables: homeworld &amp;lt;chr&amp;gt;, species &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   films &amp;lt;list&amp;gt;, vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;&#xA;&#xA;starwars %&amp;gt;% &#xA;  select(name, ends_with(&#34;color&#34;))&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           hair_color skin_color  eye_color&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;    &#xA;#&amp;gt; 1 Luke Skywalker blond      fair        blue     &#xA;#&amp;gt; 2 C-3PO          &amp;lt;NA&amp;gt;       gold        yellow   &#xA;#&amp;gt; 3 R2-D2          &amp;lt;NA&amp;gt;       white, blue red      &#xA;#&amp;gt; 4 Darth Vader    none       white       yellow   &#xA;#&amp;gt; 5 Leia Organa    brown      light       brown    &#xA;#&amp;gt; # … with 82 more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  mutate(name, bmi = mass / ((height / 100)  ^ 2)) %&amp;gt;%&#xA;  select(name:mass, bmi)&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           height  mass   bmi&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;           &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Luke Skywalker    172    77  26.0&#xA;#&amp;gt; 2 C-3PO             167    75  26.9&#xA;#&amp;gt; 3 R2-D2              96    32  34.7&#xA;#&amp;gt; 4 Darth Vader       202   136  33.3&#xA;#&amp;gt; 5 Leia Organa       150    49  21.8&#xA;#&amp;gt; # … with 82 more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  arrange(desc(mass))&#xA;#&amp;gt; # A tibble: 87 × 14&#xA;#&amp;gt;   name      height  mass hair_color skin_color eye_color birth_year sex   gender&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &#xA;#&amp;gt; 1 Jabba De…    175  1358 &amp;lt;NA&amp;gt;       green-tan… orange         600   herm… mascu…&#xA;#&amp;gt; 2 Grievous     216   159 none       brown, wh… green, y…       NA   male  mascu…&#xA;#&amp;gt; 3 IG-88        200   140 none       metal      red             15   none  mascu…&#xA;#&amp;gt; 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…&#xA;#&amp;gt; 5 Tarfful      234   136 brown      brown      blue            NA   male  mascu…&#xA;#&amp;gt; # … with 82 more rows, and 5 more variables: homeworld &amp;lt;chr&amp;gt;, species &amp;lt;chr&amp;gt;,&#xA;#&amp;gt; #   films &amp;lt;list&amp;gt;, vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;&#xA;&#xA;starwars %&amp;gt;%&#xA;  group_by(species) %&amp;gt;%&#xA;  summarise(&#xA;    n = n(),&#xA;    mass = mean(mass, na.rm = TRUE)&#xA;  ) %&amp;gt;%&#xA;  filter(&#xA;    n &amp;gt; 1,&#xA;    mass &amp;gt; 50&#xA;  )&#xA;#&amp;gt; # A tibble: 8 × 3&#xA;#&amp;gt;   species      n  mass&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Droid        6  69.8&#xA;#&amp;gt; 2 Gungan       3  74  &#xA;#&amp;gt; 3 Human       35  82.8&#xA;#&amp;gt; 4 Kaminoan     2  88  &#xA;#&amp;gt; 5 Mirialan     2  53.1&#xA;#&amp;gt; # … with 3 more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a clear bug, please file an issue with a minimal reproducible example on &lt;a href=&#34;https://github.com/tidyverse/dplyr/issues&#34;&gt;GitHub&lt;/a&gt;. For questions and other discussion, please use &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;community.rstudio.com&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/d/forum/manipulatr&#34;&gt;manipulatr mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://dplyr.tidyverse.org/CODE_OF_CONDUCT&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ekholme/thoughtsNprayers</title>
    <updated>2022-05-31T01:50:59Z</updated>
    <id>tag:github.com,2022-05-31:/ekholme/thoughtsNprayers</id>
    <link href="https://github.com/ekholme/thoughtsNprayers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Doesn&#39;t actually do anything&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;thoughtsNprayers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;{thoughtsNprayers}&lt;/code&gt; is an R package that simulates the realistic effects of offering thoughts and prayers after a tragedy.&lt;/p&gt; &#xA;&lt;p&gt;All credit to Travis Gerke and his &lt;a href=&#34;https://twitter.com/travisgerke/status/1529276517452111872?cxt=HHwWgICjofy4irkqAAAA&#34;&gt;tweet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install this package via Github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;ekholme/thoughtsNprayers&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;usage&lt;/h2&gt; &#xA;&lt;p&gt;This package contains a single function, &lt;code&gt;thoughts_prayers()&lt;/code&gt;. You can pass any argument you want into this function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(thoughtsNprayers)&#xA;&#xA;thoughts_prayers(&#34;we offer you our thoughts and prayers in this difficult time&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## NULL&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>