<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T01:57:09Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coolbutuseless/tickle</title>
    <updated>2022-06-06T01:57:09Z</updated>
    <id>tag:github.com,2022-06-06:/coolbutuseless/tickle</id>
    <link href="https://github.com/coolbutuseless/tickle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily create UIs in base R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tickle &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/logo-tickle.png&#34; align=&#34;right&#34; width=&#34;230&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/cool-useless-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/coolbutuseless/tickle/actions&#34;&gt;&lt;img src=&#34;https://github.com/coolbutuseless/tickle/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;code&gt;{tickle}&lt;/code&gt; is a package for creating UIs in base R.&lt;/p&gt; &#xA;&lt;p&gt;This is an &lt;strong&gt;opinionated abstraction&lt;/strong&gt; over the base R package &lt;code&gt;{tcltk}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This package aims to provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;strong&gt;simplified&lt;/strong&gt; UI creation process similar to &lt;code&gt;shiny&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;a &lt;strong&gt;modern-looking&lt;/strong&gt; visual default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;more documentation&lt;/strong&gt; to help create common UI elements without resorting to the online tcl/tk documentation.&lt;/li&gt; &#xA; &lt;li&gt;a way to still access the low-level tcl/tk structures in order to achieve complex effects and customisation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What’s in the box&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An array of &lt;code&gt;tic_*()&lt;/code&gt; functions for nested creation of a UI specification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;render_ui()&lt;/code&gt; to render a UI specification into a window onscreen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reactive_*()&lt;/code&gt; to create reactive values used to transfer values between the UI and R&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canvas_*()&lt;/code&gt; functions to do some simple drawing an manipulation on canvas widgets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create reactive variables (with &lt;code&gt;reactive_*()&lt;/code&gt;) in order to pass values between R and the UI. e.g.&amp;nbsp;the value of the slider, or the text in a text entry box.&lt;/li&gt; &#xA; &lt;li&gt;Define callback functions that are called, say, when a button is pressed.&lt;/li&gt; &#xA; &lt;li&gt;Create a UI specification by nesting containers and widgets with &lt;code&gt;tic_*()&lt;/code&gt; calls. This specification can include &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;binding callback functions to particular events like mouse buttons or key presses (&lt;code&gt;bind&lt;/code&gt; argument)&lt;/li&gt; &#xA;   &lt;li&gt;controlling how widgets are packed within their parent container (&lt;code&gt;pack&lt;/code&gt; argument)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Render the UI to an actual object on the screen with &lt;code&gt;render_ui()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The object returned by &lt;code&gt;render_ui()&lt;/code&gt; can be ignored by beginners. For intermediate/advanced users, this object is a nested list of &lt;code&gt;tclObj&lt;/code&gt; objects representing the UI components, and these can be further manipulated with &lt;code&gt;{tcltk}&lt;/code&gt; to finesse and configure the UI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install from &lt;a href=&#34;https://github.com/coolbutuseless/tickle&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.package(&#39;remotes&#39;)&#xA;remotes::install_github(&#39;coolbutuseless/tickle&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hello World&lt;/h2&gt; &#xA;&lt;p&gt;Things to note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define a reactive variable for the slider before defining the UI&lt;/li&gt; &#xA; &lt;li&gt;UI specificaiton created with nested &lt;code&gt;tic_*()&lt;/code&gt; calls.&lt;/li&gt; &#xA; &lt;li&gt;Some commands (e.g.&amp;nbsp;&lt;code&gt;tic_button()&lt;/code&gt;) have an explicit command function which is run when they are activated.&lt;/li&gt; &#xA; &lt;li&gt;After defining the UI specificaiton, it is rendered to screen with &lt;code&gt;render_ui()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tickle)&#xA;&#xA;value &amp;lt;- reactive_dbl(40)&#xA;&#xA;ui_spec &amp;lt;- tic_window(&#xA;  title = &#34;Hello World&#34;, &#xA;  tic_row(&#xA;    tic_col(&#xA;      tic_button(&#34;Hello&#34;, command = function() {message(&#34;Hello&#34;)}, style = &#39;primary&#39;),&#xA;      tic_button(&#34;World&#34;, command = function() {message(&#34;World&#34;)})&#xA;    ),&#xA;    tic_col(&#xA;      tic_slider(value),&#xA;      tic_label(textvariable = value)&#xA;    )&#xA;  )&#xA;)&#xA;&#xA;win &amp;lt;- render_ui(ui_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/helloworld.png&#34;&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/detailed-example.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/demo-complex.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/juliaset.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/julia.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/ggreview.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/ggreview-snap.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/idle.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/idle.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Examples/Vignettes&lt;/h2&gt; &#xA;&lt;p&gt;Please view the online vignettes for more details on how to use &lt;code&gt;{tickle}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/detailed-example.html&#34;&gt;Big example with lots of widgets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/reactive.html&#34;&gt;Reactive Values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/ggreview.html&#34;&gt;Annotate ggplots (using mouse events)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/popups.html&#34;&gt;Pop-up Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/widgets.html&#34;&gt;Overview of all Widgets &amp;amp; Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/juliaset.html&#34;&gt;JuliaSet explorer (using keyboard events and rendering to a grid window)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/fonts.html&#34;&gt;Changing font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/packing.html&#34;&gt;Understanding widget layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/idle.html&#34;&gt;Continuous rain drops using an idle callback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolbutuseless.github.io/package/tickle/articles/image.html&#34;&gt;Including images in buttons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Containers&lt;/h2&gt; &#xA;&lt;p&gt;Containers are ways of grouping multiple widgets.&lt;/p&gt; &#xA;&lt;p&gt;Containers can be nested within other containers to achieve complex layouts.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Container&lt;/th&gt; &#xA;   &lt;th&gt;Code/Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-window.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_window(…)&lt;/code&gt;&lt;br&gt; Create a top level window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-col.png&#34; width=&#34;100&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_col(A, B, C)&lt;/code&gt;&lt;br&gt; Layout objects in column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-row.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_row(A, B, C)&lt;/code&gt;&lt;br&gt; Layout objects rowwise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-frame.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_frame(…)&lt;/code&gt;&lt;br&gt; Invisible container. Useful for advanced users who want to customize layout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-labelframe.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_labelframe(…)&lt;/code&gt;&lt;br&gt; Frame with a a label and usually visible outline&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-notebook.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_notebook(A, B, C)&lt;/code&gt;&lt;br&gt; Tabbed display&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/container-panedwindow.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_panedwindow(A, B, C)&lt;/code&gt;&lt;br&gt; Layout multiple elements which can be resized as panes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Widgets&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Widget&lt;/th&gt; &#xA;   &lt;th&gt;Code/Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-label.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_label(…)&lt;/code&gt;&lt;br&gt; Display text. If you need headings rather than body text, Use &lt;code&gt;style = &#39;h1&#39;&lt;/code&gt; to &lt;code&gt;style = &#39;h5&#39;&lt;/code&gt; for different sized text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-button.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_button(…)&lt;/code&gt;&lt;br&gt; Clickable button. Available &lt;code&gt;style&lt;/code&gt; options: ‘primary’, ‘seconary’, ‘info’, ‘success’, ‘warning’, ‘danger’, ‘light’, ‘dark’&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-checkbutton-default.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_checkbutton(…)&lt;/code&gt;&lt;br&gt; On/off button (default styling)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-checkbutton-toggle.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_checkbutton(…)&lt;/code&gt;&lt;br&gt; On/off button with &lt;code&gt;style = &#39;toggle&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-checkbutton-switch.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_checkbutton(…)&lt;/code&gt;&lt;br&gt; On/off button with &lt;code&gt;style = &#39;switch&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-radiobutton.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_radiobutton(…)&lt;/code&gt;&lt;br&gt; Groups of mutually exclusion options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-menubutton.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_menubutton(…)&lt;/code&gt;&lt;br&gt; Button which displays a drop-down menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-canvas.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_canvas(…)&lt;/code&gt;&lt;br&gt; General drawing canvas&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-spinbox.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_spinbox(…)&lt;/code&gt;&lt;br&gt; Choose options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-combobox.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_combobox(…)&lt;/code&gt;&lt;br&gt; Choose options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-textentry.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_textentry(…)&lt;/code&gt;&lt;br&gt; Single line text entry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-textbox.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_textbox(…)&lt;/code&gt;&lt;br&gt; Multipe line text entry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-progressbar.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_progressbar(…)&lt;/code&gt;&lt;br&gt; Progress bar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/widget-slider.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tic_slider(…)&lt;/code&gt;&lt;br&gt; Slider&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Popups&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Popups&lt;/em&gt; are windows which are initiated separate from the main UI.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Popup&lt;/th&gt; &#xA;   &lt;th&gt;Code/Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/popup-color-picker.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;popup_color_picker()&lt;/code&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/popup-messagebox.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;popup_messagebox()&lt;/code&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/popup-open-file.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;popup_open_file()&lt;/code&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolbutuseless/tickle/main/man/figures/widgets/popup-save-file.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;popup_save_file()&lt;/code&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Canvas&lt;/h2&gt; &#xA;&lt;p&gt;After creating a canvas with &lt;code&gt;tic_canvas()&lt;/code&gt;, it can be manipulated with the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Draw on the canvas &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_line()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_text()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_rect()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_polygon()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_oval()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;canvas_arc()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canvas_plot()&lt;/code&gt; render a plot to the canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canvas_clear()&lt;/code&gt; clear all objects from the canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canvas_image()&lt;/code&gt; render an image from a file to the canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canvas_save()&lt;/code&gt; save the contents of the canvas to an image file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The actual canvas in tcl/tk renders &lt;em&gt;structured graphics&lt;/em&gt; and it is much more like SVG or PDF than just a simple array of pixels.&lt;/p&gt; &#xA;&lt;p&gt;The canvas implementation in this package treats the canvas as just a raster object i.e.&amp;nbsp;a rectangular collection of pixels. This made it easier to write this package and keep the API/syntax simple, but it doesn’t unleash the full power of the canvas.&lt;/p&gt; &#xA;&lt;p&gt;The effort to write a more complete abstraction over the canvas is not currently warranted. &lt;strong&gt;Please get in contact if such a facility is important to you.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Theme&lt;/h1&gt; &#xA;&lt;p&gt;The theme for this package is an adaptaton of the &lt;code&gt;sun-valley-light&lt;/code&gt; theme available &lt;a href=&#34;https://github.com/rdbende/Sun-Valley-ttk-theme&#34;&gt;from rdbende on github&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;sun-valley-light&lt;/code&gt; theme is MIT licensed (see “LICENSE-sun-valley”) and has been adapted into the theme &lt;code&gt;r-sun-valley-light&lt;/code&gt; included in this package which has the following extra features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Styles ‘h1’ through ‘h5’ for different sized heading text to use with &lt;code&gt;tic_label()&lt;/code&gt; widgets. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use: &lt;code&gt;tic_label(..., style = &#39;h1&#39;)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Standard buttons colours from &lt;a href=&#34;https://getbootstrap.com/docs/4.0/components/buttons/&#34;&gt;Bootstrap&lt;/a&gt; to use with &lt;code&gt;tic_button()&lt;/code&gt; widgets. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use: &lt;code&gt;tic_button(..., style = &#39;primary&#39;)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Available styles: primary, secondary, success, danger, warning, info, light, dark&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Possible Future Features&lt;/h2&gt; &#xA;&lt;p&gt;The following items are not yet implemented, or incomplete:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Popup menus when a user right-clicks in the window.&lt;/li&gt; &#xA; &lt;li&gt;No access yet to the “grid” geometry layout.&lt;/li&gt; &#xA; &lt;li&gt;treeview, listbox and some other widgets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Package Name&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tcl&lt;/code&gt; is the scripting language&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tk&lt;/code&gt; is the graphics toolkit for &lt;code&gt;tcl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tcl/tk&lt;/code&gt; is often how the langauge and toolkit are talked about as a single entity&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{tcltk}&lt;/code&gt; is the R package interfacing to &lt;code&gt;tcl/tk&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tcl&lt;/code&gt; is often pronounced as “tickle” i.e.&amp;nbsp;&lt;code&gt;tcl/tk&lt;/code&gt; = “tickle-tee-kay”&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R Core for developing and maintaining the language.&lt;/li&gt; &#xA; &lt;li&gt;CRAN maintainers, for patiently shepherding packages onto CRAN and maintaining the repository&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cutterkom/generativeart</title>
    <updated>2022-06-06T01:57:09Z</updated>
    <id>tag:github.com,2022-06-06:/cutterkom/generativeart</id>
    <link href="https://github.com/cutterkom/generativeart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create Generative Art with R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;generativeart&lt;/h1&gt; &#xA;&lt;h2&gt;Announcement&lt;/h2&gt; &#xA;&lt;p&gt;This package collects more and more stars here on Github and is widely used for NFTs. Just browse on NFT platforms - it won&#39;t take you long to discover patterns be that might be decandents of this repository.&lt;/p&gt; &#xA;&lt;p&gt;I would like to clarify: I am &lt;strong&gt;not a fan&lt;/strong&gt; of Blockchain, NFT and Web3.&lt;/p&gt; &#xA;&lt;p&gt;Why? Read this text: &lt;a href=&#34;https://tante.cc/2021/12/17/the-third-web/&#34;&gt;&#34;The Third Web&#34;&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/tante&#34;&gt;@tante&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Create Generative Art with R.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cutterkom/generativeart/master/img/generativeart.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.instagram.com/cutterkom/&#34;&gt;More on Instagram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;One overly simple but useful definition is that generative art is art programmed using a computer that intentionally introduces randomness as part of its creation process. -- &lt;a href=&#34;https://www.artnome.com/news/2018/8/8/why-love-generative-art&#34;&gt;Why Love Generative Art? - Artnome&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;generativeart&lt;/code&gt; let&#39;s you create images based on many thousand points. The position of every single point is calculated by a formula, which has random parameters. Because of the random numbers, every image looks different.&lt;/p&gt; &#xA;&lt;p&gt;In order to make an image reproducible, &lt;code&gt;generative art&lt;/code&gt; implements a log file that saves the &lt;code&gt;file_name&lt;/code&gt;, the &lt;code&gt;seed&lt;/code&gt; and the &lt;code&gt;formula&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package with the &lt;code&gt;devtools&lt;/code&gt; package directly from Github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&#34;cutterkom/generativeart&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;generativeart&lt;/code&gt; uses the packages &lt;code&gt;ggplot2&lt;/code&gt;, &lt;code&gt;magrittr&lt;/code&gt;, &lt;code&gt;purrr&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The package works with a specific directory structure that fits my needs best. The first step is to create it with &lt;code&gt;setup_directories()&lt;/code&gt;. All images are saved by default in &lt;code&gt;img/everything/&lt;/code&gt;. I use &lt;code&gt;img/handpicked/&lt;/code&gt; to choose the best ones. In &lt;code&gt;logfile/&lt;/code&gt; you will find a &lt;code&gt;csv&lt;/code&gt; file that saves the &lt;code&gt;file_name&lt;/code&gt;, the &lt;code&gt;seed&lt;/code&gt; and the used &lt;code&gt;formula&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(generativeart)&#xA;&#xA;# set the paths&#xA;IMG_DIR &amp;lt;- &#34;img/&#34;&#xA;IMG_SUBDIR &amp;lt;- &#34;everything/&#34;&#xA;IMG_SUBDIR2 &amp;lt;- &#34;handpicked/&#34;&#xA;IMG_PATH &amp;lt;- paste0(IMG_DIR, IMG_SUBDIR)&#xA;&#xA;LOGFILE_DIR &amp;lt;- &#34;logfile/&#34;&#xA;LOGFILE &amp;lt;- &#34;logfile.csv&#34;&#xA;LOGFILE_PATH &amp;lt;- paste0(LOGFILE_DIR, LOGFILE)&#xA;&#xA;# create the directory structure&#xA;generativeart::setup_directories(IMG_DIR, IMG_SUBDIR, IMG_SUBDIR2, LOGFILE_DIR)&#xA;&#xA;# include a specific formula, for example:&#xA;my_formula &amp;lt;- list(&#xA;  x = quote(runif(1, -1, 1) * x_i^2 - sin(y_i^2)),&#xA;  y = quote(runif(1, -1, 1) * y_i^3 - cos(x_i^2))&#xA;)&#xA;&#xA;# call the main function to create five images with a polar coordinate system&#xA;generativeart::generate_img(formula = my_formula, nr_of_img = 5, polar = TRUE, filetype = &#34;png&#34;, color = &#34;black&#34;, background_color = &#34;white&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can create as many images as you want by setting &lt;code&gt;nr_of_img&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For every image a seed is drawn from a number between 1 and 10000.&lt;/li&gt; &#xA; &lt;li&gt;This seed determines the random numbers in the formula.&lt;/li&gt; &#xA; &lt;li&gt;You can choose between cartesian and polar coordinate systems by setting &lt;code&gt;polar = TRUE&lt;/code&gt; or &lt;code&gt;polar = FALSE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can choose the colors with &lt;code&gt;color = &#39;black&#39;&lt;/code&gt; and &lt;code&gt;background_color = &#39;hotpink&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can save the output image in various formats. Default is &lt;code&gt;png&lt;/code&gt;, the alternatives are defined by the &lt;code&gt;device&lt;/code&gt; options of &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/ggsave.html&#34;&gt;&lt;code&gt;ggplot::ggsave()&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;the formula is a &lt;code&gt;list()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;It is a good idea to use the sine and cosine in the formula, since it guarantees nice shapes, especially when combined with a polar coordinate system. One simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_formula &amp;lt;- list(&#xA;  x = quote(runif(1, -1, 1) * x_i^2 - sin(y_i^2)),&#xA;  y = quote(runif(1, -1, 1) * y_i^3 - cos(x_i^2))&#xA;)&#xA;&#xA;generativeart::generate_img(formula = my_formula, nr_of_img = 5, polar = TRUE, color = &#34;black&#34;, background_color = &#34;white&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Two possible images:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;seed = 1821&lt;/code&gt;, &lt;code&gt;polar = TRUE&lt;/code&gt;: &lt;img src=&#34;https://raw.githubusercontent.com/cutterkom/generativeart/master/img/2018-11-16-17-13_seed_1821.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;seed = 5451&lt;/code&gt;, &lt;code&gt;polar = FALSE&lt;/code&gt;: &lt;img src=&#34;https://raw.githubusercontent.com/cutterkom/generativeart/master/img/2018-11-16-17-12_seed_5451.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The corresponding log file looks like that:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;file_name&lt;/th&gt; &#xA;   &lt;th&gt;seed&lt;/th&gt; &#xA;   &lt;th&gt;formula_x&lt;/th&gt; &#xA;   &lt;th&gt;formula_y&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-11-16-17-13_seed_1821.png&lt;/td&gt; &#xA;   &lt;td&gt;1821&lt;/td&gt; &#xA;   &lt;td&gt;runif(1, -1, 1) * x_i^2 - sin(y_i^2)&lt;/td&gt; &#xA;   &lt;td&gt;runif(1, -1, 1) * y_i^3 - cos(x_i^2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-11-16-17-12_seed_5451.png&lt;/td&gt; &#xA;   &lt;td&gt;5451&lt;/td&gt; &#xA;   &lt;td&gt;runif(1, -1, 1) * x_i^2 - sin(y_i^2)&lt;/td&gt; &#xA;   &lt;td&gt;runif(1, -1, 1) * y_i^3 - cos(x_i^2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;The basic concept is heavily inspired by &lt;a href=&#34;https://fronkonstin.com/&#34;&gt;Fronkonstin&#39;s great blog&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Appsilon/rhino</title>
    <updated>2022-06-06T01:57:09Z</updated>
    <id>tag:github.com,2022-06-06:/Appsilon/rhino</id>
    <link href="https://github.com/Appsilon/rhino" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build high quality, enterprise-grade Shiny apps at speed&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rhino &lt;a href=&#34;https://appsilon.github.io/rhino/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Appsilon/rhino/main/man/figures/rhino.png&#34; align=&#34;right&#34; alt=&#34;Rhino logo&#34; style=&#34;height: 140px;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Build high quality, enterprise-grade &lt;a href=&#34;https://shiny.rstudio.com/&#34;&gt;Shiny&lt;/a&gt; apps at speed.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=rhino&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/rhino&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Appsilon/rhino/actions&#34;&gt;&lt;img src=&#34;https://github.com/Appsilon/rhino/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/LGPL-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-LGPL--3.0-blue.svg?sanitize=true&#34; alt=&#34;License: LGPL-3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Why Rhino?&lt;/h2&gt; &#xA;&lt;p&gt;Rhino allows you to create Shiny apps &lt;strong&gt;The Appsilon Way&lt;/strong&gt; - like a fullstack software engineer. Apply best software engineering practices, modularize your code, test it well, make UI beautiful, and think about user adoption from the very beginning. Rhino is an opinionated framework with a focus on software engineering practices and development tools.&lt;/p&gt; &#xA;&lt;p&gt;Rhino supports your work in 3 main areas:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clear code&lt;/strong&gt;: scalable app architecture, modularization based on Box and Shiny modules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Quality&lt;/strong&gt;: unit tests, E2E tests with Cypress, logging and monitoring, linting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: project startup, CI with GitHub Actions, dependency management with renv, configuration management with config, Sass and JavaScript bundling with ES6 support via Node.js.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These features are often implemented using well-known packages. Rhino brings them all working together out of the box!&lt;/p&gt; &#xA;&lt;p&gt;Read more: &lt;a href=&#34;https://appsilon.github.io/rhino/articles/explanation/what-is-rhino.html&#34;&gt;What is Rhino?&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get it&lt;/h2&gt; &#xA;&lt;p&gt;Stable version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;rhino&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Development version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;Appsilon/rhino&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new Rhino application with &lt;code&gt;rhino::init()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To learn more, follow the &lt;a href=&#34;https://appsilon.github.io/rhino/articles/tutorial/create-your-first-rhino-app.html&#34;&gt;Rhino tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To migrate an existing application to Rhino, refer to &lt;a href=&#34;https://appsilon.github.io/rhino/reference/init.html#details-1&#34;&gt;&lt;code&gt;rhino::init()&lt;/code&gt; details section&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Rhino is distributed under &lt;a href=&#34;https://opensource.org/licenses/LGPL-3.0&#34;&gt;LGPL-3.0 license&lt;/a&gt;. Developed with &lt;span&gt;❤️&lt;/span&gt; at &lt;a href=&#34;https://appsilon.com&#34;&gt;Appsilon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Appsilon is the &lt;strong&gt;Full Service Certified RStudio Partner&lt;/strong&gt;. Learn more at &lt;a href=&#34;https://appsilon.com&#34;&gt;appsilon.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Get in touch: &lt;a href=&#34;mailto:opensource@appsilon.com&#34;&gt;opensource@appsilon.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://appsilon.com/careers/&#34;&gt;&lt;img src=&#34;http://d2v95fjda94ghc.cloudfront.net/hiring.png&#34; alt=&#34;We are hiring!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Links --&gt;</summary>
  </entry>
</feed>