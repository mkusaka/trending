<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-19T01:40:47Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ThinkR-open/mariobox</title>
    <updated>2022-09-19T01:40:47Z</updated>
    <id>tag:github.com,2022-09-19:/ThinkR-open/mariobox</id>
    <link href="https://github.com/ThinkR-open/mariobox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Framework For Packaging {plumber} APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;{mariobox}&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&#34; alt=&#34;Lifecycle: experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://CRAN.R-project.org/package=mariobox&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/mariobox&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;[DISCLAIMER] This is a Work In Progress, please use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;The goal of &lt;code&gt;{mariobox}&lt;/code&gt; is to provide a framework for packaging {plumber} APIs. Think of it as the “&lt;code&gt;{golem}&lt;/code&gt; for &lt;code&gt;{plumber}&lt;/code&gt;”&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the development version of &lt;code&gt;{mariobox}&lt;/code&gt; from &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;remotes&#34;)&#xA;remotes::install_github(&#34;ThinkR-Open/mariobox&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mariobox)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating a new {mariobox} project:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;path_pipo &amp;lt;- tempfile(pattern = &#34;pipo&#34;)&#xA;&#xA;# The create mariobox function will generate a new prefilled project&#xA;# with everything you need to get your started&#xA;create_mariobox(&#xA;  path = path_pipo,&#xA;  open = FALSE&#xA;)&#xA;  ── Creating dir ────────────────────────────────────────────────────────────────&#xA;  ✔ Creating &#39;/var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T/RtmpP86EN6/pipoac8920906d46/&#39;&#xA;  ✔ Setting active project to &#39;/private/var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T/RtmpP86EN6/pipoac8920906d46&#39;&#xA;  ✔ Creating &#39;R/&#39;&#xA;  ✔ Writing a sentinel file &#39;.here&#39;&#xA;  • Build robust paths within your project via `here::here()`&#xA;  • Learn more at &amp;lt;https://here.r-lib.org&amp;gt;&#xA;  ✔ Setting active project to &#39;&amp;lt;no active project&amp;gt;&#39;&#xA;  ✔ Created package directory&#xA;  ── Copying package skeleton ────────────────────────────────────────────────────&#xA;  ✔ Copied app skeleton&#xA;  ── Done ────────────────────────────────────────────────────────────────────────&#xA;  A new mariobox named pipoac8920906d46 was created at /private/var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T/RtmpP86EN6/pipoac8920906d46 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, you’ll find the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fs::dir_tree(path_pipo)&#xA;  /var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T//RtmpP86EN6/pipoac8920906d46&#xA;  ├── DESCRIPTION&#xA;  ├── NAMESPACE&#xA;  ├── R&#xA;  │   ├── get_health.R&#xA;  │   └── run_plumber.R&#xA;  ├── dev&#xA;  │   └── run_dev.R&#xA;  ├── inst&#xA;  │   └── mariobox.yml&#xA;  ├── man&#xA;  │   └── run_api.Rd&#xA;  └── tests&#xA;      ├── testthat&#xA;      │   ├── test-health.R&#xA;      │   └── test-run_plumber.R&#xA;      └── testthat.R&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default API comes with one default endpoint, &lt;code&gt;/health&lt;/code&gt;, which returns a 200 with the “ok” text.&lt;/p&gt; &#xA;&lt;p&gt;We’ve made the choice to organise your API inside a YAML, so that you can be as close as possible to a package structure. &lt;code&gt;{mariobox}&lt;/code&gt; will then do a little bit of its magic and parse this YAML to build the &lt;code&gt;{plumber}&lt;/code&gt; API.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  metadata:&#xA;     title: mariobox API&#xA;   handles:&#xA;     health_get:&#xA;       methods: GET&#xA;       path: /health&#xA;       handler: health&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add/Remove endpoints&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;{mariobox}&lt;/code&gt; comes with a series of functions to add endpoints to your app. The generic one is &lt;code&gt;add_endpoint&lt;/code&gt;, that allows you to pass any HTTP verb, and add_get and friends are wrappers around this function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;add_endpoint(&#xA;  name = &#34;allo&#34;,&#xA;  method = &#34;GET&#34;,&#xA;  open = FALSE,&#xA;  pkg = path_pipo&#xA;)&#xA;  ✔ Endpoint added&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce the following R file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  #&#39; GET allo&#xA;  #&#39; &#xA;  #&#39; @param req,res HTTP objects&#xA;  #&#39; &#xA;  #&#39; @export&#xA;  #&#39;  &#xA;  get_allo &amp;lt;- function(req, res){&#xA;      mariobox::mario_log(&#xA;          method = &#34;GET&#34;,&#xA;          name = &#34;allo&#34;&#xA;      )&#xA;      get_allo_f()&#xA;  }&#xA;   &#xA;  #&#39; GET allo internal&#xA;  #&#39; &#xA;  #&#39; @noRd&#xA;  #&#39;  &#xA;  get_allo_f &amp;lt;- function(){&#xA;      return(&#39;ok&#39;)&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;add_get(&#xA;  name = &#34;hey&#34;,&#xA;  open = FALSE,&#xA;  pkg = path_pipo&#xA;)&#xA;  ✔ Endpoint added&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fs::dir_tree(path_pipo)&#xA;  /var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T//RtmpP86EN6/pipoac8920906d46&#xA;  ├── DESCRIPTION&#xA;  ├── NAMESPACE&#xA;  ├── R&#xA;  │   ├── get_allo.R&#xA;  │   ├── get_health.R&#xA;  │   ├── get_hey.R&#xA;  │   └── run_plumber.R&#xA;  ├── dev&#xA;  │   └── run_dev.R&#xA;  ├── inst&#xA;  │   └── mariobox.yml&#xA;  ├── man&#xA;  │   └── run_api.Rd&#xA;  └── tests&#xA;      ├── testthat&#xA;      │   ├── test-get_allo.R&#xA;      │   ├── test-get_hey.R&#xA;      │   ├── test-health.R&#xA;      │   └── test-run_plumber.R&#xA;      └── testthat.R&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The YALML is automatically updated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  metadata:&#xA;     title: mariobox API&#xA;   handles:&#xA;     health_get:&#xA;       methods: GET&#xA;       path: /health&#xA;       handler: health&#xA;     allo_get:&#xA;       methods: GET&#xA;       path: /allo&#xA;       handler: get_allo&#xA;     hey_get:&#xA;       methods: GET&#xA;       path: /hey&#xA;       handler: get_hey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remove_endpoint(&#xA;  name = &#34;allo&#34;,&#xA;  method = &#34;GET&#34;,&#xA;  pkg = path_pipo&#xA;)&#xA;  ✔ Endpoint removed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fs::dir_tree(path_pipo)&#xA;  /var/folders/5z/rm2h62lj45d332kfpj28c8zm0000gn/T//RtmpP86EN6/pipoac8920906d46&#xA;  ├── DESCRIPTION&#xA;  ├── NAMESPACE&#xA;  ├── R&#xA;  │   ├── get_health.R&#xA;  │   ├── get_hey.R&#xA;  │   └── run_plumber.R&#xA;  ├── dev&#xA;  │   └── run_dev.R&#xA;  ├── inst&#xA;  │   └── mariobox.yml&#xA;  ├── man&#xA;  │   └── run_api.Rd&#xA;  └── tests&#xA;      ├── testthat&#xA;      │   ├── test-get_allo.R&#xA;      │   ├── test-get_hey.R&#xA;      │   ├── test-health.R&#xA;      │   └── test-run_plumber.R&#xA;      └── testthat.R&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The YALML is automatically updated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  metadata:&#xA;     title: mariobox API&#xA;   handles:&#xA;     health_get:&#xA;       methods: GET&#xA;       path: /health&#xA;       handler: health&#xA;     hey_get:&#xA;       methods: GET&#xA;       path: /hey&#xA;       handler: get_hey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;About endpoint functions&lt;/h3&gt; &#xA;&lt;p&gt;All endpoint functions will be in the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;METHOD_NAME &amp;lt;- function(req, res) {&#xA;  METHOD_NAME_f()&#xA;}&#xA;&#xA;METHOD_NAME_f &amp;lt;- function() {&#xA;  return(&#34;ok&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;METHOD&lt;/code&gt; is the HTTP verb and &lt;code&gt;name&lt;/code&gt; is the name you’ve set in your function.&lt;/p&gt; &#xA;&lt;p&gt;This format might seem weird, but the idea is to separate the concerns in the following format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;METHOD_NAME() will handle the http elements (login, headers..)&lt;/li&gt; &#xA; &lt;li&gt;METHOD_NAME_f() will be a standard function returning data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That way, you can handle the data manipulation function just like a plain standard one, test it, interact with it, etc, without having to care about the HTTP part.&lt;/p&gt; &#xA;&lt;h2&gt;Running the API&lt;/h2&gt; &#xA;&lt;p&gt;In dev, you can launch the file at dev/run_dev.R.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;source(&#34;dev/run_dev.R&#34;, echo = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In production, the &lt;code&gt;run_api()&lt;/code&gt; is in charge of running the API.&lt;/p&gt; &#xA;&lt;p&gt;If you want to deloy to RStudio Connect, the &lt;code&gt;build_plumber_file()&lt;/code&gt; function will create a &lt;code&gt;plumber.R&lt;/code&gt; file at the root of your folder. You can deploy using this file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;build_plumber_file(pkg = path_pipo)&#xA;  ℹ Loading pipoac8920906d46&#xA;  ✔ plumber.R file created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce the following file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  library(plumber)&#xA;   &#xA;  #* @apiTitle mariobox API&#xA;   &#xA;  pkgload::load_all()&#xA;   &#xA;   &#xA;  #* @get /health&#xA;  health&#xA;   &#xA;  #* @get /hey&#xA;  get_hey&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kids-first/clovoc-app-fhir-tabulator</title>
    <updated>2022-09-19T01:40:47Z</updated>
    <id>tag:github.com,2022-09-19:/kids-first/clovoc-app-fhir-tabulator</id>
    <link href="https://github.com/kids-first/clovoc-app-fhir-tabulator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CLOVoc App FHIR Tabulator&lt;/h1&gt; &#xA;&lt;p&gt;The CLOVoc App FHIR Tabulator pulls JSON resources from a FHIR API, tabluates against custom table descriptions, and exports as tabular files.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure R is installed on your local machine or remote server where the tabulator is deployed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:kids-first/clovoc-app-fhir-tabulator.git&#xA;$ cd clovoc-app-fhir-tabulator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;FHIR_API_URL=&#34;YOUR-FHIR-API-URL&#34;&#xA;FHIR_API_COOKIE=&#34;YOUR-FHIR-API-COOKIE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Put the list of cohort patients&#39; FHIR resource IDs udner the &lt;code&gt;./input&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the scripts. For example:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ R &amp;lt; ./participant_details.R --save|--no-save|--vanilla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;A tabular export will be created under the &lt;code&gt;./output&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To contribute to this repository, please follow &lt;a href=&#34;https://google.github.io/styleguide/Rguide.html&#34;&gt;Google&#39;s R Stype Guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the linter &lt;code&gt;./scripts/prettify.sh /path/to/code&lt;/code&gt; before pushing commits.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>profandyfield/discovr</title>
    <updated>2022-09-19T01:40:47Z</updated>
    <id>tag:github.com,2022-09-19:/profandyfield/discovr</id>
    <link href="https://github.com/profandyfield/discovr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;discovr package for R to accompany Discovering Statistics Using R and RStudio&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;discovr: Resources for Discovering Statistics Using R and RStudio (Field, 2023)&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;div style=&#34;float: right&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/discovr_hex.png&#34; width=&#34;150&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This package is incomplete but under active development. Check back here for updates/new tutorials.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;code&gt;discovr&lt;/code&gt; package contains resources for my 2023 textbook &lt;a href=&#34;https://www.discovr.rocks/&#34;&gt;Discovering Statistics Using &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; and &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt;&lt;/a&gt;. There are tutorials written using &lt;a href=&#34;https://rstudio.github.io/learnr/&#34;&gt;learnr&lt;/a&gt;. Once a tutorial is running it’s a bit like reading a book but with places where you can practice the &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; code that you have just been taught. The &lt;code&gt;discovr&lt;/code&gt; package is free and offered to support tutors and students using my textbook who want to learn &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing &lt;code&gt;discovr&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To use &lt;code&gt;discovr&lt;/code&gt; you first need to install &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; and &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; and familiarise yourself with &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt;, &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; and good workflow practice. You can do this using &lt;a href=&#34;http://milton-the-cat.rocks/learnr/r/r_getting_started/&#34;&gt;this interactive tutorial&lt;/a&gt;. Once you have installed &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; and &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; you can install &lt;code&gt;discovr&lt;/code&gt;. The package is in development so you have to install it from github. To install the package execute (in &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(remotes)){&#xA;  install.packages(&#39;remotes&#39;)&#xA;}&#xA;&#xA;remotes::install_github(&#34;profandyfield/discovr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are trying to install on a networked computer the install might fail (it’s to do install.packages not liking UNC paths, which I’m not even going to pretend to understand). The solution is to specify the location of your &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; library at the point of install. Most networks will map network locations to a drive name (for example, at my own University, users accounts are on the ‘N’ drive). Find the location of your &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; library (e.g., &lt;code&gt;N:/Documents/R/win-library/3.5&lt;/code&gt;), possibly executing &lt;code&gt;.libPaths()&lt;/code&gt; to help you, and specify this location using the &lt;code&gt;lib&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;profandyfield/discovr&#34;, lib = &#34;N:/Documents/R/win-library/3.5&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interactive tutorials&lt;/h2&gt; &#xA;&lt;p&gt;I recommend working through &lt;a href=&#34;http://milton-the-cat.rocks/learnr/r/r_getting_started/&#34;&gt;this tutorial&lt;/a&gt; on how to install, set up and work within &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; and &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; before starting the interactive tutorials.&lt;/p&gt; &#xA;&lt;h3&gt;List of tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_01&lt;/strong&gt;: Key concepts in &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; (functions and objects, packages and functions, style, data types, tidyverse, tibbles)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_02&lt;/strong&gt;: Summarizing data (frequency distributions, grouped frequency distributions, relative frequencies, histograms, mean, median, variance, standard deviation, interquartile range)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_03&lt;/strong&gt;: Confidence intervals: interactive app demonstrating what a confidence interval is, computing normal and bootstrap confidence intervals using &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt;, adding confidence intervals to data summaries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_05&lt;/strong&gt;: Visualizing data. The ggplot2 package, boxplots, plotting means, violin plots, scatterplots, grouping by colour, grouping using facets, adjusting scales, adjusting positions.”&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_06&lt;/strong&gt;: The beast of bias. Restructuring data from messy to tidy format (and back). Spotting outliers using histograms and boxplots. Calculating &lt;em&gt;z&lt;/em&gt;-scores (standardizing scores). Writing your own function. Using z-scores to detect outliers. Q-Q plots. Calculating skewness, kurtosis and the number of valid cases. Grouping summary statistics by multiple categorical/grouping variables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_07&lt;/strong&gt;: Associations. Plotting data with GGally. Pearson’s &lt;em&gt;r&lt;/em&gt;, Spearman’s Rho, Kendall’s tau, robust correlations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_08&lt;/strong&gt;: The general linear model (GLM). Visualizing the data, fitting GLMs with one and two predictors. Viewing model parameters with broom, model parameters, standard errors, confidence intervals, fit statistics, significance, Bayes factors and Bayesian estimates (using default priors).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_09&lt;/strong&gt;: Categorical predictors with two categories (comparing two means). Comparing two independent means, comparing two related means, effect sizes, robust comparisons of means (independent and related), Bayes factors and estimation (independent and related means).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_10&lt;/strong&gt;: Moderation and mediation. Centring variables (grand mean centring), specifying interaction terms, moderation analysis, simple slopes analysis, Johnson-Neyman intervals, mediation with one predictor, direct and indirect effects, mediation using &lt;code&gt;lavaan&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_11&lt;/strong&gt;: Comparing several means. Essentially ‘One-way independent ANOVA’ but taught using a general linear model framework. Covers setting contrasts (dummy coding, contrast coding, and linear and quadratic trends), the &lt;em&gt;F&lt;/em&gt;-statistic and Welch’s robust &lt;em&gt;F&lt;/em&gt;, robust parameter estimation, heteroscedasticity-consistent tests of parameters, robust tests of means based on trimmed data, &lt;em&gt;post hoc&lt;/em&gt; tests, Bayes factors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_12&lt;/strong&gt;: Comparing means adjusted for other variables. Essentially ‘Analysis of Covariance (ANCOVA)’ designs but taught using a general linear model framework. Covers setting contrasts, Type III sums of squares, the &lt;em&gt;F&lt;/em&gt;-statistic, robust parameter estimation, heteroscedasticity-consistent tests of parameters, robust tests of adjusted means, &lt;em&gt;post hoc&lt;/em&gt; tests, Bayes factors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_13&lt;/strong&gt;: Factorial designs. Fitting models for two-way factorial designs (independent measures) using both &lt;code&gt;lm()&lt;/code&gt; and the &lt;code&gt;afex&lt;/code&gt; package. This tutorial builds on previous ones to show how models can be fit with two categorical predictors to look at the interaction between them. We look at fitting the models, setting contrasts for the two categorical predictors, obtaining estimated marginal means, interaction plots, simple effects analysis, diagnostic plots, partial eta-squared and partial omega-squared, robust models and Bayes factors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_14&lt;/strong&gt;: Multilevel models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_15&lt;/strong&gt;: Repeated measures designs. Fitting models for one- and two-way repeated measures designs using the &lt;code&gt;afex&lt;/code&gt; package. This tutorial builds on previous ones to show how models can be fit with one or two categorical predictors when these variables have been manipulated within the same entities. We look at fitting the models, setting contrasts for the categorical predictors, obtaining estimated marginal means, interaction plots, simple effects analysis, diagnostic plots, robust models and Bayes factors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_16&lt;/strong&gt;: Mixed designs. Fitting models for mixed designs using the &lt;code&gt;afex&lt;/code&gt; package. This tutorial builds on previous ones to show how models can be fit with one or two categorical predictors when at least one of these variables has been manipulated within the same entities and at least one other has been manipulated using different entities. We look at fitting the models, setting contrasts for the categorical predictors, obtaining estimated marginal means, interaction plots, simple effects analysis, diagnostic plots, robust models and Bayes factors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_18&lt;/strong&gt;: Exploratory Factor Analysis (EFA). Applying factor analysis using the &lt;code&gt;psych&lt;/code&gt; package. This tutorial uses a fictitious questionnaire (the &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt; Anxiety Scale, RAQ) with 23 items to show how EFA can be used to identify clusters of items that may, or may not, represent constructs associated with anxiety about using &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/r_logo.png&#34; width=&#34;18&#34;&gt;. We look at inspecting the correlation matrix, obtaining the Bartlett test and KMO statistics, using parallel analysis to determine the number of factors to extract, extracting factors, rotating the solution nd interpretation of the factors. We also learn to obtain Cronbach’s alpha on each of the subscales.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_19&lt;/strong&gt;: Categorical variables. Entering categorical data, contingency tables, associations between categorical variables, the chi-square test, standardized residuals, Fisher’s exact test.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;discovr_20&lt;/strong&gt;: Categorical outcomes (logistic regression). This tutorial builds on previous ones to show how the general linear model model extends to situations where you want to predict a binary outcome (logistic regression). We look at fitting the models and interpretting the odds ratio.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running a tutorial&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; Version 1.3 onwards there is a tutorial pane. Having executed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(discovr)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A list of tutorials appears in this pane. Scroll through them and click on the &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/start_tutorial.png&#34; width=&#34;64&#34;&gt; button to run the tutorial:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/run_tutorial_pane_discovr.png&#34; width=&#34;700&#34;&gt; &#xA;&lt;p&gt;Alternatively, to run a particular tutorial from the console execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(discovr)&#xA;learnr::run_tutorial(&#34;name_of_tutorial&#34;, package = &#34;discovr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and replace “name of tutorial” with the name of the tutorial you want to run. For example, to run tutorial 2 execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;learnr::run_tutorial(&#34;discovr_02&#34;, package = &#34;discovr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The name of each tutorial is in bold in the list above. Once the command to run the tutorial is executed it will spring to life in a web browser.&lt;/p&gt; &#xA;&lt;h3&gt;Suggested workflow&lt;/h3&gt; &#xA;&lt;p&gt;The tutorials are self-contained (you practice code in code boxes) so you don’t need to use &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; at the same time. However, to get the most from them I would recommend that you create an &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; project and within that open (and save) a new RMarkdown file each time to work through a tutorial. Within that Markdown file, replicate parts of the code from the tutorial (in code chunks) and use Markdown to write notes about what you have done, and to reflect on things that you have struggled with, or note useful tips to help you remember things. Basically, write a learning journal. This workflow has the advantage of not just teaching you the code that you need to do certain things, but also provides practice in using &lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/data-raw/images/rstudio_logo.png&#34; width=&#34;48&#34;&gt; itself.&lt;/p&gt; &#xA;&lt;p&gt;See this video explaining my suggested workflow:&lt;/p&gt; &amp;lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/FhoYCsZttGc&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&amp;gt; &amp;lt;/iframe&amp;gt; &#xA;&lt;h2&gt;Colour palettes&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by the &lt;a href=&#34;https://github.com/johnmackintosh/rockthemes&#34;&gt;rockthemes&lt;/a&gt; package and adapting code form that package I have come up with a bunch of colour themes based around the studio albums of my favourite band &lt;a href=&#34;https://www.ironmaiden.com&#34;&gt;Iron Maiden&lt;/a&gt;. Full disclosure, I’m not a designer, so this largely involved uploading images of their sleeves to &lt;a href=&#34;https://colorpalettefromimage.com&#34;&gt;colorpalettefromimage.com&lt;/a&gt; and seeing what happened. If you have a better palette design send me the hex codes for the colours! If you’re wondering why some albums are missing, here’s the explanation: X Factor (would basically be 8 shades of gray), Fear of the Dark (shit album), The Book of Souls (would basically be 8 shades of black).&lt;/p&gt; &#xA;&lt;p&gt;There is also a colourblind-friendly colour pallette from&lt;/p&gt; &#xA;&lt;p&gt;The following palettes exist.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;amolad_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/a-matter-of-life-and-death&#34;&gt;A Matter of Life and Death&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_amolad()&lt;/code&gt; and &lt;code&gt;scale_fill_amolad()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bnw_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/brave-new-world&#34;&gt;Brave New World&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_bnw()&lt;/code&gt; and &lt;code&gt;scale_fill_bnw()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dod_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/dance-of-death&#34;&gt;Dance of Death&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_dod()&lt;/code&gt; and &lt;code&gt;scale_fill_dod()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;frontier_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/the-final-frontier&#34;&gt;The Final Frontier&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_frontier()&lt;/code&gt; and &lt;code&gt;scale_fill_frontier()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;im_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/iron-maiden&#34;&gt;eponymous&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_im()&lt;/code&gt; and &lt;code&gt;scale_fill_im()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;killers_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/killers&#34;&gt;Killers&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_killers()&lt;/code&gt; and &lt;code&gt;scale_fill_killers()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nob_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/the-number-of-the-beast-album&#34;&gt;The Number of the Beast&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_nob()&lt;/code&gt; and &lt;code&gt;scale_fill_nob()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;okabe_ito_pal&lt;/code&gt;: Colourblind-friendly palette (8 colour) from &lt;a href=&#34;https://jfly.uni-koeln.de/color/&#34;&gt;Okabe and Ito&lt;/a&gt;. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_oi()&lt;/code&gt; and &lt;code&gt;scale_fill_oi()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pom_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/piece-of-mind&#34;&gt;Piece of Mind&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_pom()&lt;/code&gt; and &lt;code&gt;scale_fill_pom()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;power_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/powerslave&#34;&gt;Powerslave&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_power()&lt;/code&gt; and &lt;code&gt;scale_fill_power()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prayer_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/no-prayer-for-the-dying&#34;&gt;No Prayer for the Dying&lt;/a&gt; album sleeve. Use &lt;code&gt;scale_color_prayer()&lt;/code&gt; and &lt;code&gt;scale_fill_prayer()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;senjutsu_pal()&lt;/code&gt;: Colour palette (10 colour) based on the inner gatefold image of Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/senjutsu&#34;&gt;Senjutsu album&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_senjutsu()&lt;/code&gt; and &lt;code&gt;scale_fill_senjutsu()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sit_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/somewhere-in-time&#34;&gt;Somewhere in Time&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_sit()&lt;/code&gt; and &lt;code&gt;scale_fill_sit()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ssoass_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/seventh-son-of-a-seventh-son&#34;&gt;Seventh Son of a Seventh Son&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_ssoass()&lt;/code&gt; and &lt;code&gt;scale_fill_ssoass()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;virtual_pal()&lt;/code&gt;: Colour palette (8 colour) based on Iron Maiden’s &lt;a href=&#34;https://www.ironmaiden.com/discography/details/virtual-xi&#34;&gt;Virtual IX&lt;/a&gt; album sleeve. In &lt;code&gt;ggplot2&lt;/code&gt; use &lt;code&gt;scale_color_virtual()&lt;/code&gt; and &lt;code&gt;scale_fill_virtual()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To view the palette execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;scales::show_col(name_of_palette()(8))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replacing &lt;code&gt;name_of_palette()&lt;/code&gt; with the name, for example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;scales::show_col(pom_pal()(8))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To apply, for example, the Powerslave palette to the colours of a &lt;code&gt;ggplot2&lt;/code&gt; plot add &lt;code&gt;scale_color_power()&lt;/code&gt; as a layer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;# Get albums in the classic era from the discovr::eddiefy data.&#xA;# I&#39;m not including fear of the dark because it&#39;s not in any way classic.&#xA;# No prayer for the dying was pushing its luck too if I&#39;m honest.&#xA;&#xA;classic_era &amp;lt;- subset(discovr::eddiefy, year &amp;lt; 1992)&#xA;#&amp;gt; Loading required package: lubridate&#xA;#&amp;gt; &#xA;#&amp;gt; Attaching package: &#39;lubridate&#39;&#xA;#&amp;gt; The following objects are masked from &#39;package:base&#39;:&#xA;#&amp;gt; &#xA;#&amp;gt;     date, intersect, setdiff, union&#xA; &#xA;ggplot(classic_era, aes(x = energy, y = valence, color = album_name)) +&#xA;  geom_point(size = 2) +&#xA;  discovr::scale_color_power() +&#xA;  theme_minimal()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/man/figures/README-unnamed-chunk-9-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;Similarly to apply the Powerslave palette to the fill of objects in a ggplot add &lt;code&gt;scale_fill_power()&lt;/code&gt; as a layer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(classic_era, aes(x = album_name, y = valence, fill = album_name)) +&#xA;  geom_violin() +&#xA;  discovr::scale_fill_power() + &#xA;  theme(axis.text.x = element_text(angle = 45)) +&#xA;  theme_minimal()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/profandyfield/discovr/master/man/figures/README-unnamed-chunk-10-1.png&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Datasets&lt;/h2&gt; &#xA;&lt;p&gt;See the book or data descriptions for more details. This is a list of available datasets within the package. Raw CSV files are available from the book’s website.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;acdc&lt;/strong&gt;: Data about whether Bon Scott or Brian Johnson is the best singer of AC/DC. For details execute &lt;code&gt;?acdc&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;album_sales&lt;/strong&gt;: fictitious data about predicting album sales from advertising, airplay and the band’s image. For details execute &lt;code&gt;?album_sales&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;alien_scents&lt;/strong&gt;: fictitious data about training sniffer dogs to detect alien space lizards when they try to mask their identity with different scents. For details execute &lt;code&gt;?alien_scents&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;animal_bride&lt;/strong&gt;: fictitious data about life satisfaction when married to a dog or a goat. For details execute &lt;code&gt;?animal_bride&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beckham_1929&lt;/strong&gt;: Data from a study by Beckham (1929). For details execute &lt;code&gt;?beckham_1929&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;big_hairy_spider&lt;/strong&gt;: fictitious data about whether anxiety is greater after exposure to real spiders or pictures of spiders. For details execute &lt;code&gt;?big_hairy_spider&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;biggest_liar&lt;/strong&gt;: fictitious data about creativity and telling lies. For details execute &lt;code&gt;?biggest_liar&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;bronstein_2019&lt;/strong&gt;: Data about whether delusion proneness predicts belief in fake news because of less analytic thinking. For details execute &lt;code&gt;?bronstein_2019&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;bronstein_miss_2019&lt;/strong&gt;: The data in [bronstein_2019] but with missing values inserted using MCAR amputation. For details execute &lt;code&gt;?bronstein_miss_2019&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;catterplot&lt;/strong&gt;: fictitious data for plotting a catterplot. For details execute &lt;code&gt;?catterplot&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cat_dance&lt;/strong&gt;: fictitious data about training cats to dance. For details execute &lt;code&gt;?cat_dance&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cat_reg&lt;/strong&gt;: fictitious data about training cats to dance. For details execute &lt;code&gt;?cat_reg&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cetinkaya_2006&lt;/strong&gt;: data from a study by Cetinkaya and Domjan (2006) about quails with sexual fetishes. Seriously. For details execute &lt;code&gt;?cetinkaya_2006&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;chamorro_premuzic&lt;/strong&gt;: Data about what students want (personality wise) from their lecturers. For details execute &lt;code&gt;?chamorro_premuzic&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;child_aggression&lt;/strong&gt;: fictitious data (based on real research) about predicting aggression in children. For details execute &lt;code&gt;?child_aggression&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;coldwell_2006&lt;/strong&gt;: Data predicting childhood adjustment from various parenting variables. For details execute &lt;code&gt;?coldwell_2006&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cosmetic&lt;/strong&gt;: Fictitious multilevel data predicting quality of life from cosmetic surgery. For details execute &lt;code&gt;?cosmetic&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;daniels_2012&lt;/strong&gt;: Data about the effects of sexualised sports images on self-image. For details execute &lt;code&gt;?daniels_2012&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;dark_lord&lt;/strong&gt;: fictitious data about the subliminal messages in songs. For details execute &lt;code&gt;?dark_lord&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;davey_2003&lt;/strong&gt;: Data about the effects mood and stop rules on checking behaviour. For details execute &lt;code&gt;?davey_2003&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;download&lt;/strong&gt;: fictitious data about the download music festival and being smelly. For details execute &lt;code&gt;?download&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;df_beta&lt;/strong&gt;: fictitious data used to illustrate the DF Beta statistic. For details execute &lt;code&gt;?df_beta&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;eel&lt;/strong&gt;: Fictitious data about a randomized control trial to test whether eel therapy is an effective treatment of constipation. For details execute &lt;code&gt;?eel&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;elephooty&lt;/strong&gt;: Fictitious data about elephants playing football (soccer). For details execute &lt;code&gt;?elephooty&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;escape&lt;/strong&gt;: Fictitious data about whether I’m a better songwriter than my old bandmate Malcolm &lt;code&gt;?escape&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;essay_marks&lt;/strong&gt;: fictitious data about essay marking. For details execute &lt;code&gt;?essay_marks&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;exam_anxiety&lt;/strong&gt;: fictitious data about exam performance, anxiety and revision. For details execute &lt;code&gt;?exam_anxiety&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;gallup_2003&lt;/strong&gt;: Data that tests a hypothesis about why penises have a bell end. For details execute &lt;code&gt;?gallup_2003&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;gelman_2009&lt;/strong&gt;: Data used to critically evaluate the explanations (and claim) that there are more beautiful women than men in the world. For details execute &lt;code&gt;?gelman_2009&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;glastonbury&lt;/strong&gt;: More fictitious data about music festivals and being smelly. For details execute &lt;code&gt;?glastonbury&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;goggles&lt;/strong&gt;: fictitious data about whether alcohol affects perception of physical attractiveness. For details execute &lt;code&gt;?goggles&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;grades&lt;/strong&gt;: fictitious data about statistics grades. For details execute &lt;code&gt;?grades&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hangover&lt;/strong&gt;: fictitious data about the efficacy of different drinks as cures for a hangover. For details execute &lt;code&gt;?hangover&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hiccups&lt;/strong&gt;: fictitious data on digital rectal stimulation and hiccups. For details execute &lt;code&gt;?hiccups&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hill_2007&lt;/strong&gt;: Data from Hill et al.&amp;nbsp;(2007) testing the effect of different forms of psychoeducation on exercise behaviour. For details execute &lt;code&gt;?hill_2007&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;honesty_lab&lt;/strong&gt;: fictitious data about perceptions of honesty. For details execute &lt;code&gt;?honesty_lab&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ice_bucket&lt;/strong&gt;: Data about the ice bucket challenge. For details execute &lt;code&gt;?ice_bucket&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;invisibility_base&lt;/strong&gt;: Fictitious data about how much mischief people would get up to if they had an invisibility cloak using a pre-post study design.&lt;code&gt;?invisibility_base&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;invisibility_cloak&lt;/strong&gt;: fictitious data about how much mischief people would get up to if they had an invisibility cloak using an independent design. For details execute &lt;code&gt;?invisibility_cloak&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;invisibility_rm&lt;/strong&gt;: fictitious data about how much mischief people would get up to if they had an invisibility cloak but using a repeated measures design. For details execute &lt;code&gt;?invisibility_rm&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;jiminy_cricket&lt;/strong&gt;: fictitious data about whether wishing on a star makes you successful. For details execute &lt;code&gt;?jiminy_cricket&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;johns_2012&lt;/strong&gt;: Data about whether the colour red is a mating signal to men. For details execute &lt;code&gt;?johns_2012&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;lambert_2012&lt;/strong&gt;: Data about whether pornography use is related to relationhsip commitment and infidelity. For details execute &lt;code&gt;?lambert_2012&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;massar_2012&lt;/strong&gt;: Data about whether gossiping has an evolutionary function. For details execute &lt;code&gt;?massar_2012&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mcnulty_2008&lt;/strong&gt;: Simulated data to match the results of a study about whether attractivenes sis linked to the support given within a relationship. For details execute &lt;code&gt;?mcnulty_2008&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;men_dogs&lt;/strong&gt;: fictitious data about whether men exhibit dog-like behaviours (compared to dogs). For details execute &lt;code&gt;?men_dogs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;metal&lt;/strong&gt;: Fictitious data about whether listening to metal music makes you angry &lt;code&gt;?metal&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;metal_health&lt;/strong&gt;: fictitious data about whether listening to heavy metal negatively affects mental health. For details execute &lt;code&gt;?metal_health&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;metallica&lt;/strong&gt;: Data about thrash metal band, Metallica. For details execute &lt;code&gt;?metallica&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;miller_2007&lt;/strong&gt;: Data from Miller et al.&amp;nbsp;(2007) testing the hidden-estrus theory. For details execute &lt;code&gt;?miller_2007&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;murder&lt;/strong&gt;: fictitious data about the number of murder each month at three street locations (Ruskin Avenue, Acacia Avenue and Rue Morgue). For details execute &lt;code&gt;?murder&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;muris_2008&lt;/strong&gt;: Data about whether you can train children to interpret ambiguous situations in a particular way. For details execute &lt;code&gt;?muris_2008&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nichols_2004&lt;/strong&gt;: Data from the development of the Internet Addiction Scale, IAS (Nichols &amp;amp; Nicki, 2004). For details execute &lt;code&gt;?nichols_2004&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;notebook&lt;/strong&gt;: fictitious data about whether watching the film the notebook is emotionally arousing. For details execute &lt;code&gt;?notebook&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ong_2011&lt;/strong&gt;: Data about social media profile pictures and personality traits. For details execute &lt;code&gt;?ong_2011&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ong_tidy&lt;/strong&gt;: Data about social media profile pictures and personality traits. For details execute &lt;code&gt;?ong_tidy&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;profile_pic&lt;/strong&gt;: Fictitious data related to whether the number of friend requests from random people on social media is affected by whether your profile picture depicts you as single or part of a romantic couple. For details execute &lt;code&gt;?profile_pic&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pubs&lt;/strong&gt;: Data illustrating the difference between an outlier and an influencial case. For details execute &lt;code&gt;?pubs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;puppies&lt;/strong&gt;: Fictitious data related to whether puppy therapy works. For details execute &lt;code&gt;?puppies&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;puppy_love&lt;/strong&gt;: Fictitious data related to whether puppy therapy works when you adjust for a person’s love of puppies. For details execute &lt;code&gt;?puppy_love&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;r_exam&lt;/strong&gt;: Fictitious data relating to an R exam at two universities. For details execute &lt;code&gt;?r_exam&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;raq&lt;/strong&gt;: Fictitious data relating to a fictional questionnaire about R anxiety that is not an actual questionnaire. For details execute &lt;code&gt;?raq&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;roaming_cats&lt;/strong&gt;: fictitious data about how far cats roam from their homes For details execute &lt;code&gt;?roaming_cats&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;santas_log&lt;/strong&gt;: Fictitious data related to whether the type and quantity of treat consumed on Christmas night affects whether elves successfully deliver presents. For details execute &lt;code&gt;?santas_log&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;self_help&lt;/strong&gt;: fictitious data about whether self-help books improve relationship satisfaction. For details execute &lt;code&gt;?self_help&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;self_help_dsur&lt;/strong&gt;: fictitious data about whether self-help books improve relationship satisfaction compared to statistics books. For details execute &lt;code&gt;?self_help_dsur&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;sharman_2015&lt;/strong&gt;: Data from Sharman &amp;amp; Dingle (2015) about whether listening to metal music increases anger &lt;code&gt;?sharman_2015&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shopping&lt;/strong&gt;: fictitious data about shopping For details execute &lt;code&gt;?shopping_exercise&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;sniffer_dogs&lt;/strong&gt;: fictitious data about training sniffer dogs to detect alien space lizards. For details execute &lt;code&gt;?sniffer_dogs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;social_anxiety&lt;/strong&gt;: fictitious (I think) data about whether social anxiety symptoms are specific to social anxiety. For details execute &lt;code&gt;?social_anxiety&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;social_media&lt;/strong&gt;: fictitious data about the effects of social media on grammar. For details execute &lt;code&gt;?social_media&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;soya&lt;/strong&gt;: fictitious data about the effects of eating soya on sperm count. For details execute &lt;code&gt;?soya&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;speed_date&lt;/strong&gt;: Fictitious data related to the extent to which interest in dating someone is affected by their looks, personality or the dating strategy they adopt. For details execute &lt;code&gt;?speed_date&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;stalker&lt;/strong&gt;: fictitious data about therapy for stalking. For details execute &lt;code&gt;?stalker&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;students&lt;/strong&gt;: I can’t even remember what this data file contains. For details execute &lt;code&gt;?student&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;superhero&lt;/strong&gt;: fictitious data about whether wearing different superhero costumes leads to more severe physical injuries. For details execute &lt;code&gt;?superhero&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;supermodel&lt;/strong&gt;: fictitious data about supermodel salaries. For details execute &lt;code&gt;?supermodel&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;switch&lt;/strong&gt;: Fictitious data relating to whether injuries from playing video console games can be mitigated by a warm up.&lt;code&gt;?switch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tablets&lt;/strong&gt;: fictitious data about predicting the desirability of computing tablets. For details execute &lt;code&gt;?tablets&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tea_15&lt;/strong&gt;: fictitious data based on real data about cognitive functioning and drinking tea. For details execute &lt;code&gt;?tea_makes_you_brainy_15&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tea_716&lt;/strong&gt;: fictitious data based on real data about cognitive functioning and drinking tea. For details execute &lt;code&gt;?tea_makes_you_brainy_716&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;teaching&lt;/strong&gt;: fictitious data about the success of different methods of teaching. For details execute &lt;code&gt;?teaching&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;teach_method&lt;/strong&gt;: more fictitious data about the success of different methods of teaching. For details execute &lt;code&gt;?teach_method&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tosser&lt;/strong&gt;: Fictitious data relating to a fictional questionnaire about The Teaching of Statistics for Scientific Experiments, which is fictional. For details execute &lt;code&gt;?tosser&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tuk_2011&lt;/strong&gt;: Data about whether needing to urinate helps decision making. For details execute &lt;code&gt;?tuk_2011&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tumour&lt;/strong&gt;: fictitious data about mobile phone use and brain tumours. For details execute &lt;code&gt;?tumour&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;van_bourg_2020&lt;/strong&gt;: Data from van Bourg et al (2020) relating to whether dogs would release their distressed owners from a box. For details execute &lt;code&gt;?van_bourg_2020&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;video_games&lt;/strong&gt;: fictitious data about the relationship between video game use, callous unemotional traits and aggression. For details execute &lt;code&gt;?video_games&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;williams&lt;/strong&gt;: Data relating to the development of a questionnaire to measure organizational ability. For details execute &lt;code&gt;?williams&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;xbox&lt;/strong&gt;: Fictitious data relating injuries to the type of video console game played and the console it was played on. For details execute &lt;code&gt;?xbox&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;zhang_sample&lt;/strong&gt;: Data about whether performing a maths test under a different name assists performance. For details execute &lt;code&gt;?zhang_2013_subsample&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;zibarras_2008&lt;/strong&gt;: Data from Zibarras, Port, and Woods (2008) relating to the relationship between personality and creativity. For details execute &lt;code&gt;?zibarras_2008&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;zombie_growth&lt;/strong&gt;: fictitious data that mimics a randomised control trial over time testing an intervention to transform zombies back to their pre-zombified state. For details execute &lt;code&gt;?zombie_growth&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;zombie_rehab&lt;/strong&gt;: fictitious data that mimics a randomised control trial testing an intervention to transform zombies back to their pre-zombified state in different clinics. For details execute &lt;code&gt;?zombie_rehab&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Smart Alex solutions&lt;/h2&gt; &#xA;&lt;p&gt;Solutions for end of chapter tasks are available at &lt;a href=&#34;https://www.discovr.rocks/solutions/alex/&#34;&gt;www.discovr.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Labcoat Leni solutions&lt;/h2&gt; &#xA;&lt;p&gt;Solutions for the Labcoat Leni tasks are available at &lt;a href=&#34;https://www.discovr.rocks/solutions/leni/&#34;&gt;www.discovr.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Chapter code&lt;/h2&gt; &#xA;&lt;p&gt;Although I recommend working through the interactive solutions, each book Chapter has online code and a downloadable R Markdown file available from &lt;a href=&#34;https://www.discovr.rocks/solutions/code/&#34;&gt;www.discovr.rocks&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>