<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-03T01:41:13Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ddsjoberg/gtsummary</title>
    <updated>2022-10-03T01:41:13Z</updated>
    <id>tag:github.com,2022-10-03:/ddsjoberg/gtsummary</id>
    <link href="https://github.com/ddsjoberg/gtsummary" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Presentation-Ready Data Summary and Analytic Result Tables&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ddsjoberg/gtsummary/actions&#34;&gt;&lt;img src=&#34;https://github.com/ddsjoberg/gtsummary/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=gtsummary&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/gtsummary&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ddsjoberg/gtsummary?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ddsjoberg/gtsummary/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=gtsummary&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/gtsummary&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.32614/RJ-2021-053&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.32614/RJ-2021-053.svg?sanitize=true&#34; alt=&#34;DOI:10.32614/RJ-2021-053&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;gtsummary &lt;a href=&#34;https://github.com/ddsjoberg/gtsummary&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;120&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The {gtsummary} package provides an elegant and flexible way to create publication-ready analytical and summary tables using the &lt;strong&gt;R&lt;/strong&gt; programming language. The {gtsummary} package summarizes data sets, regression models, and more, using sensible defaults with highly customizable capabilities.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html&#34;&gt;&lt;strong&gt;Summarize data frames or tibbles&lt;/strong&gt;&lt;/a&gt; easily in &lt;strong&gt;R&lt;/strong&gt;. Perfect for presenting descriptive statistics, comparing group &lt;strong&gt;demographics&lt;/strong&gt; (e.g creating a &lt;strong&gt;Table 1&lt;/strong&gt; for medical journals), and more. Automatically detects continuous, categorical, and dichotomous variables in your data set, calculates appropriate descriptive statistics, and also includes amount of missingness in each variable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_regression.html&#34;&gt;&lt;strong&gt;Summarize regression models&lt;/strong&gt;&lt;/a&gt; in R and include reference rows for categorical variables. Common regression models, such as logistic regression and Cox proportional hazards regression, are automatically identified and the tables are pre-filled with appropriate column headers (i.e.&amp;nbsp;Odds Ratio and Hazard Ratio).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/index.html#section-general-formatting-styling-functions&#34;&gt;&lt;strong&gt;Customize gtsummary tables&lt;/strong&gt;&lt;/a&gt; using a growing list of formatting/styling functions. &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html&#34;&gt;Bold&lt;/a&gt;&lt;/strong&gt; labels, &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html&#34;&gt;italicize&lt;/a&gt;&lt;/strong&gt; levels, &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/add_p.html&#34;&gt;add p-value&lt;/a&gt;&lt;/strong&gt; to summary tables, &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/style_percent.html&#34;&gt;style&lt;/a&gt;&lt;/strong&gt; the statistics however you choose, &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/tbl_merge.html&#34;&gt;merge&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/tbl_stack.html&#34;&gt;stack&lt;/a&gt;&lt;/strong&gt; tables to present results side by sideâ€¦ there are so many possibilities to create the table of your dreams!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/inline_text.html&#34;&gt;Report statistics inline&lt;/a&gt;&lt;/strong&gt; from summary tables and regression summary tables in &lt;strong&gt;R markdown&lt;/strong&gt;. Make your reports completely reproducible!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By leveraging &lt;a href=&#34;https://broom.tidymodels.org/&#34;&gt;{broom}&lt;/a&gt;, &lt;a href=&#34;https://gt.rstudio.com/&#34;&gt;{gt}&lt;/a&gt;, and &lt;a href=&#34;http://larmarange.github.io/labelled/&#34;&gt;{labelled}&lt;/a&gt; packages, {gtsummary} creates beautifully formatted, ready-to-share summary and result tables in a single line of R code!&lt;/p&gt; &#xA;&lt;p&gt;Check out the examples below, review the &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/&#34;&gt;vignettes&lt;/a&gt; for a detailed exploration of the output options, and view the &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/gallery.html&#34;&gt;gallery&lt;/a&gt; for various customization examples.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The {gtsummary} package was written as a companion to the &lt;a href=&#34;https://gt.rstudio.com/&#34;&gt;{gt}&lt;/a&gt; package from RStudio. You can install {gtsummary} with the following code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;gtsummary&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the development version of {gtsummary} with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;ddsjoberg/gtsummary&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Summary Table&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/tbl_summary.html&#34;&gt;&lt;code&gt;tbl_summary()&lt;/code&gt;&lt;/a&gt; to summarize a data frame.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/ddsjoberg/gtsummary/raw/main/data-raw/misc_files/tbl_summary_demo1.gif&#34; alt=&#34;animated&#34; width=&#34;100%&#34;&gt; &#xA;&lt;p&gt;Example basic table:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gtsummary)&#xA;# make dataset with a few variables to summarize&#xA;trial2 &amp;lt;- trial %&amp;gt;% select(age, grade, response, trt)&#xA;&#xA;# summarize the data with our package&#xA;table1 &amp;lt;- tbl_summary(trial2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/README-tbl_summary_print_simple-1.png&#34; width=&#34;30%&#34;&gt; &#xA;&lt;p&gt;There are many &lt;strong&gt;customization options&lt;/strong&gt; to &lt;strong&gt;add information&lt;/strong&gt; (like comparing groups) and &lt;strong&gt;format results&lt;/strong&gt; (like bold labels) in your table. See the &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html&#34;&gt;&lt;code&gt;tbl_summary()&lt;/code&gt;&lt;/a&gt; tutorial for many more options, or below for one example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table2 &amp;lt;- &#xA;  tbl_summary(&#xA;    trial2,&#xA;    by = trt, # split table by group&#xA;    missing = &#34;no&#34; # don&#39;t list missing data separately&#xA;  ) %&amp;gt;%&#xA;  add_n() %&amp;gt;% # add column with total number of non-missing observations&#xA;  add_p() %&amp;gt;% # test for a difference between groups&#xA;  modify_header(label = &#34;**Variable**&#34;) %&amp;gt;% # update the column header&#xA;  bold_labels() &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/README-tbl_summary_print_extra-1.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;h3&gt;Regression Models&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/reference/tbl_regression.html&#34;&gt;&lt;code&gt;tbl_regression()&lt;/code&gt;&lt;/a&gt; to easily and beautifully display regression model results in a table. See the &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_regression.html&#34;&gt;tutorial&lt;/a&gt; for customization options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mod1 &amp;lt;- glm(response ~ trt + age + grade, trial, family = binomial)&#xA;&#xA;t1 &amp;lt;- tbl_regression(mod1, exponentiate = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/README-tbl_regression_printa-1.png&#34; width=&#34;40%&#34;&gt; &#xA;&lt;h3&gt;Side-by-side Regression Models&lt;/h3&gt; &#xA;&lt;p&gt;You can also present side-by-side regression model results using &lt;code&gt;tbl_merge()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(survival)&#xA;&#xA;# build survival model table&#xA;t2 &amp;lt;-&#xA;  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %&amp;gt;%&#xA;  tbl_regression(exponentiate = TRUE)&#xA;&#xA;# merge tables &#xA;tbl_merge_ex1 &amp;lt;-&#xA;  tbl_merge(&#xA;    tbls = list(t1, t2),&#xA;    tab_spanner = c(&#34;**Tumor Response**&#34;, &#34;**Time to Death**&#34;)&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/README-tbl_merge_ex1-1.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;p&gt;Review even more output options in the &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/gallery.html&#34;&gt;table gallery&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;gtsummary + R Markdown&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;{gtsummary}&lt;/strong&gt; package was written to be a companion to the &lt;strong&gt;{gt}&lt;/strong&gt; package from RStudio. But not all output types are supported by the &lt;strong&gt;{gt}&lt;/strong&gt; package. Therefore, we have made it possible to print &lt;strong&gt;{gtsummary}&lt;/strong&gt; tables with various engines.&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;strong&gt;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html&#34;&gt;gtsummary + R Markdown&lt;/a&gt;&lt;/strong&gt; vignette for details.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ddsjoberg/gtsummary/main/man/figures/gt_output_formats.PNG&#34; width=&#34;55%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Save Individual Tables&lt;/h2&gt; &#xA;&lt;p&gt;{gtsummary} tables can also be saved directly to file as an image, RTF, LaTeX, and Word file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tbl %&amp;gt;%&#xA;  as_gt() %&amp;gt;%&#xA;  gt::gtsave(filename = &#34;.&#34;) # use extensions .html .tex .ltx .rtf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a Word file, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tbl %&amp;gt;%&#xA;  as_flex_table() %&amp;gt;%&#xA;  flextable::save_as_docx()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The best resources are the gtsummary vignettes: &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/gallery.html&#34;&gt;table gallery&lt;/a&gt;, &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html&#34;&gt;&lt;code&gt;tbl_summary()&lt;/code&gt; tutorial&lt;/a&gt;, &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/tbl_regression.html&#34;&gt;&lt;code&gt;tbl_regression()&lt;/code&gt; tutorial&lt;/a&gt;, &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/inline_text.html&#34;&gt;&lt;code&gt;inline_text()&lt;/code&gt; tutorial&lt;/a&gt;, &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/themes.html&#34;&gt;gtsummary themes&lt;/a&gt;, &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html&#34;&gt;gtsummary+R markdown&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The R Journal Article &lt;a href=&#34;https://github.com/ddsjoberg/gtsummary/raw/main/data-raw/RJ-2021-053.pdf&#34;&gt;&lt;em&gt;Reproducible Summary Tables with the gtsummary Package&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://education.rstudio.com/blog/2020/07/gtsummary/&#34;&gt;RStudio Education Blog&lt;/a&gt; includes a post with a brief introduction to the package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://www.youtube.com/watch?v=tANo9E1SYJE&#34;&gt;recording of a presentation&lt;/a&gt; given to the Weill Cornell Biostatistics Department and the Memorial Sloan Kettering R Users Group.&lt;/p&gt; &amp;lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tANo9E1SYJE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cite gtsummary&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;gt; citation(&#34;gtsummary&#34;)&#xA;&#xA;To cite gtsummary in publications use:&#xA;&#xA;  Sjoberg DD, Whiting K, Curry M, Lavery JA, Larmarange J. Reproducible summary tables with the gtsummary package.&#xA;  The R Journal 2021;13:570â€“80. https://doi.org/10.32614/RJ-2021-053.&#xA;&#xA;A BibTeX entry for LaTeX users is&#xA;&#xA;  @Article{gtsummary,&#xA;    author = {Daniel D. Sjoberg and Karissa Whiting and Michael Curry and Jessica A. Lavery and Joseph Larmarange},&#xA;    title = {Reproducible Summary Tables with the gtsummary Package},&#xA;    journal = {{The R Journal}},&#xA;    year = {2021},&#xA;    url = {https://doi.org/10.32614/RJ-2021-053},&#xA;    doi = {10.32614/RJ-2021-053},&#xA;    volume = {13},&#xA;    issue = {1},&#xA;    pages = {570-580},&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Big thank you to &lt;a href=&#34;https://www.jeffreybears.com/&#34;&gt;@jeffreybears&lt;/a&gt; for the hex sticker!&lt;/p&gt; &#xA;&lt;p&gt;Please note that the {gtsummary} project is released with a &lt;a href=&#34;https://www.danieldsjoberg.com/gtsummary/CODE_OF_CONDUCT.html&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms. Thank you to all contributors!&lt;br&gt; &lt;a href=&#34;https://github.com/ablack3&#34;&gt;@ablack3&lt;/a&gt;, &lt;a href=&#34;https://github.com/ABorakati&#34;&gt;@ABorakati&lt;/a&gt;, &lt;a href=&#34;https://github.com/aghaynes&#34;&gt;@aghaynes&lt;/a&gt;, &lt;a href=&#34;https://github.com/ahinton-mmc&#34;&gt;@ahinton-mmc&lt;/a&gt;, &lt;a href=&#34;https://github.com/aito123&#34;&gt;@aito123&lt;/a&gt;, &lt;a href=&#34;https://github.com/akarsteve&#34;&gt;@akarsteve&lt;/a&gt;, &lt;a href=&#34;https://github.com/akefley&#34;&gt;@akefley&lt;/a&gt;, &lt;a href=&#34;https://github.com/albertostefanelli&#34;&gt;@albertostefanelli&lt;/a&gt;, &lt;a href=&#34;https://github.com/alexis-catherine&#34;&gt;@alexis-catherine&lt;/a&gt;, &lt;a href=&#34;https://github.com/amygimma&#34;&gt;@amygimma&lt;/a&gt;, &lt;a href=&#34;https://github.com/anaavu&#34;&gt;@anaavu&lt;/a&gt;, &lt;a href=&#34;https://github.com/andrader&#34;&gt;@andrader&lt;/a&gt;, &lt;a href=&#34;https://github.com/angelgar&#34;&gt;@angelgar&lt;/a&gt;, &lt;a href=&#34;https://github.com/arbet003&#34;&gt;@arbet003&lt;/a&gt;, &lt;a href=&#34;https://github.com/arnmayer&#34;&gt;@arnmayer&lt;/a&gt;, &lt;a href=&#34;https://github.com/aspina7&#34;&gt;@aspina7&lt;/a&gt;, &lt;a href=&#34;https://github.com/asshah4&#34;&gt;@asshah4&lt;/a&gt;, &lt;a href=&#34;https://github.com/awcm0n&#34;&gt;@awcm0n&lt;/a&gt;, &lt;a href=&#34;https://github.com/barthelmes&#34;&gt;@barthelmes&lt;/a&gt;, &lt;a href=&#34;https://github.com/bcjaeger&#34;&gt;@bcjaeger&lt;/a&gt;, &lt;a href=&#34;https://github.com/BeauMeche&#34;&gt;@BeauMeche&lt;/a&gt;, &lt;a href=&#34;https://github.com/benediktclaus&#34;&gt;@benediktclaus&lt;/a&gt;, &lt;a href=&#34;https://github.com/berg-michael&#34;&gt;@berg-michael&lt;/a&gt;, &lt;a href=&#34;https://github.com/bhattmaulik&#34;&gt;@bhattmaulik&lt;/a&gt;, &lt;a href=&#34;https://github.com/BioYork&#34;&gt;@BioYork&lt;/a&gt;, &lt;a href=&#34;https://github.com/brachem-christian&#34;&gt;@brachem-christian&lt;/a&gt;, &lt;a href=&#34;https://github.com/bwiernik&#34;&gt;@bwiernik&lt;/a&gt;, &lt;a href=&#34;https://github.com/bx259&#34;&gt;@bx259&lt;/a&gt;, &lt;a href=&#34;https://github.com/calebasaraba&#34;&gt;@calebasaraba&lt;/a&gt;, &lt;a href=&#34;https://github.com/CarolineXGao&#34;&gt;@CarolineXGao&lt;/a&gt;, &lt;a href=&#34;https://github.com/ChongTienGoh&#34;&gt;@ChongTienGoh&lt;/a&gt;, &lt;a href=&#34;https://github.com/Chris-M-P&#34;&gt;@Chris-M-P&lt;/a&gt;, &lt;a href=&#34;https://github.com/chrisleitzinger&#34;&gt;@chrisleitzinger&lt;/a&gt;, &lt;a href=&#34;https://github.com/cjprobst&#34;&gt;@cjprobst&lt;/a&gt;, &lt;a href=&#34;https://github.com/clmawhorter&#34;&gt;@clmawhorter&lt;/a&gt;, &lt;a href=&#34;https://github.com/CodieMonster&#34;&gt;@CodieMonster&lt;/a&gt;, &lt;a href=&#34;https://github.com/coeus-analytics&#34;&gt;@coeus-analytics&lt;/a&gt;, &lt;a href=&#34;https://github.com/coreysparks&#34;&gt;@coreysparks&lt;/a&gt;, &lt;a href=&#34;https://github.com/ctlamb&#34;&gt;@ctlamb&lt;/a&gt;, &lt;a href=&#34;https://github.com/davidgohel&#34;&gt;@davidgohel&lt;/a&gt;, &lt;a href=&#34;https://github.com/davidkane9&#34;&gt;@davidkane9&lt;/a&gt;, &lt;a href=&#34;https://github.com/dax44&#34;&gt;@dax44&lt;/a&gt;, &lt;a href=&#34;https://github.com/dchiu911&#34;&gt;@dchiu911&lt;/a&gt;, &lt;a href=&#34;https://github.com/ddsjoberg&#34;&gt;@ddsjoberg&lt;/a&gt;, &lt;a href=&#34;https://github.com/DeFilippis&#34;&gt;@DeFilippis&lt;/a&gt;, &lt;a href=&#34;https://github.com/denis-or&#34;&gt;@denis-or&lt;/a&gt;, &lt;a href=&#34;https://github.com/dereksonderegger&#34;&gt;@dereksonderegger&lt;/a&gt;, &lt;a href=&#34;https://github.com/dieuv0&#34;&gt;@dieuv0&lt;/a&gt;, &lt;a href=&#34;https://github.com/discoleo&#34;&gt;@discoleo&lt;/a&gt;, &lt;a href=&#34;https://github.com/djbirke&#34;&gt;@djbirke&lt;/a&gt;, &lt;a href=&#34;https://github.com/dmenne&#34;&gt;@dmenne&lt;/a&gt;, &lt;a href=&#34;https://github.com/edrill&#34;&gt;@edrill&lt;/a&gt;, &lt;a href=&#34;https://github.com/ElfatihHasabo&#34;&gt;@ElfatihHasabo&lt;/a&gt;, &lt;a href=&#34;https://github.com/emilyvertosick&#34;&gt;@emilyvertosick&lt;/a&gt;, &lt;a href=&#34;https://github.com/ercbk&#34;&gt;@ercbk&lt;/a&gt;, &lt;a href=&#34;https://github.com/erikvona&#34;&gt;@erikvona&lt;/a&gt;, &lt;a href=&#34;https://github.com/eweisbrod&#34;&gt;@eweisbrod&lt;/a&gt;, &lt;a href=&#34;https://github.com/feizhadj&#34;&gt;@feizhadj&lt;/a&gt;, &lt;a href=&#34;https://github.com/fh-jsnider&#34;&gt;@fh-jsnider&lt;/a&gt;, &lt;a href=&#34;https://github.com/ge-generation&#34;&gt;@ge-generation&lt;/a&gt;, &lt;a href=&#34;https://github.com/Generalized&#34;&gt;@Generalized&lt;/a&gt;, &lt;a href=&#34;https://github.com/ghost&#34;&gt;@ghost&lt;/a&gt;, &lt;a href=&#34;https://github.com/gjones1219&#34;&gt;@gjones1219&lt;/a&gt;, &lt;a href=&#34;https://github.com/gorkang&#34;&gt;@gorkang&lt;/a&gt;, &lt;a href=&#34;https://github.com/GuiMarthe&#34;&gt;@GuiMarthe&lt;/a&gt;, &lt;a href=&#34;https://github.com/hass91&#34;&gt;@hass91&lt;/a&gt;, &lt;a href=&#34;https://github.com/HichemLa&#34;&gt;@HichemLa&lt;/a&gt;, &lt;a href=&#34;https://github.com/huftis&#34;&gt;@huftis&lt;/a&gt;, &lt;a href=&#34;https://github.com/hughjonesd&#34;&gt;@hughjonesd&lt;/a&gt;, &lt;a href=&#34;https://github.com/iaingallagher&#34;&gt;@iaingallagher&lt;/a&gt;, &lt;a href=&#34;https://github.com/ilyamusabirov&#34;&gt;@ilyamusabirov&lt;/a&gt;, &lt;a href=&#34;https://github.com/IndrajeetPatil&#34;&gt;@IndrajeetPatil&lt;/a&gt;, &lt;a href=&#34;https://github.com/IsadoraBM&#34;&gt;@IsadoraBM&lt;/a&gt;, &lt;a href=&#34;https://github.com/j-tamad&#34;&gt;@j-tamad&lt;/a&gt;, &lt;a href=&#34;https://github.com/jalavery&#34;&gt;@jalavery&lt;/a&gt;, &lt;a href=&#34;https://github.com/jeanmanguy&#34;&gt;@jeanmanguy&lt;/a&gt;, &lt;a href=&#34;https://github.com/jemus42&#34;&gt;@jemus42&lt;/a&gt;, &lt;a href=&#34;https://github.com/jenifav&#34;&gt;@jenifav&lt;/a&gt;, &lt;a href=&#34;https://github.com/jennybc&#34;&gt;@jennybc&lt;/a&gt;, &lt;a href=&#34;https://github.com/JeremyPasco&#34;&gt;@JeremyPasco&lt;/a&gt;, &lt;a href=&#34;https://github.com/JesseRop&#34;&gt;@JesseRop&lt;/a&gt;, &lt;a href=&#34;https://github.com/jflynn264&#34;&gt;@jflynn264&lt;/a&gt;, &lt;a href=&#34;https://github.com/jhelvy&#34;&gt;@jhelvy&lt;/a&gt;, &lt;a href=&#34;https://github.com/jjallaire&#34;&gt;@jjallaire&lt;/a&gt;, &lt;a href=&#34;https://github.com/jmbarajas&#34;&gt;@jmbarajas&lt;/a&gt;, &lt;a href=&#34;https://github.com/jmbarbone&#34;&gt;@jmbarbone&lt;/a&gt;, &lt;a href=&#34;https://github.com/JoanneF1229&#34;&gt;@JoanneF1229&lt;/a&gt;, &lt;a href=&#34;https://github.com/joelgautschi&#34;&gt;@joelgautschi&lt;/a&gt;, &lt;a href=&#34;https://github.com/jojosgithub&#34;&gt;@jojosgithub&lt;/a&gt;, &lt;a href=&#34;https://github.com/JonGretar&#34;&gt;@JonGretar&lt;/a&gt;, &lt;a href=&#34;https://github.com/jordan49er&#34;&gt;@jordan49er&lt;/a&gt;, &lt;a href=&#34;https://github.com/jthomasmock&#34;&gt;@jthomasmock&lt;/a&gt;, &lt;a href=&#34;https://github.com/juseer&#34;&gt;@juseer&lt;/a&gt;, &lt;a href=&#34;https://github.com/jwilliman&#34;&gt;@jwilliman&lt;/a&gt;, &lt;a href=&#34;https://github.com/karissawhiting&#34;&gt;@karissawhiting&lt;/a&gt;, &lt;a href=&#34;https://github.com/kendonB&#34;&gt;@kendonB&lt;/a&gt;, &lt;a href=&#34;https://github.com/kmdono02&#34;&gt;@kmdono02&lt;/a&gt;, &lt;a href=&#34;https://github.com/kwakuduahc1&#34;&gt;@kwakuduahc1&lt;/a&gt;, &lt;a href=&#34;https://github.com/lamhine&#34;&gt;@lamhine&lt;/a&gt;, &lt;a href=&#34;https://github.com/larmarange&#34;&gt;@larmarange&lt;/a&gt;, &lt;a href=&#34;https://github.com/leejasme&#34;&gt;@leejasme&lt;/a&gt;, &lt;a href=&#34;https://github.com/loukesio&#34;&gt;@loukesio&lt;/a&gt;, &lt;a href=&#34;https://github.com/lspeetluk&#34;&gt;@lspeetluk&lt;/a&gt;, &lt;a href=&#34;https://github.com/ltin1214&#34;&gt;@ltin1214&lt;/a&gt;, &lt;a href=&#34;https://github.com/lucavd&#34;&gt;@lucavd&lt;/a&gt;, &lt;a href=&#34;https://github.com/LuiNov&#34;&gt;@LuiNov&lt;/a&gt;, &lt;a href=&#34;https://github.com/maia-sh&#34;&gt;@maia-sh&lt;/a&gt;, &lt;a href=&#34;https://github.com/Marsus1972&#34;&gt;@Marsus1972&lt;/a&gt;, &lt;a href=&#34;https://github.com/matthieu-faron&#34;&gt;@matthieu-faron&lt;/a&gt;, &lt;a href=&#34;https://github.com/mbac&#34;&gt;@mbac&lt;/a&gt;, &lt;a href=&#34;https://github.com/mdidish&#34;&gt;@mdidish&lt;/a&gt;, &lt;a href=&#34;https://github.com/MelissaAssel&#34;&gt;@MelissaAssel&lt;/a&gt;, &lt;a href=&#34;https://github.com/michaelcurry1123&#34;&gt;@michaelcurry1123&lt;/a&gt;, &lt;a href=&#34;https://github.com/mljaniczek&#34;&gt;@mljaniczek&lt;/a&gt;, &lt;a href=&#34;https://github.com/moleps&#34;&gt;@moleps&lt;/a&gt;, &lt;a href=&#34;https://github.com/motocci&#34;&gt;@motocci&lt;/a&gt;, &lt;a href=&#34;https://github.com/msberends&#34;&gt;@msberends&lt;/a&gt;, &lt;a href=&#34;https://github.com/mvuorre&#34;&gt;@mvuorre&lt;/a&gt;, &lt;a href=&#34;https://github.com/myensr&#34;&gt;@myensr&lt;/a&gt;, &lt;a href=&#34;https://github.com/MyKo101&#34;&gt;@MyKo101&lt;/a&gt;, &lt;a href=&#34;https://github.com/oranwutang&#34;&gt;@oranwutang&lt;/a&gt;, &lt;a href=&#34;https://github.com/palantre&#34;&gt;@palantre&lt;/a&gt;, &lt;a href=&#34;https://github.com/parmsam&#34;&gt;@parmsam&lt;/a&gt;, &lt;a href=&#34;https://github.com/Pascal-Schmidt&#34;&gt;@Pascal-Schmidt&lt;/a&gt;, &lt;a href=&#34;https://github.com/pedersebastian&#34;&gt;@pedersebastian&lt;/a&gt;, &lt;a href=&#34;https://github.com/perlatex&#34;&gt;@perlatex&lt;/a&gt;, &lt;a href=&#34;https://github.com/philsf&#34;&gt;@philsf&lt;/a&gt;, &lt;a href=&#34;https://github.com/polc1410&#34;&gt;@polc1410&lt;/a&gt;, &lt;a href=&#34;https://github.com/postgres-newbie&#34;&gt;@postgres-newbie&lt;/a&gt;, &lt;a href=&#34;https://github.com/proshano&#34;&gt;@proshano&lt;/a&gt;, &lt;a href=&#34;https://github.com/raphidoc&#34;&gt;@raphidoc&lt;/a&gt;, &lt;a href=&#34;https://github.com/RaviBot&#34;&gt;@RaviBot&lt;/a&gt;, &lt;a href=&#34;https://github.com/rich-iannone&#34;&gt;@rich-iannone&lt;/a&gt;, &lt;a href=&#34;https://github.com/RiversPharmD&#34;&gt;@RiversPharmD&lt;/a&gt;, &lt;a href=&#34;https://github.com/rmgpanw&#34;&gt;@rmgpanw&lt;/a&gt;, &lt;a href=&#34;https://github.com/roman2023&#34;&gt;@roman2023&lt;/a&gt;, &lt;a href=&#34;https://github.com/ryzhu75&#34;&gt;@ryzhu75&lt;/a&gt;, &lt;a href=&#34;https://github.com/sachijay&#34;&gt;@sachijay&lt;/a&gt;, &lt;a href=&#34;https://github.com/saifelayan&#34;&gt;@saifelayan&lt;/a&gt;, &lt;a href=&#34;https://github.com/sammo3182&#34;&gt;@sammo3182&lt;/a&gt;, &lt;a href=&#34;https://github.com/sandhyapc&#34;&gt;@sandhyapc&lt;/a&gt;, &lt;a href=&#34;https://github.com/sbalci&#34;&gt;@sbalci&lt;/a&gt;, &lt;a href=&#34;https://github.com/sda030&#34;&gt;@sda030&lt;/a&gt;, &lt;a href=&#34;https://github.com/shannonpileggi&#34;&gt;@shannonpileggi&lt;/a&gt;, &lt;a href=&#34;https://github.com/shengchaohou&#34;&gt;@shengchaohou&lt;/a&gt;, &lt;a href=&#34;https://github.com/ShixiangWang&#34;&gt;@ShixiangWang&lt;/a&gt;, &lt;a href=&#34;https://github.com/simonpcouch&#34;&gt;@simonpcouch&lt;/a&gt;, &lt;a href=&#34;https://github.com/slb2240&#34;&gt;@slb2240&lt;/a&gt;, &lt;a href=&#34;https://github.com/slobaugh&#34;&gt;@slobaugh&lt;/a&gt;, &lt;a href=&#34;https://github.com/spiralparagon&#34;&gt;@spiralparagon&lt;/a&gt;, &lt;a href=&#34;https://github.com/StaffanBetner&#34;&gt;@StaffanBetner&lt;/a&gt;, &lt;a href=&#34;https://github.com/Stephonomon&#34;&gt;@Stephonomon&lt;/a&gt;, &lt;a href=&#34;https://github.com/storopoli&#34;&gt;@storopoli&lt;/a&gt;, &lt;a href=&#34;https://github.com/szimmer&#34;&gt;@szimmer&lt;/a&gt;, &lt;a href=&#34;https://github.com/tamytsujimoto&#34;&gt;@tamytsujimoto&lt;/a&gt;, &lt;a href=&#34;https://github.com/TarJae&#34;&gt;@TarJae&lt;/a&gt;, &lt;a href=&#34;https://github.com/themichjam&#34;&gt;@themichjam&lt;/a&gt;, &lt;a href=&#34;https://github.com/THIB20&#34;&gt;@THIB20&lt;/a&gt;, &lt;a href=&#34;https://github.com/tibirkrajc&#34;&gt;@tibirkrajc&lt;/a&gt;, &lt;a href=&#34;https://github.com/tjmeyers&#34;&gt;@tjmeyers&lt;/a&gt;, &lt;a href=&#34;https://github.com/tldrcharlene&#34;&gt;@tldrcharlene&lt;/a&gt;, &lt;a href=&#34;https://github.com/tormodb&#34;&gt;@tormodb&lt;/a&gt;, &lt;a href=&#34;https://github.com/toshifumikuroda&#34;&gt;@toshifumikuroda&lt;/a&gt;, &lt;a href=&#34;https://github.com/UAB-BST-680&#34;&gt;@UAB-BST-680&lt;/a&gt;, &lt;a href=&#34;https://github.com/uakimix&#34;&gt;@uakimix&lt;/a&gt;, &lt;a href=&#34;https://github.com/uriahf&#34;&gt;@uriahf&lt;/a&gt;, &lt;a href=&#34;https://github.com/Valja64&#34;&gt;@Valja64&lt;/a&gt;, &lt;a href=&#34;https://github.com/vvm02&#34;&gt;@vvm02&lt;/a&gt;, &lt;a href=&#34;https://github.com/xkcococo&#34;&gt;@xkcococo&lt;/a&gt;, &lt;a href=&#34;https://github.com/yonicd&#34;&gt;@yonicd&lt;/a&gt;, &lt;a href=&#34;https://github.com/yoursdearboy&#34;&gt;@yoursdearboy&lt;/a&gt;, &lt;a href=&#34;https://github.com/zabore&#34;&gt;@zabore&lt;/a&gt;, &lt;a href=&#34;https://github.com/zachariae&#34;&gt;@zachariae&lt;/a&gt;, &lt;a href=&#34;https://github.com/zaddyzad&#34;&gt;@zaddyzad&lt;/a&gt;, &lt;a href=&#34;https://github.com/zeyunlu&#34;&gt;@zeyunlu&lt;/a&gt;, &lt;a href=&#34;https://github.com/zhengnow&#34;&gt;@zhengnow&lt;/a&gt;, &lt;a href=&#34;https://github.com/zlkrvsm&#34;&gt;@zlkrvsm&lt;/a&gt;, &lt;a href=&#34;https://github.com/zongell-star&#34;&gt;@zongell-star&lt;/a&gt;, and &lt;a href=&#34;https://github.com/Zoulf001&#34;&gt;@Zoulf001&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cararthompson/monochromeR</title>
    <updated>2022-10-03T01:41:13Z</updated>
    <id>tag:github.com,2022-10-03:/cararthompson/monochromeR</id>
    <link href="https://github.com/cararthompson/monochromeR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A package for creating monochrome colour palettes and easily converting rgba values to hex codes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;monochromeR: An easy way to create monochrome colour palettes&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=monochromeR&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/monochromeR&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/monochromeR?color=#0B3748&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/inst/figures/logo-social.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What does the package do?&lt;/h2&gt; &#xA;&lt;p&gt;This package generates a monochrome palette from a starting colour for a specified number of colours. Users can decide whether to go darker, lighter, or both ways from that starting colour, which can be provided as a vector of rgb values (e.g. &lt;code&gt;c(15, 75, 99)&lt;/code&gt;), a hex colour code (e.g. &lt;code&gt;#0F4B63&lt;/code&gt;) or a recognised colour name (e.g. &lt;code&gt;&#34;purple&#34;&lt;/code&gt;). The package can also display the generated palette in the plot window, with or without hex colour code labels.&lt;/p&gt; &#xA;&lt;h2&gt;How can I use it?&lt;/h2&gt; &#xA;&lt;p&gt;This package is available on &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;, so can be installed using &lt;code&gt;install.packages(&#34;monochromeR&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, to install it from here, use &lt;code&gt;remotes::github_install(&#34;cararthompson/monochromeR&#34;)&lt;/code&gt;. (To do this, you need to have installed the &lt;code&gt;remotes&lt;/code&gt; package. To do that, use &lt;code&gt;install.packages(&#34;remotes&#34;)&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Can we see some examples?&lt;/h2&gt; &#xA;&lt;p&gt;Sure! Here goes. To make the examples easy to read, I will use recognised colour names rather than hex codes or rgb values.&lt;/p&gt; &#xA;&lt;h3&gt;Generate monochrome palettes with &lt;code&gt;generate_palette()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(monochromeR)&#xA;&#xA;generate_palette(&#34;purple&#34;, modification = &#34;go_lighter&#34;, &#xA;                 n_colours = 5, view_palette = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-1-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;#A020F0&#34; &#34;#B34CF3&#34; &#34;#C679F6&#34; &#34;#D9A5F9&#34; &#34;#ECD2FC&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The functions allow for British spelling and US spelling of colour/color.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;generate_palette(&#34;purple&#34;, modification = &#34;go_darker&#34;, &#xA;                 n_colors = 5, view_palette = TRUE, view_labels = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-2-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;#A020F0&#34; &#34;#8019C0&#34; &#34;#601390&#34; &#34;#3F0C5F&#34; &#34;#200630&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With more colours, the hex codes get harder to view in the plot. They are printed in the console when the function is called on its own, and can also be assigned to an object for later use.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;purple_palette &amp;lt;- generate_palette(&#34;purple&#34;, modification = &#34;go_both_ways&#34;, &#xA;                                   n_colours = 20, view_palette = TRUE, view_labels = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-3-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;purple_palette&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;##  [1] &#34;#ECD2FC&#34; &#34;#E4C0FA&#34; &#34;#DCAEF9&#34; &#34;#D59CF8&#34; &#34;#CD8BF7&#34; &#34;#C679F6&#34; &#34;#BE67F4&#34;&#xA;##  [8] &#34;#B655F3&#34; &#34;#AF43F2&#34; &#34;#A731F1&#34; &#34;#A020F0&#34; &#34;#931DDC&#34; &#34;#861AC9&#34; &#34;#7918B6&#34;&#xA;## [15] &#34;#6C15A3&#34; &#34;#601390&#34; &#34;#53107C&#34; &#34;#460E69&#34; &#34;#390B56&#34; &#34;#2C0843&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And just because it was easy to implement, this function can also be used to blend two colours together:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;generate_palette(&#34;purple&#34;, blend_colour = &#34;green&#34;, &#xA;                 n_colours = 10, view_palette = TRUE, view_labels = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-4-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;##  [1] &#34;#A020F0&#34; &#34;#9133DA&#34; &#34;#8347C5&#34; &#34;#755BB0&#34; &#34;#676F9A&#34; &#34;#588385&#34; &#34;#4A9670&#34;&#xA;##  [8] &#34;#3CAA5A&#34; &#34;#2EBE45&#34; &#34;#20D230&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get the hex colour code from an rgb or rgba vector&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Get hex code from rgb&#xA;rgb_to_hex(c(15, 75, 99))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;#0F4B63&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Get hex code from rgba&#xA;rgba_to_hex(c(15, 75, 99, 0.8))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;## [1] &#34;#3E6E82&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;View any palette, with or without labels&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;view_palette(c(&#34;red&#34;, &#34;yellow&#34;, &#34;purple&#34;, &#34;green&#34;), view_labels = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-6-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;view_palette(c(wesanderson::wes_palettes$Moonrise1,&#xA;               wesanderson::wes_palettes$Moonrise2[1:2]))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-6-2.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Easily pass the output to functions which check accessibility&lt;/h2&gt; &#xA;&lt;p&gt;Version 0.1.3 onwards exports a ggplot object, which can be passed to functions such as colorblindr::cvd_grid() to check how the palette is perceived by people with different visual perception. With &lt;code&gt;view_labels = TRUE&lt;/code&gt;, the labels are displayed in black and white on top of the colour, to allow users to easily see how readable the text is.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;view_palette(c(&#34;red&#34;, &#34;yellow&#34;, &#34;purple&#34;, &#34;green&#34;), view_labels = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-7-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;colorblindr::cvd_grid()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-7-2.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Worked examples: using &lt;code&gt;monochromeR&lt;/code&gt; within datavisualisations&lt;/h2&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;generate_palette&lt;/code&gt; within &lt;code&gt;scale_colour_manual()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Hereâ€™s a simple example, using &lt;code&gt;{monochromeR}&lt;/code&gt;â€™s &lt;code&gt;generate_palette()&lt;/code&gt; to create a colour palette on the fly within &lt;code&gt;ggplot()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)&#xA;library(monochromeR)&#xA;&#xA;penguin_plot &amp;lt;- palmerpenguins::penguins %&amp;gt;%&#xA;  ggplot() +&#xA;  geom_point(aes(x = flipper_length_mm, y = bill_length_mm, &#xA;                 colour = species, size = body_mass_g),&#xA;             alpha = 0.8) +&#xA; &#xA;  labs(title = &#34;Perfectly proportional penguins&#34;, &#xA;       subtitle = &#34;\nEach dot represents a penguin. The bigger the dot, the heavier the penguin. \nLook at them go!&#34;,&#xA;       x = &#34;Flipper length (mm)&#34;,&#xA;       y = &#34;Bill length (mm)&#34;) +&#xA;   scale_size(guide = &#34;none&#34;) +&#xA; guides(colour = guide_legend(title = &#34;&#34;)) +&#xA;  theme_minimal() &#xA;&#xA;penguin_plot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-8-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;penguin_plot &amp;lt;- penguin_plot +&#xA; scale_colour_manual(values = generate_palette(c(15, 75, 99), &#xA;                                    modification = &#34;go_both_ways&#34;, &#xA;                                    n_colours = 3))&#xA;&#xA;penguin_plot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-8-2.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Creating a unified aesthetic across all aspects of the dataviz&lt;/h3&gt; &#xA;&lt;p&gt;Hereâ€™s an example using &lt;code&gt;{monochromeR}&lt;/code&gt;â€™s &lt;code&gt;generate_palette()&lt;/code&gt; to generate all the colours used in the plot, resulting in a more polished look with minimal effort.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;penguin_palette &amp;lt;- generate_palette(c(15, 75, 99), &#xA;                                    modification = &#34;go_both_ways&#34;, &#xA;                                    n_colours = 8,&#xA;                                    view_palette = T,&#xA;                                    view_labels = F)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-9-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;penguin_plot +&#xA;  theme_minimal() %+replace%&#xA;    theme(plot.background = element_rect(fill = penguin_palette[8], &#xA;                                         colour = penguin_palette[8]),&#xA;          panel.grid = element_line(colour = penguin_palette[7]),&#xA;          panel.background = element_rect(fill = penguin_palette[8], &#xA;                                          colour = penguin_palette[8]),&#xA;          text = element_text(colour = penguin_palette[3]),&#xA;          axis.text = element_text(colour = penguin_palette[3]),&#xA;          plot.title = element_text(colour = penguin_palette[1], hjust = 0, size = 16),&#xA;          plot.subtitle = element_text(colour = penguin_palette[2], hjust = 0))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cararthompson/monochromeR/main/README_files/figure-gfm/unnamed-chunk-9-2.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Extra resources&lt;/h2&gt; &#xA;&lt;h3&gt;Here are some resources I found helpful in making this package&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For the mechanics of how to make a package&lt;/strong&gt;: &lt;a href=&#34;https://www.pipinghotdata.com/posts/2020-10-25-your-first-r-package-in-1-hour/&#34;&gt;Your first R package in 1 hour&lt;/a&gt;, a tutorial by Shannon Pileggi&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For the colour conversions&lt;/strong&gt;: &lt;a href=&#34;https://stackoverflow.com/questions/60977641/r-function-for-rgba-to-hex-colour-conversion&#34;&gt;This thread on StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For the logo&lt;/strong&gt;: &lt;a href=&#34;https://github.com/GuangchuangYu/hexSticker&#34;&gt;The hexSticker package&lt;/a&gt; by Guangchuang Yu&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bugs and queries&lt;/h3&gt; &#xA;&lt;p&gt;Iâ€™ve done my best to make the functions in this package user-friendly, and to make the error messages easy to understand. If you come across a bug or an error message that doesnâ€™t make sense, or if thereâ€™s something you think would make this package better, &lt;a href=&#34;https://github.com/cararthompson/monochromeR/issues&#34;&gt;please let me know&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
</feed>