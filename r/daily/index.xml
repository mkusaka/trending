<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-16T01:54:01Z</updated>
  <subtitle>Daily Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cosimameyer/overviewR</title>
    <updated>2022-08-16T01:54:01Z</updated>
    <id>tag:github.com,2022-08-16:/cosimameyer/overviewR</id>
    <link href="https://github.com/cosimameyer/overviewR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily Extracting Information About Your Data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;overviewR &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cosimameyer/overviewR/actions&#34;&gt;&lt;img src=&#34;https://github.com/cosimameyer/overviewR/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/cosimameyer/overviewR?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cosimameyer/overviewR/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cosimameyer/overviewR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/overviewR-ready%20to%20use-brightgreen&#34; alt=&#34;overviewR badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cosimameyer/overviewR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Build%20with-%E2%99%A5%20and%20R-blue&#34; alt=&#34;R badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--[![downloads](https://cranlogs.r-pkg.org/badges/overviewR)](https://www.r-pkg.org/badges/version/overviewR)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cranlogs.r-pkg.org/badges/grand-total/overviewR&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/overviewR&#34; alt=&#34;total_downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=overviewR&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/overviewR&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/269955026&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/269955026.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL--3-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Rdoc](https://www.rdocumentation.org/badges/version/overviewR)](https://www.rdocumentation.org/packages/overviewR) --&gt; &#xA;&lt;!-- [![metacran downloads](https://cranlogs.r-pkg.org/badges/overviewR)](https://cran.r-project.org/package=overviewR) --&gt; &#xA;&lt;!-- [![cran checks](https://cranchecks.info/badges/summary/overviewR)](https://cran.r-project.org/web/checks/check_results_overviewR.html) --&gt; &#xA;&lt;!-- [![](https://cranlogs.r-pkg.org/badges/version/overviewR)](https://www.r-pkg.org/badges/version/overviewR) --&gt; &#xA;&lt;!-- [![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) --&gt; &#xA;&lt;!-- [![Last-changedate](https://img.shields.io/badge/last%20change-2021--06--04-green.svg)](/commits/master) --&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cosimameyer/overviewR/raw/master/man/figures/CheatSheet_overviewR.pdf&#34;&gt;&lt;strong&gt;You can access the CheatSheet for overviewR here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The goal of overviewR is to make it easy to get an overview of a data set by displaying relevant sample information. At the moment, there are the following functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_tab&lt;/code&gt; generates a tabular overview of the sample. The general sample plots a two-column table that provides information on an id in the left column and a the time frame on the right column.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_crosstab&lt;/code&gt; generates a cross table. The conditional column allows to disaggregate the overview table by specifying two conditions, hence resulting a 2x2 table. This way, it is easy to visualize the time and scope conditions as well as theoretical assumptions with examples from the data set.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_print&lt;/code&gt; converts the output of both &lt;code&gt;overview_tab&lt;/code&gt; and &lt;code&gt;overview_crosstab&lt;/code&gt; into LaTeX code and/or directly into a .tex file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_plot&lt;/code&gt; is an alternative to visualize the sample (a way to present results from &lt;code&gt;overview_tab&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_crossplot&lt;/code&gt; is an alternative to visualize a cross table (a way to present results from &lt;code&gt;overview_crosstab&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_heat&lt;/code&gt; plots a heat map of your time line&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_na&lt;/code&gt; plots an overview of missing values by variable&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overview_overlap&lt;/code&gt; plots comparison plots (bar graph and Venn diagram) to compare to data frames&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The plots can be saved using the &lt;code&gt;ggsave()&lt;/code&gt; command. The output of &lt;code&gt;overview_tab&lt;/code&gt; and &lt;code&gt;overview_crosstab&lt;/code&gt; are also compatible with other packages such as &lt;a href=&#34;https://CRAN.R-project.org/package=xtable&#34;&gt;&lt;code&gt;xtable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://CRAN.R-project.org/package=flextable&#34;&gt;&lt;code&gt;flextable&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/kable.html&#34;&gt;&lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We present a short step-by-step guide as well as the functions in more detail below.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;A stable version of &lt;code&gt;overviewR&lt;/code&gt; can be directly accessed on CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;overviewR&#34;, force = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the latest development version of &lt;code&gt;overviewR&lt;/code&gt; directly from &lt;a href=&#34;https://github.com/cosimameyer/overviewR&#34;&gt;GitHub&lt;/a&gt; use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(devtools) # Tools to Make Developing R Packages Easier # Tools to Make Developing R Packages Easier&#xA;devtools::install_github(&#34;cosimameyer/overviewR&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;First, load the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(overviewR) # Easily Extracting Information About Your Data # Easily Extracting Information About Your Data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following examples use a toy data set (&lt;code&gt;toydata&lt;/code&gt;) that comes with the package. This data contains artificially generated information in a cross-sectional format on 5 countries, covering the period 1990-1999.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data(toydata)&#xA;head(toydata)&#xA;#&amp;gt;   ccode year month      gdp population&#xA;#&amp;gt; 1   RWA 1990   Jan 24180.77  14969.988&#xA;#&amp;gt; 2   RWA 1990   Feb 23650.53  11791.464&#xA;#&amp;gt; 3   RWA 1990   Mar 21860.14  30047.979&#xA;#&amp;gt; 4   RWA 1990   Apr 20801.06  19853.556&#xA;#&amp;gt; 5   RWA 1990   May 18702.84   5148.118&#xA;#&amp;gt; 6   RWA 1990   Jun 30272.37  48625.140&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- ``` --&gt; &#xA;&lt;!--     ccode   year   month  gdp       population --&gt; &#xA;&lt;!--     RWA     1990   Jan    24180.77  14969.988 --&gt; &#xA;&lt;!--     RWA     1990   Feb    23650.53  11791.464 --&gt; &#xA;&lt;!--     RWA     1990   Mar    21860.14  30047.979 --&gt; &#xA;&lt;!--     RWA     1990   Apr    20801.06  19853.556 --&gt; &#xA;&lt;!--     RWA     1990   May    18702.84   5148.118 --&gt; &#xA;&lt;!--     RWA     1990   Jun    30272.37  48625.140 --&gt; &#xA;&lt;!-- ``` --&gt; &#xA;&lt;p&gt;There are 264 observations for 5 countries (Angola, Benin, France, Rwanda, and UK) stored in the &lt;code&gt;ccode&lt;/code&gt; variable, over a time period between 1990 to 1999 (&lt;code&gt;year&lt;/code&gt;) with additional information for the month (&lt;code&gt;month&lt;/code&gt;). Additionally, two artificially generated fake variables for GDP (&lt;code&gt;gdp&lt;/code&gt;) and population size (&lt;code&gt;population&lt;/code&gt;) are included to illustrate of conditions.&lt;/p&gt; &#xA;&lt;p&gt;The following functions work best on data sets that have an id-time-structure, in the case of &lt;code&gt;toydata&lt;/code&gt; this corresponds to country-year with &lt;code&gt;ccode&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt;. If the data set does not have this format yet, consider using &lt;a href=&#34;https://tidyr.tidyverse.org/reference/pivot_longer.html&#34;&gt;&lt;code&gt;pivot_wider()&lt;/code&gt; or &lt;code&gt;pivot_longer()&lt;/code&gt;&lt;/a&gt; to get to the format.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_tab&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Generate some general overview of the data set using the time and scope conditions with &lt;code&gt;overview_tab&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;output_table &amp;lt;- overview_tab(dat = toydata, id = ccode, time = year)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting data frame collapses the time condition for each id by taking into account potential gaps in the time frame. Note that the column name for the time frame is set by default to &lt;code&gt;time_frame&lt;/code&gt; and internally generated when using &lt;code&gt;overview_tab&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;output_table&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;# ccode   time_frame&#xA;# RWA       1990 - 1995&#xA;# AGO       1990 - 1992&#xA;# BEN       1995 - 1999&#xA;# GBR       1991, 1993, 1995, 1997, 1999&#xA;# FRA       1993, 1996, 1999&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_crosstab&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To generate a cross table that divides the data based on two conditions, for instance GDP and population size, &lt;code&gt;overview_crosstab&lt;/code&gt; can be used. &lt;code&gt;threshold1&lt;/code&gt; and &lt;code&gt;threshold2&lt;/code&gt; thereby indicate the cut point for the two conditions (&lt;code&gt;cond1&lt;/code&gt; and &lt;code&gt;cond2&lt;/code&gt;), respectively.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;output_crosstab &amp;lt;- overview_crosstab(&#xA;    dat = toydata,&#xA;    cond1 = gdp,&#xA;    cond2 = population,&#xA;    threshold1 = 25000,&#xA;    threshold2 = 27000,&#xA;    id = ccode,&#xA;    time = year&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data frame output looks as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#   part1                                      part2&#xA;# 1 AGO (1990, 1992), FRA (1993), GBR (1997)   BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994)&#xA;# 2 BEN (1997), RWA (1990)                     AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note, if a data set is used that has multiple observations on the id-time unit, the function automatically aggregates the data set using the mean of condition 1 (&lt;code&gt;cond1&lt;/code&gt;) and condition 2 (&lt;code&gt;cond2&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_print&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To generate an easily usable LaTeX output for the generated &lt;code&gt;overview_tab&lt;/code&gt; and &lt;code&gt;overview_crosstab&lt;/code&gt; objects, &lt;code&gt;overviewR&lt;/code&gt; offers the function &lt;code&gt;overview_print&lt;/code&gt;. The following illustrate this using the &lt;code&gt;output_table&lt;/code&gt; object from &lt;code&gt;overview_tab&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_print(obj = output_table)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; LaTeX output &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;% Overview table generated in R version 4.0.0 (2020-04-24) using overviewR &#xA;% Table created on 2020-06-21&#xA;\begin{table}[ht] &#xA; \centering &#xA; \caption{Time and scope of the sample} &#xA; \begin{tabular}{ll} &#xA; \hline &#xA;Sample &amp;amp; Time frame \\ &#xA;\hline &#xA; RWA &amp;amp; 1990 - 1995 \\ &#xA; AGO &amp;amp; 1990 - 1992 \\ &#xA; BEN &amp;amp; 1995 - 1999 \\ &#xA; GBR &amp;amp; 1991, 1993, 1995, 1997, 1999 \\ &#xA; FRA &amp;amp; 1993, 1996, 1999 \\ &#xA; \hline &#xA; \end{tabular} &#xA; \end{table}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/ex1.png&#34; height=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The default already provides a title (“Time and scope of the sample”) that can be modified in the argument &lt;code&gt;title&lt;/code&gt;. The same holds for the column names (“Sample” and “Time frame” are set by default but can be modified as shown below).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_print(obj = output_table, id = &#34;Countries&#34;, time = &#34;Years&#34;,&#xA;               title = &#34;Cool new title for our awesome table&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; LaTeX output &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;% Overview table generated in R version 4.0.0 (2020-04-24) using overviewR &#xA;% Table created on 2020-06-21&#xA;\begin{table}[ht] &#xA; \centering &#xA; \caption{Cool new title for our awesome table} &#xA; \begin{tabular}{ll} &#xA; \hline &#xA;Countries &amp;amp; Years \\ &#xA;\hline &#xA; RWA &amp;amp; 1990 - 1995 \\ &#xA; AGO &amp;amp; 1990 - 1992 \\ &#xA; BEN &amp;amp; 1995 - 1999 \\ &#xA; GBR &amp;amp; 1991, 1993, 1995, 1997, 1999 \\ &#xA; FRA &amp;amp; 1993, 1996, 1999 \\ &#xA; \hline &#xA; \end{tabular} &#xA; \end{table} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/ex2.png&#34; height=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The same function can also be used for outputs from the &lt;code&gt;overview_crosstab&lt;/code&gt; function by using the argument &lt;code&gt;crosstab = TRUE&lt;/code&gt;. There are also options to label the respective conditions (&lt;code&gt;cond1&lt;/code&gt; and &lt;code&gt;cond2&lt;/code&gt;). Note that this should correspond to the conditions (&lt;code&gt;cond1&lt;/code&gt; and &lt;code&gt;cond2&lt;/code&gt;) specified in the &lt;code&gt;overview_crosstab&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_print(&#xA;  obj = output_crosstab,&#xA;  title = &#34;Cross table of the sample&#34;,&#xA;  crosstab = TRUE,&#xA;  cond1 = &#34;GDP&#34;,&#xA;  cond2 = &#34;Population&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; LaTeX output &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;% Overview table generated in R version 4.0.0 (2020-04-24) using overviewR &#xA;% Table created on 2020-06-21&#xA;% Please add the following packages to your document preamble: &#xA;% \usepackage{multirow} &#xA;% \usepackage{tabularx} &#xA;% \newcolumntype{b}{X} &#xA;% \newcolumntype{s}{&amp;gt;{\hsize=.5\hsize}X} &#xA;\begin{table}[ht] &#xA;\caption{Cross table of the sample} &#xA; \begin{tabularx}{\textwidth}{ssbb} &#xA;\hline &amp;amp; &amp;amp; \multicolumn{2}{c}{\textbf{GDP}} \\ &#xA; &amp;amp; &amp;amp; \textbf{Fulfilled} &amp;amp; \textbf{Not fulfilled} \\ &#xA; \hline \\ &#xA; \multirow{2}{*}{\textbf{Population}} &amp;amp; \textbf{Fulfilled} &amp;amp; &#xA; AGO (1990, 1992), FRA (1993), GBR (1997) &amp;amp; BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994)\\  &#xA; \\ \hline \\ &#xA; &amp;amp; \textbf{Not fulfilled} &amp;amp;  BEN (1997), RWA (1990) &amp;amp; AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)\\  \hline \\ &#xA; \end{tabularx} &#xA; \end{table} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/ex3.png&#34; height=&#34;200&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;overview_print&lt;/code&gt; further allows more specifications such as the font size or a a label. &lt;em&gt;These functions are currently supported only in the development version of the package.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_print(obj = output_table,&#xA;               fontsize = &#34;scriptsize&#34;,&#xA;               label = &#34;tab:overview&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;code&gt;save_out = TRUE&lt;/code&gt; the function exports the output as a &lt;code&gt;.tex&lt;/code&gt; file and stores it on the device.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_print(obj = output_table, save_out = TRUE, path = &#34;SET-YOUR-PATH&#34;,&#xA;               file = &#34;output.tex&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_plot&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In addition to tables, &lt;code&gt;overviewR&lt;/code&gt; also provides plots to illustrate the structure of your data. &lt;code&gt;overview_plot&lt;/code&gt; illustrates the information that is generated in &lt;code&gt;overview_table&lt;/code&gt; in a ggplot graphic. All scope objects (e.g., countries) are listed on the y-axis where horizontal lines indicate the coverage across the entire time frame of the data (x-axis). This helps to spot gaps in the data for specific scope objects and outlines at what time point they occur.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data(toydata)&#xA;overview_plot(dat = toydata, id = ccode, time = year)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-20-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;The results are sorted alphabetically by default. The order can also be reversed by setting &lt;code&gt;asc&lt;/code&gt; to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_plot(dat = toydata, id = ccode, time = year, asc = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-21-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;There is also an option to color the time lines conditionally. Here, we introduce a dummy variable that indicates whether the year was before 1995 or not. We use this dummy to color the time lines using the &lt;code&gt;color&lt;/code&gt; argument. &lt;em&gt;Note, this argument is currently only implemented in the development version that can be accessed from GitHub.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load the GitHub version&#xA;library(devtools) # Tools to Make Developing R Packages Easier&#xA;devtools::install_github(&#34;cosimameyer/overviewR&#34;)&#xA;#&amp;gt; &#xA;#&amp;gt;      checking for file ‘/private/var/folders/23/l11m8s8s42x85pmh6100kf180000gn/T/Rtmpn9zPqU/remotesbc8c1543222f/cosimameyer-overviewR-c07706e/DESCRIPTION’ ...  ✓  checking for file ‘/private/var/folders/23/l11m8s8s42x85pmh6100kf180000gn/T/Rtmpn9zPqU/remotesbc8c1543222f/cosimameyer-overviewR-c07706e/DESCRIPTION’&#xA;#&amp;gt;   ─  preparing ‘overviewR’:&#xA;#&amp;gt;      checking DESCRIPTION meta-information ...  ✓  checking DESCRIPTION meta-information&#xA;#&amp;gt;   ─  checking for LF line-endings in source and make files and shell scripts&#xA;#&amp;gt;   ─  checking for empty or unneeded directories&#xA;#&amp;gt;   ─  building ‘overviewR_0.0.7.999.1.tar.gz’&#xA;#&amp;gt;      &#xA;#&amp;gt; &#xA;library(overviewR) # Easily Extracting Information About Your Data&#xA;library(magrittr) # A Forward-Pipe Operator for R&#xA;&#xA;# Code whether a year was before 1995&#xA;toydata %&amp;lt;&amp;gt;%&#xA;  dplyr::mutate(before = ifelse(year &amp;lt; 1995, 1, 0))&#xA;&#xA;# Plot using the `color` argument&#xA;overview_plot(dat = toydata, id = ccode, time = year, color = before)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-22-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;The development version also allows to change the dot size using the &lt;code&gt;dot_size&lt;/code&gt; argument. The default is “2”. &lt;em&gt;Note, this argument is currently only implemented in the development version that can be accessed from GitHub.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Plot using the `color` argument&#xA;overview_plot(dat = toydata, id = ccode, time = year, dot_size = 5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/dot.png&#34; height=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_crossplot&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To visualize also the cross table, &lt;code&gt;overview_crossplot&lt;/code&gt; does the job. &lt;em&gt;Note, this function is currently only implemented in the development version that can be accessed from GitHub.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load the GitHub version&#xA;library(devtools) # Tools to Make Developing R Packages Easier&#xA;devtools::install_github(&#34;cosimameyer/overviewR&#34;)&#xA;library(overviewR) # Easily Extracting Information About Your Data&#xA;&#xA;overview_crossplot(&#xA;  toydata,&#xA;  id = ccode,&#xA;  time = year,&#xA;  cond1 = gdp,&#xA;  cond2 = population,&#xA;  threshold1 = 25000,&#xA;  threshold2 = 27000,&#xA;  color = TRUE,&#xA;  label = TRUE&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-24-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_heat&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;overview_heat&lt;/code&gt; takes a closer look at the time and scope conditions by visualizing the data coverage for each time and scope combination in a ggplot heat map. This function is best explained using an example. Suppose you have a dataset with monthly data for different countries and want to know if data is available for each country in every month. &lt;code&gt;overview_heat&lt;/code&gt; intuitively does this by plotting a heat map where each cell indicates the coverage for that specific combination of time and scope (e,g., country-year). As illustrated below, the darker the cell is, the more coverage it has. The plot also indicates the relative or absolute coverage of each cell. For instance, Angola (“AGO”) in 1991 shows the coverage of 75%. This means that of all potential 12 months of coverage (12 months for one year), only 9 are covered.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_heat(toydata_red,&#xA;                ccode,&#xA;                year,&#xA;                perc = TRUE,&#xA;                exp_total = 12)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-26-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_na&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;overview_na&lt;/code&gt; is a simple function that provides information about the content of all variables in your data, not only the time and scope conditions. It returns a horizontal ggplot bar plot that indicates the amount of missing data (NAs) for each variable (on the y-axis). You can choose whether to display the relative amount of NAs for each variable in percentage (the default) or the total number of NAs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_na(toydata_with_na)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-28-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_na(toydata_with_na, perc = FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-29-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;&lt;code&gt;overview_overlap&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This function allows to compare two data sets. We are currently working on an extended version that allows comparing &amp;gt;2 data sets. &lt;em&gt;Note, this function is currently only implemented in the development version that can be accessed from GitHub.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;At the current development stage, the function works as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;&#xA;# Subset one data set for comparison&#xA;toydata2 &amp;lt;- toydata %&amp;gt;% dplyr::filter(year &amp;gt; 1992)&#xA;&#xA;overview_overlap(&#xA;  dat1 = toydata,&#xA;  dat2 = toydata2,&#xA;  dat1_id = ccode,&#xA;  dat2_id = ccode,&#xA;  plot_type = &#34;bar&#34; # This is the default&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/bar.png&#34; height=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Or a Venn diagram&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;overview_overlap(&#xA;  dat1 = toydata,&#xA;  dat2 = toydata2,&#xA;  dat1_id = ccode,&#xA;  dat2_id = ccode,&#xA;  plot_type = &#34;venn&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/venn.png&#34; height=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Compatibilities with other packages&lt;/h2&gt; &#xA;&lt;h3&gt;Presenting tables: &lt;code&gt;flextable&lt;/code&gt;, &lt;code&gt;xtable&lt;/code&gt;, and &lt;code&gt;kable&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The outputs of &lt;code&gt;overview_tab&lt;/code&gt; and &lt;code&gt;overview_crosstab&lt;/code&gt; are also compatible with other functions such as &lt;a href=&#34;https://CRAN.R-project.org/package=xtable&#34;&gt;&lt;code&gt;xtable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://CRAN.R-project.org/package=flextable&#34;&gt;&lt;code&gt;flextable&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/kable.html&#34;&gt;&lt;code&gt;kable&lt;/code&gt;&lt;/a&gt; from &lt;a href=&#34;https://yihui.org/knitr/&#34;&gt;&lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Two examples are shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(flextable) # not installed on this machine&#xA;table_output &amp;lt;- qflextable(output_table)&#xA;table_output &amp;lt;-&#xA;  set_header_labels(table_output,&#xA;                    ccode = &#34;Countries&#34;,&#xA;                    time_frame = &#34;Time frame&#34;)&#xA;set_table_properties(&#xA;  table_output,&#xA;  width = .4,&#xA;  layout = &#34;autofit&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(knitr) # A General-Purpose Package for Dynamic Report Generation in R&#xA;knitr::kable(output_table)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ccode&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;time_frame&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RWA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1990-1995&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AGO&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1990-1992&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BEN&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1995-1999&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GBR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1991, 1993, 1995, 1997, 1999&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FRA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1993, 1996, 1999&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Customizing plots: &lt;code&gt;ggplot2&lt;/code&gt; and other packages&lt;/h3&gt; &#xA;&lt;p&gt;The plot functions are fully &lt;code&gt;ggplot2&lt;/code&gt; based. While a theme is pre-defined, this can easily be overwritten.&lt;/p&gt; &#xA;&lt;p&gt;A classical &lt;code&gt;ggplot2&lt;/code&gt; theme alternative&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2) # Create Elegant Data Visualisations Using the Grammar of Graphics&#xA;&#xA;overview_na(toydata_with_na) +&#xA;  ggplot2::theme_minimal() &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-35-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;h3&gt;Workflow: &lt;code&gt;tidyverse&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;All functions are further easily accessible using a common &lt;code&gt;tidyverse&lt;/code&gt; workflow. Here are just three examples – the possibilities are endless.&lt;/p&gt; &#xA;&lt;p&gt;Using a filter function&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr) # A Grammar of Data Manipulation # A Grammar of Data Manipulation&#xA;&#xA;toydata_with_na %&amp;gt;% &#xA;  dplyr::filter(year &amp;gt; 1993) %&amp;gt;% &#xA;  overview_na()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-36-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;Using mutate to generate meaningful country names&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(countrycode) # Convert Country Names and Country Codes&#xA;library(dplyr) # A Grammar of Data Manipulation # A Grammar of Data Manipulation&#xA;&#xA;toydata %&amp;gt;% &#xA;  # Transform the country code (ISO3 character code) into a country name using the `countrycode` package&#xA;  dplyr::mutate(country = countrycode::countrycode(ccode, &#34;iso3c&#34;, &#34;country.name&#34;)) %&amp;gt;% &#xA;  overview_plot(id = country, time = year)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/unnamed-chunk-37-1.png&#34; width=&#34;50%&#34; style=&#34;display: block; margin: auto;&#34;&gt; &#xA;&lt;p&gt;Using different &lt;code&gt;overviewR&lt;/code&gt; functions after each other to generate a workflow&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Produces a printable LaTeX output&#xA;toydata %&amp;gt;% &#xA;  overview_tab(id = ccode, time = year) %&amp;gt;% &#xA;  overview_print()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;% Overview table generated in R version 4.0.2 (2020-06-22) using overviewR &#xA;% Table created on 2020-12-30&#xA;\begin{table}[ht] &#xA; \centering &#xA; \caption{Time and scope of the sample} &#xA;\label{tab:tab1} &#xA;&#xA;\begin{tabular}{ll} &#xA; \hline &#xA;Sample &amp;amp; Time frame \\ &#xA;\hline &#xA; AGO &amp;amp; 1990 - 1992 \\ &#xA; BEN &amp;amp; 1995 - 1999 \\ &#xA; FRA &amp;amp; 1993, 1996, 1999 \\ &#xA; GBR &amp;amp; 1991, 1993, 1995, 1997, 1999 \\ &#xA; RWA &amp;amp; 1990 - 1995 \\ &#xA; \hline &#xA; \end{tabular} &#xA; \end{table} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to compare two data sets using &lt;code&gt;overview_tab&lt;/code&gt;, this is not (yet) implemented in &lt;code&gt;overviewR&lt;/code&gt; but there is currently a workaround.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(overviewR)&#xA;library(dplyr)&#xA;library(xtable)&#xA;&#xA;# Load data&#xA;data(toydata)&#xA;&#xA;# Restrict the data so that we have something to compare :-)&#xA;toydata_res &amp;lt;- toydata %&amp;gt;% &#xA;  dplyr::filter(year &amp;gt; 1992)&#xA;&#xA;# Generate two overview_tab objects&#xA;dat1 &amp;lt;- overview_tab(toydata, id = ccode, time = year)&#xA;dat2 &amp;lt;- overview_tab(toydata_res, id = ccode, time = year)&#xA;&#xA;# And now we use full_join to combine both&#xA;dat_full &amp;lt;- dat1 %&amp;gt;% &#xA;  dplyr::full_join(dat2, by = &#34;ccode&#34;) %&amp;gt;% &#xA;  dplyr::rename(time_dat1 = time_frame.x,&#xA;                time_dat2 = time_frame.y)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Having a look at the output, we see that this is exactly what we wanted to have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(dat_full)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;#&amp;gt; # A tibble: 5 x 3&#xA;#&amp;gt; # Groups:   ccode [5]&#xA;#&amp;gt;   ccode time_dat1                    time_dat2             &#xA;#&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;                        &amp;lt;chr&amp;gt;                 &#xA;#&amp;gt; 1 AGO   1990 - 1992                  &amp;lt;NA&amp;gt;                  &#xA;#&amp;gt; 2 BEN   1995 - 1999                  1995 - 1999           &#xA;#&amp;gt; 3 FRA   1993, 1996, 1999             1993, 1996, 1999      &#xA;#&amp;gt; 4 GBR   1991, 1993, 1995, 1997, 1999 1993, 1995, 1997, 1999&#xA;#&amp;gt; 5 RWA   1990 - 1995                  1993 - 1995&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;overview_print&lt;/code&gt; cannot handle this object (yet), so we use &lt;code&gt;xtable&lt;/code&gt; instead which gives us the LaTeX output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;print(xtable(dat_full), include.rownames=FALSE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;% latex table generated in R 4.0.2 by xtable 1.8-4 package&#xA;% Tue Feb 16 18:20:51 2021&#xA;\begin{table}[ht]&#xA;\centering&#xA;\begin{tabular}{lll}&#xA;  \hline&#xA;ccode &amp;amp; time\_dat1 &amp;amp; time\_dat2 \\ &#xA;  \hline&#xA;AGO &amp;amp; 1990 - 1992 &amp;amp;  \\ &#xA;  BEN &amp;amp; 1995 - 1999 &amp;amp; 1995 - 1999 \\ &#xA;  FRA &amp;amp; 1993, 1996, 1999 &amp;amp; 1993, 1996, 1999 \\ &#xA;  GBR &amp;amp; 1991, 1993, 1995, 1997, 1999 &amp;amp; 1993, 1995, 1997, 1999 \\ &#xA;  RWA &amp;amp; 1990 - 1995 &amp;amp; 1993 - 1995 \\ &#xA;   \hline&#xA;\end{tabular}&#xA;\end{table}&#xA;&lt;/code&gt;&lt;/pre&gt;  &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cosimameyer/overviewR/master/man/figures/extension1.png&#34; height=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;The hex sticker is generated by ourselves using the &lt;a href=&#34;https://github.com/GuangchuangYu/hexSticker&#34;&gt;&lt;code&gt;hexSticker&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jshilts/shilts-et-al-2022-immunoreceptors</title>
    <updated>2022-08-16T01:54:01Z</updated>
    <id>tag:github.com,2022-08-16:/jshilts/shilts-et-al-2022-immunoreceptors</id>
    <link href="https://github.com/jshilts/shilts-et-al-2022-immunoreceptors" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Supporting data files and code for the publication by Shilts et al.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Data files and code accompanying Shilts &lt;em&gt;et al.&lt;/em&gt;, 2022&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains all of the data files and code needed to reproduce the analyses published in the paper &lt;br&gt; &lt;strong&gt;A physical wiring diagram for the human immune system&lt;/strong&gt; &lt;br&gt; Jarrod Shilts &lt;em&gt;et al.&lt;/em&gt;, 2022 &lt;br&gt; &lt;br&gt; When reusing any of these datasets or scripts, please cite our paper : &lt;a href=&#34;https://www.nature.com/articles/s41586-022-05028-x&#34;&gt;https://www.nature.com/articles/s41586-022-05028-x&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is included here&lt;/h2&gt; &#xA;&lt;p&gt;Each folder contains both the raw and processed data files that were used in this study, along with the custom scripts that run the paper&#39;s calculations and plot figures. For most of the data sets that are most likely to be useful to re-use by others, we have already provided these as Supplementary Tables, which can be accessed at the &lt;a href=&#34;https://www.nature.com/articles/s41586-022-05028-x#Sec41&#34;&gt;journal&#39;s website&lt;/a&gt;. Therefore these files are provided predominantly for more advanced projects that aim to build off our study, as well as to ensure reproduciblity and transparency. &lt;br&gt;&lt;br&gt;&lt;br&gt; Given the diverse types of analyses included in this larger study, the repository is divided into folders that each cover a different section of the paper: &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_screen_processing&lt;/strong&gt; : raw and processed data from the comprehensive protien-protein interaction screening done using the SAVEXIS technique to discover receptor binding partners. The code covers the processing of screen data and benchmarking. This mostly covers Figure 1 of the paper. &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_affinity&lt;/strong&gt; : datasets of surface interactions integrated with proteomics expression. The code analyzes these datasets to test hypotheses about interaction abundance and binding kinetics. This mostly covers Figure 2 of the paper. &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_modelling&lt;/strong&gt; : parameter values for the mathematical model of cell-cell association, along with the associated code for evaluating the model. This covers parts of Figures 2 and Figure 4 of the paper. &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_scRNA_website&lt;/strong&gt; : integrated datasets of single-cell RNAseq and surface protein interaction matrices. The code provides a range of interactive plotting funcitons. This covers the first part of Figure 3 of the paper. &lt;br&gt; This particular code base can be explored more conveninently for day-to-day use by accessing our web tool :&lt;a href=&#34;https://www.sanger.ac.uk/tool/immune-interaction/immune-interaction/&#34;&gt;https://www.sanger.ac.uk/tool/immune-interaction/immune-interaction/&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_scRNA_analysis&lt;/strong&gt; : an extension of the folder above that contains additional code covering the middle sections of Figure 3. &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_code_spatialRNA&lt;/strong&gt; : spatial transcriptomics data from human lymph node provided by 10x Genomics. The code calculates the spatial colocalization of gene pairs. This covers the last portion of Figure 3. &lt;br&gt;&lt;br&gt; &lt;strong&gt;organized_pharm_analysis&lt;/strong&gt; : high-content microscopy data of isolated human immune cells stimulated with recombinant surface proteins. The code processes the data and plots the phenotypes found from the experiment. This covers Figure 4 of the paper. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to run the code&lt;/h3&gt; &#xA;&lt;p&gt;Code is written in either the Python or R programming languages. A summary of the versions and package depencies needed to run the code are summarized in the &lt;strong&gt;versions.txt&lt;/strong&gt; file. For conveninence, the R packages are also provided as a &lt;strong&gt;renv.lock&lt;/strong&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Jfortin1/ComBatHarmonization</title>
    <updated>2022-08-16T01:54:01Z</updated>
    <id>tag:github.com,2022-08-16:/Jfortin1/ComBatHarmonization</id>
    <link href="https://github.com/Jfortin1/ComBatHarmonization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Harmonization of multi-site imaging data with ComBat&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComBatHarmonization&lt;/h1&gt; &#xA;&lt;h3&gt;Harmonization of multi-site imaging data with ComBat&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Maintainer&lt;/strong&gt;: Jean-Philippe Fortin, &lt;a href=&#34;mailto:fortin946@gmail.com&#34;&gt;fortin946@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Licenses&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R code: Artistic 2.0 License&lt;/li&gt; &#xA; &lt;li&gt;Python code: MIT License&lt;/li&gt; &#xA; &lt;li&gt;Matlab code: MIT License&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;: If you are using ComBat for the harmonization of multi-site imaging data, please cite the following papers:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Citation&lt;/th&gt; &#xA;   &lt;th&gt;Paper Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ComBat for multi-site DTI data&lt;/td&gt; &#xA;   &lt;td&gt;Jean-Philippe Fortin, Drew Parker, Birkan Tunc, Takanori Watanabe, Mark A Elliott, Kosha Ruparel, David R Roalf, Theodore D Satterthwaite, Ruben C Gur, Raquel E Gur, Robert T Schultz, Ragini Verma, Russell T Shinohara. &lt;strong&gt;Harmonization Of Multi-Site Diffusion Tensor Imaging Data&lt;/strong&gt;. NeuroImage, 161, 149-170, 2017&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S1053811917306948?via%3Dihub#!&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ComBat for multi-site cortical thickness measurements&lt;/td&gt; &#xA;   &lt;td&gt;Jean-Philippe Fortin, Nicholas Cullen, Yvette I. Sheline, Warren D. Taylor, Irem Aselcioglu, Philip A. Cook, Phil Adams, Crystal Cooper, Maurizio Fava, Patrick J. McGrath, Melvin McInnis, Mary L. Phillips, Madhukar H. Trivedi, Myrna M. Weissman, Russell T. Shinohara. &lt;strong&gt;Harmonization of cortical thickness measurements across scanners and sites&lt;/strong&gt;. NeuroImage, 167, 104-120, 2018&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S105381191730931X&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Original ComBat paper for gene expression array&lt;/td&gt; &#xA;   &lt;td&gt;W. Evan Johnson and Cheng Li, &lt;strong&gt;Adjusting batch effects in microarray expression data using empirical Bayes methods&lt;/strong&gt;. Biostatistics, 8(1):118-127, 2007.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://academic.oup.com/biostatistics/article/8/1/118/252073/Adjusting-batch-effects-in-microarray-expression&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jfortin1/ComBatHarmonization/master/#id-section1&#34;&gt;1. Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jfortin1/ComBatHarmonization/master/#id-section2&#34;&gt;2. Software implementations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jfortin1/ComBatHarmonization/master/#id-section3&#34;&gt;3. Missing values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jfortin1/ComBatHarmonization/master/#id-section3&#34;&gt;4. FAQs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jfortin1/ComBatHarmonization/master/#id-section3&#34;&gt;5. News&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div id=&#34;id-section1&#34;&gt;&lt;/div&gt; &#xA;&lt;h2&gt;1. Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Imaging data suffer from technical between-scanner variation that hinders comparisons of images across imaging sites, scanners and over time. This includes common imaging modalities, such as MRI, fMRI and DTI, as well as measurements derived from those modalities, for instance ROI volumes, RAVENS maps, cortical thickness measurements, connectome matrices, etc. To maximize statistical power, post-processing data harmonization is a powerful technique to remove unwanted variation when combining data across scanners and sites.&lt;/p&gt; &#xA;&lt;p&gt;In two recent papers (&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S1053811917306948?via%3Dihub#!&#34;&gt;harmonization of DTI data&lt;/a&gt; and &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S105381191730931X&#34;&gt;harmonization of cortical thickness measurements&lt;/a&gt;) we have shown that &lt;a href=&#34;https://academic.oup.com/biostatistics/article/8/1/118/252073/Adjusting-batch-effects-in-microarray-expression&#34;&gt;ComBat&lt;/a&gt;, a popular batch-effect correction tool used in genomics, succesffuly removes inter-site technical variability while preserving inter-site biological variability. We showed that ComBat performs well for multi-site imaging studies that only have a few participants per site. We also showed that ComBat was robust to unbalanced studies, in which the biological covariate of interest is not balanced across sites.&lt;/p&gt; &#xA;&lt;p&gt;We recommend to use the ComBat harmonization method after imaging processing before downstream statistical analyses. The ComBat harmonization requires the imaging data to be represented in a matrix where rows are the imaging features (for instance voxels, ROIs or connectome edges) and columns are the participants. For example, for voxel-level analyses, this usually requires images to be registered to a common template space.&lt;/p&gt; &#xA;&lt;h3&gt;Input and parameters&lt;/h3&gt; &#xA;&lt;p&gt;Data inputs for ComBat are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;A data matrix&lt;/strong&gt;&lt;/em&gt;. The data to harmonize. Rows are features (for instance voxels or brain regions) and columns are participants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;A batch id vector&lt;/strong&gt;&lt;/em&gt;. A vector (length should be equal to the number of columns in the data matrix) that specifies the id for the batch, site, or scanner to correct for. ComBat only accepts one batch vector. You should provide the smallest unit of the study that you believe introduces unwanted variation. For instance, for a study with 2 sites and 3 scanners (1 site with 1 scanner, 1 site with 2 scanners), the id for scanner should be used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;Biological variables&lt;/strong&gt;&lt;/em&gt;. Optional design matrix specifying biological covariates that should be protected for during the removal of scanner/site effects, such as disease status, age, gender, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are several alternative modes of running ComBat:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;parametric=FALSE&lt;/code&gt;: will instead use a non-parametric prior method in the empirical Bayes procedure (default uses parametric priors).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;eb=FALSE&lt;/code&gt;: will not run the empirical Bayes procedure, and therefore location and scale parameters are not shrunk towards common factors averaged across features. This is equivalent to running a location-and-scale correction method for each feature separately. This is particularly useful for debugging and method development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mean.only=TRUE&lt;/code&gt;: will only adjust the mean of the site effects across sites (default adjusts for mean and variance). This option is recommended for studies where the variances are expected to be different across sites due to the biology.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div id=&#34;id-section2&#34;&gt;&lt;/div&gt; &#xA;&lt;h2&gt;2. Software implementations&lt;/h2&gt; &#xA;&lt;p&gt;The reference implementation (Standard Version) of ComBat, developed for gene expression analyses, is written in R and is part of the &lt;code&gt;sva&lt;/code&gt; package available through the Bioconductor project &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/sva.html&#34;&gt;here&lt;/a&gt;. We include here a reimplementation of ComBat in R, Matlab and Python (neuroCombat) for the harmonization of imaging data. Our R implementation extends the original code for more flexibility and additional visualization of the internal components of the algorithm. We are also currently working on several extensions of the original method that will be included here as well. We use the MIT license for the Python and Matlab code, and an Artistic License 2.0 for the R code to be compatible with the &lt;code&gt;sva&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jfortin1/ComBatHarmonization/tree/master/R&#34;&gt;R implementation webpage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jfortin1/ComBatHarmonization/tree/master/Python&#34;&gt;Python implementation webpage&lt;/a&gt; (neuroCombat)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jfortin1/ComBatHarmonization/tree/master/Matlab&#34;&gt;Matlab implementation webpage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Current implemented features&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;R&lt;/th&gt; &#xA;   &lt;th&gt;Python&lt;/th&gt; &#xA;   &lt;th&gt;Matlab&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parametric adjustments&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Non-parametric adjustments&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Empirical Bayes&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No empirical Bayes&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mean adjustment only&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reference batch&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Can handle missing values&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Testing and comparing the different implementations&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Testing&lt;/code&gt; directory contains code for testing and comparing the outputs from the R, Matlab and Python implementations. We routinely perform the analyses to make sure that all versions and implementations agree with each other, as well as with the &lt;code&gt;sva&lt;/code&gt; implementation of ComBat, for all modes of running ComBat (parametric/non-parametric/eb/mean.only).&lt;/p&gt; &#xA;&lt;div id=&#34;id-section3&#34;&gt;&lt;/div&gt; &#xA;&lt;h2&gt;3. Handling of missing values&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For R, the current implementation accepts missing values. Constant rows, and rows with missing values only, need to be removed before running ComBat. Not removing such rows will results in an error, or a matrix of NaN values.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Matlab and Python, the input data can only contain finite values (no NA or Nan). Constant rows, and rows with missing values only, need to be removed before running ComBat. Not removing such rows will results in an error, or a matrix of NaN values.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div id=&#34;id-section4&#34;&gt;&lt;/div&gt; &#xA;&lt;h2&gt;4. FAQs&lt;/h2&gt; &#xA;&lt;div id=&#34;id-section5&#34;&gt;&lt;/div&gt; &#xA;&lt;h2&gt;5. News&lt;/h2&gt; &#xA;&lt;p&gt;05-23-2020: Reference batch option (&lt;code&gt;ref.batch&lt;/code&gt;) now implemented in Python.&lt;/p&gt; &#xA;&lt;p&gt;05-19-2020: Reference batch option (&lt;code&gt;ref.batch&lt;/code&gt;) now implemented in R.&lt;/p&gt; &#xA;&lt;p&gt;05-17-2020: Mean adjustment only option (&lt;code&gt;mean.only=True&lt;/code&gt;) now implemented in both Python and R.&lt;/p&gt; &#xA;&lt;p&gt;05-15-2020: Non-parametric adjustments (&lt;code&gt;parametric=False&lt;/code&gt;), and &lt;code&gt;eb=False&lt;/code&gt; now implemented in both Python and R.&lt;/p&gt; &#xA;&lt;p&gt;05-14-2020: We migrated our official Python implementation (neuroCombat) here for maintainability.&lt;/p&gt; &#xA;&lt;p&gt;03-06-2020: ComBat in R now accepts missing values.&lt;/p&gt; &#xA;&lt;p&gt;05-19-2019: Added the option of running the non-parametric version of ComBat in the R implementation.&lt;/p&gt; &#xA;&lt;p&gt;05-19-2019: Added the option of running the non-parametric version of ComBat in the Matlab implementation.&lt;/p&gt;</summary>
  </entry>
</feed>