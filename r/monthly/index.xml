<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-01T02:02:28Z</updated>
  <subtitle>Monthly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tidyverse/dplyr</title>
    <updated>2022-10-01T02:02:28Z</updated>
    <id>tag:github.com,2022-10-01:/tidyverse/dplyr</id>
    <link href="https://github.com/tidyverse/dplyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dplyr: A grammar of data manipulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dplyr &lt;a href=&#34;https://dplyr.tidyverse.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/dplyr/main/man/figures/logo.png&#34; align=&#34;right&#34; height=&#34;139&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/package=dplyr&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/dplyr&#34; alt=&#34;CRAN status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/dplyr/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/dplyr?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/dplyr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;dplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; adds new variables that are functions of existing variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select()&lt;/code&gt; picks variables based on their names.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; picks cases based on their values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;summarise()&lt;/code&gt; reduces multiple values down to a single summary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; changes the ordering of the rows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These all combine naturally with &lt;code&gt;group_by()&lt;/code&gt; which allows you to perform any operation “by group”. You can learn more about them in &lt;code&gt;vignette(&#34;dplyr&#34;)&lt;/code&gt;. As well as these single-table verbs, dplyr also provides a variety of two-table verbs, which you can learn about in &lt;code&gt;vignette(&#34;two-table&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to dplyr, the best place to start is the &lt;a href=&#34;https://r4ds.had.co.nz/transform.html&#34;&gt;data transformation chapter&lt;/a&gt; in R for data science.&lt;/p&gt; &#xA;&lt;h2&gt;Backends&lt;/h2&gt; &#xA;&lt;p&gt;In addition to data frames/tibbles, dplyr makes working with other computational backends accessible and efficient. Below is a list of alternative backends:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arrow.apache.org/docs/r&#34;&gt;arrow&lt;/a&gt; for larger-than-memory datasets, including on remote cloud storage like AWS S3, using the Apache Arrow C++ engine, &lt;a href=&#34;https://arrow.apache.org/docs/cpp/streaming_execution.html&#34;&gt;Acero&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dtplyr.tidyverse.org/&#34;&gt;dtplyr&lt;/a&gt; for large, in-memory datasets. Translates your dplyr code to high performance &lt;a href=&#34;https://rdatatable.gitlab.io/data.table/&#34;&gt;data.table&lt;/a&gt; code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dbplyr.tidyverse.org/&#34;&gt;dbplyr&lt;/a&gt; for data stored in a relational database. Translates your dplyr code to SQL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://duckdb.org/docs/api/r&#34;&gt;duckdb&lt;/a&gt; for large datasets that are still small enough to fit on your computer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://spark.rstudio.com&#34;&gt;sparklyr&lt;/a&gt; for very large datasets stored in &lt;a href=&#34;https://spark.apache.org&#34;&gt;Apache Spark&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get dplyr is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just dplyr:&#xA;install.packages(&#34;dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development version&lt;/h3&gt; &#xA;&lt;p&gt;To get a bug fix or to use a feature from the development version, you can install the development version of dplyr from GitHub.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/dplyr&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheat Sheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/main/data-transformation.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/main/pngs/thumbnails/data-transformation-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)&#xA;&#xA;starwars %&amp;gt;% &#xA;  filter(species == &#34;Droid&#34;)&#xA;#&amp;gt; # A tibble: 6 × 14&#xA;#&amp;gt;   name   height  mass hair_color skin_color eye_c…¹ birth…² sex   gender homew…³&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;  &#xA;#&amp;gt; 1 C-3PO     167    75 &amp;lt;NA&amp;gt;       gold       yellow      112 none  mascu… Tatooi…&#xA;#&amp;gt; 2 R2-D2      96    32 &amp;lt;NA&amp;gt;       white, bl… red          33 none  mascu… Naboo  &#xA;#&amp;gt; 3 R5-D4      97    32 &amp;lt;NA&amp;gt;       white, red red          NA none  mascu… Tatooi…&#xA;#&amp;gt; 4 IG-88     200   140 none       metal      red          15 none  mascu… &amp;lt;NA&amp;gt;   &#xA;#&amp;gt; 5 R4-P17     96    NA none       silver, r… red, b…      NA none  femin… &amp;lt;NA&amp;gt;   &#xA;#&amp;gt; # … with 1 more row, 4 more variables: species &amp;lt;chr&amp;gt;, films &amp;lt;list&amp;gt;,&#xA;#&amp;gt; #   vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;, and abbreviated variable names&#xA;#&amp;gt; #   ¹​eye_color, ²​birth_year, ³​homeworld&#xA;#&amp;gt; # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names&#xA;&#xA;starwars %&amp;gt;% &#xA;  select(name, ends_with(&#34;color&#34;))&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           hair_color skin_color  eye_color&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;    &#xA;#&amp;gt; 1 Luke Skywalker blond      fair        blue     &#xA;#&amp;gt; 2 C-3PO          &amp;lt;NA&amp;gt;       gold        yellow   &#xA;#&amp;gt; 3 R2-D2          &amp;lt;NA&amp;gt;       white, blue red      &#xA;#&amp;gt; 4 Darth Vader    none       white       yellow   &#xA;#&amp;gt; 5 Leia Organa    brown      light       brown    &#xA;#&amp;gt; # … with 82 more rows&#xA;#&amp;gt; # ℹ Use `print(n = ...)` to see more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  mutate(name, bmi = mass / ((height / 100)  ^ 2)) %&amp;gt;%&#xA;  select(name:mass, bmi)&#xA;#&amp;gt; # A tibble: 87 × 4&#xA;#&amp;gt;   name           height  mass   bmi&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;           &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Luke Skywalker    172    77  26.0&#xA;#&amp;gt; 2 C-3PO             167    75  26.9&#xA;#&amp;gt; 3 R2-D2              96    32  34.7&#xA;#&amp;gt; 4 Darth Vader       202   136  33.3&#xA;#&amp;gt; 5 Leia Organa       150    49  21.8&#xA;#&amp;gt; # … with 82 more rows&#xA;#&amp;gt; # ℹ Use `print(n = ...)` to see more rows&#xA;&#xA;starwars %&amp;gt;% &#xA;  arrange(desc(mass))&#xA;#&amp;gt; # A tibble: 87 × 14&#xA;#&amp;gt;   name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;         &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;  &#xA;#&amp;gt; 1 Jabba Desil…    175  1358 &amp;lt;NA&amp;gt;    green-… orange    600   herm… mascu… Nal Hu…&#xA;#&amp;gt; 2 Grievous        216   159 none    brown,… green,…    NA   male  mascu… Kalee  &#xA;#&amp;gt; 3 IG-88           200   140 none    metal   red        15   none  mascu… &amp;lt;NA&amp;gt;   &#xA;#&amp;gt; 4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…&#xA;#&amp;gt; 5 Tarfful         234   136 brown   brown   blue       NA   male  mascu… Kashyy…&#xA;#&amp;gt; # … with 82 more rows, 4 more variables: species &amp;lt;chr&amp;gt;, films &amp;lt;list&amp;gt;,&#xA;#&amp;gt; #   vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;, and abbreviated variable names&#xA;#&amp;gt; #   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld&#xA;#&amp;gt; # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names&#xA;&#xA;starwars %&amp;gt;%&#xA;  group_by(species) %&amp;gt;%&#xA;  summarise(&#xA;    n = n(),&#xA;    mass = mean(mass, na.rm = TRUE)&#xA;  ) %&amp;gt;%&#xA;  filter(&#xA;    n &amp;gt; 1,&#xA;    mass &amp;gt; 50&#xA;  )&#xA;#&amp;gt; # A tibble: 8 × 3&#xA;#&amp;gt;   species      n  mass&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&#xA;#&amp;gt; 1 Droid        6  69.8&#xA;#&amp;gt; 2 Gungan       3  74  &#xA;#&amp;gt; 3 Human       35  82.8&#xA;#&amp;gt; 4 Kaminoan     2  88  &#xA;#&amp;gt; 5 Mirialan     2  53.1&#xA;#&amp;gt; # … with 3 more rows&#xA;#&amp;gt; # ℹ Use `print(n = ...)` to see more rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a clear bug, please file an issue with a minimal reproducible example on &lt;a href=&#34;https://github.com/tidyverse/dplyr/issues&#34;&gt;GitHub&lt;/a&gt;. For questions and other discussion, please use &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;community.rstudio.com&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/d/forum/manipulatr&#34;&gt;manipulatr mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://dplyr.tidyverse.org/CODE_OF_CONDUCT&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tidyverse/ggplot2</title>
    <updated>2022-10-01T02:02:28Z</updated>
    <id>tag:github.com,2022-10-01:/tidyverse/ggplot2</id>
    <link href="https://github.com/tidyverse/ggplot2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of the Grammar of Graphics in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggplot2 &lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/logo.png&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tidyverse/ggplot2/actions&#34;&gt;&lt;img src=&#34;https://github.com/tidyverse/ggplot2/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/tidyverse/ggplot2?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tidyverse/ggplot2/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov test coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=ggplot2&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/ggplot2&#34; alt=&#34;CRAN_Status_Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href=&#34;https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448/ref=as_li_ss_tl&#34;&gt;The Grammar of Graphics&lt;/a&gt;. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# The easiest way to get ggplot2 is to install the whole tidyverse:&#xA;install.packages(&#34;tidyverse&#34;)&#xA;&#xA;# Alternatively, install just ggplot2:&#xA;install.packages(&#34;ggplot2&#34;)&#xA;&#xA;# Or the development version from GitHub:&#xA;# install.packages(&#34;devtools&#34;)&#xA;devtools::install_github(&#34;tidyverse/ggplot2&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png&#34; width=&#34;630&#34; height=&#34;252&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a deep philosophy of visualisation. However, in most cases you start with &lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales (like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like &lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)&#xA;&#xA;ggplot(mpg, aes(displ, hwy, colour = class)) + &#xA;  geom_point()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/README-example-1.png&#34; alt=&#34;&#34;&gt;&#xA; &lt;!-- --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lifecycle&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lifecycle.r-lib.org/articles/stages.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;lifecycle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of people to make millions of plots. That means, by-and-large, ggplot2 itself changes relatively little. When we do make changes, they will be generally to add new functions or arguments rather than changing the behaviour of existing functions, and if we do make changes to existing behaviour we will do them for compelling reasons.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of extensions. See a community maintained list at &lt;a href=&#34;https://exts.ggplot2.tidyverse.org/gallery/&#34;&gt;https://exts.ggplot2.tidyverse.org/gallery/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learning ggplot2&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic introduction, rather than trying to learn from reading individual documentation pages. Currently, there are three good places to start:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://r4ds.had.co.nz/data-visualisation.html&#34;&gt;Data Visualisation&lt;/a&gt; and &lt;a href=&#34;https://r4ds.had.co.nz/graphics-for-communication.html&#34;&gt;Graphics for communication&lt;/a&gt; chapters in &lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt;. R for Data Science is designed to give you a comprehensive introduction to the &lt;a href=&#34;https://www.tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;, and these two chapters will get you up to speed with the essentials of ggplot2 as quickly as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to take an online course, try &lt;a href=&#34;https://learning.oreilly.com/videos/data-visualization-in/9781491963661/&#34;&gt;Data Visualization in R With ggplot2&lt;/a&gt; by Kara Woo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you’d like to follow a webinar, try &lt;a href=&#34;https://youtu.be/h29g21z0a68&#34;&gt;Plotting Anything with ggplot2&lt;/a&gt; by Thomas Lin Pedersen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to dive into making common graphics as quickly as possible, I recommend &lt;a href=&#34;https://r-graphics.org&#34;&gt;The R Graphics Cookbook&lt;/a&gt; by Winston Chang. It provides a set of recipes to solve common graphics problems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href=&#34;https://ggplot2-book.org&#34;&gt;ggplot2: Elegant Graphics for Data Analysis&lt;/a&gt;. It describes the theoretical underpinnings of ggplot2 and shows you how all the pieces fit together. This book helps you understand the theory that underpins ggplot2, and will help you create new types of graphics specifically tailored to your needs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://community.rstudio.com/&#34;&gt;RStudio community&lt;/a&gt; is a friendly place to ask any questions about ggplot2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50&#34;&gt;Stack Overflow&lt;/a&gt; is a great source of answers to common ggplot2 questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>tashapiro/tanya-data-viz</title>
    <updated>2022-10-01T02:02:28Z</updated>
    <id>tag:github.com,2022-10-01:/tashapiro/tanya-data-viz</id>
    <link href="https://github.com/tashapiro/tanya-data-viz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Personal data visualization side projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Personal Data Visualization Projects&lt;/h1&gt; &#xA;&lt;h2&gt;Objective&lt;/h2&gt; &#xA;&lt;p&gt;This repo is dedicated to sharing my adventures with miscellaneous data visualization projects with others.&lt;/p&gt; &#xA;&lt;p&gt;Most of my visualization work is coded with R, directories will include datasets and code files. Code files will include comments to walk through different steps of generating the visualiztion.&lt;/p&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tashapiro/tanya-data-viz/raw/main/dicaprio-gfs/dicaprio-gfs.R&#34;&gt;The Leo Chart&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Based on a chart found on &lt;a href=&#34;https://www.insider.com/leonardo-dicaprio-girlfriends-reddit-chart-2019-3&#34;&gt;Reddit circa 2019&lt;/a&gt; by &lt;strong&gt;TrustLittleBrother&lt;/strong&gt;. I wanted to recreate the infamous graphic using ggplot and related ggplot libarires in R. Images of Leo and his party of girlfriends taken from the original image. Code uses ggplot, ggtext, and ggimage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/dicaprio-gfs/plot/dicaprio-gfs.png&#34; alt=&#34;plot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tashapiro/tanya-data-viz/raw/main/westworld/code/ww-radar-plot.R&#34;&gt;Westworld Attribute Matrix&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Inspired by the &lt;a href=&#34;https://wwrp.fandom.com/wiki/Attribute_Matrix&#34;&gt;&#34;Attribute Matrix&#34;&lt;/a&gt; show on the HBO series, Westworld. Data from the &lt;a href=&#34;https://openpsychometrics.org/&#34;&gt;Open-Source Psychometrics Project&lt;/a&gt;. Plot created using &lt;strong&gt;ggplot&lt;/strong&gt;, &lt;strong&gt;ggtext&lt;/strong&gt;, and &lt;strong&gt;ggimage&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/westworld/plots/westworld-radar-plot.png&#34; alt=&#34;plot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tashapiro/tanya-data-viz/tree/main/nyt-abortion-map&#34;&gt;NYT Times - Where Abortion Is Prohibited&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Attempt to recreate New York Times&#39; abortion ban choropleth map using R (ggplot + ggpatern). The &lt;a href=&#34;https://www.instagram.com/p/Cf1-6ifuGfR/&#34;&gt;original image&lt;/a&gt; is from NYT&#39;s Instagram. &lt;img src=&#34;https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/nyt-abortion-map/recreated-nyt-map.jpeg&#34; alt=&#34;plot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tashapiro/tanya-data-viz/raw/main/selling-sunset/selling-sunset.R&#34;&gt;Selling Sunset&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Recreated the funny (and totally fictious) plot created by &lt;a href=&#34;https://twitter.com/bananapeele/status/1517987473837674501?s=20&amp;amp;t=nIAvx3gUHxyEAMogmJUOdg&#34;&gt;@bananapeele&lt;/a&gt;. &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/selling-sunset/selling_sunset.png&#34; alt=&#34;plot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tashapiro/tanya-data-viz/tree/main/globe-bar-plot&#34;&gt;Globe Bar Plots&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Inspiration for the Globe Bar plot came from &lt;a href=&#34;https://www.r-graph-gallery.com/circular-barplot.html&#34;&gt;R Graph Gallery&#39;s tutorial&lt;/a&gt; on circular bar plots. Used the tutorial to generate the bar plot, then overlayed a choropleth map (in the styel of a globe) in the center. Created using ggplot2.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/globe-bar-plot/africa_marriage.jpeg&#34; alt=&#34;plot&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>