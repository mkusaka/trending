<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub R Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:54:20Z</updated>
  <subtitle>Monthly Trending of R in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>plotly/plotly.R</title>
    <updated>2024-07-01T01:54:20Z</updated>
    <id>tag:github.com,2024-07-01:/plotly/plotly.R</id>
    <link href="https://github.com/plotly/plotly.R" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interactive graphing library for R&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/plotly.R/master/man/figures/plotly.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.R/actions&#34;&gt;&lt;img src=&#34;https://github.com/ropensci/plotly/workflows/R-CMD-check/badge.svg?sanitize=true&#34; alt=&#34;R-CMD-check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=plotly&#34;&gt;&lt;img src=&#34;https://www.r-pkg.org/badges/version/plotly&#34; alt=&#34;CRAN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cranlogs.r-pkg.org/badges/grand-total/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/grand-total/plotly&#34; alt=&#34;CRAN Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cranlogs.r-pkg.org/badges/plotly&#34;&gt;&lt;img src=&#34;https://cranlogs.r-pkg.org/badges/plotly&#34; alt=&#34;monthly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;An R package for creating interactive web graphics via the open source JavaScript graphing library &lt;a href=&#34;https://github.com/plotly/plotly.js&#34;&gt;plotly.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://dash.plotly.com/project-maintenance&#34;&gt; &lt;img src=&#34;https://dash.plotly.com/assets/images/maintained-by-community.png&#34; width=&#34;400px&#34; alt=&#34;Maintained by the Plotly Community&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install from CRAN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#34;plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the latest development version (on GitHub) via &lt;code&gt;{remotes}&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&#34;plotly/plotly&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Web-based ggplot2 graphics&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://github.com/tidyverse/ggplot2&#34;&gt;ggplot2&lt;/a&gt;, &lt;code&gt;ggplotly()&lt;/code&gt; converts your static plots to an interactive web-based version!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(plotly)&#xA;g &amp;lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) +&#xA;  stat_density_2d(aes(fill = ..level..), geom = &#34;polygon&#34;) + &#xA;  xlim(1, 6) + ylim(40, 100)&#xA;ggplotly(g)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/G1rSArP.gif&#34; alt=&#34;https://i.imgur.com/G1rSArP.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;ggplotly()&lt;/code&gt; tries to replicate the static ggplot2 version exactly (before any interaction occurs), but sometimes you need greater control over the interactive behavior. The &lt;code&gt;ggplotly()&lt;/code&gt; function itself has some convenient “high-level” arguments, such as &lt;code&gt;dynamicTicks&lt;/code&gt;, which tells plotly.js to dynamically recompute axes, when appropriate. The &lt;code&gt;style()&lt;/code&gt; function also comes in handy for &lt;em&gt;modifying&lt;/em&gt; the underlying trace attributes (e.g. &lt;a href=&#34;https://plotly.com/r/reference/#scatter-hoveron&#34;&gt;hoveron&lt;/a&gt;) used to generate the plot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg &amp;lt;- ggplotly(g, dynamicTicks = &#34;y&#34;)&#xA;style(gg, hoveron = &#34;points&#34;, hoverinfo = &#34;x+y+text&#34;, hoverlabel = list(bgcolor = &#34;white&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imgur.com/qRvLgea.gif&#34; alt=&#34;https://i.imgur.com/qRvLgea.gifv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Moreover, since &lt;code&gt;ggplotly()&lt;/code&gt; returns a plotly object, you can apply essentially any function from the R package on that object. Some useful ones include &lt;code&gt;layout()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#modifying-layout&#34;&gt;customizing the layout&lt;/a&gt;), &lt;code&gt;add_traces()&lt;/code&gt; (and its higher-level &lt;code&gt;add_*()&lt;/code&gt; siblings, for example &lt;code&gt;add_polygons()&lt;/code&gt;, for &lt;a href=&#34;https://plotly-r.com/improving-ggplotly.html#leveraging-statistical-output&#34;&gt;adding new traces/data&lt;/a&gt;), &lt;code&gt;subplot()&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/arranging-views.html#arranging-plotly-objects&#34;&gt;combining multiple plotly objects&lt;/a&gt;), and &lt;code&gt;plotly_json()&lt;/code&gt; (for inspecting the underlying JSON sent to plotly.js).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;ggplotly()&lt;/code&gt; function will also respect some “unofficial” &lt;strong&gt;ggplot2&lt;/strong&gt; aesthetics, namely &lt;code&gt;text&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/controlling-tooltips.html#tooltip-text-ggplotly&#34;&gt;customizing the tooltip&lt;/a&gt;), &lt;code&gt;frame&lt;/code&gt; (for &lt;a href=&#34;https://plotly-r.com/animating-views.html&#34;&gt;creating animations&lt;/a&gt;), and &lt;code&gt;ids&lt;/code&gt; (for ensuring sensible smooth transitions).&lt;/p&gt; &#xA;&lt;h3&gt;Using plotly without ggplot2&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;plot_ly()&lt;/code&gt; function provides a more direct interface to plotly.js so you can leverage more specialized chart types (e.g., &lt;a href=&#34;https://plotly.com/r/parallel-coordinates-plot/&#34;&gt;parallel coordinates&lt;/a&gt; or &lt;a href=&#34;https://plotly.com/r/maps/&#34;&gt;maps&lt;/a&gt;) or even some visualization that the ggplot2 API won’t ever support (e.g., surface, &lt;a href=&#34;https://plotly.com/r/3d-mesh/&#34;&gt;mesh&lt;/a&gt;, &lt;a href=&#34;https://plotly.com/r/trisurf/&#34;&gt;trisurf&lt;/a&gt;, etc).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_ly(z = ~volcano, type = &#34;surface&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://plot.ly/~brnvg/1134.png&#34; alt=&#34;https://plot.ly/~brnvg/1134&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about special features that the plotly R package provides (e.g., &lt;a href=&#34;https://plotly-r.com/client-side-linking.html&#34;&gt;client-side linking&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/linking-views-with-shiny.html&#34;&gt;&lt;strong&gt;shiny&lt;/strong&gt; integration&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/publish.html&#34;&gt;editing and generating static images&lt;/a&gt;, &lt;a href=&#34;https://plotly-r.com/javascript.html&#34;&gt;custom events in JavaScript&lt;/a&gt;, and more), see &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt;. You may already be familiar with existing plotly documentation (e.g., &lt;a href=&#34;https://plotly.com/r/&#34;&gt;https://plotly.com/r/&lt;/a&gt;), which is essentially a language-agnostic how-to guide for learning plotly.js, whereas &lt;a href=&#34;https://plotly-r.com&#34;&gt;https://plotly-r.com&lt;/a&gt; is meant to be more wholistic tutorial written by and for the R user. The package itself ships with a number of demos (list them by running &lt;code&gt;demo(package = &#34;plotly&#34;)&lt;/code&gt;) and shiny/rmarkdown examples (list them by running &lt;code&gt;plotly_example(&#34;shiny&#34;)&lt;/code&gt; or &lt;code&gt;plotly_example(&#34;rmd&#34;)&lt;/code&gt;). &lt;a href=&#34;https://cpsievert.me&#34;&gt;Carson&lt;/a&gt; also keeps numerous &lt;a href=&#34;https://talks.cpsievert.me&#34;&gt;slide decks&lt;/a&gt; with useful examples and concepts.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://github.com/plotly/plotly.R/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, asking questions, contributing changes to plotly, and our code of conduct.&lt;/p&gt;</summary>
  </entry>
</feed>